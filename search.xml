<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>就业班学习笔记（六十二）</title>
      <link href="/2020/05/25/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E4%BA%8C%EF%BC%89/"/>
      <url>/2020/05/25/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>linux基础</li><li>Linux网络</li><li>Nginx</li></ul><a id="more"></a><h1 id="一-linux基础"><a href="#一-linux基础" class="headerlink" title="一.linux基础"></a>一.linux基础</h1><h4 id="1-1-远程连接工具使用"><a href="#1-1-远程连接工具使用" class="headerlink" title="1.1 远程连接工具使用"></a>1.1 远程连接工具使用</h4><p>在实际开发中，Linux服务器都在其他的地方，我们要通过windows客户端工具远程去连接Linux并操作 它，连接Linux的windows客户端工具有很多，企业中常用的有secureCRT、Putty、xshell、SSH Secure等。</p><h4 id="1-2-Linux目录结构"><a href="#1-2-Linux目录结构" class="headerlink" title="1.2 Linux目录结构"></a>1.2 Linux目录结构</h4><p>root目录:超级管理员所在的目录，用~表示<br>home目录:普通用户所在的目录<br>usr目录:安装用户文件所在的目录<br>etc目录:Linux系统管理和配置文件所在的目录</p><h4 id="1-3-文件夹-目录-操作命令"><a href="#1-3-文件夹-目录-操作命令" class="headerlink" title="1.3 文件夹(目录)操作命令"></a>1.3 文件夹(目录)操作命令</h4><ul><li><p>查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line"></span><br><span class="line">List directory contents.</span><br><span class="line"></span><br><span class="line">- List files one per line:</span><br><span class="line">    ls -1</span><br><span class="line"></span><br><span class="line">- List all files, including hidden files:</span><br><span class="line">    ls -a</span><br><span class="line"></span><br><span class="line">- Long format list (permissions, ownership, size and modification date) of all files:</span><br><span class="line">    ls -la</span><br><span class="line"></span><br><span class="line">- Long format list with size displayed using human readable units (KB, MB, GB):</span><br><span class="line">    ls -lh</span><br><span class="line"></span><br><span class="line">- Long format list sorted by size (descending):</span><br><span class="line">    ls -lS</span><br><span class="line"></span><br><span class="line">- Long format list of all files, sorted by modification date (oldest first):</span><br><span class="line">    ls -ltr</span><br></pre></td></tr></table></figure></li><li><p>跳转</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span></span><br><span class="line"></span><br><span class="line">Change the current working directory.</span><br><span class="line"></span><br><span class="line">- Go to the given directory:</span><br><span class="line">    <span class="built_in">cd</span> path/to/directory</span><br><span class="line"></span><br><span class="line">- Go to home directory of current user:</span><br><span class="line">    <span class="built_in">cd</span></span><br><span class="line"></span><br><span class="line">- Go up to the parent of the current directory:</span><br><span class="line">    <span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line">- Go to the previously chosen directory:</span><br><span class="line">    <span class="built_in">cd</span> -</span><br></pre></td></tr></table></figure></li><li><p>创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir</span><br><span class="line"></span><br><span class="line">Creates a directory.</span><br><span class="line"></span><br><span class="line">- Create a directory <span class="keyword">in</span> current directory or given path:</span><br><span class="line">    mkdir directory</span><br><span class="line"></span><br><span class="line">- Create directories recursively (useful <span class="keyword">for</span> creating nested <span class="built_in">dirs</span>):</span><br><span class="line">    mkdir -p path/to/directory</span><br></pre></td></tr></table></figure></li><li><p>搜索</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">find</span><br><span class="line"></span><br><span class="line">Find files or directories under the given directory tree, recursively.</span><br><span class="line"></span><br><span class="line">- Find files by extension:</span><br><span class="line">    find root_path -name <span class="string">'*.ext'</span></span><br><span class="line"></span><br><span class="line">- Find files by matching multiple patterns:</span><br><span class="line">    find root_path -name <span class="string">'*pattern_1*'</span> -or -name <span class="string">'*pattern_2*'</span></span><br><span class="line"></span><br><span class="line">- Find directories matching a given name, <span class="keyword">in</span> <span class="keyword">case</span>-insensitive mode:</span><br><span class="line">    find root_path -<span class="built_in">type</span> d -iname <span class="string">'*lib*'</span></span><br><span class="line"></span><br><span class="line">- Find files matching a path pattern:</span><br><span class="line">    find root_path -path <span class="string">'**/lib/**/*.ext'</span></span><br><span class="line"></span><br><span class="line">- Find files matching a given pattern, excluding specific paths:</span><br><span class="line">    find root_path -name <span class="string">'*.py'</span> -not -path <span class="string">'*/site-packages/*'</span></span><br><span class="line"></span><br><span class="line">- Find files matching a given size range:</span><br><span class="line">    find root_path -size +500k -size -10M</span><br><span class="line"></span><br><span class="line">- Run a <span class="built_in">command</span> <span class="keyword">for</span> each file (use `&#123;&#125;` within the <span class="built_in">command</span> to access the filename):</span><br><span class="line">    find root_path -name <span class="string">'*.ext'</span> -<span class="built_in">exec</span> wc -l &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">- Find files modified <span class="keyword">in</span> the last 7 days, and delete them:</span><br><span class="line">    find root_path -mtime -7 -delete</span><br></pre></td></tr></table></figure></li><li><p>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mv</span><br><span class="line"></span><br><span class="line">Move or rename files and directories.</span><br><span class="line"></span><br><span class="line">- Move files <span class="keyword">in</span> arbitrary locations:</span><br><span class="line">    mv <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Do not prompt <span class="keyword">for</span> confirmation before overwriting existing files:</span><br><span class="line">    mv -f <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Prompt <span class="keyword">for</span> confirmation before overwriting existing files, regardless of file permissions:</span><br><span class="line">    mv -i <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Do not overwrite existing files at the target:</span><br><span class="line">    mv -n <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Move files <span class="keyword">in</span> verbose mode, showing files after they are moved:</span><br><span class="line">    mv -v <span class="built_in">source</span> target</span><br></pre></td></tr></table></figure></li><li><p>剪切</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mv</span><br><span class="line"></span><br><span class="line">Move or rename files and directories.</span><br><span class="line"></span><br><span class="line">- Move files <span class="keyword">in</span> arbitrary locations:</span><br><span class="line">    mv <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Do not prompt <span class="keyword">for</span> confirmation before overwriting existing files:</span><br><span class="line">    mv -f <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Prompt <span class="keyword">for</span> confirmation before overwriting existing files, regardless of file permissions:</span><br><span class="line">    mv -i <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Do not overwrite existing files at the target:</span><br><span class="line">    mv -n <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Move files <span class="keyword">in</span> verbose mode, showing files after they are moved:</span><br><span class="line">    mv -v <span class="built_in">source</span> target</span><br></pre></td></tr></table></figure></li><li><p>复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cp</span><br><span class="line"></span><br><span class="line">Copy files and directories.</span><br><span class="line"></span><br><span class="line">- Copy a file to another location:</span><br><span class="line">    cp path/to/file.ext path/to/copy.ext</span><br><span class="line"></span><br><span class="line">- Copy a file into another directory, keeping the filename:</span><br><span class="line">    cp path/to/file.ext path/to/target_parent_directory</span><br><span class="line"></span><br><span class="line">- Recursively copy a directory<span class="string">'s contents to another location (if the destination exists, the directory is copied inside it):</span></span><br><span class="line"><span class="string">    cp -r path/to/directory path/to/copy</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Copy a directory recursively, in verbose mode (shows files as they are copied):</span></span><br><span class="line"><span class="string">    cp -vr path/to/directory path/to/copy</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Copy text files to another location, in interactive mode (prompts user before overwriting):</span></span><br><span class="line"><span class="string">    cp -i *.txt path/to/target_directory</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Dereference symbolic links before copying:</span></span><br><span class="line"><span class="string">    cp -L link path/to/copy</span></span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rmdir</span><br><span class="line"></span><br><span class="line">Removes a directory.</span><br><span class="line"></span><br><span class="line">- Remove directory, provided it is empty. Use `rm` to remove not empty directories:</span><br><span class="line">    rmdir path/to/directory</span><br><span class="line"></span><br><span class="line">- Remove directories recursively (useful <span class="keyword">for</span> nested <span class="built_in">dirs</span>):</span><br><span class="line">    rmdir -p path/to/directory</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-文件操作命令"><a href="#1-4-文件操作命令" class="headerlink" title="1.4 文件操作命令"></a>1.4 文件操作命令</h4><ul><li><p>创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">touch</span><br><span class="line"></span><br><span class="line">Change a file access and modification <span class="built_in">times</span> (atime, mtime).</span><br><span class="line"></span><br><span class="line">- Create a new empty file(s) or change the <span class="built_in">times</span> <span class="keyword">for</span> existing file(s) to current time:</span><br><span class="line">    touch filename</span><br><span class="line"></span><br><span class="line">- Set the <span class="built_in">times</span> on a file to a specific date and time:</span><br><span class="line">    touch -t YYYYMMDDHHMM.SS filename</span><br><span class="line"></span><br><span class="line">- Use the <span class="built_in">times</span> from a file to <span class="built_in">set</span> the <span class="built_in">times</span> on a second file:</span><br><span class="line">    touch -r filename filename2</span><br></pre></td></tr></table></figure></li><li><p>查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">cat</span><br><span class="line"></span><br><span class="line">Print and concatenate files.</span><br><span class="line"></span><br><span class="line">- Print the contents of a file to the standard output:</span><br><span class="line">    cat file</span><br><span class="line"></span><br><span class="line">- Concatenate several files into the target file:</span><br><span class="line">    cat file1 file2 &gt; target_file</span><br><span class="line"></span><br><span class="line">- Append several files into the target file:</span><br><span class="line">    cat file1 file2 &gt;&gt; target_file</span><br><span class="line"></span><br><span class="line">- Number all output lines:</span><br><span class="line">    cat -n file</span><br><span class="line"></span><br><span class="line">- Display non-printable and whitespace characters (with `M-` prefix <span class="keyword">if</span> non-ASCII):</span><br><span class="line">    cat -v -t -e file</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">tail</span><br><span class="line"></span><br><span class="line">Display the last part of a file.</span><br><span class="line"></span><br><span class="line">- Show last <span class="string">'num'</span> lines <span class="keyword">in</span> file:</span><br><span class="line">    tail -n num file</span><br><span class="line"></span><br><span class="line">- Show all file since line <span class="string">'num'</span>:</span><br><span class="line">    tail -n +num file</span><br><span class="line"></span><br><span class="line">- Show last <span class="string">'num'</span> bytes <span class="keyword">in</span> file:</span><br><span class="line">    tail -c num file</span><br><span class="line"></span><br><span class="line">- Keep reading file until `Ctrl + C`:</span><br><span class="line">    tail -f file</span><br><span class="line"></span><br><span class="line">- Keep reading file until `Ctrl + C`, even <span class="keyword">if</span> the file is rotated:</span><br><span class="line">    tail -F file</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">head</span><br><span class="line"></span><br><span class="line">Output the first part of files.</span><br><span class="line"></span><br><span class="line">- Output the first few lines of a file:</span><br><span class="line">    head -n count_of_lines filename</span><br><span class="line"></span><br><span class="line">- Output the first few bytes of a file:</span><br><span class="line">    head -c number_in_bytes filename</span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">rm</span><br><span class="line"></span><br><span class="line">Remove files or directories.</span><br><span class="line"></span><br><span class="line">- Remove files from arbitrary locations:</span><br><span class="line">    rm path/to/file path/to/another/file</span><br><span class="line"></span><br><span class="line">- Recursively remove a directory and all its subdirectories:</span><br><span class="line">    rm -r path/to/directory</span><br><span class="line"></span><br><span class="line">- Forcibly remove a directory, without prompting <span class="keyword">for</span> confirmation or showing error messages:</span><br><span class="line">    rm -rf path/to/directory</span><br><span class="line"></span><br><span class="line">- Interactively remove multiple files, with a prompt before every removal:</span><br><span class="line">    rm -i file(s)</span><br><span class="line"></span><br><span class="line">- Remove files <span class="keyword">in</span> verbose mode, printing a message <span class="keyword">for</span> each removed file:</span><br><span class="line">    rm -v path/to/directory/*</span><br></pre></td></tr></table></figure></li><li><p>编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">vim</span><br><span class="line"></span><br><span class="line">Vim (Vi IMproved), a <span class="built_in">command</span>-line text editor, provides several modes <span class="keyword">for</span> different kinds of text manipulation.</span><br><span class="line">Pressing `i` enters edit mode. `&lt;Esc&gt;` goes back to normal mode, <span class="built_in">which</span> doesn<span class="string">'t allow regular text insertion.</span></span><br><span class="line"><span class="string">More information: &lt;https://www.vim.org&gt;.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Open a file:</span></span><br><span class="line"><span class="string">    vim path/to/file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- View Vim'</span>s <span class="built_in">help</span> manual:</span><br><span class="line">    :<span class="built_in">help</span>&lt;Enter&gt;</span><br><span class="line"></span><br><span class="line">- Save a file:</span><br><span class="line">    :write&lt;Enter&gt;</span><br><span class="line"></span><br><span class="line">- Quit without saving:</span><br><span class="line">    :quit!&lt;Enter&gt;</span><br><span class="line"></span><br><span class="line">- Open a file at a specified line number:</span><br><span class="line">    vim +line_number path/to/file</span><br><span class="line"></span><br><span class="line">- Undo the last operation:</span><br><span class="line">    u</span><br><span class="line"></span><br><span class="line">- Search <span class="keyword">for</span> a pattern <span class="keyword">in</span> the file (press `n`/`N` to go to next/previous match):</span><br><span class="line">    /search_pattern&lt;Enter&gt;</span><br><span class="line"></span><br><span class="line">- Perform a regex substitution <span class="keyword">in</span> the whole file:</span><br><span class="line">    :%s/pattern/replacement/g&lt;Enter&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-5-文件压缩命令"><a href="#1-5-文件压缩命令" class="headerlink" title="1.5 文件压缩命令"></a>1.5 文件压缩命令</h4><ul><li><p>将文件打成压缩包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">tar</span><br><span class="line"></span><br><span class="line">Archiving utility.</span><br><span class="line">Often combined with a compression method, such as gzip or bzip.</span><br><span class="line">More information: &lt;https://www.gnu.org/software/tar&gt;.</span><br><span class="line"></span><br><span class="line">- Create an archive from files:</span><br><span class="line">    tar cf target.tar file1 file2 file3</span><br><span class="line"></span><br><span class="line">- Create a gzipped archive:</span><br><span class="line">    tar czf target.tar.gz file1 file2 file3</span><br><span class="line"></span><br><span class="line">- Create a gzipped archive from a directory using relative paths:</span><br><span class="line">    tar czf target.tar.gz -C path/to/directory .</span><br><span class="line"></span><br><span class="line">- Extract a (compressed) archive into the current directory:</span><br><span class="line">    tar xf source.tar[.gz|.bz2|.xz]</span><br><span class="line"></span><br><span class="line">- Extract an archive into a target directory:</span><br><span class="line">    tar xf source.tar -C directory</span><br><span class="line"></span><br><span class="line">- Create a compressed archive, using archive suffix to determine the compression program:</span><br><span class="line">    tar caf target.tar.xz file1 file2 file3</span><br><span class="line"></span><br><span class="line">- List the contents of a tar file:</span><br><span class="line">    tar tvf source.tar</span><br><span class="line"></span><br><span class="line">- Extract files matching a pattern:</span><br><span class="line">    tar xf source.tar --wildcards <span class="string">"*.html"</span></span><br><span class="line"></span><br><span class="line">- Extract a specific file without preserving the folder structure:</span><br><span class="line">    tar xf source.tar source.tar/path/to/extract --strip-components=depth_to_strip</span><br></pre></td></tr></table></figure></li><li><p>解压缩包获得文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">tar</span><br><span class="line"></span><br><span class="line">Archiving utility.</span><br><span class="line">Often combined with a compression method, such as gzip or bzip.</span><br><span class="line">More information: &lt;https://www.gnu.org/software/tar&gt;.</span><br><span class="line"></span><br><span class="line">- Create an archive from files:</span><br><span class="line">    tar cf target.tar file1 file2 file3</span><br><span class="line"></span><br><span class="line">- Create a gzipped archive:</span><br><span class="line">    tar czf target.tar.gz file1 file2 file3</span><br><span class="line"></span><br><span class="line">- Create a gzipped archive from a directory using relative paths:</span><br><span class="line">    tar czf target.tar.gz -C path/to/directory .</span><br><span class="line"></span><br><span class="line">- Extract a (compressed) archive into the current directory:</span><br><span class="line">    tar xf source.tar[.gz|.bz2|.xz]</span><br><span class="line"></span><br><span class="line">- Extract an archive into a target directory:</span><br><span class="line">    tar xf source.tar -C directory</span><br><span class="line"></span><br><span class="line">- Create a compressed archive, using archive suffix to determine the compression program:</span><br><span class="line">    tar caf target.tar.xz file1 file2 file3</span><br><span class="line"></span><br><span class="line">- List the contents of a tar file:</span><br><span class="line">    tar tvf source.tar</span><br><span class="line"></span><br><span class="line">- Extract files matching a pattern:</span><br><span class="line">    tar xf source.tar --wildcards <span class="string">"*.html"</span></span><br><span class="line"></span><br><span class="line">- Extract a specific file without preserving the folder structure:</span><br><span class="line">    tar xf source.tar source.tar/path/to/extract --strip-components=depth_to_strip</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-6-文件权限命令"><a href="#1-6-文件权限命令" class="headerlink" title="1.6 文件权限命令"></a>1.6 文件权限命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">chmod</span><br><span class="line"></span><br><span class="line">Change the access permissions of a file or directory.</span><br><span class="line"></span><br><span class="line">- Give the [u]ser who owns a file the right to e[x]ecute it:</span><br><span class="line">    chmod u+x file</span><br><span class="line"></span><br><span class="line">- Give the [u]ser rights to [r]ead and [w]rite to a file/directory:</span><br><span class="line">    chmod u+rw file_or_directory</span><br><span class="line"></span><br><span class="line">- Remove e[x]ecutable rights from the [g]roup:</span><br><span class="line">    chmod g-x file</span><br><span class="line"></span><br><span class="line">- Give [a]ll users rights to [r]ead and e[x]ecute:</span><br><span class="line">    chmod a+rx file</span><br><span class="line"></span><br><span class="line">- Give [o]thers (not <span class="keyword">in</span> the file owner<span class="string">'s group) the same rights as the [g]roup:</span></span><br><span class="line"><span class="string">    chmod o=g file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Remove all rights from [o]thers:</span></span><br><span class="line"><span class="string">    chmod o= file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Change permissions recursively giving [g]roup and [o]thers the abililty to [w]rite:</span></span><br><span class="line"><span class="string">    chmod -R g+w,o+w directory</span></span><br></pre></td></tr></table></figure><h4 id="1-7-其他命令"><a href="#1-7-其他命令" class="headerlink" title="1.7 其他命令"></a>1.7 其他命令</h4><ul><li><p>显示工作目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">Print name of current/working directory.</span><br><span class="line"></span><br><span class="line">- Print the current directory:</span><br><span class="line">    <span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">- Print the current directory, and resolve all symlinks (i.e. show the <span class="string">"physical"</span> path):</span><br><span class="line">    <span class="built_in">pwd</span> -P</span><br></pre></td></tr></table></figure></li><li><p>查看进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ps</span><br><span class="line"></span><br><span class="line">Information about running processes.</span><br><span class="line"></span><br><span class="line">- List all running processes:</span><br><span class="line">    ps aux</span><br><span class="line"></span><br><span class="line">- List all running processes including the full <span class="built_in">command</span> string:</span><br><span class="line">    ps auxww</span><br><span class="line"></span><br><span class="line">- Search <span class="keyword">for</span> a process that matches a string:</span><br><span class="line">    ps aux | grep string</span><br><span class="line"></span><br><span class="line">- List all processes of the current user <span class="keyword">in</span> extra full format:</span><br><span class="line">    ps --user $(id -u) -F</span><br><span class="line"></span><br><span class="line">- List all processes of the current user as a tree:</span><br><span class="line">    ps --user $(id -u) f</span><br><span class="line"></span><br><span class="line">- Get the parent pid of a process:</span><br><span class="line">    ps -o ppid= -p pid</span><br></pre></td></tr></table></figure></li><li><p>杀死进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span></span><br><span class="line"></span><br><span class="line">Sends a signal to a process, usually related to stopping the process.</span><br><span class="line">All signals except <span class="keyword">for</span> SIGKILL and SIGSTOP can be intercepted by the process to perform a clean <span class="built_in">exit</span>.</span><br><span class="line"></span><br><span class="line">- Terminate a program using the default SIGTERM (terminate) signal:</span><br><span class="line">    <span class="built_in">kill</span> process_id</span><br><span class="line"></span><br><span class="line">- List available signal names (to be used without the `SIG` prefix):</span><br><span class="line">    <span class="built_in">kill</span> -l</span><br><span class="line"></span><br><span class="line">- Terminate a background job:</span><br><span class="line">    <span class="built_in">kill</span> %job_id</span><br><span class="line"></span><br><span class="line">- Terminate a program using the SIGHUP (hang up) signal. Many daemons will reload instead of terminating:</span><br><span class="line">    <span class="built_in">kill</span> -1|HUP process_id</span><br><span class="line"></span><br><span class="line">- Terminate a program using the SIGINT (interrupt) signal. This is typically initiated by the user pressing `Ctrl + C`:</span><br><span class="line">    <span class="built_in">kill</span> -2|INT process_id</span><br><span class="line"></span><br><span class="line">- Signal the operating system to immediately terminate a program (<span class="built_in">which</span> gets no chance to capture the signal):</span><br><span class="line">    <span class="built_in">kill</span> -9|KILL process_id</span><br><span class="line"></span><br><span class="line">- Signal the operating system to pause a program until a SIGCONT (<span class="string">"continue"</span>) signal is received:</span><br><span class="line">    <span class="built_in">kill</span> -17|STOP process_id</span><br><span class="line"></span><br><span class="line">- Send a `SIGUSR1` signal to all processes with the given GID (group id):</span><br><span class="line">    <span class="built_in">kill</span> -SIGUSR1 -group_id</span><br></pre></td></tr></table></figure></li><li><p>搜索</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">grep</span><br><span class="line"></span><br><span class="line">Matches patterns <span class="keyword">in</span> input text.</span><br><span class="line">Supports simple patterns and regular expressions.</span><br><span class="line"></span><br><span class="line">- Search <span class="keyword">for</span> an exact string:</span><br><span class="line">    grep search_string path/to/file</span><br><span class="line"></span><br><span class="line">- Search <span class="keyword">in</span> <span class="keyword">case</span>-insensitive mode:</span><br><span class="line">    grep -i search_string path/to/file</span><br><span class="line"></span><br><span class="line">- Search recursively (ignoring non-text files) <span class="keyword">in</span> current directory <span class="keyword">for</span> an exact string:</span><br><span class="line">    grep -RI search_string .</span><br><span class="line"></span><br><span class="line">- Use extended regular expressions (supporting `?`, `+`, `&#123;&#125;`, `()` and `|`):</span><br><span class="line">    grep -E ^regex$ path/to/file</span><br><span class="line"></span><br><span class="line">- Print 3 lines of [C]ontext around, [B]efore, or [A]fter each match:</span><br><span class="line">    grep -C|B|A 3 search_string path/to/file</span><br><span class="line"></span><br><span class="line">- Print file name with the corresponding line number <span class="keyword">for</span> each match:</span><br><span class="line">    grep -Hn search_string path/to/file</span><br><span class="line"></span><br><span class="line">- Use the standard input instead of a file:</span><br><span class="line">    cat path/to/file | grep search_string</span><br><span class="line"></span><br><span class="line">- Invert match <span class="keyword">for</span> excluding specific strings:</span><br><span class="line">    grep -v search_string</span><br></pre></td></tr></table></figure></li><li><p>管道</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|      ##管道符</span><br><span class="line">管道只允许正确输出通过</span><br><span class="line"> tee         ####复制一份输出</span><br><span class="line">2&gt;&amp;1 |       ####转换错误输出为正确再通过管道</span><br></pre></td></tr></table></figure></li><li><p>关机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poweroff</span><br></pre></td></tr></table></figure></li><li><p>重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br><span class="line"></span><br><span class="line">Reboot the system.</span><br><span class="line"></span><br><span class="line">- Reboot immediately:</span><br><span class="line">    sudo reboot</span><br><span class="line"></span><br><span class="line">- Reboot immediately without gracefully shutting down:</span><br><span class="line">    sudo reboot -q</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-Linux网络"><a href="#二-Linux网络" class="headerlink" title="二.Linux网络"></a>二.Linux网络</h1><h4 id="2-1-网络服务"><a href="#2-1-网络服务" class="headerlink" title="2.1 网络服务"></a>2.1 网络服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br><span class="line"></span><br><span class="line">Network Interface Configurator.</span><br><span class="line"></span><br><span class="line">- View network settings of an ethernet adapter:</span><br><span class="line">    ifconfig eth0</span><br><span class="line"></span><br><span class="line">- Display details of all interfaces, including disabled interfaces:</span><br><span class="line">    ifconfig -a</span><br><span class="line"></span><br><span class="line">- Disable eth0 interface:</span><br><span class="line">    ifconfig eth0 down</span><br><span class="line"></span><br><span class="line">- Enable eth0 interface:</span><br><span class="line">    ifconfig eth0 up</span><br><span class="line"></span><br><span class="line">- Assign IP address to eth0 interface:</span><br><span class="line">    ifconfig eth0 ip_address</span><br><span class="line">    </span><br><span class="line">ip addr :CentOS7版本</span><br><span class="line">修改网卡ip</span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><table><thead><tr><th>概要信息</th><th></th></tr></thead><tbody><tr><td>DEVICE=ens33</td><td>网卡名称</td></tr><tr><td>TYPE=Ethernet</td><td>网卡类型 以太网</td></tr><tr><td>ONBOOT=yes</td><td>是否开机就使用此网卡</td></tr><tr><td>BOOTPROTO=dhcp</td><td>启动网卡时指定获取IP地址的方式</td></tr><tr><td>IPADDR=</td><td>ip地址</td></tr><tr><td>GATEWAY=</td><td>网关</td></tr><tr><td>NETMASK=255.255.255.0</td><td>子网掩码</td></tr><tr><td>DNS1=</td><td>DNS服务器</td></tr></tbody></table><table><thead><tr><th>重启网卡服务</th><th></th></tr></thead><tbody><tr><td>systemctl status network</td><td>查看指定服务的状态</td></tr><tr><td>systemctl stop network</td><td>停止指定服务</td></tr><tr><td>systemctl start network</td><td>启动指定服务</td></tr><tr><td>systemctl restart network</td><td>重启指定服务</td></tr></tbody></table><h4 id="2-2-防火墙服务"><a href="#2-2-防火墙服务" class="headerlink" title="2.2 防火墙服务"></a>2.2 防火墙服务</h4><h5 id="2-2-1-防火墙设置"><a href="#2-2-1-防火墙设置" class="headerlink" title="2.2.1 防火墙设置"></a>2.2.1 防火墙设置</h5><table><thead><tr><th>防火墙设置</th><th></th></tr></thead><tbody><tr><td>开启防火墙</td><td>systemctl start firewalld</td></tr><tr><td>重启防火墙</td><td>systemctl restart firewalld</td></tr><tr><td>关闭防火墙</td><td>systemctl stop firewalld</td></tr><tr><td>设置开机启动</td><td>systemctl enable firewalld</td></tr><tr><td>停止并关闭开机启动</td><td>systemctl disable firewalld</td></tr><tr><td>查看防火墙状态</td><td>systemctl status firewalld 或者 firewall-cmd –state</td></tr><tr><td>查看防火墙开机时是否启动</td><td>systemctl list-unit-files | grep firewalld</td></tr></tbody></table><h5 id="2-2-2-端口设置"><a href="#2-2-2-端口设置" class="headerlink" title="2.2.2 端口设置"></a>2.2.2 端口设置</h5><table><thead><tr><th>端口设置</th><th></th></tr></thead><tbody><tr><td>添加</td><td>firewall-cmd –zone=public –add-port=80/tcp –permanent</td></tr><tr><td>更新防火墙规则</td><td>firewall-cmd –reload</td></tr><tr><td>查看</td><td>firewall-cmd –zone=public –query-port=80/tcp<br>firewall-cmd –zone=public –list-ports</td></tr><tr><td>删除</td><td>firewall-cmd –zone=public –remove-port=80/tcp –permanent</td></tr><tr><td>常用端口</td><td>8080 tomcat<br>80 http协议<br>443 https协议<br/>22 ssh远程连接<br/>3306 mysql<br/>6379 redis</td></tr></tbody></table><h1 id="三-Nginx"><a href="#三-Nginx" class="headerlink" title="三.Nginx"></a>三.Nginx</h1><h4 id="3-1-介绍"><a href="#3-1-介绍" class="headerlink" title="3.1 介绍"></a>3.1 介绍</h4><p>Nginx是一款轻量级的 Web 服务器,由俄罗斯的程序设计师伊戈尔·西索夫所开发。 Nginx性能非常优秀, 官方测试能够支撑5万并发链接，并且 cpu、内存等资源消耗却非常低，运行非常稳定。</p><p>Nginx的功能有很多，我们主要使用它来做静态资源服务器、负载均衡服务器和反向代理服务器。</p><h4 id="3-2-应用场景"><a href="#3-2-应用场景" class="headerlink" title="3.2 应用场景"></a>3.2 应用场景</h4><h5 id="3-2-1-静态资源服务器"><a href="#3-2-1-静态资源服务器" class="headerlink" title="3.2.1 静态资源服务器"></a>3.2.1 静态资源服务器</h5><p>部署网站的静态资源(html、css、js),可与Tomcat等实现动静分离</p><h4 id="3-2-2-反向代理服务器"><a href="#3-2-2-反向代理服务器" class="headerlink" title="3.2.2 反向代理服务器"></a>3.2.2 反向代理服务器</h4><ul><li><p>代理</p><p>给某个对象提供一个代理对象，并由代理对象控制原对象的引用</p></li><li><p>正向代理</p><p>对客户端进行代理(例如VPN)</p></li><li><p>反向代理</p><p>对服务端进行代理</p><p>反向代理，就是对服务端进行代理，作为客户端,只需要将请求发送到反向代理服务器，由反向代理服务 器去选择目标服务器获取数据后，再响应给客户端，此时反向代理服务器和目标服务器对外就是一个服 务器，暴露的是代理服务器地址，隐藏了真实服务器IP地址。</p></li></ul><h5 id="3-2-3-负载均衡服务器"><a href="#3-2-3-负载均衡服务器" class="headerlink" title="3.2.3 负载均衡服务器"></a>3.2.3 负载均衡服务器</h5><p>负载均衡 <em>Load Balance</em> 意思就是将一份负载分摊到多个操作单元上进行执行</p><h4 id="3-3-配置文件介绍-nginx-1-13-9-conf-nginx-conf"><a href="#3-3-配置文件介绍-nginx-1-13-9-conf-nginx-conf" class="headerlink" title="3.3 配置文件介绍(nginx-1.13.9/conf/nginx.conf)"></a>3.3 配置文件介绍(nginx-1.13.9/conf/nginx.conf)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80; <span class="comment">#port</span></span><br><span class="line">    server_name  localhost; <span class="comment">#Server</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   html; <span class="comment">#Static resource directory</span></span><br><span class="line">        index  index.html index.htm; <span class="comment">#Default visit page</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="3-5-nginx与tomcat区别"><a href="#3-5-nginx与tomcat区别" class="headerlink" title="3.5 nginx与tomcat区别"></a>3.5 nginx与tomcat区别</h5><ul><li><p>存放的文件(资源)形式<br> Nginx是http服务器,只能解析静态文件 </p><p>Tomcat是web中间件(本质上是一个servlet),能解析jsp和静态文件</p></li><li><p>用途 </p><p>nginx可以作为反向代理服务器,负责均衡服务器,静态资源存放服务器 </p><p>tomcat能作为jsp容器使用,静态资源存放服务器</p></li><li><p>性能 </p><p>nginx支持5W+并发,tomcat的并发只能在200-400之间</p></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong># linux基础</strong></p><p><strong>## Linux基本命令</strong></p><p><strong>### 目录结构</strong></p><p>- root</p><p>​    - 超级管理员所在的目录</p><p>- home</p><p>​    - 普通用户所在的目录</p><p>- usr</p><p>​    - 安装用户文件所在的目录</p><p>- etc</p><p>​    - Linux系统管理和配置文件所在的目录</p><p><strong>### 目录操作</strong></p><p>- 查看</p><p>​    - ll</p><p>​    - ls</p><p>- 切换</p><p>​    - cd</p><p>​        - 绝对路径</p><p>​        - 相对路径</p><p>- 创建</p><p>​    - mkdir -p</p><p>- 修改/剪切</p><p>​    - mv</p><p>- 复制</p><p>​    - cp -r</p><p>- 删除</p><p>​    - rmdir -p</p><p><strong>### 文件操作</strong></p><p>- 创建</p><p>​    - touch</p><p>- 查看</p><p>​    - cat/more/less/head/tail</p><p>- 删除</p><p>​    - rm -rf</p><p>- 编辑</p><p>​    - vim</p><p>​        - 插入模式</p><p>​            - i</p><p>​        - 命令行模式 </p><p>​            - esc</p><p>​        - 底行模式</p><p>​            - :</p><p>​                - wq!</p><p>​                - q!</p><p><strong>### 压缩命令</strong></p><p>- 打包</p><p>​    - tar -zcvf</p><p>​        - xxxx.tar.gz</p><p>- 解压缩</p><p>​    - tar -zxvf</p><p>​        - xxxx.tar.gz</p><p><strong>### 文件权限</strong></p><p>- chmod -R 777</p><p><strong>### 其他命令</strong></p><p>- 查看进程</p><p>​    - ps -ef</p><p>- 杀死进程</p><p>​    - kill -9 PID</p><p>- 文本搜索</p><p>​    - grep -in</p><p>- 管道</p><p>​    - 一个命令的输出作为另一个命令的输入</p><p><strong>## Linux网络</strong></p><p><strong>### 网络</strong></p><p>- 查看ip</p><p>​    - ifconfig</p><p>​    - ip addr</p><p><strong>### 防火墙</strong></p><p>- 防火墙设置</p><p>​    - 关闭</p><p>​        - systemctl stop firewalld</p><p>​    - 关闭开机自启动</p><p>​        - systemctl disable firewalld</p><p>- 端口设置</p><p>​    - 放行端口</p><p>​        - firewall-cmd –zone=public –add-port=80/tcp –permanent</p><p>​    - 更新规则</p><p>​        - firewall-cmd –reload</p><p><strong>## Nginx</strong></p><p><strong>### 由战斗民族开发的一款高性能的 http 服务器/反向代理服务器</strong></p><p>- http服务器</p><p>- 反向代理（负载均衡）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（六十一）</title>
      <link href="/2020/05/24/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E4%B8%80%EF%BC%89/"/>
      <url>/2020/05/24/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>二维码</li><li>微信开发平台——支付</li><li>统一下单——生成预交易链接</li><li>支付结果通知</li><li>支付状态查询</li></ul><a id="more"></a><h1 id="一-二维码"><a href="#一-二维码" class="headerlink" title="一.二维码"></a>一.二维码</h1><h4 id="1-1-什么是二维码"><a href="#1-1-什么是二维码" class="headerlink" title="1.1 什么是二维码"></a>1.1 什么是二维码</h4><p>二维码又称QR Code，QR全称Quick Response，是一个近几年来移动设备上超流行的一种编码方式， 它比传统的Bar Code条形码能存更多的信息，也能表示更多的数据类型。</p><h4 id="1-2-二维码优势"><a href="#1-2-二维码优势" class="headerlink" title="1.2 二维码优势"></a>1.2 二维码优势</h4><ul><li><p>信息容量大, 可以容纳多达1850个大写字母或2710个数字或500多个汉字 </p></li><li><p>应用范围广, 支持文字,声音,图片,指纹等等</p></li><li><p>容错能力强, 即使图片出现部分破损也能使用</p></li><li><p>成本低, 容易制作</p></li></ul><h4 id="1-3-二维码容错级别"><a href="#1-3-二维码容错级别" class="headerlink" title="1.3 二维码容错级别"></a>1.3 二维码容错级别</h4><ul><li>L级(低) 7%的码字可以被恢复。 </li><li>M级(中) 15%的码字可以被恢复。 </li><li>Q级(四分)25%的码字可以被恢复。 </li><li>H级(高)30% 的码字可以被恢复。</li></ul><h4 id="1-4-二维码生成插件QR-Code"><a href="#1-4-二维码生成插件QR-Code" class="headerlink" title="1.4 二维码生成插件QR Code"></a>1.4 二维码生成插件QR Code</h4><p>就与jquery开发的一个插件，QRCode是一款基于HTML5 Canvas的纯JS二维码生成插件 下载地址:<a href="https://github.com/davidshimjs/qrcodejs">https://github.com/davidshimjs/qrcodejs</a></p><p>QRCode.js二维码插件的可用配置参数如下:</p><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>text</td><td>String</td><td>“<a href="https://www.baidu.com&quot;">https://www.baidu.com&quot;</a></td><td>需要编码为二维码的值</td></tr><tr><td>width</td><td>Number</td><td>256</td><td>二维码的宽度，单位像素。</td></tr><tr><td>height</td><td>Number</td><td>256</td><td>二维码的高度，单位像素。</td></tr><tr><td>colorLight</td><td>String</td><td>“white”</td><td>二维码的背景颜色。</td></tr><tr><td>colorDark</td><td>String</td><td>“black”</td><td>二维码的前景颜色。</td></tr><tr><td>correctLevel</td><td>String</td><td>QRCode.CorrectLevel.L</td><td>二维码的误差校正级别(L, M, Q, H)。</td></tr></tbody></table><ul><li><p>快速入门</p><ul><li><p>从资料中将js文件复制到项目中</p></li><li><p>QRCodeTest.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../../src/main/webapp/js/jquery-3.3.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../../src/main/webapp/js/qrcode.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"qrcode"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        // 参数一 div的id ， 参数二 将xxxx生成二维码</span><br><span class="line">        // let qrCode = new QRCode('qrCode','https://www.baidu.com');</span><br><span class="line">    </span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> qrcode = <span class="keyword">new</span> QRCode(<span class="built_in">document</span>.getElementById(<span class="string">"qrcode"</span>), &#123;</span></span><br><span class="line"><span class="actionscript">            text: <span class="string">"http://jindo.dev.naver.com/collie"</span>,</span></span><br><span class="line">            width: 128,</span><br><span class="line">            height: 128,</span><br><span class="line"><span class="actionscript">            colorDark : <span class="string">"#000000"</span>,</span></span><br><span class="line"><span class="actionscript">            colorLight : <span class="string">"#ffffff"</span>,</span></span><br><span class="line">            correctLevel : QRCode.CorrectLevel.H</span><br><span class="line">          &#125;);</span><br><span class="line">      <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="二-微信扫描支付简介"><a href="#二-微信扫描支付简介" class="headerlink" title="二.微信扫描支付简介"></a>二.微信扫描支付简介</h1><h4 id="2-1-微信扫码支付申请"><a href="#2-1-微信扫码支付申请" class="headerlink" title="2.1 微信扫码支付申请"></a>2.1 微信扫码支付申请</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">微信扫码支付是商户系统按微信支付协议生成支付二维码，用户再用微信“扫一扫”完成支付的模式。</span><br><span class="line">该模式适用于PC网站支付、实体店单品或订单支付、媒体广告支付等场景。</span><br><span class="line"></span><br><span class="line">申请步骤:</span><br><span class="line"></span><br><span class="line">- 第一步:注册公众号(类型须为:服务号)</span><br><span class="line"></span><br><span class="line">请根据营业执照类型选择以下主体注册:个体工商户| 企业&#x2F;公司| 政府| 媒体| 其他类型。</span><br><span class="line"></span><br><span class="line">- 第二步:认证公众号</span><br><span class="line"></span><br><span class="line">公众号认证后才可申请微信支付，认证费:300元&#x2F;次。</span><br><span class="line"></span><br><span class="line">- 第三步:提交资料申请微信支付</span><br><span class="line"></span><br><span class="line">登录公众平台，点击左侧菜单【微信支付】，开始填写资料等待审核，审核时间为1-5个工作日内。</span><br><span class="line"></span><br><span class="line">- 第四步:开户成功，登录商户平台进行验证</span><br><span class="line"></span><br><span class="line">资料审核通过后，请登录联系人邮箱查收商户号和密码，并登录商户平台填写财付通备付金打的小额资 金数额，完成账户验证。</span><br><span class="line"></span><br><span class="line">- 第五步:在线签署协议</span><br><span class="line"></span><br><span class="line">本协议为线上电子协议，签署后方可进行交易及资金结算，签署完立即生效。</span><br></pre></td></tr></table></figure><h4 id="2-2-开发文档"><a href="#2-2-开发文档" class="headerlink" title="2.2 开发文档"></a>2.2 开发文档</h4><ul><li><p>在线微信支付开发文档:</p><p><a href="https://pay.weixin.qq.com/wiki/doc/api/index.html">https://pay.weixin.qq.com/wiki/doc/api/index.html</a></p><img src="https://pay.weixin.qq.com/wiki/doc/api/img/chapter6_5_1.png"/></li><li><p>微信支付接口调用的整体思路:</p><ul><li><p>1、商户生成订单</p></li><li><p>2、商户调用微信下单接口，获取预交易的链接 </p></li><li><p>3、商户将链接生成二维码图片，展示给用户;</p></li><li><p>4、支付结果通知:</p><p>微信异步通知商户支付结果，商户告知微信支付接收情况</p><p>商户如果没有收到通知，可以调用接口，查询支付状态 </p></li><li><p>5、如果支付成功，发货，修改订单状态</p></li></ul></li></ul><h4 id="2-3-API"><a href="#2-3-API" class="headerlink" title="2.3 API"></a>2.3 API</h4><h5 id="2-3-1-统一下单"><a href="#2-3-1-统一下单" class="headerlink" title="2.3.1 统一下单"></a>2.3.1 统一下单</h5><ul><li><p>请求路径</p><p>POST , URL地址:<a href="https://api.mch.weixin.qq.com/pay/unifiedorder">https://api.mch.weixin.qq.com/pay/unifiedorder</a></p></li><li><p>请求参数</p><p><a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1</a></p><table><thead><tr><th align="left">字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td align="left">公众账号ID</td><td>appid</td><td>是</td><td>String(32)</td><td>wxd678efh56</td><td>微信支付分配的公众账号ID</td></tr><tr><td align="left">商户号</td><td>mch_id</td><td>是</td><td>String(32)</td><td>1230000109</td><td>微信支付分配的商户号</td></tr><tr><td align="left">随机字符串</td><td>nonce_str</td><td>是</td><td>String(32)</td><td>5K8264ILT</td><td>随机字符串，长度要求在32位以内</td></tr><tr><td align="left">签名</td><td>sign</td><td>是</td><td>String(32)</td><td>C380BEC2B</td><td>通过签名算法计算得出的签名值</td></tr><tr><td align="left">商品描述</td><td>body</td><td>是</td><td>String(128)</td><td>华为手机</td><td>商品简单描述</td></tr><tr><td align="left">商户订单号</td><td>out_trade_no</td><td>是</td><td>String(32)</td><td>20150806125</td><td>商户系统内部订单号</td></tr><tr><td align="left">标价金额</td><td>total_fee</td><td>是</td><td>Int</td><td>88</td><td>订单总金额，单位为分</td></tr><tr><td align="left">终端IP</td><td>spbill_create_ip</td><td>是</td><td>String(16)</td><td>123.12.12.123</td><td>APP和网页支付提交用户端ip，Native支付填调用微信支付API的机器IP。</td></tr><tr><td align="left">通知地址</td><td>notify_url</td><td>是</td><td>String(256)</td><td><a href="http://www.weixin.qq.com/wxpay/pay.php">http://www.weixin.qq.com/wxpay/pay.php</a></td><td>异步接收微信支付结果通知的回调地址，通知url必须为外网可访问的url，不能携带参数。</td></tr><tr><td align="left">交易类型</td><td>trade_type</td><td>是</td><td>String(16)</td><td>JSAPI</td><td>JSAPI 公众号支付；NATIVE 扫码支付</td></tr></tbody></table></li><li><p>这些参数大致分成3类</p><ul><li>appid、mch_id、spbill_create_ip、notify_url、trade_type:是商家自己的信息或固定数据，可以提前配置，因此无需每次请求单独配置，而是统一设置好即可。</li><li>nonce_str、sign:是为了保证数据安全而添加的验证数据，根据算法去生成，每次请求自动生成 即可。</li><li>body、out_trade_no、total_fee:订单相关信息，需要我们自己填写。</li></ul></li></ul><h5 id="2-3-2-支付结果通知"><a href="#2-3-2-支付结果通知" class="headerlink" title="2.3.2 支付结果通知"></a>2.3.2 支付结果通知</h5><p>支付完成后，微信会把相关支付结果和用户信息发送给商户，商户需要接收处理，并返回应答。 </p><p>微信服务会自动向 notify_url 地址发起POST请求:</p><ul><li><p>通知参数</p><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>返回状态码</td><td>return_code</td><td>是</td><td>String(16)</td><td>SUCCESS</td><td>SUCCESS/FAIL此字段是通信标识，非交易标识，交易是否成功需要查看trade_state来判断</td></tr><tr><td>返回信息</td><td>return_msg</td><td>是</td><td>String(128)</td><td>OK</td><td>当return_code为FAIL时返回信息为错误原因 ，例如签名失败参数格式校验错误</td></tr></tbody></table><p>通信成功，会返回下面信息：</p><table><thead><tr><th align="left">字段名</th><th align="left">变量名</th><th align="left">必填</th><th align="left">类型</th><th align="left">示例值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">商户订单号</td><td align="left">out_trade_no</td><td align="left">是</td><td align="left">String(32)</td><td align="left">1212321</td><td align="left">商户系统内部订单号，要求32个字符内</td></tr><tr><td align="left">业务结果</td><td align="left">result_code</td><td align="left">是</td><td align="left">String(16)</td><td align="left">SUCCESS</td><td align="left">SUCCESS/FAIL</td></tr></tbody></table></li><li><p>我们需要返回给微信的参数</p><table><thead><tr><th align="left">字段名</th><th align="left">变量名</th><th align="left">必填</th><th align="left">类型</th><th align="left">示例值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">返回状态码</td><td align="left">return_code</td><td align="left">是</td><td align="left">String(16)</td><td align="left">SUCCESS</td><td align="left">请按示例值填写</td></tr><tr><td align="left">返回信息</td><td align="left">return_msg</td><td align="left">是</td><td align="left">String(128)</td><td align="left">OK</td><td align="left">请按示例值填写</td></tr></tbody></table><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">return_code</span>&gt;</span>&lt;![CDATA[SUCCESS]]&gt;<span class="tag">&lt;/<span class="name">return_code</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">return_msg</span>&gt;</span>&lt;![CDATA[OK]]&gt;<span class="tag">&lt;/<span class="name">return_msg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-SDK"><a href="#2-4-SDK" class="headerlink" title="2.4 SDK"></a>2.4 SDK</h4><ul><li><p>官方已经提供了SDK，供我们使用</p><p><a href="https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=11_1">https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=11_1</a></p></li><li><p>但是微信没有提供maven仓库坐标，因此我们必须下载使用</p><p>自定义PayConfig实现，定义:公众号id、商户号、账户签名，打包</p></li><li><p>打包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn <span class="built_in">source</span>:jar install -Dmaven.test.skip=<span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>在travel中引入坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.wxpay<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>wxpay-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>简化API参数的Util</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 微信支付工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> WXPay wxPay;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支付成功回调地址</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String notifyUrl = <span class="string">"自行定义"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化微信支付</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            PayConfig payConfig = <span class="keyword">new</span> PayConfig();</span><br><span class="line">            payConfig.setAppID(<span class="string">"自行申请"</span>); <span class="comment">// 公众账号ID</span></span><br><span class="line">            payConfig.setMchID(<span class="string">"自行申请"</span>);<span class="comment">// 商户号</span></span><br><span class="line">            payConfig.setKey(<span class="string">"自行申请"</span>);<span class="comment">// 生成签名的密钥</span></span><br><span class="line">            wxPay = <span class="keyword">new</span> WXPay(payConfig);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// e.printStackTrace();</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成微信订单支付 url</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">createOrder</span><span class="params">(String orderId, Integer totalPay)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; data = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">// 商品描述</span></span><br><span class="line">        data.put(<span class="string">"body"</span>, <span class="string">"支付中心-商品支付"</span>);</span><br><span class="line">        <span class="comment">// 订单号</span></span><br><span class="line">        data.put(<span class="string">"out_trade_no"</span>, orderId);</span><br><span class="line">        <span class="comment">//金额，单位是分</span></span><br><span class="line">        data.put(<span class="string">"total_fee"</span>, totalPay.toString());</span><br><span class="line">        <span class="comment">//调用微信支付的终端IP</span></span><br><span class="line">        data.put(<span class="string">"spbill_create_ip"</span>, <span class="string">"127.0.0.1"</span>);</span><br><span class="line">        <span class="comment">//回调地址</span></span><br><span class="line">        data.put(<span class="string">"notify_url"</span>, notifyUrl);</span><br><span class="line">        <span class="comment">// 支付有效时间10分钟</span></span><br><span class="line">        Date now = <span class="keyword">new</span> Date();</span><br><span class="line">        Date now_10 = <span class="keyword">new</span> Date(now.getTime() + <span class="number">600000</span>); <span class="comment">//10分钟后的时间</span></span><br><span class="line">        SimpleDateFormat dateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMddHHmmss"</span>);<span class="comment">//可以方便地修改日期格式</span></span><br><span class="line">        String nowTime_10 = dateFormat.format(now_10);</span><br><span class="line">        data.put(<span class="string">"time_expire"</span>, nowTime_10);</span><br><span class="line">        <span class="comment">// 交易类型为扫码支付</span></span><br><span class="line">        data.put(<span class="string">"trade_type"</span>, <span class="string">"NATIVE"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 利用wxPay工具,完成下单</span></span><br><span class="line">        Map&lt;String, String&gt; result = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = wxPay.unifiedOrder(data);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"微信下单失败"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 校验业务状态</span></span><br><span class="line">        checkResultCode(result);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 下单成功，获取支付链接</span></span><br><span class="line">        String url = result.get(<span class="string">"code_url"</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(url)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"微信下单失败，支付链接为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查业务状态</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkResultCode</span><span class="params">(Map&lt;String, String&gt; result)</span> </span>&#123;</span><br><span class="line">        String resultCode = result.get(<span class="string">"result_code"</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"FAIL"</span>.equals(resultCode)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"【微信支付】微信支付业务失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-统一下单实现"><a href="#三-统一下单实现" class="headerlink" title="三.统一下单实现"></a>三.统一下单实现</h1><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><table><thead><tr><th>用户</th><th></th><th>Servet</th><th></th><th>微信平台</th></tr></thead><tbody><tr><td></td><td>提交订单➡</td><td>OrderServlet<br>将订单和订单项保存到数据库<br>重定向到微信支付的Servlet</td><td></td><td></td></tr><tr><td></td><td></td><td>PayServlet<br/>接收参数:订单号和支付金额<br/>调用支付工具类，发送请求，生成预交易url<br/>将数据设置到request域<br/>转发到pay.jsp页面</td><td>➡发送xml数据<br/>⬅返回xml数据</td><td></td></tr><tr><td></td><td>⬅响应</td><td>Pay.jsp<br/>二维码å</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li><p>OrderServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">createOrder</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  Date orderDate = <span class="keyword">new</span> Date();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1.接收请求参数</span></span><br><span class="line">  String addressId = req.getParameter(<span class="string">"addressId"</span>);</span><br><span class="line">  <span class="comment">// 前端数据分割，分别为：收货人，收货地址，收货电话</span></span><br><span class="line">  String[] addressArray = addressId.split(<span class="string">","</span>);</span><br><span class="line">  <span class="comment">// 2.获取session中的user</span></span><br><span class="line">  User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">  <span class="comment">// 3.获取redis中cart</span></span><br><span class="line">  Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">  <span class="comment">// 4.创建订单，设置基础数据</span></span><br><span class="line">  Order order = <span class="keyword">new</span> Order();</span><br><span class="line">  <span class="comment">// 订单号</span></span><br><span class="line">  order.setOid(IdUtil.simpleUUID());</span><br><span class="line">  <span class="comment">// 下单时间</span></span><br><span class="line">  order.setOrdertime(orderDate);</span><br><span class="line">  <span class="comment">// 订单总金额</span></span><br><span class="line">  order.setTotal(cart.getCartTotal());</span><br><span class="line">  <span class="comment">// 未支付订单</span></span><br><span class="line">  order.setState(<span class="number">0</span>);</span><br><span class="line">  <span class="comment">// 收货人</span></span><br><span class="line">  order.setContact(addressArray[<span class="number">0</span>]);</span><br><span class="line">  <span class="comment">// 收货地址</span></span><br><span class="line">  order.setAddress(addressArray[<span class="number">1</span>]);</span><br><span class="line">  <span class="comment">// 收货电话</span></span><br><span class="line">  order.setTelephone(addressArray[<span class="number">2</span>]);</span><br><span class="line">  <span class="comment">// 为了简化所属用户操作，我们可以直接设置uid</span></span><br><span class="line">  order.setUid(currentUser.getUid());</span><br><span class="line">  <span class="comment">// 5.遍历购物项，创建订单项</span></span><br><span class="line">  List&lt;OrderItem&gt; orderItemList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">  OrderItem orderItem = <span class="keyword">null</span>;</span><br><span class="line">  <span class="comment">// 遍历购物项</span></span><br><span class="line">  <span class="keyword">for</span> (CartItem cartItem : cart.getCartItemMap().values()) &#123;</span><br><span class="line">    <span class="comment">// 创建订单项</span></span><br><span class="line">    orderItem = <span class="keyword">new</span> OrderItem();</span><br><span class="line">    <span class="comment">// 下单时间</span></span><br><span class="line">    orderItem.setItemtime(orderDate);</span><br><span class="line">    <span class="comment">// 未支付</span></span><br><span class="line">    orderItem.setState(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">// 数量</span></span><br><span class="line">    orderItem.setNum(cartItem.getNum());</span><br><span class="line">    <span class="comment">// 商品小计</span></span><br><span class="line">    orderItem.setSubtotal(cartItem.getSubTotal());</span><br><span class="line">    <span class="comment">// 商品rid ，简化数据库操作</span></span><br><span class="line">    orderItem.setRid(cartItem.getRoute().getRid());</span><br><span class="line">    <span class="comment">// 订单oid，简化数据操作</span></span><br><span class="line">    orderItem.setOid(order.getOid());</span><br><span class="line">    <span class="comment">// 添加到订单项集合中</span></span><br><span class="line">    orderItemList.add(orderItem);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 将订单项集合关联到订单实体中</span></span><br><span class="line">  order.setOrderItemList(orderItemList);</span><br><span class="line">  <span class="comment">// 6.调用service，保存到数据库</span></span><br><span class="line">  orderService.save(order);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 7.清空购物车</span></span><br><span class="line">  Jedis jedis = JedisUtils.getJedis();</span><br><span class="line">  jedis.del(<span class="string">"cart_"</span>+currentUser.getUsername());</span><br><span class="line">  jedis.close();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 8.重定向支付页面</span></span><br><span class="line">  <span class="comment">//        resp.sendRedirect(req.getContextPath()+"/pay.jsp");</span></span><br><span class="line">  resp.sendRedirect(req.getContextPath()+<span class="string">"/PayServlet?action=createUrl&amp;oid="</span>+order.getOid()+<span class="string">"&amp;price="</span>+order.getTotal());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>PayServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/PayServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xx</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用微信平台，生成预交易链接</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">createUrl</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String oid = req.getParameter(<span class="string">"oid"</span>);</span><br><span class="line">        String price = req.getParameter(<span class="string">"price"</span>);</span><br><span class="line">        <span class="comment">// 2.调用微信平台，生成预交易链接</span></span><br><span class="line">        String pay_url = PayUtils.createOrder(oid, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.将数据设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"oid"</span>,oid);</span><br><span class="line">        req.setAttribute(<span class="string">"price"</span>,price);</span><br><span class="line">        req.setAttribute(<span class="string">"pay_url"</span>,pay_url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.转发到支付页面</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/pay.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>pay.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/webbase.css"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/pages-weixinpay.css"</span>&gt;</span><br><span class="line">    &lt;title&gt;微信支付&lt;/title&gt;</span><br><span class="line">    &lt;script src="$&#123;pageContext.request.contextPath&#125;/js/qrcode.min.js"&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"header.jsp"</span>%&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container-fluid"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"cart py-container"</span>&gt;</span><br><span class="line">        &lt;!--主内容--&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout py-container  pay"</span>&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-tit"</span>&gt;</span><br><span class="line">            &lt;h4 class="fl tit-txt"&gt;&lt;span class="success-icon"&gt;&lt;/span&gt;&lt;span  class="success-info"&gt;订单提交成功，请您及时付款！订单号：$&#123;oid&#125;&lt;/span&gt;&lt;/h4&gt;</span><br><span class="line">            &lt;span class="fr"&gt;&lt;em class="sui-lead"&gt;应付金额：&lt;/em&gt;&lt;em  class="orange money"&gt;￥$&#123;price&#125;&lt;/em&gt;元&lt;/span&gt;</span><br><span class="line">            &lt;div class="clearfix"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-steps"</span>&gt;</span><br><span class="line">            &lt;div class="fl weixin"&gt;微信支付&lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl sao"</span>&gt;</span><br><span class="line">              &lt;p class="red" style="padding-bottom: 40px"&gt;二维码已过期，刷新页面重新获取二维码。&lt;/p&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl code"</span>&gt;</span><br><span class="line">                &lt;div id="qrCode"&gt;&lt;/div&gt;</span><br><span class="line">                &lt;script&gt;</span><br><span class="line">                  let qrCode=<span class="keyword">new</span> QRCode(<span class="string">'qrCode'</span>,<span class="string">'$&#123;pay_url&#125;'</span>)</span><br><span class="line">                &lt;/script&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"saosao"</span>&gt;</span><br><span class="line">                  &lt;p&gt;请使用微信扫一扫&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;扫描二维码支付&lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl"</span> style=<span class="string">"background:url(./img/phone-bg.png) no-repeat;width:350px;height:400px;margin-left:40px"</span>&gt;</span><br><span class="line"></span><br><span class="line">              &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="clearfix"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--引入尾部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"footer.jsp"</span>%&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-支付结果通知实现"><a href="#四-支付结果通知实现" class="headerlink" title="四.支付结果通知实现"></a>四.支付结果通知实现</h1><h4 id="4-1-notify-url"><a href="#4-1-notify-url" class="headerlink" title="4.1 notify_url"></a>4.1 notify_url</h4><table><thead><tr><th>通知地址</th><th>notify_url</th><th>是</th><th>String(256)</th><th><a href="http://www.weixin.qq.com/wxpay/pay.php">http://www.weixin.qq.com/wxpay/pay.php</a></th><th>异步接收微信支付结果通知的回调地址，通知url必须为外网可访问的url，不能携带参数。</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>这个地址是在支付成功后的异步结果通知。</p><p>官网介绍如下: 支付完成后，微信会把相关支付结果和用户信息发送给商户，商户需要接收处理，并返回应答。 </p><p>所以，此处的地址必须是一个外网可访问地址，而且我们要定义好回调的处理接口。</p><p> <a href="http://localhost:8080/travel/pay/notify">http://localhost:8080/travel/pay/notify</a> </p><p><strong>注意</strong>:通知url必须为直接可访问的url，不能携带参数</p><h4 id="4-2-内网穿透"><a href="#4-2-内网穿透" class="headerlink" title="4.2 内网穿透"></a>4.2 内网穿透</h4><ul><li><p>内网穿透:</p><p>让外网能访问你本地的应用，例如在外网打开你本地<a href="http://127.0.0.1的指向Web站点">http://127.0.0.1的指向Web站点</a></p></li><li><p>配置url回调地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> WXPay wxPay;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支付成功回调地址</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String notifyUrl = <span class="string">"http://xxxxxxxx.xxxxx.xxx/travel/PayNotifyServlet"</span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-需求分析"><a href="#4-3-需求分析" class="headerlink" title="4.3 需求分析"></a>4.3 需求分析</h4><table><thead><tr><th>用户</th><th>➡</th><th>微信平台</th><th>➡</th><th><a href="http://xxxxxxxx.xxxxx.xxx/travel/PayNotifyServlet">http://xxxxxxxx.xxxxx.xxx/travel/PayNotifyServlet</a></th></tr></thead><tbody><tr><td></td><td></td><td>微信平台受到钱后，根据发送时指定的回调地址，返回支付成功信息</td><td></td><td>@WebServlet(“/PayNotifyServlet”)<br>接受请求xml，转为map<br/>调用service，修改订单状态<br/>返回接受成功ok消息</td></tr><tr><td></td><td></td><td></td><td></td><td>OrderServlet<br>根据oid修改state(OrderDao)<br>根据oid修改state(OrderItemDao)</td></tr></tbody></table><h4 id="4-4-代码实现"><a href="#4-4-代码实现" class="headerlink" title="4.4 代码实现"></a>4.4 代码实现</h4><ul><li><p>PayNotifyServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/PayNotifyServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayNotifyServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xxx</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  OrderService orderService= (OrderService) BeanFactory.getBean(<span class="string">"orderService"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.接收请求参数(xml)</span></span><br><span class="line">    ServletInputStream in = request.getInputStream();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.将xml转为java对象</span></span><br><span class="line">    XmlMapper xmlMapper = <span class="keyword">new</span> XmlMapper();</span><br><span class="line">    Map param = xmlMapper.readValue(in, Map<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.调用orderService，修改订单状态</span></span><br><span class="line">    orderService.updateState(param);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.返回微信平台，接收成功</span></span><br><span class="line">    Map&lt;String , String &gt; result = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    result.put(<span class="string">"return_code"</span>,<span class="string">"SUCESS"</span>);</span><br><span class="line">    result.put(<span class="string">"return_msg"</span>,<span class="string">"OK"</span>);</span><br><span class="line"></span><br><span class="line">    String xml = xmlMapper.writeValueAsString(result);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将map转为xml</span></span><br><span class="line">    response.setContentType(<span class="string">"application/xml;charset=utf-8"</span>);</span><br><span class="line">    response.getWriter().write(xml);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(Map&lt;String, String&gt; param)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateState</span><span class="params">(Map&lt;String, String&gt; param)</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 1.获取订单号</span></span><br><span class="line">    String oid = param.get(<span class="string">"out_trade_no"</span>);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 2.修改订单状态</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    OrderDao orderDao = sqlSession.getMapper(OrderDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    OrderItemDao orderItemDao = sqlSession.getMapper(OrderItemDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 修改订单</span></span><br><span class="line">    orderDao.updateState(oid);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 修改订单项</span></span><br><span class="line">    orderItemDao.updateState(oid);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(String oid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">        INSERT INTO tab_order(oid,ordertime,total,state,address,contact,telephone,uid)</span><br><span class="line">        VALUES (#&#123;oid&#125;,#&#123;ordertime&#125;,#&#123;total&#125;,#&#123;state&#125;,#&#123;address&#125;,#&#123;contact&#125;,#&#123;telephone&#125;,#&#123;uid&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateState"</span>&gt;</span></span><br><span class="line">        UPDATE tab_order SET state=1 WHERE oid=#&#123;oid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderItemDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderItemDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(OrderItem orderItem)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(String oid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderItemDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderItemDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">        INSERT INTO tab_orderitem(itemtime,state,num,subtotal,rid,oid)</span><br><span class="line">        VALUES (#&#123;itemtime&#125;,#&#123;state&#125;,#&#123;num&#125;,#&#123;subtotal&#125;,#&#123;rid&#125;,#&#123;oid&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateState"</span>&gt;</span></span><br><span class="line">        UPDATE tab_orderitem SET state=1 WHERE oid =#&#123;oid&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="五-支付状态查询"><a href="#五-支付状态查询" class="headerlink" title="五.支付状态查询"></a>五.支付状态查询</h1><h4 id="5-1-需求分析"><a href="#5-1-需求分析" class="headerlink" title="5.1 需求分析"></a>5.1 需求分析</h4><p><img src="image-20200524114657431.png" alt=""></p><h4 id="5-2-代码实现"><a href="#5-2-代码实现" class="headerlink" title="5.2 代码实现"></a>5.2 代码实现</h4><ul><li><p>pay.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/webbase.css"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/pages-weixinpay.css"</span>&gt;</span><br><span class="line">    &lt;title&gt;微信支付&lt;/title&gt;</span><br><span class="line">    &lt;script src="$&#123;pageContext.request.contextPath&#125;/js/qrcode.min.js"&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"header.jsp"</span>%&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container-fluid"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"cart py-container"</span>&gt;</span><br><span class="line">        &lt;!--主内容--&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout py-container  pay"</span>&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-tit"</span>&gt;</span><br><span class="line">            &lt;h4 class="fl tit-txt"&gt;&lt;span class="success-icon"&gt;&lt;/span&gt;&lt;span  class="success-info"&gt;订单提交成功，请您及时付款！订单号：$&#123;oid&#125;&lt;/span&gt;&lt;/h4&gt;</span><br><span class="line">            &lt;span class="fr"&gt;&lt;em class="sui-lead"&gt;应付金额：&lt;/em&gt;&lt;em  class="orange money"&gt;￥$&#123;price&#125;&lt;/em&gt;元&lt;/span&gt;</span><br><span class="line">            &lt;div class="clearfix"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-steps"</span>&gt;</span><br><span class="line">            &lt;div class="fl weixin"&gt;微信支付&lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl sao"</span>&gt;</span><br><span class="line">              &lt;p class="red" style="padding-bottom: 40px"&gt;二维码已过期，刷新页面重新获取二维码。&lt;/p&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl code"</span>&gt;</span><br><span class="line">                &lt;div id="qrCode"&gt;&lt;/div&gt;</span><br><span class="line">                &lt;script&gt;</span><br><span class="line">                  let qrCode=<span class="keyword">new</span> QRCode(<span class="string">'qrCode'</span>,<span class="string">'$&#123;pay_url&#125;'</span>)</span><br><span class="line">                &lt;/script&gt;</span><br><span class="line">                &lt;%--                        &lt;img src=<span class="string">"img/erweima.png"</span> alt=<span class="string">""</span>&gt;--%&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"saosao"</span>&gt;</span><br><span class="line">                  &lt;p&gt;请使用微信扫一扫&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;扫描二维码支付&lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl"</span> style=<span class="string">"background:url(./img/phone-bg.png) no-repeat;width:350px;height:400px;margin-left:40px"</span>&gt;</span><br><span class="line"></span><br><span class="line">              &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="clearfix"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      <span class="comment">// 每间隔五秒查询支付状态</span></span><br><span class="line">      setInterval(function () &#123;</span><br><span class="line">        <span class="comment">// 发送ajax请求</span></span><br><span class="line">        let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/OrderServlet'</span>;</span><br><span class="line">        let data = <span class="string">'action=findState&amp;oid=$&#123;oid&#125;'</span></span><br><span class="line">        $.post(url,data,function (resp) &#123;</span><br><span class="line">          <span class="keyword">if</span>(resp.success)&#123;</span><br><span class="line">            <span class="comment">// 支付成功</span></span><br><span class="line">            location.href=<span class="string">'$&#123;pageContext.request.contextPath&#125;/pay_success.jsp'</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,<span class="number">5000</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 如果用户10分钟内未支付，则跳转失败页面</span></span><br><span class="line">      setTimeout(function () &#123;</span><br><span class="line">        location.href=<span class="string">'$&#123;pageContext.request.contextPath&#125;/pay_fail.jsp'</span>;</span><br><span class="line">      &#125;,<span class="number">1000</span>*<span class="number">10</span>*<span class="number">60</span>)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;!--引入尾部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"footer.jsp"</span>%&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>OrderSerlvet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询订单支付状态</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findState</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 1.接收请求参数 oid</span></span><br><span class="line">  String oid = req.getParameter(<span class="string">"oid"</span>);</span><br><span class="line">  <span class="comment">// 2.调用service查询</span></span><br><span class="line">  ResultInfo resultInfo = orderService.findState(oid);</span><br><span class="line">  <span class="comment">// 3.转为json响应到客户的</span></span><br><span class="line">  javaToJsonWriteClient(resultInfo,resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(Map&lt;String, String&gt; param)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">ResultInfo <span class="title">findState</span><span class="params">(String oid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ResultInfo <span class="title">findState</span><span class="params">(String oid)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    OrderDao orderDao = sqlSession.getMapper(OrderDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 查询dao</span></span><br><span class="line">    Order order = orderDao.findByOid(oid);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span>(order.getState() == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">// 未支付</span></span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 已支付</span></span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> resultInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(String oid)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">Order <span class="title">findByOid</span><span class="params">(String oid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByOid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Order"</span>&gt;</span></span><br><span class="line">  SELECT * FROM tab_order WHERE oid=#&#123;oid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="六-日志记录功能"><a href="#六-日志记录功能" class="headerlink" title="六.日志记录功能"></a>六.日志记录功能</h1><h4 id="6-1-介绍"><a href="#6-1-介绍" class="headerlink" title="6.1 介绍"></a>6.1 介绍</h4><h4 id="6-2-方法增强"><a href="#6-2-方法增强" class="headerlink" title="6.2 方法增强"></a>6.2 方法增强</h4><ul><li>继承</li><li>装饰器模式:必须手动编写装饰器实现类，进行增强</li><li>代理模式:不需要手动编写增强的实现类</li></ul><h4 id="6-3-动态代理"><a href="#6-3-动态代理" class="headerlink" title="6.3 动态代理"></a>6.3 动态代理</h4><ul><li><p>jdk动态代理:要求目标对象和代理对象实现同一个接口【基于接口来创建代理类】</p></li><li><p>cglib动态代理:可以对任意的普通类创建出代理对象【基于继承的思想】</p><p><img src="image-20200524141817661.png" alt=""></p></li></ul><p>sun公司提供了一套工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Object proxy =</span><br><span class="line">  Proxy.newProxyInstance(ClassLoader loader, 类&lt;?&gt;[] interfaces,</span><br><span class="line">                         InvocationHandler h);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">参数:</span></span><br><span class="line"><span class="comment">1.loader:使用目标对象的类加载器 2.interfaces:使用目标对象的实现接口数组 3.h:处理器接口(实现方法增强的业务逻辑细节)</span></span><br><span class="line"><span class="comment">匿名内部类、lambda表达式 返回值:代理对象</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li><p>回顾动态代理的实现思路</p><ul><li><p>定义接口规范</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TargetInterface</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>定义目标对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LiangLiang</span> <span class="keyword">implements</span> <span class="title">TargetInterface</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span> </span>&#123; System.out.println(<span class="string">"Singing...."</span>);</span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建代理对象并测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyTest</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 传统方式</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    TargetInterface liangLiang = <span class="keyword">new</span> LiangLiang();</span><br><span class="line">    liangLiang.sing(); &#125;</span><br><span class="line">  <span class="comment">// 动态代理</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 1.创建目标对象</span></span><br><span class="line">    TargetInterface liangLiang = <span class="keyword">new</span> LiangLiang(); <span class="comment">// 2.创建代理对象</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">1.loader:目标对象的类加载器 2.interfaces:目标对象实现接口数组 3.h:处理器接口(实现增强的方法细节)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    ClassLoader classLoader = liangLiang.getClass().getClassLoader(); Class&lt;?&gt;[] interfaces = liangLiang.getClass().getInterfaces(); TargetInterface xiaolu = (TargetInterface)</span><br><span class="line">      Proxy.newProxyInstance(classLoader, interfaces, <span class="keyword">new</span> InvocationHandler() &#123; <span class="comment">// 3.编写增强的实现逻辑(invoke是代理对象所有方法的入口)</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">参数:</span></span><br><span class="line"><span class="comment">1.proxy:工具类生产的代理对象(xiaolu) 2.method:当前用户执行的某个具体方法对象 3.args:当前用户执行某个具体方法传递的实际参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span></span></span><br><span class="line"><span class="function">          <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">// 实现方法的增强</span></span><br><span class="line">          <span class="keyword">if</span> (<span class="string">"sing"</span>.equals(method.getName())) &#123;</span><br><span class="line">            System.out.println(<span class="string">"小路晚上找你谈生意..."</span>); &#125;</span><br><span class="line">          <span class="comment">// 真正执行者还是目标哦对象</span></span><br><span class="line">          <span class="keyword">return</span> method.invoke(liangLiang, args); &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="comment">// 调用代理对象的方法(实现了对sing方法的增强)</span></span><br><span class="line">    xiaolu.sing(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="6-4-日志记录实现"><a href="#6-4-日志记录实现" class="headerlink" title="6.4 日志记录实现"></a>6.4 日志记录实现</h4><h5 id="6-4-1-分析"><a href="#6-4-1-分析" class="headerlink" title="6.4.1 分析"></a>6.4.1 分析</h5><p><img src="image-20200524145558471.png" alt=""></p><h5 id="6-4-2-实现"><a href="#6-4-2-实现" class="headerlink" title="6.4.2 实现"></a>6.4.2 实现</h5><ul><li><p>JdkProxyFactory</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdkProxyFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 提供一个生产日志记录的代理对象方法</span></span><br><span class="line">  <span class="comment">// target 目标对象</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">createProxy</span><span class="params">(Object target)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// proxy 代理对象</span></span><br><span class="line">    Object proxy = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据工具类，创建代理对象</span></span><br><span class="line">    ClassLoader classLoader = target.getClass().getClassLoader();</span><br><span class="line">    Class&lt;?&gt;[] interfaces = target.getClass().getInterfaces();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实现对方法的增强</span></span><br><span class="line">    Proxy.newProxyInstance(classLoader, interfaces, <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="comment">// 实现日志记录</span></span><br><span class="line">        StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        stringBuffer.append(<span class="string">"[Action Time]: "</span> + LocalDateTime.now());</span><br><span class="line"></span><br><span class="line">        stringBuffer.append(<span class="string">"[Implementation Target Class]"</span> + target.getClass().getName());</span><br><span class="line"></span><br><span class="line">        stringBuffer.append(<span class="string">"[Implementation Target Method]: "</span>+method.getName());</span><br><span class="line"></span><br><span class="line">        stringBuffer.append(<span class="string">"[Method Actual Args]: "</span>+ Arrays.toString(args));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 先调用目标对象原有的功能</span></span><br><span class="line">        Object invoke = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          invoke = method.invoke(target,args);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">          stringBuffer.append(<span class="string">"[Exception Information]: "</span>+ e.getCause().getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将本次日志信息保存到日志文件</span></span><br><span class="line">        LocalDate localDate = LocalDate.now();</span><br><span class="line"></span><br><span class="line">        String format = localDate.format(DateTimeFormatter.ofPattern(<span class="string">"yyyy-M-dd"</span>));</span><br><span class="line"></span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"/Users/swzxsyh/Program"</span> + format + <span class="string">".log"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用高效字符缓冲流 </span></span><br><span class="line">        BufferedWriter bufferedWriter = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(file, <span class="keyword">true</span>), <span class="string">"UTF-8"</span>));</span><br><span class="line"></span><br><span class="line">        bufferedWriter.write(stringBuffer.toString());</span><br><span class="line">        bufferedWriter.newLine();</span><br><span class="line">        bufferedWriter.close();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> invoke;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> proxy;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>BeanFacotry</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.Document;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.Element;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.io.SAXReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        UserService userService = (UserService) BeanFactory.getBean(<span class="string">"userService"</span>);</span><br><span class="line">        System.out.println(userService.findByUsername(<span class="string">"swzxsyh"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        Object result = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream in = BeanFactory.class.getClassLoader().getResourceAsStream("beans.xml");</span><br><span class="line"></span><br><span class="line">            SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line"></span><br><span class="line">            Document document = saxReader.read(in);</span><br><span class="line"></span><br><span class="line">            String xpath = <span class="string">"//bean[@id='"</span> + id + <span class="string">"']"</span>;</span><br><span class="line"></span><br><span class="line">            Element element = (Element) document.selectSingleNode(xpath);</span><br><span class="line"></span><br><span class="line">            String className = element.attributeValue(<span class="string">"class"</span>);</span><br><span class="line"></span><br><span class="line">            Class&lt;?&gt; clazz = Class.forName(className);</span><br><span class="line"></span><br><span class="line">            result = clazz.newInstance();</span><br><span class="line"></span><br><span class="line">            result = JdkProxyFactory.createLogProxy(result);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>观察日志文件路径</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong># 微信支付&amp;日志记录</strong></p><p><strong>## 二维码</strong></p><p><strong>### QRCode二维码生成插件</strong></p><p><strong>## 微信扫码支付简介</strong></p><p><strong>### 申请商户号（略）</strong></p><p><strong>### 开发文档</strong></p><p>- 1、生成订单</p><p>- 2、调用微信下单接口，生成链接。</p><p>- 3、根据链接生成二维码图片</p><p>- 4、支付成功后修改订单状态</p><p><strong>### API</strong></p><p>- 统一下单</p><p>- 支付结果通知</p><p><strong>### SDK</strong></p><p>- 需要手动下载，安装到本地仓库</p><p>​    - 个别同学使用自己仓库，必须操作</p><p><strong>## 统一下单实现</strong></p><p><strong>### 写死1分钱</strong></p><p><strong>## 支付结果通知实现</strong></p><p><strong>### 内网穿透</strong></p><p>- NATAPP</p><p>​    - 注意：生成的外网地址，可能会随机切换</p><p><strong>## 支付状态查询</strong></p><p><strong>### 前端使用定时器</strong></p><p>- 用户支付，跳转到成功页面</p><p>- 超过10分钟未支付，跳转到失败页面</p><p><strong>## 日志记录功能</strong></p><p><strong>### 使用动态代理，实现对所有业务层方法增强，实现日志记录</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（六十）</title>
      <link href="/2020/05/22/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%EF%BC%89/"/>
      <url>/2020/05/22/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>购物车</li><li>订单</li></ul><a id="more"></a><h1 id="一-购物车流程分析"><a href="#一-购物车流程分析" class="headerlink" title="一.购物车流程分析"></a>一.购物车流程分析</h1><ul><li>浏览商品</li><li>加入购物车(用户的购物车)</li><li>查看购物车</li><li>商品结算(收货地址、支付方式、商品清单) ——cart.jsp</li><li>生成订单(支付状态:未支付0、已支付:1)——order_info.jsp</li><li>支付(微信、支付宝)——pay.jsp</li><li>支付结果</li></ul><h1 id="二-设计购物车"><a href="#二-设计购物车" class="headerlink" title="二.设计购物车"></a>二.设计购物车</h1><h4 id="2-1-购物车功能分析"><a href="#2-1-购物车功能分析" class="headerlink" title="2.1 购物车功能分析"></a>2.1 购物车功能分析</h4><p><img src="image-20200522093646704.png" alt=""></p><h4 id="2-2-CartItem"><a href="#2-2-CartItem" class="headerlink" title="2.2 CartItem"></a>2.2 CartItem</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CartItem</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> Route route; <span class="comment">// 商品 private Integer num; // 数量 private Double subTotal; // 小计</span></span><br><span class="line">  <span class="comment">// 重写小计get方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Double <span class="title">getSubTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125; &#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-Cart"><a href="#2-3-Cart" class="headerlink" title="2.3 Cart"></a>2.3 Cart</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cart</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> Integer cartNum;</span><br><span class="line">  <span class="keyword">private</span> Double cartTotal;</span><br><span class="line">  <span class="keyword">private</span> LinkedHashMap&lt;String, CartItem&gt; cartItemMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Integer <span class="title">getCartNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cartNum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (CartItem cartItem : cartItemMap.values()) &#123;</span><br><span class="line">      cartNum += cartItem.getNum();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cartNum;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Double <span class="title">getCartTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    cartTotal = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (CartItem cartItem : cartItemMap.values()) &#123;</span><br><span class="line">      cartTotal += cartItem.getSubTotal();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cartTotal;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-购物车工具类"><a href="#2-4-购物车工具类" class="headerlink" title="2.4 购物车工具类"></a>2.4 购物车工具类</h4><p><img src="image-20200522095258837.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CartUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setCartToRedis</span><span class="params">(User user, Cart cart)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Jedis jedis = JedisUtils.getJedis();</span><br><span class="line"></span><br><span class="line">            String json = objectMapper.writeValueAsString(cart);</span><br><span class="line"></span><br><span class="line">            jedis.set(<span class="string">"cart_"</span> + user.getUsername(), json);</span><br><span class="line"></span><br><span class="line">            jedis.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Cart <span class="title">getCartForRedis</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        Cart cart = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        Jedis jedis = JedisUtils.getJedis();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (jedis.exists(<span class="string">"cart_"</span> + user.getUsername())) &#123;</span><br><span class="line">            String json = jedis.get(<span class="string">"cart_"</span> + user.getUsername());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                cart = objectMapper.readValue(json, Cart<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cart = <span class="keyword">new</span> Cart();</span><br><span class="line">        &#125;</span><br><span class="line">        jedis.close();</span><br><span class="line">        <span class="keyword">return</span> cart;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三-加入购物车"><a href="#三-加入购物车" class="headerlink" title="三.加入购物车"></a>三.加入购物车</h1><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><p><img src="image-20200522102212385.png" alt=""></p><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li><p>route_detail.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"collect"</span>&gt;</span><br><span class="line">    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn"</span> href=<span class="string">"javascript:void(0)"</span> id=<span class="string">"addCart"</span>&gt;</span><br><span class="line">&lt;i class="glyphicon glyphicon-heart-empty"&gt;&lt;/i&gt;加入购物车&lt;/a&gt; &lt;/span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(<span class="string">'#addCart'</span>).click(function () &#123;</span><br><span class="line"><span class="comment">// 判断用户是否登录</span></span><br><span class="line"><span class="keyword">if</span> ($&#123;empty currentUser&#125;) &#123; <span class="comment">// 未登录</span></span><br><span class="line"><span class="comment">// 以代码方式触发登录按钮的点击事件，弹出模态框</span></span><br><span class="line">$(<span class="string">'#loginBtn'</span>).click() &#125; <span class="keyword">else</span> &#123;<span class="comment">// 已登录</span></span><br><span class="line"><span class="comment">// 获取数量</span></span><br><span class="line">let num = $(<span class="string">'#qty_item_1'</span>).val();</span><br><span class="line"><span class="comment">// 添加购物车请求 location.href='$&#123;pageContext.request.contextPath&#125;/CartServlet?</span></span><br><span class="line">action=addCart&amp;rid=$&#123;route.rid&#125;&amp;num=<span class="string">'+num; &#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CartServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CartServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CartServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RouteService routeService= (RouteService) BeanFactory.getBean(<span class="string">"routeService"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xxx</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加购物车</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">addCart</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String num = req.getParameter(<span class="string">"num"</span>);</span><br><span class="line">        String rid = req.getParameter(<span class="string">"rid"</span>);</span><br><span class="line">        <span class="comment">// 2.从redis中获取购物车</span></span><br><span class="line">        User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line"></span><br><span class="line">        Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">        <span class="comment">// 3.判断当前商品的购物项是否存在</span></span><br><span class="line">        LinkedHashMap&lt;String, CartItem&gt; cartItemMap = cart.getCartItemMap();</span><br><span class="line">        CartItem cartItem = cartItemMap.get(rid);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cartItem !=<span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 数量累加</span></span><br><span class="line">            cartItem.setNum(cartItem.getNum()+Integer.parseInt(num));</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 根据rid查询route对象</span></span><br><span class="line">            Route route = routeService.findDetail(rid);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建购物项对象</span></span><br><span class="line">            cartItem  = <span class="keyword">new</span> CartItem();</span><br><span class="line">            cartItem.setNum(Integer.parseInt(num));</span><br><span class="line">            cartItem.setRoute(route);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置到购物车中</span></span><br><span class="line">            cartItemMap.put(rid,cartItem);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 4.将购物车更新到redis中</span></span><br><span class="line">        CartUtils.setCartToRedis(currentUser,cart);</span><br><span class="line">        <span class="comment">// 5.将购物项设置到request域，展示给用户</span></span><br><span class="line">        req.setAttribute(<span class="string">"cartItem"</span>,cartItem);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6.转发到添加成功页面</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/cart_success.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>cart_success.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;td width=<span class="string">"180"</span> width=<span class="string">"40%"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"id"</span> value=<span class="string">"22"</span>&gt;</span><br><span class="line">  &lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;cartItem.route.rimage&#125;"</span> width=<span class="string">"170"</span> height=<span class="string">"100"</span>&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td width=<span class="string">"30%"</span>&gt;</span><br><span class="line">  &lt;a target="_blank"&gt;$&#123;cartItem.route.rname&#125;&lt;/a&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td width=<span class="string">"10%"</span>&gt;</span><br><span class="line">  ￥$&#123;cartItem.route.price&#125;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td width=<span class="string">"14%"</span>&gt;</span><br><span class="line">  × $&#123;cartItem.num&#125;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td width=<span class="string">"15%"</span>&gt;</span><br><span class="line">  &lt;span class="subtotal"&gt;￥$&#123;cartItem.subTotal&#125;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr &gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-查看购物车"><a href="#四-查看购物车" class="headerlink" title="四.查看购物车"></a>四.查看购物车</h1><h4 id="4-1-需求分析"><a href="#4-1-需求分析" class="headerlink" title="4.1 需求分析"></a>4.1 需求分析</h4><p><img src="image-20200522105420824.png" alt=""></p><h4 id="4-2-代码实现"><a href="#4-2-代码实现" class="headerlink" title="4.2 代码实现"></a>4.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/CartServlet?action=findAll" class="collection"&gt;购物车&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>CartServlet </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查看购物车</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.从session中获取user</span></span><br><span class="line">    User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">    <span class="comment">// 2.从redis中获取cart</span></span><br><span class="line">    Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">    <span class="comment">// 3.设置到request域</span></span><br><span class="line">    req.setAttribute(<span class="string">"cart"</span>,cart);</span><br><span class="line">    <span class="comment">// 4.转发到cart.jsp</span></span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/cart.jsp"</span>).forward(req,resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>cart.jsp </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;empty cart.cartItemMap&#125;"</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span> style=<span class="string">"margin: 100px 200px;text-align: center"</span>&gt;</span><br><span class="line">    购物车内暂时没有商品，登录后将显示您之前加入的商品</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;not empty cart.cartItemMap&#125;"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=<span class="string">"margin:0 auto; margin-top:20px"</span>&gt;</span><br><span class="line">      &lt;div style="font-weight: bold;font-size: 15px;margin-bottom: 10px"&gt;商品数量：$&#123;cart.cartNum&#125;&lt;/div&gt;</span><br><span class="line">      &lt;table <span class="class"><span class="keyword">class</span></span>=<span class="string">"table"</span>&gt;</span><br><span class="line">        &lt;tbody&gt;</span><br><span class="line">          &lt;tr bgcolor=<span class="string">"#f5f5f5"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"table-bordered"</span>&gt;</span><br><span class="line">            &lt;th&gt;图片&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;商品&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;价格&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;数量&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;小计&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">          &lt;c:forEach items=<span class="string">"$&#123;cart.cartItemMap&#125;"</span> <span class="keyword">var</span>=<span class="string">"entry"</span>&gt;</span><br><span class="line">            &lt;tr <span class="class"><span class="keyword">class</span></span>=<span class="string">"table-bordered"</span>&gt;</span><br><span class="line">              &lt;td width=<span class="string">"180"</span> width=<span class="string">"40%"</span>&gt;</span><br><span class="line">                &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"id"</span> value=<span class="string">"22"</span>&gt;</span><br><span class="line">                &lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;entry.value.route.rimage&#125;"</span> width=<span class="string">"170"</span></span><br><span class="line">                     height=<span class="string">"100"</span>&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td width=<span class="string">"30%"</span>&gt;</span><br><span class="line">                &lt;a target="_blank"&gt;$&#123;entry.value.route.rname&#125;&lt;/a&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td width=<span class="string">"10%"</span>&gt;</span><br><span class="line">                ￥ $&#123;entry.value.route.price&#125;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td width=<span class="string">"14%"</span>&gt;</span><br><span class="line">                × $&#123;entry.value.num&#125;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td width=<span class="string">"15%"</span>&gt;</span><br><span class="line">                &lt;span class="subtotal"&gt;¥ $&#123;entry.value.subTotal&#125;&lt;/span&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td&gt;</span><br><span class="line">                &lt;a href="$&#123;pageContext.request.contextPath&#125;/CartServlet?action=delCartItem&amp;rid=$&#123;entry.value.route.rid&#125;" class="delete"&gt;删除&lt;/a&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">          &lt;/c:forEach&gt;</span><br><span class="line">        &lt;/tbody&gt;</span><br><span class="line">      &lt;/table&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div style=<span class="string">"text-align:right;"</span>&gt;</span><br><span class="line">      商品金额: &lt;strong style="color:#ff6600;"&gt;￥$&#123;cart.cartTotal&#125;&lt;/strong&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div style=<span class="string">"text-align:right;margin-top:10px;margin-bottom:10px;"</span>&gt;</span><br><span class="line">      &lt;a href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/OrderServlet?action=orderInfo"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"button"</span> width=<span class="string">"100"</span> value=<span class="string">"结算"</span> name=<span class="string">"submit"</span> border=<span class="string">"0"</span> style=<span class="string">"background-color: #ea4a36;</span></span><br><span class="line"><span class="string">                                                                                    height:45px;width:120px;color:white;font-size: 15px"</span>&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="五-删除购物车"><a href="#五-删除购物车" class="headerlink" title="五.删除购物车"></a>五.删除购物车</h1><h4 id="5-1-需求分析"><a href="#5-1-需求分析" class="headerlink" title="5.1 需求分析"></a>5.1 需求分析</h4><p><img src="image-20200522112515521.png" alt=""></p><h4 id="5-2-代码实现"><a href="#5-2-代码实现" class="headerlink" title="5.2 代码实现"></a>5.2 代码实现</h4><ul><li><p>cart.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/CartServlet?action=delCartItem&amp;rid=$&#123;entry.value.route.rid&#125;" class="delete"&gt;删除&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CartServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除购物项</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">delCartItem</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 1.获取请求参数</span></span><br><span class="line">  String rid = req.getParameter(<span class="string">"rid"</span>);</span><br><span class="line">  <span class="comment">// 2.获取session中user</span></span><br><span class="line">  User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3.获取redis中cart</span></span><br><span class="line">  Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.删除购物项</span></span><br><span class="line">  cart.getCartItemMap().remove(rid);</span><br><span class="line">  <span class="comment">// 5.将cart更新到redis中</span></span><br><span class="line">  CartUtils.setCartToRedis(currentUser,cart);</span><br><span class="line">  <span class="comment">// 6.重定向查看购物车</span></span><br><span class="line">  resp.sendRedirect(req.getContextPath()+<span class="string">"/CartServlet?action=findAll"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="六-商品结算"><a href="#六-商品结算" class="headerlink" title="六.商品结算"></a>六.商品结算</h1><h4 id="6-1-需求分析"><a href="#6-1-需求分析" class="headerlink" title="6.1  需求分析"></a>6.1  需求分析</h4><p><img src="image-20200522114313070.png" alt=""></p><h4 id="6-2-代码实现"><a href="#6-2-代码实现" class="headerlink" title="6.2 代码实现"></a>6.2 代码实现</h4><ul><li><p>cart.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/OrderServlet?action=orderInfo"</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/OrderServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    AddressService addressService = (AddressService) BeanFactory.getBean(<span class="string">"addressService"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">XXX</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 商品结算</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">orderInfo</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.获取session中user</span></span><br><span class="line">        User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">        <span class="comment">// 2.查询收货地址</span></span><br><span class="line">        List&lt;Address&gt; addressList = addressService.findByUid(currentUser.getUid());</span><br><span class="line">        <span class="comment">// 3.查询cart</span></span><br><span class="line">        Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">        <span class="comment">// 4.设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"addressList"</span>, addressList);</span><br><span class="line">        req.setAttribute(<span class="string">"cart"</span>, cart);</span><br><span class="line">        <span class="comment">// 5.转发到 order_info</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/order_info.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>order_info.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/webbase.css"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/pages-getOrderInfo.css"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;title&gt;结算页&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"header.jsp"</span> %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container-fluid"</span>&gt;</span><br><span class="line">      &lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/OrderServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"createOrder"</span>&gt;</span><br><span class="line">        &lt;!-- 头部 end --&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"cart py-container"</span>&gt;</span><br><span class="line">          &lt;!--主内容--&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout py-container"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-tit"</span>&gt;</span><br><span class="line"></span><br><span class="line">              &lt;h4 style="font-weight: bold"&gt;填写并核对订单信息&lt;/h4&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-steps"</span>&gt;</span><br><span class="line">              &lt;!--收件人信息--&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-tit"</span>&gt;</span><br><span class="line">                &lt;h5&gt;收件人信息&lt;/h5&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-cont"</span>&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"addressInfo"</span>&gt;</span><br><span class="line">                  &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"addr-detail"</span>&gt;</span><br><span class="line">                    &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"addr-item"</span>&gt;</span><br><span class="line"></span><br><span class="line">                      &lt;div&gt;</span><br><span class="line">                        &lt;c:forEach items=<span class="string">"$&#123;addressList&#125;"</span> <span class="keyword">var</span>=<span class="string">"address"</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"con address"</span>&gt;</span><br><span class="line">                            &lt;input type="radio" name="addressId" value="$&#123;address.contact&#125;,$&#123;address.address&#125;,$&#123;address.telephone&#125;" &lt;c:if test="$&#123;address.isdefault == 1&#125;"&gt;checked="checked"&lt;/c:if&gt;&gt; $&#123;address.contact&#125;</span><br><span class="line">                          $&#123;address.address&#125; &lt;span&gt;$&#123;address.telephone&#125;&lt;/span&gt;&lt;/div&gt;</span><br><span class="line">                        &lt;/c:forEach&gt;</span><br><span class="line">                      &lt;%--                                        &lt;a href=<span class="string">"home_address.jsp"</span> data-toggle=<span class="string">"modal"</span> name=<span class="string">"#addressModel"</span> data-keyboard=<span class="string">"false"</span>--%&gt;</span><br><span class="line">                      &lt;%--                                           class="sui-btn  btn-info add-new"&gt;添加新地址&lt;/a&gt;--%&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                  &lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="hr"&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class="hr"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;!--支付和送货--&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"payshipInfo"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-tit"</span>&gt;</span><br><span class="line">              &lt;h5&gt;支付方式&lt;/h5&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-cont"</span>&gt;</span><br><span class="line">              &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"payType"</span>&gt;</span><br><span class="line">                &lt;li class="selected"&gt;微信付款&lt;/li&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="hr"&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-tit"</span>&gt;</span><br><span class="line">              &lt;h5&gt;送货清单&lt;/h5&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-cont"</span>&gt;</span><br><span class="line">              &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"send-detail"</span>&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"sendGoods"</span>&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;c:forEach items=<span class="string">"$&#123;cart.cartItemMap&#125;"</span> <span class="keyword">var</span>=<span class="string">"entry"</span>&gt;</span><br><span class="line"></span><br><span class="line">                      &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-g"</span>&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-1-6"</span>&gt;</span><br><span class="line">                          &lt;span&gt;&lt;img src="$&#123;entry.value.route.rimage&#125;"/&gt;&lt;/span&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-7-12"</span>&gt;</span><br><span class="line">                          &lt;div class="desc"&gt;$&#123;entry.value.route.rname&#125;&lt;/div&gt;</span><br><span class="line">                          &lt;div class="seven"&gt;7天无理由退货&lt;/div&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-1-12"</span>&gt;</span><br><span class="line">                          &lt;div class="price"&gt;￥$&#123;entry.value.subTotal&#125;&lt;/div&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-1-12"</span>&gt;</span><br><span class="line">                          &lt;div class="num"&gt;X $&#123;entry.value.num&#125;&lt;/div&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-1-12"</span>&gt;</span><br><span class="line">                          &lt;div class="exit"&gt;有货&lt;/div&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                      &lt;/ul&gt;</span><br><span class="line">                    &lt;/c:forEach&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;/li&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="hr"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"clearfix trade"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fc-price"</span>&gt;</span><br><span class="line">          &lt;span class="number"&gt;$&#123;cart.cartNum&#125;&lt;/span&gt;件商品，应付金额:　&lt;span class="price"&gt;¥ $&#123;cart.cartTotal&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"submit"</span>&gt;</span><br><span class="line">        &lt;button class="sui-btn btn-danger btn-xlarge"&gt;提交订单&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;!-- 底部栏位 --&gt;</span><br><span class="line">&lt;!--引入尾部--&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">"footer.jsp"</span> %&gt;</span><br><span class="line">&lt;script src="js/getOrderInfo.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="七-生成订单"><a href="#七-生成订单" class="headerlink" title="七.生成订单"></a>七.生成订单</h1><h4 id="7-1-需求分析"><a href="#7-1-需求分析" class="headerlink" title="7.1 需求分析"></a>7.1 需求分析</h4><ul><li><p>数据关系</p><p><img src="image-20200522141400811.png" alt=""></p></li><li><p>流程图</p><p><img src="image-20200522142115937.png" alt=""></p></li></ul><h4 id="7-2-代码实现"><a href="#7-2-代码实现" class="headerlink" title="7.2 代码实现"></a>7.2 代码实现</h4><ul><li><p>order_info.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/OrderServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"createOrder"</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/OrderServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  AddressService addressService = (AddressService) BeanFactory.getBean(<span class="string">"addressService"</span>);</span><br><span class="line"></span><br><span class="line">  OrderService orderService = (OrderService) BeanFactory.getBean(<span class="string">"orderService"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">createOrder</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    Date orderDate = <span class="keyword">new</span> Date();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.接收请求参数</span></span><br><span class="line">    String addressId = req.getParameter(<span class="string">"addressId"</span>);</span><br><span class="line">    <span class="comment">// 前端数据分割，分别为：收货人，收货地址，收货电话</span></span><br><span class="line">    String[] addressArray = addressId.split(<span class="string">","</span>);</span><br><span class="line">    <span class="comment">// 2.获取session中的user</span></span><br><span class="line">    User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">    <span class="comment">// 3.获取redis中cart</span></span><br><span class="line">    Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">    <span class="comment">// 4.创建订单，设置基础数据</span></span><br><span class="line">    Order order = <span class="keyword">new</span> Order();</span><br><span class="line">    <span class="comment">// 订单号</span></span><br><span class="line">    order.setOid(IdUtil.simpleUUID());</span><br><span class="line">    <span class="comment">// 下单时间</span></span><br><span class="line">    order.setOrdertime(orderDate);</span><br><span class="line">    <span class="comment">// 订单总金额</span></span><br><span class="line">    order.setTotal(cart.getCartTotal());</span><br><span class="line">    <span class="comment">// 未支付订单</span></span><br><span class="line">    order.setState(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">// 收货人</span></span><br><span class="line">    order.setContact(addressArray[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">// 收货地址</span></span><br><span class="line">    order.setAddress(addressArray[<span class="number">1</span>]);</span><br><span class="line">    <span class="comment">// 收货电话</span></span><br><span class="line">    order.setTelephone(addressArray[<span class="number">2</span>]);</span><br><span class="line">    <span class="comment">// 为了简化所属用户操作，我们可以直接设置uid</span></span><br><span class="line">    order.setUid(currentUser.getUid());</span><br><span class="line">    <span class="comment">// 5.遍历购物项，创建订单项</span></span><br><span class="line">    List&lt;OrderItem&gt; orderItemList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    OrderItem orderItem = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 遍历购物项</span></span><br><span class="line">    <span class="keyword">for</span> (CartItem cartItem : cart.getCartItemMap().values()) &#123;</span><br><span class="line">      <span class="comment">// 创建订单项</span></span><br><span class="line">      orderItem = <span class="keyword">new</span> OrderItem();</span><br><span class="line">      <span class="comment">// 下单时间</span></span><br><span class="line">      orderItem.setItemtime(orderDate);</span><br><span class="line">      <span class="comment">// 未支付</span></span><br><span class="line">      orderItem.setState(<span class="number">0</span>);</span><br><span class="line">      <span class="comment">// 数量</span></span><br><span class="line">      orderItem.setNum(cartItem.getNum());</span><br><span class="line">      <span class="comment">// 商品小计</span></span><br><span class="line">      orderItem.setSubtotal(cartItem.getSubTotal());</span><br><span class="line">      <span class="comment">// 商品rid ，简化数据库操作</span></span><br><span class="line">      orderItem.setRid(cartItem.getRoute().getRid());</span><br><span class="line">      <span class="comment">// 订单oid，简化数据操作</span></span><br><span class="line">      orderItem.setOid(order.getOid());</span><br><span class="line">      <span class="comment">// 添加到订单项集合中</span></span><br><span class="line">      orderItemList.add(orderItem);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将订单项集合关联到订单实体中</span></span><br><span class="line">    order.setOrderItemList(orderItemList);</span><br><span class="line">    <span class="comment">// 6.调用service，保存到数据库</span></span><br><span class="line">    orderService.save(order);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 7.清空购物车</span></span><br><span class="line">    Jedis jedis = JedisUtils.getJedis();</span><br><span class="line">    jedis.del(<span class="string">"cart_"</span>+currentUser.getUsername());</span><br><span class="line">    jedis.close();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 8.重定向支付页面</span></span><br><span class="line">    resp.sendRedirect(req.getContextPath()+<span class="string">"/pay.jsp"</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServiceImpl</span> <span class="keyword">implements</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line"></span><br><span class="line">    OrderDao orderDao = sqlSession.getMapper(OrderDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    OrderItemDao orderItemDao = sqlSession.getMapper(OrderItemDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">// 保存订单</span></span><br><span class="line">    orderDao.save(order);</span><br><span class="line">    <span class="comment">// 保存订单项</span></span><br><span class="line">    <span class="keyword">for</span> (OrderItem orderItem : order.getOrderItemList()) &#123;</span><br><span class="line">      orderItemDao.save(orderItem);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">    INSERT INTO tab_order(oid,ordertime,total,state,address,contact,telephone,uid)</span><br><span class="line">    VALUES (#&#123;oid&#125;,#&#123;ordertime&#125;,#&#123;total&#125;,#&#123;state&#125;,#&#123;address&#125;,#&#123;contact&#125;,#&#123;telephone&#125;,#&#123;uid&#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderItemDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderItemDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(OrderItem orderItem)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderItemDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderItemDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">    INSERT INTO tab_orderitem(itemtime,state,num,subtotal,rid,oid)</span><br><span class="line">    VALUES (#&#123;itemtime&#125;,#&#123;state&#125;,#&#123;num&#125;,#&#123;subtotal&#125;,#&#123;rid&#125;,#&#123;oid&#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"orderService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.OrderServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 购物流程分析</strong></p><p><strong>### 1. 浏览商品</strong></p><p><strong>### 2. 加入购物车</strong></p><p><strong>### 3. 查看购物车</strong></p><p><strong>### 4. 商品结算（收货地址、支付方式、商品清单）</strong></p><p><strong>### 5. 生成订单（支付状态：未支付0、已支付1）</strong></p><p><strong>### 6. 支付（微信、支付宝）</strong></p><p><strong>### 7. 支付结果</strong></p><p><strong>## 二 购物车功能分析</strong></p><p><strong>### CartItem对象</strong></p><p><strong>### Cart对象</strong></p><p><strong>### 购物车工具类</strong></p><p><strong>## 三 加入购物车</strong></p><p><strong>### 前端</strong></p><p>- 判断用户是否登录</p><p>​    - 未登录，弹出登录模态框</p><p>​    - 已登录，发送添加购物车请求</p><p><strong>### 后端</strong></p><p>- 使用redis购物车判断是否有此购物项</p><p>​    - 已存在，追加数量</p><p>​    - 不存在，创建购物项对象</p><p><strong>## 四 查看购物车</strong></p><p><strong>## 五 删除购物车</strong></p><p><strong>## 六 商品结算</strong></p><p><strong>### 查询当前用户的收货地址列表</strong></p><p><strong>### 查询购物车</strong></p><p><strong>## 七 生成订单</strong></p><p><strong>### 前端</strong></p><p>- 提交收货地址信息</p><p><strong>### 后端</strong></p><p>- 封装订单</p><p>​    - 封装订单项集合</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>大话重构</title>
      <link href="/2020/05/21/%E5%A4%A7%E8%AF%9D%E9%87%8D%E6%9E%84/"/>
      <url>/2020/05/21/%E5%A4%A7%E8%AF%9D%E9%87%8D%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="一-重构：改变既有代码的一剂良药"><a href="#一-重构：改变既有代码的一剂良药" class="headerlink" title="一.重构：改变既有代码的一剂良药"></a>一.重构：改变既有代码的一剂良药</h1><ul><li><p>什么是系统重构</p><p>系统重构就是不改变外部行为的基础上，改变软件的内部结构，使其易于阅读、维护、变更。</p></li><li><p>修改软件的四种动机</p><ul><li>增加新功能，改bug</li><li>改善原有程序结构</li><li>优化原有系统性能</li></ul><p>要提高软件内部质量，动机就是改善原有程序结构。</p></li></ul><h1 id="二-重构方法工具箱"><a href="#二-重构方法工具箱" class="headerlink" title="二.重构方法工具箱"></a>二.重构方法工具箱</h1><p>2.1 重构是一系列登录变换——第一次HelloWorld重构</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（五十九）</title>
      <link href="/2020/05/21/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B9%9D%EF%BC%89/"/>
      <url>/2020/05/21/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B9%9D%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>线路模块分页查询</li><li>百度分页栏</li><li>搜索条件分页查询</li><li>线路详情提示</li></ul><a id="more"></a><h1 id="一-旅游线路分页功能"><a href="#一-旅游线路分页功能" class="headerlink" title="一.旅游线路分页功能"></a>一.旅游线路分页功能</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><p><img src="image-20200521092722911.png" alt=""></p><p><img src="image-20200521094346450.png" alt=""></p><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><ul><li><p>PageBean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页对象</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageBean</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">//总记录数</span></span><br><span class="line">    <span class="keyword">private</span> Integer totalCount;</span><br><span class="line">    <span class="comment">//总页数</span></span><br><span class="line">    <span class="keyword">private</span> Integer totalPage;</span><br><span class="line">    <span class="comment">//结果集</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;E&gt; list;</span><br><span class="line">    <span class="comment">//当前页</span></span><br><span class="line">    <span class="keyword">private</span> Integer currentPage;</span><br><span class="line">    <span class="comment">//每页个数</span></span><br><span class="line">    <span class="keyword">private</span> Integer pageSize;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 头部 end --&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  $(function () &#123;</span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/CategoryServlet?action=findAll'</span>;</span><br><span class="line">    $.get(url, function (resp) &#123;</span><br><span class="line">      <span class="keyword">for</span> (let c of resp) &#123;</span><br><span class="line">        $(<span class="string">'#categoryUI'</span>).append(<span class="string">'&lt;li&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid='</span> + c.cid + <span class="string">'&amp;currentPage=1&amp;pageSize=10"&gt;'</span> + c.cname + <span class="string">'&lt;/a&gt;&lt;/li&gt;'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>RouteServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RouteServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RouteService routeService = (RouteService) BeanFactory.getBean(<span class="string">"routeService"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPage</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String currentPageStr = req.getParameter(<span class="string">"currentPage"</span>);</span><br><span class="line">        String pageSizeStr = req.getParameter(<span class="string">"pageSize"</span>);</span><br><span class="line">        String cid = req.getParameter(<span class="string">"cid"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.类型转换</span></span><br><span class="line">        <span class="keyword">if</span> (currentPageStr == <span class="keyword">null</span> || currentPageStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            currentPageStr = <span class="string">"1"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> currentPage = Integer.parseInt(currentPageStr);</span><br><span class="line">        <span class="keyword">if</span> (pageSizeStr == <span class="keyword">null</span> || pageSizeStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            pageSizeStr = <span class="string">"10"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> pageSize = Integer.parseInt(pageSizeStr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.调用service分页查询</span></span><br><span class="line">        PageBean&lt;Route&gt; pb=routeService.findByPage(currentPage,pageSize,cid);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.将分页对象设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"pb"</span>,pb);</span><br><span class="line">        req.setAttribute(<span class="string">"cid"</span>,cid);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.转发到 route_list.jsp</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"route_list.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServiceImpl</span> <span class="keyword">implements</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    RouteDao routeDao = sqlSession.getMapper(RouteDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    PageBean&lt;Route&gt; pageBean = <span class="keyword">new</span> PageBean&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    pageBean.setCurrentPage(currentPage);</span><br><span class="line">    pageBean.setPageSize(pageSize);</span><br><span class="line"></span><br><span class="line">    Integer totalCount = routeDao.findCount(cid);</span><br><span class="line">    pageBean.setTotalCount(totalCount);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> totalPage = (<span class="keyword">int</span>) Math.ceil(totalCount * <span class="number">1.0</span> / pageSize);</span><br><span class="line">    pageBean.setTotalPage(totalPage);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> index = (currentPage - <span class="number">1</span>) * pageSize;</span><br><span class="line"></span><br><span class="line">    List&lt;Route&gt; routeList = routeDao.findList(index,pageSize,cid);</span><br><span class="line">    pageBean.setList(routeList);</span><br><span class="line"></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> pageBean;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteDao</span> </span>&#123;</span><br><span class="line">  <span class="function">Integer <span class="title">findCount</span><span class="params">(String cid)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">List&lt;Route&gt; <span class="title">findList</span><span class="params">(@Param(<span class="string">"index"</span>)</span> <span class="keyword">int</span> index, @<span class="title">Param</span><span class="params">(<span class="string">"pageSize"</span>)</span> <span class="keyword">int</span> pageSize, @<span class="title">Param</span><span class="params">(<span class="string">"cid"</span>)</span> String cid)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RouteDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findCount"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        SELECT COUNT(*) FROM tab_route WHERE cid = #&#123;cid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findList"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Route"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_route WHERE cid = #&#123;cid&#125; limit #&#123;index&#125;,#&#123;pageSize&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"routeService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.RouteServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>route_list.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;线路列表&lt;/title&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/search.css"</span>&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"header.jsp"</span> %&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page_one"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"contant"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"crumbs"</span>&gt;</span><br><span class="line">          &lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/search.png"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">          &lt;p&gt;黑马旅行&gt;&lt;span&gt;搜索结果&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"xinxi clearfix"</span>&gt;</span><br><span class="line">          &lt;%--线路列表 start--%&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"header"</span>&gt;</span><br><span class="line">              &lt;span&gt;商品信息&lt;/span&gt;</span><br><span class="line">              &lt;span class="jg"&gt;价格&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">              &lt;c:forEach items=<span class="string">"$&#123;pb.list&#125;"</span> <span class="keyword">var</span>=<span class="string">"route"</span>&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"img"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;route.rimage&#125;"</span></span><br><span class="line">                                        width="300px" alt=""&gt;&lt;/div&gt;</span><br><span class="line">                  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"text1"</span>&gt;</span><br><span class="line">                    &lt;p&gt;$&#123;route.rname&#125;&lt;/p&gt;</span><br><span class="line">                    &lt;br/&gt;</span><br><span class="line">                    &lt;p&gt;$&#123;route.routeIntroduce&#125;&lt;/p&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"price"</span>&gt;</span><br><span class="line">                    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"price_num"</span>&gt;</span><br><span class="line">                      &lt;span&gt;&amp;yen;&lt;/span&gt;</span><br><span class="line">                      &lt;span&gt;$&#123;route.price&#125;&lt;/span&gt;</span><br><span class="line">                      &lt;span&gt;起&lt;/span&gt;</span><br><span class="line">                    &lt;/p&gt;</span><br><span class="line">                    &lt;p&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/route_detail.jsp"&gt;查看详情&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">              &lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page_num_inf"</span>&gt;</span><br><span class="line">              &lt;i&gt;&lt;/i&gt; 共</span><br><span class="line">              &lt;span&gt;12&lt;/span&gt;页&lt;span&gt;132&lt;/span&gt;条</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"pageNum"</span>&gt;</span><br><span class="line">              &lt;ul&gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage&gt;1&#125;"</span>&gt;</span><br><span class="line">                  &lt;li&gt;</span><br><span class="line">                    &lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=1"&gt;首页&lt;/a&gt;</span><br><span class="line">                  &lt;/li&gt;</span><br><span class="line">                  &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"threeword"</span>&gt;&lt;a</span><br><span class="line">                                           href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.currentPage-1&#125;"&gt;上一页&lt;/a&gt;</span><br><span class="line">                  &lt;/li&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                &lt;c:forEach begin=<span class="string">"1"</span> end=<span class="string">"$&#123;pb.totalPage&#125;"</span> <span class="keyword">var</span>=<span class="string">"page"</span>&gt;</span><br><span class="line">                  &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page == pb.currentPage&#125;"</span>&gt;</span><br><span class="line">                    &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"curPage"</span>&gt;&lt;a</span><br><span class="line">                                           href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;page&#125;"&gt;$&#123;page&#125;&lt;/a&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                  &lt;/c:if&gt;</span><br><span class="line">                  &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page != pb.currentPage&#125;"</span>&gt;</span><br><span class="line">                    &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"curPage"</span>&gt;&lt;a</span><br><span class="line">                                           href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;page&#125;"&gt;$&#123;page&#125;&lt;/a&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                  &lt;/c:if&gt;</span><br><span class="line">                &lt;/c:forEach&gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage &lt; pb.totalPage&#125;"</span>&gt;</span><br><span class="line">                  &lt;li class="threeword"&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.currentPage+1&#125;"&gt;下一页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                  &lt;li class="threeword"&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.totalPage&#125;"&gt;末页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;%--线路列表--%&gt;</span><br><span class="line">          &lt;%--热门推荐 start--%&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"top"</span>&gt;</span><br><span class="line">              &lt;div class="hot"&gt;HOT&lt;/div&gt;</span><br><span class="line">              &lt;span&gt;热门推荐&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;%--热门推荐 end--%&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"footer.jsp"</span> %&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-百度分页栏"><a href="#1-3-百度分页栏" class="headerlink" title="1.3 百度分页栏"></a>1.3 百度分页栏</h4><ul><li><p>修改PageBean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageBean</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">  <span class="comment">//总记录数</span></span><br><span class="line">  <span class="keyword">private</span> Integer totalCount;</span><br><span class="line">  <span class="comment">//总页数</span></span><br><span class="line">  <span class="keyword">private</span> Integer totalPage;</span><br><span class="line">  <span class="comment">//结果集</span></span><br><span class="line">  <span class="keyword">private</span> List&lt;E&gt; list;</span><br><span class="line">  <span class="comment">//当前页</span></span><br><span class="line">  <span class="keyword">private</span> Integer currentPage;</span><br><span class="line">  <span class="comment">//每页个数</span></span><br><span class="line">  <span class="keyword">private</span> Integer pageSize;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//起始值</span></span><br><span class="line">  <span class="keyword">private</span> Integer begin;</span><br><span class="line">  <span class="comment">//结束值</span></span><br><span class="line">  <span class="keyword">private</span> Integer end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Integer <span class="title">getBegin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 先去调用计算的方法</span></span><br><span class="line">    calculateBeginToEnd();</span><br><span class="line">    <span class="keyword">return</span> begin;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBegin</span><span class="params">(Integer begin)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.begin = begin;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 计算方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">calculateBeginToEnd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 不足10个页码</span></span><br><span class="line">    <span class="keyword">if</span> (totalPage &lt; <span class="number">10</span>) &#123;</span><br><span class="line">      begin = <span class="number">1</span>;</span><br><span class="line">      end = totalPage;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 超过10个页码</span></span><br><span class="line">      <span class="comment">// 前五后四规则</span></span><br><span class="line">      begin = currentPage - <span class="number">5</span>;</span><br><span class="line">      end = currentPage + <span class="number">4</span>;</span><br><span class="line">      <span class="comment">// 修正当起始值小于1的情况</span></span><br><span class="line">      <span class="keyword">if</span> (begin &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        begin = <span class="number">1</span>;</span><br><span class="line">        end = begin + <span class="number">9</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 修正结束值大于总页数的情况</span></span><br><span class="line">      <span class="keyword">if</span> (end &gt; totalPage) &#123;</span><br><span class="line">        end = totalPage;</span><br><span class="line">        begin = end - <span class="number">9</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改route_list.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;c:forEach begin=<span class="string">"$&#123;pb.begin&#125;"</span> end=<span class="string">"$&#123;pb.end&#125;"</span> <span class="keyword">var</span>=<span class="string">"page"</span>&gt;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">  </span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-搜索旅游线路分页功能"><a href="#二-搜索旅游线路分页功能" class="headerlink" title="二.搜索旅游线路分页功能"></a>二.搜索旅游线路分页功能</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><p><img src="image-20200521113719151.png" alt=""></p><h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"search"</span>&gt;</span><br><span class="line">  &lt;input id=<span class="string">"rname"</span> name=<span class="string">"rname"</span> type=<span class="string">"text"</span> placeholder=<span class="string">"请输入路线名称"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"search_input"</span> value=<span class="string">"$&#123;rname&#125;"</span></span><br><span class="line">         autocomplete=<span class="string">"off"</span>&gt;</span><br><span class="line">  &lt;a href="javascript:void(0);" onclick="searchClick()" class="search-button"&gt;搜索&lt;/a&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="function">function <span class="title">searchClick</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">// 获取搜索框value的属性值</span></span><br><span class="line">      let rname = $(<span class="string">'#rname'</span>).val();</span><br><span class="line">      <span class="comment">// 使用js方式发送请求</span></span><br><span class="line">      location.href=<span class="string">'$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;rname='</span>+rname;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>RouteServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RouteServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> RouteService routeService = (RouteService) BeanFactory.getBean(<span class="string">"routeService"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 分页查询</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPage</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.接收请求参数</span></span><br><span class="line">    String currentPageStr = req.getParameter(<span class="string">"currentPage"</span>);</span><br><span class="line">    String pageSizeStr = req.getParameter(<span class="string">"pageSize"</span>);</span><br><span class="line">    <span class="comment">// 分类cid</span></span><br><span class="line">    String cid = req.getParameter(<span class="string">"cid"</span>);</span><br><span class="line">    <span class="comment">// 线路搜索关键字</span></span><br><span class="line">    String rname = req.getParameter(<span class="string">"rname"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.类型转换</span></span><br><span class="line">    <span class="keyword">if</span> (currentPageStr == <span class="keyword">null</span> || currentPageStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">      currentPageStr = <span class="string">"1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> currentPage = Integer.parseInt(currentPageStr);</span><br><span class="line">    <span class="keyword">if</span> (pageSizeStr == <span class="keyword">null</span> || pageSizeStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">      pageSizeStr = <span class="string">"10"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> pageSize = Integer.parseInt(pageSizeStr);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.调用service分页查询</span></span><br><span class="line">    PageBean&lt;Route&gt; pb=routeService.findByPage(currentPage,pageSize,cid,rname);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.将分页对象设置到request域</span></span><br><span class="line">    req.setAttribute(<span class="string">"pb"</span>,pb);</span><br><span class="line">    <span class="comment">// 回显分类id</span></span><br><span class="line">    req.setAttribute(<span class="string">"cid"</span>,cid);</span><br><span class="line">    <span class="comment">// 回显搜索关键字</span></span><br><span class="line">    req.setAttribute(<span class="string">"rname"</span>,rname);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5.转发到 route_list.jsp</span></span><br><span class="line">    req.getRequestDispatcher(<span class="string">"route_list.jsp"</span>).forward(req,resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 无搜索条件分页查询</span></span><br><span class="line">    <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有搜索条件分页查询</span></span><br><span class="line">    <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid, String rname)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServiceImpl</span> <span class="keyword">implements</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        RouteDao routeDao = sqlSession.getMapper(RouteDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        PageBean&lt;Route&gt; pageBean = <span class="keyword">new</span> PageBean&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pageBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid, String rname)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建dao代理对象</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        RouteDao routeDao = sqlSession.getMapper(RouteDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 1.创建PageBean</span></span><br><span class="line">        PageBean&lt;Route&gt; pageBean = <span class="keyword">new</span> PageBean&lt;&gt;();</span><br><span class="line">        <span class="comment">// 2.封装当前页和每页个数</span></span><br><span class="line">        pageBean.setCurrentPage(currentPage);</span><br><span class="line">        pageBean.setPageSize(pageSize);</span><br><span class="line">        <span class="comment">// 3.调用dao查询总记录数，封装</span></span><br><span class="line">        Integer totalCount = routeDao.findCount(cid,rname);</span><br><span class="line">        pageBean.setTotalCount(totalCount);</span><br><span class="line">        <span class="comment">// 4.计算总页数，封装</span></span><br><span class="line">        <span class="keyword">int</span> totalPage = (<span class="keyword">int</span>) Math.ceil(totalCount * <span class="number">1.0</span> / pageSize);</span><br><span class="line">        pageBean.setTotalPage(totalPage);</span><br><span class="line">        <span class="comment">// 5.计算开始索引</span></span><br><span class="line">        <span class="keyword">int</span> index = (currentPage - <span class="number">1</span>) * pageSize;</span><br><span class="line">        <span class="comment">// 6.调用dao查询结果集，封装</span></span><br><span class="line">        List&lt;Route&gt; routeList = routeDao.findList(index,pageSize,cid,rname);</span><br><span class="line">        pageBean.setList(routeList);</span><br><span class="line">        <span class="comment">// 释放资源</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="comment">// 7.返回分页对象</span></span><br><span class="line">        <span class="keyword">return</span> pageBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//MyBatis框架Dao层禁止使用方法重载，否则会导致数据查询不正确</span></span><br><span class="line"></span><br><span class="line">  <span class="function">Integer <span class="title">findCount</span><span class="params">(@Param(<span class="string">"cid"</span>)</span> String cid, @<span class="title">Param</span><span class="params">(<span class="string">"rname"</span>)</span> String rname)</span>;</span><br><span class="line">  <span class="comment">//    Integer findCount(String cid);</span></span><br><span class="line"></span><br><span class="line">  <span class="function">List&lt;Route&gt; <span class="title">findList</span><span class="params">(@Param(<span class="string">"index"</span>)</span> <span class="keyword">int</span> index, @<span class="title">Param</span><span class="params">(<span class="string">"pageSize"</span>)</span> <span class="keyword">int</span> pageSize, @<span class="title">Param</span><span class="params">(<span class="string">"cid"</span>)</span> String cid, @<span class="title">Param</span><span class="params">(<span class="string">"rname"</span>)</span> String rname)</span>;</span><br><span class="line">  <span class="comment">//    List&lt;Route&gt; findList(@Param("index") int index, @Param("pageSize") int pageSize, @Param("cid") String cid);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RouteDao"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findCount"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">    SELECT COUNT(*) FROM tab_route</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"cid != null and cid != ''"</span>&gt;</span></span><br><span class="line">        and cid=#&#123;cid&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"rname != null and rname != ''"</span>&gt;</span></span><br><span class="line">        and rname like concat(concat('%',#&#123;rname&#125;),'%')</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findList"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Route"</span>&gt;</span></span><br><span class="line">    SELECT * FROM tab_route</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"cid != null and cid != ''"</span>&gt;</span></span><br><span class="line">        and cid=#&#123;cid&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"rname != null and rname != ''"</span>&gt;</span></span><br><span class="line">        and rname like concat(concat('%',#&#123;rname&#125;),'%')</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    limit #&#123;index&#125;,#&#123;pageSize&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>route_list.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page_num_inf"</span>&gt;</span><br><span class="line">  &lt;i&gt;&lt;/i&gt; 共</span><br><span class="line">  &lt;span&gt;12&lt;/span&gt;页&lt;span&gt;132&lt;/span&gt;条</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"pageNum"</span>&gt;</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage&gt;1&#125;"</span>&gt;</span><br><span class="line">      &lt;li&gt;</span><br><span class="line">        &lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=1&amp;rname=$&#123;rname&#125;"&gt;首页&lt;/a&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"threeword"</span>&gt;&lt;a</span><br><span class="line">                               href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.currentPage-1&#125;&amp;rname=$&#123;rname&#125;"&gt;上一页&lt;/a&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/c:if&gt;</span><br><span class="line">    &lt;c:forEach begin=<span class="string">"$&#123;pb.begin&#125;"</span> end=<span class="string">"$&#123;pb.end&#125;"</span> <span class="keyword">var</span>=<span class="string">"page"</span>&gt;</span><br><span class="line">      &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page == pb.currentPage&#125;"</span>&gt;</span><br><span class="line">        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"curPage"</span>&gt;&lt;a</span><br><span class="line">                               href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;page&#125;&amp;rname=$&#123;rname&#125;"&gt;$&#123;page&#125;&lt;/a&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/c:if&gt;</span><br><span class="line">      &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page != pb.currentPage&#125;"</span>&gt;</span><br><span class="line">        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"curPage"</span>&gt;&lt;a</span><br><span class="line">                               href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;page&#125;&amp;rname=$&#123;rname&#125;"&gt;$&#123;page&#125;&lt;/a&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/c:if&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage &lt; pb.totalPage&#125;"</span>&gt;</span><br><span class="line">      &lt;li class="threeword"&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.currentPage+1&#125;&amp;rname=$&#123;rname&#125;"&gt;下一页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;li class="threeword"&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.totalPage&#125;&amp;rname=$&#123;rname&#125;"&gt;末页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/c:if&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-旅游线路详情展示功能"><a href="#三-旅游线路详情展示功能" class="headerlink" title="三.旅游线路详情展示功能"></a>三.旅游线路详情展示功能</h1><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><p><img src="image-20200521142426127.png" alt=""></p><h4 id="3-2-代码实现-使用mybatis的嵌套查询来实现"><a href="#3-2-代码实现-使用mybatis的嵌套查询来实现" class="headerlink" title="3.2 代码实现(使用mybatis的嵌套查询来实现)"></a>3.2 代码实现(使用mybatis的嵌套查询来实现)</h4><ul><li><p>Route_list.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=routeDetail&amp;rid=$&#123;route.rid&#125;"&gt;查看详情&lt;/a&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure></li><li><p>RouteServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RouteServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RouteService routeService = (RouteService) BeanFactory.getBean(<span class="string">"routeService"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">routeDetail</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.接收请求参数 rid</span></span><br><span class="line">        String rid = req.getParameter(<span class="string">"rid"</span>);</span><br><span class="line">        <span class="comment">// 2.调用sercie查询</span></span><br><span class="line">        Route route = routeService.findDetail(rid);</span><br><span class="line">        <span class="comment">// 3.设置到reuqest域</span></span><br><span class="line">        req.setAttribute(<span class="string">"route"</span>,route);</span><br><span class="line">        <span class="comment">// 4.转发到 route_detail.jsp</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/route_detail.jsp"</span>).forward(req,resp);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPage</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String currentPageStr = req.getParameter(<span class="string">"currentPage"</span>);</span><br><span class="line">        String pageSizeStr = req.getParameter(<span class="string">"pageSize"</span>);</span><br><span class="line">        <span class="comment">// 分类cid</span></span><br><span class="line">        String cid = req.getParameter(<span class="string">"cid"</span>);</span><br><span class="line">        <span class="comment">// 线路搜索关键字</span></span><br><span class="line">        String rname = req.getParameter(<span class="string">"rname"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.类型转换</span></span><br><span class="line">        <span class="keyword">if</span> (currentPageStr == <span class="keyword">null</span> || currentPageStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            currentPageStr = <span class="string">"1"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> currentPage = Integer.parseInt(currentPageStr);</span><br><span class="line">        <span class="keyword">if</span> (pageSizeStr == <span class="keyword">null</span> || pageSizeStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            pageSizeStr = <span class="string">"10"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> pageSize = Integer.parseInt(pageSizeStr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.调用service分页查询</span></span><br><span class="line">        PageBean&lt;Route&gt; pb=routeService.findByPage(currentPage,pageSize,cid,rname);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.将分页对象设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"pb"</span>,pb);</span><br><span class="line">        <span class="comment">// 回显分类id</span></span><br><span class="line">        req.setAttribute(<span class="string">"cid"</span>,cid);</span><br><span class="line">        <span class="comment">// 回显搜索关键字</span></span><br><span class="line">        req.setAttribute(<span class="string">"rname"</span>,rname);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.转发到 route_list.jsp</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/route_list.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 无搜索条件分页查询</span></span><br><span class="line">    <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有搜索条件分页查询</span></span><br><span class="line">    <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid, String rname)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Route <span class="title">findDetail</span><span class="params">(String rid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//MyBatis框架Dao层禁止使用方法重载，否则会导致数据查询不正确</span></span><br><span class="line"></span><br><span class="line">    <span class="function">Integer <span class="title">findCount</span><span class="params">(@Param(<span class="string">"cid"</span>)</span> String cid, @<span class="title">Param</span><span class="params">(<span class="string">"rname"</span>)</span> String rname)</span>;</span><br><span class="line"><span class="comment">//    Integer findCount(String cid);</span></span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Route&gt; <span class="title">findList</span><span class="params">(@Param(<span class="string">"index"</span>)</span> <span class="keyword">int</span> index, @<span class="title">Param</span><span class="params">(<span class="string">"pageSize"</span>)</span> <span class="keyword">int</span> pageSize, @<span class="title">Param</span><span class="params">(<span class="string">"cid"</span>)</span> String cid, @<span class="title">Param</span><span class="params">(<span class="string">"rname"</span>)</span> String rname)</span>;</span><br><span class="line"><span class="comment">//    List&lt;Route&gt; findList(@Param("index") int index, @Param("pageSize") int pageSize, @Param("cid") String cid);</span></span><br><span class="line"></span><br><span class="line">    <span class="function">Route <span class="title">findByRidWithAll</span><span class="params">(String rid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RouteDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findCount"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        SELECT COUNT(*) FROM tab_route</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"cid != null and cid != ''"</span>&gt;</span></span><br><span class="line">                and cid=#&#123;cid&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"rname != null and rname != ''"</span>&gt;</span></span><br><span class="line">                and rname like concat(concat('%',#&#123;rname&#125;),'%')</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findList"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Route"</span>&gt;</span></span><br><span class="line">            SELECT * FROM tab_route</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"cid != null and cid != ''"</span>&gt;</span></span><br><span class="line">                and cid=#&#123;cid&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"rname != null and rname != ''"</span>&gt;</span></span><br><span class="line">                and rname like concat(concat('%',#&#123;rname&#125;),'%')</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">        limit #&#123;index&#125;,#&#123;pageSize&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"routeWithAllMap"</span> <span class="attr">type</span>=<span class="string">"com.itheima.domain.Route"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"rid"</span> <span class="attr">property</span>=<span class="string">"rid"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"rname"</span> <span class="attr">property</span>=<span class="string">"rname"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"price"</span> <span class="attr">property</span>=<span class="string">"price"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"routeIntroduce"</span> <span class="attr">property</span>=<span class="string">"routeIntroduce"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"rflag"</span> <span class="attr">property</span>=<span class="string">"rflag"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"rdate"</span> <span class="attr">property</span>=<span class="string">"rdate"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"rimage"</span> <span class="attr">property</span>=<span class="string">"rimage"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一对一嵌套 分类--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"category"</span> <span class="attr">javaType</span>=<span class="string">"com.itheima.domain.Category"</span> <span class="attr">column</span>=<span class="string">"cid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.CategoryDao.findByCid"</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一对一嵌套 商家--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"seller"</span> <span class="attr">javaType</span>=<span class="string">"com.itheima.domain.Seller"</span> <span class="attr">column</span>=<span class="string">"sid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.SellerDao.findBySid"</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一对一嵌套 图册列表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"routeImgList"</span> <span class="attr">ofType</span>=<span class="string">"com.itheima.domain.RouteImg"</span> <span class="attr">column</span>=<span class="string">"rid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.RouteImgDao.findByRid"</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByRidWithAll"</span> <span class="attr">resultMap</span>=<span class="string">"routeWithAllMap"</span>&gt;</span></span><br><span class="line">        select * from tab_route where rid = #&#123;rid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CategoryDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Category&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">Category <span class="title">findByCid</span><span class="params">(Integer cid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.CategoryDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Category"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_category ORDER BY cid</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByCid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Category"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_category WHERE cid = #&#123;cid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteImgDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteImgDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;RouteImg&gt; <span class="title">findByRid</span><span class="params">(Integer rid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteImgDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RouteImgDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByRid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.RouteImg"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_route_img WHERE rid = #&#123;rid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>SellerDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SellerDao</span> </span>&#123;</span><br><span class="line">    <span class="function">Seller <span class="title">findBySid</span><span class="params">(Integer sid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>SellerDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.SellerDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findBySid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Seller"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_seller WHERE sid = #&#123;sid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>route_detail.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 详情 start --&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"wrap"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"bread_box"</span>&gt;</span><br><span class="line">    &lt;a href="index.jsp"&gt;首页&lt;/a&gt;</span><br><span class="line">    &lt;span&gt; &amp;gt;&lt;/span&gt;</span><br><span class="line">    &lt;a href="#"&gt;$&#123;route.category.cname&#125;&lt;/a&gt;&lt;span&gt; &amp;gt;&lt;/span&gt;</span><br><span class="line">    &lt;a href="#"&gt;$&#123;route.rname&#125;&lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"prosum_box"</span>&gt;</span><br><span class="line">    &lt;dl <span class="class"><span class="keyword">class</span></span>=<span class="string">"prosum_left"</span>&gt;</span><br><span class="line">      &lt;dt&gt;</span><br><span class="line">        &lt;img alt=<span class="string">""</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"big_img"</span> src=<span class="string">"$&#123;route.rimage&#125;"</span>&gt;</span><br><span class="line">      &lt;/dt&gt;</span><br><span class="line">      &lt;dd&gt;</span><br><span class="line">        &lt;a class="up_img up_img_disable"&gt;&lt;/a&gt;</span><br><span class="line">        &lt;c:forEach items=<span class="string">"$&#123;route.routeImgList&#125;"</span> <span class="keyword">var</span>=<span class="string">"routeImg"</span>&gt;</span><br><span class="line">          &lt;a title=<span class="string">""</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"little_img"</span> data-bigpic=<span class="string">"$&#123;routeImg.bigPic&#125;"</span>&gt;</span><br><span class="line">            &lt;img src=<span class="string">"$&#123;routeImg.smallPic&#125;"</span>&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">        &lt;/c:forEach&gt;</span><br><span class="line">        &lt;a class="down_img down_img_disable" style="margin-bottom: 0;"&gt;&lt;/a&gt;</span><br><span class="line">      &lt;/dd&gt;</span><br><span class="line">    &lt;/dl&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"prosum_right"</span>&gt;</span><br><span class="line">      &lt;p class="pros_title"&gt;$&#123;route.rname&#125;&lt;/p&gt;</span><br><span class="line">      &lt;p class="hot"&gt;$&#123;route.routeIntroduce&#125;&lt;/p&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"pros_other"</span>&gt;</span><br><span class="line">        &lt;p&gt;经营商家  ：$&#123;route.seller.sname&#125;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;咨询电话 : $&#123;route.seller.consphone&#125;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;地址 ： $&#123;route.seller.address&#125;&lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 旅游线路分页功能</strong></p><p><strong>### 需求分析</strong></p><p>- 表关系</p><p>- 整体流程</p><p>- 后端代码流程</p><p>- 前端EL表达式</p><p><strong>### 百度分页</strong></p><p><strong>## 二 搜索旅游线路分页功能</strong></p><p><strong>### 需求分析</strong></p><p><strong>## 三 旅游线路详情展示功能</strong></p><p><strong>### 需求分析</strong></p><p>- 表关系</p><p>- 实体类</p><p>- 嵌套查询</p><p>- 页面展示</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（五十八）</title>
      <link href="/2020/05/20/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E5%85%AB%EF%BC%89/"/>
      <url>/2020/05/20/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E5%85%AB%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>NoSQL</li><li>Redis入门<ul><li>5种数据类型</li></ul></li><li>Jedis入门</li><li>优化黑马旅游网</li></ul><a id="more"></a><h1 id="一-NoSQL"><a href="#一-NoSQL" class="headerlink" title="一.NoSQL"></a>一.NoSQL</h1><h4 id="1-1-NoSQL介绍"><a href="#1-1-NoSQL介绍" class="headerlink" title="1.1 NoSQL介绍"></a>1.1 NoSQL介绍</h4><p>NoSQL(Not-Only SQL)，泛指非关系型的数据库，它可以作为关系型数据库的良好补充。</p><table><thead><tr><th></th><th>关系型数据库</th><th>非关系型数据库</th></tr></thead><tbody><tr><td>特点</td><td>数据直接存在关联关系</td><td>数据之间没有关联关系</td></tr><tr><td></td><td>所有数据都在磁盘中</td><td>所有数据都在内存中</td></tr><tr><td></td><td></td><td></td></tr><tr><td>总结</td><td>存储复杂关系模型，硬盘io速度较慢</td><td>只能存储简单数据模型，内存io查询速度快</td></tr></tbody></table><ul><li><p>为什么学习NoSQL</p><blockquote><p>高并发、高可用、高性能、海量数据</p></blockquote><p>传统的关系型数据库出现了性能和扩展的瓶颈，所以非关系型数据库应时而生，解决了互联网产品的三 高和海量数据的问题</p><p>NoSQL和关系型的数据库是互补关系，在各自的应用场景中都有自己的特点，一般情况下我们使用关系 型数据库持久化数据(处理复杂的业务场景)，对一些热点数据通过NoSQL来作为缓存提高效率</p></li><li><p>使用后</p><ul><li>先查找缓存</li><li>没有数据再查找数据库</li></ul></li></ul><h4 id="1-2-NoSQL的主流产品"><a href="#1-2-NoSQL的主流产品" class="headerlink" title="1.2 NoSQL的主流产品"></a>1.2 NoSQL的主流产品</h4><table><thead><tr><th>分类</th><th>特点</th><th>代表产品</th></tr></thead><tbody><tr><td>键值存储</td><td>数据一般存在内存中，读写速度快(10w/s)，适合作为缓存服务</td><td>redis</td></tr><tr><td>文档型数据库</td><td>数据结构要求不严格，适合存储结构不确定或者价值较低的数据</td><td>mongodb</td></tr><tr><td>列存储数据库</td><td>查找速度快，更容易进行分布式扩展，适合作为文件存储服务</td><td>Hbase</td></tr><tr><td>图形数据库</td><td>使用“图结构”进行存储，适合做社交网络计算等等</td><td>Neo4j</td></tr></tbody></table><ul><li><p>图形数据库介绍</p><p><a href="https://blog.csdn.net/xlgen157387/article/details/79085901">https://blog.csdn.net/xlgen157387/article/details/79085901</a></p></li></ul><h1 id="二-Redis"><a href="#二-Redis" class="headerlink" title="二.Redis"></a>二.Redis</h1><h4 id="2-1-Redis介绍"><a href="#2-1-Redis介绍" class="headerlink" title="2.1 Redis介绍"></a>2.1 Redis介绍</h4><p>Redis(Remote Dictionary Server)是用C语言开发的一个开源的高性能键值对数据库。它的所有数据 都是保存在内存中的,这也就决定了其读写速度之快,是其它硬盘保存数据的系统所无法匹敌的。</p><p>官方曾经给出过一组测试数据，50个并发执行100000个请求: 读的速度是110000次/s,写的速度是 81000次/s</p><h4 id="2-2-Redis安装和使用"><a href="#2-2-Redis安装和使用" class="headerlink" title="2.2 Redis安装和使用"></a>2.2 Redis安装和使用</h4><ul><li><p>下载</p><p>Reids官网地址:<a href="http://redis.io">http://redis.io</a> </p><p>中文网地址:<a href="https://www.redis.net.cn/">https://www.redis.net.cn/</a></p><p>docker</p><ul><li><p>docker pull redis</p></li><li><p>Linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://download.redis.io/releases/redis-6.0.3.tar.gz</span><br><span class="line">$ tar xzf redis-6.0.3.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> redis-6.0.3</span><br><span class="line">$ make</span><br><span class="line"></span><br><span class="line">$ src/redis-server</span><br><span class="line"></span><br><span class="line">$ src/redis-cli</span><br><span class="line">redis&gt; <span class="built_in">set</span> foo bar</span><br><span class="line">OK</span><br><span class="line">redis&gt; get foo</span><br><span class="line"><span class="string">"bar"</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>目录</p><p>redis.conf:配置文件 </p></li></ul><h4 id="2-3-Redis客户端图形化工具"><a href="#2-3-Redis客户端图形化工具" class="headerlink" title="2.3 Redis客户端图形化工具"></a>2.3 Redis客户端图形化工具</h4><p>Redis Client 、Redis Desktop Manager 、Redis Studio.</p><h4 id="2-4-Redis数据结构"><a href="#2-4-Redis数据结构" class="headerlink" title="2.4 Redis数据结构"></a>2.4 Redis数据结构</h4><p>Redis采用的键值对存储数据，键(key)的类型只能为字符串，值(value)支持五种数据类型:</p><table><thead><tr><th>K-V类型</th><th>key(字符串)</th><th>value(支持5种类型)</th></tr></thead><tbody><tr><td>字符串：String</td><td>mystr</td><td>stringcode</td></tr><tr><td>哈希：HashMap</td><td>myhash</td><td>map集合(key:0),(value:100)</td></tr><tr><td>双向链表：LinkedList</td><td>mylist</td><td>左压栈—A-A–B–右压栈(有序且可重复)</td></tr><tr><td>无序集合：HashSet</td><td>myset</td><td>A|C|B|E|D        (无序但不可重复)</td></tr><tr><td>有序集合：LinkedHashSet</td><td>myzset</td><td>A|B|C|D|E        (有序但不可重复)</td></tr></tbody></table><h4 id="2-5-Redis命令操作"><a href="#2-5-Redis命令操作" class="headerlink" title="2.5 Redis命令操作"></a>2.5 Redis命令操作</h4><p>Redis命令是用来操作Redis数据库的, 就相当于操作MySql数据库时的SQL语句。</p><p>Redis的命令根据要操作的值(value)的数据结构的不同而不同, 每种数据类型都有自己的操作命令</p><h5 id="2-5-1-String字符串"><a href="#2-5-1-String字符串" class="headerlink" title="2.5.1 String字符串"></a>2.5.1 String字符串</h5><p>字符串类型是Redis中最为基础的数据存储类型。 </p><p>在Redis中字符串类型的Value最多可以容纳的数据长度是512MB。</p><table><thead><tr><th></th><th>用法</th></tr></thead><tbody><tr><td>新增</td><td>set key value [EX seconds | PX milliseconds] [NX | XX] [KEEPTTL]</td></tr><tr><td>查询</td><td>get key</td></tr><tr><td>删除</td><td>del key [key …]</td></tr><tr><td>新增并指定存活时间</td><td>setex key seconds value</td></tr><tr><td></td><td>ttl key       查看存活时间</td></tr><tr><td>主键自增器</td><td>incr key     (value默认加1)</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> mystr stringcode</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get mystr</span><br><span class="line"><span class="string">"stringcode"</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> mystr new_stringcode</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get mystr</span><br><span class="line"><span class="string">"new_stringcode"</span></span><br><span class="line">127.0.0.1:6379&gt; setex testcount 10 test10seconds</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; ttl testcount</span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br><span class="line">127.0.0.1:6379&gt; get testcount</span><br><span class="line"><span class="string">"test10seconds"</span></span><br><span class="line">127.0.0.1:6379&gt; ttl testcount</span><br><span class="line">(<span class="built_in">integer</span>) -2</span><br><span class="line">127.0.0.1:6379&gt; get testcount</span><br><span class="line">(nil)</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-2-Hash哈希"><a href="#2-5-2-Hash哈希" class="headerlink" title="2.5.2 Hash哈希"></a>2.5.2 Hash哈希</h5><p>Hash类型极其类似于java中的Map,值里面可以存放一组组的键值对 </p><p>该类型非常适合于存储java中对象的信息</p><table><thead><tr><th></th><th>用法</th></tr></thead><tbody><tr><td>新增</td><td>hset key field value [field value …]</td></tr><tr><td>查询</td><td>hget key field</td></tr><tr><td></td><td>hgetall key</td></tr><tr><td>删除</td><td>hdel key field [field …]</td></tr><tr><td></td><td>del key [key …]</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hset user_1 name Jack</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; hset user_1 age 18</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; hget user_1 name</span><br><span class="line"><span class="string">"Jack"</span></span><br><span class="line">127.0.0.1:6379&gt; hgetall user_1</span><br><span class="line">1) <span class="string">"name"</span></span><br><span class="line">2) <span class="string">"Jack"</span></span><br><span class="line">3) <span class="string">"age"</span></span><br><span class="line">4) <span class="string">"18"</span></span><br><span class="line">127.0.0.1:6379&gt; hdel user_1 age</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; hgetall user_1</span><br><span class="line">1) <span class="string">"name"</span></span><br><span class="line">2) <span class="string">"Jack"</span></span><br><span class="line">127.0.0.1:6379&gt; del user_1</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">"mystr"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-3-List列表"><a href="#2-5-3-List列表" class="headerlink" title="2.5.3 List列表"></a>2.5.3 List列表</h5><p>List类型底层是一个双向字符串链表。里面的元素是有序的，可重复的</p><p>我们可以从链表的任何一端进行元素的增删</p><table><thead><tr><th align="right"></th><th align="center"><div align="center">redis的list是一个双向列表</th><th align="left"></th></tr></thead><tbody><tr><td align="right"></td><td align="center"><div align="center"> ===========================</td><td align="left"></td></tr><tr><td align="right">b</td><td align="center"><div align="center">  a</td><td align="left">c</td></tr><tr><td align="right"></td><td align="center"><div align="center">  ===========================</td><td align="left"></td></tr></tbody></table><table><thead><tr><th></th><th>用法</th><th></th></tr></thead><tbody><tr><td>新增</td><td>lpush key element [element …]</td><td>将元素压入左侧顶端</td></tr><tr><td></td><td>rpush key element [element …]</td><td>将元素压入右侧顶端</td></tr><tr><td>查询</td><td>lrange key start stop</td><td>从左向右查询<br />0 -1 查看所有</td></tr><tr><td>删除</td><td>lpop key</td><td>将左侧顶端元素弹出</td></tr><tr><td></td><td>rpop key</td><td>将右侧顶端元素弹出</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; lpush mylist a</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; lpush mylist b</span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379&gt; lpush mylist c</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">127.0.0.1:6379&gt; lrange mylist 0 -1</span><br><span class="line">1) <span class="string">"c"</span></span><br><span class="line">2) <span class="string">"b"</span></span><br><span class="line">3) <span class="string">"a"</span></span><br><span class="line">127.0.0.1:6379&gt; rpush mylist a</span><br><span class="line">(<span class="built_in">integer</span>) 4</span><br><span class="line">127.0.0.1:6379&gt; lrange mylist 0 -1</span><br><span class="line">1) <span class="string">"c"</span></span><br><span class="line">2) <span class="string">"b"</span></span><br><span class="line">3) <span class="string">"a"</span></span><br><span class="line">4) <span class="string">"a"</span></span><br><span class="line">127.0.0.1:6379&gt; lpop mylist</span><br><span class="line"><span class="string">"c"</span></span><br><span class="line">127.0.0.1:6379&gt; rpop mylist</span><br><span class="line"><span class="string">"a"</span></span><br><span class="line">127.0.0.1:6379&gt; lrange mylist 0 -1</span><br><span class="line">1) <span class="string">"b"</span></span><br><span class="line">2) <span class="string">"a"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-4-Set集合（无序）"><a href="#2-5-4-Set集合（无序）" class="headerlink" title="2.5.4 Set集合（无序）"></a>2.5.4 Set集合（无序）</h5><p>Set类型底层是一张hash表。里面的元素是无序的，不可重复的</p><table><thead><tr><th></th><th>用法</th><th></th></tr></thead><tbody><tr><td>新增</td><td>sadd key member [member …]</td><td>新增指定key元素</td></tr><tr><td>查询</td><td>smembers key</td><td>查询指定key元素</td></tr><tr><td>删除</td><td>srem key member [member …]</td><td>删除指定元素</td></tr><tr><td></td><td>del key [key …]</td><td>删除整个set集合</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sadd myset a</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset b</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset c</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset f</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset e</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset d</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset a</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; smembers myset</span><br><span class="line">1) <span class="string">"c"</span></span><br><span class="line">2) <span class="string">"f"</span></span><br><span class="line">3) <span class="string">"b"</span></span><br><span class="line">4) <span class="string">"e"</span></span><br><span class="line">5) <span class="string">"a"</span></span><br><span class="line">6) <span class="string">"d"</span></span><br><span class="line">127.0.0.1:6379&gt; srem myset a</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; smembers myset</span><br><span class="line">1) <span class="string">"c"</span></span><br><span class="line">2) <span class="string">"f"</span></span><br><span class="line">3) <span class="string">"b"</span></span><br><span class="line">4) <span class="string">"e"</span></span><br><span class="line">5) <span class="string">"d"</span></span><br><span class="line">127.0.0.1:6379&gt; del myset</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; smembers myset</span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-5-ZSet集合（有序）"><a href="#2-5-5-ZSet集合（有序）" class="headerlink" title="2.5.5 ZSet集合（有序）"></a>2.5.5 ZSet集合（有序）</h5><p>Zset,也称sortedSet, 在Set的基础上，加入了有序功能，在添加元素的时候，允许指定一个分数，它会 按照这个分数排序</p><table><thead><tr><th></th><th>用法</th><th></th></tr></thead><tbody><tr><td>新增</td><td>zadd key [NX | XX] [CH] [INCR] score member [score member …]</td><td>新增指定key元素</td></tr><tr><td>查询</td><td>zrange key start stop [WITHSCORES]</td><td>升序</td></tr><tr><td></td><td>zrevrange key start stop [WITHSCORES]</td><td>降序</td></tr><tr><td>删除</td><td>zrem key member [member …]</td><td>删除指定元素</td></tr><tr><td></td><td>del key [key …]</td><td>删除整个zset集合</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zadd myzset 10 aaaaa</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zadd myzset 30 bbbbb</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zadd myzset 20 ccccc</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zrange myzset 0 100</span><br><span class="line">1) <span class="string">"aaaaa"</span></span><br><span class="line">2) <span class="string">"ccccc"</span></span><br><span class="line">3) <span class="string">"bbbbb"</span></span><br><span class="line">127.0.0.1:6379&gt; zrange myzset 0 100 withscores</span><br><span class="line">1) <span class="string">"aaaaa"</span></span><br><span class="line">2) <span class="string">"10"</span></span><br><span class="line">3) <span class="string">"ccccc"</span></span><br><span class="line">4) <span class="string">"20"</span></span><br><span class="line">5) <span class="string">"bbbbb"</span></span><br><span class="line">6) <span class="string">"30"</span></span><br><span class="line">127.0.0.1:6379&gt; zrevrange myzset 0 100</span><br><span class="line">1) <span class="string">"bbbbb"</span></span><br><span class="line">2) <span class="string">"ccccc"</span></span><br><span class="line">3) <span class="string">"aaaaa"</span></span><br><span class="line">127.0.0.1:6379&gt; zrevrange myzset 0 100 withscores</span><br><span class="line">1) <span class="string">"bbbbb"</span></span><br><span class="line">2) <span class="string">"30"</span></span><br><span class="line">3) <span class="string">"ccccc"</span></span><br><span class="line">4) <span class="string">"20"</span></span><br><span class="line">5) <span class="string">"aaaaa"</span></span><br><span class="line">6) <span class="string">"10"</span></span><br><span class="line">127.0.0.1:6379&gt; zrem myzset aaaaa</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zrevrange myzset 0 100</span><br><span class="line">1) <span class="string">"bbbbb"</span></span><br><span class="line">2) <span class="string">"ccccc"</span></span><br><span class="line">127.0.0.1:6379&gt; del myzset</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zrevrange myzset 0 100</span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-6-通用命令"><a href="#2-5-6-通用命令" class="headerlink" title="2.5.6 通用命令"></a>2.5.6 通用命令</h5><table><thead><tr><th></th><th>命令</th></tr></thead><tbody><tr><td>模糊查询键</td><td>keys *</td></tr><tr><td>删除多个键</td><td>del key [key …]</td></tr><tr><td>根据键判断记录是否存在</td><td>exists key[key …]</td></tr><tr><td>根据键判断值类型</td><td>type key</td></tr><tr><td>选择数据库</td><td>select index (0~15)</td></tr><tr><td>清空当前数据库</td><td>flushdb [ASYNC]</td></tr><tr><td>清空所有数据库</td><td>flushall [ASYNC]</td></tr></tbody></table><h4 id="2-6-Redis持久化"><a href="#2-6-Redis持久化" class="headerlink" title="2.6 Redis持久化"></a>2.6 Redis持久化</h4><p>Redis的数据都是存在在内存之中的，那么这样一旦出现宕机，势必会导致数据的丢失，这就需要持久化操作，也就是要将redis在内存中的数据写到硬盘上保存。 </p><p>注意，redis虽然有持久化操作，但是其全部数据依旧都在内存中存在,也就是说硬盘上的只是为了安全和备份。</p><p>Redis提供了两种数据持久化的方式，分别是 RDB 和 AOF</p><ul><li><p>RDB:默认开启</p><p>在redis运行期间，根据指定时间节点对内存的数据进行快照拍摄，持久化到磁盘文件(dump.rdb文件) 指定时间规则拍摄快照</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">cat redis.conf | tail -n +265 | head -n 25    </span><br><span class="line"></span><br><span class="line"><span class="comment">################################ SNAPSHOTTING  ################################</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Save the DB on disk:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   save &lt;seconds&gt; &lt;changes&gt;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   Will save the DB if both the given number of seconds and the given</span></span><br><span class="line"><span class="comment">#   number of write operations against the DB occurred.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   In the example below the behaviour will be to save:</span></span><br><span class="line"><span class="comment">#   after 900 sec (15 min) if at least 1 key changed</span></span><br><span class="line"><span class="comment">#   after 300 sec (5 min) if at least 10 keys changed</span></span><br><span class="line"><span class="comment">#   after 60 sec if at least 10000 keys changed</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   Note: you can disable saving completely by commenting out all "save" lines.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   It is also possible to remove all the previously configured save</span></span><br><span class="line"><span class="comment">#   points by adding a save directive with a single empty string argument</span></span><br><span class="line"><span class="comment">#   like in the following example:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   save ""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1个key修改，15min后拍摄一次快照</span></span><br><span class="line">save 900 1</span><br><span class="line"><span class="comment">#10个key修改，5min后拍摄一次快照</span></span><br><span class="line">save 300 10</span><br><span class="line"><span class="comment">#10000个key修改，1min后拍摄一次快照</span></span><br><span class="line">save 60 10000</span><br></pre></td></tr></table></figure></li><li><p>AOF:默认关闭，需要手动开启</p><p>在redis运行期间，以日志记录的方式监听set操作，持久化到磁盘文件(appendonly.aof) </p><p>开启AOF:修改 redis.conf配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">cat redis.conf | tail -n +1018 | head -n 53          </span><br><span class="line"></span><br><span class="line"><span class="comment">############################## APPEND ONLY MODE ###############################</span></span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="comment"># Please check http://redis.io/topics/persistence for more information.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#若开启设置为yes</span></span><br><span class="line">appendonly no</span><br><span class="line"></span><br><span class="line"><span class="comment"># The name of the append only file (default: "appendonly.aof")</span></span><br><span class="line"></span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The fsync() call tells the Operating System to actually write data on disk</span></span><br><span class="line"><span class="comment"># instead of waiting for more data in the output buffer. Some OS will really flush</span></span><br><span class="line"><span class="comment"># data on disk, some other OS will just try to do it ASAP.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="comment">#日志持久化机制</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#每次执行set操作时都会持久化一次</span></span><br><span class="line"><span class="comment"># appendfsync always</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#每秒持久化一次</span></span><br><span class="line">appendfsync everysec</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据服务器，cpu处于idle情况，持久化一次</span></span><br><span class="line"><span class="comment"># appendfsync no</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="2-6-1-知识小结"><a href="#2-6-1-知识小结" class="headerlink" title="2.6.1 知识小结"></a>2.6.1 知识小结</h5><p>这二种持久化机制可以共存</p><table><thead><tr><th></th><th>RDB:把redis作为缓存来用</th><th>AOF:把redis作为独立数据库</th></tr></thead><tbody><tr><td>优点</td><td>性能高</td><td>几乎不会丢失数据</td></tr><tr><td>缺点</td><td>可能会丢失部分数据</td><td>性能较差</td></tr></tbody></table><h4 id="2-7-应用场景"><a href="#2-7-应用场景" class="headerlink" title="2.7 应用场景"></a>2.7 应用场景</h4><h5 id="2-7-1-缓存"><a href="#2-7-1-缓存" class="headerlink" title="2.7.1 缓存"></a>2.7.1 缓存</h5><p>将一些经常访问但又不会经常修改的数据，进行缓存，提高查询效率</p><h5 id="2-7-2-秒杀"><a href="#2-7-2-秒杀" class="headerlink" title="2.7.2 秒杀"></a>2.7.2 秒杀</h5><table><thead><tr><th>浏览器</th><th>➡秒杀</th><th>redis服务器</th><th>➡同步</th><th>MySQL</th></tr></thead><tbody><tr><td>商品</td><td></td><td>扣库存</td><td></td><td>同步数据</td></tr><tr><td></td><td></td><td>生成订单</td><td></td><td></td></tr><tr><td></td><td></td><td>支付发货</td><td></td><td></td></tr></tbody></table><h5 id="2-7-3-微博热搜"><a href="#2-7-3-微博热搜" class="headerlink" title="2.7.3 微博热搜"></a>2.7.3 微博热搜</h5><table><thead><tr><th>微博app</th><th>➡</th><th>redis</th></tr></thead><tbody><tr><td>微博热搜</td><td></td><td>ZSet评分有序集合</td></tr></tbody></table><h5 id="2-7-4-分布式session"><a href="#2-7-4-分布式session" class="headerlink" title="2.7.4 分布式session"></a>2.7.4 分布式session</h5><table><thead><tr><th>User</th><th>➡</th><th>Tomcat服务器</th><th>➡</th><th>redis</th></tr></thead><tbody><tr><td></td><td>第一次访问</td><td>Server_1</td><td>设置</td><td></td></tr><tr><td>User</td><td></td><td></td><td></td><td>User</td></tr><tr><td></td><td>第二次访问</td><td>Server_2</td><td>查询</td><td></td></tr></tbody></table><h5 id="2-7-5-验证码存储"><a href="#2-7-5-验证码存储" class="headerlink" title="2.7.5 验证码存储"></a>2.7.5 验证码存储</h5><table><thead><tr><th>网站</th><th>➡</th><th>redis</th></tr></thead><tbody><tr><td>发送短信</td><td></td><td>手机号:6位随机验证码</td></tr><tr><td></td><td></td><td>精准控制session只有5min</td></tr></tbody></table><h1 id="三-Jedis"><a href="#三-Jedis" class="headerlink" title="三.Jedis"></a>三.Jedis</h1><h4 id="3-1-Jedis使用"><a href="#3-1-Jedis使用" class="headerlink" title="3.1 Jedis使用"></a>3.1 Jedis使用</h4><p>Redis作为一款优秀的缓存服务器存在，大多数语言都提供了连接Redis的驱动包，在java中，比较出名</p><p>的是Jedis和Redisson，我们今天以Jedis为例学习，看看如何是用程序操作redis。</p><ul><li><p>常用API</p><table><thead><tr><th>方法</th><th>解释</th></tr></thead><tbody><tr><td>new Jedis(host, port)</td><td>创建jedis对象，参数host是redis服务器地址，参数port是redis服务端口</td></tr><tr><td>set(key,value)</td><td>设置字符串类型的数据</td></tr><tr><td>get(key)</td><td>获得字符串类型的数据</td></tr><tr><td>hset(key,field,value)</td><td>设置哈希类型的数据</td></tr><tr><td>hget(key,field)</td><td>获得哈希类型的数据</td></tr><tr><td>lpush(key,values)</td><td>设置列表类型的数据</td></tr><tr><td>lpop(key)</td><td>列表左面弹栈</td></tr><tr><td>rpop(key)</td><td>列表右面弹栈</td></tr><tr><td>del(key)</td><td>删除指定的key</td></tr></tbody></table></li></ul><ul><li><p>快速入门</p><ul><li><p>导入相关坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--jedis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>编写代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 快速入门之，向redis设置string类型的数据</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">// 1.创建连接对象</span></span><br><span class="line">    <span class="comment">// 默认连接 127.0.0.1 主机 和 6379 端口</span></span><br><span class="line">    Jedis jedis = <span class="keyword">new</span> Jedis();</span><br><span class="line">    <span class="comment">// 2.调用set方法设置数据</span></span><br><span class="line">    jedis.set(<span class="string">"Java"</span>, <span class="string">"Hello,World"</span>);</span><br><span class="line">    <span class="comment">// 3.释放资源</span></span><br><span class="line">    jedis.close();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 快速入门之，查询string类型数据</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQuery</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">// 1.创建连接对象</span></span><br><span class="line">    Jedis jedis = <span class="keyword">new</span> Jedis();</span><br><span class="line">    <span class="comment">// 2.调用get方法获取</span></span><br><span class="line">    String java = jedis.get(<span class="string">"Java"</span>);</span><br><span class="line">    System.out.println(java);</span><br><span class="line">    <span class="comment">// 3.释放资源</span></span><br><span class="line">    jedis.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-2-Jedis连接池"><a href="#3-2-Jedis连接池" class="headerlink" title="3.2 Jedis连接池"></a>3.2 Jedis连接池</h4><p>jedis连接资源的创建与销毁是非常消耗性能的，所以我们不希望频繁的创建和销毁它.基于这样的需求,就有了JedisPool技术。</p><ul><li><p>快速入门</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisPoolTest</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 测试jedis内置的连接池</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJedisPool</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 0.连接池配置对象</span></span><br><span class="line">    JedisPoolConfig jedisPoolConfig = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">    <span class="comment">// 最大连接数</span></span><br><span class="line">    jedisPoolConfig.setMaxTotal(<span class="number">100</span>);</span><br><span class="line">    <span class="comment">// 最大等待时间，单位是毫秒</span></span><br><span class="line">    jedisPoolConfig.setMaxWaitMillis(<span class="number">3000</span>);</span><br><span class="line">    <span class="comment">// 最大空闲连接数</span></span><br><span class="line">    jedisPoolConfig.setMaxIdle(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.创建连接池对象</span></span><br><span class="line">    JedisPool jedisPool = <span class="keyword">new</span> JedisPool();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.从池中获取连接</span></span><br><span class="line">    Jedis jedis = jedisPool.getResource();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.操作api</span></span><br><span class="line">    jedis.hset(<span class="string">"myhash"</span>, <span class="string">"id"</span>, <span class="string">"1"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.归还到连接池</span></span><br><span class="line">    jedis.close();</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>抽取为连接池工具类</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">jedis.host</span>=<span class="string">localhost</span></span><br><span class="line"><span class="meta">jedis.port</span>=<span class="string">6379</span></span><br><span class="line"><span class="meta">jedis.maxTotal</span>=<span class="string">20</span></span><br><span class="line"><span class="meta">jedis.maxIdle</span>=<span class="string">10</span></span><br></pre></td></tr></table></figure></li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> JedisPool jedisPool;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> String host;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Integer port;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Integer maxTotal;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Integer maxIdle;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始化连接池</span></span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">      ResourceBundle jedis = ResourceBundle.getBundle(<span class="string">"jedis"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 读取配置文件给变量赋值</span></span><br><span class="line">      <span class="comment">// 获取类加载读取 jedis.properties 获取io流</span></span><br><span class="line">      InputStream is = JedisUtils.class.getClassLoader().getResourceAsStream("jedis.properties");</span><br><span class="line">      <span class="comment">// 创建properties对象 加载io流</span></span><br><span class="line">      Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">      properties.load(is);</span><br><span class="line">      <span class="comment">// 给变量赋值</span></span><br><span class="line">      host = properties.getProperty(<span class="string">"jedis.host"</span>);</span><br><span class="line">      port = Integer.parseInt(properties.getProperty(<span class="string">"jedis.port"</span>));</span><br><span class="line">      maxTotal = Integer.parseInt(properties.getProperty(<span class="string">"jedis.maxTotal"</span>));</span><br><span class="line">      maxIdle = Integer.parseInt(properties.getProperty(<span class="string">"jedis.maxIdle"</span>));</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 创建连接池配置对象</span></span><br><span class="line">      JedisPoolConfig jedisPoolConfig = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">      jedisPoolConfig.setMaxTotal(maxTotal);</span><br><span class="line">      jedisPoolConfig.setMaxIdle(maxIdle);</span><br><span class="line">      <span class="comment">// 创建连接池对象</span></span><br><span class="line">      jedisPool = <span class="keyword">new</span> JedisPool(jedisPoolConfig, host, port);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 提供获取jedis连接的方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Jedis <span class="title">getJedis</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> jedisPool.getResource();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四-黑马旅游网"><a href="#四-黑马旅游网" class="headerlink" title="四.黑马旅游网"></a>四.黑马旅游网</h1><h4 id="4-1-缓存：导航条分类"><a href="#4-1-缓存：导航条分类" class="headerlink" title="4.1 缓存：导航条分类"></a>4.1 缓存：导航条分类</h4><h5 id="4-1-1-需求分析"><a href="#4-1-1-需求分析" class="headerlink" title="4.1.1 需求分析"></a>4.1.1 需求分析</h5><table><thead><tr><th>前端页面</th><th>➡</th><th>JavaServer</th><th>➡</th><th>SQL</th></tr></thead><tbody><tr><td>首页 门票 周边游</td><td></td><td>CategroyService</td><td>➡</td><td>NoSQL</td></tr><tr><td></td><td></td><td>先查询缓存(redis)，有就直接返回</td><td></td><td>redis</td></tr><tr><td></td><td></td><td>没有，再查MySQL，先同步到redis再返回</td><td>➡</td><td>MySQL</td></tr><tr><td></td><td></td><td>List&lt;Categroy&gt; list;<br>将list转为json数组字符串返回</td><td></td><td></td></tr></tbody></table><h5 id="4-1-2-代码实现"><a href="#4-1-2-代码实现" class="headerlink" title="4.1.2 代码实现"></a>4.1.2 代码实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoryServiceImpl</span> <span class="keyword">implements</span> <span class="title">CategoryService</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Category&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//        SqlSession sqlSession = MyBatisUtils.openSession();</span></span><br><span class="line">    <span class="comment">//        CategoryDao categoryDao = sqlSession.getMapper(CategoryDao.class);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//        List&lt;Category&gt; categoryList = categoryDao.findAll();</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//        MyBatisUtils.close(sqlSession);</span></span><br><span class="line"></span><br><span class="line">    List&lt;Category&gt; categoryList = <span class="keyword">null</span>;</span><br><span class="line">    ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">    Jedis jedis = JedisUtils.getJedis();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (jedis.exists(<span class="string">"travel_category"</span>)) &#123;</span><br><span class="line">      String json = jedis.get(<span class="string">"travel_category"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        categoryList = objectMapper.readValue(json, List<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(<span class="string">"Find In Redis"</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">      CategoryDao categoryDao = sqlSession.getMapper(CategoryDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">      categoryList = categoryDao.findAll();</span><br><span class="line"></span><br><span class="line">      MyBatisUtils.close(sqlSession);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        String json = objectMapper.writeValueAsString(categoryList);</span><br><span class="line">        jedis.set(<span class="string">"travel_category"</span>, json);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    jedis.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> categoryList;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-短信验证码存活时间5分钟"><a href="#4-2-短信验证码存活时间5分钟" class="headerlink" title="4.2 短信验证码存活时间5分钟"></a>4.2 短信验证码存活时间5分钟</h4><h4 id="4-2-1-需求分析"><a href="#4-2-1-需求分析" class="headerlink" title="4.2.1 需求分析"></a>4.2.1 需求分析</h4><p><img src="image-20200520150018632.png" alt=""></p><h4 id="4-2-2-代码实现"><a href="#4-2-2-代码实现" class="headerlink" title="4.2.2 代码实现"></a>4.2.2 代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendSms</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">  <span class="comment">// 1.获取请求参数</span></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">  <span class="comment">// 2.生成6位随机数(apache提供的)</span></span><br><span class="line">  String smsCode = RandomStringUtils.randomNumeric(<span class="number">6</span>);</span><br><span class="line">  <span class="comment">// 3.调用service完成短信发送，返回resultInfo</span></span><br><span class="line">  ResultInfo resultInfo = userService.sendSms(telephone, smsCode);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.如果发送成功，将验证码写入到session中</span></span><br><span class="line">  <span class="comment">//        if (resultInfo.getSuccess()) &#123;</span></span><br><span class="line">  <span class="comment">//            req.getSession().setAttribute("smsCode_" + telephone, smsCode);</span></span><br><span class="line">  <span class="comment">//            System.out.println("smsCode: " + smsCode);</span></span><br><span class="line">  <span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.如果发送成功，将验证码写入到session中</span></span><br><span class="line">  <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// a.获取jedis连接</span></span><br><span class="line">    Jedis jedis = JedisUtils.getJedis();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// b.将验证码设置到jedis中，存活1分钟</span></span><br><span class="line">    jedis.setex(<span class="string">"smsCode_"</span> + telephone, <span class="number">60</span>, smsCode);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// c.释放资源</span></span><br><span class="line">    jedis.close();</span><br><span class="line">    System.out.println(<span class="string">"smsCode: "</span> + smsCode);</span><br><span class="line">  &#125;</span><br><span class="line">  javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// a.获取请求参数</span></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">  String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// b.获取session中验证码</span></span><br><span class="line">  <span class="comment">//        String sessionCode = (String) req.getSession().getAttribute("smsCode_" + telephone);</span></span><br><span class="line"></span><br><span class="line">  Jedis jedis = JedisUtils.getJedis();</span><br><span class="line">  String sessionCode = jedis.get(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// c.进行校验</span></span><br><span class="line">  <span class="keyword">if</span> (sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode))) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证码不正确</span></span><br><span class="line">    req.setAttribute(<span class="string">"resultInfo"</span>, <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"SMS Code not correct"</span>));</span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//获取请求参数</span></span><br><span class="line">  Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//封装User中</span></span><br><span class="line">  User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//调用service，实现注册</span></span><br><span class="line">  ResultInfo resultInfo = userService.register(param);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">    resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">    <span class="comment">//            req.getSession().removeAttribute("smsCode_" + telephone);</span></span><br><span class="line">    <span class="comment">// d.升级为，清除redis</span></span><br><span class="line">    jedis.del(<span class="string">"smsCode"</span> + telephone);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">  jedis.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">telLogin</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 1.接收请求参数telephone</span></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2.调用service查询</span></span><br><span class="line">  User currentUser = userService.findByTelephone(telephone);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3.校验手机号</span></span><br><span class="line">  ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.3 校验</span></span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number not Registered"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//成功</span></span><br><span class="line">    String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//            String sessionCode = (String) req.getSession().getAttribute("smsCode_" + telephone);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 升级为从redis中获取</span></span><br><span class="line">    Jedis jedis = JedisUtils.getJedis();</span><br><span class="line">    String sessionCode = jedis.get(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode))) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Wrong SMS Code"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"currentUser"</span>, currentUser);</span><br><span class="line">      <span class="comment">// 清除session中验证码</span></span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Login Success"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//req.getSession().removeAttribute("smsCode_" + telephone);</span></span><br><span class="line">      <span class="comment">// 清除redis中验证码</span></span><br><span class="line">      jedis.del(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 释放资源</span></span><br><span class="line">    jedis.close();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//将resultInfo转为Json响应到客户端</span></span><br><span class="line">  javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 NoSQL</strong></p><p><strong>### 非关系型数据库，not only sql，弥补关系型数据库一些不足</strong></p><p><strong>### 特点：</strong></p><p>- 关系性</p><p>​    - 1）数据之间存在关联关系</p><p>​    - 2）数据存储在硬盘</p><p>- 非关系型</p><p>​    - 1）数据之间不存在关联关系</p><p>​    - 2）数据存储在内存</p><p><strong>### 解决：互联和行业特点</strong></p><p>- 高并发</p><p>- 高性能</p><p>- 高可用</p><p>- 海量数据</p><p><strong>### nosql分类</strong></p><p>- 键值对</p><p>​    - redis</p><p>- 文档类型（json）</p><p>​    - mongoDB</p><p>- 列存储</p><p>​    - hbase</p><p>- 图形（关系结构）</p><p><strong>## 二 Redis</strong></p><p><strong>### 介绍</strong></p><p>- C语言编写高性能键值对数据库</p><p><strong>### 数据类型</strong></p><p>- string</p><p>- hash</p><p>- linkedList</p><p>- hashset</p><p>- linkedHashSet</p><p><strong>### 命令</strong></p><p>- 字符串</p><p>​    - set key value</p><p>​    - get key</p><p>​    - del key</p><p>​    - setex key 存活时间 value</p><p>​    - incr key</p><p>​        - value+1</p><p>- 哈希</p><p>​    - hset key hkey hvalue</p><p>​    - hget key hkey</p><p>​    - hgetall key</p><p>​    - hrem key hkey</p><p>​    - del key</p><p>- 列表</p><p>​    - lpush key value</p><p>​    - rpush key value</p><p>​    - lrange key 0 -1</p><p>​    - lpop key</p><p>​    - rpop key</p><p>​    - del key</p><p>- 集合</p><p>​    - sadd key value</p><p>​    - smembers key</p><p>​    - srem key value</p><p>- 有序集合</p><p>​    - zadd key score value</p><p>​    - zrange key 0 -1 withscores</p><p>​    - zrevrange key 0 -1 withscores</p><p>​    - zrem key value</p><p>- 通用命令</p><p>​    - keys *</p><p>​    - del key1 key2 key3</p><p>​    - exists key</p><p>​    - type key</p><p>​    - select 0~15</p><p>​    - flushdb</p><p>​    - flushal</p><p><strong>### 持久化</strong></p><p>- RDB</p><p>​    - 默认开启，在指定间隔时间将内存的数据拍摄快照，持久化到磁盘</p><p>​        - 1）优点：性能高</p><p>​        - 2）缺点：丢失数据</p><p>- AOF</p><p>​    - 手动开启，根据日志记录方式监听redis的写（set）操作，持久化到磁盘</p><p>​        - 1）优点：保证数据的安全</p><p>​        - 2）缺点：性能稍差</p><p><strong>### 应用场景</strong></p><p>- 1）缓存</p><p>- 2）秒杀</p><p>- 3）微博热搜</p><p>- 4）验证码存储</p><p>- 5）分布式session</p><p><strong>## 三 Jedis</strong></p><p><strong>### 通过java语言操作redis，api与redis命令相似</strong></p><p><strong>### 快速入门</strong></p><p>- 1）导入jar坐标</p><p>- 2）编写代码</p><p>​    - //1.创建连接对象</p><p>​    - //2.操作api</p><p>​    - //3.关闭连接</p><p><strong>### Jedis连接池</strong></p><p><strong>## 四 优化：黑马旅游网</strong></p><p><strong>### 4.1 缓存：导航条分类</strong></p><p><strong>### 4.2 短信验证码存活时间5分钟</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（五十七）</title>
      <link href="/2020/05/18/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B8%83%EF%BC%89/"/>
      <url>/2020/05/18/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B8%83%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>用户中心</li><li>面向接口编程和工厂模式</li><li>收货地址</li><li>导航条</li></ul><a id="more"></a><h1 id="一-个人信息回显"><a href="#一-个人信息回显" class="headerlink" title="一.个人信息回显"></a>一.个人信息回显</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><p><img src="image-20200518092504789.png" alt=""></p><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/UserServlet?action=userInfo" class="collection"&gt;个人中心&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户中心回显</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">userInfo</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 校验session</span></span><br><span class="line">  Object currentUser = request.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    response.sendRedirect(request.getContextPath() + <span class="string">"/index.jsp"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 转发到 home_index.jsp</span></span><br><span class="line">  request.getRequestDispatcher(<span class="string">"/home_index.jsp"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>home_left.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;currentUser.pic&#125;"</span> width=<span class="string">"160px"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"img-circle"</span> alt=<span class="string">""</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>home_index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/UserServlet"</span> method=<span class="string">"post"</span> enctype=<span class="string">"application/x-www-form-urlencoded"</span>&gt;</span><br><span class="line">  &lt;%--回显id到隐藏域--%&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"uid"</span> value=<span class="string">"$&#123;currentUser.uid&#125;"</span>&gt;</span><br><span class="line">  &lt;%--方法隐藏域--%&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"updateInfo"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-content "</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">"one"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-pane active"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"sui-form form-horizontal"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line">          &lt;label for="inputName" class="control-label"&gt;昵称：&lt;/label&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> id=<span class="string">"inputName"</span> name=<span class="string">"nickname"</span> placeholder=<span class="string">"昵称"</span> value=<span class="string">"$&#123;currentUser.nickname&#125;"</span>&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line">          &lt;label class="control-label"&gt;性别：&lt;/label&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;input type="radio" name="sex" value="1" &lt;c:if test="$&#123;currentUser.sex == 1&#125;"&gt;checked="checked"&lt;/c:if&gt;&gt;&lt;b&gt;男&lt;/b&gt;</span><br><span class="line"></span><br><span class="line">          &amp;nbsp;&amp;nbsp;</span><br><span class="line">          &lt;input type="radio" name="sex" value="0" &lt;c:if test="$&#123;currentUser.sex == 0&#125;"&gt;checked="checked"&lt;/c:if&gt;&gt;&lt;b&gt;女&lt;/b&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line">      &lt;label class="control-label"&gt;生日：&lt;/label&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"text"</span> name=<span class="string">"birthday"</span> placeholder=<span class="string">"生日"</span> value=<span class="string">"$&#123;currentUser.birthday&#125;"</span>&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line">      &lt;label class="control-label"&gt;邮箱：&lt;/label&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"text"</span> name=<span class="string">"email"</span> placeholder=<span class="string">"邮箱"</span> value=<span class="string">"$&#123;currentUser.email&#125;"</span>&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line">        &lt;button type="submit" class="sui-btn btn-primary"&gt;更新&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;div id=<span class="string">"two"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-pane"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"new-photo"</span>&gt;</span><br><span class="line">    &lt;p&gt;当前头像：&lt;/p&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"upload"</span>&gt;</span><br><span class="line">      &lt;img id=<span class="string">"imgShow_WU_FILE_0"</span> width=<span class="string">"100"</span> height=<span class="string">"100"</span></span><br><span class="line">           src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;currentUser.pic&#125;"</span></span><br><span class="line">           alt=<span class="string">""</span>&gt;</span><br><span class="line">      &lt;input type=<span class="string">"file"</span> id=<span class="string">"up_img_WU_FILE_0"</span> name=<span class="string">"pic"</span>/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-个人信息修改"><a href="#二-个人信息修改" class="headerlink" title="二.个人信息修改"></a>二.个人信息修改</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><p><img src="image-20200518094419285.png" alt=""></p><h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><ul><li><p>home_index.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/UserServlet"</span> method=<span class="string">"post"</span></span><br><span class="line">      enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">  &lt;%--回显id到隐藏域--%&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"uid"</span> value=<span class="string">"$&#123;currentUser.uid&#125;"</span>&gt;</span><br><span class="line">  &lt;%--方法隐藏域--%&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 个人信息修改</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">updateInfo</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 1.接收请求参数map</span></span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">    <span class="comment">// 2.封装user实体</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">    <span class="comment">// 3.调用service更新</span></span><br><span class="line">    userService.updateInfo(param);</span><br><span class="line">    <span class="comment">// 4.根据uid查询service，重置到session中</span></span><br><span class="line">    User currentUser = userService.findByUid(param.getUid());</span><br><span class="line">    request.getSession().setAttribute(<span class="string">"currentUser"</span>, currentUser);</span><br><span class="line">    <span class="comment">//5.重定向到 用户中心回显</span></span><br><span class="line">    response.sendRedirect(request.getContextPath()+<span class="string">"/UserServlet?action=userInfo"</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServiceI</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateInfo</span><span class="params">(User param)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 获取 UserDao代理对象</span></span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调用dao</span></span><br><span class="line">  userDao.update(param);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 关闭sqlSession</span></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据uid查询</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByUid</span><span class="params">(<span class="keyword">int</span> uid)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 获取 UserDao代理对象</span></span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调用dao</span></span><br><span class="line">  User user = userDao.findByUid(uid);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 关闭sqlSession</span></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line">  <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserDao(接口+映射)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 动态更新</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(User param)</span></span>;</span><br><span class="line"><span class="comment">// uid查询</span></span><br><span class="line"><span class="function">User <span class="title">findByUid</span><span class="params">(<span class="keyword">int</span> uid)</span></span>;</span><br></pre></td></tr></table></figure></li></ul>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">  update tab_user</span><br><span class="line">  <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 字符串类型：除了非空判断，再添加非空串判断 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"nickname != null and nickname !=''"</span>&gt;</span></span><br><span class="line">      nickname = #&#123;nickname&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null and sex !=''"</span>&gt;</span></span><br><span class="line">      sex = #&#123;sex&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"birthday != null and birthday !=''"</span>&gt;</span></span><br><span class="line">      birthday = #&#123;birthday&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email != null and email !=''"</span>&gt;</span></span><br><span class="line">      email = #&#123;email&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"pic != null and pic !=''"</span>&gt;</span></span><br><span class="line">      pic = #&#123;pic&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">  where uid = #&#123;uid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">  select * from tab_user where uid = #&#123;uid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-3-文件上传"><a href="#2-3-文件上传" class="headerlink" title="2.3 文件上传"></a>2.3 文件上传</h4><h5 id="2-3-1-技术分析"><a href="#2-3-1-技术分析" class="headerlink" title="2.3.1 技术分析"></a>2.3.1 技术分析</h5><ul><li><p>文件上传前端三要素</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt; </span><br><span class="line">  头像:&lt;input type=<span class="string">"file"</span> name=<span class="string">"pic"</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>文件上传后端使用servlet3.0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="meta">@MultipartConfig</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"><span class="comment">// 文件对象</span></span><br><span class="line">Part part = request.getPart(<span class="string">"pic"</span>);</span><br><span class="line"><span class="comment">// 获取文件名</span></span><br><span class="line">String filename = part.getSubmittedFileName(); <span class="comment">// 文件保存(指定保存路径)</span></span><br><span class="line">part.write(realPath);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-3-2-代码实现"><a href="#2-3-2-代码实现" class="headerlink" title="2.3.2 代码实现"></a>2.3.2 代码实现</h5><ul><li><p>home_index.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/UserServlet"</span> method=<span class="string">"post"</span></span><br><span class="line">      enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServlet(完善刚才个人修改)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="meta">@MultipartConfig</span> <span class="comment">// 文件上传注解....</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 个人信息修改</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">updateInfo</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 1.接收请求参数map</span></span><br><span class="line">      Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">      <span class="comment">// 2.封装user实体</span></span><br><span class="line">      User param = <span class="keyword">new</span> User();</span><br><span class="line">      BeanUtils.populate(param, parameterMap);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// -----文件上传 start</span></span><br><span class="line">      <span class="comment">// a.获取文件对象</span></span><br><span class="line">      Part part = request.getPart(<span class="string">"pic"</span>);</span><br><span class="line">      <span class="comment">// b.获取文件名</span></span><br><span class="line">      String filename = part.getSubmittedFileName();</span><br><span class="line">      <span class="comment">// c.判断用户是否提交文件</span></span><br><span class="line">      <span class="keyword">if</span> (filename.length()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// d.指定文件路径</span></span><br><span class="line">        String path = <span class="string">"/pic/"</span>+IdUtil.simpleUUID()+filename;</span><br><span class="line">        <span class="comment">// e.获取服务器真实路径 （d:sadfsadf/asdfasdf/saf/asdf.jpg）</span></span><br><span class="line">        String realPath = request.getServletContext().getRealPath(path);</span><br><span class="line">        <span class="comment">// f.保存文件</span></span><br><span class="line">        part.write(realPath);</span><br><span class="line">        <span class="comment">// g.给user设置图片访问地址</span></span><br><span class="line">        param.setPic(path);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// -----文件上传 end</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 3.调用service更新</span></span><br><span class="line">      userService.updateInfo(param);</span><br><span class="line">      <span class="comment">// 4.根据uid查询service，重置到session中</span></span><br><span class="line">      User currentUser = userService.findByUid(param.getUid());</span><br><span class="line">      request.getSession().setAttribute(<span class="string">"currentUser"</span>, currentUser);</span><br><span class="line">      <span class="comment">//5.重定向到 用户中心回显</span></span><br><span class="line">      response.sendRedirect(request.getContextPath() + <span class="string">"/UserServlet?action=userInfo"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-面向接口编程"><a href="#三-面向接口编程" class="headerlink" title="三.面向接口编程"></a>三.面向接口编程</h1><h4 id="3-1-使用传统开发遇到的问题"><a href="#3-1-使用传统开发遇到的问题" class="headerlink" title="3.1 使用传统开发遇到的问题"></a>3.1 使用传统开发遇到的问题</h4><p><img src="image-20200518105504923.png" alt=""></p><h4 id="3-2-面向接口编程解决的问题"><a href="#3-2-面向接口编程解决的问题" class="headerlink" title="3.2 面向接口编程解决的问题"></a>3.2 面向接口编程解决的问题</h4><p><img src="image-20200518110515225.png" alt=""></p><h1 id="四-对象管理"><a href="#四-对象管理" class="headerlink" title="四.对象管理"></a>四.对象管理</h1><h4 id="4-1-工厂模式"><a href="#4-1-工厂模式" class="headerlink" title="4.1 工厂模式"></a>4.1 工厂模式</h4><p>在java的世界中</p><blockquote><p>之前的方式需要一个对象，需要自己 new 关键字来创建 </p><p>从今天开始，我们需要一个对象(各层之间)，可以通过一个工厂来帮你创建(“类名”)</p></blockquote><p>进入企业开发，我们不再手动new对象，而是通过一个Factory工厂对象帮你创建(spring的设计思想)</p><p><img src="image-20200518113613291.png" alt=""></p><h4 id="4-2-工厂实现"><a href="#4-2-工厂实现" class="headerlink" title="4.2 工厂实现"></a>4.2 工厂实现</h4><ul><li><p>导入依赖坐标:dom4j+xpath</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--dom4j--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>编写beans.xml 配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.UserServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"addressService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AddressServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"categoryService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.CategoryServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写BeanFactory工厂</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 根据指定对象id创建对应对象实例</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 声明返回对象</span></span><br><span class="line">    Object result = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 1.通过类加载器加载beans.xml配置文件，获取io流</span></span><br><span class="line">      InputStream in = BeanFactory.class.getClassLoader().getResourceAsStream("beans.xml");</span><br><span class="line">      <span class="comment">// 2.创建dom4j核心解析器对象</span></span><br><span class="line">      SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">      <span class="comment">// 3.读取io流，解析xml，创建document对象</span></span><br><span class="line">      Document document = saxReader.read(in);</span><br><span class="line">      <span class="comment">// 4.编写xpath表达式</span></span><br><span class="line">      <span class="comment">// String xpath = "//bean[@id='userService']";</span></span><br><span class="line">      String xpath = <span class="string">"//bean[@id='"</span> + id + <span class="string">"']"</span>;</span><br><span class="line">      <span class="comment">// 5.查找对应bean标签 element对象</span></span><br><span class="line">      Element element = (Element) document.selectSingleNode(xpath);</span><br><span class="line">      <span class="comment">// 6.获取该标签的，class属性值，全限定类名</span></span><br><span class="line">      String className = element.attributeValue(<span class="string">"class"</span>);</span><br><span class="line">      <span class="comment">// 7.通过反射机制，加载到jvm虚拟机</span></span><br><span class="line">      Class&lt;?&gt; clazz = Class.forName(className);</span><br><span class="line">      <span class="comment">// 8.创建对象实例</span></span><br><span class="line">      result = clazz.newInstance();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// UserService userService = new UserServiceImpl();</span></span><br><span class="line">    UserService userService = (UserService) BeanFactory.getBean(<span class="string">"userService"</span>);</span><br><span class="line">    System.out.println(userService.findByUsername(<span class="string">"tom"</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>修改UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UserService userService = (UserService) BeanFactory.getBean(<span class="string">"userService"</span>);</span><br><span class="line"><span class="comment">//    UserService userService = new UserServiceImpl();</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="image-20200518115916980.png" alt=""></p><h1 id="五-查询收货人地址列表"><a href="#五-查询收货人地址列表" class="headerlink" title="五.查询收货人地址列表"></a>五.查询收货人地址列表</h1><h4 id="5-1-需求分析"><a href="#5-1-需求分析" class="headerlink" title="5.1 需求分析"></a>5.1 需求分析</h4><p><img src="image-20200518141220320.png" alt=""></p><h4 id="5-2-代码实现"><a href="#5-2-代码实现" class="headerlink" title="5.2 代码实现"></a>5.2 代码实现</h4><ul><li><p>home_left.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;dd&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/AddressServlet?action=findByUid"&gt;地址管理&lt;/a&gt;&lt;/dd&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/AddressServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddressServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  AddressService addressService = (AddressService) BeanFactory.getBean(<span class="string">"addressService"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 模板，方便我们去复制</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xxx</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 根据uid查询地址列表</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByUid</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.校验session总是否有user</span></span><br><span class="line">    User currentUser = (User) request.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">    <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">      response.sendRedirect(request.getContextPath() + <span class="string">"/index.jsp"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2.根据uid查询地址列表</span></span><br><span class="line">    List&lt;Address&gt; addressList = addressService.findByUid(currentUser.getUid());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.设置到request域</span></span><br><span class="line">    request.setAttribute(<span class="string">"addressList"</span>, addressList);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.转发到 地址页面</span></span><br><span class="line">    request.getRequestDispatcher(<span class="string">"/home_address.jsp"</span>).forward(request, response);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddressServiceImpl</span> <span class="keyword">implements</span> <span class="title">AddressService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Address&gt; <span class="title">findByUid</span><span class="params">(<span class="keyword">int</span> uid)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 创建代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    AddressDao addressDao = sqlSession.getMapper(AddressDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用dao</span></span><br><span class="line">    List&lt;Address&gt; addressList = addressDao.findByUid(uid);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> addressList;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressDao(接口+映射)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AddressDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Address&gt; <span class="title">findByUid</span><span class="params">(<span class="keyword">int</span> uid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.AddressDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Address"</span>&gt;</span></span><br><span class="line">    select * from tab_address where uid = #&#123;uid&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"addressService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AddressServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>home_address.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:forEach items=<span class="string">"$&#123;addressList&#125;"</span> <span class="keyword">var</span>=<span class="string">"address"</span>&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">    &lt;td&gt;$&#123;address.contact&#125;&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;$&#123;address.address&#125;&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;$&#123;address.telephone&#125;&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;</span><br><span class="line">      &lt;a href="$&#123;pageContext.request.contextPath&#125;/AddressServlet?action=updateAddress&amp;aid=$&#123;address.aid&#125;"&gt;编辑&lt;/a&gt;</span><br><span class="line">      &lt;a href="$&#123;pageContext.request.contextPath&#125;/AddressServlet?action=deleteAddress&amp;aid=$&#123;address.aid&#125;"&gt;删除&lt;/a&gt;</span><br><span class="line">      &lt;a href="$&#123;pageContext.request.contextPath&#125;/AddressServlet?action=setDefaultAddress&amp;aid=$&#123;address.aid&#125;"&gt;设为默认&lt;/a&gt;</span><br><span class="line">    &lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">  &lt;td&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="六-添加收货人地址"><a href="#六-添加收货人地址" class="headerlink" title="六.添加收货人地址"></a>六.添加收货人地址</h1><h4 id="6-1-需求分析"><a href="#6-1-需求分析" class="headerlink" title="6.1 需求分析"></a>6.1 需求分析</h4><p><img src="image-20200518143549931.png" alt=""></p><h4 id="6-2-代码实现"><a href="#6-2-代码实现" class="headerlink" title="6.2 代码实现"></a>6.2 代码实现</h4><ul><li><p>home_address.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=<span class="string">"xxxx"</span> action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/AddressServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"save"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input type=<span class="string">"submit"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary"</span> value=<span class="string">"保存"</span>/&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存收货地址</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 0.校验session总是否有user</span></span><br><span class="line">  User currentUser = (User) request.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    response.sendRedirect(request.getContextPath() + <span class="string">"/index.jsp"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 1.接收请求参数 map</span></span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">    <span class="comment">// 2.封装到 address实体中</span></span><br><span class="line">    Address param = <span class="keyword">new</span> Address();</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">    <span class="comment">// 指定非默认地址</span></span><br><span class="line">    param.setIsdefault(<span class="string">"0"</span>);</span><br><span class="line">    <span class="comment">// 指定用户</span></span><br><span class="line">    param.setUser(currentUser);</span><br><span class="line">    <span class="comment">// 3.调用service保存</span></span><br><span class="line">    addressService.save(param);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.重定向</span></span><br><span class="line">    response.sendRedirect(request.getContextPath() + <span class="string">"/AddressServlet?action=findByUid"</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Address param)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 创建代理对象</span></span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  AddressDao addressDao = sqlSession.getMapper(AddressDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调用dao保存</span></span><br><span class="line">  addressDao.save(param);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 关闭会话</span></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Address param)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">  insert into tab_address(uid,contact,address,telephone,isdefault)</span><br><span class="line">  values(#&#123;user.uid&#125;,#&#123;contact&#125;,#&#123;address&#125;,#&#123;telephone&#125;,#&#123;isdefault&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="七-导航分类"><a href="#七-导航分类" class="headerlink" title="七.导航分类"></a>七.导航分类</h1><h4 id="7-1-需求分析"><a href="#7-1-需求分析" class="headerlink" title="7.1 需求分析"></a>7.1 需求分析</h4><p><img src="image-20200518150252445.png" alt=""></p><h4 id="7-1-代码实现"><a href="#7-1-代码实现" class="headerlink" title="7.1 代码实现"></a>7.1 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  $(function () &#123;</span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/CategoryServlet?action=findAll'</span>;</span><br><span class="line">    $.get(url,function (resp) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoryServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  CategoryService categoryService = (CategoryService) BeanFactory.getBean(<span class="string">"categoryService"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 模板，方便我们去复制</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xxx</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ajax查询所有</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.调用service查询</span></span><br><span class="line">    List&lt;Category&gt; categoryList = categoryService.findAll();</span><br><span class="line">    <span class="comment">// 2.转为json，响应到客户端</span></span><br><span class="line">    javaToJsonWriteClient(categoryList, response);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoryServiceImpl</span> <span class="keyword">implements</span> <span class="title">CategoryService</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Category&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    CategoryDao categoryDao = sqlSession.getMapper(CategoryDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Category&gt; categoryList= categoryDao.findAll();</span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> categoryList;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CategoryDao</span> </span>&#123;</span><br><span class="line">  <span class="function">List&lt;Category&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.CategoryDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Category"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_category ORDER BY cid</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"categoryService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.CategoryServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>header.jsp</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  $(function () &#123;</span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/CategoryServlet?action=findAll'</span>;</span><br><span class="line">    $.get(url,function (resp) &#123;</span><br><span class="line">      <span class="keyword">for</span>(let c of resp)&#123;</span><br><span class="line">        $(<span class="string">'#categoryUI'</span>).append(<span class="string">'&lt;li&gt;&lt;a href="route_list.jsp"&gt;'</span>+c.cname+<span class="string">'&lt;/a&gt;&lt;/li&gt;'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 个人信息回显</strong></p><p><strong>### 校验session中user存在，放行</strong></p><p><strong>## 二 个人信息修改</strong></p><p><strong>### 基本字段</strong></p><p><strong>### 文件上传</strong></p><p>- 前端三要素</p><p>- 后端</p><p>​    - servlet3.0</p><p>​        - @MultipartConfig</p><p><strong>## 三 面向接口编程</strong></p><p><strong>### 三层架构：高内聚、低耦合</strong></p><p><strong>## 四 对象管理</strong></p><p><strong>### 工厂模式</strong></p><p>- 之前各层之间需要对象， new来创建</p><p>​    - 耦合</p><p>- 现在各层之间需要对象，通过工厂创建</p><p>​    - 松耦合</p><p><strong>### 课下抄一遍工厂类</strong></p><p>- 模拟spring雏形</p><p><strong>## 五 查询收货人地址列表</strong></p><p><strong>## 六 添加收货人地址</strong></p><p><strong>### 修改</strong></p><p><strong>### 删除</strong></p><p><strong>### 指定默认</strong></p><p><strong>## 七 导航分类</strong></p><p><strong>### ajax技术查询分类表</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（五十六）</title>
      <link href="/2020/05/17/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E5%85%AD%EF%BC%89/"/>
      <url>/2020/05/17/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E5%85%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>密码登录</li><li>短信登录</li><li>用户退出</li><li>SVN多人协作开发文本控制工具</li></ul><a id="more"></a><h1 id="一-用户名密码登录"><a href="#一-用户名密码登录" class="headerlink" title="一.用户名密码登录"></a>一.用户名密码登录</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><p><img src="image-20200517092917290.png" alt=""></p><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"button"</span> id=<span class="string">"pwdLogin"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary"</span> value=<span class="string">"登录"</span>/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">//给按钮绑定点击事件</span></span><br><span class="line">  $(<span class="string">'#pwdLogin'</span>).click(function () &#123;</span><br><span class="line">    <span class="comment">//使用表单序列化函数(name=value&amp;name=value)</span></span><br><span class="line">    let data = $(<span class="string">'#pwdLoginForm'</span>).serialize();</span><br><span class="line">    <span class="comment">//发送ajax</span></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      <span class="comment">// 返回的是resultInfo对象，判断</span></span><br><span class="line">      <span class="keyword">if</span> (resp.success) &#123;</span><br><span class="line">        <span class="comment">// 成功，刷新页面</span></span><br><span class="line">        location.reload();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 失败，友情提示</span></span><br><span class="line">        $(<span class="string">'pwdLoginSpan'</span>).html(resp.message);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ajax密码登录</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">pwdLogin</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//接收请求参数</span></span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line">    <span class="comment">//封装user实体</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">    <span class="comment">//调用service登录，返回resultInfo</span></span><br><span class="line">    ResultInfo resultInfo = userService.pwdLogin(param);</span><br><span class="line">    <span class="comment">//如果登录成功，将user写入session中</span></span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      <span class="comment">//resultInfo.getData() 获取service返回的user对象</span></span><br><span class="line">      req.getSession().setAttribute(<span class="string">"currentUser"</span>, resultInfo.getData());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将resultInfo转为Json响应到客户端</span></span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ResultInfo <span class="title">pwdLogin</span><span class="params">(User param)</span> </span>&#123;</span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//根据用户名查询并校验</span></span><br><span class="line">  User currentUser = userDao.findByUsername(param.getUsername());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Doesn't Exist"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//校验密码</span></span><br><span class="line">  <span class="comment">//将用户输入的密码进行加密</span></span><br><span class="line">  String md5 = SecureUtil.md5(param.getPassword());</span><br><span class="line">  <span class="comment">//对比数据库</span></span><br><span class="line">  <span class="keyword">if</span> (!currentUser.getPassword().equals(md5)) &#123;</span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Password not correct"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//登录成功</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>,<span class="string">"Login Success"</span>,currentUser);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--广告--%&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"top_banner"</span>&gt;</span><br><span class="line">  &lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/top_banner.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;%--右侧按钮--%&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"shortcut"</span>&gt;</span><br><span class="line">  &lt;!-- 未登录状态 --&gt;</span><br><span class="line">  &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;empty currentUser&#125;"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"login_out"</span>&gt;</span><br><span class="line">      &lt;a id="loginBtn" data-toggle="modal" data-target="#loginModel" style="cursor: pointer;"&gt;登录&lt;/a&gt;</span><br><span class="line">      &lt;a href="register.jsp" style="cursor: pointer;"&gt;注册&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/c:if&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-手机短信登录"><a href="#二-手机短信登录" class="headerlink" title="二.手机短信登录"></a>二.手机短信登录</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><p><img src="image-20200517101427534.png" alt=""></p><h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"button"</span> id=<span class="string">"login_sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  $(<span class="string">'#login_sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">    let telephone = $(<span class="string">'#login_telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    let data = <span class="string">'action=sendSms&amp;telephone='</span> + telephone;</span><br><span class="line"></span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      alert(resp.message);</span><br><span class="line">    &#125;)</span><br><span class="line">    countDownLogin(<span class="keyword">this</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  let num_header = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">function <span class="title">countDownLogin</span><span class="params">(obj)</span> </span>&#123;</span><br><span class="line">    num_header--;</span><br><span class="line">    <span class="keyword">if</span> (num_header == <span class="number">0</span>) &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">false</span>);</span><br><span class="line">      $(obj).val(<span class="string">'Resend SMS Code'</span>);</span><br><span class="line">      num_header = <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">true</span>);</span><br><span class="line">      $(obj).val(num_header + <span class="string">'seconds latter ,Could Resend SMS Code'</span>);</span><br><span class="line">      setTimeout(function () &#123;</span><br><span class="line">        countDownLogin(obj);</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">telLogin</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">  User currentUser = userService.findByTelephone(telephone);</span><br><span class="line"></span><br><span class="line">  ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number not Registered"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">    String sessionCode = (String) req.getSession().getAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode))) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Wrong SMS Code"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"currentUser"</span>, currentUser);</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Login Success"</span>);</span><br><span class="line"></span><br><span class="line">      req.getSession().removeAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//将resultInfo转为Json响应到客户端</span></span><br><span class="line">  javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByTelephone</span><span class="params">(String phoneNumber)</span> </span>&#123;</span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  User currentUser  = userDao.findByTelephone(phoneNumber);</span><br><span class="line"></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line">  <span class="keyword">return</span> currentUser;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- &lt;a href="javaScript:void(0)" id="login_sendSmsCode"&gt;发送手机验证码&lt;/a&gt;--%&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> id=<span class="string">"login_sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  $(<span class="string">'#login_sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">    let telephone = $(<span class="string">'#login_telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    let data = <span class="string">'action=sendSms&amp;telephone='</span> + telephone;</span><br><span class="line"></span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      alert(resp.message);</span><br><span class="line">    &#125;)</span><br><span class="line">    countDownLogin(<span class="keyword">this</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  let num_header = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">function <span class="title">countDownLogin</span><span class="params">(obj)</span> </span>&#123;</span><br><span class="line">    num_header--;</span><br><span class="line">    <span class="keyword">if</span> (num_header == <span class="number">0</span>) &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">false</span>);</span><br><span class="line">      $(obj).val(<span class="string">'Resend SMS Code'</span>);</span><br><span class="line">      num_header = <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">true</span>);</span><br><span class="line">      $(obj).val(num_header + <span class="string">'seconds latter ,Could Resend SMS Code'</span>);</span><br><span class="line">      setTimeout(function () &#123;</span><br><span class="line">        countDownLogin(obj);</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-用户退出功能"><a href="#三-用户退出功能" class="headerlink" title="三.用户退出功能"></a>三.用户退出功能</h1><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><p><img src="image-20200517104140292.png" alt=""></p><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/UserServlet?action=logout"&gt;退出&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">logout</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  req.getSession().invalidate();</span><br><span class="line">  resp.sendRedirect(req.getContextPath() + <span class="string">"/index.jsp"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-SVN"><a href="#四-SVN" class="headerlink" title="四.SVN"></a>四.SVN</h1><h4 id="4-1-开发中遇到的问题"><a href="#4-1-开发中遇到的问题" class="headerlink" title="4.1 开发中遇到的问题"></a>4.1 开发中遇到的问题</h4><p>多人协作，解决冲突</p><blockquote><p>代码版本控制工具:svn、git</p></blockquote><h4 id="4-2-SVN工作流程"><a href="#4-2-SVN工作流程" class="headerlink" title="4.2 SVN工作流程"></a>4.2 SVN工作流程</h4><p><img src="image-20200517111105210.png" alt=""></p><h4 id="4-3-SVN服务器安装和使用"><a href="#4-3-SVN服务器安装和使用" class="headerlink" title="4.3 SVN服务器安装和使用"></a>4.3 SVN服务器安装和使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment">#yum install subversion</span></span><br><span class="line">[root@localhost /]<span class="comment"># cd /home</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建目录</span></span><br><span class="line">[root@localhost home]<span class="comment"># mkdir -p svn/repository</span></span><br><span class="line"><span class="comment">#使用该目录作为仓库</span></span><br><span class="line">[root@localhost svn]<span class="comment"># svnadmin create /home/svn/repositories  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改配置文件，将下面三行注释去除，顶格写，否则报错误19</span></span><br><span class="line">[root@localhost svn]<span class="comment"># vi conf/svnserve.conf </span></span><br><span class="line">anon-access = none</span><br><span class="line">auth-access = write</span><br><span class="line">password-db = passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户，用户组，并设定权限</span></span><br><span class="line">[root@localhost svn]<span class="comment"># vi conf/authz</span></span><br><span class="line">[aliases]</span><br><span class="line"><span class="comment"># joe = /C=XZ/ST=Dessert/L=Snake City/O=Snake Oil, Ltd./OU=Research Institute/CN=Joe Average</span></span><br><span class="line"></span><br><span class="line">[groups]</span><br><span class="line">topgroup=swzxsyh</span><br><span class="line"></span><br><span class="line">[/]</span><br><span class="line">swzxsyh=rw</span><br><span class="line">@topgroup = rw</span><br><span class="line"></span><br><span class="line">[/trunk]</span><br><span class="line">@topgroup = rw</span><br><span class="line">swzxsyh=rw</span><br><span class="line"></span><br><span class="line">[/foo/bar]</span><br><span class="line">swzxsyh=rw</span><br><span class="line">@topgroup = rw</span><br><span class="line"></span><br><span class="line">[repository:/baz/fuz]</span><br><span class="line">swzxsyh=rw</span><br><span class="line">@topgroup = rw</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户账号密码</span></span><br><span class="line">[root@localhost svn]<span class="comment"># vi conf/passwd</span></span><br><span class="line">[users]</span><br><span class="line">swzxsyh = 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动服务器</span></span><br><span class="line">[root@localhost svn]<span class="comment">#svnserve -d --listen-port=3690</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#可以添加至rc.local自启动</span></span><br></pre></td></tr></table></figure><h4 id="4-4-SVN客户端安装和使用"><a href="#4-4-SVN客户端安装和使用" class="headerlink" title="4.4 SVN客户端安装和使用"></a>4.4 SVN客户端安装和使用</h4><p>macOS自带svn，也可使用Cornerstone等软件</p><ul><li><p>测试连接svn服务器</p><p>svn://swzxsyh@192.168.xx.xx:3690/share/之前创建的目录/svn/repos1</p></li><li><p><strong>使用介绍</strong></p><ul><li>检出项目 checkout</li></ul></li></ul><h4 id="4-5-IDEA集成SVN客户端插件"><a href="#4-5-IDEA集成SVN客户端插件" class="headerlink" title="4.5 IDEA集成SVN客户端插件"></a>4.5 IDEA集成SVN客户端插件</h4><p>Settings==&gt;Subversion==&gt;设置svn</p><h4 id="4-6-SVN分支操作"><a href="#4-6-SVN分支操作" class="headerlink" title="4.6 SVN分支操作"></a>4.6 SVN分支操作</h4><ul><li>在主干中检出分支代码(时间+功能)</li><li>在idea切换到分支，编辑代码，提交</li><li>在idea中操作主干将分支的代码进行合并</li></ul><h4 id="4-7-上传黑马旅游网到SVN"><a href="#4-7-上传黑马旅游网到SVN" class="headerlink" title="4.7 上传黑马旅游网到SVN"></a>4.7 上传黑马旅游网到SVN</h4><p>使用Cornerstone连接，import项目即可</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 用户名密码登录</strong></p><p><strong>### ajax方式</strong></p><p><strong>## 二 手机短信登录</strong></p><p><strong>### ajax方式</strong></p><p><strong>## 三 用户退出功能</strong></p><p><strong>### 清除session</strong></p><p><strong>## 四 SVN</strong></p><p><strong>### 源代码版本控制工具</strong></p><p>- 安装svn服务器端</p><p>​    - 创建仓库</p><p>​    - 创建用户</p><p>​    - 创建组</p><p>​    - 仓库授权</p><p>- 安装svn客户端</p><p>​    - 检出</p><p>​    - 提交</p><p>​    - 更新</p><p>​    - 代码冲突解决</p><p>​    - 删除</p><p>​    - 代码回溯</p><p>- idea配置svn插件</p><p>- svn标准仓库</p><p>​    - branchs</p><p>​    - tags</p><p>​    - trunck</p><p>- idea操作svn</p><p>​    - 分享</p><p>​    - 检出</p><p>​    - 提交</p><p>​    - 更新</p><p>​    - 代码冲突解决</p><p>- 分支</p><p>​    - 从主干中检出一个分支</p><p>​    - 将分支合并到主干</p><p>- 将黑马旅游网上传到svn服务器</p><p>​    - idea 实现share project</p><p>​    - 小乌龟 实现commit</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（五十五）</title>
      <link href="/2020/05/16/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%BA%94%EF%BC%89/"/>
      <url>/2020/05/16/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>用户模块之注册<ul><li>基本注册功能</li><li>ajax异步校验</li><li>阿里云短信服务</li><li>手机验证码校验</li><li>BaseServlet</li></ul></li></ul><a id="more"></a><h1 id="一-用户注册基本功能"><a href="#一-用户注册基本功能" class="headerlink" title="一.用户注册基本功能"></a>一.用户注册基本功能</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><ul><li><p>页面和实体以及表关系介绍</p><table><thead><tr><th>页面</th><th>➡</th><th>实体类</th><th>➡</th><th>数据库</th></tr></thead><tbody><tr><td>register.jsp</td><td></td><td>public class User implements Serializable</td><td></td><td>tab_user</td></tr></tbody></table></li><li><p>代码流程图</p><p><img src="image-20200516093105857.png" alt=""></p></li></ul><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><ul><li><p>register.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--注册表单--&gt;</span><br><span class="line">&lt;form id=<span class="string">"registerForm"</span> action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/UserServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">  </span><br><span class="line">&lt;!-- 省略 --&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"submit"</span> value=<span class="string">"注册"</span>&gt;</span><br><span class="line">&lt;span id="msg" style="color: red;"&gt;$&#123;resultInfo.message&#125;&lt;/span&gt;</span><br></pre></td></tr></table></figure></li><li><p>ResutInfo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResultInfo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个参数构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResultInfo</span><span class="params">(Boolean success)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.success = success;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二个参数构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResultInfo</span><span class="params">(Boolean success, String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.success = success;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 三个参数构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResultInfo</span><span class="params">(Boolean success, String message, Object data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.success = success;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取请求action</span></span><br><span class="line">        String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取请求参数</span></span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//封装User中</span></span><br><span class="line">        User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BeanUtils.populate(param, parameterMap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调用service，实现注册</span></span><br><span class="line">        ResultInfo resultInfo = userService.register(param);</span><br><span class="line">        <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">            resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">            req.getSession().removeAttribute(<span class="string">"smsCode_"</span>+telephone);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function">ResultInfo <span class="title">register</span><span class="params">(User param)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//注册</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultInfo <span class="title">register</span><span class="params">(User param)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取UserDao代理对象</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据username查询dao，校验</span></span><br><span class="line">        User u1 = userDao.findByUsername(param.getUsername());</span><br><span class="line">        <span class="keyword">if</span> (u1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//关闭sqlSession</span></span><br><span class="line">            MyBatisUtils.close(sqlSession);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Already Exists"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//根据telephone查询dao，校验</span></span><br><span class="line">        User u2 = userDao.findByTelephone(param.getTelephone());</span><br><span class="line">        <span class="keyword">if</span> (u2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//关闭sqlSession</span></span><br><span class="line">            MyBatisUtils.close(sqlSession);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number Already Registered"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对密码进行加密(Hutool工具包提供SecureUtil)</span></span><br><span class="line">        String md5Pwd = SecureUtil.md5(param.getPassword());</span><br><span class="line">        param.setPassword(md5Pwd);</span><br><span class="line">        <span class="comment">//保存User，完成注册</span></span><br><span class="line">        userDao.save(param);</span><br><span class="line">        <span class="comment">//关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserDao(接口+映射)</p><p>resources新建”com/itheima/dao”文件夹，然后将UserDao.xml创建在此</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123; <span class="comment">// 根据用户名查询</span></span><br><span class="line">    <span class="function">User <span class="title">findByUsername</span><span class="params">(String username)</span></span>;</span><br><span class="line"><span class="comment">// 根据手机号查询</span></span><br><span class="line"><span class="function">User <span class="title">findByTelephone</span><span class="params">(String telephone)</span></span>;</span><br><span class="line"><span class="comment">// 注册</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(User param)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_user WHERE username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByTelephone"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_user WHERE telephone = #&#123;telephone&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        INSERT INTO tab_user(username,password,telephone) VALUES (#&#123;username&#125;,#&#123;password&#125;,#&#123;telephone&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>register_ok.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">"text-align:center;height: 290px;margin-top: 50px"</span>&gt;</span><br><span class="line">    &lt;span style="font-size: 30px"&gt;恭喜您，注册成功！&lt;/span&gt;</span><br><span class="line">    &lt;div&gt;&lt;span style="color: red"&gt;5&lt;/span&gt;秒后，跳转到 &lt;a href="$&#123;pageContext.request.contextPath&#125;/index.jsp"&gt;首页&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        let num = <span class="number">5</span>;</span><br><span class="line">        setInterval(function () &#123;</span><br><span class="line">            num--;</span><br><span class="line">            $(<span class="string">'resultSpan'</span>).html(num);</span><br><span class="line">            <span class="keyword">if</span> (num == <span class="number">1</span>) &#123;</span><br><span class="line">                location.href = <span class="string">"$&#123;pageContext.request.contextPath&#125;/index.jsp"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-校验用户名是否存在"><a href="#二-校验用户名是否存在" class="headerlink" title="二.校验用户名是否存在"></a>二.校验用户名是否存在</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><p><img src="image-20200516104659881.png" alt=""></p><h4 id="2-2-技术分析"><a href="#2-2-技术分析" class="headerlink" title="2.2 技术分析"></a>2.2 技术分析</h4><ul><li>使用jquery的ajax $.post(url,data,function(resp){});</li><li>使用jackson的 ObjectMapper对象，实现转换</li></ul><h4 id="2-3-代码实现"><a href="#2-3-代码实现" class="headerlink" title="2.3 代码实现"></a>2.3 代码实现</h4><ul><li><p>register.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">  &lt;label for="username"&gt;用户名&lt;/label&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> id=<span class="string">"username"</span> name=<span class="string">"username"</span> placeholder=<span class="string">"请输入账号"</span>&gt;</span><br><span class="line">  &lt;span id="userInfo" style="font-size:10px"&gt;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">//用户名绑定失去焦点事件</span></span><br><span class="line">  $(<span class="string">'#username'</span>).blur(function () &#123;</span><br><span class="line">    <span class="comment">//获取用户输入的value值</span></span><br><span class="line">    let username = $(<span class="keyword">this</span>).val();</span><br><span class="line">    <span class="comment">//ajax请求</span></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    let data = <span class="string">'action=fundByUsername&amp;username='</span> + username;</span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      <span class="comment">//resp就是返回的json对象(对应java类就是 ResultInfo)</span></span><br><span class="line">      <span class="keyword">if</span> (resp.success) &#123;</span><br><span class="line">        $(<span class="string">'userInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'green'</span>).html(<span class="string">'Username OK'</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">'userInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'red'</span>).html(<span class="string">'Username Already Registered'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求action</span></span><br><span class="line">    String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">    <span class="comment">//判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByUsername"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByUserName(req, resp);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//ajax校验用户名</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByUserName</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 1.接收请求参数</span></span><br><span class="line">      String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2.调用service查询</span></span><br><span class="line">      User user = userService.findByUsername(username);</span><br><span class="line"></span><br><span class="line">      ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 3.判断</span></span><br><span class="line">      <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Already Exists"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Can Be Registered"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 4.将resultInfo转为json</span></span><br><span class="line">      ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">      String json = objectMapper.writeValueAsString(resultInfo);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 5.通过response响应</span></span><br><span class="line">      resp.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">      resp.getWriter().write(json);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据用户名查询</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取 UserDao代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    User user = userDao.findByUsername(username);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 关闭sqlSession</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-课下作业-–-实现手机号的异步校验"><a href="#2-4-课下作业-–-实现手机号的异步校验" class="headerlink" title="2.4 课下作业 – 实现手机号的异步校验"></a>2.4 课下作业 – 实现手机号的异步校验</h4><ul><li>register.jsp</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;tr&gt;</span><br><span class="line">  &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">    &lt;label for="telephone"&gt;手机号&lt;/label&gt;</span><br><span class="line">  &lt;/td&gt;</span><br><span class="line">  &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> id=<span class="string">"telephone"</span> name=<span class="string">"telephone"</span> placeholder=<span class="string">"请输入您的手机号"</span>&gt;</span><br><span class="line">    &lt;span id="phoneInfo" style="font-size: 50px"&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/td&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">//用户名绑定失去焦点事件</span></span><br><span class="line">    $(<span class="string">'#telephone'</span>).blur(function () &#123;</span><br><span class="line">      <span class="comment">//获取用户输入的value值</span></span><br><span class="line">      let phoneNumber = $(<span class="keyword">this</span>).val();</span><br><span class="line">      <span class="comment">//ajax请求</span></span><br><span class="line">      let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">      let data = <span class="string">'action=fundByPhoneNumber&amp;PhoneNumber='</span> + phoneNumber;</span><br><span class="line">      $.post(url, data, function (resp) &#123;</span><br><span class="line">        <span class="comment">//resp就是返回的json对象(对应java类就是 ResultInfo)</span></span><br><span class="line">        <span class="keyword">if</span> (resp.success) &#123;</span><br><span class="line">          $(<span class="string">'phoneInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'green'</span>).html(<span class="string">'Phone Number OK'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          $(<span class="string">'phoneInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'red'</span>).html(<span class="string">'Phone Number Already Registered'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求action</span></span><br><span class="line">    String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">    <span class="comment">//判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByUsername"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByUserName(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByPhoneNumber"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByPhoneNumber(req, resp);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPhoneNumber</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">      String username = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">      User telephone = userService.findByTelephone(username);</span><br><span class="line"></span><br><span class="line">      ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (telephone != <span class="keyword">null</span>) &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number Already Registered"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Phone OK"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">      String json = objectMapper.writeValueAsString(resultInfo);</span><br><span class="line"></span><br><span class="line">      resp.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">      resp.getWriter().write(json);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByTelephone</span><span class="params">(String phoneNumber)</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    User telephone = userDao.findByTelephone(phoneNumber);</span><br><span class="line">    </span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> telephone;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="三-阿里云-手机服务"><a href="#三-阿里云-手机服务" class="headerlink" title="三.阿里云 手机服务"></a>三.阿里云 手机服务</h1><h4 id="3-1-发送短信流程"><a href="#3-1-发送短信流程" class="headerlink" title="3.1 发送短信流程"></a>3.1 发送短信流程</h4><p>register.jsp==&gt;黑马旅游网==&gt;远程调用阿里云平台接口==&gt;三大运营商==&gt;用户==&gt;返回到注册页面</p><h4 id="3-2-阿里云使用"><a href="#3-2-阿里云使用" class="headerlink" title="3.2 阿里云使用"></a>3.2 阿里云使用</h4><p>访问阿里云平台-登录-管理控制台，短信服务-国内消息-申请签名和模板，申请accessKey密钥对-充钱</p><h4 id="3-3-SDK使用"><a href="#3-3-SDK使用" class="headerlink" title="3.3 SDK使用"></a>3.3 SDK使用</h4><p>软件开发工具包(Software Development Kit )包含 jar包、API文档、工具类的集合都可以叫做 SDK</p><ul><li><p>请求参数</p><table><thead><tr><th>参数名称</th><th>参数类型</th><th>是否必须</th><th>样例取值</th></tr></thead><tbody><tr><td>phoneNumbers 手机号</td><td>String</td><td>必须</td><td>15000000000</td></tr><tr><td>signName     签名</td><td>String</td><td>必须</td><td>云通信</td></tr><tr><td>templateCode 模板</td><td>String</td><td>必须</td><td>SMS_0000</td></tr><tr><td>TemplateParam</td><td>String</td><td>可选</td><td>{“code”:”1234”,<br>“product”:”ytx”}</td></tr></tbody></table></li></ul><ul><li><p>响应参数</p><table><thead><tr><th>参数名称</th><th>出参类型</th><th>样例取值</th><th>参数说明</th></tr></thead><tbody><tr><td>RequestID</td><td>String</td><td>8906582E-6722</td><td>请求ID</td></tr><tr><td>Code</td><td>String</td><td>OK</td><td>状态码-返回OK代表请求成功，嵌套错误代码详见错误码列表</td></tr><tr><td>Message</td><td>String</td><td>请求成功</td><td>状态码的描述</td></tr><tr><td>Bizld</td><td>String</td><td>134534^4351232</td><td>发送回执ID，可根据ID查询具体的发送状态</td></tr></tbody></table></li><li><p>放入SDK工具</p><p>SmsUtils.java放入Utils</p></li><li><p>引入依赖包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="comment">&lt;!-- 注：如提示报错，先升级基础包版，无法解决可联系技术支持 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-dysmsapi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">  SendSmsResponse sendSmsResponse = sendSms(<span class="string">"15814076346"</span>, <span class="string">"黑马旅游网"</span>, <span class="string">"SMS_166778713"</span>, <span class="string">"&#123;\"code\":\"123456\"&#125;"</span>);</span><br><span class="line">  System.out.println(sendSmsResponse);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="四-手机验证码校验功能"><a href="#四-手机验证码校验功能" class="headerlink" title="四.手机验证码校验功能"></a>四.手机验证码校验功能</h1><h4 id="4-1-实现发送短信功能"><a href="#4-1-实现发送短信功能" class="headerlink" title="4.1 实现发送短信功能"></a>4.1 实现发送短信功能</h4><h5 id="4-1-1-需求分析"><a href="#4-1-1-需求分析" class="headerlink" title="4.1.1 需求分析"></a>4.1.1 需求分析</h5><p><img src="image-20200516140947552.png" alt=""></p><h5 id="4-1-3-代码实现"><a href="#4-1-3-代码实现" class="headerlink" title="4.1.3 代码实现"></a>4.1.3 代码实现</h5><ul><li><p>register.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">  &lt;label for="smsCode"&gt;验证码&lt;/label&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right check"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> id=<span class="string">"smsCode"</span> name=<span class="string">"smsCode"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"check"</span> placeholder=<span class="string">"请输入验证码"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input id=<span class="string">"sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>/&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">//给按钮绑定点击事件</span></span><br><span class="line">    $(<span class="string">'#sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">      let telephone = $(<span class="string">'#telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">      let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">      let data = <span class="string">'action=sendSms&amp;telephone='</span> + telephone;</span><br><span class="line"></span><br><span class="line">      $.post(url, data, function (resp) &#123;</span><br><span class="line">        alert(resp.message);</span><br><span class="line">      &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求action</span></span><br><span class="line">    String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">    <span class="comment">//判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByUsername"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByUserName(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByPhoneNumber"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByPhoneNumber(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"sendSms"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.sendSms(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendSms</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">    String smsCode = RandomStringUtils.randomNumeric(<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    ResultInfo resultInfo = userService.sendSms(telephone, smsCode);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"smsCode_"</span> + telephone, smsCode);</span><br><span class="line">      System.out.println(<span class="string">"smsCode: "</span> + smsCode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    String json = <span class="keyword">new</span> ObjectMapper().writeValueAsString(resultInfo);</span><br><span class="line"></span><br><span class="line">    resp.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">    resp.getWriter().write(json);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 发送短信</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultInfo <span class="title">sendSms</span><span class="params">(String telephone, String smsCode)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 定义签名</span></span><br><span class="line">        String signName = <span class="string">"黑马旅游网"</span>;</span><br><span class="line">        <span class="comment">// 定义模板</span></span><br><span class="line">        String templateCode = <span class="string">"SMS_123123123"</span>;</span><br><span class="line">        <span class="comment">// 拼接验证码(json)</span></span><br><span class="line">        String param = <span class="string">"&#123;\"code\":\""</span> + smsCode + <span class="string">"\"&#125;"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用工具类发送短信</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SendSmsResponse sendSmsResponse = SmsUtils.sendSms(telephone, signName, templateCode, param);</span><br><span class="line">            <span class="keyword">if</span> (sendSmsResponse.getCode().equals(<span class="string">"OK"</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Message Send Successful"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClientException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Message Send Failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-2-完善注册代码"><a href="#4-2-完善注册代码" class="headerlink" title="4.2 完善注册代码"></a>4.2 完善注册代码</h4><h5 id="4-2-1-需求分析"><a href="#4-2-1-需求分析" class="headerlink" title="4.2.1 需求分析"></a>4.2.1 需求分析</h5><h5 id="4-2-3-代码实现"><a href="#4-2-3-代码实现" class="headerlink" title="4.2.3 代码实现"></a>4.2.3 代码实现</h5><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//注册</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// a.获取请求参数</span></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">  String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// b.获取session中验证码</span></span><br><span class="line">  String sessionCode = (String) req.getSession().getAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// c.进行校验</span></span><br><span class="line">  <span class="keyword">if</span>(sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode)))&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证码不正确</span></span><br><span class="line">    req.setAttribute(<span class="string">"resultInfo"</span>,<span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>,<span class="string">"SMS Code not correct"</span>));</span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req,resp);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//获取请求参数</span></span><br><span class="line">  Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//封装User中</span></span><br><span class="line">  User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//调用service，实现注册</span></span><br><span class="line">  ResultInfo resultInfo = userService.register(param);</span><br><span class="line">  <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">    resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">    req.getSession().removeAttribute(<span class="string">"smsCode_"</span>+telephone);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-60秒倒计时"><a href="#4-3-60秒倒计时" class="headerlink" title="4.3 60秒倒计时"></a>4.3 60秒倒计时</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">  &lt;label for="smsCode"&gt;验证码&lt;/label&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right check"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> id=<span class="string">"smsCode"</span> name=<span class="string">"smsCode"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"check"</span> placeholder=<span class="string">"请输入验证码"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input id=<span class="string">"sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>/&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">//给按钮绑定点击事件</span></span><br><span class="line">    $(<span class="string">'#sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">      let telephone = $(<span class="string">'#telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">      let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">      let data = <span class="string">'action=sendSms&amp;telephone'</span> + telephone;</span><br><span class="line"></span><br><span class="line">      $.post(url, data, function (resp) &#123;</span><br><span class="line">        alert(resp.message);</span><br><span class="line">      &#125;);</span><br><span class="line">      countDown(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    let num = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">function <span class="title">countDown</span><span class="params">(obj)</span> </span>&#123;</span><br><span class="line">      num--;</span><br><span class="line">      <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">        $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">false</span>);</span><br><span class="line">        $(obj).val(<span class="string">'Resend SMS Code'</span>);</span><br><span class="line">        num = <span class="number">10</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">true</span>);</span><br><span class="line">        $(obj).val(<span class="string">'Resend SMS Code After'</span> + num + <span class="string">'Seconds'</span>);</span><br><span class="line">        setTimeout(function () &#123;</span><br><span class="line">          countDown(obj);</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure><h1 id="五-BaseServlet"><a href="#五-BaseServlet" class="headerlink" title="五.BaseServlet"></a>五.BaseServlet</h1><ul><li><p>抽取返回ajax数据的公共方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取请求action(获取的就是方法名)</span></span><br><span class="line">    String action = request.getParameter(<span class="string">"action"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取字节码对象</span></span><br><span class="line">    Class clazz = <span class="keyword">this</span>.getClass();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 获取指定名称的方法对象(method对象)</span></span><br><span class="line">      Method declaredMethod = clazz.getDeclaredMethod(action, HttpServletRequest<span class="class">.<span class="keyword">class</span>, <span class="title">HttpServletResponse</span>.<span class="title">class</span>)</span>;</span><br><span class="line">      <span class="comment">// (private修饰的方法，需要暴力反射..)</span></span><br><span class="line">      <span class="comment">// 通过反射调用指定名称的方法</span></span><br><span class="line">      declaredMethod.invoke(<span class="keyword">this</span>, request, response);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Server Busy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">javaToJsonWriteClient</span><span class="params">(Object object, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    String json = <span class="keyword">new</span> ObjectMapper().writeValueAsString(object);</span><br><span class="line"></span><br><span class="line">    response.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">    response.getWriter().write(json);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//注册</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// a.获取请求参数</span></span><br><span class="line">    String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">    String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// b.获取session中验证码</span></span><br><span class="line">    String sessionCode = (String) req.getSession().getAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// c.进行校验</span></span><br><span class="line">    <span class="keyword">if</span> (sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode))) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 验证码不正确</span></span><br><span class="line">      req.setAttribute(<span class="string">"resultInfo"</span>, <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"SMS Code not correct"</span>));</span><br><span class="line">      req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取请求参数</span></span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//封装User中</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      BeanUtils.populate(param, parameterMap);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//调用service，实现注册</span></span><br><span class="line">    ResultInfo resultInfo = userService.register(param);</span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">      req.getSession().removeAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">      req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//ajax校验用户名</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByUserName</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.接收请求参数</span></span><br><span class="line">    String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.调用service查询</span></span><br><span class="line">    User user = userService.findByUsername(username);</span><br><span class="line"></span><br><span class="line">    ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.判断</span></span><br><span class="line">    <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Already Exists"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Can Be Registered"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPhoneNumber</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    String username = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">    User telephone = userService.findByTelephone(username);</span><br><span class="line"></span><br><span class="line">    ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (telephone != <span class="keyword">null</span>) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number Already Registered"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Phone OK"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendSms</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.获取请求参数</span></span><br><span class="line">    String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">    <span class="comment">// 2.生成6位随机数(apache提供的)</span></span><br><span class="line">    String smsCode = RandomStringUtils.randomNumeric(<span class="number">6</span>);</span><br><span class="line">    <span class="comment">// 3.调用service完成短信发送，返回resultInfo</span></span><br><span class="line">    ResultInfo resultInfo = userService.sendSms(telephone, smsCode);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.如果发送成功，将验证码写入到session中</span></span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"smsCode_"</span> + telephone, smsCode);</span><br><span class="line">      System.out.println(<span class="string">"smsCode: "</span> + smsCode);</span><br><span class="line">    &#125;</span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="# 总结"></a># 总结</h1><h2 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h2><h3 id="用户基本注册功能"><a href="#用户基本注册功能" class="headerlink" title="用户基本注册功能"></a>用户基本注册功能</h3><p>- 根据需求图编写代码</p><h3 id="校验用户名是否存在"><a href="#校验用户名是否存在" class="headerlink" title="校验用户名是否存在"></a>校验用户名是否存在</h3><p>- ajax异步校验</p><h3 id="阿里云-短信服务"><a href="#阿里云-短信服务" class="headerlink" title="阿里云-短信服务"></a>阿里云-短信服务</h3><p>- 注册短信服务</p><p>​    - 1. 访问短信服务官网（<a href="https://www.aliyun.com/product/sms）">https://www.aliyun.com/product/sms）</a></p><p>​    - 2. 申请用户（使用支付宝账户）</p><p>​    - 3. 选的短信服务 管理控制台</p><p>​    - 4. 选择国内消息</p><p>​    - 5. 申请签名和模板，预计时间15分钟</p><p>​    - 6. 申请accessKey秘钥</p><p>​    - 7. 充值1元块钱</p><h3 id="手机验证码校验功能"><a href="#手机验证码校验功能" class="headerlink" title="手机验证码校验功能"></a>手机验证码校验功能</h3><p>- ajax发送短信</p><p>- 完善用户注册功能</p><p>- 实现60秒倒计时</p><h3 id="BaseServlet"><a href="#BaseServlet" class="headerlink" title="BaseServlet"></a>BaseServlet</h3><p>- 抄一遍</p><p>​    - 通过反射找出同名的方法，调用</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（五十四）</title>
      <link href="/2020/05/14/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E5%9B%9B%EF%BC%89/"/>
      <url>/2020/05/14/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>maven基础与环境搭建</li></ul><a id="more"></a><h1 id="一-Maven简介"><a href="#一-Maven简介" class="headerlink" title="一.Maven简介"></a>一.Maven简介</h1><h4 id="1-1-Maven是什么"><a href="#1-1-Maven是什么" class="headerlink" title="1.1 Maven是什么"></a>1.1 Maven是什么</h4><p>Maven 是一个项目管理工具，它包含了一个项目对象模型 (POM:Project Object Model)，一组标准集合，一个项 目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在生命周 期阶段(phase)中插件(plugin)目标(goal)的逻辑。</p><h4 id="1-2-Maven能解决什么问题"><a href="#1-2-Maven能解决什么问题" class="headerlink" title="1.2 Maven能解决什么问题"></a>1.2 Maven能解决什么问题</h4><p>一种工具，可以构建工程，管理 jar包，编译代码，还 能帮你自动运行单元测试，打包，生成报表，部署项目，生成 Web 站点。</p><h4 id="1-3-Maven的两个核心功能"><a href="#1-3-Maven的两个核心功能" class="headerlink" title="1.3 Maven的两个核心功能"></a>1.3 Maven的两个核心功能</h4><h5 id="1-3-1-依赖管理"><a href="#1-3-1-依赖管理" class="headerlink" title="1.3.1 依赖管理"></a>1.3.1 依赖管理</h5><p>Maven的一个核心特性就是依赖管理。MVN依赖管理，就是一个管理jar包的过程</p><table><thead><tr><th>CRM项目<br>使用mvn工程实现</th><th>➡项目中给定坐标，去仓库拉取jar包➡<br>索引的存在，使拉取jar包过程，可以认为是自己项目中有的</th><th>MVN仓库<br>jar的仓库</th></tr></thead><tbody><tr><td></td><td>坐标:将来要找某个jar包，就是要确定这个jar包的坐标</td><td></td></tr><tr><td></td><td>jar包如何给出坐标:公司/组织名+项目名+版本号一起确定</td><td></td></tr></tbody></table><p>maven工程中不直接将jar包导入到工程中，而是通过在pom.xml文件中添加所需jar包的坐标，避免了jar直接引入进来，在需要用到jar包的时候，只要查找pom.xml文件，再通过pom.xml文件中的坐标，到一个专门用于”存放jar包的仓库”(maven仓库)中根据坐标从而找到这些jar包，再把这些jar包拿去运行。 </p><ul><li><p>通过读取pom.xml 文件中的坐标，再到仓库中找到jar包，会不会很慢</p><blockquote><p>通过pom.xml文件配置要引入的jar包的坐标，再读取坐标并到仓库中加载jar包，这样我们就可以直接使用jar包，为了解决这个过程中速度慢的问题，maven中也有索引的概念，通过建立索引，可以大大提高加载jar包的速度，使得我们认为jar包基本跟放在本地的工程文件中再读取出来的速度是一样的。</p></blockquote></li></ul><h5 id="1-3-2-项目构建"><a href="#1-3-2-项目构建" class="headerlink" title="1.3.2 项目构建"></a>1.3.2 项目构建</h5><ul><li><p>什么是项目构建</p><p>项目从编译、测试、运行、打包、安装 ，部署整个过程都交给maven进行管理，这个过程称为构建。 </p><p>一键构建 指的是整个构建过程，使用maven一个命令可以轻松完成整个工作。</p></li><li><p>Maven规范化构建流程</p><table><thead><tr><th>清理</th><th>➡</th><th>编译</th><th>➡</th><th>测试</th><th>➡</th><th>报告</th><th>➡</th><th>打包</th><th>➡</th><th>部署</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table></li></ul><h1 id="二-Maven安装和使用"><a href="#二-Maven安装和使用" class="headerlink" title="二 Maven安装和使用"></a>二 Maven安装和使用</h1><h4 id="2-1-Maven下载和安装"><a href="#2-1-Maven下载和安装" class="headerlink" title="2.1 Maven下载和安装"></a>2.1 Maven下载和安装</h4><h5 id="2-1-1-Maven下载"><a href="#2-1-1-Maven下载" class="headerlink" title="2.1.1 Maven下载"></a>2.1.1 Maven下载</h5><p>Maven官网下载地址:<a href="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi</a></p><p>目前使用@3.5版本</p><h5 id="2-1-2-Maven安装"><a href="#2-1-2-Maven安装" class="headerlink" title="2.1.2 Maven安装"></a>2.1.2 Maven安装</h5><p>将apache-maven-3.5.2-bin.zip解压并添加至path</p><ul><li><p>maven目录结构</p><table><thead><tr><th>目录</th><th>介绍</th></tr></thead><tbody><tr><td>bin</td><td>存放了 maven 的命令</td></tr><tr><td>boot</td><td>存放了一些 maven 本身的引导程序，如类加载器等</td></tr><tr><td>conf</td><td>存放了 maven 的一些配置文件，如 setting.xml 文件</td></tr><tr><td>lib</td><td>存放了 maven 本身运行所需的一些 jar 包</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">apache-maven-3.5.2</span><br><span class="line">├── LICENSE</span><br><span class="line">├── NOTICE</span><br><span class="line">├── README.txt</span><br><span class="line">├── bin</span><br><span class="line">│   ├── m2.conf</span><br><span class="line">│   ├── mvn</span><br><span class="line">│   ├── mvn.cmd</span><br><span class="line">│   ├── mvnDebug</span><br><span class="line">│   ├── mvnDebug.cmd</span><br><span class="line">│   └── mvnyjp</span><br><span class="line">├── boot</span><br><span class="line">│   └── plexus-classworlds-2.5.2.jar</span><br><span class="line">├── conf</span><br><span class="line">│   ├── logging</span><br><span class="line">│   ├── settings.xml</span><br><span class="line">│   └── toolchains.xml</span><br><span class="line">└── lib</span><br><span class="line">    ├── aopalliance-1.0.jar</span><br><span class="line">├── ...省略</span><br><span class="line">    └── wagon-provider-api.license</span><br><span class="line"></span><br><span class="line">7 directories, 91 files</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-1-3-Maven及JDK配置"><a href="#2-1-3-Maven及JDK配置" class="headerlink" title="2.1.3 Maven及JDK配置"></a>2.1.3 Maven及JDK配置</h5><p>  Maven 3.3+ require JDK 1.7 or above to execute - they still allow you to build against 1.3 and other JDK versions <a href="https://maven.apache.org/guides/mini/guide-using-toolchains.html">by Using Toolchains</a></p><ul><li><p>配置PATH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi .zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment">#MAVEN_HOME</span></span><br><span class="line"><span class="built_in">export</span> MAVEN_HOME=/Users/swzxsyh/Program/apache-maven-3.5.2</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$MAVEN_HOME</span>/bin</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-1-4-Maven软件版本测试"><a href="#2-1-4-Maven软件版本测试" class="headerlink" title="2.1.4 Maven软件版本测试"></a>2.1.4 Maven软件版本测试</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> ~ <span class="comment">#mvn -v</span></span><br><span class="line">Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T15:58:13+08:00)</span><br><span class="line">Maven home: /Users/swzxsyh/Program/apache-maven-3.5.2</span><br><span class="line">Java version: 1.8.0_221, vendor: Oracle Corporation</span><br><span class="line">Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre</span><br><span class="line">Default locale: en_CN, platform encoding: UTF-8</span><br><span class="line">OS name: <span class="string">"mac os x"</span>, version: <span class="string">"10.15.4"</span>, arch: <span class="string">"x86_64"</span>, family: <span class="string">"mac"</span></span><br></pre></td></tr></table></figure><h4 id="2-3-Maven仓库"><a href="#2-3-Maven仓库" class="headerlink" title="2.3 Maven仓库"></a>2.3 Maven仓库</h4><h5 id="2-3-1-Maven仓库的分类"><a href="#2-3-1-Maven仓库的分类" class="headerlink" title="2.3.1 Maven仓库的分类"></a>2.3.1 Maven仓库的分类</h5><p>Maven仓库分为本地仓库和远程仓库二大类。而远程仓库又可分成中央仓库，私服，第三方仓库。</p><table><thead><tr><th></th><th>Maven仓库</th><th align="center"></th></tr></thead><tbody><tr><td><b/>本地仓库</td><td></td><td align="center"><b/>远程仓库</td></tr><tr><td></td><td></td><td align="center">⬇</td></tr><tr><td></td><td></td><td align="center">中央仓库</td></tr><tr><td></td><td></td><td align="center">私服</td></tr><tr><td></td><td></td><td align="center">第三方公共库</td></tr></tbody></table><ul><li><p>依赖寻找流程</p><ul><li><p>在本地仓库中，根据Maven坐标系寻找指定依赖，如果存在，直接返回。</p></li><li><p>如果Maven仓库中不存在，或者需要检查依赖的版本时，maven则会去远程仓库中寻找，下载到本地仓库中再使 用。</p></li></ul></li><li><p>本地仓库</p><p>用来存储从远程仓库下载的插件和jar包，项目使用一些插件或jar包，优先从本地仓库查找。</p></li><li><p>中央仓库</p><p>在maven软件中内置一个远程仓库地址<a href="http://repo1.maven.org/maven2">http://repo1.maven.org/maven2</a> ，它是中央仓库，服务于整个互联网，它是由Maven团队自己维护，里面存储了非常全的jar包，它包含了世界上大部分流行的开源项目构件。</p></li><li><p>第三方公共库</p><p>Maven 仓库默认中央仓库在国外且只有一个， 国内使用难免很慢，我们可以更换为第三方公共库，例如:阿里云镜 像。</p></li><li><p>私服</p><p>私服是一种特殊的远程仓库，其内容是来自于其他的远程仓库，一般架设在局域网内，提供给一个组织的人员使用。 当Maven需要下载依赖时，从私服请求，如果私服上不存在该依赖，则从其他远程仓库下载，同时缓存在私服上，提 供给其他人使用。如果项目中的一些内部模块，无法发布到外部远程仓库中，也可发布在私服上，提供给项目中的其 他人员使用。</p></li></ul><h5 id="2-3-2-Maven本地仓库的配置"><a href="#2-3-2-Maven本地仓库的配置" class="headerlink" title="2.3.2 Maven本地仓库的配置"></a>2.3.2 Maven本地仓库的配置</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cd  $MAVEN_HOME/conf </span><br><span class="line">vi settings.xml</span><br><span class="line"># 找到</span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment">   | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: $&#123;user.home&#125;/.m2/repository</span></span><br><span class="line"><span class="comment">  &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  将<span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/path/to/local/repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span>改为本地仓库路径添加到注释后</span><br></pre></td></tr></table></figure><h5 id="2-3-4-Maven仓库国内镜像配置"><a href="#2-3-4-Maven仓库国内镜像配置" class="headerlink" title="2.3.4 Maven仓库国内镜像配置"></a>2.3.4 Maven仓库国内镜像配置</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- mirror</span></span><br><span class="line"><span class="comment">   | Specifies a repository mirror site to use instead of a given repository. The repository that</span></span><br><span class="line"><span class="comment">   | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</span></span><br><span class="line"><span class="comment">   | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">  &lt;mirror&gt;</span></span><br><span class="line"><span class="comment">    &lt;id&gt;mirrorId&lt;/id&gt;</span></span><br><span class="line"><span class="comment">    &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="comment">    &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class="line"><span class="comment">    &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</span></span><br><span class="line"><span class="comment">  &lt;/mirror&gt;</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 添加阿里云镜像 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-3-4-全局setting与用户setting"><a href="#2-3-4-全局setting与用户setting" class="headerlink" title="2.3.4 全局setting与用户setting"></a>2.3.4 全局setting与用户setting</h5><p>maven仓库地址、私服等配置信息需要在setting.xml文件中配置，分为全局配置和用户配置。 </p><p>在maven安装目录下 的有 conf/setting.xml文件，此setting.xml文件用于maven的所有project项目，它作为maven的全局配置。 如需要 个性配置则需要在用户配置中设置，用户配置的setting.xml文件默认的位置在:${user.dir} /.m2/settings.xml目录 中,${user.dir} 指windows 中的用户目录。</p><p> maven会先找用户配置，如果找到则以用户配置文件为准，否则使用全 局配置文件。</p><h4 id="2-3-Maven坐标和依赖"><a href="#2-3-Maven坐标和依赖" class="headerlink" title="2.3 Maven坐标和依赖"></a>2.3 Maven坐标和依赖</h4><p>Maven的一个核心的作用就是管理项目的依赖，引入我们所需的各种jar包等。为了能自动化的解析任何一个Java构 件，Maven必须将这些Jar包或者其他资源进行唯一标识，这是管理项目的依赖的基础，也就是我们要说的坐标。包 括我们自己开发的项目，也是要通过坐标进行唯一标识的，这样才能才其它项目中进行依赖引用。</p><ul><li><p>坐标的定义元素如下</p><table><thead><tr><th>元素</th><th>作用</th></tr></thead><tbody><tr><td>groupId</td><td>定义当前Maven项目名称</td></tr><tr><td>artifactId</td><td>定义项目模块</td></tr><tr><td>version</td><td>定义当前项目的当前版本</td></tr></tbody></table></li><li><p>例如</p><p>创建一个Maven的web项目，在pom.xml文件中生成坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--当前项目坐标--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itheima<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven_helloword<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要引入junit的测试jar，只需要在pom.xml配置文件中配置引入junit的坐标依赖即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 依赖关系 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 此项目运行使用junit，所以此项目依赖junit --&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的项目名称 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的模块名称 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="comment">&lt;!-- junit版本 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 依赖范围:单元测试时使用junit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-Maven工程的认识"><a href="#2-4-Maven工程的认识" class="headerlink" title="2.4 Maven工程的认识"></a>2.4 Maven工程的认识</h4><h5 id="2-4-1-Maven工程的目录结构"><a href="#2-4-1-Maven工程的目录结构" class="headerlink" title="2.4.1 Maven工程的目录结构"></a>2.4.1 Maven工程的目录结构</h5><p>作为一个maven工程，它的src目录和pom.xml是必备的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">├── maven_java.iml</span><br><span class="line">├── pom.xml</span><br><span class="line">├── src</span><br><span class="line">└── target</span><br></pre></td></tr></table></figure><p>进入src目录后，我们发现它里面的目录结构如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">├── main</span><br><span class="line">│   ├── java<span class="comment">#项目代码</span></span><br><span class="line">│   ├── resources<span class="comment">#配置文件</span></span><br><span class="line">│   └── webapp<span class="comment">#页面资源</span></span><br><span class="line">└── <span class="built_in">test</span></span><br><span class="line">├── java<span class="comment">#测试代码</span></span><br><span class="line">    └──resources </span><br><span class="line"></span><br><span class="line">6 directories, 0 files</span><br></pre></td></tr></table></figure><table><thead><tr><th>文件</th><th>说明</th></tr></thead><tbody><tr><td>src/main/java</td><td>存放项目的.java文件</td></tr><tr><td>src/main/resources</td><td>存放项目资源文件，如spring, mybatis配置文件</td></tr><tr><td>src/test/java</td><td>存放所有单元测试.java文件，如junit测试类</td></tr><tr><td>src/test/resources</td><td>测试资源文件</td></tr><tr><td>target</td><td>项目输出位置，编译后的class文件会输出到此目录</td></tr><tr><td>pom.xml</td><td>maven项目核心配置文</td></tr></tbody></table><ul><li>注意:如果是普通的java项目，那么就没有webapp目录。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">完整java项目</span><br><span class="line">java工程名（项目名）</span><br><span class="line">|-- src目录</span><br><span class="line">|-- main目录（主干代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- <span class="built_in">test</span>目录（测试代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- pom.xml（maven工程核心配置文件）</span><br><span class="line">|-- target目录（存放编译后的class文件.....）</span><br><span class="line"></span><br><span class="line">* web项目【重点】</span><br><span class="line">web工程名（项目名）</span><br><span class="line">|-- src目录</span><br><span class="line">|-- main目录（主干代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- webapp目录（页面资源）</span><br><span class="line">|-- WEB-INF</span><br><span class="line">|-- web.xml(web工程核心配置文件)</span><br><span class="line">|-- index.jsp</span><br><span class="line">|-- css、js、img..</span><br><span class="line">|-- <span class="built_in">test</span>目录（测试代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- pom.xml（maven工程核心配置文件）</span><br><span class="line">|-- target目录（存放编译后的class文件.....）</span><br></pre></td></tr></table></figure><h5 id="2-4-2-Maven工程的运行"><a href="#2-4-2-Maven工程的运行" class="headerlink" title="2.4.2 Maven工程的运行"></a>2.4.2 Maven工程的运行</h5><p>进入maven工程目录(当前目录有pom.xml文件)，运行tomcat7:run命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">~ mvn tomcat7:run</span><br><span class="line"></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] &gt;&gt;&gt; tomcat7-maven-plugin:2.2:run (default-cli) &gt; process-classes @ maven_web &gt;&gt;&gt;</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Changes detected - recompiling the module!</span><br><span class="line">[INFO] Compiling 1 <span class="built_in">source</span> file to /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/classes</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] &lt;&lt;&lt; tomcat7-maven-plugin:2.2:run (default-cli) &lt; process-classes @ maven_web &lt;&lt;&lt;</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- tomcat7-maven-plugin:2.2:run (default-cli) @ maven_web ---</span><br><span class="line">[INFO] Running war on http://localhost:8080/</span><br><span class="line">[INFO] Creating Tomcat server configuration at /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/tomcat</span><br><span class="line">[INFO] create webapp with contextPath: </span><br><span class="line">May 15, 2020 10:29:37 PM org.apache.coyote.AbstractProtocol init</span><br><span class="line">INFO: Initializing ProtocolHandler [<span class="string">"http-bio-8080"</span>]</span><br><span class="line">May 15, 2020 10:29:37 PM org.apache.catalina.core.StandardService startInternal</span><br><span class="line">INFO: Starting service Tomcat</span><br><span class="line">May 15, 2020 10:29:37 PM org.apache.catalina.core.StandardEngine startInternal</span><br><span class="line">INFO: Starting Servlet Engine: Apache Tomcat/7.0.47</span><br><span class="line">May 15, 2020 10:29:38 PM org.apache.coyote.AbstractProtocol start</span><br><span class="line">INFO: Starting ProtocolHandler [<span class="string">"http-bio-8080"</span>]</span><br></pre></td></tr></table></figure><p>根据上边的提示信息,访问<a href="http://localhost:8080/">http://localhost:8080/</a>  即可</p><h1 id="三-Maven生命周期和插件"><a href="#三-Maven生命周期和插件" class="headerlink" title="三.Maven生命周期和插件"></a>三.Maven生命周期和插件</h1><h4 id="3-1-Maven常用命令和插件"><a href="#3-1-Maven常用命令和插件" class="headerlink" title="3.1 Maven常用命令和插件"></a>3.1 Maven常用命令和插件</h4><h5 id="3-1-1-clean"><a href="#3-1-1-clean" class="headerlink" title="3.1.1 clean"></a>3.1.1 clean</h5><p>clean是maven工程的清理命令，执行 clean会删除target目录及内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">~ mvn clean</span><br><span class="line"> </span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ maven_web ---</span><br><span class="line">[INFO] Deleting /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 0.228 s</span><br><span class="line">[INFO] Finished at: 2020-05-15T23:52:52+08:00</span><br><span class="line">[INFO] Final Memory: 9M/309M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h5 id="3-1-2-compile"><a href="#3-1-2-compile" class="headerlink" title="3.1.2 compile"></a>3.1.2 compile</h5><p>compile是maven工程的编译命令，作用是将src/main/java下的文件编译为class文件输出到target目录下。</p><p>将src中main目录下java代码进行编译，将src中main目录下配置抽取，输出到target目录: classes目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">~ mvn compile</span><br><span class="line"></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Changes detected - recompiling the module!</span><br><span class="line">[INFO] Compiling 1 <span class="built_in">source</span> file to /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/classes</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 0.952 s</span><br><span class="line">[INFO] Finished at: 2020-05-15T23:56:28+08:00</span><br><span class="line">[INFO] Final Memory: 13M/209M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">～ ll  ./target/classes/cn/itcast/web/servlet/</span><br><span class="line"> </span><br><span class="line">total 8</span><br><span class="line">-rw-r--r--  1 swzxsyh  staff   1.1K May 15 23:56 HelloServlet.class</span><br></pre></td></tr></table></figure><h5 id="3-1-3-test"><a href="#3-1-3-test" class="headerlink" title="3.1.3 test"></a>3.1.3 test</h5><p>test是maven工程的测试命令 mvn test，会执行src/test/java下的单元测试类，并编译为class文件。</p><p>mvn test=&gt;target编译main代码=&gt;编译test代码=&gt;执行所有测试代码，类名xxxTest结尾，必须有@Test注解的方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">~ mvn <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line"></span><br><span class="line"><span class="comment">#清理target目录</span></span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line"><span class="comment">#编译src/main主干</span></span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line"><span class="comment">#编译src/test测试目录</span></span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ maven_web ---</span><br><span class="line">[INFO] Changes detected - recompiling the module!</span><br><span class="line">[INFO] Compiling 1 <span class="built_in">source</span> file to /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/<span class="built_in">test</span>-classes</span><br><span class="line">[INFO] </span><br><span class="line"><span class="comment"># 针对test目录下的测试代码，逐一测试</span></span><br><span class="line">[INFO] --- maven-surefire-plugin:2.12.4:<span class="built_in">test</span> (default-test) @ maven_web ---</span><br><span class="line">[INFO] Surefire report directory: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/surefire-reports</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------</span><br><span class="line"> T E S T S</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Running cn.itcast.test.HelloTest</span><br><span class="line">仅在测试期有效</span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 sec</span><br><span class="line"></span><br><span class="line">Results :</span><br><span class="line"></span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line"></span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 1.509 s</span><br><span class="line">[INFO] Finished at: 2020-05-16T00:00:02+08:00</span><br><span class="line">[INFO] Final Memory: 15M/212M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h5 id="3-1-4-package"><a href="#3-1-4-package" class="headerlink" title="3.1.4 package"></a>3.1.4 package</h5><p>package是maven工程的打包命令，对于java工程执行package打成jar包，对于web工程打成war包。</p><p>mvn package=&gt;编译main代码=&gt;编译test代码=&gt;执行测试=&gt;将项目打成war包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">~ mvn package</span><br><span class="line"> </span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-surefire-plugin:2.12.4:<span class="built_in">test</span> (default-test) @ maven_web ---</span><br><span class="line">[INFO] Surefire report directory: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/surefire-reports</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------</span><br><span class="line"> T E S T S</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Running cn.itcast.test.HelloTest</span><br><span class="line">仅在测试期有效</span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec</span><br><span class="line"></span><br><span class="line">Results :</span><br><span class="line"></span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line"></span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-war-plugin:2.2:war (default-war) @ maven_web ---</span><br><span class="line">[INFO] Packaging webapp</span><br><span class="line">[INFO] Assembling webapp [maven_web] <span class="keyword">in</span> [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT]</span><br><span class="line">[INFO] Processing war project</span><br><span class="line">[INFO] Copying webapp resources [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/src/main/webapp]</span><br><span class="line">[INFO] Webapp assembled <span class="keyword">in</span> [49 msecs]</span><br><span class="line">[INFO] Building war: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT.war</span><br><span class="line">[INFO] WEB-INF/web.xml already added, skipping</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 1.528 s</span><br><span class="line">[INFO] Finished at: 2020-05-16T00:05:14+08:00</span><br><span class="line">[INFO] Final Memory: 12M/294M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">~ find . -name <span class="string">'*war'</span>  </span><br><span class="line">./target/maven_web-1.0-SNAPSHOT.war</span><br><span class="line"><span class="comment">#此包可以直接放在tomcat的webapp下执行</span></span><br></pre></td></tr></table></figure><ul><li><p>注意：为什么maven_hello是war包而不是jar包呢？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat pom.xml| grep -ri <span class="string">'packaging'</span> </span><br><span class="line">(standard input):    &lt;packaging&gt;war&lt;/packaging&gt;</span><br><span class="line"><span class="comment">#导包方式：jar默认，手动指定war</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="3-1-5-install"><a href="#3-1-5-install" class="headerlink" title="3.1.5 install"></a>3.1.5 install</h5><p>install是maven工程的安装命令，执行install将maven打成jar包或war包发布到本地仓库。</p><p>mvn install=&gt;编译main代码=&gt;编译test代码=&gt;执行测试=&gt;将项目打成war包=&gt;安装到本地库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">~ mvn install</span><br><span class="line"> </span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-surefire-plugin:2.12.4:<span class="built_in">test</span> (default-test) @ maven_web ---</span><br><span class="line">[INFO] Surefire report directory: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/surefire-reports</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------</span><br><span class="line"> T E S T S</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Running cn.itcast.test.HelloTest</span><br><span class="line">仅在测试期有效</span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.053 sec</span><br><span class="line"></span><br><span class="line">Results :</span><br><span class="line"></span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line"></span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-war-plugin:2.2:war (default-war) @ maven_web ---</span><br><span class="line">[INFO] Packaging webapp</span><br><span class="line">[INFO] Assembling webapp [maven_web] <span class="keyword">in</span> [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT]</span><br><span class="line">[INFO] Processing war project</span><br><span class="line">[INFO] Copying webapp resources [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/src/main/webapp]</span><br><span class="line">[INFO] Webapp assembled <span class="keyword">in</span> [32 msecs]</span><br><span class="line">[INFO] Building war: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT.war</span><br><span class="line">[INFO] WEB-INF/web.xml already added, skipping</span><br><span class="line">[INFO] </span><br><span class="line"></span><br><span class="line"><span class="comment"># 将自己的代码，编译到本地仓库，之后可以上传到远程仓库，服务器自动下载部署</span></span><br><span class="line">[INFO] --- maven-install-plugin:2.4:install (default-install) @ maven_web ---</span><br><span class="line">[INFO] Installing /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT.war to /Users/swzxsyh/Program/repository/cn/itcast/maven_web/1.0-SNAPSHOT/maven_web-1.0-SNAPSHOT.war</span><br><span class="line">[INFO] Installing /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/pom.xml to /Users/swzxsyh/Program/repository/cn/itcast/maven_web/1.0-SNAPSHOT/maven_web-1.0-SNAPSHOT.pom</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 1.522 s</span><br><span class="line">[INFO] Finished at: 2020-05-16T00:08:09+08:00</span><br><span class="line">[INFO] Final Memory: 12M/297M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p><strong>从运行结果中，可以看出: 当后面的命令执行时，前面的操作过程也都会自动执行</strong></p><h5 id="3-1-6-deploy"><a href="#3-1-6-deploy" class="headerlink" title="3.1.6 deploy"></a>3.1.6 deploy</h5><p>maven工程部署命令，将jar或war包部署（上传）到私服中。</p><h4 id="3-2-Maven生命周期"><a href="#3-2-Maven生命周期" class="headerlink" title="3.2 Maven生命周期"></a>3.2 Maven生命周期</h4><p>maven对项目构建过程分为三套相互独立的生命周期，请注意这里说的是“三套”，而且“相互独立”。</p><p>在同一个生命周期中的命令,执行后面的命令,前面的命令自动执行</p><table><thead><tr><th>三套名称</th><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>Clean Lifecycle</td><td>在进行真正的构建之前进行一些清理工作。</td><td>clean</td></tr><tr><td>Default Lifecycle</td><td>构建的核心部分，编译，测试，打包，部署等等。</td><td>compile,test,package,install,deploy</td></tr><tr><td>Site Lifecycle</td><td>生成项目报告，站点，发布站点。</td><td>site</td></tr></tbody></table><h5 id="3-2-1-clean生命周期-clean生命周期的目的是清理项目"><a href="#3-2-1-clean生命周期-clean生命周期的目的是清理项目" class="headerlink" title="3.2.1 clean生命周期 clean生命周期的目的是清理项目"></a>3.2.1 clean生命周期 clean生命周期的目的是清理项目</h5><table><thead><tr><th>阶段</th><th>描述</th></tr></thead><tbody><tr><td>pre-clean</td><td>执行一些需要在clean之前完成的工作</td></tr><tr><td>clean</td><td>移除所有上一次构建生成的文件</td></tr><tr><td>post-clean</td><td>执行一些需要在clean之后立刻完成的工作</td></tr></tbody></table><h5 id="3-2-2-default生命周期"><a href="#3-2-2-default生命周期" class="headerlink" title="3.2.2 default生命周期"></a>3.2.2 default生命周期</h5><p>default生命周期定义了真正构件时所需要执行的所有步骤，它是生命周期中最核心的部分</p><table><thead><tr><th>生命周期阶段</th><th>描述</th></tr></thead><tbody><tr><td>validate(校验)</td><td>校验项目是否正确并且所有必要的信息可以完成项目的构建过程。</td></tr><tr><td>initialize(初始化)</td><td>初始化构建状态，比如设置属性值。</td></tr><tr><td>generate-sources(生成源代码)</td><td>生成包含在编译阶段中的任何源代码。</td></tr><tr><td>process-sources(处理源代码)</td><td>处理源代码，比如说，过滤任意值。</td></tr><tr><td>generate-resources(生成资源文件)</td><td>生成将会包含在项目包中的资源文件。</td></tr><tr><td>process-resources (处理资源文件)</td><td>复制和处理资源到目标目录，为打包阶段最好准备。</td></tr><tr><td>compile(编译)</td><td>编译项目的源代码。</td></tr><tr><td>process-classes(处理类文件)</td><td>处理编译生成的文件，比如说对Java class文件做字节码改善优化。</td></tr><tr><td>generate-test-sources(生成测试源代 码)</td><td>生成包含在编译阶段中的任何测试源代码。</td></tr><tr><td>process-test-sources(处理测试源代 码)</td><td>处理测试源代码，比如说，过滤任意值。</td></tr><tr><td>generate-test-resources(生成测试资源 文件)</td><td>为测试创建资源文件。</td></tr><tr><td>process-test-resources(处理测试资源 文件)</td><td>复制和处理测试资源到目标目录。</td></tr><tr><td>test-compile(编译测试源码)</td><td>编译测试源代码到测试目标目录.</td></tr><tr><td>process-test-classes(处理测试类文件)</td><td>处理测试源码编译生成的文件。</td></tr><tr><td>test(测试)</td><td>使用合适的单元测试框架运行测试(Juint是其中之一)。</td></tr><tr><td>prepare-package(准备打包)</td><td>在实际打包之前，执行任何的必要的操作为打包做准备。</td></tr><tr><td>package(打包)</td><td>将编译后的代码打包成可分发格式的文件，比如JAR、WAR或者 EAR文件。</td></tr><tr><td>pre-integration-test(集成测试前)</td><td>在执行集成测试前进行必要的动作。比如说，搭建需要的环境。</td></tr><tr><td>integration-test(集成测试)</td><td>处理和部署项目到可以运行集成测试环境中。</td></tr><tr><td>post-integration-test(集成测试后)</td><td>在执行集成测试完成后进行必要的动作。比如说，清理集成测试 环境。</td></tr><tr><td>verify (验证)</td><td>运行任意的检查来验证项目包有效且达到质量标准。</td></tr><tr><td>install(安装)</td><td>安装项目包到本地仓库，这样项目包可以用作其他本地项目的依赖。</td></tr><tr><td>deploy(部署)</td><td>将最终的项目包复制到远程仓库中与其他开发者和项目共享。</td></tr></tbody></table><h5 id="3-2-3-site生命周期"><a href="#3-2-3-site生命周期" class="headerlink" title="3.2.3 site生命周期"></a>3.2.3 site生命周期</h5><p>site生命周期的目的是建立和发布项目站点，Maven能够基于POM所包含的信息，自动生成一个友好的站点，方便团 队交流和发布项目信息。</p><table><thead><tr><th>阶段</th><th>描述</th></tr></thead><tbody><tr><td>pre-site</td><td>执行一些需要在生成站点文档之前完成的工作</td></tr><tr><td>site</td><td>生成项目的站点文档</td></tr><tr><td>post-site</td><td>执行一些需要在生成站点文档之后完成的工作，并且为部署做准备</td></tr><tr><td>site-deploy</td><td>将生成的站点文档部署到特定的服务器上</td></tr></tbody></table><h4 id="3-3-Maven概念模型"><a href="#3-3-Maven概念模型" class="headerlink" title="3.3 Maven概念模型"></a>3.3 Maven概念模型</h4><p>Maven 包含了一个项目对象模型 (POM:Project Object Model)，一组标准集合，一个项目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在生命周期阶段(phase)中插 件(plugin)目标(goal)的逻辑。</p><p><img src="1589427711479.png" alt=""></p><ul><li><p>项目对象模型 (Project Object Model)</p><p>一个maven工程都有一个pom.xml文件，通过pom.xml文件定义项目的坐标、项目依赖、项目信息、插件目标等。</p></li><li><p>依赖管理系统(Dependency Management System)</p><p>通过maven的依赖管理对项目所依赖的jar 包进行统一管理。比如:项目依赖junit4.12，通过在pom.xml中定义 junit4.12的依赖即使用junit4.12，如下所示是junit4.12的依赖定义:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 依赖关系 --&gt;</span> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 此项目运行使用junit，所以此项目依赖junit --&gt;</span> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的项目名称 --&gt;</span> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的模块名称 --&gt;</span> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="comment">&lt;!-- junit版本 --&gt;</span> <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 依赖范围:单元测试时使用junit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>一个项目生命周期(Project Lifecycle)</p><p>使用maven完成项目的构建，项目构建包括:清理、编译、测试、部署等过程，maven将这些过程规范为一个生命</p><p>周期</p><table><thead><tr><th>清理</th><th>➡</th><th>编译</th><th>➡</th><th>测试</th><th>➡</th><th>报告</th><th>➡</th><th>打包</th><th>➡</th><th>部署</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table></li><li><p>一组标准集合</p><p>maven将整个项目管理过程定义一组标准。</p><p>比如:通过maven构建工程有标准的目录结构，有标准的生命周期阶 段、依赖管理有标准的坐标定义等。</p></li><li><p>插件(plugin)目标(goal)</p><p>maven 管理项目生命周期过程都是基于插件完成的。</p></li></ul><h1 id="四-IDEA创建Maven工程"><a href="#四-IDEA创建Maven工程" class="headerlink" title="四.IDEA创建Maven工程"></a>四.IDEA创建Maven工程</h1><h4 id="4-1-IDEA配置本地Maven"><a href="#4-1-IDEA配置本地Maven" class="headerlink" title="4.1 IDEA配置本地Maven"></a>4.1 IDEA配置本地Maven</h4><p>进入configure–&gt;settings–&gt;build–&gt;build tools–&gt;Maven中，设置maven工具和本地仓库</p><p>进入configure–&gt;settings–&gt;build–&gt;build tools–&gt;Maven–&gt;Runner中，设置VM Options:-DarchetypeCatalog=internal -Dfile.encoding=GB2312</p><h4 id="4-2-IDEA创建工程"><a href="#4-2-IDEA创建工程" class="headerlink" title="4.2 IDEA创建工程"></a>4.2 IDEA创建工程</h4><ul><li><p>Java工程</p><p>选择Maven，下一步，设置GroupID域名倒写，ArtifactID项目名，Version版本号</p></li><li><p>手动创建test测试配置文件目录</p><p>test目录右击创建resources目录，然后Mark Directory AS选Resources Root</p></li><li><p>指定maven环境的jdk版本和字符集</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- pom.xml --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置编译版本为1.8 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>maven工程命令操作</p><p>打开右侧maven栏，双击命令即可</p></li><li><p>如何导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- pom.xml --&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>安装一个插件JBLJavaToWeb</p><p>点击项目，选择插件功能JBLJavaToWeb即可将Java项目转换为Web项目</p></li></ul><h4 id="4-3-发布web工程"><a href="#4-3-发布web工程" class="headerlink" title="4.3 发布web工程"></a>4.3 发布web工程</h4><ul><li><p>idea使用外置tomcat运行</p><p>Add Configurations–&gt;ADD=&gt;Tomcat(Local)，设置名称Tomcat，其他跟之前项目一样</p></li><li><p>idea使用maven内置tomcat插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置编译版本为1.8 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">uriEncoding</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">uriEncoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-4-依赖管理"><a href="#4-4-依赖管理" class="headerlink" title="4.4 依赖管理"></a>4.4 依赖管理</h4><p>我们不考虑依赖范围引起的问题</p><table><thead><tr><th>依赖范围</th><th>对于编译classpath有效</th><th>对于测试classpath有效</th><th>对于运行时classpath有效</th><th>例子</th></tr></thead><tbody><tr><td>compile（默认）</td><td>Y</td><td>Y</td><td>Y</td><td>mybatis</td></tr><tr><td>test</td><td>-</td><td>Y</td><td>-</td><td>junit</td></tr><tr><td><strong>provided</strong></td><td>Y</td><td>Y</td><td>-</td><td>servlet-api</td></tr><tr><td>runtime</td><td>-</td><td>Y</td><td>Y</td><td>JDBC驱动</td></tr><tr><td>system</td><td>Y</td><td>Y</td><td>-</td><td>本地，maven仓库之外的库</td></tr></tbody></table><table><thead><tr><th>依赖范围</th><th>描述</th></tr></thead><tbody><tr><td>compile</td><td>默认依赖范围，作用域在编译、测试、运行时都有效。</td></tr><tr><td>test</td><td>作用域在测试时有效。编译和运行时不需要，比如：Junit。</td></tr><tr><td>provided</td><td>作用域在编译、测试时有效。运行时不需要，比如： servlet api 被 tomcat 容器提供。</td></tr><tr><td>runtime</td><td>作用域在测试、运行时有效。编译时不需要，比如：jdbc的驱动包。</td></tr><tr><td>system</td><td>system范围依赖与provided类似，jar包在本地磁盘而不是maven仓库</td></tr></tbody></table><ul><li><p>在maven_web工程中测试scope:</p><ul><li><p>默认引入 的jar包 </p><p>compile 【默认范围 可以不写】(编译、测试、运行 都有效 ) </p></li><li><p>servlet-api 、jsp-api</p><p>provided (编译、测试 有效， 运行时无效 防止和tomcat下jar冲突) </p></li><li><p>jdbc驱动jar包 </p><p>runtime (测试、运行 有效 )</p></li><li><p>junit </p><p>test (测试有效)</p></li></ul></li></ul><p>依赖范围由强到弱的顺序是:compile&gt;provided&gt;runtime&gt;test</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 介绍</strong></p><p><strong>### 项目管理工具</strong></p><p>- 依赖管理</p><p>​    - 通过maven管理jar包的整个过程</p><p>- 一键构建</p><p>​    - 通过一个maven的一个命令就可以完成工程整个构建的过程</p><p><strong>## 安装和使用</strong></p><p><strong>### 下载和安装</strong></p><p>- 下载 3.5.2 版本</p><p>- 安装解压到非中文路径</p><p>- 配置MAVEN_HOME环境变量</p><p>​    - 依赖java环境</p><p><strong>## 仓库分类</strong></p><p><strong>### 本地仓库</strong></p><p><strong>### 远程仓库</strong></p><p>- 1.中央仓库</p><p>- 2.第三方远程仓库</p><p>​    - 阿里云镜像</p><p>- 3.私服</p><p><strong>### 配置指定本地仓库</strong></p><p>- 帅哥提供5G</p><p>​    - 不建议覆盖</p><p><strong>### 配置阿里云镜像</strong></p><p>- 提高下载速度</p><p><strong>## 命令和插件</strong></p><p><strong>### 1）clean</strong></p><p>- 清理target目录</p><p><strong>### 2）compile</strong></p><p>- 编译 src/main/java</p><p><strong>### 3）test</strong></p><p>- 测试 src/test/java</p><p><strong>### 4）package</strong></p><p>- 将工程进行打包</p><p>​    - jar</p><p>​    - war</p><p><strong>### 5）install</strong></p><p>- 将打包后的工程安装到本地仓库</p><p><strong>### 6）deploy</strong></p><p>- 将本地仓库的jar包或war包上传到私服</p><p><strong>## 生命周期</strong></p><p><strong>### 清理生命周期</strong></p><p>- clean</p><p><strong>### 默认生命周期</strong></p><p>- compile</p><p>​    - test</p><p>​        - package</p><p>​            - install</p><p>​                - deploy</p><p><strong>### 站点生命周期</strong></p><p>- site</p><p><strong>## IDEA配置maven工具</strong></p><p><strong>### 全局settings配置</strong></p><p>- 指定maven工具路径</p><p>- 指定maven工具配置文件路径</p><p>- 指定maven工具本地仓库的路径</p><p><strong>### 指定本地创建maven时，使用本地骨架</strong></p><p>- -DarchetypeCatalog=internal -Dfile.encoding=GB2312</p><p><strong>## IDEA创建maven工程</strong></p><p><strong>### 1)创建java工程</strong></p><p><strong>### 2）创建web工程</strong></p><p>- 下载JBLJavaToWeb插件</p><p><strong>## IDEA发布web工程</strong></p><p><strong>### 1）使用本地tomcat</strong></p><p><strong>### 2）使用tomcat插件</strong></p><p>- pom.xml</p><p><strong>## 依赖范围</strong></p><p><strong>### 1）我们编写的web工程需要手动导入servlet-api 坐标</strong></p><p><strong>### 2）在打成 war包的时候将servlet-api 设置到 /WEB-INF/lib目录下</strong></p><p><strong>### 3）如果与tomcat软件内置的版本不一致，可能会启动报错</strong></p><p><strong>### 4）需要指定jar包的作用范围（provided）</strong></p><p><strong>### 有哪些依赖范围呢？</strong></p><p>- compile</p><p>​    - 默认，在编译、测试、运行期有效</p><p>- test</p><p>​    - 仅在测试期有效</p><p>- provided</p><p>​    - 在编译、测试期有效</p><p>- runtime</p><p>​    - 在测试、运行期有效</p><p>- system</p><p>​    - 从本地中导入jar包</p><p><strong>## 大作业</strong></p><p><strong>### 1）数据库表设计画图（8张表）</strong></p><p><strong>### 2）搭建黑马旅游网</strong></p><p><strong>### 3）安装lombok插件</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（五十三）</title>
      <link href="/2020/05/13/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B8%89%EF%BC%89/"/>
      <url>/2020/05/13/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>注解开发</li></ul><a id="more"></a><h1 id="一-MyBatis注解"><a href="#一-MyBatis注解" class="headerlink" title="一.MyBatis注解"></a>一.MyBatis注解</h1><h4 id="1-1-MyBatis常用注解"><a href="#1-1-MyBatis常用注解" class="headerlink" title="1.1 MyBatis常用注解"></a>1.1 MyBatis常用注解</h4><table><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td>@Insert</td><td>实现新增，代替了&lt;insert&gt;&lt;/insert&gt;</td></tr><tr><td>@Update</td><td>实现更新，代替了&lt;update&gt;&lt;/update&gt;</td></tr><tr><td>@Delete</td><td>实现删除，代替了&lt;delete&gt;&lt;/delete&gt;</td></tr><tr><td>@Select</td><td>实现查询，代替了&lt;select&gt;&lt;/select&gt;</td></tr><tr><td>@Result</td><td>实现结果集封装，代替了&lt;result&gt;&lt;/result&gt;</td></tr><tr><td>@Results</td><td>可以与@Result 一起使用，封装多个结果集，代替了&lt;resultMap&gt;&lt;/resultMap&gt;</td></tr><tr><td>@One</td><td>实现一对一结果集封装，代替了&lt;association&gt;&lt;/association&gt;</td></tr><tr><td>@Many</td><td>实现一对多结果集封装，代替了&lt;collection&gt;&lt;/collection&gt;</td></tr></tbody></table><h4 id="1-2-MyBatis-单表操作"><a href="#1-2-MyBatis-单表操作" class="headerlink" title="1.2 MyBatis 单表操作"></a>1.2 MyBatis 单表操作</h4><ul><li><p>需求</p><p>基于user模块通过注解实现，增删改查</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询所有</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT id AS uid,username AS uname,birthday AS bir,sex AS gender,address AS addr FROM user"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(value = &#123;</span><br><span class="line">            <span class="comment">//resultMap标签手动映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uid"</span>, property = <span class="string">"id"</span>, id = <span class="keyword">true</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uname"</span>, property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"bir"</span>, property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"gender"</span>, property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"addr"</span>, property = <span class="string">"address"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//id查询</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增</span></span><br><span class="line">    <span class="meta">@Insert</span>(<span class="string">"INSERT INTO user (username,birthday,sex,address) VALUES(#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改(动态sql推荐使用xml)</span></span><br><span class="line">    <span class="meta">@Update</span>(<span class="string">"UPDATE user SET username=#&#123;username&#125;,birthday=#&#123;birthday&#125;,sex=#&#123;sex&#125;,address=#&#123;address&#125; WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Delete</span>(<span class="string">"DELETE FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//单表测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//单表测试,查询一个</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = userMapper.findById(<span class="number">41</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"A"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setAddress(<span class="string">"GZ"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line">        userMapper.save(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="number">58</span>);</span><br><span class="line">        user.setUsername(<span class="string">"B"</span>);</span><br><span class="line">        userMapper.save(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        userMapper.delete(<span class="number">58</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-MyBatis多表操作"><a href="#1-3-MyBatis多表操作" class="headerlink" title="1.3 MyBatis多表操作"></a>1.3 MyBatis多表操作</h4><p>注解多表操作是基于嵌套查询来实现</p><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@Results</td><td>结果映射的列表，包含了一个特别结果列如何被映射到属性或字段的详情。属性有：value, id。value 属性是 Result 注解的数组。这个 id 的属性是结果映射的名称。</td></tr><tr><td>@Result</td><td>在列和属性或字段之间的单独结果映射。属性有：id, column, javaType, jdbcType, typeHandler, one, many。id 属性是一个布尔值，来标识应该被用于比较（和在 XML 映射中的<id>相似）的属性。one 属性是单独的联系，和 <association> 相似，而 many 属性是对集合而言的，和<collection>相似。它们这样命名是为了避免名称冲突。</td></tr><tr><td>@One</td><td>复杂类型的单独属性值映射。属性有：select，已映射语句（也就是映射器方法）的全限定名，它可以加载合适类型的实例。fetchType会覆盖全局的配置参数 lazyLoadingEnabled。注意 联合映射在注解 API中是不支持的。这是因为 Java 注解的限制,不允许循环引用。</td></tr><tr><td>@Many</td><td>映射到复杂类型的集合属性。属性有：select，已映射语句（也就是映射器方法）的全限定名，它可以加载合适类型的实例的集合，fetchType 会覆盖全局的配置参数 lazyLoadingEnabled。注意 联合映射在注解 API中是不支持的。这是因为 Java 注解的限制，不允许循环引用</td></tr></tbody></table><h5 id="1-3-1-一对一查询"><a href="#1-3-1-一对一查询" class="headerlink" title="1.3.1 一对一查询"></a>1.3.1 一对一查询</h5><ul><li><p>需求</p><p>查询一个订单，与此同时查询出该订单所属的用户</p></li><li><p>一对一查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders <span class="keyword">where</span> <span class="keyword">id</span> = <span class="comment">#&#123;id&#125;;</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="comment">#&#123;订单的uid&#125;;</span></span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一对一嵌套注解</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM orders WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(value = &#123;</span><br><span class="line">            <span class="comment">//resultMap标签手动映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uid"</span>, property = <span class="string">"id"</span>, id = <span class="keyword">true</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uname"</span>, property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"bir"</span>, property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"gender"</span>, property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"addr"</span>, property = <span class="string">"address"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(property = <span class="string">"user"</span>, javaType = User<span class="class">.<span class="keyword">class</span>, <span class="title">column</span> </span>= <span class="string">"uid"</span>, one = <span class="meta">@One</span>(select = <span class="string">"com.itheima.dao.UserMapper.findById"</span>,fetchType = FetchType.EAGER))</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">findByIdWithUsers</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//id查询</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>注解嵌套</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一对一嵌套注解</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM orders WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(value = &#123;</span><br><span class="line">            <span class="comment">//resultMap标签手动映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uid"</span>, property = <span class="string">"id"</span>, id = <span class="keyword">true</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uname"</span>, property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"bir"</span>, property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"gender"</span>, property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"addr"</span>, property = <span class="string">"address"</span>),</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//注解嵌套</span></span><br><span class="line">      <span class="meta">@Result</span>(property = <span class="string">"user"</span>, javaType = User<span class="class">.<span class="keyword">class</span>, <span class="title">column</span> </span>= <span class="string">"uid"</span>, one = <span class="meta">@One</span>(select = <span class="string">"com.itheima.dao.UserMapper.findById"</span>,fetchType = FetchType.EAGER))</span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">findByIdWithUsers</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一对一嵌套注解测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithUsers</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        OrderMapper orderMapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        Order order = orderMapper.findByIdWithUsers(<span class="number">1</span>);</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-3-2-一对多查询"><a href="#1-3-2-一对多查询" class="headerlink" title="1.3.2 一对多查询"></a>1.3.2 一对多查询</h5><ul><li><p>需求</p><p>查询一个用户，与此同时查询出该用户具有的订单</p></li><li><p>一对多查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="comment">#&#123;id&#125;;</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders <span class="keyword">where</span> uid = <span class="comment">#&#123;用户id&#125;;</span></span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一对多注解嵌套查询</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="meta">@Results</span>(&#123; <span class="comment">// resultMap标签手动映射</span></span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id=<span class="keyword">true</span>), <span class="comment">// result标签映射封装</span></span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"username"</span>,property = <span class="string">"username"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"birthday"</span>,property = <span class="string">"birthday"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"sex"</span>,property = <span class="string">"sex"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"address"</span>,property = <span class="string">"address"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(property = <span class="string">"orderList"</span>,javaType = List<span class="class">.<span class="keyword">class</span>,<span class="title">column</span> </span>= <span class="string">"id"</span>,many = <span class="meta">@Many</span>(select = <span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrders</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select</span>(<span class="string">"SELECT * FROM orders WHERE uid = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Order&gt; <span class="title">findByUid</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>注解嵌套</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">//一对多注解嵌套查询</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(&#123; <span class="comment">// resultMap标签手动映射</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id=<span class="keyword">true</span>), <span class="comment">// result标签映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"username"</span>,property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"birthday"</span>,property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"sex"</span>,property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"address"</span>,property = <span class="string">"address"</span>),</span><br><span class="line">            </span><br><span class="line"><span class="meta">@Result</span>(property = <span class="string">"orderList"</span>,javaType = List<span class="class">.<span class="keyword">class</span>,<span class="title">column</span> </span>= <span class="string">"id"</span>,many = <span class="meta">@Many</span>(select = <span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>))</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrders</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一对多注解测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithOrders</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user = userMapper.findByIdWithOrders(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    System.out.println(user.getOrderList());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-3-3-多对多查询"><a href="#1-3-3-多对多查询" class="headerlink" title="1.3.3 多对多查询"></a>1.3.3 多对多查询</h5><ul><li><p>需求</p><p>查询用户同时查询出该用户的所有角色</p></li><li><p>多对多查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="comment">#&#123;id&#125;;</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">role</span> r <span class="keyword">INNER</span> <span class="keyword">JOIN</span> user_role ur <span class="keyword">ON</span> r.<span class="string">`id`</span> = ur.<span class="string">`rid`</span> </span><br><span class="line"><span class="keyword">WHERE</span> ur.<span class="string">`uid`</span> = <span class="comment">#&#123;用户id&#125;;</span></span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多对多注解嵌套查询</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="meta">@Results</span>(&#123; <span class="comment">// resultMap标签手动映射</span></span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id=<span class="keyword">true</span>), <span class="comment">// result标签映射封装</span></span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"username"</span>,property = <span class="string">"username"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"birthday"</span>,property = <span class="string">"birthday"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"sex"</span>,property = <span class="string">"sex"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"address"</span>,property = <span class="string">"address"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(property = <span class="string">"roleList"</span>,javaType = List<span class="class">.<span class="keyword">class</span>,<span class="title">column</span> </span>= <span class="string">"id"</span>,many = <span class="meta">@Many</span>(select = <span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithRoles</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>RoleMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RoleMapper</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM role r INNER JOIN user_role ur ON ur.`rid = r.`id` WHERE ur.`uid`=#&#123;uid&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(value = &#123;</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id = <span class="keyword">true</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"role_name"</span>,property = <span class="string">"roleName"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"role_desc"</span>,property = <span class="string">"roleDesc"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Role&gt; <span class="title">findByUid</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>注解嵌套</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">//多对多注解嵌套查询</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(&#123; <span class="comment">// resultMap标签手动映射</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id=<span class="keyword">true</span>), <span class="comment">// result标签映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"username"</span>,property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"birthday"</span>,property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"sex"</span>,property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"address"</span>,property = <span class="string">"address"</span>),</span><br><span class="line">            </span><br><span class="line">      </span><br><span class="line"><span class="meta">@Result</span>(property = <span class="string">"roleList"</span>,javaType = List<span class="class">.<span class="keyword">class</span>,<span class="title">column</span> </span>= <span class="string">"id"</span>,many = <span class="meta">@Many</span>(select = <span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>))</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithRoles</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多对多注解测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithRoles</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    User user = userMapper.findByIdWithRoles(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    System.out.println(user.getOrderList());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-延迟加载"><a href="#1-4-延迟加载" class="headerlink" title="1.4 延迟加载"></a>1.4 延迟加载</h4><p>不管是一对多还是多对多 ，在注解配置中都有fetchType的属性</p><ul><li><p>fetchType = FetchType.LAZY    表示懒加载</p></li><li><p>fetchType = FetchType.EAGER   表示立即加载</p></li><li><p>fetchType = FetchType.DEFAULT 表示使用全局配置</p></li></ul><h4 id="1-5-二级缓存"><a href="#1-5-二级缓存" class="headerlink" title="1.5 二级缓存"></a>1.5 二级缓存</h4><p>配置SqlMapConfig.xml文件开启二级缓存的支持</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">因为cacheEnabled的取值默认就为true，所以这一步可以省略不配置。</span></span><br><span class="line"><span class="comment">为true代表开启二级缓存；为false代表不开启二级缓存。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"cacheEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>在Mapper接口中使用注解配置二级缓存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CacheNamespace</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;...&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-6-知识小结"><a href="#1-6-知识小结" class="headerlink" title="1.6 知识小结"></a>1.6 知识小结</h4><ul><li><p>注解开发和xml配置相比，从开发效率来说，注解编写更简单，效率更高。</p></li><li><p>从可维护性来说，注解如果要修改，必须修改源码，会导致维护成本增加。xml维护性更强。</p></li><li><p>经验：单表简单CRUD可以使用注解、多表及动态sql就用xml</p></li></ul><h1 id="二-MyBatis案例练习"><a href="#二-MyBatis案例练习" class="headerlink" title="二.MyBatis案例练习"></a>二.MyBatis案例练习</h1><h4 id="2-1-编程风格"><a href="#2-1-编程风格" class="headerlink" title="2.1 编程风格"></a>2.1 编程风格</h4><p>浏览器：Chrome、Firefox</p><p>包目录：cn(com).公司名.项目名（都是小写）</p><p>类：大驼峰式命名</p><p>方法名：小驼峰式命名</p><h4 id="2-2-环境搭建"><a href="#2-2-环境搭建" class="headerlink" title="2.2 环境搭建"></a>2.2 环境搭建</h4><ul><li><p>编写中文过滤器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        servletRequest.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-查询所有"><a href="#2-3-查询所有" class="headerlink" title="2.3 查询所有"></a>2.3 查询所有</h4><h5 id="2-3-1-需求和效果实现"><a href="#2-3-1-需求和效果实现" class="headerlink" title="2.3.1 需求和效果实现"></a>2.3.1 需求和效果实现</h5><p>通过三层架构+接口+mybatis，查询员工信息，在页面展示</p><h5 id="2-3-2需求分析"><a href="#2-3-2需求分析" class="headerlink" title="2.3.2需求分析"></a>2.3.2需求分析</h5><p>index.jsp–&gt;EmpServlet–&gt;EmpService接口EmpServiceImp实现类–&gt;EmpDao接口+EmpDao映射，最终返给list.jsp</p><h5 id="2-3-3-代码实现"><a href="#2-3-3-代码实现" class="headerlink" title="2.3.3 代码实现"></a>2.3.3 代码实现</h5><ul><li><p>index.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/emp?action=findAll"</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Emp实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Emp</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String joindate;</span><br><span class="line">    <span class="keyword">private</span> Double salary;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"><span class="comment">//此处省略getter/setter，toString</span></span><br></pre></td></tr></table></figure></li><li><p>EmpServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/EmpServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmpServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写service方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取action请求参数</span></span><br><span class="line">        String action = request.getParameter(<span class="string">"action"</span>);</span><br><span class="line">        <span class="comment">// 判断</span></span><br><span class="line">        <span class="keyword">if</span> (action.equals(<span class="string">"findAll"</span>)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.findAll(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询所有</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.调用service查询</span></span><br><span class="line">        EmpService empService = <span class="keyword">new</span> EmpServiceImpl();</span><br><span class="line">        List&lt;Emp&gt; list = empService.findAll();</span><br><span class="line">        <span class="comment">// 2.将list写入request域</span></span><br><span class="line">        request.setAttribute(<span class="string">"list"</span>, list);</span><br><span class="line">        <span class="comment">// 3.转发</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>EmpServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmpServiceImpl</span> <span class="keyword">implements</span> <span class="title">EmpService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Emp&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 通过mybatis工具类获取sqlSession</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        <span class="comment">// 创建EmpDao代理对象</span></span><br><span class="line">        EmpDao empDao = sqlSession.getMapper(EmpDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 查询</span></span><br><span class="line">        List&lt;Emp&gt; list= empDao.findAll();</span><br><span class="line">        <span class="comment">// 关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>EmpDao（接口+映射）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.EmpDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"Emp"</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>list.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$&#123;list&#125;"</span> <span class="attr">var</span>=<span class="string">"emp"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.id&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.ename&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.joindate&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.salary&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.address&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-分页查询"><a href="#2-4-分页查询" class="headerlink" title="2.4 分页查询"></a>2.4 分页查询</h4><h5 id="2-4-1-导入数据"><a href="#2-4-1-导入数据" class="headerlink" title="2.4.1 导入数据"></a>2.4.1 导入数据</h5><h5 id="2-4-2-分页介绍"><a href="#2-4-2-分页介绍" class="headerlink" title="2.4.2 分页介绍"></a>2.4.2 分页介绍</h5><p>在实际开发中，如果数据库数据太多，一般我们需要进行分页查询，提高效率</p><ul><li><p>分页技术实现</p><p>物理分页：数据库实现（MySQL、Oracle）</p><p>内存分页：查询全部，在通过java代码进行分页</p></li><li><p>使用MySQL操作物理分页</p><ul><li><p>语法：    select * from 表名 limit 开始索引,每页个数;    </p></li><li><p>模拟百度分页，一个显示5条，数据库共有16条记录  </p><ul><li><p>第一页    </p><p>select * from 表名 limit 0,5;  </p></li><li><p>第二页    </p><p>select * from 表名 limit 5,5;  </p></li><li><p>第三页    </p><p>select * from 表名 limit 10,5;  </p></li><li><p>第四页    </p><p>select * from 表名 limit 15,5;    </p></li><li><p>索引公式    </p><p>开始索引=(当前页-1) × 每页个数    </p></li><li><p>如何获得当前页和每页个数</p><p>前端页提供</p></li></ul></li></ul></li></ul><h5 id="2-4-3-需求和效果实现"><a href="#2-4-3-需求和效果实现" class="headerlink" title="2.4.3 需求和效果实现"></a>2.4.3 需求和效果实现</h5><p>通过mysql物理分页，一个显示5条，数据库共有16条记录</p><h5 id="2-4-3-需求分析"><a href="#2-4-3-需求分析" class="headerlink" title="2.4.3 需求分析"></a>2.4.3 需求分析</h5><p><img src="1589342693907.png" alt=""></p><ul><li><p>后端代码流程图</p><p><img src="1589350595261.png" alt=""></p></li></ul><h5 id="2-4-4-代码实现"><a href="#2-4-4-代码实现" class="headerlink" title="2.4.4 代码实现"></a>2.4.4 代码实现</h5><ul><li><p>index.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&lt;%--&lt;a href="$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findAll"&gt;员工列表&lt;/a&gt;--%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=1&amp;pageSize=5"</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>PageBean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageBean</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer totalCount; <span class="comment">// 总记录数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer totalPage;<span class="comment">// 总页数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;E&gt; list; <span class="comment">// 结果集</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer currentPage; <span class="comment">// 当前页</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer pageSize; <span class="comment">// 每页个数</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//此处省略getter/setter，toString</span></span><br></pre></td></tr></table></figure></li><li><p>EmpServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/EmpServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmpServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写service方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取action请求参数</span></span><br><span class="line">        String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">        <span class="comment">// 判断</span></span><br><span class="line">        <span class="keyword">if</span> (action.equals(<span class="string">"findAll"</span>)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.findAll(req, resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action.equals(<span class="string">"findByPage"</span>)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.findByPage(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    EmpService empService = <span class="keyword">new</span> EmpServiceImpl();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPage</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String currentPageStr = req.getParameter(<span class="string">"currentPage"</span>);</span><br><span class="line">        String pageSizeStr = req.getParameter(<span class="string">"pageSize"</span>);</span><br><span class="line">        <span class="comment">// 2.转为整型</span></span><br><span class="line">        <span class="keyword">int</span> currentPage = Integer.parseInt(currentPageStr);</span><br><span class="line">        <span class="keyword">int</span> pageSize = Integer.parseInt(pageSizeStr);</span><br><span class="line">        <span class="comment">// 3.调用service查询</span></span><br><span class="line">        PageBean&lt;Emp&gt; pb = empService.findByPage(currentPage, pageSize);</span><br><span class="line">        <span class="comment">// 4.设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"pb"</span>, pb);</span><br><span class="line">        <span class="comment">// 5.转发</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>EmpServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmpServiceImpl</span> <span class="keyword">implements</span> <span class="title">EmpService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Emp&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 通过mybatis工具类获取sqlSession</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        <span class="comment">// 创建EmpDao代理对象</span></span><br><span class="line">        EmpDao empDao = sqlSession.getMapper(EmpDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 查询</span></span><br><span class="line">        List&lt;Emp&gt; list = empDao.findAll();</span><br><span class="line">        <span class="comment">// 关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageBean&lt;Emp&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage,<span class="keyword">int</span> pageSize)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 通过mybatis工具类获取sqlSession</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建EmpDao代理对象</span></span><br><span class="line">        EmpDao empDao = sqlSession.getMapper(EmpDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建 PageBean</span></span><br><span class="line">        PageBean&lt;Emp&gt; pageBean = <span class="keyword">new</span> PageBean();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.封装当前页和每页个数</span></span><br><span class="line">        pageBean.setCurrentPage(currentPage);</span><br><span class="line">        pageBean.setPageSize(pageSize);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.调用dao查询总记录数并封装</span></span><br><span class="line">        Integer totalCount = empDao.findCount();</span><br><span class="line">        pageBean.setTotalCount(totalCount);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.计算并封装总页数</span></span><br><span class="line">        <span class="keyword">int</span> totalPage = (<span class="keyword">int</span>)Math.ceil(totalCount*<span class="number">1.0</span>/pageSize);</span><br><span class="line">        pageBean.setTotalPage(totalPage);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.计算开始索引</span></span><br><span class="line">        <span class="keyword">int</span> index = (currentPage - <span class="number">1</span>) * pageSize;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6.调用dao查询结果集并封装</span></span><br><span class="line">        List&lt;Emp&gt; list = empDao.findList(index,pageSize);</span><br><span class="line">        pageBean.setList(list);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="comment">// 7.返回pageBean对象</span></span><br><span class="line">        <span class="keyword">return</span> pageBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>EmpDao（接口+映射）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EmpDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Emp&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看总记录</span></span><br><span class="line">    <span class="function">Integer <span class="title">findCount</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//分页查询结果</span></span><br><span class="line">    <span class="function">List&lt;Emp&gt; <span class="title">findList</span><span class="params">(@Param(<span class="string">"index"</span>)</span> <span class="keyword">int</span> index,@<span class="title">Param</span><span class="params">(<span class="string">"pageSize"</span>)</span> <span class="keyword">int</span> pageSize)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.EmpDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"Emp"</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--  查看总记录数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findCount"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        SELECT count(*) FROM emp</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    查看结果集--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findList"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Emp"</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp limit #&#123;index&#125;,#&#123;pageSize&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>list.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"c"</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        table &#123;</span><br><span class="line">            margin: 30px auto;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#page</span> <span class="selector-tag">td</span> &#123;</span></span><br><span class="line">            width: 20px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"600px"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>入职日期<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>薪资<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>住址<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$&#123;emps&#125;"</span> <span class="attr">var</span>=<span class="string">"emp"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.sex&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.joindate&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.salary&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.address&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align: left"</span>&gt;</span>总共检索到$&#123;pb.totalCount&#125;条记录,共分$&#123;pb.totalPage&#125;页<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"page"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage&gt;1&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:50px"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration: none"</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=$&#123;pb.currentPage-1&#125;&amp;pageSize=5"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">begin</span>=<span class="string">"1"</span> <span class="attr">end</span>=<span class="string">"$&#123;pb.totalPage&#125;"</span> <span class="attr">var</span>=<span class="string">"page"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;page == pb.currentPage&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">"#ffd700"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration: none"</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=$&#123;page&#125;&amp;pageSize=5"</span>&gt;</span>$&#123;page&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;page != pb.currentPage&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration: none"</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=$&#123;page&#125;&amp;pageSize=5"</span>&gt;</span>$&#123;page&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage &lt; pb.totalPage&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:50px"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration: none"</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=$&#123;pb.currentPage+1&#125;&amp;pageSize=5"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> txt = <span class="built_in">document</span>.getElementById(<span class="string">"uname"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var txt = document.querySelector（"#uname"）;</span></span></span><br><span class="line"><span class="actionscript">    txt.innerText = <span class="string">"admin"</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（五十二）</title>
      <link href="/2020/05/12/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%BA%8C%EF%BC%89/"/>
      <url>/2020/05/12/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>嵌套查询</li><li>加载策略</li><li>缓存</li></ul><a id="more"></a><h1 id="一-Mybatis嵌套查询"><a href="#一-Mybatis嵌套查询" class="headerlink" title="一.Mybatis嵌套查询"></a>一.Mybatis嵌套查询</h1><h4 id="1-1-什么事嵌套查询"><a href="#1-1-什么事嵌套查询" class="headerlink" title="1.1 什么事嵌套查询"></a>1.1 什么事嵌套查询</h4><p>嵌套查询就是将原来多表查询中的联合查询语句拆成多个单表的查询，再使用mybatis的语法嵌套在一起。</p><ul><li><p>例</p><ul><li><p>需求:查询一个订单，与此同时查询出该订单所属的用户</p></li><li><p>关联查询:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> orders o <span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">user</span> u <span class="keyword">on</span> o.uid = u.id <span class="keyword">where</span> o.id = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>缺点:<br> sql语句编写难度大</p><p>数据量过大，笛卡尔积数量倍增，可能造成内存溢出</p></li><li><p>嵌套查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--根据订单id查询订单表</span></span><br><span class="line">  <span class="keyword">select</span> * <span class="keyword">from</span> orders <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="comment">--再根据订单表中uid(外键)查询用户表</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = 订单表uid;</span><br><span class="line"><span class="comment">--最后由mybatis框架进行嵌套组合</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>优点</p><p>sql语句编写简单 </p><p>没有多表关联，不会产生笛卡尔积</p></li></ul><h4 id="1-2-一对一嵌套查询"><a href="#1-2-一对一嵌套查询" class="headerlink" title="1.2 一对一嵌套查询"></a>1.2 一对一嵌套查询</h4><ul><li><p>需求</p><p>查询一个订单，与此同时查询出该订单所属的用户</p></li><li><p>sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.根据订单id查询订单表</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> orders <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 2.再根据订单表中uid(外键)查询用户表 </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">41</span>;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一对一嵌套查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">findByIdWithUser</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"orderMap"</span> <span class="attr">type</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--通过mybatis嵌套查询user表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"user"</span> <span class="attr">javaType</span>=<span class="string">"User"</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.OrderMapper.findById"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    一对一嵌套查询--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    resultType:单表映射封装 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    resultMap:多表查询必须手动映射封装--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithUser"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"orderMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM orders WHERE id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 根据用户id查询user对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    根据用户id查询user对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>通过mybatis进行嵌套组合</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"orderMap"</span> <span class="attr">type</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">&lt;!--通过mybatis嵌套查询user表</span></span><br><span class="line"><span class="comment">    一对一association</span></span><br><span class="line"><span class="comment">    column="uid" 订单查询的用户外键字段，需要作为条件</span></span><br><span class="line"><span class="comment">    select="com.itheima.dao.OrderMapper.findById"查询用户表(用户接口+执行方法名)</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"user"</span> <span class="attr">javaType</span>=<span class="string">"User"</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.UserMapper.findById"</span>/&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对一嵌套测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        OrderMapper orderMapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据id查询</span></span><br><span class="line">        Order order = orderMapper.findByIdWithUser(<span class="number">1</span>);</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[2020-05-12 21:21:03,060] DEBUG o.OrderMapper.findByIdWithUser  - &#x3D;&#x3D;&gt;  Preparing: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;先查询订单</span><br><span class="line">SELECT * FROM orders WHERE id&#x3D;? </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[2020-05-12 21:21:03,111] DEBUG o.OrderMapper.findByIdWithUser  - &#x3D;&#x3D;&gt; Parameters: 1(Integer)</span><br><span class="line">[2020-05-12 21:21:03,159] DEBUG     com.itheima.dao.UserMapper  - Cache Hit Ratio [com.itheima.dao.UserMapper]: 0.0</span><br><span class="line">[2020-05-12 21:21:03,159] DEBUG theima.dao.UserMapper.findById  - &#x3D;&#x3D;&#x3D;&#x3D;&gt;  Preparing: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;再查询用户</span><br><span class="line">SELECT * FROM user WHERE id&#x3D;? </span><br><span class="line"></span><br><span class="line">[2020-05-12 21:21:03,159] DEBUG theima.dao.UserMapper.findById  - &#x3D;&#x3D;&#x3D;&#x3D;&gt; Parameters: 41(Integer)</span><br><span class="line">[2020-05-12 21:21:03,162] DEBUG theima.dao.UserMapper.findById  - &lt;&#x3D;&#x3D;&#x3D;&#x3D;      Total: 1</span><br><span class="line">[2020-05-12 21:21:03,165] DEBUG o.OrderMapper.findByIdWithUser  - &lt;&#x3D;&#x3D;      Total: 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;用mybatis嵌套组合在一起</span><br><span class="line">Order&#123;id&#x3D;1, ordertime&#x3D;Mon May 20 15:58:02 CST 2019, money&#x3D;999.5, user&#x3D;User&#123;id&#x3D;41, username&#x3D;&#39;老王&#39;, birthday&#x3D;Tue May 28 06:47:08 CST 2019, sex&#x3D;&#39;男&#39;, address&#x3D;&#39;北京&#39;, orderList&#x3D;null, roleList&#x3D;null&#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>嵌套关系</p><table><thead><tr><th>步骤</th><th></th></tr></thead><tbody><tr><td></td><td>//一对一嵌套查询<br> public Order findByIdWithUser(Integer id);</td></tr><tr><td></td><td>// 根据用户id查询user对象 <br>public User findById(Integer id);</td></tr><tr><td></td><td>用mybatis嵌套组合在一起&lt;br&gt;&lt;association property=”user” javaType=”User” column=”uid” select=”com.itheima.dao.UserMapper.findById” fetchType=”eager”/&gt;</td></tr></tbody></table></li></ul><h4 id="1-3-一对多嵌套查询"><a href="#1-3-一对多嵌套查询" class="headerlink" title="1.3 一对多嵌套查询"></a>1.3 一对多嵌套查询</h4><ul><li><p>需求</p><p>查询一个用户，与此同时查询出该用户具有的订单</p></li><li><p>sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 先根据用户id，查询用户表(一个) </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">41</span>;</span><br><span class="line"><span class="comment">-- 2. 再根据用户id，查询订单表(多个) </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders <span class="keyword">WHERE</span> uid = <span class="number">41</span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一对多嵌套查询</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrders</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithOrdersMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--一对多嵌套组合--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">ofType</span>=<span class="string">"Order"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!--一对多嵌套查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithOrders"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithOrdersMap"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据用户id，查询订单列表</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Order&gt; <span class="title">findByUid</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUid"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">    SELECT * FROM orders WHERE uid=#&#123;uid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>通过mybatis进行嵌套组合</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithOrdersMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--一对多嵌套组合</span></span><br><span class="line"><span class="comment">    collection</span></span><br><span class="line"><span class="comment">    column="id" 根据用户查询的结果，id作为条件</span></span><br><span class="line"><span class="comment">    select="com.itheima.dao.OrderMapper.findByUid" 去查询订单表(映射接口+执行方法)</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">ofType</span>=<span class="string">"Order"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithOrders</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = userMapper.findByIdWithOrders(<span class="number">41</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先查询用户</span></span><br><span class="line">SELECT * FROM USER WHERE id = <span class="number">41</span>;</span><br><span class="line"><span class="comment">//再查询订单</span></span><br><span class="line">SELECT * FROM orders WHERE uid = <span class="number">41</span>;</span><br><span class="line"><span class="comment">//用mybatis嵌套组合在一起</span></span><br></pre></td></tr></table></figure></li><li><p>嵌套关系</p><table><thead><tr><th>步骤</th><th></th></tr></thead><tbody><tr><td></td><td>//先查询用户<br> public User findByIdWithOrders(Integer id);</td></tr><tr><td></td><td>// 再查询订单 <br>public List&lt;Order&gt; findByUid(Integer id);</td></tr><tr><td></td><td>用mybatis嵌套组合在一起&lt;br&gt;&lt;collection property=”orderList” ofType=”Order” column=”id” select=”com.itheima.dao.OrderMapper.findByUid”/&gt;</td></tr></tbody></table></li></ul><h4 id="1-4-多对多嵌套查询"><a href="#1-4-多对多嵌套查询" class="headerlink" title="1.4 多对多嵌套查询"></a>1.4 多对多嵌套查询</h4><ul><li><p>需求</p><p>查询用户同时查询出该用户的所有角色</p><p>mybatis的实现方案就是(一对多)，区别在于sql语句不同</p></li><li><p>sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 先根据用户id，查询用户表(一个)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">41</span>;</span><br><span class="line"><span class="comment">-- 2. 再根据用户id，查询角色表(多个)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">role</span> r <span class="keyword">INNER</span> <span class="keyword">JOIN</span> user_role ur <span class="keyword">ON</span> ur.<span class="string">`rid`</span> = r.<span class="string">`id`</span> <span class="keyword">WHERE</span> ur.<span class="string">`uid`</span> = <span class="number">41</span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多对多嵌套查询</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithRoles</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithRolesMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 多对多嵌套--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"roleList"</span> <span class="attr">ofType</span>=<span class="string">"Role"</span> <span class="attr">column</span>=<span class="string">"id"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">select</span>=<span class="string">"com.itheima.dao.RoleMapper.findByUid"</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithRoles"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithRolesMap"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>RoleMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RoleMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据用户id，查询角色列表</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Role&gt; <span class="title">findByUid</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RoleMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RoleMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"roleResultMap"</span> <span class="attr">type</span>=<span class="string">"Role"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_name"</span> <span class="attr">property</span>=<span class="string">"roleName"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_desc"</span> <span class="attr">property</span>=<span class="string">"roleDesc"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    根据用户id，查询角色列表--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUid"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"roleResultMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM role r INNER JOIN user_role ur ON ur.`rid`=r.`id` WHERE ur.`uid`=#&#123;uid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>通过mybatis进行嵌套组合</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span>&gt;</span><span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithOrdersMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一对多嵌套组合</span></span><br><span class="line"><span class="comment">        collection</span></span><br><span class="line"><span class="comment">        column="id" 根据用户查询的结果，id作为条件</span></span><br><span class="line"><span class="comment">        select="com.itheima.dao.OrderMapper.findByUid" 去查询订单表(映射接口+执行方法)</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">ofType</span>=<span class="string">"Order"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithRolesMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 多对多嵌套</span></span><br><span class="line"><span class="comment">        column="id" 用户id作为条件</span></span><br><span class="line"><span class="comment">        select="com.itheima.dao.RoleMapper.findByUid"查询角色表(角色映射接口+执行方法)</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"roleList"</span> <span class="attr">ofType</span>=<span class="string">"Role"</span> <span class="attr">column</span>=<span class="string">"id"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">select</span>=<span class="string">"com.itheima.dao.RoleMapper.findByUid"</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    根据用户id查询user对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--一对多嵌套查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithOrders"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithOrdersMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithRoles"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithRolesMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多对多测试(根据用户查询角色)</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithRoles</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    User user = userMapper.findByIdWithRoles(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>嵌套关系</p></li></ul><table><thead><tr><th>步骤</th><th></th></tr></thead><tbody><tr><td></td><td>//先查询用户<br> public User findByIdWithRoles(Integer id);</td></tr><tr><td></td><td>// 再查询角色列表 <br>public List&lt;Order&gt; findByUid(Integer id);</td></tr><tr><td></td><td>用mybatis嵌套组合在一起<br>&lt;collection property=”roleList” ofType=”Role” column=”id”             select=”com.itheima.dao.RoleMapper.findByUid”/&gt;</td></tr></tbody></table><h4 id="1-5-知识小结"><a href="#1-5-知识小结" class="headerlink" title="1.5 知识小结"></a>1.5 知识小结</h4><ul><li><p>步骤:一对多举例</p><p>先查询(一方)单表=&gt;再查询(多方)单表=&gt;最后由mybatis嵌套组合</p></li></ul><table><thead><tr><th>配置</th><th></th></tr></thead><tbody><tr><td>一对一配置</td><td>使用&lt;resultMap&gt;+&lt;association&gt;做配置，通过column条件，执行select查询</td></tr><tr><td>一对多配置</td><td>使用&lt;resultMap&gt;+&lt;collection&gt;做配置，通过column条件，执行select查询</td></tr><tr><td>多对多配置</td><td>使用&lt;resultMap&gt;+&lt;collection&gt;做配置，通过column条件，执行select查询</td></tr></tbody></table><table><thead><tr><th>优点:</th><th>缺点</th></tr></thead><tbody><tr><td>简化sql语句编写<br>不会产生笛卡尔积</td><td>麻烦</td></tr></tbody></table><ul><li><p>开发中到底使用哪一种</p><ul><li><p>传统开发，数据量小</p><p>使用关联查询</p></li><li><p>互联网开发，数据量大</p><p>使用嵌套查询</p></li></ul></li></ul><h1 id="二-Mybatis加载策略"><a href="#二-Mybatis加载策略" class="headerlink" title="二.Mybatis加载策略"></a>二.Mybatis加载策略</h1><h4 id="2-1-什么是加载策略"><a href="#2-1-什么是加载策略" class="headerlink" title="2.1 什么是加载策略"></a>2.1 什么是加载策略</h4><p>当多个模型(表)之间存在关联关系时, 加载一个模型(表)的同时, 是否要立即加载其关联的模型, 我们把这种决策 称为加载策略</p><p>如果加载一个模型(表)的时候, 需要立即加载出其关联的所有模型(表), 这种策略称为立即加载 </p><p>如果加载一个模型的时候, 不需要立即加载出其关联的所有模型, 等到真正需要的时候再加载, 这种策略称为延迟加载(懒加载)<br> Mybatis中的加载策略有两种:立即加载和延迟加载, 默认是立即加载</p><blockquote><p>注意:延迟加载是在嵌套查询基础上实现的</p></blockquote><ul><li><p>什么样的场景使用立即加载</p><p>一对一</p></li><li><p>什么样的场景使用延迟加载(什么时候用，什么时候查询，提高数据库性能)</p><p>一对多、多对多</p></li></ul><h4 id="2-2-配置延迟加载"><a href="#2-2-配置延迟加载" class="headerlink" title="2.2 配置延迟加载"></a>2.2 配置延迟加载</h4><h4 id="2-2-1-全局"><a href="#2-2-1-全局" class="headerlink" title="2.2.1 全局"></a>2.2.1 全局</h4><p>SqlMapConfig.xml,设置开启全局延迟加载</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启延迟(懒)加载 true 开始 false(默认值) 关闭--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-2-2-局部"><a href="#2-2-2-局部" class="headerlink" title="2.2.2 局部"></a>2.2.2 局部</h5><p>mapper映射文件，指定某一个select标签配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">association</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span> 标签 </span><br><span class="line"><span class="tag">&lt;<span class="name">collection</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span> 标签</span><br><span class="line">fetchType=""属性 </span><br><span class="line">eager 立即加载 </span><br><span class="line">lazy 延迟加载</span><br></pre></td></tr></table></figure><blockquote><p>注意:局部优先级高于全局，就近原则</p></blockquote><h4 id="2-3-触发加载"><a href="#2-3-触发加载" class="headerlink" title="2.3 触发加载"></a>2.3 触发加载</h4><p>有这样一个全局配置 lazyLoadTriggerMethods ,它定义的方法会触发立即加载</p><p>也就说当你调用它定义的方法时, 会执行数据加载, 它的默认值是 equals,clone,hashCode,toString</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启延迟(懒)加载 true 开始 false(默认值) 关闭--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--触发立即加载的配置</span></span><br><span class="line"><span class="comment">      默认值:equals,clone,hashCode,toString</span></span><br><span class="line"><span class="comment">      value="" 覆盖了默认值，表示在执行上述四个方法时，不会触发立即加载</span></span><br><span class="line"><span class="comment">      只有在执行get方法获取时，触发数据加载</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadTriggerMethods"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三-Mybatis缓存"><a href="#三-Mybatis缓存" class="headerlink" title="三.Mybatis缓存"></a>三.Mybatis缓存</h1><ul><li><p>什么是缓存</p><blockquote><p>服务器内存(硬盘)中的一块区域</p></blockquote></li><li><p>为什么使用缓存</p><blockquote><p>提高查询效率</p></blockquote></li><li><p>什么样的数据适合做缓存</p><blockquote><p>经常访问但又不经常修改的数据</p></blockquote><p>缓存是用来提高查询效率的，所有的持久层框架基本上都有缓存机制 Mybatis也提供了缓存策略，分为一级缓存，二 级缓存</p></li></ul><h4 id="3-1-一级缓存"><a href="#3-1-一级缓存" class="headerlink" title="3.1 一级缓存"></a>3.1 一级缓存</h4><h5 id="3-1-1-介绍"><a href="#3-1-1-介绍" class="headerlink" title="3.1.1 介绍"></a>3.1.1 介绍</h5><p>MyBatis一级缓存是:SqlSession级别的缓存，默认开启，不需要手动配置</p><p><img src="1589201319071.png" alt=""></p><h5 id="3-1-2-验证"><a href="#3-1-2-验证" class="headerlink" title="3.1.2 验证"></a>3.1.2 验证</h5><ul><li><p>需求</p><p>根据id查询用户</p></li><li><p>一级缓存测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一级缓存测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithBufferLevel1</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//需要用工具类开启/关闭session，否则会出现session错误</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    UserMapper userMapper1 = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">// 走数据库</span></span><br><span class="line">    User user1 = userMapper1.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user1);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 清除缓存(自己测试增、删、改)</span></span><br><span class="line">    sqlSession.clearCache();</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 获取第二个代理对象</span></span><br><span class="line">    UserMapper userMapper2 = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">// 走缓存(如果上面清除缓存，还是走数据库)</span></span><br><span class="line">    User user2 = userMapper2.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user2);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// sqlSession关闭(清除缓存)</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-1-3-分析"><a href="#3-1-3-分析" class="headerlink" title="3.1.3 分析"></a>3.1.3 分析</h5><p>一级缓存是SqlSession范围的缓存，不同的SqlSession之间的缓存区域是互相不影响的，执行SqlSession的C(增</p><p>加)U(更新)D(删除)操作，或者调用clearCache()、commit()、close()方法，都会清空缓存</p><table><thead><tr><th>SqlSession对象</th><th></th><th>LocalCache(Map集合)</th></tr></thead><tbody><tr><td>第一次查询</td><td>写入<br/>➡</td><td>LocalCache</td></tr><tr><td>如果中间发生了DML(增删改)事务操作，清除缓存</td><td>清除<br/>➡</td><td>LocalCache</td></tr><tr><td>第N次查询</td><td>读取<br>⬅</td><td>LocalCache</td></tr></tbody></table><ul><li><p>一级缓存源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.ibatis.cache.impl.PerpetualCache</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PerpetualCache</span> <span class="keyword">implements</span> <span class="title">Cache</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String id;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;Object, Object&gt; cache = <span class="keyword">new</span> HashMap();</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-2-二级缓存"><a href="#3-2-二级缓存" class="headerlink" title="3.2 二级缓存"></a>3.2 二级缓存</h4><h5 id="3-2-1-介绍"><a href="#3-2-1-介绍" class="headerlink" title="3.2.1 介绍"></a>3.2.1 介绍</h5><p>MyBatis的二级缓存虽然是默认开启的，但需要在映射文件中配置 &lt;cache/&gt; 标签才能使用，而且要求实体类的必须 实现序列化接口</p><p><img src="1589202614175.png" alt=""></p><h5 id="3-2-2-验证"><a href="#3-2-2-验证" class="headerlink" title="3.2.2 验证"></a>3.2.2 验证</h5><p>mybatis全局配置，默认值就是开启了二级缓存</p><ul><li><p>指定需要开启二级缓存的映射配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    当前映射文件，使用二级缓存--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span>&gt;</span><span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>指定User实现序列化接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span></span><br></pre></td></tr></table></figure></li><li><p>二级缓存测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 二级缓存测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithBufferLevel2</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//需要用工具类开启/关闭session，否则会出现session错误</span></span><br><span class="line">    <span class="comment">// 模拟第一个用户</span></span><br><span class="line">    SqlSession sqlSession1 = MyBatisUtils.openSession();</span><br><span class="line">    UserMapper userMapper1 = sqlSession1.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user1 = userMapper1.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user1);</span><br><span class="line">  </span><br><span class="line">    sqlSession1.close();</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 模拟第二个用户</span></span><br><span class="line">    SqlSession sqlSession2 = MyBatisUtils.openSession();</span><br><span class="line">    UserMapper userMapper2 = sqlSession2.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user2 = userMapper2.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user2);</span><br><span class="line">    sqlSession2.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-2-3-分析"><a href="#3-2-3-分析" class="headerlink" title="3.2.3 分析"></a>3.2.3 分析</h5><p>二级缓存是mapper映射级别的缓存，多个SqlSession去操作同一个Mapper映射的sql语句，多个SqlSession可以共</p><p>用二级缓存，二级缓存是跨SqlSession的。 </p><p>二级缓存相比一级缓存的范围更大(按namespace来划分)</p><p><img src="1589264629385.png" alt=""></p><h4 id="3-3-知识小结"><a href="#3-3-知识小结" class="headerlink" title="3.3 知识小结"></a>3.3 知识小结</h4><p><img src="1564842702588.png" alt=""></p><ul><li><p>mybatis的缓存，不需要手动存储和获取数据。mybatis自动维护的。</p></li><li><p>使用mybatis，如果是中小型项目，使用自带缓存的机制是可以满足需求的。如果是大型(分布式)项目，mybatis的 缓存灵活性不足，需要使用第三方的缓存技术解决问题。</p></li></ul><h1 id="四-核心配置文件回顾"><a href="#四-核心配置文件回顾" class="headerlink" title="四.核心配置文件回顾"></a>四.核心配置文件回顾</h1><h4 id="4-1-properties标签"><a href="#4-1-properties标签" class="headerlink" title="4.1 properties标签"></a>4.1 properties标签</h4><ul><li><p>加载外部的properties文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-2-settings标签"><a href="#4-2-settings标签" class="headerlink" title="4.2 settings标签"></a>4.2 settings标签</h4><ul><li><p>全局参数配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--开启懒加载--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定触发延迟加载的方法，只有get方法执行时才会触发立即加载 --&gt;</span> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadTriggerMethods"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span> <span class="comment">&lt;!--开启二级缓存 true开启(默认) false关闭--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"cacheEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-typeAliases标签"><a href="#4-3-typeAliases标签" class="headerlink" title="4.3 typeAliases标签"></a>4.3 typeAliases标签</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 单个定义别名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">"cn.itcast.domain.User"</span> <span class="attr">alias</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">typeAlias</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用包的形式批量定义别名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"cn.itcast.domain"</span>&gt;</span><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-4-mappers标签"><a href="#4-4-mappers标签" class="headerlink" title="4.4 mappers标签"></a>4.4 mappers标签</h4><ul><li><p>加载映射配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 加载指定的src目录下的映射文件，例如:</span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/itheima/mapper/UserMapper.xml"</span>/&gt;</span></span><br><span class="line">1. 加载并扫描指定包下所有的映射文件(接口)，例如: </span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.itheima.mapper"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="4-5-environments标签"><a href="#4-5-environments标签" class="headerlink" title="4.5 environments标签"></a>4.5 environments标签</h5><ul><li><p>数据源环境配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--数据库环境配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用MySQL环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--事务管理器,底层JDBC--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--连接池,内置POOLED--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.user&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 MyBatis嵌套查询</strong></p><p><strong>### 将原来多表查询中的联合查询语句，拆成多个单表的查询</strong></p><p><strong>### 实现</strong></p><p>- 一对一配置：使用&lt;resultMap&gt;+&lt;association&gt;做配置，通过column条件，执行select查询</p><p>- 一对多配置：使用&lt;resultMap&gt;+&lt;collection&gt;做配置，通过column条件，执行select查询</p><p>- 多对多配置：使用&lt;resultMap&gt;+&lt;collection&gt;做配置，通过column条件，执行select查询</p><p><strong>## 二 MyBatis加载策略</strong></p><p><strong>### 全局延迟加载</strong></p><p>- &lt;settings&gt;</p><p>​    &lt;!–开启全局延迟加载功能–&gt;</p><p>​    &lt;setting name=”lazyLoadingEnabled” value=”true”/&gt;</p><p>&lt;/settings&gt;</p><p><strong>### 局部延迟加载</strong></p><p>- &lt;association&gt; 和 &lt;collection&gt; 标签</p><p>​    - fetchType=”lazy | eager”</p><p>- 局部的加载策略优先级高于全局的加载策略。</p><p><strong>## 三 MyBatis缓存</strong></p><p><strong>### 一级缓存</strong></p><p>- 是SqlSession级别的缓存</p><p><strong>### 二级缓存</strong></p><p>- 是mapper映射级别的缓存，需要手动配置且实体类实现serializable接口</p><p><strong>## 四 核心配置文件回顾</strong></p><p><strong>### properties标签</strong></p><p>- 加载外部的properties文件</p><p><strong>### settings标签</strong></p><p>- 全局参数配置</p><p><strong>### typeAliases标签</strong></p><p>- 为 Java 类型设置一个别名</p><p><strong>### mappers标签</strong></p><p>- 加载映射配置</p><p><strong>### environments标签</strong></p><p>- 数据源环境配置</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（五十一）</title>
      <link href="/2020/05/10/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B8%80%EF%BC%89/"/>
      <url>/2020/05/10/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>Mybatis表单查询</li><li>Mybatis映射文件深入 </li><li>表关系回顾 </li><li>Mybatis多表查询</li></ul><a id="more"></a><h1 id="一-Mybatis表单查询"><a href="#一-Mybatis表单查询" class="headerlink" title="一.Mybatis表单查询"></a>一.Mybatis表单查询</h1><h4 id="1-1-resultMap标签"><a href="#1-1-resultMap标签" class="headerlink" title="1.1 resultMap标签"></a>1.1 resultMap标签</h4><ul><li><p>如果数据库返回结果的列名和要封装的实体的属性名完全一致的话用 resultType 属性</p></li><li><p>如果数据库返回结果的列名和要封装的实体的属性名有不一致的情况用 resultMap 属性</p><ul><li><p>使用resultMap手动建立对象关系映射</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//ResultSet标签</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAllResultMap</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    resultMap手动建立映射</span></span><br><span class="line"><span class="comment">    id="userResultMap"</span></span><br><span class="line"><span class="comment">    type="com.itheima.domain.User"建立映射的java类型</span></span><br><span class="line"><span class="comment">    id 标签 主键</span></span><br><span class="line"><span class="comment">    id column="uid" 列名</span></span><br><span class="line"><span class="comment">    property="id"实体属性名</span></span><br><span class="line"><span class="comment">    result 标签 普通字段</span></span><br><span class="line"><span class="comment">    column="gender"  列名</span></span><br><span class="line"><span class="comment">    property="sex" 实体属性名</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userResultMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"bir"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"gender"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    模拟表与实体的属性名不一致情况--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAllResultMap"</span> <span class="attr">resultMap</span>=<span class="string">"userResultMap"</span>&gt;</span></span><br><span class="line">        SELECT id AS uid,username AS `name`,birthday AS bir,sex AS gender,address FROM `user`</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 此方法在测试方法执行之前，执行</span></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取sqlSession对象</span></span><br><span class="line">        <span class="comment">// 此方法必须线程内独享</span></span><br><span class="line">        sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 此方法在测试地方法执行之后，执行</span></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 需要通过mybatis帮你根据接口规范创建实现类</span></span><br><span class="line">        <span class="comment">// 创建代理对象(实现类)</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 执行sql</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//resultMap标签</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAllResultMap</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper sessionMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        List&lt;User&gt; list = sessionMapper.findAllResultMap();</span><br><span class="line">        <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="1-2-多条件查询"><a href="#1-2-多条件查询" class="headerlink" title="1.2 多条件查询"></a>1.2 多条件查询</h4><ul><li><p>需求</p><p>根据id和username查询user表</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多条件查询:方式一</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByIdAndUsernameV1</span><span class="params">(@Param(<span class="string">"id"</span>)</span> Integer id, @<span class="title">Param</span><span class="params">(<span class="string">"username"</span>)</span> String username)</span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">//多条件查询:方式二</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByIdAndUsernameV2</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    多条件查询方式</span></span><br><span class="line"><span class="comment">如果传递多个参数，属性省略不写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdAndUsernameV1"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE id=#&#123;id&#125; AND username=#&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdAndUsernameV2"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE id=#&#123;id&#125; AND username=#&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多条件查询</span></span><br><span class="line"><span class="comment">//V1</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByIdAndUsernameV1</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByIdAndUsernameV1(<span class="number">41</span>, <span class="string">"老王"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">//V2</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByIdAndUsernameV2</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper sessionMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">41</span>);</span><br><span class="line">    user.setUsername(<span class="string">"W"</span>);</span><br><span class="line">    List&lt;User&gt; list = sessionMapper.findByIdAndUsernameV2(user);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-模糊查询"><a href="#1-3-模糊查询" class="headerlink" title="1.3 模糊查询"></a>1.3 模糊查询</h4><ul><li><p>需求</p><p>根据username模糊查询user表</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模糊查询，方式一</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByUsername1</span><span class="params">(String username)</span></span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 模糊查询，方式二</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByUsername2</span><span class="params">(String username)</span></span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 模糊查询，方式三</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByUsername3</span><span class="params">(String username)</span></span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 模糊查询，方式四</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByUsername4</span><span class="params">(String username)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--    模糊查询，方式一</span></span><br><span class="line"><span class="comment">    java代码与sql语句有耦合--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername1"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE username like #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    模糊查询，方式二</span></span><br><span class="line"><span class="comment">    mysql5.5版本之前，此拼接不支持多个单引号</span></span><br><span class="line"><span class="comment">    oracle数据库，除了别名的位置，其余位置都不能使用双引号--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername2"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE username like "%" #&#123;username&#125; "%"</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    此方式，会出现sql注入</span></span><br><span class="line"><span class="comment">    $&#123;&#125; 字符串拼接，如果接收的简单数据类型，表达式名称必须是value</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername3"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE username like '%$&#123;value&#125;%'</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    模糊查询，方式四【掌握】--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    使用concat()函数拼接--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    注意:oracle数据库 concat()函数只能传递二个参数,可以使用函数嵌套来解决--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername4"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE username like concat(concat('%',#&#123;username&#125;),'%')</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByUsername1</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByUsername1(<span class="string">"%王%"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByUsername2</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByUsername2(<span class="string">"王"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByUsername3</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByUsername3(<span class="string">"王"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByUsername4</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByUsername4(<span class="string">"王"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-与-区别"><a href="#1-4-与-区别" class="headerlink" title="1.4 ${} 与 #{} 区别"></a>1.4 ${} 与 #{} 区别</h4><ul><li><p>${} :底层 Statement</p><ul><li>sql与参数拼接在一起，会出现sql注入问题 </li><li>每次执行sql语句都会编译一次</li><li>接收简单数据类型，命名:{value}</li><li>接收引用数据类型，命名: ${属性名}</li><li>字符串类型需要加 ‘${value}’</li></ul></li><li><p>#{}底层 PreparedStatement</p><ul><li>sql与参数分离，不会出现sql注入问题 </li><li>sql只需要编译一次</li><li>接收简单数据类型，命名:#{随便写} </li><li>接收引用数据类型，命名:#{属性名}</li></ul></li></ul><h1 id="二-Mybatis映射文件深入"><a href="#二-Mybatis映射文件深入" class="headerlink" title="二.Mybatis映射文件深入"></a>二.Mybatis映射文件深入</h1><h4 id="2-1-返回主键"><a href="#2-1-返回主键" class="headerlink" title="2.1 返回主键"></a>2.1 返回主键</h4><ul><li><p>应用场景</p><p>向数据库保存一个user对象后, 然后在控制台记录下此新增user的主键值(id)</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"><span class="comment">//    返回主键，方式一</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save1</span><span class="params">(User user)</span></span>;</span><br><span class="line"><span class="comment">//    返回主键，方式二</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save2</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    返回主键，方式一</span></span><br><span class="line"><span class="comment">    useGeneratedKeys属性</span></span><br><span class="line"><span class="comment">    useGeneratedKeys="true" 开启新增主键返回功能</span></span><br><span class="line"><span class="comment">    keyColumn="id" user表中主键列</span></span><br><span class="line"><span class="comment">    keyProperty="id" user实体主键属性</span></span><br><span class="line"><span class="comment">    注意:仅支持主键自增类型的数据库 MySQL 和 SqlServer ， oracle不支持--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save1"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span> <span class="attr">keyColumn</span>=<span class="string">"id"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">        INSERT INTO user (username,birthday,sex,address) VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save2"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">selectKey</span> <span class="attr">keyColumn</span>=<span class="string">"id"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span> <span class="attr">resultType</span>=<span class="string">"int"</span> <span class="attr">order</span>=<span class="string">"AFTER"</span>&gt;</span></span><br><span class="line">            SELECT LAST_INSERT_ID()</span><br><span class="line">        <span class="tag">&lt;/<span class="name">selectKey</span>&gt;</span></span><br><span class="line">        INSERT INTO user (username,birthday,sex,address) VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SqlSession sqlSession=<span class="keyword">null</span>;</span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span></span>&#123;</span><br><span class="line">        sqlSession= MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span></span>&#123;</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave1</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"Johe Eve"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setAddress(<span class="string">"SZ"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line"></span><br><span class="line">        userMapper.save1(user);</span><br><span class="line">        System.out.println(<span class="string">"When Insert,Primary Key Returns: "</span>+user.getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave2</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"Johe Eve"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setAddress(<span class="string">"SZ"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line"></span><br><span class="line">        userMapper.save2(user);</span><br><span class="line">        System.out.println(<span class="string">"When Insert,Primary Key Returns: "</span>+user.getId());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-2-动态SQL"><a href="#2-2-动态SQL" class="headerlink" title="2.2 动态SQL"></a>2.2 动态SQL</h4><h5 id="2-2-1-什么是动态SQL"><a href="#2-2-1-什么是动态SQL" class="headerlink" title="2.2.1 什么是动态SQL"></a>2.2.1 什么是动态SQL</h5><ul><li><p>需求</p><p>把id和username封装到user对象中，将user对象中不为空的属性作为查询条件</p><p>这个时候我们执行的sql就有多种可能</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 如果id和用户名不为空</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span>= <span class="comment">#&#123;id&#125; and username = #&#123;username&#125;</span></span><br><span class="line"><span class="comment">-- 如果只有id</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span>= <span class="comment">#&#123;id&#125;</span></span><br><span class="line"><span class="comment">-- 如果只有用户名</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username = <span class="comment">#&#123;username&#125;</span></span><br><span class="line"><span class="comment">-- 如果id和用户名都为空 </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span></span><br></pre></td></tr></table></figure><p>像上面这样, 根据传入的参数不同, 需要执行的SQL的结构就会不同，这就是动态SQL</p></li></ul><h5 id="2-2-2-if-条件判断"><a href="#2-2-2-if-条件判断" class="headerlink" title="2.2.2 if 条件判断"></a>2.2.2 if 条件判断</h5><ul><li><p>需求 </p><p>把id和username封装到user对象中，将user对象中不为空的属性作为查询条件</p><ul><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// if 条件判断</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByIdAndUsernameIf</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">if标签 条件判断</span></span><br><span class="line"><span class="comment">where标签 相当于 where 1=1 功能，如果没有条件情况下 where语句不在sql语句拼接</span></span><br><span class="line"><span class="comment">可以去掉第一个 and 或者 or</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdAndUsernameIf"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"id != null"</span>&gt;</span></span><br><span class="line">            AND id=#&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"username != null"</span>&gt;</span></span><br><span class="line">            AND username = #&#123;username&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// if判断</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByIdAndUsernameIf</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 拼接条件</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line">    param.setId(<span class="number">41</span>);</span><br><span class="line">    param.setUsername(<span class="string">"老王"</span>);</span><br><span class="line">    </span><br><span class="line">    List&lt;User&gt; list = userMapper.findByIdAndUsernameIf(param);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="2-2-3-set-用于update语句"><a href="#2-2-3-set-用于update语句" class="headerlink" title="2.2.3 set 用于update语句"></a>2.2.3 set 用于update语句</h5><ul><li><p>需求</p><p>动态更新user表数据，如果该属性有值就更新，没有值不做处理</p><ul><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// set 更新</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateIf</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    set标签 更新 ，将条件中的最后一个逗号抹除--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateIf"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    update user</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"username != null"</span>&gt;</span></span><br><span class="line">            username=#&#123;username&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"birthday != null"</span>&gt;</span></span><br><span class="line">            birthday=#&#123;birthday&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null"</span>&gt;</span></span><br><span class="line">            sex=#&#123;sex&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"address != null"</span>&gt;</span></span><br><span class="line">            address=#&#123;address&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//update</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateIf</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置更新内容</span></span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">57</span>);</span><br><span class="line">    user.setUsername(<span class="string">"Steve"</span>);</span><br><span class="line">    </span><br><span class="line">    userMapper.updateIf(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="2-2-4-foreach-用于循环遍历"><a href="#2-2-4-foreach-用于循环遍历" class="headerlink" title="2.2.4 foreach 用于循环遍历"></a>2.2.4 foreach 用于循环遍历</h5><ul><li><p>需求</p><p>根据多个id查询，user对象的集合</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">IN</span> (<span class="number">41</span>,<span class="number">43</span>,<span class="number">46</span>);</span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th>&lt;foreach&gt;标签用于遍历集合</th><th>属性</th></tr></thead><tbody><tr><td>collection</td><td>代表要遍历的集合元素</td></tr><tr><td>open</td><td>代表语句的开始部分</td></tr><tr><td>close</td><td>代表结束部分</td></tr><tr><td>item</td><td>代表遍历集合的每个元素，生成的变量名</td></tr><tr><td>sperator</td><td>代表分隔符</td></tr></tbody></table><ul><li><p>练习三个版本</p><table><thead><tr><th>普通list集合</th><th>普通array数组</th><th>实体属性list集合</th></tr></thead><tbody><tr><td></td><td></td><td></td></tr></tbody></table><ul><li><p>domain/QueryVo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    根据页面查询条件封装到实体中 View Object</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Integer&gt; ids;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">getIds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ids;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIds</span><span class="params">(List&lt;Integer&gt; ids)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ids = ids;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// foreach标签，普通list集合</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByList</span><span class="params">(List&lt;Integer&gt; ids)</span></span>;</span><br><span class="line"><span class="comment">// foreach标签，普通array数组</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByArray</span><span class="params">(Integer [] ids)</span></span>;</span><br><span class="line"><span class="comment">// foreach标签，实体属性list集合</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByQueryVo</span><span class="params">(QueryVo queryVo)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- foreach标签，普通list集合</span></span><br><span class="line"><span class="comment">    传递 普通类型list集合 collection="list"</span></span><br><span class="line"><span class="comment">    属性取值:collection、list</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByList"</span> <span class="attr">parameterType</span>=<span class="string">"list"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    foreach标签，普通array数组</span></span><br><span class="line"><span class="comment">     传统 普通类型array数组 collection="array"</span></span><br><span class="line"><span class="comment">     属性取值 array--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByArray"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"array"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    foreach标签，实体属性list集合</span></span><br><span class="line"><span class="comment">     传递 实体中list属性集合的话，collection="ids"</span></span><br><span class="line"><span class="comment">     取值，实体的属性名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByQueryVo"</span> <span class="attr">parameterType</span>=<span class="string">"QueryVo"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"ids"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// foreach标签，普通list集合</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByList</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    List ids = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    ids.add(<span class="number">41</span>);</span><br><span class="line">    ids.add(<span class="number">46</span>);</span><br><span class="line">    List list = userMapper.findByList(ids);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// foreach标签，普通array数组</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByArray</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    Integer[] ids = &#123;<span class="number">41</span>, <span class="number">46</span>, <span class="number">49</span>&#125;;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByArray(ids);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//    foreach标签，实体属性list集合</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByQueryVo</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    List ids= <span class="keyword">new</span> ArrayList();</span><br><span class="line">    ids.add(<span class="number">41</span>);</span><br><span class="line">    ids.add(<span class="number">46</span>);</span><br><span class="line">    QueryVo queryVo = <span class="keyword">new</span> QueryVo();</span><br><span class="line">    queryVo.setIds(ids);</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByQueryVo(queryVo);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="2-3-SQL片段"><a href="#2-3-SQL片段" class="headerlink" title="2.3 SQL片段"></a>2.3 SQL片段</h4><ul><li><p>应用场景</p><p>映射文件中可将重复的 sql 提取出来，使用时用 include 引用即可，最终达到 sql 重用的目的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!-- foreach标签，普通list集合</span></span><br><span class="line"><span class="comment">        传递 普通类型list集合 collection="list"</span></span><br><span class="line"><span class="comment">        属性取值:collection、list</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByList"</span> <span class="attr">parameterType</span>=<span class="string">"list"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"selectUser"</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        WHERE id in</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    foreach标签，普通array数组</span></span><br><span class="line"><span class="comment">         传统 普通类型array数组 collection="array"</span></span><br><span class="line"><span class="comment">         属性取值 array--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByArray"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"selectUser"</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        WHERE id in</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"array"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    foreach标签，实体属性list集合</span></span><br><span class="line"><span class="comment">         传递 实体中list属性集合的话，collection="ids"</span></span><br><span class="line"><span class="comment">         取值，实体的属性名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByQueryVo"</span> <span class="attr">parameterType</span>=<span class="string">"QueryVo"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"selectUser"</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        WHERE id in</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"ids"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 将当前映射文件的共同的sql代码抽取一个片段，实现sql的复用性...</span></span><br><span class="line"><span class="comment">id="selectUser" 当前sql片段的唯一标识 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"selectUser"</span>&gt;</span></span><br><span class="line">     select id,username,birthday,sex,address from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-知识小结"><a href="#2-4-知识小结" class="headerlink" title="2.4 知识小结"></a>2.4 知识小结</h4><ul><li><p>MyBatis映射文件配置</p><table><thead><tr><th>关键字</th><th>配置</th></tr></thead><tbody><tr><td>&lt;select&gt;</td><td>查询</td></tr><tr><td>&lt;insert&gt;</td><td>插入</td></tr><tr><td>&lt;update&gt;</td><td>修改</td></tr><tr><td>&lt;delete&gt;</td><td>删除</td></tr><tr><td>&lt;selectKey&gt;</td><td>返回主键</td></tr><tr><td>&lt;where&gt;</td><td>where条件</td></tr><tr><td>&lt;if&gt;</td><td>if判断</td></tr><tr><td>&lt;foreach&gt;</td><td>for循环</td></tr><tr><td>&lt;set&gt;</td><td>set设置</td></tr><tr><td>&lt;sql&gt;</td><td>sql片段抽取</td></tr></tbody></table></li></ul><h1 id="三-表关系回顾"><a href="#三-表关系回顾" class="headerlink" title="三.表关系回顾"></a>三.表关系回顾</h1><ul><li><p>在关系型数据库当中，表关系分为三种</p><table><thead><tr><th>关系</th><th>说明</th></tr></thead><tbody><tr><td>特殊情况</td><td>一个订单只能从属于一个用户，mybatis框架就把这个多对一看做成一对一来实现</td></tr><tr><td>数据建立表关系</td><td>通过主外键关联</td></tr><tr><td>实体建立关系</td><td>通过属性关联</td></tr></tbody></table></li></ul><p><img src="1589091271542.png" alt=""></p><h1 id="四-Mybatis多表查询"><a href="#四-Mybatis多表查询" class="headerlink" title="四.Mybatis多表查询"></a>四.Mybatis多表查询</h1><h4 id="4-1-一对一-多对一"><a href="#4-1-一对一-多对一" class="headerlink" title="4.1 一对一(多对一)"></a>4.1 一对一(多对一)</h4><ul><li><p>一对一查询模型 </p><p>用户表和订单表的关系为，一个用户有多个订单，一个订单只从属于一个用户 </p><p>一对一查询的需求:查询一个订单，与此同时查询出该订单所属的用户</p></li><li><p>实体和表映射关系</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders o <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`user`</span> u <span class="keyword">ON</span> o.<span class="string">`uid`</span> = u.<span class="string">`id`</span> <span class="keyword">WHERE</span> o.<span class="string">`id`</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>Order实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> Date ordertime;</span><br><span class="line">    <span class="keyword">private</span> Double money;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个订单从属于一个用户</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//此处省略getter/setter，toString，User实体类</span></span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 一对一关联查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">findByIdWithUser</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"orderMap"</span> <span class="attr">type</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        一对一多表关联 association标签</span></span><br><span class="line"><span class="comment">        property="user" 关联实体的属性名 javaType="cn.itheima.domain.User" 关联实体java类型</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"user"</span> <span class="attr">javaType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    一对一关联查询</span></span><br><span class="line"><span class="comment">        resultType:单表映射封装</span></span><br><span class="line"><span class="comment">        resultMap:多表查询必须手动映射封装--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithUser"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"orderMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM orders o INNER JOIN `user` u ON o.`uid`=u.`id` WHERE o.`id`=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对一关联测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        OrderMapper orderMapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        Order order = orderMapper.findByIdWithUser(<span class="number">1</span>);</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-2-一对多"><a href="#4-2-一对多" class="headerlink" title="4.2 一对多"></a>4.2 一对多</h4><ul><li><p>一对多查询模型 </p><p>用户表和订单表的关系为，一个用户有多个订单，一个订单只从属于一个用户 </p><p>一对多查询的需求：查询一个用户，与此同时查询出该用户具有的订单</p></li><li><p>实体和表关系</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *,o.id <span class="keyword">AS</span> <span class="keyword">oid</span> <span class="keyword">FROM</span> <span class="string">`user`</span> u <span class="keyword">INNER</span> <span class="keyword">JOIN</span> orders o <span class="keyword">ON</span> u.<span class="string">`id`</span> = o.<span class="string">`uid`</span> <span class="keyword">WHERE</span> u.<span class="string">`id`</span>=<span class="number">41</span></span><br></pre></td></tr></table></figure></li><li><p>User实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个用户具有多个订单</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Order&gt; orderList;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//此处省略getter/setter,toString</span></span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 一对多关联</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrders</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><ul><li>有多少记录，就创建多少order对象</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        一对多关联 collection标签</span></span><br><span class="line"><span class="comment">        property="orderList" 关联实体集合的属性名</span></span><br><span class="line"><span class="comment">        ofType="cn.itcast.domain.Order" 关联实体的java类型(集合泛型的类型)</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">ofType</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"oid"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--       一对多关联--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithOrders"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userMap"</span>&gt;</span></span><br><span class="line">        SELECT *,o.id AS oid FROM `user` u INNER JOIN orders `o` ON u.`id`=o.`uid` WHERE u.`id`=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><ul><li><p>test/BaseMapperTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>UserMapperTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对多测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithOrders</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = userMapper.findByIdWithOrders(<span class="number">41</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-多对多-由二个一对多组成"><a href="#4-3-多对多-由二个一对多组成" class="headerlink" title="4.3 多对多(由二个一对多组成)"></a>4.3 多对多(由二个一对多组成)</h4><ul><li><p>实体和表关系</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> u</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> user_role ur <span class="keyword">ON</span> u.<span class="string">`id`</span> = ur.<span class="string">`uid`</span> <span class="comment">-- 用户连接中间表 </span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">role</span> r <span class="keyword">ON</span> ur.<span class="string">`rid`</span> = r.<span class="string">`id`</span> <span class="comment">-- 再根据中间表连接角色 </span></span><br><span class="line"><span class="keyword">WHERE</span> u.id = <span class="number">41</span> <span class="comment">-- 用户id 作为条件</span></span><br></pre></td></tr></table></figure></li><li><p>User和Role实体</p><ul><li><p>Role</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String roleName;</span><br><span class="line">    <span class="keyword">private</span> String roleDesc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个用户具有多个订单</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Order&gt; orderList;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个用户具有多个角色</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Role&gt; roleList;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多对多关联</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithRoles</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithRoleMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">&lt;!--多对多实现步骤和一对多是一样的(区别在于sql语句)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"roleList"</span> <span class="attr">ofType</span>=<span class="string">"Role"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"rid"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_name"</span> <span class="attr">property</span>=<span class="string">"roleName"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_desc"</span> <span class="attr">property</span>=<span class="string">"roleDesc"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithRoles"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithRoleMap"</span>&gt;</span></span><br><span class="line">    SELECT * FROM `user` u INNER JOIN user_role ur</span><br><span class="line">    ON u.`id`=ur.`uid` INNER JOIN role r ON ur.`rid`=r.`id`</span><br><span class="line">    WHERE u.id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithRoles</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    User user = userMapper.findByIdWithRoles(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-4-知识小结"><a href="#4-4-知识小结" class="headerlink" title="4.4 知识小结"></a>4.4 知识小结</h4><table><thead><tr><th>一对一配置:使用&lt;resultMap&gt;+&lt;association&gt;做配置</th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>association:</td><td></td><td></td></tr><tr><td></td><td></td><td>property</td><td>关联的实体属性名</td></tr><tr><td></td><td></td><td>javaType</td><td>关联的实体类型(别名)</td></tr></tbody></table><table><thead><tr><th>一对多配置:使用&lt;resultMap&gt;+&lt;collection&gt;做配置</th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>collection:</td><td></td><td></td></tr><tr><td></td><td></td><td>property</td><td>关联的集合属性名</td></tr><tr><td></td><td></td><td>ofType</td><td>关联的集合泛型类型(别名)</td></tr></tbody></table><table><thead><tr><th>多对多配置:使用&lt;resultMap&gt;+&lt;collection&gt;做配置</th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>collection:</td><td></td><td></td></tr><tr><td></td><td></td><td>property</td><td>关联的集合属性名</td></tr><tr><td></td><td></td><td>ofType</td><td>关联的集合泛型类型(别名)</td></tr></tbody></table><p>多对多的配置跟一对多很相似，难度在于SQL语句的编写。</p><h4 id="4-5-优化测试"><a href="#4-5-优化测试" class="headerlink" title="4.5 优化测试"></a>4.5 优化测试</h4><ul><li><p>BaseMapperTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapperTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span></span>&#123;</span><br><span class="line">    <span class="comment">// 一对一关联测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        OrderMapper orderMapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        Order order = orderMapper.findByIdWithUser(<span class="number">1</span>);</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>  <strong>## 一 Mybatis单表查询</strong></p><p>  <strong>### resultMap标签</strong></p><p>  - 解决：如果实体的属性名与表的字段名不一致，需要使用ResultMap手动进行封装</p><p>  <strong>### 多条件查询</strong></p><p>  - 二个及以下参数，简单类型@Param</p><p>  - 二个及以上参数，封装实体中</p><p>  <strong>### 模糊查询</strong></p><p>  - concat() 函数拼接</p><p>  <strong>### ${}与#{}区别</strong></p><p>  - ${}  statement</p><p>  - #{} preparedStatement</p><p>  <strong>## 二 Mybatis映射文件深入</strong></p><p>  <strong>### 返回主键</strong></p><p>  - useGeneratedKeys</p><p>  ​    - 支持主键自增类型的数据库：MySQL、sqlServer</p><p>  - selectKey</p><p>  <strong>### 动态sql</strong></p><p>  - <if></p><p>  ​    - 条件判断</p><p>  - <where></p><p>  ​    - 去掉第一个条件的 前 and  | or</p><p>  - <set></p><p>  ​    - 去掉最后一个条件的 逗号</p><p>  - <foreach></p><p>  ​    - 普通类型 List，collection属性：list</p><p>  ​    - 普通类型 Array，collection属性：array</p><p>  ​    - 复杂类型pojo对象，collection属性：实体的属性名</p><p>  - <sql></p><p>  ​    - 将公共代码抽取，实现复用性</p><p>  <strong>## 三 表关系回顾</strong></p><p>  <strong>## 四 MyBatis多表查询</strong></p><p>  <strong>### 一对一（多对一）</strong></p><p>  - 使用<resultMap>+<association>做配置</p><p>  ​    - property</p><p>  ​        - 关联实体属性名</p><p>  ​    - javaType</p><p>  ​        - 关联实体属性类型（别名）</p><p>  <strong>### 一对多</strong></p><p>  - 使用<resultMap>+<collection>做配置</p><p>  ​    - property</p><p>  ​        - 关联集合属性名</p><p>  ​    - ofType</p><p>  ​        - 关联集合泛型类型（别名）</p><p>  <strong>### 多对多</strong></p><p>  - 使用<resultMap>+<collection>做配置</p><p>  ​    - property</p><p>  ​        - 关联集合属性名</p><p>  ​    - ofType</p><p>  ​        - 关联集合泛型类型（别名）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（五十）</title>
      <link href="/2020/05/09/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%EF%BC%89/"/>
      <url>/2020/05/09/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>框架简介</li><li>Mybatis简介</li><li>Mybatis快速入门</li><li>Mybatis映射文件概述</li><li>Mybatis增删改查</li><li>抽取工具类</li><li>Mybatis核心文件概述</li><li>Mybatis的API概述</li><li>Mybatis实现Dao层</li><li>接口代理的增删改查</li></ul><a id="more"></a><h1 id="一-框架简介"><a href="#一-框架简介" class="headerlink" title="一.框架简介"></a>一.框架简介</h1><ul><li><p>之前的MVC三层架构</p><p>表现层:Java与浏览器交互</p><p>业务层:根据某个功能除了业务逻辑</p><p>持久层:Java与数据库交互</p><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>高内聚，低耦合</td><td>所有基础代码都需要手动编写，繁琐导致效率低</td></tr></tbody></table></li><li><p>框架</p><p>半成品软件</p></li><li><p>框架阶段三层代码</p><p>框架阶段实现了绝大部分基础代码，只需要开发一些特有代码即可，提高开发效率</p></li></ul><table><thead><tr><th>Broswer</th><th></th><th>Server</th><th></th><th>Server</th><th></th><th>Server</th><th></th><th>数据库</th></tr></thead><tbody><tr><td></td><td></td><td>web层</td><td></td><td>service层</td><td></td><td>dao层</td><td></td><td></td></tr><tr><td></td><td></td><td>Servlet控制器</td><td></td><td>将多个dao排序组合实现某个功能</td><td></td><td>提高jdbc操作数据库，实现最基本CURD</td><td>➡<br>⬅</td><td>SQL</td></tr><tr><td>user/passwd</td><td>➡</td><td>⬇</td><td>↘<br>↖</td><td>功能A<br>find()<br>save()</td><td>➡<br/>⬅</td><td>find()<br>save()<br>update()<br>delete()</td><td></td><td></td></tr><tr><td>Login.jsp</td><td>⬅</td><td>jsp视图</td><td>↘</td><td></td><td>↙</td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td>实体类domain,pojo</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td>常用框架:SpringMVC，Struts2</td><td></td><td>常用框架：Spring</td><td></td><td>常用框架：Mybatis,hibernate，jpa</td><td></td><td></td></tr></tbody></table><ul><li><p>目前国内主流框架</p><p>SSM(springMVC+Spring+mybatis)</p></li></ul><h1 id="二-Mybatis简介"><a href="#二-Mybatis简介" class="headerlink" title="二.Mybatis简介"></a>二.Mybatis简介</h1><h4 id="2-1-ORM概述"><a href="#2-1-ORM概述" class="headerlink" title="2.1 ORM概述"></a>2.1 ORM概述</h4><p>ORM(object Relational Mapping)对象关系映射</p><blockquote><p>常用ORM框架有:hibernate(全自动ORM映射)、mybatis(半自动ORM映射)、jpa</p></blockquote><ul><li><p>例</p><p>Object:User类</p><p>Relational:user表</p><p>Mapping:将User类中成员变量与user表中的字段产生映射关系</p><p>需求:操作user对象的CURD，就能实现对user表的字段修改，一个实体类对应一张表，一个对象对应一条记录</p><p>总结：以面向对象方式，实现对数据库的操作</p></li></ul><h4 id="2-2-Mybatis介绍"><a href="#2-2-Mybatis介绍" class="headerlink" title="2.2 Mybatis介绍"></a>2.2 Mybatis介绍</h4><ul><li><p>简介</p><p>MyBatis官网地址:<a href="http://www.mybatis.org/mybatis-3/">http://www.mybatis.org/mybatis-3/</a></p><ul><li>mybatis是一款优秀的持久层框架，他不需要项JDBC繁琐编写代码，只需要开发人员关注(接口+sql) </li><li>它采用了简单的xml配置+接口方式实现增删改查，开发时我们只需要关注SQL本身</li></ul></li></ul><h1 id="三-Mybatis快速入门"><a href="#三-Mybatis快速入门" class="headerlink" title="三.Mybatis快速入门*"></a>三.Mybatis快速入门*</h1><h4 id="3-1-步骤分析"><a href="#3-1-步骤分析" class="headerlink" title="3.1 步骤分析"></a>3.1 步骤分析</h4><ul><li>创建mybatis_db数据库和user表</li><li>创建java项目，导入jar包 (mysql驱动、mybatis、log4j日志) </li><li>创建User实体类</li><li>编写映射文件UserMapper.xml</li><li>编写核心文件SqlMapConfig.xml</li><li>编写测试代码</li></ul><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li>创建mybatis_db数据库和user表</li></ul><details><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*!40101 SET SQL_MODE = ''*/</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> <span class="string">`mybatis_db`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">USE</span> <span class="string">`mybatis_db`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40014 SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 */</span>;</span><br><span class="line"><span class="comment">/*!40101 SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO' */</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`orders`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`orders`</span></span><br><span class="line">(</span><br><span class="line">    <span class="string">`id`</span>        <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    <span class="string">`uid`</span>       <span class="built_in">int</span>(<span class="number">11</span>)  <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="string">`ordertime`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="string">`money`</span>     <span class="keyword">double</span>   <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">    <span class="keyword">KEY</span> <span class="string">`uid`</span> (<span class="string">`uid`</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> <span class="string">`orders_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`uid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`user`</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  AUTO_INCREMENT = <span class="number">4</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `orders` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="string">`orders`</span>(<span class="string">`id`</span>, <span class="string">`uid`</span>, <span class="string">`ordertime`</span>, <span class="string">`money`</span>)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">1</span>, <span class="number">41</span>, <span class="string">'2019-05-20 02:58:02'</span>, <span class="number">999.5</span>),</span><br><span class="line">       (<span class="number">2</span>, <span class="number">45</span>, <span class="string">'2019-02-14 07:58:00'</span>, <span class="number">1399</span>),</span><br><span class="line">       (<span class="number">3</span>, <span class="number">41</span>, <span class="string">'2019-06-01 21:00:02'</span>, <span class="number">1666</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `user` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span></span><br><span class="line">(</span><br><span class="line">    <span class="string">`id`</span>       <span class="built_in">int</span>(<span class="number">11</span>)     <span class="keyword">NOT</span> <span class="literal">NULL</span> auto_increment,</span><br><span class="line">    <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户名称'</span>,</span><br><span class="line">    <span class="string">`birthday`</span> datetime     <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'生日'</span>,</span><br><span class="line">    <span class="string">`sex`</span>      <span class="built_in">varchar</span>(<span class="number">10</span>)  <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'性别'</span>,</span><br><span class="line">    <span class="string">`address`</span>  <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'地址'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `user` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="string">`user`</span>(<span class="string">`id`</span>, <span class="string">`username`</span>, <span class="string">`birthday`</span>, <span class="string">`sex`</span>, <span class="string">`address`</span>)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">41</span>, <span class="string">'老王'</span>, <span class="string">'2019-05-27 17:47:08'</span>, <span class="string">'男'</span>, <span class="string">'北京'</span>),</span><br><span class="line">       (<span class="number">42</span>, <span class="string">'王小二'</span>, <span class="string">'2019-03-02 15:09:37'</span>, <span class="string">'女'</span>, <span class="string">'北京金燕龙'</span>),</span><br><span class="line">       (<span class="number">43</span>, <span class="string">'老李'</span>, <span class="string">'2019-03-04 11:34:34'</span>, <span class="string">'女'</span>, <span class="string">'北京修正'</span>),</span><br><span class="line">       (<span class="number">45</span>, <span class="string">'传播'</span>, <span class="string">'2019-03-04 12:04:06'</span>, <span class="string">'男'</span>, <span class="string">'北京金燕龙'</span>),</span><br><span class="line">       (<span class="number">46</span>, <span class="string">'王小二'</span>, <span class="string">'2018-09-07 17:37:26'</span>, <span class="string">'男'</span>, <span class="string">'北京TBD'</span>),</span><br><span class="line">       (<span class="number">48</span>, <span class="string">'小马宝莉'</span>, <span class="string">'2019-03-08 11:44:00'</span>, <span class="string">'女'</span>, <span class="string">'北京修正'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`role`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`role`</span></span><br><span class="line">(</span><br><span class="line">    <span class="string">`id`</span>        <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'编号'</span>,</span><br><span class="line">    <span class="string">`role_name`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色名称'</span>,</span><br><span class="line">    <span class="string">`role_desc`</span> <span class="built_in">varchar</span>(<span class="number">60</span>) <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色描述'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`ID`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `role` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="string">`role`</span>(<span class="string">`ID`</span>, <span class="string">`role_name`</span>, <span class="string">`role_desc`</span>)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">1</span>, <span class="string">'院长'</span>, <span class="string">'管理整个学院'</span>),</span><br><span class="line">       (<span class="number">2</span>, <span class="string">'总裁'</span>, <span class="string">'管理整个公司'</span>),</span><br><span class="line">       (<span class="number">3</span>, <span class="string">'校长'</span>, <span class="string">'管理整个学校'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `user_role` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user_role`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user_role`</span></span><br><span class="line">(</span><br><span class="line">    <span class="string">`uid`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户编号'</span>,</span><br><span class="line">    <span class="string">`rid`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色编号'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`uid`</span>, <span class="string">`rid`</span>),</span><br><span class="line">    <span class="keyword">KEY</span> <span class="string">`FK_Reference_10`</span> (<span class="string">`rid`</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> <span class="string">`FK_Reference_10`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`rid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`role`</span> (<span class="string">`id`</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> <span class="string">`FK_Reference_9`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`uid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`user`</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `user_role` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="string">`user_role`</span>(<span class="string">`uid`</span>, <span class="string">`rid`</span>)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">41</span>, <span class="number">1</span>),</span><br><span class="line">       (<span class="number">45</span>, <span class="number">1</span>),</span><br><span class="line">       (<span class="number">41</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40101 SET SQL_MODE = @OLD_SQL_MODE */</span>;</span><br><span class="line"><span class="comment">/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */</span>;</span><br></pre></td></tr></table></figure></details><ul><li><p>创建Java项目，导入jar包</p><p>log4j-1.2.17.jar<br>mybatis-3.5.1.jar<br>mysql-connector-java-5.1.37-bin.jar</p><p>log4j.properties</p></li><li><p>创建User实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"><span class="comment">//此处省略getter/setter,toString</span></span><br></pre></td></tr></table></figure></li><li><p>编写映射文件UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写核心文件SqlMapConfig.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--数据库环境配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使用MySQL环境--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器,底层JDBC--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--连接池,内置POOLED--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis_db"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/itheima/dao/UserMapper.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询所有值快速入门</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        参数一：命名空间+具体ID</span></span><br><span class="line"><span class="comment">        参数二：返回的Java类接收</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        List&lt;User&gt; list = sqlSession.selectList(<span class="string">"UserMapper.findAll"</span>);</span><br><span class="line">        <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-Mybatis映射文件概述"><a href="#四-Mybatis映射文件概述" class="headerlink" title="四.Mybatis映射文件概述"></a>四.Mybatis映射文件概述</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">映射文件DTD约束头</span></span><br><span class="line"><span class="comment">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>语句</th><th>作用</th></tr></thead><tbody><tr><td>&lt;!DOCTYPE mapper PUBLIC … s-3-mapper.dtd”&gt;</td><td>映射文件DTD约束头</td></tr><tr><td>mapper</td><td>根标签</td></tr><tr><td>namespace</td><td>命名空间，与下面语句的id一起组成查询的标识</td></tr><tr><td>select</td><td>查询操作，可选的还有insert,update,delete</td></tr><tr><td>id</td><td>语句的id标识，与上面的命名空间一起组成查询的标识</td></tr><tr><td>resultType</td><td>查询结果对应的实体类型</td></tr><tr><td>SELECT * FROM user</td><td>要执行的SQL语</td></tr></tbody></table><h1 id="五-Mybatis增删改查"><a href="#五-Mybatis增删改查" class="headerlink" title="五.Mybatis增删改查*"></a>五.Mybatis增删改查*</h1><ul><li><p>编写映射文件UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--新增--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"sava"</span> <span class="attr">parameterType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        INSERT INTO</span><br><span class="line">        user(username,birthday,sex,address)</span><br><span class="line">        VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--修改--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        UPDATE user set username=$&#123;&#125;,birthday=#&#123;birthday&#125;,sex=#&#123;sex&#125;,addrress=#&#123;address&#125; WHERE id =#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--删除--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"delete"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        DELETE FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询所有值快速入门</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        参数一：命名空间+具体ID</span></span><br><span class="line"><span class="comment">        参数二：返回的Java类接收</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        List&lt;User&gt; list = sqlSession.selectList(<span class="string">"UserMapper.findAll"</span>);</span><br><span class="line">        <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"Jack"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"GZ"</span>);</span><br><span class="line">        <span class="keyword">int</span> i = sqlSession.insert(<span class="string">"UserMapper.save"</span>, user);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Ass Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//注意:Mybatis默认不提交，需要手动提交事务(DML)</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">tetUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="number">50</span>);</span><br><span class="line">        user.setUsername(<span class="string">"lucy"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setSex(<span class="string">"Female"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"PK"</span>);</span><br><span class="line">        sqlSession.update(<span class="string">"UserMapper.update"</span>,user);</span><br><span class="line">        <span class="comment">//注意:Mybatis默认不提交，需要手动提交事务(DML)</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        sqlSession.delete(<span class="string">"UserMapper.delete"</span>, <span class="number">50</span>);</span><br><span class="line">        <span class="comment">//注意:Mybatis默认不提交，需要手动提交事务(DML)</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-4-知识小结"><a href="#5-4-知识小结" class="headerlink" title="5.4 知识小结"></a>5.4 知识小结</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">- 插入语句<span class="keyword">insert</span>标签</span><br><span class="line">- 在映射文件中使用parameterType属性指定插入数据类型</span><br><span class="line">- <span class="keyword">sql</span>语句<span class="comment">#&#123;实体属性名&#125; 表示?占位符</span></span><br><span class="line">- 我们插入操作API是 sqlSession.insert(<span class="string">"命名空间.id"</span>, 实体对象); </span><br><span class="line">- DML类型语句mybatis需要手动提交事务 sqlSession.commit();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 修改操作使用<span class="keyword">update</span>标签</span><br><span class="line">- 修改操作的API使用的 sqlSession.update(<span class="string">"命名空间.id"</span>, 实体对象);</span><br><span class="line"></span><br><span class="line">- 删除语句使用<span class="keyword">delete</span>标签</span><br><span class="line">- 如果parameterType是引用数据类型 <span class="comment">#&#123;实体属性名&#125;</span></span><br><span class="line">- 如果parameterType是简单数据类型 <span class="comment">#&#123;键名知意&#125;</span></span><br><span class="line">- 删除操作API sqlSession.delete(<span class="string">"命名空间.id"</span>, <span class="keyword">Object</span>);</span><br></pre></td></tr></table></figure></li></ul><h1 id="六-抽取工具类"><a href="#六-抽取工具类" class="headerlink" title="六.抽取工具类"></a>六.抽取工具类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在静态代码块中(加载核心配置文件，构建工程对象)</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供获取sqlSession的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">openSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供提交事务和释放资源方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(SqlSession sqlSession)</span></span>&#123;</span><br><span class="line">        <span class="comment">//提交事务</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>需求 </p><p>根据指定id，查询User对象</p></li><li><p>编写映射文件UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Integer"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>编写测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询一个</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 1.获取sqlSession(根据工具类)</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    <span class="comment">// 2.执行sql</span></span><br><span class="line">    User user = sqlSession.selectOne(<span class="string">"UserMapper.findById"</span>, <span class="number">50</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    <span class="comment">// 3.关闭sqlSession</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="七-Mybatis核心文件概述"><a href="#七-Mybatis核心文件概述" class="headerlink" title="七.Mybatis核心文件概述"></a>七.Mybatis核心文件概述</h1><h4 id="7-1-核心配置文件层级关系"><a href="#7-1-核心配置文件层级关系" class="headerlink" title="7.1 核心配置文件层级关系"></a>7.1 核心配置文件层级关系</h4><p>MyBatis 的配置文件包含了会深深影响 MyBatis 行为的设置和属性信息。 配置文档的顶层结构如下：</p><ul><li>configuration（配置）<ul><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#properties">properties（属性）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#settings">settings（设置）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#typeAliases">typeAliases（类型别名）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#typeHandlers">typeHandlers（类型处理器）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#objectFactory">objectFactory（对象工厂）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#plugins">plugins（插件）</a></li><li>environments（环境配置）<ul><li>environment（环境变量）<ul><li>transactionManager（事务管理器）</li><li>dataSource（数据源）</li></ul></li></ul></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#databaseIdProvider">databaseIdProvider（数据库厂商标识）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#mappers">mappers（映射器）</a></li></ul></li></ul><h4 id="7-2-常用配置标签解析"><a href="#7-2-常用配置标签解析" class="headerlink" title="7.2 常用配置标签解析"></a>7.2 常用配置标签解析</h4><ul><li><p>environments标签</p><ul><li><p>数据库环境的配置，支持多环境配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--数据库环境配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用MySQL环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--事务管理器,底层JDBC--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--连接池,内置POOLED--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis_db"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>语句</th><th>作用</th></tr></thead><tbody><tr><td>&lt;environments default=”mysql”&gt;</td><td>使用默认数据库环境</td></tr><tr><td>&lt;environment&gt;</td><td>连接某个数据库的具体环境配置</td></tr><tr><td>id=”mysql”</td><td>当前环境名称</td></tr><tr><td>transactionManager type=”JDBC”</td><td>事务管理类型JDBC</td></tr><tr><td>dataSource type=”POOLED”</td><td>使用数据库连接池:mybatis内置</td></tr><tr><td>property</td><td>数据库连接基本配置</td></tr></tbody></table></li><li><p>其中，事务管理器(transactionManager)类型有两种:</p><table><thead><tr><th>transactionManager</th><th>作用</th></tr></thead><tbody><tr><td>JDBC</td><td>这个配置就是直接使用了JDBC 的提交和回滚设置，它依赖于从数据源得到的连接来管理事务作用域。</td></tr><tr><td>MANAGED</td><td>这个配置几乎没做什么。它从来不提交或回滚一个连接，而是让容器来管理事务的整个生命周期。</td></tr></tbody></table></li><li><p>其中，数据源(dataSource)常用类型有二种</p><table><thead><tr><th>dataSource</th><th>作用</th></tr></thead><tbody><tr><td>UNPOOLED</td><td>这个数据源的实现只是每次被请求时打开和关闭连接。</td></tr><tr><td>POOLED</td><td>这种数据源的实现利用“池”的概念将 JDBC 连接对象组织起来。</td></tr></tbody></table></li></ul></li><li><p>properties标签</p><ul><li><p>加载外置的properties配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#jdbc.properties</span><br><span class="line"></span><br><span class="line">jdbc.driver&#x3D;com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;Day48</span><br><span class="line">jdbc.user&#x3D;root</span><br><span class="line">jdbc.password&#x3D;root</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--加载外部properties文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name="driver" value="com.mysql.jdbc.Driver"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name="url" value="jdbc:mysql://localhost:3306/mybatis_db"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name="username" value="root"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name="password" value="root"/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--改为EL表达式 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.user&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>typeAliases标签</p><ul><li><p>为 Java 类型设置一个短的名字(类型别名)</p><p>mybatis框架内置了一些java类型的别名</p><table><thead><tr><th>别名Alias</th><th>映射的类型Mapped Type</th></tr></thead><tbody><tr><td>_byte</td><td>byte</td></tr><tr><td>_long</td><td>long</td></tr><tr><td>_short</td><td>short</td></tr><tr><td>_int</td><td>int</td></tr><tr><td>_integer</td><td>int</td></tr><tr><td>_double</td><td>double</td></tr><tr><td>_float</td><td>float</td></tr><tr><td>_boolean</td><td>boolean</td></tr><tr><td>string</td><td>String</td></tr><tr><td>byte</td><td>Byte</td></tr><tr><td>long</td><td>Long</td></tr><tr><td>short</td><td>Short</td></tr><tr><td>int</td><td>Integer</td></tr><tr><td>integer</td><td>Integer</td></tr><tr><td>double</td><td>Double</td></tr><tr><td>float</td><td>Float</td></tr><tr><td>boolean</td><td>Boolean</td></tr><tr><td>date</td><td>Date</td></tr><tr><td>decimal</td><td>BigDecimal</td></tr><tr><td>bigdecimal</td><td>BigDecimal</td></tr><tr><td>object</td><td>Object</td></tr><tr><td>map</td><td>Map</td></tr><tr><td>hashmap</td><td>HashMap</td></tr><tr><td>list</td><td>List</td></tr><tr><td>arraylist</td><td>ArrayList</td></tr><tr><td>collection</td><td>Collection</td></tr><tr><td>iterator</td><td>Iterator</td></tr></tbody></table></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">&lt;!--mybatis核心配置文件--&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!--设置java类型别名--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--设置一个java类型的别名</span></span><br><span class="line"><span class="comment">      &lt;typeAlias type="com.itheima.domain.User" alias="User"&gt;&lt;/typeAlias&gt;</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--将整个包下所有的类名设置了别名，别名（小名）：类名--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.itheima.domain"</span>&gt;</span><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>mappers标签</p><ul><li><p>用于加载映射文件，加载方式有如下几种</p><table><thead><tr><th>作用</th><th>语句</th></tr></thead><tbody><tr><td>加载指定的src目录下的映射文件</td><td>&lt;mapper resource=”com/itheima/dao/UserMapper.xml”/&gt;</td></tr><tr><td>加载指定接口的全限定名(注解开发时使用)</td><td>&lt;mapper class=”com.itheima.mapper.UserMapper”/&gt;</td></tr><tr><td>加载并扫描指定包下所有的接口(基于接口扫描方式加载)</td><td>&lt;package name=”com.itheima.mapper”/&gt;</td></tr></tbody></table></li></ul></li><li><p>mybatis文件的关系介绍</p><table><thead><tr><th>User实体类</th><th>⬅</th><th>UserMapper.xml</th><th>➡</th><th>User表</th></tr></thead><tbody><tr><td></td><td></td><td>建立orm关系</td><td></td><td></td></tr></tbody></table></li></ul><h4 id="7-3-核心配置文件标签顺序"><a href="#7-3-核心配置文件标签顺序" class="headerlink" title="7.3 核心配置文件标签顺序"></a>7.3 核心配置文件标签顺序</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMENT configuration (properties?, settings?, typeAliases?, typeHandlers?, objectFactory?, objectWrapperFactory?, reflectorFactory?, plugins?, environments?, databaseIdProvider?, mappers?)&gt;</span><br></pre></td></tr></table></figure><h4 id="7-4-知识小结"><a href="#7-4-知识小结" class="headerlink" title="7.4 知识小结"></a>7.4 知识小结</h4><ul><li><p>properties标签:该标签可以加载外部的properties文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>typeAliases标签:设置类型别名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">"com.itheima.domain.User"</span> <span class="attr">alias</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">typeAlias</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>environments标签:数据源环境配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--数据库环境配置--&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使用MySQL环境--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器,底层JDBC--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--连接池,内置POOLED--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.user&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>mappers标签:加载映射配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/itheima/dao/UserMapper.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="八-Mybatis的API概述"><a href="#八-Mybatis的API概述" class="headerlink" title="八.Mybatis的API概述"></a>八.Mybatis的API概述</h1><h4 id="8-1-API介绍"><a href="#8-1-API介绍" class="headerlink" title="8.1 API介绍"></a>8.1 API介绍</h4><ul><li><p>Resources</p><ul><li><p>加载mybatis的核心配置文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载mybatis的核心配置文件，获取io流</span></span><br><span class="line">InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>SqlSessionFactoryBuilder</p><ul><li><p>根据mybatis的核心配置文件构建出SqlSessionFactory工厂对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>SqlSessionFactory</p><ul><li><p>用于创建SqlSession会话对象(相当于Connection对象)</p></li><li><p>这是一个工厂对象，对于这种创建和销毁都非常耗费资源，一个项目中只需要存在一个即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DML类型语句，需要手动提交事务 </span></span><br><span class="line"><span class="function">SqlSession <span class="title">openSession</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">// 设置是否开启自动提交事务的会话对象，如果设置true，自动提交 </span></span><br><span class="line"><span class="function">SqlSession <span class="title">openSession</span><span class="params">(<span class="keyword">boolean</span> autoCommit)</span></span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>SqlSession</p><ul><li>这是Mybatis的一个核心对象。我们基于这个对象可以实现对数据的CRUD操作</li><li>对于这个对象应做到每个线程独有，每次用时打开，用完关闭</li></ul></li><li><p>执行语句的方法主要有</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;T&gt; <span class="function">T <span class="title">selectOne</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line">&lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">selectList</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(String statement, Object parameter)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>操作事务的方法主要有</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">roolback</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="8-2-工作原理"><a href="#8-2-工作原理" class="headerlink" title="8.2 工作原理"></a>8.2 工作原理</h4><p><img src="MyBatis%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E5%9B%BE.png" alt=""></p><h1 id="九-Mybatis实现Dao层"><a href="#九-Mybatis实现Dao层" class="headerlink" title="九.Mybatis实现Dao层"></a>九.Mybatis实现Dao层</h1><h4 id="9-1-传统开发方式"><a href="#9-1-传统开发方式" class="headerlink" title="9.1 传统开发方式"></a>9.1 传统开发方式</h4><ul><li><p>编写UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询所有</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByID</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>编写UserMapper实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperImpl</span> <span class="keyword">implements</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            List&lt;User&gt; list = sqlSession.selectList(<span class="string">"UserMapper.findAll"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">save</span><span class="params">( )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            user.setUsername(<span class="string">"SAVE"</span>);</span><br><span class="line">            user.setSex(<span class="string">"Male"</span>);</span><br><span class="line">            user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">            user.setAddress(<span class="string">"HK"</span>);</span><br><span class="line">            <span class="keyword">int</span> insert = sqlSession.insert(<span class="string">"UserMapper.save"</span>, user);</span><br><span class="line"></span><br><span class="line">            sqlSession.commit();</span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> insert;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">update</span><span class="params">( )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            user.setId(<span class="number">53</span>);</span><br><span class="line">            user.setUsername(<span class="string">"UPDATE"</span>);</span><br><span class="line">            user.setSex(<span class="string">"Female"</span>);</span><br><span class="line">            user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">            user.setAddress(<span class="string">"HK"</span>);</span><br><span class="line">            <span class="keyword">int</span> update = sqlSession.update(<span class="string">"UserMapper.update"</span>, user);</span><br><span class="line">            sqlSession.commit();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> update;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">( )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            <span class="keyword">int</span> delete = sqlSession.delete(<span class="string">"UserMapper.delete"</span>, <span class="number">50</span>);</span><br><span class="line">            sqlSession.commit();</span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> delete;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByID</span><span class="params">( )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            User user = sqlSession.selectOne(<span class="string">"UserMapper.findById"</span>, <span class="number">53</span>);</span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> user;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>编写UserMapper.xml映射文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--新增--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        INSERT INTO</span><br><span class="line">        user(username,birthday,sex,address)</span><br><span class="line">        VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--修改--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        UPDATE user set username=#&#123;username&#125;,birthday=#&#123;birthday&#125;,sex=#&#123;sex&#125;,address=#&#123;address&#125; WHERE id =#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--删除--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"delete"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">        DELETE FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>模拟service测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findall</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        Integer save = userMapper.save();</span><br><span class="line">        System.out.println(save);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        Integer update = userMapper.update();</span><br><span class="line">        System.out.println(update);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        <span class="keyword">int</span> delete = userMapper.delete();</span><br><span class="line">        System.out.println(delete);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findOne</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        User byID = userMapper.findByID();</span><br><span class="line">        System.out.println(byID);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>知识小结</p><ul><li>编写UserMapper接口 </li><li>编写UserMapperImpl实现类 </li><li>编写UserMapper.xml映射</li></ul></li></ul><h4 id="9-2-接口代理开发方式"><a href="#9-2-接口代理开发方式" class="headerlink" title="9.2 接口代理开发方式"></a>9.2 接口代理开发方式</h4><p>基于接口代理方式的开发只需要:编写接口和映射文件，Mybatis 框架会为我们动态生成实现类的对象。</p><ul><li><p>接口开发规范</p><ul><li><p>Mapper映射文件的namespace与Mapper接口全限定名一致 </p></li><li><p>Mapper接口的方法名与id的属性名一致</p></li><li><p>方法的参数类型与parameterType属性类型一致</p></li><li><p>方法的返回值类型与resultType属性类型一致</p></li><li><p>映射文件需要与接口在同一个包下，文件名和接口名相同:扫描包，加载所有的映射文件 </p><p>&lt;package name=”cn.itcast.dao”&gt;</package></p></li></ul></li><li><p>编写UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"><span class="comment">// 查询所有</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写UserMapper.xml映射文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"cn.itcast.dao.UserMapper"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>模拟service测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 需要通过mybatis帮你根据接口规范创建实现类</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        <span class="comment">// 创建代理对象(实现类)</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 执行sql</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">        <span class="comment">// 关闭会话</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>基于接口代理方式的内部执行原理</p><p>使用了JDK动态代理技术，帮我们创建了接口的实现类，底层还是执行SqlSession.insert() | update()</p></li></ul><h1 id="十-接口代理的增删改查"><a href="#十-接口代理的增删改查" class="headerlink" title="十.接口代理的增删改查"></a>十.接口代理的增删改查</h1><h4 id="10-1-UserMapper接口"><a href="#10-1-UserMapper接口" class="headerlink" title="10.1 UserMapper接口"></a>10.1 UserMapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-2-UserMapper-xml-映射文件"><a href="#10-2-UserMapper-xml-映射文件" class="headerlink" title="10.2 UserMapper.xml 映射文件"></a>10.2 UserMapper.xml 映射文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--新增--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        INSERT INTO</span><br><span class="line">        user(username,birthday,sex,address)</span><br><span class="line">        VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--修改--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        UPDATE user set username=#&#123;username&#125;,birthday=#&#123;birthday&#125;,sex=#&#123;sex&#125;,address=#&#123;address&#125; WHERE id =#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--删除--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"delete"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">        DELETE FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="10-3-测试代码"><a href="#10-3-测试代码" class="headerlink" title="10.3 测试代码"></a>10.3 测试代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 需要通过mybatis帮你根据接口规范创建实现类</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        <span class="comment">// 创建代理对象(实现类)</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 执行sql</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">        <span class="comment">// 关闭会话</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"testSAVE_Interface"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"HK"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        userMapper.save(user);</span><br><span class="line"></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="number">54</span>);</span><br><span class="line">        user.setUsername(<span class="string">"testUpdate_Interface"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Female"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"HK"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        userMapper.update(user);</span><br><span class="line"></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        userMapper.delete(<span class="number">53</span>);</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = userMapper.findById(<span class="number">52</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line"></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 框架简介</strong></p><p><strong>### MVC模式</strong></p><p>- model模型</p><p>- view视图</p><p>- controller控制器</p><p><strong>### 三层架构</strong></p><p>- web层</p><p>- service层</p><p>- dao层</p><p><strong>### 什么是框架？</strong></p><p>- 半成品软件 </p><p><strong>### 常见框架</strong></p><p>- 持久层</p><p>​    - mybatis</p><p>​    - hibernate</p><p>​    - spring jdbc</p><p>- 表现层</p><p>​    - struts2</p><p>​    - spring mvc</p><p>- 全栈（业务层）</p><p>​    - spring</p><p><strong>## 二 Mybatis简介</strong></p><p><strong>### mybatis是一款优秀的持久层框架，封装了jdbc实现细节，让开发者只关注      sql本身。</strong></p><p><strong>### mybatis是ORM映射框架</strong></p><p><strong>## 三 Mybatis快速入门</strong></p><p><strong>### 1. 创建mybatis_db数据库和user表</strong></p><p><strong>### 2. 创建java项目，引入MyBatis相关jar包</strong></p><p><strong>### 3. 创建User实体类</strong></p><p><strong>### 4. 编写映射文件UserMapper.xml</strong></p><p><strong>### 5. 编写核心文件SqlMapConfig.xml</strong></p><p><strong>### 6. 编写测试类</strong></p><p><strong>## 四 Mybatis映射文件概述</strong></p><p><strong>## 五 Mybatis增删改查</strong></p><p><strong>### 了解</strong></p><p><strong>## 六 抽取工具类</strong></p><p><strong>## 七 Mybatis核心文件概述</strong></p><p><strong>### environments标签</strong></p><p>- 数据库环境配置</p><p><strong>### properties标签</strong></p><p>- 引入第三方配置</p><p><strong>### typeAliases标签</strong></p><p>- 实体别名配置</p><p><strong>### mappers标签</strong></p><p>- 加载映射配置</p><p><strong>## 八 Mybatis的API概述</strong></p><p><strong>### Resources</strong></p><p>- 加载核心配置文件</p><p><strong>### SqlSessionFactoryBuilder</strong></p><p>- 构建工厂</p><p><strong>### SqlSessionFactory</strong></p><p>- 生产会话对象</p><p><strong>### SqlSession</strong></p><p>- 实现与数据库CRUD操作</p><p><strong>## 九 Mybatis实现Dao层的二种方式</strong></p><p><strong>### 传统方式</strong></p><p><strong>### 接口代理方式</strong></p><p>- 1。映射文件的命名空间必须是接口的全限定类名</p><p>- 2。接口方法的名称必须与statement标签id一致</p><p>- 3。接口方法参数类型必须与statement标签的parameterType类型一致</p><p>- 4。接口方法返回值类型必须与statement标签的ResultType类型一致</p><p>- 5。接口和映射文件同名，同包</p><p><strong>## 十 接口代理的增删改查</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（四十九）</title>
      <link href="/2020/05/08/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%B9%9D%EF%BC%89/"/>
      <url>/2020/05/08/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%B9%9D%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li><p>PreparedStatement</p></li><li><p>连接池</p></li></ul><a id="more"></a><h1 id="一-PreparedStatement"><a href="#一-PreparedStatement" class="headerlink" title="一.PreparedStatement"></a>一.PreparedStatement</h1><h4 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h4><ul><li><p>SQL注入问题</p><p>我们让用户输入的信息和SQL语句进行字符串拼接。用户输入的内容作为了SQL语句语法的一部分，改变了原有SQL</p><p>真正的意义，以上问题称为SQL注入。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 这条sql语句原有的含义是根据用户名和密码查询</span></span><br><span class="line"><span class="comment">-- 现在用户输入了一些特殊字符，改变了sql原有的含义，这种行为成为sql注入 </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> username =<span class="string">'admin'</span><span class="comment"># ' and password =''</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>解决SQL注入问题</p><p>我们就不能让用户输入的信息和SQL语句进行字符串拼接。需要使用PreparedSatement对象解决SQL注入。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在java语言中修复sql注入问题，通过占位符代替实际参数</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> username = ? <span class="keyword">AND</span> <span class="keyword">password</span> = ?</span><br><span class="line"><span class="comment">-- 仅仅模拟sql解决思想，非真实解决方案</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> username = <span class="string">"admin'#"</span> <span class="keyword">AND</span> <span class="keyword">PASSWORD</span> = <span class="string">""</span></span><br></pre></td></tr></table></figure></li><li><p>PreparedSatement基础语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 1.获取连接</span><br><span class="line">// 2.编写sql【占位符代替实际参数】</span><br><span class="line">String sql = "<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> username = ? <span class="keyword">AND</span> <span class="keyword">password</span> = ?<span class="string">";</span></span><br><span class="line"><span class="string">// 3.获取sql预编译执行对象，先发送给数据库进行预编译 </span></span><br><span class="line"><span class="string">PreparedStatement pstmt = connection.prepareStatement(sql);</span></span><br><span class="line"><span class="string">// 4.设置占位符实际参数 </span></span><br><span class="line"><span class="string">pstmt.setString(1,"</span><span class="keyword">admin</span><span class="string">'#"); </span></span><br><span class="line"><span class="string">pstmt.setString(2,"");</span></span><br><span class="line"><span class="string">// 5.执行sql语句，并返回结果【注意，不需要传递sql参数】 </span></span><br><span class="line"><span class="string">ResultSet resultSet = pstmt.executeQuery();</span></span><br><span class="line"><span class="string">// 6.处理结果 // 7.释放资源</span></span><br></pre></td></tr></table></figure></li><li><p>优点</p><p> 防止sql注入，提高安全性</p><p>参数与sql分离，提高代码可读性 </p><p>减少编译次数，提高性能</p></li></ul><h4 id="1-2-操作"><a href="#1-2-操作" class="headerlink" title="1.2 操作"></a>1.2 操作</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CRUD_DEMO</span> </span>&#123;</span><br><span class="line">    <span class="comment">//新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//获取连接</span></span><br><span class="line">        Connection connection = JdbcUtils.getConnection();</span><br><span class="line">        <span class="comment">//编写sql</span></span><br><span class="line">        String sql = <span class="string">"INSERT INTO user VALUES (NULL ,?,?);"</span>;</span><br><span class="line">        <span class="comment">//获取sql预编译执行对象</span></span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        <span class="comment">//设计实际参数</span></span><br><span class="line">        preparedStatement.setString(<span class="number">1</span>, <span class="string">"Jerry"</span>);</span><br><span class="line">        preparedStatement.setString(<span class="number">2</span>, <span class="string">"999"</span>);</span><br><span class="line">        <span class="comment">//执行sql并返回结果</span></span><br><span class="line">        <span class="keyword">int</span> i = preparedStatement.executeUpdate();</span><br><span class="line">        <span class="comment">//处理结果</span></span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"First Recording Add Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        preparedStatement.setString(<span class="number">1</span>, <span class="string">"Ming"</span>);</span><br><span class="line">        preparedStatement.setString(<span class="number">2</span>, <span class="string">"999"</span>);</span><br><span class="line">        i = preparedStatement.executeUpdate();</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Second Recording Add Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        JdbcUtils.close(preparedStatement, connection);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//获取连接</span></span><br><span class="line">        Connection connection = JdbcUtils.getConnection();</span><br><span class="line">        <span class="comment">//编写sql</span></span><br><span class="line">        String sql = <span class="string">"UPDATE user SET username = ? where id = ?;"</span>;</span><br><span class="line">        <span class="comment">//获取预编译sql执行对</span></span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        <span class="comment">//设计实际参数</span></span><br><span class="line">        preparedStatement.setString(<span class="number">1</span>, <span class="string">"RRR"</span>);</span><br><span class="line">        preparedStatement.setInt(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">        <span class="comment">//执行sql,并返回结果</span></span><br><span class="line">        <span class="keyword">int</span> i = preparedStatement.executeUpdate();</span><br><span class="line">        <span class="comment">//处理结果</span></span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Update Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        JdbcUtils.close(preparedStatement, connection);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Connection connection = JdbcUtils.getConnection();</span><br><span class="line">        String sql = <span class="string">"DELETE FROM user WHERE id=?"</span>;</span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        preparedStatement.setInt(<span class="number">1</span>, <span class="number">6</span>);</span><br><span class="line">        <span class="keyword">int</span> i = preparedStatement.executeUpdate();</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Delete Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        JdbcUtils.close(preparedStatement, connection);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Connection connection = JdbcUtils.getConnection();</span><br><span class="line">        String sql = <span class="string">"SELECT * FROM user;"</span>;</span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        ResultSet resultSet = preparedStatement.executeQuery();</span><br><span class="line">        <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">            <span class="keyword">int</span> id = resultSet.getInt(<span class="string">"id"</span>);</span><br><span class="line">            String username = resultSet.getString(<span class="string">"username"</span>);</span><br><span class="line">            String password = resultSet.getString(<span class="string">"password"</span>);</span><br><span class="line">            System.out.println(<span class="string">"\tID:"</span> + id + <span class="string">"\tUSERNAME:"</span> + username + <span class="string">"\tPASSWORD:"</span> + password);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        JdbcUtils.close(preparedStatement, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二-连接池"><a href="#二-连接池" class="headerlink" title="二.连接池"></a>二.连接池</h1><h4 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h4><p>连接池其实就是一个容器(集合)，存放数据库连接的容器。</p><p>当系统初始化好后，容器被创建，容器中会申请一些连接对象，当用户来访问数据库时，从容器中获取连接对象，用 户访问完之后，会将连接对象归还给容器。</p><ul><li><p>优点</p><p>节约资源，减轻服务器压力 </p><p>提高连接复用性，用户访问高效</p></li><li><p>常见连接池</p><table><thead><tr><th>DBCP</th><th>Apache提供的数据库连接池技术。</th></tr></thead><tbody><tr><td>C3P0</td><td>数据库连接池技术，目前使用它的开源项目有Hibernate、Spring等。</td></tr><tr><td>HikariCP</td><td>日本开发的连接池技术，性能之王,目前使用它的开源项目有SpringBoot等。</td></tr><tr><td>Druid(德鲁伊)</td><td>阿里巴巴提供的数据库连接池技术</td></tr></tbody></table></li><li><p>实现</p><p>Java为数据库连接池提供了公共的接口: DataSource ，各个连接池厂商去实现这套接口，提供jar包。</p><table><thead><tr><th>功能</th><th></th></tr></thead><tbody><tr><td>获取连接</td><td>Connection getConnection()</td></tr><tr><td>归还连接</td><td>connection.close()</td></tr><tr><td></td><td>若连接对象通过连接池获取，执行 connection.close() 方法时，是归还到连接池，非销毁对象</td></tr><tr><td></td><td>底层通过动态代理技术对close()方法进行了增强</td></tr></tbody></table></li></ul><h4 id="2-2-Druid连接池"><a href="#2-2-Druid连接池" class="headerlink" title="2.2 Druid连接池"></a>2.2 Druid连接池</h4><h5 id="2-2-1-快速入门"><a href="#2-2-1-快速入门" class="headerlink" title="2.2.1 快速入门"></a>2.2.1 快速入门</h5><ul><li><p>导入jar包</p><p>druid-1.1.10.jar</p><p>mysql-connector-java-8.0.16.jar</p></li><li><p>编写测试代码(耦合版本)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建druid连接池对象</span></span><br><span class="line">        DruidDataSource dataSource = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.与mysql建立连接(初始化一些连接个数)，设置数据库基本四项</span></span><br><span class="line">        dataSource.setDriverClassName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        dataSource.setUrl(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>);</span><br><span class="line">        dataSource.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        dataSource.setPassword(<span class="string">"root"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.从连接池中获取连接</span></span><br><span class="line">        Connection connection = dataSource.getConnection();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.处理业务</span></span><br><span class="line">        System.out.println(connection);</span><br><span class="line">        <span class="comment">// 5.归还连接,注意，非销毁</span></span><br><span class="line">        connection.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-2-2-配置文件"><a href="#2-2-2-配置文件" class="headerlink" title="2.2.2 配置文件"></a>2.2.2 配置文件</h5><table><thead><tr><th>参数设置</th><th>作用</th></tr></thead><tbody><tr><td>initialSize</td><td>初始化建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时</td></tr><tr><td>maxActivve</td><td>最大连接池数量</td></tr><tr><td>MinIdle</td><td>最小连接池数量</td></tr><tr><td>maxWait</td><td>获取连接时最大等待时间，ms</td></tr></tbody></table><ul><li><p>定义配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#druid.properties</span><br><span class="line">#基本4项，必须有，左边名称限定</span><br><span class="line">driverClassName&#x3D;com.mysql.jdbc.Driver</span><br><span class="line">url&#x3D;jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;Day48</span><br><span class="line">username&#x3D;root</span><br><span class="line">password&#x3D;root</span><br><span class="line"></span><br><span class="line"># 初始化个数</span><br><span class="line">initialSize&#x3D;5</span><br><span class="line">#最大连接个数</span><br><span class="line">maxActivve&#x3D;10</span><br><span class="line">#等待时间，ms</span><br><span class="line">maxWait&#x3D;3000</span><br></pre></td></tr></table></figure></li><li><p>编写代码(解耦合版)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidDemo2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 通过类加载器读取src目录下配置文件，获取io流</span></span><br><span class="line">        InputStream is = DruidDemo2.class.getClassLoader().getResourceAsStream("druid.properties");</span><br><span class="line">        <span class="comment">// 创建 Properties对象</span></span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        properties.load(is);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// druid连接池工厂对象，初始化连接池</span></span><br><span class="line">        DataSource dataSource = DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取连接</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">11</span>; i++) &#123;</span><br><span class="line">            Connection connection = dataSource.getConnection();</span><br><span class="line">            System.out.println(connection);</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">10</span>) &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="comment">// 归还连接</span></span><br><span class="line">            <span class="comment">//connection.close();</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-连接工具类"><a href="#2-3-连接工具类" class="headerlink" title="2.3 连接工具类"></a>2.3 连接工具类</h4><p>我们每次操作数据库都需要创建连接池，获取连接，关闭资源，都是重复的代码。我们可以将创建连接池和获取连接</p><p>池的代码放到一个工具类中。</p><blockquote><p>保证连接池对象，只创建一次</p></blockquote><p>目的:简化书写，提高效率</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span></span>&#123;</span><br><span class="line"><span class="comment">// 1.初始化连接池对象(druid)，一个项目只有一个 static&#123;&#125; // 2.提供获取连接池对象静态方法</span></span><br><span class="line"><span class="comment">// 3.提供连接对象的静态方法</span></span><br><span class="line"><span class="comment">// 4.提供释放资源的静态方法(connection是归还)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.初始化连接池对象(druid)，一个项目只有一个 static&#123;&#125;</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 通过类加载器读取src目录下配置文件，获取io流</span></span><br><span class="line">            InputStream is = JdbcUtils.class.getClassLoader().getResourceAsStream("druid.properties");</span><br><span class="line">            <span class="comment">// 创建 Properties对象</span></span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(is);</span><br><span class="line">            <span class="comment">// druid连接池工厂对象，初始化连接池</span></span><br><span class="line">            dataSource = DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.提供获取连接池对象静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.提供连接对象的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.提供释放资源的静态方法(connection是归还)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet resultSet, Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重载关闭方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        close(<span class="keyword">null</span>, statement, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三-案例-用户登录"><a href="#三-案例-用户登录" class="headerlink" title="三.案例:用户登录"></a>三.案例:用户登录</h1><ul><li><p>需求 </p><p>使用三层架构+JDBC连接池技术(面向接口编程)，实现用户登录案例</p></li></ul><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><table><thead><tr><th>Login.jsp</th><th></th><th></th><th>Server</th><th></th><th></th><th>数据库</th></tr></thead><tbody><tr><td></td><td></td><td>web层</td><td>service层</td><td>dao层</td><td></td><td></td></tr><tr><td>UserName<br>Password</td><td>➡<br>⬅</td><td>Servlet接口</td><td>UserService接口</td><td>UserDao接口</td><td>➡<br/>⬅</td><td>SQL</td></tr><tr><td>Login</td><td></td><td>⬆</td><td>⬆</td><td>⬆</td><td></td><td></td></tr><tr><td></td><td></td><td>LoginServlet<br>1.接收请求<br/>2.调用service<br/>3.判断转发/重定向</td><td>UserServiceImpl实现类</td><td>UserDaoImpl实现类</td><td></td><td></td></tr></tbody></table><table><thead><tr><th>Login.jsp</th><th></th><th></th><th>Server</th><th></th><th></th><th>数据库</th></tr></thead><tbody><tr><td></td><td></td><td>LoginServlet</td><td>UserServiceImpl</td><td>UserDaoImpl</td><td></td><td></td></tr><tr><td>UserName<br>Password</td><td>➡<br>⬅</td><td>实现了Servlet接口</td><td>实现了UserService接口</td><td>实现了UserDao接口</td><td>➡<br/>⬅</td><td>SQL</td></tr><tr><td>Login</td><td></td><td>1.接收请求参数<br/>username<br/>password<br/>2.调用service，返回User对象<br/>3.判断User对象<br/>转发，提示用户名/密码错误<br/>重定向list.jsp</td><td>public User login(user,  pwd) {   <br>  调用dao，返回user对象<br/> }</td><td>public User login(user,  pwd) {   <br/>  使用JDBC连接池获取连接<br/>查询数据库<br>将结果封装到user对象中 }</td><td></td><td></td></tr></tbody></table><h4 id="3-2-环境搭建"><a href="#3-2-环境搭建" class="headerlink" title="3.2 环境搭建"></a>3.2 环境搭建</h4><ul><li><p>使用昨天的数据库和user表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">id</span>       <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">    username <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">    <span class="keyword">password</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">USER</span> (username, <span class="keyword">password</span>)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'admin'</span>, <span class="string">'123'</span>),</span><br><span class="line">       (<span class="string">'tom'</span>, <span class="string">'123'</span>),</span><br><span class="line">       (<span class="string">'jack'</span>, <span class="string">'123'</span>);</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建web工程，导入相关jar包</p><p>commons-beanutils-1.8.3.jar</p><p>commons-logging-1.1.1.jar</p><p>druid-1.1.10.jar</p><p>javax.servlet.jsp.jstl.jar</p><p>jstl-impl.jar</p><p>mysql-connector-java-8.0.16.jar</p></li><li><p>导入页面资源</p></li><li><p>创建三层包目录结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">├── com</span><br><span class="line">│   └── <span class="keyword">case</span></span><br><span class="line">│       ├── dao</span><br><span class="line">│       │   ├── UserDao.java</span><br><span class="line">│       │   └── UserDaoImpl.java</span><br><span class="line">│       ├── domain</span><br><span class="line">│       │   └── User.java</span><br><span class="line">│       ├── service</span><br><span class="line">│       │   ├── UserService.java</span><br><span class="line">│       │   └── UserServiceImpl.java</span><br><span class="line">│       ├── util</span><br><span class="line">│       │   └── JdbcUtils.java</span><br><span class="line">│       └── web</span><br><span class="line">│           ├── filter</span><br><span class="line">│           │   └── EncodeFilter.java</span><br><span class="line">│           └── servlet</span><br><span class="line">│               └── LoginServlet.java</span><br><span class="line">└── druid.properties</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">9 directories, 9 files</span><br></pre></td></tr></table></figure></li><li><p>导入JbdcUtils工具类</p></li><li><p>编写User实体类</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//省略getter/setter，toString，全参构造</span></span><br></pre></td></tr></table></figure><h4 id="3-3-代码实现"><a href="#3-3-代码实现" class="headerlink" title="3.3 代码实现"></a>3.3 代码实现</h4><ul><li>LoginServlet</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 处理编码</span></span><br><span class="line"><span class="comment">//        req.setCharacterEncoding("utf-8");</span></span><br><span class="line"><span class="comment">//        resp.setContentType("text/html;charset=utf-8");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.调用service</span></span><br><span class="line">        UserServiceImpl userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        User user = userService.login(username, password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.判断</span></span><br><span class="line">        <span class="keyword">if</span>(user==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">// 登录失败，友情提示</span></span><br><span class="line">            req.setAttribute(<span class="string">"error"</span>,<span class="string">"Username/Password Wrong"</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 登录成功</span></span><br><span class="line">            req.getSession().setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">            resp.sendRedirect(req.getContextPath()+<span class="string">"/list.jsp"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>UserService 接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//根据用户名密码查询User对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String username, String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>UserServiceImpl 实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        UserDaoImpl userDao = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line">        <span class="keyword">return</span> userDao.login(username,password);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>UserDao 接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">//根据用户名密码查询User对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String username, String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>UserDaoImpl 实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement preparedStatement = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.获取连接【从连接池】</span></span><br><span class="line">            connection = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">// 2.编写sql</span></span><br><span class="line">            String sql = <span class="string">"SELECT * FROM user WHERE username= ? AND password = ?;"</span>;</span><br><span class="line">            <span class="comment">// 3.获取sql预编译执行对象</span></span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            <span class="comment">// 4.设置实际参数</span></span><br><span class="line">            preparedStatement.setString(<span class="number">1</span>, username);</span><br><span class="line">            preparedStatement.setString(<span class="number">2</span>, password);</span><br><span class="line">            <span class="comment">// 5.执行sql并返回结果</span></span><br><span class="line">            resultSet = preparedStatement.executeQuery();</span><br><span class="line">            <span class="comment">// 6.处理结果</span></span><br><span class="line">            User user = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (resultSet.next()) &#123;</span><br><span class="line">                <span class="comment">// 获取 id 用户名、密码</span></span><br><span class="line">                <span class="keyword">int</span> id = resultSet.getInt(<span class="string">"id"</span>);</span><br><span class="line">                username = resultSet.getString(<span class="string">"username"</span>);</span><br><span class="line">                password = resultSet.getString(<span class="string">"password"</span>);</span><br><span class="line">                user = <span class="keyword">new</span> User();</span><br><span class="line">                user.setId(id);</span><br><span class="line">                user.setUsername(username);</span><br><span class="line">                user.setPassword(password);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> user;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 7.释放资源</span></span><br><span class="line">            JdbcUtils.close(resultSet, preparedStatement, connection);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## PreparedStatement</strong></p><p><strong>### 介绍</strong></p><p>- 预编译sql执行对象</p><p><strong>### 优点</strong></p><p>- 1）防止sql注入，提高安全性</p><p>- 2）减少编译次数，提高效率</p><p>- 3）参数与sql语句分离，提高可读性</p><p><strong>### 步骤</strong></p><p>- 1）注册驱动</p><p>- 2）建立连接</p><p>- 3）编写sql ?占位符代替参数</p><p>- 4）获取sql预编译执行对象 先将sql发送到数据库</p><p>- 5）设置实际参数</p><p>- 6）执行sql并返回结果</p><p>- 7）处理结果</p><p>- 8）释放资源</p><p><strong>### 作业</strong></p><p>- 重写登录案例</p><p>- CRUD练习</p><p><strong>## datasource</strong></p><p><strong>### 介绍：</strong></p><p>- 在系统初始化时，创建一个连接池生成一些连接对象，用户访问数据库时，从连接池获取连接，使用完毕归还到连接池</p><p><strong>### 优点</strong></p><p>- 1）减轻服务器压力</p><p>- 2）提高连接复用性</p><p><strong>### dataSource</strong></p><p>- 是sun公司提供连接池规范（接口），连接池厂商根据接口编写实现类</p><p>​    - c3p0</p><p>​    - hikariCP</p><p>​    - Druid</p><p><strong>### 作业</strong></p><p>- druid快速入门</p><p>​    - 1）导入jar包</p><p>​    - 2）定义配置文件</p><p>​    - 3）编写代码</p><p>- druid连接池工具类</p><p><strong>## 案例：用户登录</strong></p><p><strong>### 面向接口编程</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（四十八）</title>
      <link href="/2020/05/06/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E5%85%AB%EF%BC%89/"/>
      <url>/2020/05/06/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E5%85%AB%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>JDBC基础</li></ul><a id="more"></a><h1 id="一-JDBC基础"><a href="#一-JDBC基础" class="headerlink" title="一.JDBC基础"></a>一.JDBC基础</h1><h4 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h4><p>Java 数据库连接(Java DataBase Connectivity)</p><ul><li><p>作用:通过Java语言操作数据库</p></li><li><p>本质:是官方(sun公司)定义的一套操作所有关系型数据库的规则(接口)。各个数据库厂商去实现这套接口，提 供数据库驱动jar包。我们可以使用这套接口(JDBC)编程，运行时的代码其实是驱动jar包中的实现类。</p></li></ul><h4 id="1-2-快速入门"><a href="#1-2-快速入门" class="headerlink" title="1.2 快速入门"></a>1.2 快速入门</h4><ul><li><p>需求</p><p>通过java代码向数据库user表插入一条记录</p></li><li><p>准备数据库和表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> Day48;</span><br><span class="line"><span class="keyword">USE</span> Day48;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">id</span>       <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">    username <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">    <span class="keyword">password</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">USER</span> (username, <span class="keyword">password</span>)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'admin'</span>, <span class="string">'123'</span>),</span><br><span class="line">       (<span class="string">'tom'</span>, <span class="string">'123'</span>),</span><br><span class="line">       (<span class="string">'jack'</span>, <span class="string">'123'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span>;</span><br></pre></td></tr></table></figure></li><li><p>创建java工程，导入MySQL驱动jar包</p><p>mysql-connector-java-5.1.45-bin.jar</p></li><li><p>编写插入代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDEMO</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1.注册驱动</span></span><br><span class="line"><span class="comment">//        DriverManager.registerDriver(new Driver());</span></span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        <span class="comment">//2.建立连接</span></span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        <span class="comment">//3.编写sql</span></span><br><span class="line">        String sql = <span class="string">"insert into user values(4,'lucy',666)"</span>;</span><br><span class="line">        <span class="comment">//4.获取sql执行对象</span></span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="comment">//5.执行sql并返回结果</span></span><br><span class="line">        <span class="keyword">int</span> i = statement.executeUpdate(sql);</span><br><span class="line">        <span class="comment">//6.处理结果</span></span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Success"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//7.释放资源</span></span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-API介绍"><a href="#1-3-API介绍" class="headerlink" title="1.3 API介绍"></a>1.3 API介绍</h4><p>sun公司提供的:java.sql包下</p><ul><li><p>DriverManager:驱动管理对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.注册驱动</span><br><span class="line">        <span class="number">1</span>)<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">registerDriver</span><span class="params">(Driver driver)</span></span></span><br><span class="line"><span class="function">        我们通过翻看MySQL Driver实现类的源码发现内部的静态代码已经提供了注册驱动功能</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">        DriverManager.registerDriver(<span class="keyword">new</span> Driver());</span><br><span class="line">        &#125;<span class="keyword">catch</span>(SQLException var1)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Can't register driver!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="number">2</span>)反射 </span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        <span class="number">3</span>)SPI 服务提供接口 【Service Provider Interface】</span><br><span class="line"><span class="number">2</span>.建立连接</span><br><span class="line"><span class="function"><span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">(String url,String user,String password)</span></span></span><br><span class="line"><span class="function">参数说明:</span></span><br><span class="line"><span class="function">        url:连接指定数据库地址【固定格式】 </span></span><br><span class="line"><span class="function">        格式:jdbc:mysql:<span class="comment">//ip地址+端口/数据库名 </span></span></span><br><span class="line"><span class="function">        实例:</span></span><br><span class="line"><span class="function">        jdbc:mysql:<span class="comment">//localhost:3306/day23</span></span></span><br><span class="line"><span class="function">        jdbc:mysql:<span class="comment">///day23 </span></span></span><br><span class="line"><span class="function">      user:用户名</span></span><br><span class="line"><span class="function">      password:密码</span></span><br></pre></td></tr></table></figure></li><li><p>Connection:数据库连接对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 获取sql执行对象【小货车】</span><br><span class="line">  <span class="function">Statement <span class="title">createStatement</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">  PreparedStatement <span class="title">prepareStatement</span><span class="params">(String sql)</span>  </span></span><br><span class="line"><span class="function">2. 事务管理 </span></span><br><span class="line"><span class="function">    1)关闭自动提交<span class="params">(开启事务)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">void</span> <span class="title">setAutoCommit</span><span class="params">(<span class="keyword">boolean</span> autoCommit)</span></span></span><br><span class="line"><span class="function">      参数: </span></span><br><span class="line"><span class="function">          <span class="keyword">true</span>:自动提交【默认值】 </span></span><br><span class="line"><span class="function">          <span class="keyword">false</span>:手动提交</span></span><br><span class="line"><span class="function">    2)提交事务</span></span><br><span class="line"><span class="function">        <span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    3)回滚事务</span></span><br><span class="line"><span class="function">        <span class="keyword">void</span> <span class="title">rollback</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>Statement:执行sql的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 执行所有类型sql语句【了解】</span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">execute</span><span class="params">(String sql)</span></span></span><br><span class="line"><span class="function">2. 仅执行DML类型sql语句</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">executeUpdate</span><span class="params">(String sql)</span></span></span><br><span class="line"><span class="function">      参数:dml类型<span class="title">sql</span><span class="params">(insert、update、delete)</span> </span></span><br><span class="line"><span class="function">      返回值:影响行数</span></span><br><span class="line"><span class="function">3. 仅执行DQL类型sql语句</span></span><br><span class="line"><span class="function">ResultSet <span class="title">executeQuery</span><span class="params">(String sql)</span></span></span><br><span class="line"><span class="function">    参数:dql类型<span class="title">sql</span><span class="params">(select)</span> </span></span><br><span class="line"><span class="function">    返回值:结果集</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>ResultSet:结果集对象,封装查询结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 指针下移</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">next</span><span class="params">()</span></span></span><br><span class="line"><span class="function">返回值: </span></span><br><span class="line"><span class="function">          <span class="keyword">true</span>:表示此行有数据 </span></span><br><span class="line"><span class="function">          <span class="keyword">false</span>:表示此行没有数据</span></span><br><span class="line"><span class="function">    <span class="title">while</span><span class="params">(resultSet.next)</span></span>&#123;</span><br><span class="line">    <span class="comment">//获取一行数据</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="number">2</span>. 获取数据</span><br><span class="line">  根据制定列编号和数据类型获取</span><br><span class="line">    <span class="function">T <span class="title">getXxx</span><span class="params">(<span class="keyword">int</span> 列编号)</span></span></span><br><span class="line"><span class="function">  根据指定列名和数据类型获取</span></span><br><span class="line"><span class="function">    T <span class="title">getXxx</span><span class="params">(String 列名)</span></span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">    补充:获取所有类型</span></span><br><span class="line"><span class="function">        Object <span class="title">getObject</span><span class="params">(String 列名)</span> </span></span><br><span class="line"><span class="function">        String <span class="title">getString</span><span class="params">(String 列名)</span></span></span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-CRUD操作"><a href="#1-4-CRUD操作" class="headerlink" title="1.4 CRUD操作"></a>1.4 CRUD操作</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.注册驱动</span></span><br><span class="line"><span class="comment">// 2.建立连接</span></span><br><span class="line"><span class="comment">// 3.编写sql</span></span><br><span class="line"><span class="comment">// 4.获取sql执行对象 // 5.执行sql并返回结果 // 6.处理结果</span></span><br><span class="line"><span class="comment">// 7.释放资源</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CRUDDEMO</span> </span>&#123;</span><br><span class="line">    <span class="comment">//新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        String sql = <span class="string">"insert into user values(NULL,'testInsert',666)"</span>;</span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="keyword">int</span> i = statement.executeUpdate(sql);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Successful"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        String sql = <span class="string">"UPDATE user SET username='testUpdate' WHERE id = 4"</span>;</span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="keyword">int</span> i = statement.executeUpdate(sql);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Successful"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAlter</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        String sql = <span class="string">"delete from user WHERE id = 2"</span>;</span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="keyword">int</span> i = statement.executeUpdate(sql);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Successful"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        String sql = <span class="string">"SELECT * FROM user"</span>;</span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">            <span class="keyword">int</span> id = resultSet.getInt(<span class="string">"id"</span>);</span><br><span class="line">            String username = resultSet.getString(<span class="string">"username"</span>);</span><br><span class="line">            String password = resultSet.getString(<span class="string">"password"</span>);</span><br><span class="line">            System.out.println(<span class="string">"\tID:"</span> + id + <span class="string">"\tUSERNAME:"</span> + username + <span class="string">"\tPASSWORD:"</span> + password);</span><br><span class="line">        &#125;</span><br><span class="line">        resultSet.close();</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-5-工具类"><a href="#1-5-工具类" class="headerlink" title="1.5 工具类"></a>1.5 工具类</h4><p>通过上面案例需求我们会发现每次去执行SQL语句都需要注册驱动，获取连接，得到Statement，以及释放资源。发</p><p>现很多重复的劳动，我们可以将重复的代码定义到一个工具类中。 </p><ul><li><p>目的:简化书写，一劳永逸</p></li><li><p>步骤分析</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span></span>&#123;</span><br><span class="line"><span class="comment">// 1.注册驱动【保证一次】</span></span><br><span class="line"><span class="keyword">static</span>&#123; &#125;</span><br><span class="line"><span class="comment">// 2.提供获取连接的静态方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 3.提供释放资源的方法 </span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-5-1-版本一"><a href="#1-5-1-版本一" class="headerlink" title="1.5.1 版本一"></a>1.5.1 版本一</h5><ul><li>该版本具有耦合性</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils1</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 1.注册驱动【保证一次】</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Load JDBC Driver Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.提供获取连接的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.提供释放资源的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet resultSet, Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重载关闭方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        close(statement, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-5-2-版本二"><a href="#1-5-2-版本二" class="headerlink" title="1.5.2 版本二"></a>1.5.2 版本二</h5><ul><li><p>解耦合版本</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#K-V</span></span><br><span class="line"><span class="meta">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/Day48</span></span><br><span class="line"><span class="meta">jdbc.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUitls</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明变量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String user = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载jdbc.properties配置文件，初始化变量</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        ResourceBundle jdbc = ResourceBundle.getBundle(<span class="string">"jdbc"</span>);</span><br><span class="line">        driver = jdbc.getString(<span class="string">"jdbc.driver"</span>);</span><br><span class="line">        url = jdbc.getString(<span class="string">"jdbc.url"</span>);</span><br><span class="line">        user = jdbc.getString(<span class="string">"jdbc.user"</span>);</span><br><span class="line">        password = jdbc.getString(<span class="string">"jdbc.password"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.注册驱动【保证一次】</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(driver);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Load Driver Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.提供获取连接的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url, user, password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.提供释放资源的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet resultSet, Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重载关闭方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        close(<span class="keyword">null</span>, statement, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-6-事务操作"><a href="#1-6-事务操作" class="headerlink" title="1.6 事务操作"></a>1.6 事务操作</h4><ul><li><p>事务</p><p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败</p></li><li><p>MySQL事务操作</p><table><thead><tr><th>事务</th><th></th></tr></thead><tbody><tr><td>开启事务</td><td>begin | start transaction;</td></tr><tr><td>提交事务</td><td>commit;</td></tr><tr><td>回顾事务</td><td>rollback;</td></tr></tbody></table></li><li><p>Java操作(使用Connection对象)</p><table><thead><tr><th>事务</th><th></th></tr></thead><tbody><tr><td>关闭自动提交(开启事务)</td><td>void setAutoCommit(false);</td></tr><tr><td>提交事务</td><td>void commit();</td></tr><tr><td>回顾事务</td><td>void rollback();</td></tr></tbody></table></li><li><p>需求:</p><p>通过Java代码实现转账案例</p></li><li><p>导入账户表</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">account</span>(</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">  money <span class="keyword">DOUBLE</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">account</span>(<span class="string">`name`</span>,money) <span class="keyword">VALUES</span> (<span class="string">'UserA'</span>,<span class="number">1000</span>),(<span class="string">'UserB'</span>,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><ul><li><p>编写转账代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TXDemo</span></span>&#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTX</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">          <span class="comment">// 1.获取连接【JdbcUtils工具类】 </span></span><br><span class="line">          <span class="comment">// 2.开启事务</span></span><br><span class="line"><span class="comment">// 3.UserA扣钱</span></span><br><span class="line"><span class="comment">// 机器故障</span></span><br><span class="line"><span class="comment">// 4.UserB加钱</span></span><br><span class="line"><span class="comment">// 5.提交事务 </span></span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123; </span><br><span class="line">          <span class="comment">// 6.回滚事务</span></span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line"><span class="comment">// 7.释放资源</span></span><br><span class="line">&#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TXDemo</span> </span>&#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTX</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Statement statement = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="comment">// 1.获取连接【JdbcUtils工具类】</span></span><br><span class="line">connection = JdbcUitls.getConnection(); </span><br><span class="line">          <span class="comment">// 2.开启事务 </span></span><br><span class="line">          connection.setAutoCommit(<span class="keyword">false</span>); </span><br><span class="line">          tatement = connection.createStatement(); </span><br><span class="line">          <span class="comment">// 3.UserA扣钱</span></span><br><span class="line">          <span class="comment">// 机器故障</span></span><br><span class="line">          <span class="comment">// 4.UserB加钱</span></span><br><span class="line">          <span class="comment">// 5.提交事务 </span></span><br><span class="line">          connection.commit();</span><br><span class="line">          &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 6.回滚事务</span></span><br><span class="line">connection.rollback(); </span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">e1.printStackTrace(); </span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="comment">// 7.释放资源</span></span><br><span class="line">JdbcUitls.close(statement, connection); </span><br><span class="line">        &#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TXDemo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTX</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Statement statement = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.获取连接【JdbcUtils工具类】</span></span><br><span class="line">            connection = JdbcUitls.getConnection();</span><br><span class="line">            <span class="comment">// 2.开启事务</span></span><br><span class="line">            connection.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3.UserA扣钱</span></span><br><span class="line">            String ASql = <span class="string">"update account set money = money-100 where id=2;"</span>;</span><br><span class="line">            <span class="keyword">int</span> AResult = statement.executeUpdate(ASql);</span><br><span class="line">            <span class="keyword">if</span> (AResult &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"User A Payment Successful"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 机器故障</span></span><br><span class="line">            <span class="keyword">int</span> a = <span class="number">1</span> / <span class="number">0</span>;</span><br><span class="line">            String BSql = <span class="string">"update account set money = money +100 where id =1;"</span>;</span><br><span class="line">            <span class="comment">// 4.UserB收到钱</span></span><br><span class="line">            <span class="keyword">int</span> BResult = statement.executeUpdate(BSql);</span><br><span class="line">            <span class="keyword">if</span> (BResult &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"User B Get the Payment"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 5.提交事务</span></span><br><span class="line">            connection.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 6.回滚事务</span></span><br><span class="line">                connection.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 7.释放资源</span></span><br><span class="line">            JdbcUitls.close(statement, connection);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-案例-用户登陆"><a href="#二-案例-用户登陆" class="headerlink" title="二.案例:用户登陆"></a>二.案例:用户登陆</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><table><thead><tr><th align="center">浏览器登录</th><th align="center"></th><th align="left"></th></tr></thead><tbody><tr><td align="center">⬇</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">服务器LoginServlet</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">接收用户请求<br>用户名，密码</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">⬇</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">操作JDBC<br>根据用户名和密码查询数据库</td><td align="center">➡<br>⬅</td><td align="left">Server</td></tr><tr><td align="center">⬇</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">判断用户是否登录成功</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">⬇正确</td><td align="center">➡错误</td><td align="left">转发登录页面提示</td></tr><tr><td align="center">重定向至list.jsp</td><td align="center"></td><td align="left"></td></tr></tbody></table><h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.web;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.util.JdbcUitls;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//统一编码</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//接收请求</span></span><br><span class="line">        String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 2.操作JDBC</span></span><br><span class="line">            <span class="comment">// 2.1 获取连接</span></span><br><span class="line">            Connection connection = JdbcUitls.getConnection();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.2 编写sql</span></span><br><span class="line">            <span class="comment">// String sql = "select * from user where username ='admin' and password='123'";</span></span><br><span class="line">            String sql = <span class="string">"SELECT * FROM user WHERE username='"</span> + username + <span class="string">"'AND password ='"</span> + password + <span class="string">"'"</span>;</span><br><span class="line">            System.out.println(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.3 获取sql执行对象</span></span><br><span class="line">            Statement statement = connection.createStatement();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.4 执行sql并返回结果</span></span><br><span class="line">            ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3.判断是否登录成功</span></span><br><span class="line">            <span class="keyword">if</span> (resultSet.next()) &#123;<span class="comment">// 成功</span></span><br><span class="line">                String loginUsername = resultSet.getString(<span class="string">"username"</span>);</span><br><span class="line">                req.getSession().setAttribute(<span class="string">"loginUsername"</span>, loginUsername);</span><br><span class="line">                resp.sendRedirect(req.getContextPath() + <span class="string">"/list.jsp"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;<span class="comment">// 失败</span></span><br><span class="line">                req.setAttribute(<span class="string">"error"</span>, <span class="string">"Username/Password Wrong"</span>);</span><br><span class="line">                req.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(req, resp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="# 总结"></a># 总结</h1><p><strong>## jdbc</strong></p><p><strong>### 概述</strong></p><p>- 通过java语言操作数据库</p><p><strong>### 本质</strong></p><p>- 面向接口编程思想</p><p>- sun公司通过操作关系型数据库的一套规范（接口），所有的数据库厂商都需要实现这套接口，对于开发者只需要学习这套接口的API就可以操作所有类型的关系型数据库，真正的执行者是实现类（jar包驱动）</p><p><strong>### 快速入门</strong></p><p>- 1.注册驱动</p><p>- 2.建立连接</p><p>- 3.编写sql</p><p>- 4.获取sql执行对象</p><p>- 5.执行sql并返回结果</p><p>- 6.处理结果</p><p>- 7.释放资源</p><p><strong>### API详解</strong></p><p>- DriverManager</p><p>​    - 1.注册驱动</p><p>​        - Class.forName()</p><p>​    - 2.建立连接</p><p>- Connection</p><p>​    - 1.获取sql执行对象</p><p>​        - Statement</p><p>​        - PreparedStatement</p><p>​    - 2.事务安全</p><p>- Statement</p><p>​    - 1.仅执行DML类型sql语句</p><p>​        - int executeUpdate(String sql)</p><p>​    - 2.仅执行DQL类型sql语句</p><p>​        - ResultSet executeQuery(String sql)</p><p>- ResultSet</p><p>​    - 1.指针下移</p><p>​        - boolean next()</p><p>​    - 2.获取数据</p><p>​        - T getXxx(String 列名)</p><p><strong>### crud练习</strong></p><p>- 新增</p><p>- 修改</p><p>- 删除</p><p>- 查询所有 </p><p><strong>### JdbcUtils</strong></p><p>- 版本一</p><p>- 版本二</p><p><strong>### 事务安全</strong></p><p>- 模拟转账</p><p><strong>## 案例：用户登录</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（四十七）</title>
      <link href="/2020/05/05/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%B8%83%EF%BC%89/"/>
      <url>/2020/05/05/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%B8%83%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>MySQL性能</li><li>MySQL索引</li></ul><a id="more"></a><h1 id="一-MySQL性能"><a href="#一-MySQL性能" class="headerlink" title="一.MySQL性能"></a>一.MySQL性能</h1><h4 id="1-1-分析-数据库查询效率低下"><a href="#1-1-分析-数据库查询效率低下" class="headerlink" title="1.1 分析-数据库查询效率低下"></a>1.1 分析-数据库查询效率低下</h4><p>随着项目运行的时间增加，数据量也就增加 了，这时会影响到我们数据库的查询性能</p><h4 id="1-2-分析-执行次数比较多的语句"><a href="#1-2-分析-执行次数比较多的语句" class="headerlink" title="1.2 分析-执行次数比较多的语句"></a>1.2 分析-执行次数比较多的语句</h4><ul><li><p>查询密集型 我们使用查询频率较高，8:2 左右<br>   我们就可以使用索引来进行优化</p></li><li><p>修改密集型 </p><p>   ES</p>   <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询累计插入和返回数据条数</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> <span class="keyword">status</span> <span class="keyword">like</span> <span class="string">'Innodb_rows%'</span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-查看-sql语句的执行效率"><a href="#1-3-查看-sql语句的执行效率" class="headerlink" title="1.3 查看-sql语句的执行效率"></a>1.3 查看-sql语句的执行效率</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> Day47_Index;</span><br><span class="line"><span class="keyword">use</span> Day47_Index;</span><br><span class="line"><span class="comment">-- 1. 准备表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">id</span>         <span class="built_in">INT</span>,</span><br><span class="line">    username   <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">    <span class="string">`password`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">    sex        <span class="built_in">VARCHAR</span>(<span class="number">6</span>),</span><br><span class="line">    email      <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 2. 创建存储过程，实现批量插入记录</span></span><br><span class="line">DELIMITER $$ <span class="comment">-- 声明存储过程的结束符号为$$</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> auto_insert()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> i <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">START</span> <span class="keyword">TRANSACTION</span>; <span class="comment">-- 开启事务</span></span><br><span class="line">    WHILE(i &lt;= 10000000)</span><br><span class="line">        <span class="keyword">DO</span></span><br><span class="line">            <span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span></span><br><span class="line">            <span class="keyword">VALUES</span> (i, <span class="keyword">CONCAT</span>(<span class="string">'jack'</span>, i), <span class="keyword">MD5</span>(i), <span class="string">'male'</span>, <span class="keyword">CONCAT</span>(<span class="string">'jack'</span>, i, <span class="string">'@itcast.cn'</span>));</span><br><span class="line">            <span class="keyword">SET</span> i = i + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line">    <span class="keyword">COMMIT</span>; <span class="comment">-- 提交</span></span><br><span class="line"><span class="keyword">END</span>$$ <span class="comment">-- 声明结束</span></span><br><span class="line">DELIMITER ; <span class="comment">-- 重新声明分号为结束符号</span></span><br><span class="line"><span class="comment">-- 3. 查看存储过程</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> auto_insert;</span><br><span class="line"><span class="comment">-- 4. 调用存储过程</span></span><br><span class="line"><span class="keyword">CALL</span> auto_insert();</span><br></pre></td></tr></table></figure><ul><li>慢查询日志</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看慢查询日志开启情况</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%slow_query_log%'</span>;</span><br><span class="line"><span class="comment">-- 查看慢查询时间配置</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%long_query_time%'</span>;</span><br></pre></td></tr></table></figure><ul><li>开启慢查询日志</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> slow_query_log = <span class="keyword">on</span>;</span><br></pre></td></tr></table></figure><ul><li><p>设置慢查询sql的时间阈值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 全局配置(下次生效...)</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> long_query_time=<span class="number">3</span>;</span><br><span class="line"><span class="comment">-- 临时(会话)配置(本次会话窗口生效) set session long_query_time=3;</span></span><br></pre></td></tr></table></figure></li><li><p>测试慢查询日志</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;swzxsyh-MBP-slow.log</span><br></pre></td></tr></table></figure><h1 id="二-MySQL索引"><a href="#二-MySQL索引" class="headerlink" title="二.MySQL索引"></a>二.MySQL索引</h1><h4 id="2-1-什么是索引"><a href="#2-1-什么是索引" class="headerlink" title="2.1 什么是索引"></a>2.1 什么是索引</h4><p>将数据进行排序整理的过程就称为索引。 我们根据索引去查，提高效率</p><h4 id="2-2-MySQL索引分类"><a href="#2-2-MySQL索引分类" class="headerlink" title="2.2 MySQL索引分类"></a>2.2 MySQL索引分类</h4><table><thead><tr><th>索引</th><th>作用</th></tr></thead><tbody><tr><td>主键(约束)索引</td><td>主键约束+提高查询效率</td></tr><tr><td>唯一(约束)索引</td><td>唯一约束+提高查询效率</td></tr><tr><td>普通索引</td><td>仅提高查询效率</td></tr><tr><td>组合(联合)索引</td><td>多个字段组成索引</td></tr><tr><td>全文索引</td><td>solr、es</td></tr><tr><td>hash索引</td><td>根据key-value 效率非常高</td></tr></tbody></table><h4 id="2-3-MySQL索引语法"><a href="#2-3-MySQL索引语法" class="headerlink" title="2.3 MySQL索引语法"></a>2.3 MySQL索引语法</h4><h5 id="2-3-1-创建索引"><a href="#2-3-1-创建索引" class="headerlink" title="2.3.1 创建索引"></a>2.3.1 创建索引</h5><ul><li><p>直接创建</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建普通索引</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名(字段);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建唯一索引</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名(字段);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建普通组合索引</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名(字段<span class="number">1</span>,字段<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建唯一组合索引</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名(字段<span class="number">1</span>,字段<span class="number">2</span>);</span><br><span class="line"> <span class="comment">-- 创建学生表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span>,</span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>), telephone <span class="built_in">VARCHAR</span>(<span class="number">11</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- name字段适合设置什么索引?</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> name_idx <span class="keyword">ON</span> student(<span class="string">`name`</span>);</span><br><span class="line"><span class="comment">-- telephone适合设置什么索引?</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> telephone_uni_idx <span class="keyword">ON</span> student(telephone);</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>修改表时指定</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加一个主键，这意味着索引值必须是唯一的，且不能为NULL</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> primary <span class="keyword">key</span>(字段); <span class="comment">--默认索引名:primary</span></span><br><span class="line"><span class="comment">-- 添加唯一索引(除了NULL外，NULL可能会出现多次)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">unique</span>(字段); <span class="comment">-- 默认索引名:字段名</span></span><br><span class="line"><span class="comment">-- 添加普通索引，索引值可以出现多次。</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">index</span>(字段); <span class="comment">-- 默认索引名:字段名</span></span><br><span class="line"><span class="comment">-- 指定id为主键索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>); <span class="comment">-- 指定name为普通索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">INDEX</span>(<span class="string">`name`</span>);</span><br><span class="line"><span class="comment">-- 指定telephone为唯一索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span>(telephone);</span><br></pre></td></tr></table></figure></li><li><p>创建表时指定【重点】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建教师表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> teacher(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, <span class="comment">-- 主键索引 `name` VARCHAR(32),</span></span><br><span class="line">telephone <span class="built_in">VARCHAR</span>(<span class="number">11</span>) <span class="keyword">UNIQUE</span>, <span class="comment">-- 唯一索引</span></span><br><span class="line">sex <span class="built_in">VARCHAR</span>(<span class="number">5</span>),</span><br><span class="line"> birthday <span class="built_in">DATE</span>,</span><br><span class="line"><span class="keyword">INDEX</span>(<span class="string">`name`</span>) <span class="comment">-- 普通索引 );</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="2-3-2-删除索引"><a href="#2-3-2-删除索引" class="headerlink" title="2.3.2 删除索引"></a>2.3.2 删除索引</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 直接删除</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名;</span><br><span class="line"><span class="comment">-- 修改表时删除 【掌握】</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">index</span> 索引名;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除name普通索引</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> name_idx <span class="keyword">ON</span> student;</span><br><span class="line"><span class="comment">-- 删除telephone唯一索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">DROP</span> <span class="keyword">INDEX</span> telephone_uni_idx;</span><br></pre></td></tr></table></figure><h4 id="2-4-索引效果演示"><a href="#2-4-索引效果演示" class="headerlink" title="2.4 索引效果演示"></a>2.4 索引效果演示</h4><ul><li>先来测试没有索引情况下查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.指定id查询</span></span><br><span class="line">day47_index&gt; select * from user where id = 8888888</span><br><span class="line">[2020-05-05 21:55:00] 1 row retrieved starting from 1 in 4 s 744 ms (execution: 4 s 727 ms, fetching: 17 ms)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.指定username精准查询</span></span><br><span class="line">day47_index&gt; select * from user where username = 'jack1234567'</span><br><span class="line">[2020-05-05 21:56:46] 1 row retrieved starting from 1 in 3 s 688 ms (execution: 3 s 673 ms, fetching: 15 ms)</span><br><span class="line"><span class="comment">-- 3.指定email模糊查询</span></span><br><span class="line">day47_index&gt; select * from user where email like 'jack1234567%'</span><br><span class="line">[2020-05-05 21:57:03] 1 row retrieved starting from 1 in 3 s 530 ms (execution: 3 s 515 ms, fetching: 15 ms)</span><br></pre></td></tr></table></figure><ul><li><p>给这三个字段添加索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 指定id为主键索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span> <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>); </span><br><span class="line"><span class="comment">-- 指定username为普通索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span> <span class="keyword">ADD</span> <span class="keyword">INDEX</span>(username); </span><br><span class="line"><span class="comment">-- 指定email为唯一索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span> <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span>(email);</span><br></pre></td></tr></table></figure><ul><li>再测试有索引情况下查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.指定id查询</span></span><br><span class="line">day47_index&gt; select * from user where id = 8888888</span><br><span class="line">[2020-05-05 22:00:32] 1 row retrieved starting from 1 in 21 ms (execution: 5 ms, fetching: 16 ms)</span><br><span class="line"><span class="comment">-- 2.指定username精准查询</span></span><br><span class="line">day47_index&gt; select * from user where username = 'jack1234567'</span><br><span class="line">[2020-05-05 22:00:32] 1 row retrieved starting from 1 in 88 ms (execution: 4 ms, fetching: 84 ms)</span><br><span class="line"><span class="comment">-- 3.指定email模糊查询</span></span><br><span class="line">day47_index&gt; select * from user where email like 'jack1234567%'</span><br><span class="line">[2020-05-05 22:00:33] 1 row retrieved starting from 1 in 110 ms (execution: 3 ms, fetching: 107 ms)</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-5-索引的优缺点"><a href="#2-5-索引的优缺点" class="headerlink" title="2.5 索引的优缺点"></a>2.5 索引的优缺点</h4><table><thead><tr><th>优点</th><th>减少磁盘IO，提高查询效率</th></tr></thead><tbody><tr><td><strong>缺点</strong></td><td>索引占用磁盘空间<br>我们在进行增删改时，索引的维护会增加成本，可能会降低服务器性能</td></tr></tbody></table><h4 id="2-6-索引创建原则"><a href="#2-6-索引创建原则" class="headerlink" title="2.6 索引创建原则"></a>2.6 索引创建原则</h4><ul><li>字段内容可识别度不能低于70%</li><li>经常使用where条件搜索的字段</li><li>经常使用表连接的字段(内连接、外连接)</li><li>经常排序的字段 order by</li></ul><p><strong>注意</strong>:索引本身会占用磁盘空间，不是所有的字段都适合增加索引</p><h4 id="2-7-常见索引失效情况"><a href="#2-7-常见索引失效情况" class="headerlink" title="2.7 常见索引失效情况"></a>2.7 常见索引失效情况</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.使用like模糊匹配，%通配符在最左侧使用时</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> email <span class="keyword">like</span> <span class="string">'%jack1234567%'</span>;</span><br><span class="line"><span class="comment">-- 2.尽量避免使用or，如果条件有一个没有索引，那么会进行全表扫描 </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">88</span> <span class="keyword">or</span> sex = <span class="string">'male'</span>;</span><br><span class="line"><span class="comment">-- 3.在索引列上进行计算</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span>+<span class="number">1</span> = <span class="number">88</span>;</span><br><span class="line"><span class="comment">-- 4.使用 !=、 not in、is not null时</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username != <span class="string">'jack12'</span>;</span><br></pre></td></tr></table></figure><h4 id="2-8-索引的数据结构"><a href="#2-8-索引的数据结构" class="headerlink" title="2.8 索引的数据结构"></a>2.8 索引的数据结构</h4><h5 id="2-8-1-概述"><a href="#2-8-1-概述" class="headerlink" title="2.8.1 概述"></a>2.8.1 概述</h5><p>我们知道索引是帮助MySQL高效获取排好序的数据结构。</p><p>在没有索引的情况下我们执行一条sql语句，那么是表进行全局遍历，磁盘寻址(注意逻辑上相邻的记录在磁盘上也 并不是一定物理相邻的)。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> col1=<span class="number">6</span>;</span><br></pre></td></tr></table></figure><p><img src="1566372154562.png" alt=""></p><p>为了加快的查找效率，可以维护一个右边所示的二叉查找树，每个节点分别包含索引键值和一个指向对应数据记录物 理地址的指针，这样就可以运用二叉查找快速获取到相应数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> col2=<span class="number">89</span>;</span><br></pre></td></tr></table></figure><h5 id="2-8-2-索引的数据结构"><a href="#2-8-2-索引的数据结构" class="headerlink" title="2.8.2 索引的数据结构"></a>2.8.2 索引的数据结构</h5><ul><li><p>二叉树:左边的子节点比父节点小，右边的子节点比父节点大</p><p><img src="1588649871508.png" alt=""></p></li><li><p>红黑树:平衡二叉树(左旋、右旋)</p><p><img src="1588650208409.png" alt=""></p></li><li><p>BTree:多路平衡搜索树</p><p><img src="1588650730396.png" alt=""></p></li><li><p>B+Tree:优化BTree(非叶子节点:索引+指针、叶子节点:索引+数据【地址】)</p><p><img src="1588651284679.png" alt=""></p></li><li><p>Hash:通过散列算法，不支持范围查询</p></li></ul><p><strong>数据结构学习网站</strong></p><p><a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a></p><h5 id="2-8-3-MySQL中的B-Tree"><a href="#2-8-3-MySQL中的B-Tree" class="headerlink" title="2.8.3 MySQL中的B+Tree"></a>2.8.3 MySQL中的B+Tree</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看mysql索引节点大小</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> <span class="keyword">status</span> <span class="keyword">like</span> <span class="string">'innodb_page_size'</span>;</span><br></pre></td></tr></table></figure><p><img src="1566372947007.png" alt=""></p><h4 id="2-9-数据库的存储引擎"><a href="#2-9-数据库的存储引擎" class="headerlink" title="2.9 数据库的存储引擎"></a>2.9 数据库的存储引擎</h4><p>MySQL存储引擎的不同，那么索引文件保存的方式也有所不同，常见的有二种存储引擎MyISAM和InnoDB。</p><h5 id="2-9-1-MyISAM-非聚集索引"><a href="#2-9-1-MyISAM-非聚集索引" class="headerlink" title="2.9.1 MyISAM(非聚集索引)"></a>2.9.1 MyISAM(非聚集索引)</h5><p>MySQL5.5版本之前默认存储引擎</p><blockquote><p>特点:不支持事务、不支持外键约束</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> day47_pro;</span><br><span class="line"><span class="keyword">USE</span> day47_pro;</span><br><span class="line"><span class="comment">-- 创建 myisam存储引擎表 CREATE TABLE tab_myisam(</span></span><br><span class="line">id INT,</span><br><span class="line">`name` VARCHAR(32)</span><br><span class="line">)ENGINE=MYISAM;</span><br></pre></td></tr></table></figure><p><img src="1588659294559.png" alt=""></p><h5 id="2-9-2-InnoDB-聚集索引"><a href="#2-9-2-InnoDB-聚集索引" class="headerlink" title="2.9.2 InnoDB(聚集索引)"></a>2.9.2 InnoDB(聚集索引)</h5><p>MySQL5.5版本之后默认存储引擎 </p><blockquote><p>特点:支持事务、支持外键约束</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建 innodb存储引擎表 CREATE TABLE tab_innodb(</span></span><br><span class="line">id INT,</span><br><span class="line">`name` VARCHAR(32)</span><br><span class="line">)ENGINE = INNODB;</span><br></pre></td></tr></table></figure><p><strong>innodb存储引擎必须要设置主键(整型)，且自增类型</strong></p><p><img src="1588659700008.png" alt=""></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h1><h2 id="MySQL性能"><a href="#MySQL性能" class="headerlink" title="MySQL性能"></a>MySQL性能</h2><h3 id="数据库类型"><a href="#数据库类型" class="headerlink" title="数据库类型"></a>数据库类型</h3><ul><li>查询密集型</li><li>修改密集型</li></ul><h3 id="查看数据库分类命令"><a href="#查看数据库分类命令" class="headerlink" title="查看数据库分类命令"></a>查看数据库分类命令</h3><ul><li>show global status like ‘’innodb_rows%;</li></ul><h3 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h3><ul><li>show variables like ‘%query%’;</li></ul><h3 id="插入千万级别记录"><a href="#插入千万级别记录" class="headerlink" title="插入千万级别记录"></a>插入千万级别记录</h3><ul><li>我的电脑3分钟左右</li></ul><h2 id="MySQL索引"><a href="#MySQL索引" class="headerlink" title="MySQL索引"></a>MySQL索引</h2><h3 id="索引-排好序的数据结构"><a href="#索引-排好序的数据结构" class="headerlink" title="索引=排好序的数据结构"></a>索引=排好序的数据结构</h3><h3 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h3><p>create table teacher(</p><p>   id int,</p><p>   name varchar(32),</p><p>   telephone varchar(11),</p><p>   primary key(id), – 索引名 primary</p><p>   index(name) , – 索引名 name</p><p>   unique(telephone) – 索引名 telephone</p><p>);</p><h3 id="索引的创建原则"><a href="#索引的创建原则" class="headerlink" title="索引的创建原则"></a>索引的创建原则</h3><ul><li><p>1)存储内容的可识别度70%</p></li><li><p>2)经常查询的字段，可以设置索引</p></li><li><p>3)经常多表连接的字段，可以设置索引</p><ul><li>主键（primary key）</li><li>外键（index）</li></ul></li><li><p>4)经常排序的字段，可以设置索引</p></li></ul><h3 id="索引失效问题"><a href="#索引失效问题" class="headerlink" title="索引失效问题"></a>索引失效问题</h3><ul><li>1）like使用左模糊查询</li><li>2）or拼接</li><li>3）索引列计算</li><li>4）not in 、 != 、  is not null</li></ul><h3 id="索引的数据结构"><a href="#索引的数据结构" class="headerlink" title="索引的数据结构"></a>索引的数据结构</h3><ul><li><p>二叉树</p><ul><li>左边子节点比父节点小，右边的子节点比父节点大</li></ul></li><li><p>红黑树</p><ul><li><p>平衡二叉树</p><ul><li>左旋和右旋</li></ul></li></ul></li><li><p>BTree</p><ul><li><p>多路平衡搜索树</p><ul><li><p>有效控制树的高度</p><ul><li><p>每一个节点可以设置多个元素</p><ul><li>索引</li><li>指针</li><li>数据</li></ul></li></ul></li></ul></li></ul></li><li><p>B+Tree</p><ul><li><p>MySQL使用数据结构</p><ul><li>非叶子节点只存储索引和指针，叶子节点存储索引和数据（从左到右，从小达到依次排序，底层是一个双向链表）</li></ul></li></ul></li><li><p>Hash散列</p></li></ul><h3 id="数据库存储引擎"><a href="#数据库存储引擎" class="headerlink" title="数据库存储引擎"></a>数据库存储引擎</h3><ul><li><p>存储引擎</p><ul><li><p>MyIsam</p><ul><li><p>非聚集索引</p><ul><li>特点：不支持事务和外键约束</li></ul></li></ul></li><li><p>Innodb</p><ul><li><p>聚集索引</p><ul><li>特点：支持事务和外键约束</li></ul></li></ul></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（四十六）</title>
      <link href="/2020/05/04/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E5%85%AD%EF%BC%89/"/>
      <url>/2020/05/04/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E5%85%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>MySQL函数</li><li>MySQL综合练习</li><li>事务安全TCL<a id="more"></a></li></ul><h1 id="一-MySQL函数"><a href="#一-MySQL函数" class="headerlink" title="一.MySQL函数"></a>一.MySQL函数</h1><h4 id="1-1-字符串函数"><a href="#1-1-字符串函数" class="headerlink" title="1.1 字符串函数"></a>1.1 字符串函数</h4><table><thead><tr><th>函数</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>CONCAT(s1,s2…sn)</td><td>字符串 s1,s2 等多个字符串合并为一个字符串</td><td>select concat(‘A’,’-‘,’B’);</td></tr><tr><td>CHAR_LENGTH(str)</td><td>返回字符串 str 的字符数</td><td>select char_length(‘Hello，World’);</td></tr><tr><td>LENGTH(str)</td><td>返回字符串 s 的字节数</td><td>select length(‘你好,World’);</td></tr><tr><td>UCASE(s) | UPPER(s)</td><td>将字符串转换为大写</td><td>select ucase(‘oracle’);</td></tr><tr><td>LCASE(s) | LOWER(s)</td><td>将字符串转换为小写</td><td>select lcase(‘MySQL’);</td></tr><tr><td>LOCATE(s1,s)</td><td>从字符串 s 中获取 s1 的开始位置</td><td>select locate(‘wo’,’world’);</td></tr><tr><td>TRIM(str) | LTRIM(str) | RTRIM(str)</td><td>字符串去空格</td><td>select trim(‘ 莘莘学子 ‘);</td></tr><tr><td>REPLACE(s,s1,s2)</td><td>将字符串 s2 替代字符串 s 中的字符串 s1</td><td>select replace(‘abc’,’b’,’x’);</td></tr><tr><td>SUBSTR(s, start, length)</td><td>从字符串 s 的 start 位置截取长度为 length 的子字符串</td><td>select substr(‘itcast’,’2’,’3’);</td></tr><tr><td>STRCMP(str1,str2)</td><td>比较字符串大小,左大于右时返回1，左等于右时返回0，，左小于于右时返回-1，</td><td>select strcmp(‘a’,’b’);</td></tr></tbody></table><ul><li>练习</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.将所有员工的昵称改为大写</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">UCASE</span>(nickname) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 2.显示所有员工的姓氏，截取</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">SUBSTR</span>(ename,<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 3.显示所有员工姓名字符长度</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CHAR_LENGTH</span>(ename) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 4.显示所有员工姓名字节长度 SELECT LENGTH(ename) FROM emp;</span></span><br><span class="line"><span class="comment">-- 5.将所有姓李的员工，姓氏替换为li</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">REPLACE</span>(ename,<span class="string">'李'</span>,<span class="string">'li'</span>) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 6.将所有员工的姓名和昵称拼接在一起</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(ename,nickname) <span class="keyword">FROM</span> emp;</span><br></pre></td></tr></table></figure><h4 id="1-2-日期函数"><a href="#1-2-日期函数" class="headerlink" title="1.2 日期函数"></a>1.2 日期函数</h4><table><thead><tr><th>函数</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>NOW() | CURDATE() | CURTIME()</td><td>获取系统当前日期时间、日期、时间</td><td>select now();</td></tr><tr><td>YEAR(DATE) | MONTH(DATE) | DAY(DATE)</td><td>从日期中选择出年、月、日</td><td>select year(now());</td></tr><tr><td>LAST_DAY(DATE)</td><td>返回月份的最后一天</td><td>select last_day(now());</td></tr><tr><td>ADDDATE(DATE,n) | SUBDATE(DATE,n)</td><td>计算起始日期 DATE 加(减) n 天的日期</td><td>select subdate(now(),10);</td></tr><tr><td>QUARTER(DATE)</td><td>返回日期 DATE 是第几季节，返回 1 到 4</td><td>select quarter(now());</td></tr><tr><td>DATEDIFF(d1,d2)</td><td>计算日期 d1-&gt;d2 之间相隔的天数</td><td>select datediff(now(),’1999-1-1’);</td></tr><tr><td>DATE_FORMAT(d,f)</td><td>按表达式 f的要求显示日期 d</td><td>select date_format(now(),’%Y-%m-%d’);</td></tr></tbody></table><ul><li>练习</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.统计每个员工入职的天数</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 2.统计每个员工的工龄</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate)/<span class="number">365</span> <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 3.查询2011年入职的员工</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">YEAR</span>(joindate) = <span class="string">'2011'</span>;</span><br><span class="line"><span class="comment">-- 4.统计入职10年以上的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate)/<span class="number">365</span> &gt;<span class="number">10</span>;</span><br></pre></td></tr></table></figure><h4 id="1-3-数字函数"><a href="#1-3-数字函数" class="headerlink" title="1.3 数字函数"></a>1.3 数字函数</h4><table><thead><tr><th>函数</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>ABS(x)</td><td>返回 x 的绝对值</td><td>select abs(-10);</td></tr><tr><td>CEIL(x)|FLOOR(x)</td><td>向上(下)取整</td><td>select ceil(1.5);</td></tr><tr><td>MOD(x,y)</td><td>返回x mod y的结果，取余</td><td>select mod(5,4);</td></tr><tr><td>RAND()</td><td>返回 0 到 1 的随机数</td><td>select rand();</td></tr><tr><td>ROUND(x)</td><td>四舍五入</td><td>select round(1.2345);</td></tr><tr><td>TRUNCATE(x,y)</td><td>返回数值 x 保留到小数点后 y 位的值</td><td>select truncate(5633.123324,2);</td></tr></tbody></table><ul><li>练习</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.统计每个员工的工龄，超过半年的算一年</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">ROUND</span>( <span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate)/<span class="number">365</span>) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 2.统计每个部门的平均薪资,保留2位小数</span></span><br><span class="line"><span class="keyword">SELECT</span> dept_id,<span class="keyword">TRUNCATE</span>( <span class="keyword">AVG</span>(salary),<span class="number">2</span> )<span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> dept_id;</span><br><span class="line"><span class="comment">-- 3.统计每个部门的平均薪资,小数向上取整</span></span><br><span class="line"><span class="keyword">SELECT</span> dept_id,<span class="keyword">CEIL</span>( <span class="keyword">AVG</span>(salary) )<span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> dept_id;</span><br><span class="line"><span class="comment">-- 4.统计每个部门的平均薪资,小数向下取整</span></span><br><span class="line"><span class="keyword">SELECT</span> dept_id,<span class="keyword">FLOOR</span>( <span class="keyword">AVG</span>(salary) )<span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> dept_id;</span><br></pre></td></tr></table></figure><h4 id="1-4-高级函数"><a href="#1-4-高级函数" class="headerlink" title="1.4 高级函数"></a>1.4 高级函数</h4><h5 id="1-4-1-CASE表达式"><a href="#1-4-1-CASE表达式" class="headerlink" title="1.4.1 CASE表达式"></a>1.4.1 CASE表达式</h5><ul><li><p>相当于java中swtich语句</p></li><li><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">CASE</span> [字段,值] <span class="keyword">WHEN</span> 判断条件<span class="number">1</span></span><br><span class="line"><span class="keyword">THEN</span> 希望的到的值<span class="number">1</span> <span class="keyword">WHEN</span> 判断条件<span class="number">2</span></span><br><span class="line"><span class="keyword">THEN</span> 希望的到的值<span class="number">2</span></span><br><span class="line"><span class="keyword">ELSE</span> 前面条件都没有满足情况下得到的值</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">table_name;</span><br></pre></td></tr></table></figure></li><li><p>练习</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询每个员工的工资等级并排序</span></span><br><span class="line"><span class="comment">-- 工资等级在1显示为 '努力赚钱'</span></span><br><span class="line"><span class="comment">-- 工资等级在2显示为 '小康生活'</span></span><br><span class="line"><span class="comment">-- 工资等级在3显示为 '可以娶媳妇'</span></span><br><span class="line"><span class="comment">-- 工资等级在4显示为 '可以买车'</span></span><br><span class="line"><span class="comment">-- 工资等级在5显示为 '可以买房'</span></span><br><span class="line"><span class="comment">-- 工资等级不在以上列表中显示为 '土豪'</span></span><br><span class="line"><span class="comment">-- 1.确定几张表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg;</span><br><span class="line"><span class="comment">-- 2.确定连接条件</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span>;</span><br><span class="line"><span class="comment">-- 3.确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> e.ename,e.<span class="string">`salary`</span>,sg.<span class="string">`grade`</span> <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span>;</span><br><span class="line"><span class="comment">-- 4.确定业务条件</span></span><br><span class="line"><span class="keyword">SELECT</span> e.ename,e.<span class="string">`salary`</span>,</span><br><span class="line"><span class="keyword">CASE</span> sg.<span class="string">`grade`</span> <span class="keyword">WHEN</span> <span class="number">1</span> <span class="keyword">THEN</span> <span class="keyword">WHEN</span> <span class="number">2</span> <span class="keyword">THEN</span> <span class="keyword">WHEN</span> <span class="number">3</span> <span class="keyword">THEN</span> <span class="keyword">WHEN</span> <span class="number">4</span> <span class="keyword">THEN</span> <span class="keyword">WHEN</span> <span class="number">5</span> <span class="keyword">THEN</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">'土豪'</span> <span class="keyword">END</span> <span class="keyword">AS</span> <span class="string">'生活状态'</span></span><br><span class="line"><span class="string">'努力赚钱'</span> <span class="string">'小康生活'</span> <span class="string">'可以娶媳妇'</span> <span class="string">'可以买车'</span> <span class="string">'可以买房'</span></span><br><span class="line"><span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> sg.<span class="string">`grade`</span> <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-4-2-IF表达式"><a href="#1-4-2-IF表达式" class="headerlink" title="1.4.2 IF表达式"></a>1.4.2 IF表达式</h5><ul><li><p>相当于java中三元运算符</p></li><li><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT IF(1 &gt; 0,&#39;真&#39;,&#39;假&#39;) from 表名;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>练习</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 工资+奖金大于20000的员工 显示家有娇妻，否则显示单身狗</span><br><span class="line">SELECT ename,IF(salary+IFNULL(bonus,0) &gt; 20000,&#39;家有娇妻&#39;,&#39;单身狗&#39;) AS 家里有啥 FROM emp;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-MySQL综合练习"><a href="#二-MySQL综合练习" class="headerlink" title="二.MySQL综合练习"></a>二.MySQL综合练习</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.计算员工的日薪(按30天)，保留二位小数</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">TRUNCATE</span>(salary/<span class="number">30</span>,<span class="number">2</span>) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 2.计算出员工的年薪(12月)，并且以年薪排序 降序</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,(salary + <span class="keyword">IFNULL</span>(bonus,<span class="number">0</span>)) * <span class="number">12</span> <span class="keyword">AS</span> 年薪 <span class="keyword">FROM</span> emp <span class="keyword">ORDER</span> <span class="keyword">BY</span> 年薪 <span class="keyword">DESC</span>;</span><br><span class="line"><span class="comment">-- 3.找出奖金少于5000或者没有获得奖金的员工的信息 </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">IFNULL</span>(bonus,<span class="number">0</span>) &lt; <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.返回员工职务名称及其从事此职务的最低工资 </span></span><br><span class="line"><span class="comment">-- 4.1 确定几张表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j; </span><br><span class="line"><span class="comment">-- 4.2 确定连接条件</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span>;</span><br><span class="line"><span class="comment">-- 4.3 确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> j.<span class="string">`jname`</span> <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span>;</span><br><span class="line"><span class="comment">-- 4.4 确定业务条件(分组+最低工资)</span></span><br><span class="line"><span class="keyword">SELECT</span> j.<span class="string">`jname`</span>,<span class="keyword">MIN</span>(e.<span class="string">`salary`</span>) <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> j.<span class="string">`jname`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5.返回工龄超过10年，且2月份入职的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate)/<span class="number">365</span> &gt; <span class="number">10</span> <span class="keyword">AND</span> <span class="keyword">MONTH</span>(joindate) = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 6.返回与 林冲 同一年入职的员工</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(joindate) <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> ename = <span class="string">'林冲'</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">YEAR</span>(joindate) = (<span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(joindate) <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> ename = <span class="string">'林 冲'</span>);</span><br><span class="line"><span class="comment">-- 7.返回每个员工的名称及其上级领导的名称(自关联)</span></span><br><span class="line"><span class="keyword">SELECT</span> a.<span class="string">`ename`</span>,b.<span class="string">`ename`</span> <span class="keyword">FROM</span> emp a <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> emp b <span class="keyword">ON</span> a.<span class="string">`mgr`</span> = b.<span class="string">`id`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 8.返回工资为二等级(工资等级表)的职员名字(员工表)、部门名称(部门表) </span></span><br><span class="line"><span class="comment">-- 8.1 确定几张表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg; </span><br><span class="line"><span class="comment">-- 8.2 确定连接条件</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.<span class="string">`dept_id`</span> = d.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span>;</span><br><span class="line"><span class="comment">-- 8.3 确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> sg.<span class="string">`grade`</span>,e.<span class="string">`ename`</span>,d.<span class="string">`dname`</span> <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.<span class="string">`dept_id`</span> = d.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span>;</span><br><span class="line"><span class="comment">-- 8.4 确定业务条件</span></span><br><span class="line"><span class="keyword">SELECT</span> sg.<span class="string">`grade`</span>,e.<span class="string">`ename`</span>,d.<span class="string">`dname`</span> <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.<span class="string">`dept_id`</span> = d.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span> <span class="keyword">WHERE</span> sg.<span class="string">`grade`</span> = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 9.涨工资:董事长2000 经理1500 其他800</span></span><br><span class="line"><span class="comment">-- 9.1</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="comment">-- 9.2</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">确定几张表和连接条件</span><br><span class="line">* <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span>; 显示字段(case表达式)</span><br><span class="line">e.`ename`,j.`jname`,e.`salary` AS 涨前,</span><br><span class="line">CASE j.`jname`</span><br><span class="line">WHEN '董事长' THEN e.salary + 2000 WHEN '经理' THEN e.salary + 1500 ELSE e.salary + 800</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> 涨后</span><br><span class="line"><span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span>;</span><br></pre></td></tr></table></figure><h1 id="三-事务安全-TCL"><a href="#三-事务安全-TCL" class="headerlink" title="三.事务安全 TCL"></a>三.事务安全 TCL</h1><h4 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h4><p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。 </p><ul><li><p>应用场景:用户转账</p></li><li><p>准备数据</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> day46_pro;</span><br><span class="line"><span class="comment">-- 使用库</span></span><br><span class="line"><span class="keyword">use</span> day46_pro;</span><br><span class="line"><span class="comment">-- 创建数据表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">account</span> ( <span class="comment">-- 账户表</span></span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">money <span class="keyword">DOUBLE</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">account</span> (<span class="string">`name`</span>, money) <span class="keyword">VALUES</span> (<span class="string">'蝴蝶姐'</span>, <span class="number">1000</span>), (<span class="string">'罗志祥'</span>, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><ul><li>模拟转账</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 罗志祥扣钱(转出)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 机器故障了</span></span><br><span class="line"><span class="comment">-- 蝴蝶姐加强(转入)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money + <span class="number">100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h4 id="3-2-操作事务"><a href="#3-2-操作事务" class="headerlink" title="3.2 操作事务"></a>3.2 操作事务</h4><h5 id="3-2-1-手动提交事务"><a href="#3-2-1-手动提交事务" class="headerlink" title="3.2.1 手动提交事务"></a>3.2.1 手动提交事务</h5><ol><li><p>开启事务 begin</p></li><li><p>提交事务 commit</p></li><li><p>回滚事务 rollback</p></li></ol><ul><li>转账成功</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 开启事务 begin;</span></span><br><span class="line"><span class="comment">-- 2. 罗志祥扣钱</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 3. 蝴蝶姐加钱</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money + <span class="number">100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 4. 提交事务 </span></span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure><ul><li>转账失败</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.开启事务 begin;</span></span><br><span class="line"><span class="comment">-- 2.罗志祥扣钱</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 3.机器故障</span></span><br><span class="line"><span class="comment">-- 4.回滚事务 </span></span><br><span class="line"><span class="keyword">rollback</span>;</span><br></pre></td></tr></table></figure><h5 id="3-2-2-自动提交事务"><a href="#3-2-2-自动提交事务" class="headerlink" title="3.2.2 自动提交事务"></a>3.2.2 自动提交事务</h5><ul><li><p>默认情况下，在MySQL中每一条DML(增删改)语句，就是一个独立的事务 </p></li><li><p>查看MySQL是否开启自动提交</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'autocommit'</span>;</span><br></pre></td></tr></table></figure></li><li><p>临时关闭自动提交(手动)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> autocommit=<span class="keyword">off</span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-3-事务工作原理"><a href="#3-3-事务工作原理" class="headerlink" title="3.3 事务工作原理"></a>3.3 事务工作原理</h4><ul><li>注意:</li></ul><blockquote><p>在同一个事务中，出现bug(异常)，必须执行rollback命令，不然会影响同一个事务中下一次提交</p></blockquote><h4 id="3-4-保存-回滚-点"><a href="#3-4-保存-回滚-点" class="headerlink" title="3.4 保存(回滚)点"></a>3.4 保存(回滚)点</h4><p>当事务开启后，一部分sql执行成功，添加一个保存点，后续操作报错了，回滚到保存点，保证之前的操作可以成功提交</p><table><thead><tr><th>设置保存点</th><th>savepoint 保存点名;</th></tr></thead><tbody><tr><td><strong>回滚到保存点</strong></td><td><strong>rollback to 保存点名;</strong></td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.开启事务 begin;</span></span><br><span class="line"><span class="comment">-- 2.罗志祥扣钱一次(凤姐)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 3.罗志祥扣钱二次(芙蓉姐姐)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 4.设置一个保存点 savepoint ol;</span></span><br><span class="line"><span class="comment">-- 5.罗志祥扣钱三次(石榴姐)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 6.机器故障</span></span><br><span class="line"><span class="comment">-- 7.回滚点保存点 rollback to ol;</span></span><br><span class="line"><span class="comment">-- 8.提交事务 commit;</span></span><br></pre></td></tr></table></figure><h4 id="3-5-事务特性-ACID"><a href="#3-5-事务特性-ACID" class="headerlink" title="3.5 事务特性 ACID"></a>3.5 事务特性 ACID</h4><ol><li><p>原子性 A atomicity</p><p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。</p></li><li><p>一致性 C consistency </p><p>事务在执行前后，保证数据的一致性</p></li><li><p>隔离性 I isolation </p><p>多个事务之间，相互独立，互不干扰….</p></li><li><p>持久性 D durability </p><p>事务一旦成功提交，保存到磁盘文件，不可逆….</p></li></ol><h4 id="3-6-事务隔离性"><a href="#3-6-事务隔离性" class="headerlink" title="3.6 事务隔离性"></a>3.6 事务隔离性</h4><p>多个事务之间隔离的，相互独立的。但是如果多个事务操作同一批数据，则会引发一些问题，设置不同的隔离级别就</p><p>可以解决这些问题。</p><ul><li><p>脏读【必须要避免】 </p><p>一个事务中，读取到另一个事务，未提交的数据</p></li><li><p>不可重复读 </p><p>一个事务中，二次读取的内容不一致，另外一个事务做了update操作</p></li><li><p>幻读<br> 一个事务中，二次读取的数量不一致，另外一个事务做了insert、delete操作</p></li></ul><h5 id="3-6-1-MySQL数据库隔离级别"><a href="#3-6-1-MySQL数据库隔离级别" class="headerlink" title="3.6.1 MySQL数据库隔离级别"></a>3.6.1 MySQL数据库隔离级别</h5><table><thead><tr><th>级别</th><th>名字</th><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th><th>数据库默认隔离级别</th></tr></thead><tbody><tr><td>1</td><td>读未提交</td><td>read uncommitted</td><td>是</td><td>是</td><td>是</td><td></td></tr><tr><td>2</td><td>读已提交</td><td>read committed</td><td>否</td><td>是</td><td>是</td><td>Oracle和SQL Server</td></tr><tr><td>3</td><td>可重复读</td><td>repeatable read</td><td>否</td><td>否</td><td>是</td><td>MySQL</td></tr><tr><td>4</td><td>串行化</td><td>serializable</td><td>否</td><td>否</td><td>否</td><td></td></tr></tbody></table><p>性能角度:1&gt;2&gt;3&gt;4 </p><p>安全角度:4&gt;3&gt;2&gt;1 </p><p>综合考虑:2 or 3</p><h5 id="3-6-2-演示隔离级别产生的问题"><a href="#3-6-2-演示隔离级别产生的问题" class="headerlink" title="3.6.2 演示隔离级别产生的问题"></a>3.6.2 演示隔离级别产生的问题</h5><table><thead><tr><th>级别</th><th>代码</th></tr></thead><tbody><tr><td>查看当前数据库隔离级别</td><td>show variables like ‘%isolation%’;</td></tr><tr><td>临时修改隔离级别</td><td>set session transaction isolation level 级别字符串;</td></tr></tbody></table><ol><li>演示脏读<br> 设置数据库隔离级别 read uncommitted;</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">read</span> uncommitted;</span><br></pre></td></tr></table></figure><ol start="2"><li>解决脏读问题(引出:不可重复读问题) 设置数据库隔离级别 read committed;</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">read</span> committed;</span><br></pre></td></tr></table></figure><ol start="3"><li>解决不可重复读问题(出现幻读问题) 设置数据库隔离级别 repeatable read;</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> repeatable <span class="keyword">read</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>解决幻读问题<br> 设置数据库隔离级别 serializable;</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">serializable</span>;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="一-MySQL函数-1"><a href="#一-MySQL函数-1" class="headerlink" title="一 MySQL函数"></a>一 MySQL函数</h2><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ul><li><p>concat()</p><ul><li>拼接</li></ul></li><li><p>char_length()</p><ul><li>字符长度</li></ul></li><li><p>trim()</p><ul><li>去掉前后空格</li></ul></li><li><p>replace()</p><ul><li>替换</li></ul></li><li><p>substr()</p><ul><li>截取</li></ul></li></ul><h3 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h3><ul><li><p>now()、curdate()、curtime()</p></li><li><p>year()、month()、day()</p></li><li><p>adddate()、subdate()</p></li><li><p>datediff()</p><ul><li>日期间之间的计算</li></ul></li></ul><h3 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h3><ul><li><p>ceil()、floor()</p><ul><li>向上向下取整</li></ul></li><li><p>rand()</p><ul><li>随机数</li></ul></li><li><p>round()</p><ul><li>四舍五入</li></ul></li><li><p>truncate()</p><ul><li>保留指定小数位</li></ul></li></ul><h3 id="高级函数"><a href="#高级函数" class="headerlink" title="高级函数"></a>高级函数</h3><ul><li><p>case表达式</p><ul><li>相当于java中swtich</li></ul></li><li><p>if表达式</p><ul><li>相当于java中三元运算符</li></ul></li></ul><h2 id="二-MySQL综合练习-1"><a href="#二-MySQL综合练习-1" class="headerlink" title="二 MySQL综合练习"></a>二 MySQL综合练习</h2><h3 id="课下必须写二遍"><a href="#课下必须写二遍" class="headerlink" title="课下必须写二遍"></a>课下必须写二遍</h3><h2 id="三-事务安全-TCL-1"><a href="#三-事务安全-TCL-1" class="headerlink" title="三 事务安全 TCL"></a>三 事务安全 TCL</h2><h3 id="什么是事务："><a href="#什么是事务：" class="headerlink" title="什么是事务："></a>什么是事务：</h3><ul><li>是指的是多个步骤的一组业务操作，要么都成功，要么都失败</li></ul><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><ul><li><p>手动提交</p><ul><li>begin</li><li>commit</li><li>rollback</li></ul></li><li><p>自动提交</p><ul><li><p>默认</p><ul><li>我们使用JDBC时，手动关闭自动提交事务</li></ul></li></ul></li></ul><h3 id="事务原理"><a href="#事务原理" class="headerlink" title="事务原理"></a>事务原理</h3><ul><li>临时日志文件</li></ul><h3 id="保存点"><a href="#保存点" class="headerlink" title="保存点"></a>保存点</h3><ul><li><p>设置保存点</p><ul><li>savepoint 保存点名</li></ul></li><li><p>回滚保存点</p><ul><li>rollback to 保存点名</li></ul></li></ul><h3 id="事务特性"><a href="#事务特性" class="headerlink" title="事务特性"></a>事务特性</h3><ul><li><p>A</p><ul><li>原子性</li></ul></li><li><p>C</p><ul><li>一致性</li></ul></li><li><p>I</p><ul><li>隔离性</li></ul></li><li><p>D</p><ul><li>持久性</li></ul></li></ul><h3 id="隔离性会出现问题"><a href="#隔离性会出现问题" class="headerlink" title="隔离性会出现问题"></a>隔离性会出现问题</h3><ul><li>脏读</li><li>不可重复读</li><li>幻读（虚读）</li></ul><h3 id="数据库隔离级别"><a href="#数据库隔离级别" class="headerlink" title="数据库隔离级别"></a>数据库隔离级别</h3><ul><li><p>读未提交</p></li><li><p>读已提交</p><ul><li>oracle 和 sqlServer 默认</li></ul></li><li><p>可重复读</p><ul><li>MySQL 默认</li></ul></li><li><p>串行化</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（四十五）</title>
      <link href="/2020/04/30/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%BA%94%EF%BC%89/"/>
      <url>/2020/04/30/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>多表查询</li></ul><a id="more"></a><h1 id="一-多表查询"><a href="#一-多表查询" class="headerlink" title="一.多表查询"></a>一.多表查询</h1><details><summary>准备数据</summary><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 多表查询</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> day20; <span class="keyword">use</span> day20;</span><br><span class="line"><span class="comment">-- 创建部门表(主表) </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="keyword">NAME</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept (<span class="keyword">NAME</span>) <span class="keyword">VALUES</span> (<span class="string">'开发部'</span>),(<span class="string">'市场部'</span>),(<span class="string">'财务部'</span>),(<span class="string">'销售部'</span>);</span><br><span class="line"><span class="comment">-- 创建员工表(从表) CREATE TABLE emp (</span></span><br><span class="line">id INT PRIMARY KEY AUTO_INCREMENT, NAME VARCHAR(10),</span><br><span class="line">gender CHAR(1), <span class="comment">-- 性别(sex) salary DOUBLE, -- 工资</span></span><br><span class="line">join_date DATE, <span class="comment">-- 入职日期</span></span><br><span class="line">dept_id INT <span class="comment">-- 外键字段 );</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(<span class="keyword">NAME</span>,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">'孙悟空'</span>,<span class="string">'男'</span>,<span class="number">7200</span>,<span class="string">'2013-02- 24'</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(<span class="keyword">NAME</span>,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">'猪八戒'</span>,<span class="string">'男'</span>,<span class="number">3600</span>,<span class="string">'2010-12- 02'</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(<span class="keyword">NAME</span>,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">'唐僧'</span>,<span class="string">'男'</span>,<span class="number">9000</span>,<span class="string">'2008-08- 08'</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(<span class="keyword">NAME</span>,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">'白骨精'</span>,<span class="string">'女'</span>,<span class="number">5000</span>,<span class="string">'2015-10- 07'</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(<span class="keyword">NAME</span>,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">'蜘蛛精'</span>,<span class="string">'女'</span>,<span class="number">4500</span>,<span class="string">'2011-03- 14'</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(<span class="keyword">NAME</span>,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">'沙僧'</span>,<span class="string">'男'</span>,<span class="number">6666</span>,<span class="string">'2017-03- 04'</span>,<span class="literal">null</span>);</span><br></pre></td></tr></table></figure></details><h4 id="1-1-笛卡尔积"><a href="#1-1-笛卡尔积" class="headerlink" title="1.1 笛卡尔积"></a>1.1 笛卡尔积</h4><ul><li>功能<br>多张表的记录进行组合，这种现象称为笛卡尔积(交叉连接)</li><li>语法<br>select … from 左表,右表;</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询二张表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp,dept;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> emp,dept;</span><br></pre></td></tr></table></figure><p>将两张表记录组合，emp个数*dept个数=笛卡尔积个数</p><h4 id="1-2-内连接"><a href="#1-2-内连接" class="headerlink" title="1.2 内连接"></a>1.2 内连接</h4><ul><li>功能<br>拿左表的记录去匹配由标的记录，若符合条件显示(二张表的交集)</li></ul><table><thead><tr><th></th><th>语法</th></tr></thead><tbody><tr><td>隐式内连接</td><td>select … from 左表,右表 where 连接条件;</td></tr><tr><td>显示内连接</td><td>select … from 左表 [inner] join 右表 on 连接条件;</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 内连接</span></span><br><span class="line"><span class="comment">-- 隐式内连接</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e,dept d <span class="keyword">WHERE</span> e.dept_id = d.id;</span><br><span class="line"><span class="comment">-- 显示内连接</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"><span class="comment">-- 查询唐僧的 id，姓名，性别，工资和所在部门名称 </span></span><br><span class="line"><span class="comment">-- 1.确定查询表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d;</span><br><span class="line"><span class="comment">-- 2.确定连接条件</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"><span class="comment">-- 3.确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> e.id,e.name,e.gender,e.salary,d.name <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"><span class="comment">-- 4.确定业务条件</span></span><br><span class="line"><span class="keyword">SELECT</span> e.id,e.name,e.gender,e.salary,d.name <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id <span class="keyword">WHERE</span> e.name = <span class="string">'唐僧'</span>;</span><br></pre></td></tr></table></figure><h4 id="1-3-外连接"><a href="#1-3-外连接" class="headerlink" title="1.3 外连接"></a>1.3 外连接</h4><table><thead><tr><th></th><th>功能</th><th>语法</th></tr></thead><tbody><tr><td>左外连接</td><td>展示左表全部，再去匹配右表记录，若条件符合显示，若条件不符合显示NULL</td><td>select … from 左表 left [outer] join 右表 on 连接条件;</td></tr><tr><td>右外连接</td><td>展示右表全部，再去匹配左表记录，若条件符合显示，若条件不符合显示NULL</td><td>select …from 左表 right [outer] join 右表 on 连接条件;</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 左外连接(推荐)</span></span><br><span class="line"><span class="comment">-- 查询所有员工信息及对应的部门名称</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id; <span class="comment">-- 查询所有部门及对应的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> dept d <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> emp e <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"><span class="comment"># 右外连接(了解)</span></span><br><span class="line"><span class="comment">-- 查询所有部门及对应的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br></pre></td></tr></table></figure><h4 id="1-4-子查询-嵌套"><a href="#1-4-子查询-嵌套" class="headerlink" title="1.4 子查询(嵌套)"></a>1.4 子查询(嵌套)</h4><ul><li>功能<br>一条select语句执行结果，作为另一条select语法的一部分</li></ul><table><thead><tr><th></th><th>语法</th></tr></thead><tbody><tr><td>查询结果单值</td><td>SELECT MAX(salary) FROM emp;</td></tr><tr><td>查询结果单列多值</td><td>SELECT salary FROM emp;</td></tr><tr><td>查询结果多列多值</td><td>SELECT * FROM emp;</td></tr></tbody></table><table><thead><tr><th>规律</th><th>语法</th></tr></thead><tbody><tr><td>子查询结果为单列，肯定作为条件在where后面使用</td><td>select … from 表名 where 字段 in (子查询);</td></tr><tr><td>子查询结果为多列，一般作为虚拟表在from后面使用</td><td>select … from (子查询) as 表别名;</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 子查询</span></span><br><span class="line"><span class="comment"># 子查询结果为单值</span></span><br><span class="line"><span class="comment">-- 1 查询工资最高的员工是谁?</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> salary = (<span class="keyword">SELECT</span> <span class="keyword">MAX</span>(salary) <span class="keyword">FROM</span> emp); </span><br><span class="line"><span class="comment">-- 2 查询工资小于平均工资的员工有哪些?</span></span><br><span class="line"><span class="comment">-- 2.1 先求出平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(salary) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 2.2 查询低于平均工资的员工</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> salary &lt; (<span class="keyword">SELECT</span> <span class="keyword">AVG</span>(salary) <span class="keyword">FROM</span> emp);</span><br><span class="line"><span class="comment"># 子查询结果为单列多行</span></span><br><span class="line"><span class="comment">-- 1 查询工资大于5000的员工，来自于哪些部门的名字</span></span><br><span class="line"><span class="comment">-- 1.1 查询工资大于5000的员工</span></span><br><span class="line"><span class="keyword">SELECT</span> dept_id <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> salary &gt;<span class="number">5000</span>;</span><br><span class="line"><span class="comment">-- 1.2 来自于哪些部门的名字</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> dept <span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">IN</span>(<span class="keyword">SELECT</span> dept_id <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> salary &gt;<span class="number">5000</span>);</span><br><span class="line"><span class="comment">-- 2 查询开发部与财务部所有的员工信息</span></span><br><span class="line"><span class="comment">-- 2.1 根据部门名称，查询部门主键</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span> <span class="keyword">FROM</span> dept <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">IN</span>(<span class="string">'开发部'</span>,<span class="string">'财务部'</span>);</span><br><span class="line"><span class="comment">-- 2.2 根据部门id查询员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> dept_id <span class="keyword">IN</span> (<span class="keyword">SELECT</span> <span class="keyword">id</span> <span class="keyword">FROM</span> dept <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">IN</span>(<span class="string">'开发部'</span>,<span class="string">'财务部'</span>));</span><br><span class="line"><span class="comment"># 子查询结果为多列多行</span></span><br><span class="line"><span class="comment">-- 1 查询出`dept`，包括部门名称</span></span><br><span class="line"><span class="comment">-- 方案一</span></span><br><span class="line"><span class="comment">-- 1.1 查询出2011年以后入职的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> join_date &gt; <span class="string">'2011-1-1'</span>;</span><br><span class="line"><span class="comment">-- 1.2 通过临时表跟部门表关联</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> join_date &gt; <span class="string">'2011-1-1'</span>) e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"><span class="comment">-- 方案二</span></span><br><span class="line"><span class="comment">-- 1.1 先实现二张表关联</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"><span class="comment">-- 1.2 再过滤2011年以后入职的</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id <span class="keyword">WHERE</span> e.join_date &gt; <span class="string">'2011-1- 1'</span>;</span><br></pre></td></tr></table></figure><h1 id="二-多表案例"><a href="#二-多表案例" class="headerlink" title="二.多表案例"></a>二.多表案例</h1> <details><summary>准备数据</summary><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 多表案例</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> day20_pro; <span class="keyword">use</span> day20_pro;</span><br><span class="line"><span class="comment">-- 部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept (</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> auto_increment, <span class="comment">-- 部门id </span></span><br><span class="line">dname <span class="built_in">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 部门名称</span></span><br><span class="line">loc <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="comment">-- 部门位置</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 添加4个部门</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept(<span class="keyword">id</span>,dname,loc) <span class="keyword">VALUES</span> (<span class="number">10</span>,<span class="string">'教研部'</span>,<span class="string">'北京'</span>), (<span class="number">20</span>,<span class="string">'学工部'</span>,<span class="string">'上海'</span>),</span><br><span class="line">(<span class="number">30</span>,<span class="string">'销售部'</span>,<span class="string">'广州'</span>), (<span class="number">40</span>,<span class="string">'财务部'</span>,<span class="string">'深圳'</span>);</span><br><span class="line"><span class="comment">-- 职务表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> job (</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">jname <span class="built_in">VARCHAR</span>(<span class="number">20</span>), <span class="comment">-- 职务名称 </span></span><br><span class="line">description <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="comment">-- 职务描述</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 添加4个职务</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job (<span class="keyword">id</span>, jname, description) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'董事长'</span>, <span class="string">'管理整个公司，接单'</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">'经理'</span>, <span class="string">'管理部门员工'</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">'销售员'</span>, <span class="string">'向客人推销产品'</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">'文员'</span>, <span class="string">'使用办公软件'</span>);</span><br><span class="line"><span class="comment">-- 员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>, <span class="comment">-- 员工id </span></span><br><span class="line">ename <span class="built_in">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 员工姓名 </span></span><br><span class="line">job_id <span class="built_in">INT</span>, <span class="comment">-- 职务id 外键 </span></span><br><span class="line">mgr <span class="built_in">INT</span> , <span class="comment">-- 上级领导</span></span><br><span class="line">joindate <span class="built_in">DATE</span>, <span class="comment">-- 入职日期</span></span><br><span class="line">salary <span class="built_in">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>), <span class="comment">-- 工资 99999.99</span></span><br><span class="line">bonus <span class="built_in">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>), <span class="comment">-- 奖金 99999.99</span></span><br><span class="line">dept_id <span class="built_in">INT</span>, <span class="comment">-- 所在部门编号 外键</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> emp_jobid_ref_job_id_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (job_id) <span class="keyword">REFERENCES</span> job (<span class="keyword">id</span>), <span class="keyword">CONSTRAINT</span> emp_deptid_ref_dept_id_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (dept_id) <span class="keyword">REFERENCES</span> dept (<span class="keyword">id</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 添加员工</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(<span class="keyword">id</span>,ename,job_id,mgr,joindate,salary,bonus,dept_id) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1001</span>,<span class="string">'孙悟空'</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">'2000-12-17'</span>,<span class="string">'8000.00'</span>,<span class="literal">NULL</span>,<span class="number">20</span>), </span><br><span class="line">(<span class="number">1002</span>,<span class="string">'卢俊义'</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">'2001-02-20'</span>,<span class="string">'16000.00'</span>,<span class="string">'3000.00'</span>,<span class="number">30</span>), </span><br><span class="line">(<span class="number">1003</span>,<span class="string">'林冲'</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">'2001-02-22'</span>,<span class="string">'12500.00'</span>,<span class="string">'5000.00'</span>,<span class="number">30</span>), </span><br><span class="line">(<span class="number">1004</span>,<span class="string">'唐僧'</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">'2001-04-02'</span>,<span class="string">'29750.00'</span>,<span class="literal">NULL</span>,<span class="number">20</span>), </span><br><span class="line">(<span class="number">1005</span>,<span class="string">'李逵'</span>,<span class="number">4</span>,<span class="number">1006</span>,<span class="string">'2001-09-28'</span>,<span class="string">'12500.00'</span>,<span class="string">'14000.00'</span>,<span class="number">30</span>), </span><br><span class="line">(<span class="number">1006</span>,<span class="string">'宋江'</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">'2001-05-01'</span>,<span class="string">'28500.00'</span>,<span class="literal">NULL</span>,<span class="number">30</span>), </span><br><span class="line">(<span class="number">1007</span>,<span class="string">'刘备'</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">'2001-09-01'</span>,<span class="string">'24500.00'</span>,<span class="literal">NULL</span>,<span class="number">10</span>), </span><br><span class="line">(<span class="number">1008</span>,<span class="string">'猪八戒'</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">'2007-04-19'</span>,<span class="string">'30000.00'</span>,<span class="literal">NULL</span>,<span class="number">20</span>), </span><br><span class="line">(<span class="number">1009</span>,<span class="string">'罗贯中'</span>,<span class="number">1</span>,<span class="literal">NULL</span>,<span class="string">'2001-11-17'</span>,<span class="string">'50000.00'</span>,<span class="literal">NULL</span>,<span class="number">10</span>), </span><br><span class="line">(<span class="number">1010</span>,<span class="string">'吴用'</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">'2001-09-08'</span>,<span class="string">'15000.00'</span>,<span class="string">'0.00'</span>,<span class="number">30</span>), </span><br><span class="line">(<span class="number">1011</span>,<span class="string">'沙僧'</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">'2007-05-23'</span>,<span class="string">'11000.00'</span>,<span class="literal">NULL</span>,<span class="number">20</span>), </span><br><span class="line">(<span class="number">1012</span>,<span class="string">'李逵'</span>,<span class="number">4</span>,<span class="number">1006</span>,<span class="string">'2001-12-03'</span>,<span class="string">'9500.00'</span>,<span class="literal">NULL</span>,<span class="number">30</span>), </span><br><span class="line">(<span class="number">1013</span>,<span class="string">'小白龙'</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">'2001-12-03'</span>,<span class="string">'30000.00'</span>,<span class="literal">NULL</span>,<span class="number">20</span>), </span><br><span class="line">(<span class="number">1014</span>,<span class="string">'关羽'</span>,<span class="number">4</span>,<span class="number">1007</span>,<span class="string">'2002-01-23'</span>,<span class="string">'13000.00'</span>,<span class="literal">NULL</span>,<span class="number">10</span>);</span><br><span class="line"><span class="comment">-- 工资等级表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> salarygrade (</span><br><span class="line">grade <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>, <span class="comment">-- 等级 </span></span><br><span class="line">losalary <span class="built_in">INT</span>, <span class="comment">-- 最低工资 </span></span><br><span class="line">hisalary <span class="built_in">INT</span> <span class="comment">-- 最高工资</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 添加5个工资等级</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salarygrade(grade,losalary,hisalary) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="number">7000</span>,<span class="number">12000</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="number">12010</span>,<span class="number">14000</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="number">14010</span>,<span class="number">20000</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="number">20010</span>,<span class="number">30000</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="number">30010</span>,<span class="number">99990</span>);</span><br></pre></td></tr></table></figure></details><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1 查询所有员工信息。显示员工编号，员工姓名，工资，职务名称，职务描述 </span></span><br><span class="line"><span class="comment">-- 1.1 确定几张表?</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j;</span><br><span class="line"><span class="comment">-- 1.2 确定连接条件</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.job_id = j.id;</span><br><span class="line"><span class="comment">-- 1.3 确定显示字段(列)</span></span><br><span class="line"><span class="keyword">SELECT</span> e.id,e.ename,e.salary,j.jname,j.description <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.job_id = j.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2 查询所有员工信息。显示员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置 </span></span><br><span class="line"><span class="comment">-- 2.1 确定几张表?</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d;</span><br><span class="line"><span class="comment">-- 2.2 确定连接条件 </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.job_id = j.id <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.3 确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> e.id,e.ename,e.salary,j.jname,j.description,d.dname,d.loc <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.job_id = j.id <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3 查询所有员工信息。显示员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级 </span></span><br><span class="line"><span class="comment">-- 3.1 确定几张表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg;</span><br><span class="line"><span class="comment">-- 3.2 确定连接条件 SELECT * FROM emp e</span></span><br><span class="line">INNER JOIN job j ON e.job_id = j.id</span><br><span class="line">INNER JOIN dept d ON e.dept_id = d.id</span><br><span class="line">INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary;</span><br><span class="line"><span class="comment">-- 3.3 确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> e.ename,e.salary,j.jname,j.description,d.dname,d.loc,sg.grade <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.job_id = j.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.salary <span class="keyword">BETWEEN</span> sg.losalary <span class="keyword">AND</span> sg.hisalary;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4 查询经理的信息。显示员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级</span></span><br><span class="line"><span class="comment">-- 直接将第三题代码粘过来</span></span><br><span class="line"><span class="keyword">SELECT</span> e.ename,e.salary,j.jname,j.description,d.dname,d.loc,sg.grade <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.job_id = j.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.salary <span class="keyword">BETWEEN</span> sg.losalary <span class="keyword">AND</span> sg.hisalary <span class="keyword">WHERE</span> j.jname = <span class="string">'经理'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5 查询出部门编号、部门名称、部门位置、部门人数 (这个代码至少要敲三遍) </span></span><br><span class="line"><span class="comment">-- 5.1 查询出部门编号、部门名称、部门位置</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> dept;</span><br><span class="line"><span class="comment">-- 5.2 部门人数(员工表:分组+聚合 )</span></span><br><span class="line"><span class="keyword">SELECT</span> dept_id,<span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> total <span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> dept_id; </span><br><span class="line"><span class="comment">-- 5.3 部门表左外关联临时表</span></span><br><span class="line"><span class="keyword">SELECT</span> d.id,d.dname,d.loc,e.total <span class="keyword">FROM</span> dept d</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> dept_id,<span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> total <span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> dept_id) e <span class="keyword">ON</span> d.id = e.dept_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6 查询每个员工的名称及其上级领导的名称(自关联) SELECT</span></span><br><span class="line">yuangong.id, yuangong.ename, lingdao.id, lingdao.ename</span><br><span class="line">FROM</span><br><span class="line">  emp yuangong</span><br><span class="line">  LEFT OUTER JOIN emp lingdao</span><br><span class="line">ON yuangong.mgr = lingdao.id ;</span><br></pre></td></tr></table></figure><ul><li>多表查询会产生笛卡尔积 </li><li>消除笛卡尔积<br>连接条件 = 表个数-1 </li><li>步骤<blockquote><p>1)确定几张表<br>2)确定连接条件<br>3)确定显示字段<br>4)确定业务条件</p></blockquote></li></ul><h1 id="三-用户权限-DCL"><a href="#三-用户权限-DCL" class="headerlink" title="三.用户权限 DCL"></a>三.用户权限 DCL</h1><table><thead><tr><th></th><th>语法</th><th>注意</th></tr></thead><tbody><tr><td>创建用户</td><td>create user ‘用户名‘@’主机名’ identified by ‘密码’;</td><td>主机名:限定客户端登录ip<br>指定ip:127.0.0.1 (localhost)<br>任意ip:%</td></tr><tr><td>授权用户</td><td>grant 权限1,权限2… on 数据库名.表名 to ‘用户名‘@’主机名’;</td><td>权限: select、insert、delete、update、create… <br>all 所有权限<br>数据库名.* 指定库下面所有的表</td></tr><tr><td>查看权限</td><td>show grants for ‘用户名‘@’主机名’;</td><td></td></tr><tr><td>撤销授权</td><td>revoke 权限1,权限2… on 数据库名.表名 from ‘用户名‘@’主机名’;</td><td>权限: select、insert、delete、update、create…<br> all 所有权限<br>数据库名.* 指定库下面所有的表</td></tr><tr><td>删除用户</td><td>drop user ‘用户名‘@’主机名’;</td><td></td></tr><tr><td>密码管理</td><td>超级管理员set password for ‘用户名‘@’主机名’=password(‘新密码’); <br>普通用户set password=password(‘新密码’);</td><td></td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建用户</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'tom'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'123'</span>;</span><br><span class="line"><span class="comment">-- 授权</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> day20.dept <span class="keyword">TO</span> <span class="string">'tom'</span>@<span class="string">'%'</span> ;</span><br><span class="line"><span class="comment">-- 查看权限</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GRANTS</span> <span class="keyword">FOR</span> <span class="string">'tom'</span>@<span class="string">'%'</span> ;</span><br><span class="line"><span class="comment">-- 撤销权限</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> day20.dept <span class="keyword">FROM</span> <span class="string">'tom'</span>@<span class="string">'%'</span> ;</span><br><span class="line"><span class="comment">-- 密码管理 -- 加密函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">PASSWORD</span>(<span class="string">'123'</span>); <span class="comment">-- 超级管理帮你找回密码</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> <span class="string">'tom'</span>@<span class="string">'%'</span>= <span class="keyword">PASSWORD</span>(<span class="string">'999'</span>);</span><br><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> <span class="string">'tom'</span>@<span class="string">'%'</span> ;</span><br></pre></td></tr></table></figure><h1 id="四-数据库备份与还原"><a href="#四-数据库备份与还原" class="headerlink" title="四.数据库备份与还原"></a>四.数据库备份与还原</h1><table><thead><tr><th></th><th>备份</th><th>还原</th></tr></thead><tbody><tr><td>格式</td><td>mysqldump -u用户名 -p 需要备份数据库名 &gt; 导出路径(*.sql)</td><td>mysql -u用户名 -p &lt; 导入路径(*.sql)</td></tr><tr><td>实例</td><td>mysqldump -uroot -p day20_pro &gt; d:bak.sql</td><td>mysql -uroot -p &lt; d:bak.sql</td></tr><tr><td>缺点</td><td>通过命令备份的只有表结构和数据，没有建库语句</td><td></td></tr></tbody></table><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="一-多表查询-1"><a href="#一-多表查询-1" class="headerlink" title="一 多表查询"></a>一 多表查询</h2><h3 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h3><ul><li>多表中每一条记录的进行组合，又称为交叉连接</li></ul><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><ul><li><p>查询二张表的交集部分</p></li><li><p>语法</p><ul><li><p>隐式内连接</p><ul><li>select … from 左表,右表 where 连接条件;</li></ul></li><li><p>显示内连接</p><ul><li>select … from 左表 inner join 右表 on 连接条件;</li></ul></li></ul></li></ul><h3 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h3><ul><li><p>左外连接</p><ul><li><p>查询左表全部，再去匹配右表，有就显示，没有显示null</p></li><li><p>语法</p><ul><li>select … from 左表 left outer join 右表 on 连接条件;</li></ul></li></ul></li><li><p>右外连接</p></li></ul><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><ul><li><p>子查询结果为单值</p></li><li><p>子查询结果为单列多行</p></li><li><p>子查询结果为多列多行</p></li><li><p>规律</p><ul><li>子查询结果只要为单列，肯定在where后作为条件使用</li><li>子查询结果只要为多列，一般在from后作为虚拟表使用</li></ul></li></ul><h2 id="二-多表案例-1"><a href="#二-多表案例-1" class="headerlink" title="二 多表案例"></a>二 多表案例</h2><h3 id="规律"><a href="#规律" class="headerlink" title="规律"></a>规律</h3><ul><li><p>1。确定几张表</p></li><li><p>2。确定连接条件</p><ul><li>on关键字</li></ul></li><li><p>3。确定显示字段</p></li><li><p>4。确定业务条件</p><ul><li>where关键字</li></ul></li></ul><h2 id="三-DCL用户权限"><a href="#三-DCL用户权限" class="headerlink" title="三 DCL用户权限"></a>三 DCL用户权限</h2><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><ul><li>create user ‘用户名‘@’主机名’ identifield by ‘密码’</li></ul><h3 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h3><ul><li>grant 权限1,权限2…. on 数据库.表名 to ‘用户名‘@’主机名’</li></ul><h3 id="查看权限"><a href="#查看权限" class="headerlink" title="查看权限"></a>查看权限</h3><ul><li>show grants for  ‘用户名‘@’主机名’</li></ul><h3 id="撤销权限"><a href="#撤销权限" class="headerlink" title="撤销权限"></a>撤销权限</h3><ul><li>revoke 权限1,权限2… on 数据库.表名 from  ‘用户名‘@’主机名’</li></ul><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><ul><li>drop user  ‘用户名‘@’主机名’</li></ul><h3 id="密码管理"><a href="#密码管理" class="headerlink" title="密码管理"></a>密码管理</h3><ul><li>set password for  ‘用户名‘@’主机名’=password(‘新密码’);</li></ul><h2 id="四-数据库还原与备份"><a href="#四-数据库还原与备份" class="headerlink" title="四 数据库还原与备份"></a>四 数据库还原与备份</h2><h3 id="dos命令行"><a href="#dos命令行" class="headerlink" title="dos命令行"></a>dos命令行</h3><h3 id="图形化工具"><a href="#图形化工具" class="headerlink" title="图形化工具"></a>图形化工具</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（四十四）</title>
      <link href="/2020/04/29/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E5%9B%9B%EF%BC%89/"/>
      <url>/2020/04/29/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>DQL高级查询</li><li>数据库约束</li><li>表关系<a id="more"></a></li></ul><h1 id="一-DQL高级查询"><a href="#一-DQL高级查询" class="headerlink" title="一.DQL高级查询"></a>一.DQL高级查询</h1> <details><summary>创建表</summary><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> Day44;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> Day44;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">  age <span class="built_in">int</span>,</span><br><span class="line">  sex <span class="built_in">varchar</span>(<span class="number">5</span>),</span><br><span class="line">  address <span class="built_in">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  math <span class="built_in">int</span>,</span><br><span class="line">  english <span class="built_in">int</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(<span class="keyword">id</span>,<span class="keyword">NAME</span>,age,sex,address,math,english) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">'马云'</span>,<span class="number">55</span>,<span class="string">'男'</span>,<span class="string">'杭州'</span>,<span class="number">66</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">'马化腾'</span>,<span class="number">45</span>,<span class="string">'女'</span>,<span class="string">'深圳'</span>,<span class="number">98</span>,<span class="number">87</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">'马景涛'</span>,<span class="number">55</span>,<span class="string">'男'</span>,<span class="string">'香港'</span>,<span class="number">56</span>,<span class="number">77</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="string">'柳岩'</span>,<span class="number">20</span>,<span class="string">'女'</span>,<span class="string">'湖南'</span>,<span class="number">76</span>,<span class="number">65</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="string">'柳青'</span>,<span class="number">20</span>,<span class="string">'男'</span>,<span class="string">'湖南'</span>,<span class="number">86</span>,<span class="literal">NULL</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="string">'刘德华'</span>,<span class="number">57</span>,<span class="string">'男'</span>,<span class="string">'香港'</span>,<span class="number">99</span>,<span class="number">99</span>),</span><br><span class="line">(<span class="number">7</span>,<span class="string">'马德'</span>,<span class="number">22</span>,<span class="string">'女'</span>,<span class="string">'香港'</span>,<span class="number">99</span>,<span class="number">99</span>),</span><br><span class="line">(<span class="number">8</span>,<span class="string">'德玛西亚'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'南京'</span>,<span class="number">56</span>,<span class="number">65</span>),</span><br><span class="line">(<span class="number">9</span>,<span class="string">'唐僧'</span>,<span class="number">25</span>,<span class="string">'男'</span>,<span class="string">'长安'</span>,<span class="number">87</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="number">10</span>,<span class="string">'孙悟空'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'花果山'</span>,<span class="number">100</span>,<span class="number">66</span>),</span><br><span class="line">(<span class="number">11</span>,<span class="string">'猪八戒'</span>,<span class="number">22</span>,<span class="string">'男'</span>,<span class="string">'高老庄'</span>,<span class="number">58</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="number">12</span>,<span class="string">'沙僧'</span>,<span class="number">50</span>,<span class="string">'男'</span>,<span class="string">'流沙河'</span>,<span class="number">77</span>,<span class="number">88</span>),</span><br><span class="line">(<span class="number">13</span>,<span class="string">'白骨精'</span>,<span class="number">22</span>,<span class="string">'女'</span>,<span class="string">'白虎岭'</span>,<span class="number">66</span>,<span class="number">66</span>),</span><br><span class="line">(<span class="number">14</span>,<span class="string">'蜘蛛精'</span>,<span class="number">23</span>,<span class="string">'女'</span>,<span class="string">'盘丝洞'</span>,<span class="number">88</span>,<span class="number">88</span>);</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> Day44.student;</span><br></pre></td></tr></table></figure></details><h4 id="1-1-排序"><a href="#1-1-排序" class="headerlink" title="1.1 排序"></a>1.1 排序</h4><ul><li>语法:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ... <span class="keyword">from</span> 表名 <span class="keyword">order</span> <span class="keyword">by</span> 排序列 [<span class="keyword">asc</span>|<span class="keyword">desc</span>],排序列 [<span class="keyword">asc</span>|dex]</span><br><span class="line"><span class="keyword">asc</span>:升序 (默认值) <span class="keyword">desc</span>:降序</span><br></pre></td></tr></table></figure></li><li>注意:<br>多字段排序，后面的排序结果是在前面排序的基础之上</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询所有数据,使用年龄降序排序</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> Day44.student <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>;</span><br><span class="line"><span class="comment">-- 查询所有数据,在年龄降序排序的基础上，如果年龄相同再以数学成绩降序排序</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">ORDER</span> <span class="keyword">BY</span>  age <span class="keyword">DESC</span>,math <span class="keyword">DESC</span> ;</span><br></pre></td></tr></table></figure><h4 id="1-2-聚合函数"><a href="#1-2-聚合函数" class="headerlink" title="1.2 聚合函数"></a>1.2 聚合函数</h4><ul><li>作用:对一列数据进行计算，返回一个结果，忽略null值</li><li>语法:<blockquote></blockquote><table><thead><tr><th>关键字</th><th>说明</th></tr></thead><tbody><tr><td>count(列名)</td><td>统计一列个数</td></tr><tr><td>max(列名)</td><td>求出一列的最大值</td></tr><tr><td>min(列名)</td><td>求出一列的最小值</td></tr><tr><td>sum(列名)</td><td>对一列求和</td></tr><tr><td>avg(列名)</td><td>求出一列的平均值</td></tr></tbody></table></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 聚合函数</span></span><br><span class="line"><span class="comment">-- 查询学生总数（null值处理）</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">id</span>) <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">isnull</span>(english)) <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="comment">-- 查询年龄大于40的总数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> age&gt;<span class="number">40</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询数学成绩总分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(math) <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="comment">-- 查询数学成绩平均分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(math) <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="comment">-- 查询数学成绩最高分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(math) <span class="keyword">FROM</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询数学成绩最低分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(math) <span class="keyword">FROM</span> student;</span><br></pre></td></tr></table></figure><h4 id="1-3-分组"><a href="#1-3-分组" class="headerlink" title="1.3 分组"></a>1.3 分组</h4><ul><li>作用:对一列数据进行分组，相同的内容分为一组，通常与聚合函数一起使用，完成统计工作</li><li>语法:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 分组列 <span class="keyword">from</span> 表名 <span class="keyword">group</span> <span class="keyword">by</span> 分组列 <span class="keyword">having</span> 分组后的过滤条件;</span><br></pre></td></tr></table></figure></li><li>where和having区别<br>where在分组前进行条件过滤，不支持聚合函数 having在分组后今天条件过滤，支持聚合函数</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分组</span></span><br><span class="line"><span class="comment">-- 按性别分组</span></span><br><span class="line"><span class="keyword">SELECT</span> sex <span class="keyword">FROM</span> student <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询男女各多少人</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询年龄大于25岁的人,按性别分组,统计每组的人数</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> age&gt;<span class="number">25</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询年龄大于25岁的人,按性别分组,统计每组的人数,并只显示性别人数大于2的数据</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> age&gt;<span class="number">25</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex <span class="keyword">having</span> <span class="keyword">COUNT</span>(*)&gt;<span class="number">2</span>;</span><br></pre></td></tr></table></figure><h4 id="1-4-分页"><a href="#1-4-分页" class="headerlink" title="1.4 分页"></a>1.4 分页</h4><ul><li>语法:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ... <span class="keyword">from</span> 表名 <span class="keyword">limit</span> 开始索引,每页显示个数;</span><br></pre></td></tr></table></figure></li><li>索引特点:<br>索引是从0开始，0也是默认值，可以省略</li><li>分页索引公式:<br>索引 = (当前页-1) × 每页个数</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分页</span></span><br><span class="line"><span class="comment">-- 查询学生表中数据，显示前6条</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">6</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">LIMIT</span> <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学生表中数据，从第三条开始显示，显示6条</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">LIMIT</span> <span class="number">2</span>,<span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 模拟百度分页，一页显示5条</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">LIMIT</span> <span class="number">5</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">LIMIT</span> <span class="number">5</span>,<span class="number">5</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">LIMIT</span> <span class="number">10</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><h4 id="1-5-知识小结"><a href="#1-5-知识小结" class="headerlink" title="1.5 知识小结"></a>1.5 知识小结</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件 <span class="keyword">group</span> <span class="keyword">by</span> 分组 <span class="keyword">having</span> 分组后条件 <span class="keyword">order</span> <span class="keyword">by</span> 排序 <span class="keyword">limit</span> 分页;</span><br></pre></td></tr></table></figure><h1 id="二-数据库约束"><a href="#二-数据库约束" class="headerlink" title="二.数据库约束"></a>二.数据库约束</h1><h4 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h4><ul><li>作用<br>对表中的数据进行限定，保证数据的正确性、有效性和完整性。</li></ul><table><thead><tr><th>关键字</th><th>说明</th></tr></thead><tbody><tr><td>primary key</td><td>主键约束。要求表中有一个字段 唯一 且 非空，通常我们使用id作为主键</td></tr><tr><td>unique</td><td>唯一约束</td></tr><tr><td>not null</td><td>非空约束</td></tr><tr><td>default</td><td>默认值</td></tr><tr><td>foreign key</td><td>外键约束</td></tr></tbody></table><h4 id="2-2-实现"><a href="#2-2-实现" class="headerlink" title="2.2 实现"></a>2.2 实现</h4><h5 id="2-2-1-主键约束"><a href="#2-2-1-主键约束" class="headerlink" title="2.2.1 主键约束"></a>2.2.1 主键约束</h5><ul><li>作用:限定某一列的值非空且唯一， 主键就是表中记录的唯一标识。</li></ul><ol><li>设置主键约束<br>1)创建表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>, ...</span><br><span class="line">...</span><br><span class="line">);</span><br></pre></td></tr></table></figure>2)已有表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> tabe 表名 <span class="keyword">add</span> primary <span class="keyword">key</span>(<span class="keyword">id</span>);</span><br></pre></td></tr></table></figure></li><li>特点: 一张表只能有一个主键约束，但是我们可以设置联合主键(多个字段)</li><li>自增器<br>1)创建表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> priamry <span class="keyword">key</span> auto_increment, ...</span><br><span class="line">...</span><br><span class="line">);</span><br></pre></td></tr></table></figure>2)特点:自增器起始值为1，可以手动指定<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 auto_increment=起始值;</span><br></pre></td></tr></table></figure></li><li>删除主键约束<br>语法:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> primary <span class="keyword">key</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1)先移出自增器</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu3 <span class="keyword">modify</span> <span class="keyword">id</span> <span class="built_in">int</span>;</span><br><span class="line"><span class="comment"># 2)才能删除主键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu3 <span class="keyword">drop</span> primary <span class="keyword">key</span>;</span><br><span class="line"><span class="comment"># 解释:因为只有主键约束才有意义设置自增器...(保证唯一性....)</span></span><br></pre></td></tr></table></figure></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 主键约束</span></span><br><span class="line"><span class="comment">-- 给student表添加主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>);</span><br><span class="line"><span class="comment">-- 创建表时指定主键约束 </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stu1(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 插入数据测试</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu1 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="comment">-- Duplicate entry '1' for key 'PRIMARY' 错误:主键不能重复 </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu1 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'lucy'</span>);</span><br><span class="line"><span class="comment">-- Column 'id' cannot be null 错误:主键不能为空</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu1 <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'lucy'</span>);</span><br><span class="line"><span class="comment">-- 我想让name字段，也作为主键使用...</span></span><br><span class="line"><span class="comment">-- Multiple primary key defined -- 错误:主键被重复定义了 </span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu1 <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(<span class="string">`name`</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 联合主键(主键字段完全相同，在进行约束的限定) CREATE TABLE stu2(</span></span><br><span class="line">id INT ,</span><br><span class="line">`name` VARCHAR(32), </span><br><span class="line">PRIMARY KEY(id,`name`)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 插入数据测试</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu2 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu2 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'lucy'</span>);</span><br><span class="line"><span class="comment">-- Duplicate entry '1-lucy' for key 'PRIMARY' 错误 </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu2 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'lucy'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 自增器</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stu3(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 插入数据测试</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'jack'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'jack'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">'jack'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'jack'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="number">10</span>,<span class="string">'jack'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="comment">-- 设置自增器起始值</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu3 AUTO_INCREMENT=<span class="number">1000</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'jack'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- delete(橡皮擦) 和 truncat(撕纸) 区别 </span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> stu3;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> stu3;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'jack'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1)先移出自增器</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu3 <span class="keyword">MODIFY</span> <span class="keyword">id</span> <span class="built_in">INT</span>;</span><br><span class="line"><span class="comment">-- 2)才能删除主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu3 <span class="keyword">DROP</span> PRIMARY <span class="keyword">KEY</span>;</span><br></pre></td></tr></table></figure><h5 id="2-2-2-唯一约束"><a href="#2-2-2-唯一约束" class="headerlink" title="2.2.2 唯一约束"></a>2.2.2 唯一约束</h5><ul><li>作用:限定某一列的值不能重复，可以出现多个null</li></ul><ol><li>创建表时设置唯一约束 </li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">列名 数据类型 <span class="keyword">unique</span>, ...</span><br><span class="line">...</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 唯一约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stu4(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">UNIQUE</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu4 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="comment">-- Duplicate entry 'jack' for key 'name' 错误:名称重复了 </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu4 <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu4 <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu4 <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除唯一约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu4 <span class="keyword">DROP</span> <span class="keyword">INDEX</span> <span class="keyword">name</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表后添加唯一约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu4 <span class="keyword">MODIFY</span> <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">UNIQUE</span> ;</span><br></pre></td></tr></table></figure><h5 id="2-2-3-非空约束"><a href="#2-2-3-非空约束" class="headerlink" title="2.2.3 非空约束"></a>2.2.3 非空约束</h5><ul><li>作用:限定某一列的值不能为null</li></ul><ol><li>创建表时设置非空约束 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">列名 数据类型 <span class="keyword">not</span> <span class="literal">null</span>,<span class="comment">-- 非空约束</span></span><br><span class="line">列名 数据类型 <span class="keyword">unique</span> <span class="keyword">not</span> <span class="literal">null</span>,<span class="comment">-- (唯一+非空)</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ol><p><strong>注意:</strong>唯一 + 非空 != 主键，主键约束一张表只能有一个，唯一+非空 设置多个</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 唯一+非空</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stu5(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu5 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="comment">-- Column 'name' cannot be null 错误:名称不能为空 </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu5 <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 移除非空约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu5 <span class="keyword">MODIFY</span> <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>);</span><br><span class="line"><span class="comment">-- 恢复</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu5 <span class="keyword">MODIFY</span> <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><h5 id="2-2-4-默认值"><a href="#2-2-4-默认值" class="headerlink" title="2.2.4 默认值"></a>2.2.4 默认值</h5><ol><li>创建表设置默认值</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">列名 数据类型 <span class="keyword">default</span> 默认值, ...</span><br><span class="line">...</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 默认值</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stu6(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">sex <span class="built_in">VARCHAR</span>(<span class="number">5</span>) <span class="keyword">DEFAULT</span> <span class="string">'男'</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu6(<span class="keyword">id</span>,<span class="string">`name`</span>) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'小张'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu6(<span class="keyword">id</span>,<span class="string">`name`</span>,sex) <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'小刘'</span>,<span class="string">'女'</span>); <span class="comment">-- 因为我们指定了默认值为男，你再插入null，会把默认值覆盖... </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu6 <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">'小王'</span>,<span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure><h1 id="三-表关系"><a href="#三-表关系" class="headerlink" title="三.表关系"></a>三.表关系</h1><h4 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h4><ul><li>简称:关系型数据库(Relation DBMS)</li></ul><h4 id="3-2-实现"><a href="#3-2-实现" class="headerlink" title="3.2 实现"></a>3.2 实现</h4><h5 id="3-2-1-一对多"><a href="#3-2-1-一对多" class="headerlink" title="3.2.1 一对多"></a>3.2.1 一对多</h5><ul><li>在多的一方建立外键，指向一的一方的主键 </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建新库</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> day19_pro; <span class="keyword">USE</span> day19_pro;</span><br><span class="line"><span class="comment">-- 一对多</span></span><br><span class="line"><span class="comment">-- 班级表(主表) </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">class</span>(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span> <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'java一班'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span> <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'java二班'</span>);</span><br><span class="line"><span class="comment">-- 学生表(从表) </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">class_id <span class="built_in">INT</span> <span class="comment">-- 外键字段</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'流川枫'</span>,<span class="number">1</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'樱木花道'</span>,<span class="number">1</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">'大猩猩'</span>,<span class="number">2</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">'赤木晴子'</span>,<span class="number">2</span>);</span><br><span class="line"><span class="comment">-- 通过班级找学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> class_id =<span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 通过学生找班级</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">class</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 给学生表添加外键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> class_id_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(class_id) <span class="keyword">REFERENCES</span> <span class="keyword">class</span>(<span class="keyword">id</span>);</span><br><span class="line"><span class="comment">-- 删除学生表的外键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> class_id_fk;</span><br></pre></td></tr></table></figure><h5 id="3-2-2-多对多"><a href="#3-2-2-多对多" class="headerlink" title="3.2.2 多对多"></a>3.2.2 多对多</h5><ul><li>多对多关系实现需要借助第三张表。中间表至少包含2个字段，这两个字段作为第三张表的外键，分别指向两张表的主键</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 多对多</span></span><br><span class="line"><span class="comment">-- 课程表(主表) </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> course(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'java'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'ui'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">'美容美发'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">'挖掘机'</span>); </span><br><span class="line"><span class="comment">-- 中间表(从表)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> sc(</span><br><span class="line">  s_id <span class="built_in">INT</span>,</span><br><span class="line">  c_id <span class="built_in">INT</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span>(s_id,c_id)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sc <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sc <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sc <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sc <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">-- 联合主键，可以帮我们校验重复选修问题 </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sc <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="comment">-- 给中间表增加外键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> sc <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> s_id_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(s_id) <span class="keyword">REFERENCES</span> student(<span class="keyword">id</span>); </span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> sc <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> c_id_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(c_id) <span class="keyword">REFERENCES</span> course(<span class="keyword">id</span>);</span><br><span class="line"><span class="comment">-- 流川枫不能选修，不存在的课程 </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sc <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">6</span>);</span><br></pre></td></tr></table></figure><h5 id="3-2-3-一对一"><a href="#3-2-3-一对一" class="headerlink" title="3.2.3 一对一"></a>3.2.3 一对一</h5><ul><li>一对一关系实现，可以在任意一方添加唯一外键指向另一方的主键</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一对一</span></span><br><span class="line"><span class="comment">-- 公司表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> company(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> company <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'拼多多'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> company <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'传智播客'</span>); </span><br><span class="line"><span class="comment">-- 地址表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> address(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, <span class="comment">-- 同时也作为外键 </span></span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> id_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(<span class="keyword">id</span>) <span class="keyword">REFERENCES</span> company(<span class="keyword">id</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> address <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'上海'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> address <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'江苏沭阳'</span>);</span><br></pre></td></tr></table></figure><h4 id="3-3-外键约束"><a href="#3-3-外键约束" class="headerlink" title="3.3 外键约束"></a>3.3 外键约束</h4><ul><li>作用:限定二张表有关系的数据，保证数据的正确性、有效性和完整性</li></ul><ol><li>在从表中添加外键约束<br>1)创建表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名( 列名 数据类型,</span><br><span class="line">[<span class="keyword">constraint</span>] [约束名] <span class="keyword">foreign</span> <span class="keyword">key</span>(外键列) <span class="keyword">references</span> 主表(主键) );</span><br></pre></td></tr></table></figure>2)已有表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> [<span class="keyword">constraint</span>] [约束名] <span class="keyword">foreign</span> <span class="keyword">key</span>(外键列) <span class="keyword">references</span> 主表(主键);</span><br></pre></td></tr></table></figure></li><li>外键约束特点<br>1)主表不能删除从表已引用的数据<br>2)从表不能添加主表未拥有的数据<br>3)先添加主表数据再添加从表数据<br>4)先删除从表数据再删除主表数据<br>5)外键约束允许为空但不能是错的</li><li>删除外键约束<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">foreign</span> <span class="keyword">key</span> 约束名;</span><br></pre></td></tr></table></figure></li></ol><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="dql单表高级查询"><a href="#dql单表高级查询" class="headerlink" title="dql单表高级查询"></a>dql单表高级查询</h2><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><ul><li><p>select … from 表名 order by 排序列 [asc | desc]</p><ul><li>asc 升序 默认值</li><li>desc 降序</li></ul></li></ul><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><ul><li><p>count</p><ul><li>count(*) ，统计包含null数据</li></ul></li><li><p>max</p></li><li><p>min</p></li><li><p>sum</p></li><li><p>avg</p></li></ul><h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><ul><li><p>select 分组 表名 group by 分组 having 分组后条件</p><ul><li>where在分组前条件过滤，不能使用聚合函数</li><li>having在分组后条件过滤，可以使用聚合函数</li></ul></li></ul><h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><ul><li><p>select … from 表名 limit 开始索引,每页显示个数</p></li><li><p>索引公式：</p><ul><li>索引= （当前页-1）× 每页显示个数</li></ul></li></ul><h2 id="数据库约束"><a href="#数据库约束" class="headerlink" title="数据库约束"></a>数据库约束</h2><h3 id="对数据进一步限定，保证数据的正确性，有效性和完整性"><a href="#对数据进一步限定，保证数据的正确性，有效性和完整性" class="headerlink" title="对数据进一步限定，保证数据的正确性，有效性和完整性"></a>对数据进一步限定，保证数据的正确性，有效性和完整性</h3><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><ul><li><p>1）主键</p><ul><li><p>primary key</p><ul><li>给每一条记录增加唯一标识，非空且唯一</li></ul></li></ul></li><li><p>2）唯一</p><ul><li>unique</li></ul></li><li><p>3）非空</p><ul><li>not null</li></ul></li><li><p>4）默认值</p><ul><li>default</li></ul></li><li><p>5）外键</p><ul><li>foreign key</li></ul></li></ul><h3 id="创建表时候设置主键约束"><a href="#创建表时候设置主键约束" class="headerlink" title="创建表时候设置主键约束"></a>创建表时候设置主键约束</h3><p>create table 表名(</p><p>  id int primary key auto_increment,</p><p>  …</p><p>  ..</p><p>);</p><h2 id="表关系"><a href="#表关系" class="headerlink" title="表关系"></a>表关系</h2><h3 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h3><ul><li><p>应用场景</p><ul><li>班级和学生</li><li>部门和员工</li></ul></li><li><p>实例</p><ul><li>一个班级下面有多名学生，多名学生属于同一个班级</li></ul></li><li><p>建表原则</p><ul><li>在从表中添加一个字段（列），字段名（主表名_id）类型与主表的主键一致，这个字段称为外键，通过外键指向主表的主键，建立关联关系<h3 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h3></li></ul></li><li><p>应用场景</p><ul><li>老师和学生</li><li>学生和课程</li></ul></li><li><p>实例</p><ul><li>一个学生可以选修多门课程，一门课程可以被多个学生选修</li></ul></li><li><p>建表原则</p><ul><li>多对多其实由二个一对多组成</li><li>需要借助于第三张表（中间表），需要有二个外键字段分别指向各自的主键，通常还会作为联合主键<h3 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h3></li></ul></li><li><p>应用场景</p><ul><li>公民和身份证号</li><li>公司和注册地</li></ul></li><li><p>实例</p><ul><li>一个公民只能有一个身份证号，一个身份证号只能属于一个公民</li></ul></li><li><p>建表原则</p><ul><li>主键是外键</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（四十三）</title>
      <link href="/2020/04/27/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%B8%89%EF%BC%89/"/>
      <url>/2020/04/27/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>SQL使用与基础操作<a id="more"></a></li></ul><h1 id="一-数据库介绍"><a href="#一-数据库介绍" class="headerlink" title="一.数据库介绍"></a>一.数据库介绍</h1><h4 id="1-1-什么是数据库"><a href="#1-1-什么是数据库" class="headerlink" title="1.1 什么是数据库"></a>1.1 什么是数据库</h4><p>存储数据的仓库,本质上就是存储数据的文件系统，方便我们管理数据。</p><h4 id="1-2-数据库管理系统"><a href="#1-2-数据库管理系统" class="headerlink" title="1.2 数据库管理系统"></a>1.2 数据库管理系统</h4><ul><li>数据库管理系统(DataBase Management System，DBMS):指一种操作和管理数据库的大型软件。 </li><li>数据库管理系统—&gt;MySQL软件–&gt;多个仓库—&gt;多张表—&gt;多条记录(数据)<h4 id="1-3-实体-java类-和表关系"><a href="#1-3-实体-java类-和表关系" class="headerlink" title="1.3 实体(java类)和表关系"></a>1.3 实体(java类)和表关系</h4></li><li>一个实体对应一张表</li><li>一个对象对应一条记录</li><li>对象和记录产生映射关系【ORM: Object Relational Mapping】</li></ul><h4 id="1-4-常见关系型数据库"><a href="#1-4-常见关系型数据库" class="headerlink" title="1.4 常见关系型数据库"></a>1.4 常见关系型数据库</h4><p>MySQL,Oracle,DB2,MSSQL,SQLite</p><h1 id="二-MySQL的使用"><a href="#二-MySQL的使用" class="headerlink" title="二.MySQL的使用"></a>二.MySQL的使用</h1><h4 id="2-1-配置"><a href="#2-1-配置" class="headerlink" title="2.1 配置"></a>2.1 配置</h4><table><thead><tr><th>操作</th><th>本地登录</th><th>指定ip</th></tr></thead><tbody><tr><td>登录</td><td>mysql -u用户名 -p密码</td><td>mysql -h主机地址 -u用户名 -p密码</td></tr><tr><td>退出</td><td>exit<br>quit</td><td>exit<br>quit</td></tr></tbody></table><h1 id="三-SQL"><a href="#三-SQL" class="headerlink" title="三.SQL"></a>三.SQL</h1><h4 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h4><h5 id="3-1-1-什么是SQL"><a href="#3-1-1-什么是SQL" class="headerlink" title="3.1.1 什么是SQL?"></a>3.1.1 什么是SQL?</h5><ul><li>结构化查询语言(Structured Query Language) </li><li>通过sql语句来操作数据，实现对记录的增删改查<blockquote><p>【CRUD】:create 创建、retrieve(read) 检索、update 修改、delete 删除</p></blockquote></li></ul><h5 id="3-1-2-SQL方言"><a href="#3-1-2-SQL方言" class="headerlink" title="3.1.2 SQL方言"></a>3.1.2 SQL方言</h5><p>SQL是一套标准，所有的数据库厂商都实现了此标准;但是各自厂商在此标准上增加了特有的语句，这部分内容我们称为方言。</p><h5 id="3-1-3-SQL书写规范"><a href="#3-1-3-SQL书写规范" class="headerlink" title="3.1.3 SQL书写规范"></a>3.1.3 SQL书写规范</h5><ul><li>sql语句可以单行或多行书写，最后以分号结尾</li><li>sql语句(在windows平台下)不区分大小写，建议关键字大写<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student;</span><br></pre></td></tr></table></figure></li><li>注释</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">单行</span><br><span class="line"><span class="comment">-- 所有数据库厂商支持</span></span><br><span class="line"><span class="comment"># 仅mysql厂商支持(方言)</span></span><br><span class="line">多行</span><br><span class="line"><span class="comment">/* 注释内容 */</span></span><br></pre></td></tr></table></figure><h5 id="3-1-4-SQL分类"><a href="#3-1-4-SQL分类" class="headerlink" title="3.1.4 SQL分类"></a>3.1.4 SQL分类</h5><table><thead><tr><th>类别</th><th>说明</th></tr></thead><tbody><tr><td>DDL(Data Definition Language)数据定义语言</td><td>用来定义数据库对象:数据库，表，列等。关键字:create,drop,alter等</td></tr><tr><td>DML(Data Manipulation Language)数据操作语言</td><td>用来对数据库中表的数据进行增删改。关键字:insert,delete, update等</td></tr><tr><td>DQL(Data Query Language) 数据查询语言</td><td>用来查询数据库中表的记录(数据)。关键字:select, where等</td></tr><tr><td>DCL(Data Control Language)数据控制语言</td><td>用来定义数据库的访问权限和安全级别，及创建用户。关键字:grant,revoke等</td></tr><tr><td>TCL(Transaction Control Language) 事务控制语言</td><td>用于控制数据库的事务操作，关键字; commit,savepoint,rollback等</td></tr></tbody></table><h1 id="四-SQL基础操作"><a href="#四-SQL基础操作" class="headerlink" title="四.SQL基础操作"></a>四.SQL基础操作</h1><h4 id="4-1-DDL"><a href="#4-1-DDL" class="headerlink" title="4.1 DDL"></a>4.1 DDL</h4><h5 id="4-1-1-操作数据库"><a href="#4-1-1-操作数据库" class="headerlink" title="4.1.1 操作数据库"></a>4.1.1 操作数据库</h5><ul><li><p>C:创建</p><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>直接创建数据库</td><td>create database 数据库名;</td><td>create database day18;</td></tr><tr><td>创建数据库并指定字符</td><td>create database 数据库 charset 字符集;</td><td>create database day18_1 charset gbk;</td></tr></tbody></table></li><li><p>R:查询</p><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>查看所有数据库</td><td>show databases;</td><td></td></tr><tr><td>查看建库语句</td><td>show create database 数据库名;</td><td>show create database day18_1;</td></tr></tbody></table></li></ul><ul><li><p>U:修改</p><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>修改数据库字符集</td><td>alter database 数据库名 charset 新字符集;</td><td>alter database day18_1 charset utf8;</td></tr></tbody></table></li><li><p>D:删除</p><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>直接删除数据库</td><td>drop database 数据库名;</td><td>drop database day18_1;</td></tr></tbody></table></li><li><p>使用数据库</p><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>进入/切换某一个具体的数据库</td><td>use 数据库名;</td><td>use day18;</td></tr><tr><td>查看当前所在哪个数据库中</td><td>select database();</td><td></td></tr></tbody></table></li></ul><h5 id="4-1-2-操作表"><a href="#4-1-2-操作表" class="headerlink" title="4.1.2 操作表"></a>4.1.2 操作表</h5><ul><li><p>C:创建</p><blockquote></blockquote><table><thead><tr><th></th><th>创建表</th></tr></thead><tbody><tr><td>语法</td><td>create table 表名(<br>列名(字段名) 数据类型,<br>列名(字段名) 数据类型,<br>列名(字段名) 数据类型,<br>…);</td></tr><tr><td>实例</td><td>create table student(<br>id int,<br>name varchar(32),<br>birthday date<br>);</td></tr></tbody></table><blockquote></blockquote><h6 id="常用数据类型"><a href="#常用数据类型" class="headerlink" title="常用数据类型"></a>常用数据类型</h6><blockquote></blockquote><table><thead><tr><th>类别</th><th>概述</th><th>说明</th></tr></thead><tbody><tr><td>int</td><td>整型</td><td></td></tr><tr><td>float</td><td>浮点型</td><td></td></tr><tr><td>double</td><td>浮点型</td><td></td></tr><tr><td>decimal</td><td>浮点型(保留精准度)</td><td>decimal(m,n) 指定范围<br> m 总长度<br>n 小数长度</td></tr><tr><td>varchar</td><td>字符型</td><td>varchar(n) 指定容纳多少个字符<br> 1~65535 包含字母，符号，汉字</td></tr><tr><td>text</td><td>文本型</td><td></td></tr><tr><td>date</td><td>日期类型</td><td></td></tr><tr><td>datetime</td><td>日期时间类型</td><td></td></tr></tbody></table><blockquote></blockquote><h6 id="克隆表-创建表表时，可以快速指定另一张表的结构"><a href="#克隆表-创建表表时，可以快速指定另一张表的结构" class="headerlink" title="克隆表:创建表表时，可以快速指定另一张表的结构"></a>克隆表:创建表表时，可以快速指定另一张表的结构</h6><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>克隆表</td><td>create table 新表 like 旧表;</td><td>create table teacher like student;</td></tr></tbody></table></li><li><p>R:查询</p><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>查看所有表</td><td>show tables;</td><td></td></tr><tr><td>查看建表语句</td><td>show create table 表名;</td><td>show create table teacher;</td></tr><tr><td>查看表结构</td><td>desc 表名;</td><td>desc teacher;</td></tr></tbody></table></li><li><p>U:修改</p><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>添加一列</td><td>alter table 表名 add 列名 数据类型;</td><td>alter table teacher add jieshao varchar(50);</td></tr><tr><td>修改列类型</td><td>alter table 表名 modify 列名 新类型;</td><td>alter table teacher modify jieshao varchar(99);</td></tr><tr><td>修改列名和类型</td><td>alter table 表名 change 旧列名 新列名 新类型;</td><td>alter table teacher change jieshao intro varchar(999);</td></tr><tr><td>删除指定列</td><td>alter table 表名 drop 列名;</td><td>alter table teacher drop intro;</td></tr><tr><td>修改表字符集</td><td>alter table 表名 charset 字符集;</td><td>alter table teacher charset gbk;</td></tr><tr><td>修改表名</td><td>rename table 旧表名 to 新表名;</td><td>rename table teacher to tch;</td></tr></tbody></table></li><li><p>D:删除</p><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>直接删除表</td><td>drop table 表名;</td><td>drop table tch;</td></tr></tbody></table></li></ul><h4 id="4-2-DML"><a href="#4-2-DML" class="headerlink" title="4.2 DML"></a>4.2 DML</h4><h5 id="4-2-1-添加记录"><a href="#4-2-1-添加记录" class="headerlink" title="4.2.1 添加记录"></a>4.2.1 添加记录</h5><blockquote></blockquote><table><thead><tr><th></th><th>添加记录</th></tr></thead><tbody><tr><td>语法</td><td>insert into 表名(列名1,列名2…)values(值1,值2….);  <br>insert into 表名 values(值1,值2….);</td></tr><tr><td>要求</td><td>与表结构顺序一致，个数相等</td></tr><tr><td>查看</td><td>desc 表名</td></tr></tbody></table><ul><li><p>注意:<br>列名和值的数据类型要对应 字符串类型可以使用单双引号，推荐单引号 字符串可以插入一切(任意)类型，MySQL底层实现了隐式转换 个别列名字段名如果跟关键字冲突了，我们可以使用反引号包裹起来<br>例如:<code>name</code></p></li><li><p>练习</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(<span class="keyword">id</span>,<span class="keyword">name</span>)<span class="keyword">values</span>(<span class="number">1</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">'杰克马'</span>,<span class="literal">null</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(<span class="keyword">id</span>,<span class="keyword">name</span>,birthday)<span class="keyword">values</span>(<span class="string">'2'</span>,<span class="string">'tom'</span>,<span class="string">'1940-2-10'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">'刘强东'</span>,<span class="string">'1973-1-1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 补充:同时添加多条记录</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">5</span>,<span class="string">'王健林'</span>,<span class="literal">null</span>),(<span class="number">6</span>,<span class="string">'撒贝宁'</span>,<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><h6 id="蠕虫复制"><a href="#蠕虫复制" class="headerlink" title="蠕虫复制"></a>蠕虫复制</h6><ul><li>作用:将一张表的记录，快速复制到另外一张表</li><li>应用场景:数据的迁移</li><li>需求:创建一张stu新表，表结构与student一致，实现数据的快速迁移 * 要求:二张表结构相同</li><li>步骤 <blockquote><p>克隆表</p><pre><code>create table stu  like student;</code></pre><p>数据迁移</p><pre><code>insert into stu select * from student;</code></pre></blockquote><h5 id="4-2-2-修改记录"><a href="#4-2-2-修改记录" class="headerlink" title="4.2.2 修改记录"></a>4.2.2 修改记录</h5><blockquote></blockquote><table><thead><tr><th></th><th>修改记录</th></tr></thead><tbody><tr><td>语法</td><td>update 表名 set 列名1=新值1,列名2=新值2…. [where条件]</td></tr><tr><td>解释</td><td>[] 里面的内容可以省略</td></tr><tr><td>实例</td><td>update stu set birthday=’1960-1-1’;<br> update stu set birthday=’2000-1-1’ where id = 4;</td></tr></tbody></table></li></ul><h5 id="4-2-3-删除记录"><a href="#4-2-3-删除记录" class="headerlink" title="4.2.3 删除记录"></a>4.2.3 删除记录</h5><table><thead><tr><th></th><th>删除记录</th><th>摧毁表，重构表</th></tr></thead><tbody><tr><td>语法</td><td>delete from 表名 [where条件]</td><td>runcate table 表名;</td></tr><tr><td>解释</td><td>[] 里面的内容可以省略</td><td>先把表删除，再创建一个相同结构的新表</td></tr><tr><td>实例</td><td>delete from stu;<br> delete from student where id = 5;</td><td>truncate table student;</td></tr></tbody></table><h5 id="4-2-4-知识小结"><a href="#4-2-4-知识小结" class="headerlink" title="4.2.4 知识小结"></a>4.2.4 知识小结</h5><ul><li>新增:insert into 表名 </li><li>修改:update 表名 </li><li>删除:delete from 表名</li></ul><h4 id="4-3-DQL简单查询-检索"><a href="#4-3-DQL简单查询-检索" class="headerlink" title="4.3 DQL简单查询(检索)"></a>4.3 DQL简单查询(检索)</h4><ul><li>导入数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student1(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    chinese <span class="keyword">double</span>,</span><br><span class="line">    english <span class="keyword">double</span>,</span><br><span class="line">    math <span class="keyword">double</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 插入记录</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">'tom'</span>,<span class="number">89</span>,<span class="number">78</span>,<span class="number">90</span>); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">'jack'</span>,<span class="number">67</span>,<span class="number">98</span>,<span class="number">56</span>); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">'jerry'</span>,<span class="number">87</span>,<span class="number">78</span>,<span class="number">77</span>); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">'lucy'</span>,<span class="number">88</span>,<span class="literal">NULL</span>,<span class="number">90</span>); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">5</span>,<span class="string">'james'</span>,<span class="number">82</span>,<span class="number">84</span>,<span class="number">77</span>); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">6</span>,<span class="string">'jack'</span>,<span class="number">55</span>,<span class="number">85</span>,<span class="number">45</span>); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">7</span>,<span class="string">'tom'</span>,<span class="number">89</span>,<span class="number">65</span>,<span class="number">30</span>);</span><br></pre></td></tr></table></figure><ul><li>语法<blockquote></blockquote></li></ul><p><strong>查询结果进行运算，不会影响原表中的记录</strong>  </p><blockquote></blockquote><table><thead><tr><th></th><th>语法</th></tr></thead><tbody><tr><td>格式</td><td>select * from 表名;<br>  select 指定列名1,指定列名2…. from 表名;</td></tr><tr><td>去重关键字</td><td>select distinct 列名 from 表名;<br> 注意:多个列去重，要求内容完全一致</td></tr><tr><td>null参与数学运算结果还是null</td><td>ifnull()函数<br>ifnull(列名,默认值)如果该列有值，直接返回，如果为null返回默认值</td></tr><tr><td>设置查询别名</td><td>select 列名 [as] 列别名 from 表名 [as] 表别名</td></tr></tbody></table><ul><li>练习</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询表中所有学生的信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 查询表中所有学生的姓名和对应的语文成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>,chinese <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 查询表中学生姓名(去重)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="string">`name`</span> <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="string">`name`</span>,chinese <span class="keyword">FROM</span> student1; </span><br><span class="line"><span class="comment">-- 在所有学生数学分数上加10分特长分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>,math+<span class="number">10</span> <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 统计每个学生的总分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>, chinese+english+math <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="keyword">SELECT</span> english <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IFNULL</span>(english,<span class="number">0</span>) <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 解决null值的问题</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>, chinese+<span class="keyword">IFNULL</span>(english,<span class="number">0</span>)+math <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 使用别名表示学生总分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span> <span class="keyword">AS</span> 姓名, (chinese+<span class="keyword">IFNULL</span>(english,<span class="number">0</span>)+math) <span class="keyword">AS</span> 总分 <span class="keyword">FROM</span> student1 <span class="keyword">AS</span> stu1;</span><br></pre></td></tr></table></figure><h4 id="DQL条件查询"><a href="#DQL条件查询" class="headerlink" title="DQL条件查询"></a>DQL条件查询</h4><ul><li>导入数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student2 (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">  age <span class="built_in">int</span>,</span><br><span class="line">  sex <span class="built_in">varchar</span>(<span class="number">5</span>),</span><br><span class="line">  address <span class="built_in">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  math <span class="built_in">int</span>,</span><br><span class="line">  english <span class="built_in">int</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 插入记录</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student2(<span class="keyword">id</span>,<span class="keyword">NAME</span>,age,sex,address,math,english) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>,<span class="string">'马云'</span>,<span class="number">55</span>,<span class="string">'男'</span>,<span class="string">'杭州'</span>,<span class="number">66</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">'马化腾'</span>,<span class="number">45</span>,<span class="string">'女'</span>,<span class="string">'深圳'</span>,<span class="number">98</span>,<span class="number">87</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">'马景涛'</span>,<span class="number">55</span>,<span class="string">'男'</span>,<span class="string">'香港'</span>,<span class="number">56</span>,<span class="number">77</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="string">'柳岩'</span>,<span class="number">20</span>,<span class="string">'女'</span>,<span class="string">'湖南'</span>,<span class="number">76</span>,<span class="number">65</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="string">'柳青'</span>,<span class="number">20</span>,<span class="string">'男'</span>,<span class="string">'湖南'</span>,<span class="number">86</span>,<span class="literal">NULL</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="string">'刘德华'</span>,<span class="number">57</span>,<span class="string">'男'</span>,<span class="string">'香港'</span>,<span class="number">99</span>,<span class="number">99</span>),</span><br><span class="line">(<span class="number">7</span>,<span class="string">'马德'</span>,<span class="number">22</span>,<span class="string">'女'</span>,<span class="string">'香港'</span>,<span class="number">99</span>,<span class="number">99</span>),</span><br><span class="line">(<span class="number">8</span>,<span class="string">'德玛西亚'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'南京'</span>,<span class="number">56</span>,<span class="number">65</span>);</span><br></pre></td></tr></table></figure><ul><li><p>语法</p><blockquote></blockquote><table><thead><tr><th></th><th>语法</th></tr></thead><tbody><tr><td>格式</td><td>select … from 表名 where 条件;</td></tr><tr><td>关系(比较)运算符</td><td>&gt; &lt; &gt;= &lt;= != =</td></tr><tr><td>逻辑运算符</td><td>&amp;&amp; and(条件同时成功)<br> &#124;&#124; or(条件满足一个) <br>! not(条件取反)</td></tr><tr><td>in关键字(某一个列，查询多个值)</td><td>select … from 表名 where 列名 in(值1,值2,值3…..);</td></tr><tr><td>between关键字(范围查询)</td><td>select … from 表名 where 列名 between 较小的值 and 较大的值;<br>特点:包头包尾</td></tr><tr><td>null值处理</td><td>is null 函数<br>  is not null 函数</td></tr><tr><td>like关键字(模糊匹配)</td><td>select … from 表名 where 列名 like ‘通配符字符串’;<br>_ 单个任意字符 <br> % 多个任意字符</td></tr></tbody></table></li><li><p>练习</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关系运算符</span></span><br><span class="line"><span class="comment">-- 查询math分数大于80分的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> math &gt; <span class="number">80</span>;</span><br><span class="line"><span class="comment">-- 查询english分数小于或等于80分的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english &lt;= <span class="number">80</span>; </span><br><span class="line"><span class="comment">-- 查询age等于20岁的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age = <span class="number">20</span>;</span><br><span class="line"><span class="comment">-- 查询age不等于20岁的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age != <span class="number">20</span>;</span><br><span class="line"><span class="comment"># 逻辑运算符</span></span><br><span class="line"><span class="comment">-- 查询age大于35且性别为男的学生(两个条件同时满足)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt; <span class="number">35</span> <span class="keyword">AND</span> sex = <span class="string">'男'</span>;</span><br><span class="line"><span class="comment">-- 查询age大于35或性别为男的学生(两个条件其中一个满足)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt; <span class="number">35</span> <span class="keyword">OR</span> sex = <span class="string">'男'</span>;</span><br><span class="line"><span class="comment">-- 查询id是1或3或5的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">OR</span> <span class="keyword">id</span> =<span class="number">3</span> <span class="keyword">OR</span> <span class="keyword">id</span> = <span class="number">5</span>;</span><br><span class="line"><span class="comment">-- in关键字</span></span><br><span class="line"><span class="comment">-- 再次查询id是1或3或5的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">IN</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line"><span class="comment">-- 查询id不是1或3或5的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">NOT</span> <span class="keyword">IN</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line"><span class="comment">-- 查询english成绩大于等于77，且小于等于87的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english &gt;=<span class="number">77</span> <span class="keyword">AND</span> english &lt;=<span class="number">87</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english <span class="keyword">BETWEEN</span> <span class="number">77</span> <span class="keyword">AND</span> <span class="number">87</span>;</span><br><span class="line"><span class="comment">-- 查询英语成绩为null的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english = <span class="literal">NULL</span>; </span><br><span class="line"><span class="comment">-- null这哥们六亲不认... </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment"># like模糊匹配</span></span><br><span class="line"><span class="comment">-- 查询姓马的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">LIKE</span> <span class="string">'马%'</span>;</span><br><span class="line"><span class="comment">-- 查询姓名中包含'德'字的学生 </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">LIKE</span> <span class="string">'%德%'</span>;</span><br><span class="line"><span class="comment">-- 查询姓马，且姓名有三个字的学生 </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span>  <span class="string">`name`</span> <span class="keyword">LIKE</span> <span class="string">'马__'</span>;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="数据库介绍"><a href="#数据库介绍" class="headerlink" title="数据库介绍"></a>数据库介绍</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li><p>本质就是存储数据库的仓库，就是文件系统，方便管理数据</p></li><li><p>DBMS（数据库管理系统）</p><ul><li><p>MySQL软件</p><ul><li><p>多个仓库</p><ul><li><p>多张表</p><ul><li>多条记录（数据）</li></ul></li></ul></li></ul></li></ul></li><li><p>实体和表关系</p><ul><li>一个实体对应张表</li><li>一个对象对应一条记录</li></ul></li><li><p>常见关系型数据库</p><ul><li>MySQL</li><li>Oracle</li></ul></li></ul><h2 id="数据库安装和使用"><a href="#数据库安装和使用" class="headerlink" title="数据库安装和使用"></a>数据库安装和使用</h2><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><ul><li><p>直接登录本机</p><ul><li>mysql -u用户名 -p</li></ul></li><li><p>远程指定ip</p><ul><li>mysql -h主机名 -u用户名 -p密码</li></ul></li></ul><h3 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h3><ul><li>exit</li><li>quit</li></ul><h2 id="sql介绍"><a href="#sql介绍" class="headerlink" title="sql介绍"></a>sql介绍</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><ul><li><p>结构化查询语言，通过sql语句可以实现对数据库的基础操作【CRUD】</p><ul><li>create 创建</li><li>retrieve 检索</li><li>update 更新</li><li>delete 删除</li></ul></li></ul><h3 id="方言"><a href="#方言" class="headerlink" title="方言"></a>方言</h3><ul><li><p>sql是一套标准，所有的数据库厂商都实现了这套标准，但各自厂商在这套标准上增加自己的特有语句，这部分就称为方言</p><ul><li>例如：mysql注释 #</li></ul></li></ul><h3 id="sql分类"><a href="#sql分类" class="headerlink" title="sql分类"></a>sql分类</h3><ul><li><p>DDL</p><ul><li><p>操作数据库和表</p><ul><li>create</li><li>alter</li><li>drop</li></ul></li></ul></li><li><p>DML</p><ul><li><p>操作记录的增删改</p><ul><li>insert</li><li>update</li><li>delete</li></ul></li></ul></li><li><p>DQL</p><ul><li><p>操作记录的查询</p><ul><li>select</li></ul></li></ul></li><li><p>DCL</p><ul><li>操作用户的权限</li></ul></li><li><p>TCL</p><ul><li>操作数据的事务安全</li></ul></li></ul><h1 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h1><h3 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h3><ul><li><p>操作数据库</p><ul><li>create database 数据库名;</li><li>show databases;</li><li>drop database 数据库名;</li><li>use 数据库名;</li></ul></li><li><p>操作表</p><ul><li><p>创建表</p><p>create table 表名(</p><p>  列名 数据类型,</p><p>  列名 数据类型,</p><p>  …..</p></li></ul></li></ul><pre><code>  );- 常用数据类型    - int    - double    - decimal    - varchar(1~65535)    - date    - datetime- 查看表    - show tables;    - desc 表名;- 修改表    - alter table 表名        - add        - modify        - change        - drop        - charset- 修改表名    - rename table 旧表名 to 新表名;- 删除表    - drop table 表名;- 摧毁表，重构表    - truncate table 表名;</code></pre><h3 id="DML"><a href="#DML" class="headerlink" title="DML"></a>DML</h3><ul><li><p>添加记录</p><ul><li><p>insert into 表名(列名1,列名2…) values(值1,值2…);</p><ul><li>字符串可以使用单双引，推荐单引号</li><li>字符串可以插入任意类型，底层进行了隐式转换</li></ul></li></ul></li><li><p>修改记录</p><ul><li>update 表名 set 列名1=值1,列名2=值2  [where 条件]</li></ul></li><li><p>删除记录</p><ul><li>delete from 表名 [where 条件]</li></ul></li></ul><h3 id="DQL"><a href="#DQL" class="headerlink" title="DQL"></a>DQL</h3><ul><li><p>简单查询</p><ul><li>select … from 表名</li></ul></li><li><p>去重关键字</p><ul><li>select distinct 列名 from 表名</li></ul></li><li><p>ifnull()高级函数</p><ul><li>ifnull(列名,默认值) 如果该列有值直接返回，如果为null那么返回默认值</li></ul></li><li><p>别名</p><ul><li>select 列名 [as] 列别名  from 表名 [as] 表别名</li></ul></li></ul><h3 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h3><ul><li><p>select … from 表名 where 条件</p><ul><li><p>关系运算符</p></li><li><p>逻辑运算符</p><ul><li>and</li><li>or</li><li>not</li></ul></li><li><p>in关键字</p><ul><li>select … from 表名 where 列名 in(值1,值2..);</li></ul></li><li><p>between关键字</p><ul><li>select … from 表名 where 列名 between 较小的值 and  较大的的值</li></ul></li><li><p>is null关键字</p><ul><li><p>null 六亲不认</p><ul><li>is null  为空</li><li>is not null  不为空</li></ul></li></ul></li><li><p>like关键字</p><ul><li>_ 单个任意字符</li><li>% 多个任意字符</li></ul></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（四十二）</title>
      <link href="/2020/04/26/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%BA%8C%EF%BC%89/"/>
      <url>/2020/04/26/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>AJAX &amp; 文件上传<a id="more"></a><h1 id="一-jSON"><a href="#一-jSON" class="headerlink" title="一.jSON"></a>一.jSON</h1><h4 id="1-1-回顾"><a href="#1-1-回顾" class="headerlink" title="1.1 回顾"></a>1.1 回顾</h4></li></ul><table><thead><tr><th>语言</th><th>方法</th></tr></thead><tbody><tr><td>java</td><td>User user =new User();<br>user.setUsername(“jack”);<br>user.setAge(18);</td></tr><tr><td>javaScript</td><td>let user={“username”:”jack”,”age”:18};<br>let array = [{},{},{}]<br>name:都是字符串<br>value:支持各种类型</td></tr></tbody></table><h4 id="1-2-JSON数据与Java对象转换"><a href="#1-2-JSON数据与Java对象转换" class="headerlink" title="1.2 JSON数据与Java对象转换"></a>1.2 JSON数据与Java对象转换</h4><ul><li>最早是JavaScript对象表示形式，现在主要用于互联网传输数据载体<table><thead><tr><th>工具名称</th><th>介绍</th></tr></thead><tbody><tr><td>Jsonlib</td><td>Java 类库，需要导入的jar包较多</td></tr><tr><td>Gson</td><td>google提供的一个简单的json转换工具</td></tr><tr><td>Fastjson</td><td>alibaba技术团队提供的一个高性能的json转换工具</td></tr><tr><td>Jackson</td><td>开源免费的json转换工具，springmvc转换默认使用jackson</td></tr></tbody></table></li></ul><h5 id="1-2-0-导入jackson包"><a href="#1-2-0-导入jackson包" class="headerlink" title="1.2.0 导入jackson包"></a>1.2.0 导入jackson包</h5><p>该jar包提供了一个核心转换器对象<br>ObjectMapper om = new ObjectMapper();</p><h5 id="1-2-1-Java对象转为JSON-字符串"><a href="#1-2-1-Java对象转为JSON-字符串" class="headerlink" title="1.2.1 Java对象转为JSON(字符串)"></a>1.2.1 Java对象转为JSON(字符串)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">writeValueAsString</span><span class="params">(Object object)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">//将User对象转为JSON字符串</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UserToJson</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User(<span class="string">"1"</span>, <span class="string">"Jack"</span>, <span class="string">"Male"</span>, <span class="number">18</span>, <span class="string">"NY"</span>, <span class="string">"123"</span>, <span class="string">"123@qq.com"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建jackson转换器对象</span></span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将任意对象转为JSON字符串</span></span><br><span class="line">        String Json = om.writeValueAsString(user);</span><br><span class="line">        System.out.println(Json);<span class="comment">//在Java中，name必须使用双引号包裹起来</span></span><br><span class="line">        <span class="comment">//&#123;"id":"1","name":"Jack","sex":"Male","age":18,"address":"NY","qq":"123","email":"123@qq.com"&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MapToJson</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"name"</span>, <span class="string">"Rose"</span>);</span><br><span class="line">        map.put(<span class="string">"age"</span>, <span class="number">18</span>);</span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        String JSON = om.writeValueAsString(map);</span><br><span class="line">        System.out.println(JSON);</span><br><span class="line">        <span class="comment">//&#123;"name":"Rose","age":18&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将List集合转为Json字符串</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ListToJson</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"1"</span>, <span class="string">"Jack"</span>, <span class="string">"Male"</span>, <span class="number">18</span>, <span class="string">"NY"</span>, <span class="string">"123"</span>, <span class="string">"123@qq.com"</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"2"</span>, <span class="string">"Rose"</span>, <span class="string">"Female"</span>, <span class="number">18</span>, <span class="string">"NY"</span>, <span class="string">"123"</span>, <span class="string">"123@qq.com"</span>));</span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">        String JSON = om.writeValueAsString(list);</span><br><span class="line">        System.out.println(JSON);</span><br><span class="line"><span class="comment">//[&#123;"id":"1","name":"Jack","sex":"Male","age":18,"address":"NY","qq":"123","email":"123@qq.com"&#125;</span></span><br><span class="line"><span class="comment">// ,&#123;"id":"2","name":"Rose","sex":"Female","age":18,"address":"NY","qq":"123","email":"123@qq.com"&#125;]</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="1-2-2-将JSON-字符串-转为Java对象"><a href="#1-2-2-将JSON-字符串-转为Java对象" class="headerlink" title="1.2.2 将JSON(字符串)转为Java对象"></a>1.2.2 将JSON(字符串)转为Java对象</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">T <span class="title">readValue</span><span class="params">(String json,Class&lt;T&gt; classType)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">//将JSON字符串转为User对象</span></span><br><span class="line">    <span class="comment">//如果获取的JSON格式没有对应的Java实体对象，则使用Map接收</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">JsonToUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        String json = <span class="string">"&#123;\"id\":\"1\",\"name\":\"Jack\",\"sex\":\"Male\",\"age\":18,\"address\":\"NY\",\"qq\":\"123\",\"email\":\"123@qq.com\"&#125;"</span>;</span><br><span class="line">        ;</span><br><span class="line">        <span class="comment">//创建jackson转换器对象</span></span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        User user = om.readValue(json, User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将JSON字符串转换为Map集合</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">JsonToMap</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        String json=<span class="string">"&#123;\"id\":\"1\",\"name\":\"Jack\",\"sex\":\"Male\",\"age\":18,\"address\":\"NY\",\"qq\":\"123\",\"email\":\"123@qq.com\"&#125;"</span>;</span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//toMap</span></span><br><span class="line">        Map&lt;String ,Object&gt; map = om.readValue(json, Map<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将JSON数组字符串转换为list结婚</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">JsontToList</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        String json = <span class="string">"[&#123;\"id\":\"1\",\"name\":\"Jack\",\"sex\":\"Male\",\"age\":18,\"address\":\"NY\",\"qq\":\"123\",\"email\":\"123@qq.com\"&#125;,&#123;\"id\":\"2\",\"name\":\"Rose\",\"sex\":\"Female\",\"age\":18,\"address\":\"NY\",\"qq\":\"123\",\"email\":\"123@qq.com\"&#125;]\n"</span>;</span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        List list = om.readValue(json, List<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二-案例-检查用户名是否可用"><a href="#二-案例-检查用户名是否可用" class="headerlink" title="二.案例:检查用户名是否可用"></a>二.案例:检查用户名是否可用</h1><h4 id="2-1-需求"><a href="#2-1-需求" class="headerlink" title="2.1 需求"></a>2.1 需求</h4><ul><li><p>在用户注册页面，输入用户名，当用户名输入框失去焦点时，发送异步请求，将输入框的用户名传递给服务器进行是 否存在的校验。</p><h4 id="2-2-技术分析"><a href="#2-2-技术分析" class="headerlink" title="2.2 技术分析"></a>2.2 技术分析</h4></li><li><p>此需求使用了ajax技术:通过异步提交，实现页面的局部刷新，提高用户的体验</p></li><li><p>ajax</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123; </span><br><span class="line">    type:&quot;请求方式，get|post&quot;, </span><br><span class="line">    url:&quot;请求服务器地址&quot;, </span><br><span class="line">    data:&quot;请求参数&quot;, </span><br><span class="line">    success:function(resp)&#123;</span><br><span class="line">        resp就是服务器返回的结果... </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></li><li><p>get</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$.get(url(地址?参数),function(resp)&#123; </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>post</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$.post(url,data,function(resp)&#123; </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="2-3-需求分析"><a href="#2-3-需求分析" class="headerlink" title="2.3 需求分析"></a>2.3 需求分析</h4></li><li><p>前端</p><blockquote></blockquote><table><thead><tr><th>index.jsps</th></tr></thead><tbody><tr><td>给用户文本框绑定blur()事件</td></tr><tr><td>获取用户输入的value属性值</td></tr><tr><td>发送Ajax请求<br>$.ajax{}</td></tr><tr><td>页面局部更新，友情提示</td></tr></tbody></table></li><li><p>后端</p><blockquote></blockquote><table><thead><tr><th>CheckServlet</th></tr></thead><tbody><tr><td>接受请求参数username</td></tr><tr><td>声明返回map集合</td></tr><tr><td>判断用户名是否为xx，如果为xx返回<br>map.put(“flag”,false);<br>map.put(“msg”,”Already Registered”);</td></tr><tr><td>将map集合转换为json字符串<br>map.put(“flag”,true);<br>map.put(“msg”,”This Name Can Be Use”);</td></tr><tr><td>设置json的mime类型</td></tr><tr><td>通过response响应到客户端</td></tr></tbody></table></li></ul><h4 id="2-4-代码实现"><a href="#2-4-代码实现" class="headerlink" title="2.4 代码实现"></a>2.4 代码实现</h4><ul><li>前端<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;$&#123;NAME&#125;&lt;/title&gt;</span><br><span class="line">    &lt;script src="$&#123;pageContext.request.contextPath&#125;/js/jquery-3.2.1.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;Register&lt;/h3&gt;</span><br><span class="line">&lt;form action=<span class="string">"#"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    Name:&lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span> id=<span class="string">"username"</span>&gt;</span><br><span class="line">    &lt;span id="userwarn"&gt;&lt;/span&gt;&lt;br&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//给用户文本框绑定失去焦点事件</span></span><br><span class="line">    $(<span class="string">'#username'</span>).blur(function () &#123;</span><br><span class="line">        console.log(<span class="keyword">this</span>.value);</span><br><span class="line">        <span class="comment">//获取用户输入的值</span></span><br><span class="line">        let data=<span class="string">"username="</span>+<span class="keyword">this</span>.value;</span><br><span class="line">        <span class="comment">//发送ajax请求</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type:<span class="string">"post"</span>,</span><br><span class="line">            url:<span class="string">'$&#123;pageContext.request.contextPath&#125;/CheckServlet'</span>,</span><br><span class="line">            data:data,</span><br><span class="line">            success:function (resp) &#123;</span><br><span class="line">                console.log(resp);</span><br><span class="line">                <span class="comment">//判断结果并实现局部刷新</span></span><br><span class="line">                <span class="keyword">if</span>(resp.<span class="keyword">float</span>)&#123;</span><br><span class="line">                    $(<span class="string">'#userwarn'</span>).text(resp.msg).css(<span class="string">'color'</span>,<span class="string">'green'</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    $(<span class="string">'#userwarn'</span>).text(resp.msg).css(<span class="string">'color'</span>,<span class="string">'red'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li>后端<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CheckServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        <span class="comment">//接收请求参数</span></span><br><span class="line">        String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        <span class="comment">//声明map集合</span></span><br><span class="line">        Map&lt;String , Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">//判断用户是否存在</span></span><br><span class="line">        <span class="keyword">if</span>(username.equals(<span class="string">"jack"</span>))&#123;</span><br><span class="line">            map.put(<span class="string">"flag"</span>,<span class="keyword">false</span>);</span><br><span class="line">            map.put(<span class="string">"msg"</span>,<span class="string">"Already Registered"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            map.put(<span class="string">"flag"</span>,<span class="keyword">true</span>);</span><br><span class="line">            map.put(<span class="string">"msg"</span>,<span class="string">"This Name Can Be Use"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将map集合转换为json字符串</span></span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        String json = om.writeValueAsString(map);</span><br><span class="line">        System.out.println(json);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置JSON的MIME类型</span></span><br><span class="line">        resp.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//response响应JSON到客户端</span></span><br><span class="line">        resp.getWriter().write(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-案例-文件上传"><a href="#三-案例-文件上传" class="headerlink" title="三.案例:文件上传"></a>三.案例:文件上传</h1><h4 id="3-1-需求"><a href="#3-1-需求" class="headerlink" title="3.1 需求"></a>3.1 需求</h4><p>在用户注册页面，我们可以输入用户名，还可以选择要上传的文件;点击提交按钮，就可以将用户输入的内容和选择 的文件保存到服务器上</p><h4 id="3-2-技术分析"><a href="#3-2-技术分析" class="headerlink" title="3.2 技术分析"></a>3.2 技术分析</h4><h5 id="3-2-1-客户端如何将文件转为文本"><a href="#3-2-1-客户端如何将文件转为文本" class="headerlink" title="3.2.1 客户端如何将文件转为文本"></a>3.2.1 客户端如何将文件转为文本</h5><ol><li>表单提交方式必须为post action=”post”</li><li>表单的enctype属性值必须为multipart/form-data 多组件表单数据 enctype=”multipart/form-data”</li><li>在表单中提供文件上传项&lt;input type=”file” name=”pic”&gt;</li></ol><h5 id="3-2-2-服务器将文本转为字节流"><a href="#3-2-2-服务器将文本转为字节流" class="headerlink" title="3.2.2 服务器将文本转为字节流"></a>3.2.2 服务器将文本转为字节流</h5><ol><li>使用apache提供工具类 commons-fileupload </li><li>使用servlet3.0版本，通过注解实现 </li><li>使用springMVC框架(底层使用commons-fileupload)</li></ol><h4 id="3-3-代码实现"><a href="#3-3-代码实现" class="headerlink" title="3.3 代码实现"></a>3.3 代码实现</h4><ul><li>前端<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//给用户文本框绑定失去焦点事件</span></span><br><span class="line">    $(<span class="string">'#username'</span>).blur(function () &#123;</span><br><span class="line">        console.log(<span class="keyword">this</span>.value);</span><br><span class="line">        <span class="comment">//获取用户输入的值</span></span><br><span class="line">        let data = <span class="string">"username="</span> + <span class="keyword">this</span>.value;</span><br><span class="line">        <span class="comment">//发送ajax请求</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">"post"</span>,</span><br><span class="line">            url: <span class="string">'$&#123;pageContext.request.contextPath&#125;/CheckServlet'</span>,</span><br><span class="line">            data: data,</span><br><span class="line">            success: function (resp) &#123;</span><br><span class="line">                console.log(resp);</span><br><span class="line">                <span class="comment">//判断结果并实现局部刷新</span></span><br><span class="line">                <span class="keyword">if</span> (resp.flag) &#123;</span><br><span class="line">                    $(<span class="string">'#userwarn'</span>).text(resp.msg).css(<span class="string">'color'</span>, <span class="string">'green'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $(<span class="string">'#userwarn'</span>).text(resp.msg).css(<span class="string">'color'</span>, <span class="string">'red'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li>后端</li></ul><ol><li>创建磁盘文件项工厂</li><li>创建核心解析对象(依赖工厂对象)</li><li>解析request对象，返回上传项list集合 4. 遍历list，获取每一个上传项</li><li>判断<br>普通上传项<blockquote><p>name和value </p></blockquote>文件上传项<blockquote><p>文件名<br>字节输入流<br>保存服务器端</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UploadServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//创建磁盘文件项工厂</span></span><br><span class="line">            DiskFileItemFactory factory = <span class="keyword">new</span> DiskFileItemFactory();</span><br><span class="line">            <span class="comment">//创建核心解析器对象(以来工厂对象)s</span></span><br><span class="line">            ServletFileUpload fileUpload = <span class="keyword">new</span> ServletFileUpload(factory);</span><br><span class="line">            <span class="comment">//解析request请求,返回一个上传项的list集合</span></span><br><span class="line">            List&lt;FileItem&gt; fileItems = fileUpload.parseRequest(req);</span><br><span class="line">            <span class="comment">//遍历list集合</span></span><br><span class="line">            <span class="keyword">for</span> (FileItem fileItem : fileItems) &#123;</span><br><span class="line">                <span class="comment">//判断是文件项还是普通项</span></span><br><span class="line">                <span class="keyword">if</span> (fileItem.isFormField()) &#123;</span><br><span class="line">                    <span class="comment">//普通上传项</span></span><br><span class="line">                    <span class="comment">//获取name属性名</span></span><br><span class="line">                    String name = fileItem.getFieldName();</span><br><span class="line">                    <span class="comment">//获取value属性值</span></span><br><span class="line">                    String value = fileItem.getString();</span><br><span class="line">                    System.out.println(<span class="string">"Normal"</span> + name + <span class="string">"="</span> + value);</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//文件上传项</span></span><br><span class="line">                    <span class="comment">//获取文件名</span></span><br><span class="line">                    String fileName = fileItem.getName();</span><br><span class="line">                    <span class="comment">//获取文件字节流输入</span></span><br><span class="line">                    InputStream in = fileItem.getInputStream();</span><br><span class="line">                    <span class="comment">//获取扩展名</span></span><br><span class="line">                    String extName = FileUtil.extName(fileName);</span><br><span class="line">                    <span class="comment">//生成随机文件名</span></span><br><span class="line">                    fileName = IdUtil.simpleUUID() + <span class="string">"."</span> + extName;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//获取upload目录在服务器真实路径</span></span><br><span class="line">                    String realPath = req.getServletContext().getRealPath(<span class="string">"/upload/"</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//判断此目录是否存在，如果不存在则创建</span></span><br><span class="line">                    File dirFile = <span class="keyword">new</span> File(realPath);</span><br><span class="line">                    <span class="keyword">if</span> (!dirFile.exists()) &#123;</span><br><span class="line">                        dirFile.mkdirs();</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//设置文件输出流</span></span><br><span class="line">                    FileOutputStream out = <span class="keyword">new</span> FileOutputStream(realPath + fileName);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//流的copy</span></span><br><span class="line">                    IoUtil.copy(in, out);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//关闭流</span></span><br><span class="line">                    out.close();</span><br><span class="line">                    in.close();</span><br><span class="line"></span><br><span class="line">                    resp.getWriter().write(<span class="string">"Success"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileUploadException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（四十一）</title>
      <link href="/2020/04/25/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%B8%80%EF%BC%89/"/>
      <url>/2020/04/25/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>Listerner &amp; 综合案例<a id="more"></a></li></ul><h1 id="一-Linstener"><a href="#一-Linstener" class="headerlink" title="一.Linstener"></a>一.Linstener</h1><h4 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h4><ul><li><p>JavaWeb中的监听器(观察者模式)<br>Java程序中，也要需要被监视的对象，一旦被监视对象发生变化，采取相应对象</p></li><li><p>监听器三大对象<br>HttpServletRequest,HttpSession,ServletContext</p></li><li><p>场景<br>历史访问次数，统计在线人数，系统启动时初始化配置信息</p><h4 id="1-2-快速入门"><a href="#1-2-快速入门" class="headerlink" title="1.2 快速入门"></a>1.2 快速入门</h4><p>使用ServletContextListener箭头项目启动和销毁做一些事，如在项目启动时加载配置文件<br>步骤:</p><blockquote><p>创建ServletContextListener普通类<br>监听ServletContext创建、销毁<br>配置web.xml/注解<br>补充:监听HttpServletRequestListener/HttpSessionListener</p></blockquote></li><li><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>com.itheima.Demo01.MyListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">//监听ServletContext创建</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext创建"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//监听ServletContext销毁</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext销毁"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">//监听ServletContext创建</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext创建"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//监听ServletContext销毁</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext销毁"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-模拟Spring框架"><a href="#1-3-模拟Spring框架" class="headerlink" title="1.3 模拟Spring框架"></a>1.3 模拟Spring框架</h4><ul><li>ServletContext可以在项目启动时读取配置文件加载<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    全局配置参数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>configLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>words.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">//监听ServletContext创建</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext创建"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//可以加载公司定义配置文件的名称</span></span><br><span class="line">        <span class="comment">//servletContextEvent 上下文事件对象，获取ServletContext</span></span><br><span class="line">        ServletContext servletContext = servletContextEvent.getServletContext();</span><br><span class="line">        <span class="comment">//通过加载定义公司定义的配置文件名称</span></span><br><span class="line">        String configLoaction = servletContext.getInitParameter(<span class="string">"configLocation"</span>);</span><br><span class="line">        System.out.println(<span class="string">""</span> + configLoaction);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//监听ServletContext销毁</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext销毁"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-案例统计在线人数"><a href="#1-4-案例统计在线人数" class="headerlink" title="1.4 案例统计在线人数"></a>1.4 案例统计在线人数</h4><ul><li><p>需求:<br>有用户使用网站: 在线人数+1,用户退出，在线人数-1</p></li><li><p>步骤分析<br>使用ServletContext域对象存储在线总人数<br>使用ServletContextListener在项目启动时，初始化总人数为0<br>使用HttpSessionListener监听器，用户访问，人数+1，用户退出，人数-1<br>使用LogoutServlet控制器对当前会话对Session手动销毁</p></li><li><p>代码实现</p></li><li><p>InitNumberListerner</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InitNumberListerner</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取上下文域对象</span></span><br><span class="line">        ServletContext servletContext = servletContextEvent.getServletContext();</span><br><span class="line">        <span class="comment">//初始化在线人数</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"number"</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>NumberChangeListener</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NumberChangeListener</span> <span class="keyword">implements</span> <span class="title">HttpSessionListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">//会话建立，在线人数+1</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionCreated</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取session</span></span><br><span class="line">        HttpSession session = httpSessionEvent.getSession();</span><br><span class="line">        <span class="comment">//获取上下文session域对象</span></span><br><span class="line">        ServletContext servletContext = session.getServletContext();</span><br><span class="line">        <span class="comment">//取出在线人数</span></span><br><span class="line">        Integer number = (Integer) servletContext.getAttribute(<span class="string">"number"</span>);</span><br><span class="line">        <span class="comment">//+1</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"number"</span>, number + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//会话销毁，在线人数-1</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionDestroyed</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取session</span></span><br><span class="line">        HttpSession session = httpSessionEvent.getSession();</span><br><span class="line">        <span class="comment">//获取上下文session域对象</span></span><br><span class="line">        ServletContext servletContext = session.getServletContext();</span><br><span class="line">        <span class="comment">//取出在线人数</span></span><br><span class="line">        Integer number = (Integer) servletContext.getAttribute(<span class="string">"number"</span>);</span><br><span class="line">        <span class="comment">//-1</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"number"</span>, number - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;Learn Listener&lt;/h3&gt;</span><br><span class="line">&lt;h5&gt;Online Member:$&#123;applicationScope.number&#125;&lt;/h5&gt;</span><br><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/LogoutServlet"&gt;Logout&lt;/a&gt;</span><br><span class="line">$END$</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></li><li><p>LogoutServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LogoutServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//销毁Session</span></span><br><span class="line">        req.getSession().invalidate();</span><br><span class="line">        resp.getWriter().write(<span class="string">"Logout"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-综合案例"><a href="#二-综合案例" class="headerlink" title="二.综合案例"></a>二.综合案例</h1><h4 id="2-1-环境搭建"><a href="#2-1-环境搭建" class="headerlink" title="2.1 环境搭建"></a>2.1 环境搭建</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> String qq;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="keyword">if</span> (request.getMethod().equalsIgnoreCase(<span class="string">"post"</span>)) &#123;</span><br><span class="line">            request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        filterChain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String realpath = <span class="string">"/Users/swzxsyh/Program/userdata.txt"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//从文件中读取所有学员信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;User&gt; <span class="title">readAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//保存所有学生对象信息</span></span><br><span class="line">       List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//得到文件真实路径</span></span><br><span class="line">            <span class="comment">//创建字符输入流</span></span><br><span class="line">            Reader isr = <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(realpath), <span class="string">"UTF-8"</span>);</span><br><span class="line">            <span class="comment">//创建字符缓冲流</span></span><br><span class="line">            BufferedReader br = <span class="keyword">new</span> BufferedReader(isr); <span class="comment">//装饰模式</span></span><br><span class="line">            <span class="comment">//一次读一行</span></span><br><span class="line">            String row = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">while</span> ((row = br.readLine()) != <span class="keyword">null</span>) &#123;<span class="comment">//row = "1,张三,男,20"</span></span><br><span class="line">                String[] arr = row.split(<span class="string">","</span>);</span><br><span class="line">                User user = <span class="keyword">new</span> User();</span><br><span class="line">                user.setId(arr[<span class="number">0</span>]);</span><br><span class="line">                user.setName(arr[<span class="number">1</span>]);</span><br><span class="line">                user.setSex(arr[<span class="number">2</span>]);</span><br><span class="line">                user.setAge(Integer.parseInt(arr[<span class="number">3</span>]));</span><br><span class="line">                user.setAddress(arr[<span class="number">4</span>]);</span><br><span class="line">                user.setQq(arr[<span class="number">5</span>]);</span><br><span class="line">                user.setEmail(arr[<span class="number">6</span>]);</span><br><span class="line">                <span class="comment">//将User对象添加到集合</span></span><br><span class="line">                list.add(user);</span><br><span class="line">            &#125;</span><br><span class="line">            br.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//向文件中写入所有用户信息--覆盖写</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeAll</span><span class="params">(List&lt;User&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//创建字符输出流</span></span><br><span class="line">            Writer osw = <span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(realpath), <span class="string">"UTF-8"</span>);</span><br><span class="line">            <span class="comment">//创建字符缓冲流</span></span><br><span class="line">            BufferedWriter out = <span class="keyword">new</span> BufferedWriter(osw);</span><br><span class="line">            <span class="comment">//循环向文件中写入文本</span></span><br><span class="line">            <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">                out.write(user.getId() + <span class="string">","</span> + user.getName() + <span class="string">","</span> + user.getSex() + <span class="string">","</span> + user.getAge() + <span class="string">","</span> + user.getAddress() + <span class="string">","</span> + user.getQq() + <span class="string">","</span> + user.getEmail());</span><br><span class="line">                out.newLine();<span class="comment">//创建新的一行</span></span><br><span class="line">            &#125;</span><br><span class="line">            out.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; list = readAll();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2-用户查询功能"><a href="#2-2-用户查询功能" class="headerlink" title="2.2 用户查询功能"></a>2.2 用户查询功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/FindAllServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindAllServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserService();</span><br><span class="line">        List&lt;User&gt; list = userService.findAll();</span><br><span class="line">        req.setAttribute(<span class="string">"list"</span>, list);</span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    UserDao userDao = <span class="keyword">new</span> UserDao();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> userDao.findAll();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; list = DataUtils.readAll();</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-添加用户功能"><a href="#2-3-添加用户功能" class="headerlink" title="2.3 添加用户功能"></a>2.3 添加用户功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            BeanUtils.populate(user,parameterMap);</span><br><span class="line">            UserService userService = <span class="keyword">new</span> UserService();</span><br><span class="line">            userService.add(user);</span><br><span class="line">            resp.sendRedirect(req.getContextPath()+<span class="string">"/FindAllServlet"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">    userDao.add(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">    List&lt;User&gt; list = DataUtils.readAll();</span><br><span class="line">    list.add(user);</span><br><span class="line">    DataUtils.writeAll(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-删除用户功能"><a href="#2-4-删除用户功能" class="headerlink" title="2.4 删除用户功能"></a>2.4 删除用户功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/DeleteServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeleteServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String id = req.getParameter(<span class="string">"id"</span>);</span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserService();</span><br><span class="line">        userService.delete(id);</span><br><span class="line">        resp.sendRedirect(req.getContextPath()+<span class="string">"/FindAllServlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(String id)</span></span>&#123;</span><br><span class="line">    userDao.delete(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    List&lt;User&gt; list = DataUtils.readAll();</span><br><span class="line">    <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">        <span class="keyword">if</span> (user.getId().equalsIgnoreCase(id)) &#123;</span><br><span class="line">            list.remove(user);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    DataUtils.writeAll(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-5-修改用户功能"><a href="#2-5-修改用户功能" class="headerlink" title="2.5 修改用户功能"></a>2.5 修改用户功能</h4><h5 id="2-5-1-用户回显"><a href="#2-5-1-用户回显" class="headerlink" title="2.5.1 用户回显"></a>2.5.1 用户回显</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/FindByIdServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindByIdServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String id = req.getParameter(<span class="string">"id"</span>);</span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserService();</span><br><span class="line">        User user = userService.fidById(id);</span><br><span class="line">        req.setAttribute(<span class="string">"user"</span>, user);</span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/update.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">fidById</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> userDao.findById(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    User returnUser = <span class="keyword">null</span>;</span><br><span class="line">    List&lt;User&gt; list = DataUtils.readAll();</span><br><span class="line">    <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">        <span class="keyword">if</span> (user.getId().equalsIgnoreCase(id)) &#123;</span><br><span class="line">            returnUser = user;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> returnUser;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-5-2-修改用户"><a href="#2-5-2-修改用户" class="headerlink" title="2.5.2 修改用户"></a>2.5.2 修改用户</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UpdateServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UpdateServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line">            User newUser = <span class="keyword">new</span> User();</span><br><span class="line">            BeanUtils.populate(newUser, parameterMap);</span><br><span class="line">            UserService userService = <span class="keyword">new</span> UserService();</span><br><span class="line">            userService.update(newUser);</span><br><span class="line">            resp.sendRedirect(req.getContextPath() + <span class="string">"/FindAllServlet"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(User newUser)</span> </span>&#123;</span><br><span class="line">        userDao.update(newUser);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(User newUser)</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; list = DataUtils.readAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">            <span class="keyword">if</span> (user.getId().equalsIgnoreCase(newUser.getId())) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    BeanUtils.copyProperties(user, newUser);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        DataUtils.writeAll(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="listener"><a href="#listener" class="headerlink" title="listener"></a>listener</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li>监听web三大域对象：Request、Session、ServletContext（创建和销毁）</li></ul><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>历史访问次数</li><li>统计在线人数</li><li>系统启动时初始化配置信息</li></ul><h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><ul><li><ol><li>定义一个类，实现ServletContextListener接口</li></ol></li><li><ol start="2"><li>重写接口中的方法</li></ol></li><li><ol start="3"><li><p>配置</p><ul><li><p>web.xml</p><ul><li>别人写好的监听器，只能通过配置文件进行配置</li></ul></li><li><p>注解</p></li></ul></li></ol></li></ul><h3 id="案例-统计在线人数"><a href="#案例-统计在线人数" class="headerlink" title="案例:统计在线人数"></a>案例:统计在线人数</h3><ul><li>1）初始化在线人数</li><li>2）创建会话时人数+1，关闭会话时人数-1</li><li>3）servlet实现用户退出</li></ul><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><h3 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h3><ul><li>增删改查</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装使用Oracle 11g</title>
      <link href="/2020/04/23/Docker%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8Oracle-11g/"/>
      <url>/2020/04/23/Docker%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8Oracle-11g/</url>
      
        <content type="html"><![CDATA[<ul><li>Docker安装Oracle 11g</li><li>使用Navicat连接<a id="more"></a></li></ul><h1 id="一-拉取镜像"><a href="#一-拉取镜像" class="headerlink" title="一.拉取镜像"></a>一.拉取镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com&#x2F;helowin&#x2F;oracle_11g</span><br></pre></td></tr></table></figure><h4 id="1-1-可以改名"><a href="#1-1-可以改名" class="headerlink" title="1.1 可以改名"></a>1.1 可以改名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag xxxxxxxxxx oracle:oracle_11g</span><br></pre></td></tr></table></figure><h1 id="二-启动"><a href="#二-启动" class="headerlink" title="二.启动"></a>二.启动</h1><h4 id="2-1-启动镜像"><a href="#2-1-启动镜像" class="headerlink" title="2.1 启动镜像"></a>2.1 启动镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 1521:1521 --name oracle_11g oracle_11g:latest</span><br></pre></td></tr></table></figure><h4 id="2-2-查看容器是否运行"><a href="#2-2-查看容器是否运行" class="headerlink" title="2.2 查看容器是否运行"></a>2.2 查看容器是否运行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h1 id="三-配置"><a href="#三-配置" class="headerlink" title="三.配置"></a>三.配置</h1><h4 id="3-1-进入容器"><a href="#3-1-进入容器" class="headerlink" title="3.1 进入容器"></a>3.1 进入容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it oracle_11g bash</span><br></pre></td></tr></table></figure><h4 id="3-2-切换到root"><a href="#3-2-切换到root" class="headerlink" title="3.2 切换到root"></a>3.2 切换到root</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line"><span class="comment">#密码:helowin</span></span><br></pre></td></tr></table></figure><h4 id="3-3-编辑profile文件"><a href="#3-3-编辑profile文件" class="headerlink" title="3.3 编辑profile文件"></a>3.3 编辑profile文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure><p>最后行添加如下环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2</span><br><span class="line"><span class="built_in">export</span> ORACLE_SID=helowin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$ORACLE_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><h4 id="3-4-创建软链接"><a href="#3-4-创建软链接" class="headerlink" title="3.4 创建软链接"></a>3.4 创建软链接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s <span class="variable">$ORACLE_HOME</span>/bin/sqlplus /usr/bin</span><br></pre></td></tr></table></figure><h4 id="3-5-切换回oracle"><a href="#3-5-切换回oracle" class="headerlink" title="3.5 切换回oracle"></a>3.5 切换回oracle</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - oracle</span><br></pre></td></tr></table></figure><h4 id="3-6-登陆sqlplus"><a href="#3-6-登陆sqlplus" class="headerlink" title="3.6 登陆sqlplus"></a>3.6 登陆sqlplus</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sqlplus /nolog</span><br><span class="line">conn /as sysdba</span><br><span class="line">//修改system密码为123123</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="keyword">system</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="number">123123</span>;</span><br><span class="line">//修改sys密码为123123</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="keyword">sys</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="number">123123</span>;</span><br><span class="line">//修改密码规则策略为密码永不过期</span><br><span class="line"><span class="keyword">ALTER</span> PROFILE <span class="keyword">DEFAULT</span> <span class="keyword">LIMIT</span> PASSWORD_LIFE_TIME <span class="keyword">UNLIMITED</span>;</span><br><span class="line">//修改数据库最大连接数据；</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> processes=<span class="number">1000</span> <span class="keyword">scope</span>=<span class="keyword">spfile</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> scott <span class="keyword">account</span> <span class="keyword">unlock</span>;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> scott <span class="keyword">identified</span> <span class="keyword">by</span> abc;</span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure><h4 id="3-7-重启数据库"><a href="#3-7-重启数据库" class="headerlink" title="3.7 重启数据库"></a>3.7 重启数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;关闭数据库</span><br><span class="line">shutdown immediate; </span><br><span class="line">&#x2F;&#x2F;启动数据库</span><br><span class="line">startup;</span><br></pre></td></tr></table></figure><h1 id="四-Navicat连接数据库"><a href="#四-Navicat连接数据库" class="headerlink" title="四.Navicat连接数据库"></a>四.Navicat连接数据库</h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Connection Name</td><td>任意</td></tr><tr><td>Connection Type</td><td>Basic</td></tr><tr><td>Host:</td><td>如果是本机起的Docker，不填</td></tr><tr><td>Port:</td><td>1521</td></tr><tr><td>Service Name:</td><td>helowin</td></tr><tr><td></td><td>SID</td></tr><tr><td>Role</td><td>Default</td></tr><tr><td>Username</td><td>scott</td></tr><tr><td>password</td><td>123123</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（四十）</title>
      <link href="/2020/04/23/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%EF%BC%89/"/>
      <url>/2020/04/23/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>Web三大组件</li><li>Servlet控制器</li><li>Filter过滤器:拦截浏览器一切请求，做一些业务处理</li><li>Listener监听器<a id="more"></a></li></ul><h1 id="一-概述"><a href="#一-概述" class="headerlink" title="一.概述"></a>一.概述</h1><ul><li><p>Web中的过滤器:当用户访问服务器资源时，过滤器将请求拦截，完成一些通用操作</p></li><li><p>应用场景:登陆验证，统一编码处理，敏感字符过滤</p><h1 id="二-快速入门"><a href="#二-快速入门" class="headerlink" title="二.快速入门"></a>二.快速入门</h1><h4 id="2-1-XML配置"><a href="#2-1-XML配置" class="headerlink" title="2.1 XML配置"></a>2.1 XML配置</h4></li><li><p>编写Java类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//此方法拦截用户的请求</span></span><br><span class="line">        <span class="comment">//servletRequest请求对象</span></span><br><span class="line">        <span class="comment">//servletResponse响应对象</span></span><br><span class="line">        <span class="comment">//FilterChain过滤器链</span></span><br><span class="line">        System.out.println(<span class="string">"QuickFilter Filter"</span>);</span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置XML</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    快速入门--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>QuickFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.itheima.Demo01.QuickFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>QuickFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/Demo01.jsp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-注解配置"><a href="#2-2-注解配置" class="headerlink" title="2.2 注解配置"></a>2.2 注解配置</h4></li><li><p>注意:使用注解，需要把web.xml标签注释</p></li><li><p>编写java类，实现Filter接口</p><blockquote></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@WebFilter(filterName = "QuickFilter",urlPatterns = "/quick.jsp")</span></span><br><span class="line"><span class="comment">//@WebFilter(urlPatterns = "/quick.jsp")</span></span><br><span class="line"><span class="comment">//@WebFilter(value = "/quick.jsp")</span></span><br><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/quick.jsp"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//此方法拦截用户的请求</span></span><br><span class="line">        <span class="comment">//servletRequest请求对象</span></span><br><span class="line">        <span class="comment">//servletResponse响应对象</span></span><br><span class="line">        <span class="comment">//FilterChain过滤器链</span></span><br><span class="line">        System.out.println(<span class="string">"QuickFilter Filter"</span>);</span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-工作原理"><a href="#三-工作原理" class="headerlink" title="三.工作原理"></a>三.工作原理</h1><ul><li>发送请求</li><li>doFilter{<br>  对请求拦截<br>  是否放行<br>  对响应增强<br>}</li><li>quick.jsp调用Service方法</li><li>doFilter{<br>  对响应增强<br>}</li><li>返回响应</li></ul><h1 id="四-使用细节"><a href="#四-使用细节" class="headerlink" title="四.使用细节"></a>四.使用细节</h1><h4 id="4-1-生命周期"><a href="#4-1-生命周期" class="headerlink" title="4.1 生命周期"></a>4.1 生命周期</h4><table><thead><tr><th>方法</th><th>代码</th></tr></thead><tbody><tr><td>初始化方法</td><td>public void init(FilterConfig filterConfig)</td></tr><tr><td>拦截方法</td><td>public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</td></tr><tr><td>销毁方法</td><td>public void destroy()</td></tr></tbody></table><table><thead><tr><th>时机</th><th>说明</th></tr></thead><tbody><tr><td>创建</td><td>服务器启动项目加载，创建filter对象，执行init方法</td></tr><tr><td>运行(过滤拦截)</td><td>用户访问被拦截目标资源时，执行doFilter方法</td></tr><tr><td>销毁</td><td>服务器关闭或项目卸载时，销毁filter对象，执行destroy方法(只执行一次)</td></tr><tr><td><strong>注意</strong></td><td>过滤器一定是优先于servlet创建的</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置初始化参数一般不会在注解中使用</span></span><br><span class="line"><span class="comment">//@WebFilter(value = "/show.jsp", initParams = &#123;@WebInitParam(name = "encode", value = "utf-8")&#125;)</span></span><br><span class="line"><span class="comment">//@WebFilter("/show.jsp")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LifeCycleFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String encode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//filterConfig它是filter对配置对象</span></span><br><span class="line">    <span class="comment">//作用:获取filter对初始化参数</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeCycleFilter Run"</span>);</span><br><span class="line">        filterConfig.getInitParameter(<span class="string">"encode"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeCycleFilter Filter Request,Run Method"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Unicode"</span>+encode);</span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeCycleFilter Destroy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>LifeCycleFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.itheima.Demo02.LifeCycleFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encode<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>LifeCycleFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/show.jsp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-2-拦截路径"><a href="#4-2-拦截路径" class="headerlink" title="4.2 拦截路径"></a>4.2 拦截路径</h4><ul><li>在开发时，可以指定过滤器对拦截路径来定义拦截目标资源的范围<blockquote></blockquote><table><thead><tr><th>匹配方式</th><th>说明</th></tr></thead><tbody><tr><td>精准匹配</td><td>用户访问指定目标资源(/show.jsp)时，过滤器进行拦截</td></tr><tr><td>目录匹配</td><td>用户访问指定目录下(/user/*)所有资源时，过滤器进行拦截</td></tr><tr><td>后缀匹配</td><td>用户访问指定后缀名(*.jsp)的资源时，过滤器进行拦截</td></tr><tr><td>匹配所有</td><td>用户访问该网站所有资源(/*)时，过滤器进行拦截</td></tr></tbody></table><blockquote></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@WebFilter("/show.jsp") //精准匹配</span></span><br><span class="line"><span class="comment">//@WebFilter("/User/*")     //目录匹配</span></span><br><span class="line"><span class="comment">//@WebFilter("*.html")  //后缀匹配</span></span><br><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UrlPatternFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UrlPatternFilter拦截了请求..."</span>); <span class="comment">// 放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-拦截方式"><a href="#4-3-拦截方式" class="headerlink" title="4.3 拦截方式"></a>4.3 拦截方式</h4><ul><li>开发时，可以指定过滤器拦截方式来处理不同的应用场景(如浏览器发送的，或内部转发的)</li></ul><table><thead><tr><th>拦截方式</th><th>说明</th></tr></thead><tbody><tr><td>request(默认拦截方式)</td><td>浏览器直接发送请求时，过滤器拦截</td></tr><tr><td>forward</td><td>资源A转发到资源B时，过滤器拦截<br>资源A:ForwardServlet<br>资源B:show.jsp</td></tr><tr><td><strong>可以同时配置两者</strong></td><td></td></tr></tbody></table><ul><li>XML版本<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ModeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Filter"</span>);</span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>ModeFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.itheima.Demo04.ModeFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>ModeFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/show.jsp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>FORWARD<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>REQUEST<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>注解版本<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(value = <span class="string">"/show.jsp"</span>,dispatcherTypes = &#123;DispatcherType.REQUEST,DispatcherType.FORWARD&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ModeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Filter"</span>);</span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-4-过滤器链"><a href="#4-4-过滤器链" class="headerlink" title="4.4 过滤器链"></a>4.4 过滤器链</h4><ul><li><p>在一次请求中，若请求匹配到多个filter，通过请求将相当于把这些filter串起来，形成过滤器链</p></li><li><p>需求<br>用户访问目标资源 show.jsp时，经过 FilterA FilterB</p></li><li><p>过滤器链执行顺序 (先进后出) </p><blockquote><p>1.用户发送请求<br>2.FilterA拦截，放行<br>3.FilterB拦截，放行<br>4.执行目标资源 show.jsp<br>5.FilterB增强响应<br>6.FilterA增强响应<br>7.封装响应消息格式，返回到浏览器</p></blockquote></li><li><p>过滤器链中执行的先后问题</p><table><thead><tr><th>方式</th><th>顺序</th></tr></thead><tbody><tr><td>配置文件</td><td>谁先声明，谁先执行<br>&lt;filter-mapping&gt;</td></tr><tr><td>注解【不推荐】</td><td>根据过滤器类名进行排序，值小的先执行<br>FilterA FilterB 进行比较， FilterA先执行</td></tr></tbody></table></li></ul><h4 id="4-5-注解和XML使用"><a href="#4-5-注解和XML使用" class="headerlink" title="4.5 注解和XML使用"></a>4.5 注解和XML使用</h4><ul><li>如果是自己定义filter，无执行先后顺序，可以使用注解开发</li><li>如果是第三方jar提供的filter，要在web.xml进行配置</li></ul><h1 id="五-综合案例"><a href="#五-综合案例" class="headerlink" title="五.综合案例"></a>五.综合案例</h1><h4 id="5-1-用户评论留言"><a href="#5-1-用户评论留言" class="headerlink" title="5.1 用户评论留言"></a>5.1 用户评论留言</h4><ul><li>需求<br>用户访问某论坛网站，可以对文章比赛等内容进行留言</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;BBS&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;LPL View Board&lt;/h3&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/WordServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;textarea name="content" id="" cols="30" rows="10"&gt;&lt;/textarea&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"text"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/WordServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//接收请求参数Content</span></span><br><span class="line">        String content = req.getParameter(<span class="string">"content"</span>);</span><br><span class="line">        <span class="comment">//结果响应到浏览器</span></span><br><span class="line">        resp.getWriter().write(content);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-统一网站编码"><a href="#5-2-统一网站编码" class="headerlink" title="5.2 统一网站编码"></a>5.2 统一网站编码</h4><ul><li>需求<br>tomcat8.5版本中已经将get请求的中文乱码解决了,但是post请求还存在中文乱码 浏览器发出的任何请求，通过过滤器统一处理中文乱码<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 统一网站编码   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>EncodeFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.itheima.Case01.EncodeFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encode<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>EncodeFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String encode;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        encode = filterConfig.getInitParameter(<span class="string">"encode"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//类型向下转换</span></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="comment">//判断用户是否为post请求，才设置编码</span></span><br><span class="line">        <span class="keyword">if</span> (request.getMethod().equalsIgnoreCase(<span class="string">"post"</span>)) &#123;</span><br><span class="line">            request.setCharacterEncoding(encode);</span><br><span class="line">        &#125;</span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset="</span> + encode);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="5-3-非法字符拦截"><a href="#5-3-非法字符拦截" class="headerlink" title="5.3 非法字符拦截"></a>5.3 非法字符拦截</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/WordServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordsFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; wordList;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//加载配置文件,ResourceBundle专门读取src下的properties文件，不需要后缀名</span></span><br><span class="line">        ResourceBundle words = ResourceBundle.getBundle(<span class="string">"words"</span>);</span><br><span class="line">        <span class="comment">//读取keyword关键字内容</span></span><br><span class="line">        String keyword = words.getString(<span class="string">"keyword"</span>);</span><br><span class="line">        <span class="comment">//split切割，转为list集合</span></span><br><span class="line">        wordList = Arrays.asList(keyword.split(<span class="string">","</span>));</span><br><span class="line">        System.out.println(wordList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//向下转型</span></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="comment">//获取用户输入的值</span></span><br><span class="line">        String content = request.getParameter(<span class="string">"content"</span>);</span><br><span class="line">        <span class="comment">//拦截非法内容，提示</span></span><br><span class="line">        <span class="keyword">for</span> (String word : wordList) &#123;</span><br><span class="line">            <span class="keyword">if</span>(content.contains(word))&#123;</span><br><span class="line">                response.getWriter().write(<span class="string">"Input Words has Problem"</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        filterChain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-4-非法字符过滤"><a href="#5-4-非法字符过滤" class="headerlink" title="5.4 非法字符过滤"></a>5.4 非法字符过滤</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRequest</span> <span class="keyword">extends</span> <span class="title">HttpServletRequestWrapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//非法词库</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; wordList;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyRequest</span><span class="params">(HttpServletRequest request, List&lt;String&gt; wordList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(request);</span><br><span class="line">        <span class="keyword">this</span>.wordList = wordList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对谁增强就重写谁</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getParameter</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//调用原有的功能，获取用户输入的值</span></span><br><span class="line">        String parameter = <span class="keyword">super</span>.getParameter(name);</span><br><span class="line">        <span class="comment">//对非法词库过滤</span></span><br><span class="line">        <span class="keyword">for</span> (String word : wordList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (parameter.contains(word)) &#123;</span><br><span class="line">                <span class="comment">//注意:替换完后进行覆盖</span></span><br><span class="line">                parameter = parameter.replaceAll(word, <span class="string">"**"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parameter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/WordServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordsProFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; wordList;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//加载配置文件,ResourceBundle专门读取src下的properties文件，不需要后缀名</span></span><br><span class="line">        ResourceBundle words = ResourceBundle.getBundle(<span class="string">"words"</span>);</span><br><span class="line">        <span class="comment">//读取keyword关键字内容</span></span><br><span class="line">        String keyword = words.getString(<span class="string">"keyword"</span>);</span><br><span class="line">        <span class="comment">//split切割，转为list集合</span></span><br><span class="line">        wordList = Arrays.asList(keyword.split(<span class="string">","</span>));</span><br><span class="line">        System.out.println(wordList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//向下转型</span></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对request对象进行包装(过滤)</span></span><br><span class="line">        MyRequest requestPro = <span class="keyword">new</span> MyRequest(request, wordList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        filterChain.doFilter(requestPro, response);</span><br><span class="line">        System.out.println(wordList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="附录-Filter模版设置"><a href="#附录-Filter模版设置" class="headerlink" title="附录 Filter模版设置"></a>附录 Filter模版设置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#if ($&#123;PACKAGE_NAME&#125; &amp;&amp; $&#123;PACKAGE_NAME&#125; !&#x3D; &quot;&quot;)package $&#123;PACKAGE_NAME&#125;;#end #parse(&quot;File Header.java&quot;) @javax.servlet.annotation.WebFilter(&quot;&#x2F;$&#123;Entity_Name&#125;&quot;)</span><br><span class="line">public class $&#123;Class_Name&#125; implements javax.servlet.Filter &#123;</span><br><span class="line">public void init(javax.servlet.FilterConfig config) throws javax.servlet.ServletException &#123;</span><br><span class="line">&#125;</span><br><span class="line">public void doFilter(javax.servlet.ServletRequest servletRequest, javax.servlet.ServletResponse servletResponse, javax.servlet.FilterChain chain) throws javax.servlet.ServletException, java.io.IOException &#123;</span><br><span class="line">&#x2F;&#x2F; 放行</span><br><span class="line">chain.doFilter(servletRequest, servletResponse); &#125;</span><br><span class="line">    public void destroy() &#123;</span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>拦截用户请求</li></ul><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><ul><li>如：登录验证、统一编码处理、敏感字符过滤…</li></ul><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="1-定义一个类实现Filter接口"><a href="#1-定义一个类实现Filter接口" class="headerlink" title="1. 定义一个类实现Filter接口"></a>1. 定义一个类实现Filter接口</h3><ul><li>javax.servlet 包</li></ul><h3 id="2-重写filter方法"><a href="#2-重写filter方法" class="headerlink" title="2. 重写filter方法"></a>2. 重写filter方法</h3><ul><li>doFilter</li></ul><h3 id="3-配置"><a href="#3-配置" class="headerlink" title="3. 配置"></a>3. 配置</h3><ul><li>web.xml</li><li>注解</li></ul><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><h3 id="用户发送请求"><a href="#用户发送请求" class="headerlink" title="用户发送请求"></a>用户发送请求</h3><ul><li><p>执行Filter拦截请求</p><ul><li><p>放行（执行放行后的资源）</p><ul><li><p>执行Filter拦截响应</p><ul><li>响应给浏览器结果</li></ul></li></ul></li></ul></li></ul><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><ul><li><p>何时创建</p><ul><li>在服务器启动时，创建fitler对象，执行init方法，只执行一次</li></ul></li><li><p>何时销毁</p><ul><li>服务器正常关闭时，销毁filter对象，执行destroy方法，只执行一次</li></ul></li><li><p>创建优先级</p><ul><li><p>ServletContext</p><ul><li><p>Filter</p><ul><li>Servlet</li></ul></li></ul></li></ul></li></ul><h3 id="拦截路径"><a href="#拦截路径" class="headerlink" title="拦截路径"></a>拦截路径</h3><ul><li><p>精准匹配</p><ul><li>/show.jsp</li></ul></li><li><p>目录匹配</p><ul><li>/user/*</li></ul></li><li><p>后缀匹配</p><ul><li>*.html</li></ul></li><li><p>拦截所有</p><ul><li>/*</li></ul></li></ul><h3 id="拦截方式"><a href="#拦截方式" class="headerlink" title="拦截方式"></a>拦截方式</h3><ul><li><p>REQUEST</p><ul><li>客户端直接访问资源时，执行Filter</li></ul></li><li><p>FORWARD</p><ul><li>服务器内部资源跳转时，执行Filter</li></ul></li></ul><h3 id="过滤器链"><a href="#过滤器链" class="headerlink" title="过滤器链"></a>过滤器链</h3><ul><li><p>拦截顺序</p><ul><li>先进后出</li></ul></li><li><p>执行先后</p><ul><li><p>web.xml</p><ul><li><filter-mapping></filter-mapping>谁先声明，谁先执行</li></ul></li><li><p>注解</p><ul><li>按照自定义过滤器类名的字符串比较规则，值小的先执行</li></ul></li></ul></li></ul><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（三十九）</title>
      <link href="/2020/04/21/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E4%B9%9D%EF%BC%89/"/>
      <url>/2020/04/21/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E4%B9%9D%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>EL表达式</li><li>JSTL标签库</li><li>三层架构<a id="more"></a></li></ul><h1 id="一-EL"><a href="#一-EL" class="headerlink" title="一.EL"></a>一.EL</h1><h4 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h4><ul><li>表达式语言(Expression Language)</li><li>作用:<br>主要用于代替jsp中脚本的功能，简化对java代码对操作</li><li>语法:<br>${表达式}</li></ul><h4 id="1-2-使用"><a href="#1-2-使用" class="headerlink" title="1.2 使用"></a>1.2 使用</h4><h5 id="1-2-1-获取值"><a href="#1-2-1-获取值" class="headerlink" title="1.2.1 获取值"></a>1.2.1 获取值</h5><ul><li>EL表达式<strong>只能</strong>从域对象(4个域)中获取数据<blockquote></blockquote><table><thead><tr><th>标准写法</th><th></th></tr></thead><tbody><tr><td>${pageScope.键名}</td><td>从page域中获取指定键名对应的值</td></tr><tr><td>${requestScope.键名}</td><td>从request域中获取指定键名对应的值</td></tr><tr><td>${sessionScope.键名}</td><td>从session域中获取指定键名对应的值</td></tr><tr><td>${applicationScope.键名}</td><td>从servletContext域中获取指定键名对应的值</td></tr></tbody></table><blockquote></blockquote><table><thead><tr><th>简化写法</th><th></th></tr></thead><tbody><tr><td>${键名}</td><td>特点:默认从最小域开始找，找到后直接显示，不在继续寻找  <br><strong>注意</strong>:要求四个域键名唯一</td></tr></tbody></table><blockquote></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo01&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;EL 表达式基本语法&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="comment">/*模拟Servlet向域中存值*/</span></span><br><span class="line">    pageContext.setAttribute(<span class="string">"Username"</span>, <span class="string">"Jack"</span>);</span><br><span class="line">    request.setAttribute(<span class="string">"Age"</span>, <span class="string">"50"</span>);</span><br><span class="line">    session.setAttribute(<span class="string">"Gender"</span>, <span class="string">"Male"</span>);</span><br><span class="line">    application.setAttribute(<span class="string">"Address"</span>, <span class="string">"NY"</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h5&gt;标准语法&lt;/h5&gt;</span><br><span class="line">$&#123;pageScope.Username&#125;&lt;br&gt;&lt;%--不会提示空指针异常--%&gt;</span><br><span class="line">$&#123;requestScope.Age&#125;&lt;br&gt;</span><br><span class="line">$&#123;sessionScope.Gender&#125;&lt;br&gt;</span><br><span class="line">$&#123;applicationScope.Address&#125;&lt;br&gt;</span><br><span class="line">&lt;h5&gt;简化语法&lt;/h5&gt;</span><br><span class="line">$&#123;Username&#125;&lt;br&gt;</span><br><span class="line">$&#123;Age&#125;&lt;br&gt;</span><br><span class="line">$&#123;Gender&#125;&lt;br&gt;</span><br><span class="line">$&#123;Address&#125;&lt;br&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h6 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h6><blockquote></blockquote><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>获取字符串</td><td>${键名}</td></tr><tr><td>获取对象(User)</td><td>${键名.属性名}</td></tr><tr><td>获取List(Array)集合</td><td>${键名[索引]}</td></tr><tr><td>获取Map集合</td><td>${键名.key} <br> ${键名[“key”]}</td></tr><tr><td>——–</td><td></td></tr><tr><td><strong>注意</strong></td><td><strong>El不会出现null和数组角标越界问题</strong></td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo02&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;获取User对象&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    User user = <span class="keyword">new</span> User(<span class="string">"Jack"</span>, <span class="number">13</span>, <span class="string">"Male"</span>);</span><br><span class="line">    request.setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">%&gt;</span><br><span class="line">$&#123;user&#125;&lt;br&gt;&lt;%--执行该对象对toString方法--%&gt;</span><br><span class="line">$&#123;user.username&#125; ｜$&#123;user.age&#125; ｜$&#123;user.gender&#125;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;获取List集合&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    List&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    list.add(<span class="string">"A"</span>);</span><br><span class="line">    list.add(<span class="string">"B"</span>);</span><br><span class="line">    list.add(<span class="string">"C"</span>);</span><br><span class="line">    list.add(user);</span><br><span class="line">    request.setAttribute(<span class="string">"list"</span>,list);</span><br><span class="line"></span><br><span class="line">%&gt;&gt;</span><br><span class="line">$&#123;list&#125;&lt;br&gt;&lt;%--执行该对象对toString方法--%&gt;</span><br><span class="line">$&#123;list[<span class="number">0</span>]&#125; ｜ $&#123;list[<span class="number">1</span>]&#125; ｜ $&#123;list[<span class="number">2</span>]&#125; ｜ $&#123;list[<span class="number">3</span>].username&#125; ｜$&#123;list[<span class="number">3</span>].age&#125;&lt;br&gt;</span><br><span class="line">$&#123;list[<span class="number">3</span>].gender&#125;&lt;%--EL表达式不会出现集合(数组)角标越界异常--%&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;获取map集合&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">"key1"</span>,<span class="string">"A"</span>);</span><br><span class="line">    map.put(<span class="string">"key2"</span>,<span class="string">"B"</span>);</span><br><span class="line">    map.put(<span class="string">"key3"</span>,<span class="string">"C"</span>);</span><br><span class="line">    map.put(<span class="string">"key.4"</span>,user);</span><br><span class="line">    request.setAttribute(<span class="string">"map"</span>,map);</span><br><span class="line">%&gt;</span><br><span class="line">$&#123;map&#125;&lt;br&gt;&lt;%--执行该对象对toString方法--%&gt;</span><br><span class="line">$&#123;map.get(<span class="string">"key1"</span>)&#125; | $&#123;map.key2&#125; | $&#123;map.key3&#125;&lt;br&gt;</span><br><span class="line">$&#123;map[<span class="string">'key.4'</span>]&#125;&lt;br&gt;</span><br><span class="line">$&#123;map[<span class="string">'key.4'</span>].username&#125; | $&#123;map[<span class="string">'key.4'</span>].age&#125; | $&#123;map[<span class="string">'key.4'</span>].gender&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="1-2-2-执行运算"><a href="#1-2-2-执行运算" class="headerlink" title="1.2.2 执行运算"></a>1.2.2 执行运算</h5><blockquote></blockquote><table><thead><tr><th>运算符</th><th>语法</th></tr></thead><tbody><tr><td>算数运算符</td><td>+ - * /(div) %(mod)</td></tr><tr><td>比较运算符</td><td>&gt; &lt; &gt;= &lt;= ==(eq) !=(ne)</td></tr><tr><td>逻辑运算符</td><td>&amp;&amp;(and)</td></tr><tr><td>三元运算符</td><td>${条件表达式?为真:为假}</td></tr><tr><td>——–</td><td>————————–</td></tr><tr><td>空运算符</td><td>${not empty 对象} <br>功能: <br>可以判断字符串和对象是否为空<br>可以判断一个集合的长度是否为0</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo03&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">3</span>;</span><br><span class="line">    request.setAttribute(<span class="string">"a"</span>, a);</span><br><span class="line">    request.setAttribute(<span class="string">"b"</span>, b);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h5&gt;算数运算符&lt;/h5&gt;</span><br><span class="line">$&#123;a / b&#125; | $&#123;a div b&#125; &lt;br&gt;</span><br><span class="line">$&#123;a % b&#125; | $&#123;a mod b&#125; &lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;比较运算符&lt;/h5&gt;</span><br><span class="line">$&#123;a == b&#125; | $&#123;a eq b&#125;&lt;br&gt;</span><br><span class="line">$&#123;a != b&#125; | $&#123;a ne b&#125;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;三元运算符&lt;/h5&gt;</span><br><span class="line">$&#123;a==b?<span class="string">"Y"</span>:<span class="string">"N"</span>&#125;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;非空判断&lt;/h5&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    request.setAttribute(<span class="string">"user"</span>, user);</span><br><span class="line"></span><br><span class="line">    List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    list.add(<span class="string">"aa"</span>);</span><br><span class="line">    request.setAttribute(<span class="string">"list"</span>, list);</span><br><span class="line">%&gt;</span><br><span class="line">$&#123;not empty user&#125;&lt;%--<span class="keyword">if</span>(user != <span class="keyword">null</span>)&#123;&#125;--%&gt;</span><br><span class="line">$&#123;not empty list&#125;&lt;%--<span class="keyword">if</span>(list != <span class="keyword">null</span> &amp;&amp; list.size()&gt;<span class="number">0</span>)--%&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;空值判断&lt;/h5&gt;</span><br><span class="line">$&#123;empty user&#125;&lt;%--<span class="keyword">if</span>(user == <span class="keyword">null</span>)&#123;&#125;--%&gt;</span><br><span class="line">$&#123;empty list&#125;&lt;%--<span class="keyword">if</span>(list == <span class="keyword">null</span> &amp;&amp; list.size()==<span class="number">0</span>)--%&gt;&lt;br&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="1-2-3-隐式对象"><a href="#1-2-3-隐式对象" class="headerlink" title="1.2.3 隐式对象"></a>1.2.3 隐式对象</h5><ul><li>EL表达式中有11个隐藏对象</li><li>掌握<br>pageContext<br>cookie</li></ul><table><thead><tr><th>对象</th><th>作用</th></tr></thead><tbody><tr><td>pageContext</td><td>就是jsp九大内置对象之一，可以通过它获得其他八个内置对象</td></tr><tr><td>cookie</td><td>可以获取浏览器指定cookie名称的值</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo04&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;EL隐式对象&lt;/h3&gt;</span><br><span class="line">$&#123;pageContext.request.contextPath&#125;&lt;%--动态获取:项目名称(虚拟路径)--%&gt;&lt;br&gt;</span><br><span class="line">$&#123;cookie.JSESSIONID.value&#125;&lt;%--获取指定cookie名称的值--%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="1-2-4-补充"><a href="#1-2-4-补充" class="headerlink" title="1.2.4 补充"></a>1.2.4 补充</h5><ul><li>jsp默认支持el表达式<br>servlet2.3规范中，默认不支持el表达式<blockquote></blockquote><table><thead><tr><th>忽略el表达式</th><th>方法</th></tr></thead><tbody><tr><td>忽略当前jsp页面中所有的el表达式</td><td>isELIgnored=”true” 属性</td></tr><tr><td>忽略单个el表达式</td><td>${表达式}</td></tr></tbody></table></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> isELIgnored=<span class="string">"false"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo04&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;EL隐式对象&lt;/h3&gt;</span><br><span class="line">$&#123;pageContext.request.contextPath&#125;&lt;%--动态获取:项目名称(虚拟路径)--%&gt;&lt;br&gt;</span><br><span class="line">$&#123;cookie.JSESSIONID.value&#125;&lt;br&gt;&lt;%--获取指定cookie名称的值--%&gt;</span><br><span class="line">\$&#123;cookie.JSESSIONID.value&#125;&lt;%--获取指定cookie名称的值--%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="1-3-JavaBean"><a href="#1-3-JavaBean" class="headerlink" title="1.3 JavaBean"></a>1.3 JavaBean</h4><ul><li>实际上是一个普通Java类<br>使用规范</li><li>所有字段(成员变量)为private</li><li>提供无参构造方法</li><li>提供getter,setter和is方法</li><li>实现Serializable接口</li></ul><p>例如:如下User类有4个字段(成员变量),有全参和无参构造方法，有一个属性(username)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String Username;</span><br><span class="line">    <span class="keyword">private</span> Integer Age;</span><br><span class="line">    <span class="keyword">private</span> String  Gender;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> success;<span class="comment">//是否操作成功</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSuccess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> success;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSuccess</span><span class="params">(<span class="keyword">boolean</span> success)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.success = success;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        Username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line">        Age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGender</span><span class="params">(String gender)</span> </span>&#123;</span><br><span class="line">        Gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二-JSTL"><a href="#二-JSTL" class="headerlink" title="二.JSTL"></a>二.JSTL</h1><h4 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h4><ul><li>Jsp 标准标签库(Jsp Standard Tag Library)，是由Apache组织提供的开源的jsp标签库 </li><li>作用:替换和简化jsp页面中java代码的编写 </li><li>JSTL标准标签库有5个子库，但随着发展，目前常使用的是它的核心库(Core)</li></ul><blockquote></blockquote><table><thead><tr><th>标签库</th><th>标签库的URI</th><th>前缀</th></tr></thead><tbody><tr><td><strong>Core</strong></td><td><a href="http://java.sun.com/jsp/jstl/core">http://java.sun.com/jsp/jstl/core</a></td><td>c</td></tr><tr><td>国际化(几乎不用)</td><td><a href="http://java.sun.com/jsp/jstl/fmt">http://java.sun.com/jsp/jstl/fmt</a></td><td>fmt</td></tr><tr><td>SQL(过时)</td><td><a href="http://java.sun.com/jsp/jstl/sql">http://java.sun.com/jsp/jstl/sql</a></td><td>sql</td></tr><tr><td>XML(过时)</td><td><a href="http://java.sun.com/jsp/jstl/xml">http://java.sun.com/jsp/jstl/xml</a></td><td>x</td></tr><tr><td>Functions(几乎不用)</td><td><a href="http://java.sun.com/jsp/jstl/functions">http://java.sun.com/jsp/jstl/functions</a></td><td>fn</td></tr></tbody></table><h4 id="2-2-Core标签使用"><a href="#2-2-Core标签使用" class="headerlink" title="2.2 Core标签使用"></a>2.2 Core标签使用</h4><h5 id="2-2-1-使用步骤"><a href="#2-2-1-使用步骤" class="headerlink" title="2.2.1 使用步骤"></a>2.2.1 使用步骤</h5><ul><li>当前Web项目引入第三方jar包</li><li>当前JSP页面使用taglib指令引入core核心标签 </li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo01&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="2-2-2-常用标签"><a href="#2-2-2-常用标签" class="headerlink" title="2.2.2 常用标签"></a>2.2.2 常用标签</h5><blockquote></blockquote><table><thead><tr><th>标签</th><th></th><th>语法</th></tr></thead><tbody><tr><td>c:if</td><td>相当于Java中的if(){}</td><td>&lt;c:if test=”boolean值&gt;</c:if> <br>true:显示标签体内容 <br>false:隐藏标签体内容<br>注意:此标签没有else功能，需要使用就取反</td></tr><tr><td>c:forEach</td><td>1)普通for循环for(int i=1;i&lt;=5;i++){i}<br></td><td>&lt;c:forEach&gt; <br>begin=”1”起始值(包含)<br> end=”5”结束值(包含) <br>step=”1”步长1   <br> var=”i”  当前输出临时变量</td></tr><tr><td></td><td>2) 增强for循环  for(User user:list){user}</td><td>&lt;c:forEach items=”${list}” var=”user” varStatus=”vs”&gt;<br>${user}<br>&lt;/c:forEach&gt;<br>items=”list” 集合<br>var=”user” 当前输出的临时变量<br>varStatus=”vs” 变量状态<br> index 当前索引 从0开始<br>count 计数器 从1开始</td></tr><tr><td>c:choose</td><td>相当于java中的switch语句</td><td>&lt;c:choose&gt;等价于switch<br>&lt;c:when&gt;等价于case+break<br>&lt;c:otherwise&gt;等价于default</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo01&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUsername(<span class="string">"Jack"</span>);</span><br><span class="line">    request.setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;empty user&#125;"</span>&gt;</span><br><span class="line">    Welcome ,Please Login</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;not empty user&#125;"</span>&gt;</span><br><span class="line">    Welcome, $&#123;user.username&#125;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo02&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;普通for循环&lt;/h3&gt;</span><br><span class="line">&lt;c:forEach begin=<span class="string">"1"</span> end=<span class="string">"5"</span> step=<span class="string">"1"</span> <span class="keyword">var</span>=<span class="string">"i"</span>&gt;    &lt;%--<span class="keyword">for</span>循环将临时变量存储到pageContext域空间--%&gt;</span><br><span class="line">    $&#123;i&#125;&lt;br&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;增强for循环&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    list.add(<span class="keyword">new</span> User(<span class="string">"A"</span>,<span class="number">1</span>,<span class="string">"F"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> User(<span class="string">"B"</span>,<span class="number">1</span>,<span class="string">"F"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> User(<span class="string">"C"</span>,<span class="number">1</span>,<span class="string">"M"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> User(<span class="string">"D"</span>,<span class="number">1</span>,<span class="string">"M"</span>));</span><br><span class="line">    request.setAttribute(<span class="string">"list"</span>,list);</span><br><span class="line">%&gt;&gt;</span><br><span class="line">$&#123;requestScope.list&#125;</span><br><span class="line"></span><br><span class="line">&lt;c:forEach items=<span class="string">"$&#123;list&#125;"</span> <span class="keyword">var</span>=<span class="string">"user"</span> varStatus=<span class="string">"vs"</span>&gt;</span><br><span class="line">    索引:$&#123;vs.index&#125;&lt;br&gt;</span><br><span class="line">    计数器:$&#123;vs.count&#125;&lt;br&gt;</span><br><span class="line">    $&#123;user&#125;&lt;br&gt;</span><br><span class="line">    $&#123;user.username&#125;&lt;br&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo03&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;Choose标签&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    Integer money=<span class="number">30000</span>;</span><br><span class="line">    request.setAttribute(<span class="string">"money"</span>,money);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;c:choose&gt;</span><br><span class="line">    &lt;c:when test="$&#123;money==7000&#125;"&gt;AAA&lt;/c:when&gt;</span><br><span class="line">    &lt;c:when test="$&#123;money==8000&#125;"&gt;BBB&lt;/c:when&gt;</span><br><span class="line">    &lt;c:when test="$&#123;money==9000&#125;"&gt;CCC&lt;/c:when&gt;</span><br><span class="line">    &lt;c:when test="$&#123;money==30000&#125;"&gt;DDD&lt;/c:when&gt;</span><br><span class="line">    &lt;c:otherwise&gt;</span><br><span class="line">        ZZZZZZ</span><br><span class="line">    &lt;/c:otherwise&gt;</span><br><span class="line">&lt;/c:choose&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="三-三层架构"><a href="#三-三层架构" class="headerlink" title="三.三层架构"></a>三.三层架构</h1><h4 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h4><ul><li>通常意义上的三层架构就是将整个业务应用划分为:表示层、业务逻辑层、数据访问层</li><li>区分层次的目的为了<strong>高聚合低耦合</strong>思想<blockquote><p>表示层:称为web层，与浏览器进行数据交互(控制器合视图)<br>业务逻辑层:又称为service层，处理业务数据(if判断，for循环)<br>数据访问(持久)层:称为Dao层，与数据库进行交互(每一条记录与JavaBean实体产生对应关系)</p></blockquote></li></ul><table><thead><tr><th>包目录结构</th><th></th></tr></thead><tbody><tr><td>com.xxx</td><td>基本包(公司域名倒写)</td></tr><tr><td>com.xxx.dao</td><td>持久层</td></tr><tr><td>com.xxx.service</td><td>业务层</td></tr><tr><td>com.xxx.web</td><td>表示层</td></tr><tr><td>com.xxx.domain</td><td>实体(JavaBean)</td></tr><tr><td>com.xxx.util</td><td>工具</td></tr></tbody></table><h4 id="3-2-案例-用户信息列表显示"><a href="#3-2-案例-用户信息列表显示" class="headerlink" title="3.2 案例:用户信息列表显示"></a>3.2 案例:用户信息列表显示</h4><ul><li>需求:MVC模式开发代码，完成用户显示列表功能。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"1"</span>,<span class="string">"A"</span>,<span class="string">"Male"</span>,<span class="number">18</span>,<span class="string">"NY"</span>,<span class="string">"123"</span>,<span class="string">"sd@qq.com"</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"2"</span>,<span class="string">"B"</span>,<span class="string">"Female"</span>,<span class="number">18</span>,<span class="string">"NY"</span>,<span class="string">"234"</span>,<span class="string">"ad@qq.com"</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"3"</span>,<span class="string">"C"</span>,<span class="string">"Male"</span>,<span class="number">18</span>,<span class="string">"NY"</span>,<span class="string">"345"</span>,<span class="string">"sv@qq.com"</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String SID;</span><br><span class="line">    <span class="keyword">private</span> String Name;</span><br><span class="line">    <span class="keyword">private</span> String Gender;</span><br><span class="line">    <span class="keyword">private</span> Integer Age;</span><br><span class="line">    <span class="keyword">private</span> String Address;</span><br><span class="line">    <span class="keyword">private</span> String QQ;</span><br><span class="line">    <span class="keyword">private</span> String EMAIL;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//此处省略无参、全参、toString，set/get</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//调用DAO，查询</span></span><br><span class="line">        UserDao userDao = <span class="keyword">new</span> UserDao();</span><br><span class="line">        List&lt;User&gt; list = userDao.findAll();</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/FindAllServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindAllServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//调用Service查询</span></span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserService();</span><br><span class="line">        List&lt;User&gt; list=userService.findAll();</span><br><span class="line">        <span class="comment">//将list存储到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"list"</span>,list);</span><br><span class="line">        <span class="comment">//转发list.jsp</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;List&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;table border=<span class="string">"1"</span> cellpadding=<span class="string">"0"</span> cellspacing=<span class="string">"0"</span> width=<span class="string">"500px"</span> align=<span class="string">"center"</span>&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;地址&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;QQ&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;邮箱&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;c:forEach items=<span class="string">"$&#123;list&#125;"</span> <span class="keyword">var</span>=<span class="string">"user"</span>&gt;</span><br><span class="line">        &lt;tr align=<span class="string">"center"</span>&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.SID&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.name&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.gender&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.age&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.address&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.QQ&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.EMAIL&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h2 id="el"><a href="#el" class="headerlink" title="el"></a>el</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li>专门从域中获取数据</li></ul><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><ul><li><p>从指定域中获取</p><ul><li>了解</li></ul></li><li><p>从最小域开始查找，若匹配上则停止</p><ul><li>${键名}</li></ul></li></ul><h3 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h3><ul><li><p>字符串</p></li><li><p>实体对象</p><ul><li><p>${键名.属性名}</p><ul><li><p>属性：setter/getter方法截取后的产物</p><ul><li>一般情况下域成员变量命名一致</li></ul></li></ul></li></ul></li><li><p>list集合</p><ul><li>${键名[索引]}</li></ul></li><li><p>map集合</p><ul><li>${键名.key}</li><li>${键名[“key”]}</li></ul></li></ul><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><ul><li><p>非空判断</p><ul><li><p>${not empty 键名}</p><ul><li>字符串、对象、集合（非空和长度）</li></ul></li></ul></li></ul><h3 id="隐式对象"><a href="#隐式对象" class="headerlink" title="隐式对象"></a>隐式对象</h3><ul><li><p>有11个隐式对象</p><ul><li><p>${pageContext.request.contextPath}</p><ul><li>动态获取项目名（虚拟路径）</li></ul></li></ul></li></ul><h2 id="jstl"><a href="#jstl" class="headerlink" title="jstl"></a>jstl</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><ul><li>apache提供的jsp标准标签库</li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul><li><p>if标签</p><ul><li><p>&lt;c:if test=”boolean值”&gt;</c:if></p><ul><li>为真，显示标签体的内容</li><li>为假，不显示内容</li><li>通常与el表达式结合使用</li><li>没有else功能，需要通过条件取反模拟</li></ul></li></ul></li><li><p>forEach标签</p><ul><li><p>1）普通for</p><ul><li>begin 起始值</li><li>end  结束值</li><li>step  步长</li><li>var  临时变量</li></ul></li><li><p>2）增强for</p><ul><li><p>items  被遍历的集合</p></li><li><p>var  临时变量</p></li><li><p>varStatus  遍历状态</p><ul><li>index 索引</li><li>count  计数器</li></ul></li></ul></li></ul></li><li><p>choose标签</p><ul><li>相当于switch语句</li></ul></li></ul><h2 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h2><h3 id="在mvc设计模式基础之上，进行了细化"><a href="#在mvc设计模式基础之上，进行了细化" class="headerlink" title="在mvc设计模式基础之上，进行了细化"></a>在mvc设计模式基础之上，进行了细化</h3><h3 id="在程序的设计过程中，分层三块"><a href="#在程序的设计过程中，分层三块" class="headerlink" title="在程序的设计过程中，分层三块"></a>在程序的设计过程中，分层三块</h3><ul><li><p>表示层</p><ul><li><p>web层</p><ul><li>与浏览器交互</li></ul></li></ul></li><li><p>业务层</p><ul><li><p>service层</p><ul><li>处理业务逻辑</li></ul></li></ul></li><li><p>持久层</p><ul><li><p>dao层</p><ul><li>与数据库交互</li></ul></li></ul></li></ul><h2 id="大作业：用户列表查询"><a href="#大作业：用户列表查询" class="headerlink" title="大作业：用户列表查询"></a>大作业：用户列表查询</h2><h3 id="使用三层架构和MVC模式开发代码，完成用户显示列表功能"><a href="#使用三层架构和MVC模式开发代码，完成用户显示列表功能" class="headerlink" title="使用三层架构和MVC模式开发代码，完成用户显示列表功能"></a>使用三层架构和MVC模式开发代码，完成用户显示列表功能</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（三十八）</title>
      <link href="/2020/04/21/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E5%85%AB%EF%BC%89/"/>
      <url>/2020/04/21/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E5%85%AB%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>JSP</li><li>MVC<a id="more"></a></li></ul><h1 id="一-JSP"><a href="#一-JSP" class="headerlink" title="一.JSP"></a>一.JSP</h1><h4 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h4><ul><li>简单来说:在html标签中嵌套java代码</li><li>作用:简化书写，展示动态页面</li></ul><h4 id="1-2-快速入门"><a href="#1-2-快速入门" class="headerlink" title="1.2 快速入门"></a>1.2 快速入门</h4><ul><li>在jsp页面显示当前时间</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    Date date = <span class="keyword">new</span> Date();</span><br><span class="line">    SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-mm-dd HH:mm:ss"</span>);</span><br><span class="line">    String currentTime = sdf.format(date);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h3&gt;&lt;%out.write(currentTime);%&gt;&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h4 id="1-3-工作原理"><a href="#1-3-工作原理" class="headerlink" title="1.3 工作原理"></a>1.3 工作原理</h4><ul><li>JSP本质就是一个Servlet<table><thead><tr><th>index.jsp</th></tr></thead><tbody><tr><td>转换⬇</td></tr><tr><td>index_jsp.java</td></tr><tr><td>servlet接口</td></tr><tr><td>编译⬇</td></tr><tr><td>index_jsp.class</td></tr><tr><td>执行 service方法</td></tr></tbody></table></li></ul><h4 id="1-4-脚本和注释"><a href="#1-4-脚本和注释" class="headerlink" title="1.4 脚本和注释"></a>1.4 脚本和注释</h4><h5 id="1-4-1-脚本"><a href="#1-4-1-脚本" class="headerlink" title="1.4.1 脚本"></a>1.4.1 脚本</h5><ul><li>JSP通过脚本方式来定义Java代码<blockquote></blockquote><table><thead><tr><th>格式</th><th>说明</th></tr></thead><tbody><tr><td>&lt;% 代码%&gt;</td><td>脚本片段，生成在service方法中，每次请求的时候都会执行</td></tr><tr><td>&lt;%! 代码%&gt;</td><td>声明片段，在java代码中声明成员，放在jsp生成jsva文件中的成员位置</td></tr><tr><td>&lt;%=代码%&gt;</td><td>输出脚本片段，相当于out.print(“Code”);方法，输出到jsp页面</td></tr></tbody></table><blockquote></blockquote><table><thead><tr><th>格式</th><th>说明</th></tr></thead><tbody><tr><td>out.print();</td><td>方法支持一切类型输出</td></tr><tr><td>out.write();</td><td>仅支持字符类型输出，如果传递的是整型，将根据ASCII码表转换输出</td></tr></tbody></table></li></ul><h5 id="1-4-2-注释"><a href="#1-4-2-注释" class="headerlink" title="1.4.2 注释"></a>1.4.2 注释</h5><blockquote></blockquote><table><thead><tr><th>格式</th><th>说明</th></tr></thead><tbody><tr><td>&lt;!– 注释静态资源 –&gt;</td><td>html注释</td></tr><tr><td>&lt;%– 注释所有 –%&gt;</td><td>JSP注释</td></tr><tr><td>// 单行注释 <br> /* 多行注释 <em>/ <br> /*</em>文档注释 */</td><td>Java注释(JSP脚本内使用)</td></tr></tbody></table><h4 id="1-5-指令"><a href="#1-5-指令" class="headerlink" title="1.5 指令"></a>1.5 指令</h4><ul><li><p>作用<br>用于配置JSP页面，导入资源文件</p></li><li><p>格式<br>&lt;%@ 指令名称 属性名1=”属性值1” 属性名2=”属性值2” %&gt;</p></li><li><p>三大指令</p><blockquote></blockquote><table><thead><tr><th>指令</th><th>作用</th></tr></thead><tbody><tr><td>page</td><td>配置JSP页面</td></tr><tr><td>include</td><td>页面包含(静态)</td></tr><tr><td>taglib</td><td>导入资源文件</td></tr></tbody></table></li></ul><h5 id="1-5-1-page指令"><a href="#1-5-1-page指令" class="headerlink" title="1.5.1 page指令"></a>1.5.1 page指令</h5><blockquote></blockquote><table><thead><tr><th>指令</th><th>作用</th></tr></thead><tbody><tr><td>contentType</td><td>相当于response.setContentType();设置响应体的MIME类型和编码方式</td></tr><tr><td>language</td><td>指定语言，目前仅支持Java</td></tr><tr><td>import</td><td>导入jar包</td></tr><tr><td>errorpage</td><td>当页面报错后，自动跳转到指定错误提示页面</td></tr><tr><td>isErrorpage</td><td>默认false关闭，设置true</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.Date"</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.text.SimpleDateFormat"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span>  errorPage=<span class="string">"500.jsp"</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">new</span> Date();</span><br><span class="line">    <span class="keyword">new</span> SimpleDateFormat();</span><br><span class="line">    Integer age=<span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> isErrorPage=<span class="string">"true"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;Server Busy&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="comment">//打印错误提示</span></span><br><span class="line">    out.print(exception.getMessage());</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h5 id="1-5-2-include指令-静态包含"><a href="#1-5-2-include指令-静态包含" class="headerlink" title="1.5.2 include指令(静态包含)"></a>1.5.2 include指令(静态包含)</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- top.jsp --&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Top&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div style="border: skyblue dashed 5px;height: 150px"&gt;Top&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo03&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">"top.jsp"</span>%&gt;</span><br><span class="line">&lt;div style=<span class="string">"border: 5px solid red;height:200px "</span>&gt;</span><br><span class="line">Demo03</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="1-5-3-taglib指令"><a href="#1-5-3-taglib指令" class="headerlink" title="1.5.3 taglib指令"></a>1.5.3 taglib指令</h5><ul><li>导入jar包</li><li>通过taglib指令引入</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo04&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;Taglib 指令&lt;/h3&gt;</span><br><span class="line">&lt;c:if test=""&gt;&lt;/c:if&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="1-6-内置对象"><a href="#1-6-内置对象" class="headerlink" title="1.6 内置对象"></a>1.6 内置对象</h4><ul><li>作用<br>JSP 页面中不需要get获取也不需要手动创建，就可以直接使用的对象</li></ul><table><thead><tr><th>变量名</th><th>真实类型</th><th>作用</th></tr></thead><tbody><tr><td>pageContexxt</td><td>PageContext</td><td>当前页面中共享数据(域对象)</td></tr><tr><td>request</td><td>HttpServletRequest</td><td>一切请求中共享数据</td></tr><tr><td>session</td><td>HttpSession</td><td>一次会话中共享数据(域对象)</td></tr><tr><td>application</td><td>ServletContext</td><td>整个web应用共享数据(域对象)</td></tr><tr><td>————-</td><td>——————-</td><td>——————-</td></tr><tr><td>response</td><td>HttpServletResponse</td><td>响应对象</td></tr><tr><td>page(this)</td><td>Object</td><td>当前页面Servlet对象</td></tr><tr><td>out</td><td>JSPWriter</td><td>输出对象</td></tr><tr><td>config</td><td>ServletConfig</td><td>Servlet配置对象</td></tr><tr><td>exception</td><td>Throwable</td><td>异常对象(默认关闭)</td></tr></tbody></table><ul><li>常用:<blockquote></blockquote><table><thead><tr><th>pageContext</th><th>1)当前页面的域对象<br>2)获取其他八个内置对象</th></tr></thead><tbody><tr><td><strong>request</strong></td><td>1)接收用户请求(参数)<br>2)一次请求中域对象</td></tr><tr><td><strong>response</strong></td><td>1)设置响应:<br>&emsp;&emsp;字节流<br>&emsp;&emsp;字符流</td></tr><tr><td><strong>out</strong></td><td>1)专门在jsp中处理字符流<br>&emsp;&emsp;print()//可以输出一切类型<br>&emsp;&emsp;wirte(); //只能输出字符类型</td></tr></tbody></table></li></ul><h4 id="1-7-JSP动作标签"><a href="#1-7-JSP动作标签" class="headerlink" title="1.7 JSP动作标签"></a>1.7 JSP动作标签</h4><ul><li>作用<br>简化JSP页面编码</li><li>常用<table><thead><tr><th>指令</th><th>底层</th><th>作用</th></tr></thead><tbody><tr><td>&lt;Jsp:include&gt;</td><td>request.getRequestDispatcher().include(req,resp)</td><td>页面包含(动态)</td></tr><tr><td>&lt;Jsp:forward&gt;</td><td>request.getRequestDispatcher().forward(req,resp)</td><td>请求转发(页面跳转)</td></tr><tr><td>&lt;Jsp:param&gt;</td><td>include forward的子标签<br>使用request.getParameter()获取参数</td><td>参数传递</td></tr></tbody></table></li></ul><h5 id="1-7-1-动态包含"><a href="#1-7-1-动态包含" class="headerlink" title="1.7.1 动态包含"></a>1.7.1 动态包含</h5><ul><li><p>静态包含</p><table>  <tr>      <td>demo03.jsp</td>      <td rowspan="2">合并转换为一个java文件➡</td>      <td rowspan="2">demo3.java</td>      <td rowspan="2">编译➡</td>      <td rowspan="2">demo3.class</td>      <td rowspan="2">执行➡</td>      <td rowspan="2">response封装响应输出</td>  </tr>      <tr>      <td>top.jsp</td>  </tr></table></li><li><p>动态包含</p><blockquote></blockquote><table>  <tr>      <td>demo06.jsp</td>      <td>转换➡</td>      <td>demo06.java</td>      <td>编译➡</td>      <td>demo06.class</td>      <td rowspan="2">合并执行➡</td>      <td rowspan="2">response封装响应输出</td>  </tr>      <tr>      <td>top.jsp</td>      <td>转换➡</td>      <td>top.java</td>      <td>编译➡</td>      <td>top.class</td>  </tr></table></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo06&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;jsp:include page="top.jsp"&gt;&lt;/jsp:include&gt;</span><br><span class="line">&lt;div style="border: gray 1px solid;height: 400px"&gt;JSP的动态包含:主体&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>在企业开发时，推荐使用静态包含提示访问性能；注意:不能出现重名的变量</p><h5 id="1-7-2-请求转发"><a href="#1-7-2-请求转发" class="headerlink" title="1.7.2 请求转发"></a>1.7.2 请求转发</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;A&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    System.out.println(<span class="string">"A Run"</span>);</span><br><span class="line">    request.setAttribute(<span class="string">"username"</span>,<span class="string">"request Set"</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;jsp:forward page=<span class="string">"b.jsp"</span>&gt;</span><br><span class="line">    &lt;jsp:param name="name" value="jack"&gt;&lt;/jsp:param&gt;</span><br><span class="line">    &lt;jsp:param name="age" value="18"&gt;&lt;/jsp:param&gt;</span><br><span class="line">&lt;/jsp:forward&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;B&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    System.out.println(<span class="string">"B Run"</span>);</span><br><span class="line">    <span class="comment">//request域传递</span></span><br><span class="line">    System.out.println(request.getAttribute(<span class="string">"username"</span>));</span><br><span class="line">    <span class="comment">//param标签传递</span></span><br><span class="line">    System.out.println(request.getParameter(<span class="string">"name"</span>));</span><br><span class="line">    System.out.println(request.getParameter(<span class="string">"age"</span>));</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="二-MVC模式"><a href="#二-MVC模式" class="headerlink" title="二.MVC模式"></a>二.MVC模式</h1><h4 id="2-1-JSP发展介绍"><a href="#2-1-JSP发展介绍" class="headerlink" title="2.1 JSP发展介绍"></a>2.1 JSP发展介绍</h4><ul><li>早期只有servlet，只能使用response输出html标签，非常麻烦。 </li><li>后来有了JSP，简化了servlet开发;如果过度使用JSP，在JSP页面中写了大量的java代码和html标签，造成难于 维护，难于分工协作的场景。 </li><li>再后来为了弥补过度使用jsp的问题，我们使用servlet+jsp这套组合拳，利于分工协作。</li></ul><p>简单来说:就是一套总结出来的设计经验，适合在各种软件开发领域</p><ul><li>目的:高内聚，低耦合</li></ul><h4 id="2-2-MVC介绍"><a href="#2-2-MVC介绍" class="headerlink" title="2.2 MVC介绍"></a>2.2 MVC介绍</h4><ul><li>MVC设计模式: Model-View-Controller简写。 </li><li>MVC是软件工程中的一种软件架构模式，它是一种分离业务逻辑与显示界面的设计方法。</li></ul><table><thead><tr><th align="center">指令</th><th align="center"></th></tr></thead><tbody><tr><td align="center">M</td><td align="center">model(模型)<br> ⬇<br>  JavaBean(1.处理业务逻辑，2.封装实体)</td></tr><tr><td align="center">V</td><td align="center">view(视图  <br> ⬇<br> JSP(展示数据)</td></tr><tr><td align="center">C</td><td align="center">controller(控制器) <br> ⬇<br>   Servlet(1.接收请求，2.调用模型，3.转发视图)</td></tr><tr><td align="center">优点</td><td align="center">降低耦合性，方便维护和拓展，利于分工协作</td></tr><tr><td align="center">缺点</td><td align="center">使得项目架构变得复杂，对开发人员要求高</td></tr></tbody></table><blockquote></blockquote><table style="text-align: center">    <tr>        <td rowspan="8">客户端<hr>         <div style="border: red solid 1px;height: 50px;border-radius:5px;padding:5px">静态资源<br>动态资源</div></td>        <td rowspan="2">请求➡</td>        <td>服务器</td>    </tr>        <tr>    <td> Controller<hr>      Servlet<br>1.接收请求<br>2.调用模型<br>3.转发视图    </td>        <td>➡<br>⬅</td>        <td>Model<hr>JavaBean<br>        处理业务逻辑<br>        封装实体        </td>        <td>➡<br>⬅</td>        <td>SQL</td>    </tr>    <tr >        <td></td>        <td rolspan="2">⬇</td>    </tr>    <tr>        <td rowspan="2">⬅返回</td>        <td rowspan="2">View<hr>jsp、html<br>展示动静内容</td>    </tr></table><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h2 id="jsp"><a href="#jsp" class="headerlink" title="jsp"></a>jsp</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li><p>运行在服务器的java页面</p><ul><li>既可以编写java代码，又可以编写html标签</li></ul></li></ul><h3 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h3><ul><li>就是servlet</li></ul><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><ul><li><p>&lt;% 脚本片段，相当于service方法中的代码 %&gt;</p></li><li><p>&lt;%! 脚本声明，相当于成员位置 %&gt;</p><ul><li>注意：servlet是一个单例对象</li></ul></li><li><p>&lt;%=脚本表达式 %&gt;</p><ul><li>相当于out.print()方法</li></ul></li></ul><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul><li><p>html</p><ul><li><!--  只能注释静态资源，不太安全 --></li></ul></li><li><p>jsp</p><ul><li>&lt;%–  可以注释一切，相对安全 –%&gt;</li></ul></li><li><p>java（脚本内部）</p><ul><li>// 单行注释</li><li>/*<br>多行注释</li></ul></li></ul><p>*/</p><h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><ul><li><p>page：配置jsp页面</p><ul><li><p>contentType</p><ul><li>设置响应体的MIME类型和编码方式</li></ul></li><li><p>language</p><ul><li>只能是java语言</li></ul></li><li><p>import</p><ul><li>导包</li></ul></li><li><p>errorPage</p><ul><li>跳转到友情提示页面</li></ul></li><li><p>isErrorPage</p><ul><li><p>捕获异常信息</p><ul><li><p>true</p><ul><li>打开</li></ul></li><li><p>false</p></li></ul></li></ul></li></ul></li><li><p>include：页面包含（静态）</p><ul><li>生成一个java文件，编译为class，执行</li></ul></li><li><p>taglib：导入外部资源</p><ul><li>apache的jstl标签库</li></ul></li></ul><h3 id="九大内置对象"><a href="#九大内置对象" class="headerlink" title="九大内置对象"></a>九大内置对象</h3><ul><li><p>pageContext</p><ul><li>1）当前页面中共享数据（域对象）</li><li>2）获取其他八个内置对象</li></ul></li><li><p>request</p></li><li><p>response</p></li><li><p>out</p><ul><li><p>在jsp中，只能使用out输出字符</p><ul><li><p>print()</p><ul><li>可以输出一切类型</li></ul></li><li><p>write()</p><ul><li>只能输出字符类型</li></ul></li></ul></li></ul></li></ul><h3 id="jsp动作标签"><a href="#jsp动作标签" class="headerlink" title="jsp动作标签"></a>jsp动作标签</h3><ul><li><p>jsp:include</p><ul><li><p>页面包含（动态）</p><ul><li>推荐使用静态包含</li></ul></li></ul></li><li><p>jsp:forward</p><ul><li>请求转发</li></ul></li><li><p>jsp:param</p><ul><li><p>就是forward子标签，用于数据的传递</p><ul><li>可以通过request.getParameter()获取参数</li></ul></li></ul></li></ul><h2 id="mvc"><a href="#mvc" class="headerlink" title="mvc"></a>mvc</h2><h3 id="jsp发展史"><a href="#jsp发展史" class="headerlink" title="jsp发展史"></a>jsp发展史</h3><ul><li>早期还有servlet</li><li>过度使用jsp</li><li>servlet+jsp完成互补</li></ul><h3 id="mvc设计模式"><a href="#mvc设计模式" class="headerlink" title="mvc设计模式"></a>mvc设计模式</h3><ul><li><p>高内聚，低耦合</p></li><li><p>M</p><ul><li><p>model（模型）</p><ul><li>javaBean（1.处理业务逻辑   2.封装实体）</li></ul></li></ul></li><li><p>V</p><ul><li><p>view（视图）</p><ul><li>jsp（展示数据）</li></ul></li></ul></li><li><p>C</p><ul><li><p>controller（控制器）</p><ul><li>servlet（1.接收请求  2.调用模型  3.转发视图）</li></ul></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>算法(4nd)</title>
      <link href="/2020/04/18/%E7%AE%97%E6%B3%95-4nd/"/>
      <url>/2020/04/18/%E7%AE%97%E6%B3%95-4nd/</url>
      
        <content type="html"><![CDATA[<ul><li><a id="more"></a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（三十七）</title>
      <link href="/2020/04/18/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E4%B8%83%EF%BC%89/"/>
      <url>/2020/04/18/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E4%B8%83%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>Session<a id="more"></a></li></ul><h1 id="一-Session"><a href="#一-Session" class="headerlink" title="一.Session"></a>一.Session</h1><h4 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h4><h4 id="1-2-快速入门"><a href="#1-2-快速入门" class="headerlink" title="1.2 快速入门"></a>1.2 快速入门</h4><ul><li><p>HttpSession也是一个对象</p><blockquote></blockquote><table><thead><tr><th>说明</th><th>API</th></tr></thead><tbody><tr><td>存储数据</td><td>void setAttribute(String name,Object value)</td></tr><tr><td>获取数据</td><td>Object getAttribute(String name)</td></tr><tr><td>删除数据</td><td>void removeAttribute(String name)</td></tr></tbody></table></li><li><p>步骤分析</p></li><li><p>将数据存储到session中</p><table><thead><tr><th>说明</th><th>API</th></tr></thead><tbody><tr><td>通过request对象，获取session对象</td><td>HttpSession session = req.getSession();</td></tr><tr><td>操作session的API，存储数据</td><td>session.setAttribute(“username”,”AAABBBCCCC”);</td></tr></tbody></table></li></ul><ul><li>从session中获取数据<blockquote></blockquote><table><thead><tr><th>说明</th><th align="left">API</th></tr></thead><tbody><tr><td>通过request对象，获取session对象</td><td align="left">HttpSession session = req.getSession();</td></tr><tr><td>操作session的API，获取数据</td><td align="left">session.getAttribute(“username”);</td></tr></tbody></table></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/SetSession"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SetSession</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//通过request对象，获取session对象</span></span><br><span class="line">        HttpSession session = req.getSession();</span><br><span class="line">        <span class="comment">//操作session的API，存储数据</span></span><br><span class="line">        session.setAttribute(<span class="string">"username"</span>,<span class="string">"AAABBBCCCC"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GetSession"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetSession</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//通过request对象，获取session对象</span></span><br><span class="line">        HttpSession session = req.getSession();</span><br><span class="line">        <span class="comment">//操作session的API，获取数据</span></span><br><span class="line">        String  username = (String) session.getAttribute(<span class="string">"username"</span>);</span><br><span class="line">        System.out.println(<span class="string">"GetSession:"</span>+username);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-工作原理"><a href="#1-3-工作原理" class="headerlink" title="1.3 工作原理"></a>1.3 工作原理</h4><ul><li>Session基于Cookie技术实现<br>HttpSession session = req.getSession(); </li></ul><p>如果用户是第一次访问:表示创建Session对象，生成编号<br>如果用户是第N次访问，根据浏览器携带编号找session对象</p><h4 id="1-4-Session细节"><a href="#1-4-Session细节" class="headerlink" title="1.4 Session细节"></a>1.4 Session细节</h4><h5 id="1-4-1-客户端关闭，服务器不关闭，两次获取的Session数据是否相同"><a href="#1-4-1-客户端关闭，服务器不关闭，两次获取的Session数据是否相同" class="headerlink" title="1.4.1 客户端关闭，服务器不关闭，两次获取的Session数据是否相同"></a>1.4.1 客户端关闭，服务器不关闭，两次获取的Session数据是否相同</h5><ul><li>默认情况下，浏览器关闭再打开，两次获取的Session不同(基于cookie实现，浏览器关闭，cookie销毁)</li><li>设置cookie的存活时间(JESSIONID)，代替服务器，覆盖JESSIONID，指定持久化时间</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/SessionDemo01"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SessionDemo01</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//指定JESSIONID时间</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取session对象</span></span><br><span class="line">        HttpSession session = req.getSession();</span><br><span class="line">        <span class="comment">//向session中存数据</span></span><br><span class="line">        session.setAttribute(<span class="string">"username"</span>,<span class="string">"zZZ"</span>);</span><br><span class="line">        <span class="comment">//获取SESSION 的唯一编号</span></span><br><span class="line">        String id = session.getId();</span><br><span class="line">        <span class="comment">//设置cookie时长</span></span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"JESSIONID"</span>, id);</span><br><span class="line">        <span class="comment">//设置存活时间</span></span><br><span class="line">        cookie.setMaxAge(<span class="number">60</span>*<span class="number">2</span>);</span><br><span class="line">        <span class="comment">//当前项目下共享</span></span><br><span class="line">        cookie.setPath(req.getContextPath());</span><br><span class="line">        <span class="comment">//response响应cookie</span></span><br><span class="line">        resp.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-4-2-客户端不关闭，服务器关闭，两次获取的Session数据是否相同"><a href="#1-4-2-客户端不关闭，服务器关闭，两次获取的Session数据是否相同" class="headerlink" title="1.4.2 客户端不关闭，服务器关闭，两次获取的Session数据是否相同"></a>1.4.2 客户端不关闭，服务器关闭，两次获取的Session数据是否相同</h5><ul><li>当服务器正常关闭，重启后，两次获取的session数据一样<br>Tomcat实现了以下功能<br>钝化(序列化):当服务器正常关闭时,session中当数据，会序列化到磁盘<br>活化(反序列化):当服务器开启后，从磁盘中读取文件，反序列化到内存中</li></ul><h5 id="1-4-3-生命周期"><a href="#1-4-3-生命周期" class="headerlink" title="1.4.3 生命周期"></a>1.4.3 生命周期</h5><ul><li><p>何时创建</p><table><thead><tr><th>用户第一次调用req.getAttribute()时，创建</th></tr></thead></table></li><li><p>何时销毁</p><table><thead><tr><th>服务器非正常关闭</th></tr></thead><tbody><tr><td><strong>非活跃状态30分钟后销毁</strong>(tomcat/conf/web.xml官方已配置)</td></tr><tr><td><strong>session.invalidate();立即销毁</strong></td></tr></tbody></table></li><li><p>作用范围</p><table><thead><tr><th>一次会话中，多次请求之间</th></tr></thead><tbody><tr><td><strong>注意</strong>:每一个浏览器和服务器之间都是独立的会话</td></tr></tbody></table></li></ul><h5 id="1-4-4-URL重写"><a href="#1-4-4-URL重写" class="headerlink" title="1.4.4 URL重写"></a>1.4.4 URL重写</h5><p>Session基于Cookie技术实现；浏览器Cookie可以禁用，一旦禁用，Session会出现问题<br>开发中，一般不考虑禁用Cookie用户</p><ul><li>如果真要处理，可以使用URL重写<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/SessionDemo02"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SessionDemo02</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取session对象</span></span><br><span class="line">        HttpSession session = req.getSession();</span><br><span class="line">        <span class="comment">//向session中存数据</span></span><br><span class="line">        session.setAttribute(<span class="string">"username"</span>, <span class="string">"SIODJOISDJSO"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义URL</span></span><br><span class="line">        String url = <span class="string">"/Day37_war_exploded/GetSession"</span>;</span><br><span class="line">        <span class="comment">//重写URL，拼接JESSIONID</span></span><br><span class="line">        url = resp.encodeURL(url);</span><br><span class="line"></span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        resp.getWriter().write(<span class="string">"&lt;a href'"</span> + url + <span class="string">"'&gt;Direct to get Session&lt;/a&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-5-Session特点"><a href="#1-5-Session特点" class="headerlink" title="1.5 Session特点"></a>1.5 Session特点</h4><ul><li>session存储数据在服务器</li><li>session存储类型任意(Object)</li><li>session存储大小和数据没有限制(相对于内存)</li><li>session存储数据相对安全</li></ul><p><strong>cookie和session的选择</strong></p><ul><li>cookie将数据保存在浏览器端，数据相对不安全，建议敏感数据不要放在cookie中，且数据大小有限制<blockquote><p>成本低，对服务器要求不高<br>  浏览器为了解决该不足，前端使用了localStroage</p></blockquote></li><li>session将数据保存在服务器端，数据相对安全，数据大小比cookie中灵活<blockquote><p>成本较高，对服务器压力大</p></blockquote></li></ul><h1 id="二-三大域对象总结"><a href="#二-三大域对象总结" class="headerlink" title="二. 三大域对象总结"></a>二. 三大域对象总结</h1><p>request,session,ServletContext</p><h4 id="2-1-API"><a href="#2-1-API" class="headerlink" title="2.1 API"></a>2.1 API</h4><table><thead><tr><th>设置数据</th><th>void setAttribute(String name,Object o)</th></tr></thead><tbody><tr><td>获取数据</td><td>Object getAttribute(String name)</td></tr><tr><td>删除数据</td><td>void removeAttribute(String name)</td></tr></tbody></table><h4 id="2-2-生命周期"><a href="#2-2-生命周期" class="headerlink" title="2.2 生命周期"></a>2.2 生命周期</h4><h5 id="2-2-1-ServleetContext域对象"><a href="#2-2-1-ServleetContext域对象" class="headerlink" title="2.2.1 ServleetContext域对象"></a>2.2.1 ServleetContext域对象</h5><table><thead><tr><th>何时创建</th><th>服务器正常启动，项目加载时创建</th></tr></thead><tbody><tr><td>何时销毁</td><td>服务器关闭或项目卸载时，卸载</td></tr><tr><td>作用范围</td><td>整个web项目(共享数据)</td></tr></tbody></table><h5 id="2-2-2-HttpSession域对象"><a href="#2-2-2-HttpSession域对象" class="headerlink" title="2.2.2 HttpSession域对象"></a>2.2.2 HttpSession域对象</h5><table><thead><tr><th>何时创建</th><th>用户第一次调用req.getSession() 方法时创建<br/>用户访问携带的JESSIONID与服务器不匹配时创建</th></tr></thead><tbody><tr><td>何时销毁</td><td>服务器非正常关闭时<br/>未活跃时间30 min<br/>session.invalidate();立即销毁</td></tr><tr><td>作用范围</td><td>一次会话中，多次请求间(共享数据)</td></tr></tbody></table><h5 id="2-2-3-HttpServletRequest域对象"><a href="#2-2-3-HttpServletRequest域对象" class="headerlink" title="2.2.3 HttpServletRequest域对象"></a>2.2.3 HttpServletRequest域对象</h5><table><thead><tr><th>何时创建</th><th>用户发送请求时创建</th></tr></thead><tbody><tr><td>何时销毁</td><td>服务器做出响应后销毁</td></tr><tr><td>作用范围</td><td>一次请求中，多次转发间(共享数据)</td></tr></tbody></table><h4 id="2-3-小结"><a href="#2-3-小结" class="headerlink" title="2.3 小结"></a>2.3 小结</h4><ul><li><p>能用小的不用大的:request&lt;session&lt;servletContext</p></li><li><p>常用场景</p><table><thead><tr><th>request</th><th>一次查询的结果 (servlet转发jsp)</th></tr></thead><tbody><tr><td>session</td><td>存放当前会话的私有数据<br/>(验证码、购物车、等)</td></tr></tbody></table></li><li><p>servletContext:若需要所有的Servlet都能访问到，才使用这个域对象</p></li></ul><h1 id="三-综合案例"><a href="#三-综合案例" class="headerlink" title="三.综合案例"></a>三.综合案例</h1><h4 id="3-1-商品购物车"><a href="#3-1-商品购物车" class="headerlink" title="3.1 商品购物车"></a>3.1 商品购物车</h4><h5 id="3-1-1-需求分析"><a href="#3-1-1-需求分析" class="headerlink" title="3.1.1 需求分析"></a>3.1.1 需求分析</h5><p>addCatrSetvlet</p><blockquote><p>1.获取请求参数name(product)<br>2.返回:product 商品已加入购物车<br>3.从session中获取购物车<br>4.如果购物车为空，创建cart = new HashMap()<br>5.判断，此商品是否存在于购物车<br>6.不存在，添加商品数量1<br>7.存在，在原商品基础上+1<br>8.将购物车重写到session中</p></blockquote><p>cart.jsp</p><blockquote><p>1.从session中获取购物车对象<br>2.判断是否为空<br>3.如果空，显示购物车空<br>4.如果不为空，遍历展示商品和数量</p></blockquote><h5 id="3-1-2-代码实现"><a href="#3-1-2-代码实现" class="headerlink" title="3.1.2 代码实现"></a>3.1.2 代码实现</h5><ul><li>goods.jsp</li><li>addCartServlet</li><li>cart.jsp</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Goods&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;商品列表&lt;/h3&gt;</span><br><span class="line">&lt;a href="/Day37_war_exploded/AddCartServlet?name=TV"&gt;TV,add to cart&lt;/a&gt;&lt;br&gt;</span><br><span class="line">&lt;a href="/Day37_war_exploded/AddCartServlet?name=PC"&gt;PC,add to cart&lt;/a&gt;&lt;br&gt;</span><br><span class="line">&lt;a href="/Day37_war_exploded/AddCartServlet?name=Phone"&gt;Phone,add to cart&lt;/a&gt;&lt;br&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/AddCartServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddCartServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置编码</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取请求参数</span></span><br><span class="line">        String product = req.getParameter(<span class="string">"name"</span>);</span><br><span class="line">        resp.getWriter().write(product + <span class="string">", has add to Cart"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//从session中获取购物车</span></span><br><span class="line">        Map&lt;String, Integer&gt; cart = (Map&lt;String, Integer&gt;) req.getSession().getAttribute(<span class="string">"cart"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断购物车是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (cart == <span class="keyword">null</span>) &#123;</span><br><span class="line">            cart = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断购物车中是否包含本次商品</span></span><br><span class="line">        <span class="keyword">if</span> (cart.containsKey(product)) &#123;</span><br><span class="line">            <span class="comment">//存在,product++</span></span><br><span class="line">            Integer oldCount = cart.get(product);<span class="comment">//之前的数量</span></span><br><span class="line">            cart.put(product, ++oldCount);<span class="comment">//数量加一</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//不存在 ,加入购物车</span></span><br><span class="line">            cart.put(product, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//重新将购物车写入到session中</span></span><br><span class="line">        req.getSession().setAttribute(<span class="string">"cart"</span>, cart);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//继续浏览</span></span><br><span class="line">        resp.getWriter().write(<span class="string">"&lt;br&gt;&lt;a href='/Day37_war_exploded/goods.jsp'&gt;Continue View&lt;/a&gt;&lt;br&gt;"</span>);</span><br><span class="line">        <span class="comment">//查看购物车</span></span><br><span class="line">        resp.getWriter().write(<span class="string">"&lt;br&gt;&lt;a href='/Day37_war_exploded/cart.jsp'&gt;Check Shopping Cart&lt;/a&gt;"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border=<span class="string">"1"</span> width=<span class="string">"200px"</span> align=<span class="string">"center"</span>&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;Product&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;Quantity&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="comment">//从session中获取购物车</span></span><br><span class="line">        Map&lt;String, Integer&gt; cart = (Map&lt;String, Integer&gt;) request.getSession().getAttribute(<span class="string">"cart"</span>);</span><br><span class="line">        <span class="comment">//判断是否为空</span></span><br><span class="line">        <span class="keyword">if</span> (cart == <span class="keyword">null</span>) &#123;</span><br><span class="line">            out.write(<span class="string">"No Product here&lt;br&gt;"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (String product : cart.keySet()) &#123;</span><br><span class="line">                out.write(<span class="string">"&lt;tr&gt;&lt;td&gt;"</span> + product + <span class="string">"&lt;/td&gt;  &lt;td&gt;"</span> + cart.get(product) + <span class="string">"&lt;/td&gt;&lt;tr/&gt;"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;a href='/Day37_war_exploded/goods.jsp'&gt;Continue View&lt;/a&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h4 id="3-2-用户登陆-验证码"><a href="#3-2-用户登陆-验证码" class="headerlink" title="3.2 用户登陆(验证码)"></a>3.2 用户登陆(验证码)</h4><h5 id="3-2-1-需求分析"><a href="#3-2-1-需求分析" class="headerlink" title="3.2.1 需求分析"></a>3.2.1 需求分析</h5><h5 id="3-2-2-代码实现"><a href="#3-2-2-代码实现" class="headerlink" title="3.2.2  代码实现"></a>3.2.2  代码实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//课下作业实现非空判断</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//获取用户输入验证码</span></span><br><span class="line">        String checkcode = req.getParameter(<span class="string">"checkcode"</span>);</span><br><span class="line">        <span class="comment">//获取session验证码</span></span><br><span class="line">        String codeSession = (String) req.getSession().getAttribute(<span class="string">"code_session"</span>);</span><br><span class="line">        <span class="comment">//校验匹配</span></span><br><span class="line">        <span class="keyword">if</span> (!checkcode.equalsIgnoreCase(codeSession)) &#123;</span><br><span class="line">            <span class="comment">//验证码不匹配提示</span></span><br><span class="line">            req.setAttribute(<span class="string">"Error"</span>, <span class="string">"Check Code Wrong"</span>);</span><br><span class="line">            <span class="comment">//转发到login.jsp</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(req, resp);</span><br><span class="line">            <span class="comment">//代码不再向下执行</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取用户输入到用户名和密码</span></span><br><span class="line">        String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断用户名密码</span></span><br><span class="line">        <span class="keyword">if</span> (!(<span class="string">"jack"</span>.equals(username) &amp;&amp; <span class="string">"123"</span>.equals(password))) &#123;</span><br><span class="line">            <span class="comment">//用户名密码不匹配提示</span></span><br><span class="line">            req.setAttribute(<span class="string">"Error"</span>, <span class="string">"Username or Password Wrong"</span>);</span><br><span class="line">            <span class="comment">//转发到login.jsp</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(req, resp);</span><br><span class="line">            <span class="comment">//代码不再向下执行</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将用户名存入session</span></span><br><span class="line">        req.getSession().setAttribute(<span class="string">"username"</span>, username);</span><br><span class="line">        <span class="comment">//重定向到Succes.jsp</span></span><br><span class="line">        resp.sendRedirect(req.getContextPath() + <span class="string">"/success.jsp"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"/Day37_war_exploded/LoginServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    Name: &lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt;&lt;br&gt;</span><br><span class="line">    Password: &lt;input type=<span class="string">"password"</span> name=<span class="string">"password"</span>&gt;&lt;br&gt;</span><br><span class="line">    Checkcode: &lt;input type=<span class="string">"text"</span> name=<span class="string">"checkcode"</span>&gt;&lt;img src=<span class="string">"/Day37_war_exploded/CheckCodeServlet"</span> id=<span class="string">"image1"</span></span><br><span class="line">                                                        alt=<span class="string">""</span>&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Login"</span>&gt;</span><br><span class="line">    &lt;span style=<span class="string">"color: red"</span>&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">            String error = (String) request.getAttribute(<span class="string">"Error"</span>);</span><br><span class="line">            <span class="keyword">if</span> (error != <span class="keyword">null</span>) &#123;</span><br><span class="line">                out.write(error);</span><br><span class="line">            &#125;</span><br><span class="line">        %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    document.getElementById(<span class="string">"image1"</span>).onclick = function () &#123;</span><br><span class="line">        <span class="keyword">this</span>.src = <span class="string">'/Day37_war_exploded/CheckCodeServlet?'</span> + <span class="keyword">new</span> Date().getTime();</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Success&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="comment">//获取用户信息</span></span><br><span class="line">    String username = (String) request.getSession().getAttribute(<span class="string">"username"</span>);</span><br><span class="line">    <span class="keyword">if</span> (username != <span class="keyword">null</span>)&#123;</span><br><span class="line">        out.write(<span class="string">"Welcome ,"</span>+username);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="在一次会话的多次请求之间共享数据，将数据保存到服务器端"><a href="#在一次会话的多次请求之间共享数据，将数据保存到服务器端" class="headerlink" title="在一次会话的多次请求之间共享数据，将数据保存到服务器端"></a>在一次会话的多次请求之间共享数据，将数据保存到服务器端</h3><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><h3 id="基于Cookie技术"><a href="#基于Cookie技术" class="headerlink" title="基于Cookie技术"></a>基于Cookie技术</h3><ul><li>jsessionid=xxxx</li></ul><h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><h3 id="获取session"><a href="#获取session" class="headerlink" title="获取session"></a>获取session</h3><ul><li>request.getSession()</li></ul><h3 id="使用session"><a href="#使用session" class="headerlink" title="使用session"></a>使用session</h3><ul><li>setAttribute()</li><li>getAttribute()</li><li>remomveAttribute()</li></ul><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><h3 id="何时创建"><a href="#何时创建" class="headerlink" title="何时创建"></a>何时创建</h3><ul><li>用户第一次执行getSession()方法时，创建</li><li>用户携带的jssionid与服务器不匹配时，创建</li></ul><h3 id="何时销毁"><a href="#何时销毁" class="headerlink" title="何时销毁"></a>何时销毁</h3><ul><li><ol><li>服务器非正常关闭时</li></ol></li><li><ol start="2"><li>session.invalidate()</li></ol></li><li><ol start="3"><li><p>session默认销毁时间30分钟</p><ul><li>tomcat目录/conf/web.xm</li></ul></li></ol></li></ul><h3 id="作用范围"><a href="#作用范围" class="headerlink" title="作用范围"></a>作用范围</h3><ul><li>一次会话中，多次请求之间</li></ul><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><h3 id="1-session在服务器端存储数据"><a href="#1-session在服务器端存储数据" class="headerlink" title="1. session在服务器端存储数据"></a>1. session在服务器端存储数据</h3><h3 id="2-session存储数据格式可以是任意类型"><a href="#2-session存储数据格式可以是任意类型" class="headerlink" title="2. session存储数据格式可以是任意类型"></a>2. session存储数据格式可以是任意类型</h3><h3 id="3-session存储数据没有大小限制（相对于内存）"><a href="#3-session存储数据没有大小限制（相对于内存）" class="headerlink" title="3. session存储数据没有大小限制（相对于内存）"></a>3. session存储数据没有大小限制（相对于内存）</h3><h3 id="4-session存储数据相对安全"><a href="#4-session存储数据相对安全" class="headerlink" title="4. session存储数据相对安全"></a>4. session存储数据相对安全</h3><h2 id="三个域对象"><a href="#三个域对象" class="headerlink" title="三个域对象"></a>三个域对象</h2><h3 id="ServletContext"><a href="#ServletContext" class="headerlink" title="ServletContext"></a>ServletContext</h3><ul><li>创建</li><li>销毁</li><li>作用域</li></ul><h3 id="HttpSession"><a href="#HttpSession" class="headerlink" title="HttpSession"></a>HttpSession</h3><ul><li>创建</li><li>销毁</li><li>作用域</li></ul><h3 id="HttpServletRequest"><a href="#HttpServletRequest" class="headerlink" title="HttpServletRequest"></a>HttpServletRequest</h3><ul><li>创建</li><li>销毁</li><li>作用域</li></ul><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="商品购物车"><a href="#商品购物车" class="headerlink" title="商品购物车"></a>商品购物车</h3><h3 id="用户登录（验证码）"><a href="#用户登录（验证码）" class="headerlink" title="用户登录（验证码）"></a>用户登录（验证码）</h3><p><em>XMind - Trial Version</em></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（三十六）</title>
      <link href="/2020/04/18/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E5%85%AD%EF%BC%89/"/>
      <url>/2020/04/18/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E5%85%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>Cookie<a id="more"></a></li></ul><h1 id="一-会话概述"><a href="#一-会话概述" class="headerlink" title="一.会话概述"></a>一.会话概述</h1><h4 id="1-1-什么是会话"><a href="#1-1-什么是会话" class="headerlink" title="1.1 什么是会话"></a>1.1 什么是会话</h4><p>http协议是一个无状态协议，同一会话的多次请求相互独立，会话负责存储浏览器和服务器多次请求之间的数据</p><h4 id="1-2-会话技术"><a href="#1-2-会话技术" class="headerlink" title="1.2 会话技术"></a>1.2 会话技术</h4><p>客户端会话技术:Cookie<br>服务端会话技术:Session</p><h1 id="二-Cookie"><a href="#二-Cookie" class="headerlink" title="二.Cookie"></a>二.Cookie</h1><h4 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h4><p>作用:在一次会话的多个请求之间共享数据,将数据保存到客户端</p><h4 id="2-2-快速入门"><a href="#2-2-快速入门" class="headerlink" title="2.2 快速入门"></a>2.2 快速入门</h4><h5 id="2-2-1-设置数据到Cookie中"><a href="#2-2-1-设置数据到Cookie中" class="headerlink" title="2.2.1 设置数据到Cookie中"></a>2.2.1 设置数据到Cookie中</h5><ul><li>创建cookie对象，设置数据<br>Cookie cookie = new Cookie(String name,String value);</li><li>通过response,响应(返回)cookie<br>response.addCookie(cookie);</li></ul><h5 id="2-2-2-从cookie中获取数据"><a href="#2-2-2-从cookie中获取数据" class="headerlink" title="2.2.2 从cookie中获取数据"></a>2.2.2 从cookie中获取数据</h5><ul><li>通过request对象，接收cookie数组<br>Cookie[] cookies = request.getCookies()</li><li>遍历数组<br>for(Cookie cookie:cookies){</li></ul><p>}</p><p><strong>浏览器具有自动存储cookie的能力，也有请求携带cookie的能力</strong></p><blockquote></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Coolie<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Day36_war_exploded/SetServlet"</span>&gt;</span>Set Cookie<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Day36_war_exploded/GetServlet"</span>&gt;</span>Get Cookie<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/SetServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SetServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"name"</span>,<span class="string">"jack"</span>);</span><br><span class="line">        resp.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GetServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//通过request对象，接收cookie数组</span></span><br><span class="line">        Cookie[] cookies = req.getCookies();</span><br><span class="line">        <span class="keyword">if</span> (cookies != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//遍历数组</span></span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                String name = cookie.getName();</span><br><span class="line">                String value = cookie.getValue();</span><br><span class="line">                System.out.println(name+<span class="string">"="</span>+value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-工作原理"><a href="#2-3-工作原理" class="headerlink" title="2.3 工作原理"></a>2.3 工作原理</h4><p>基于HTTP协议:请求头cookie和响应头set-cookie</p><h4 id="2-4-Cookie细节"><a href="#2-4-Cookie细节" class="headerlink" title="2.4 Cookie细节"></a>2.4 Cookie细节</h4><h5 id="2-4-1-服务器如何发送多个Cookie"><a href="#2-4-1-服务器如何发送多个Cookie" class="headerlink" title="2.4.1 服务器如何发送多个Cookie"></a>2.4.1 服务器如何发送多个Cookie</h5><ul><li><p>创建多个cookie对象<br>Cookie cookie1 = new Cookie(“name”,”rose”);<br>Cookie cookie2 = new Cookie(“age”,”18”);</p></li><li><p>通过response响应多个cookie<br>response.addCookie(cookie1);<br>response.addCookie(cookie2);</p><blockquote></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Day36_war_exploded/MultipleCookie"</span>&gt;</span>MultipleCookie<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/MultipleCookie"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MultipleCookie</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"name"</span>, <span class="string">"rose"</span>);</span><br><span class="line">        Cookie age = <span class="keyword">new</span> Cookie(<span class="string">"age"</span>, <span class="string">"18"</span>);</span><br><span class="line">        resp.addCookie(cookie);</span><br><span class="line">        resp.addCookie(age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-4-2-Cookie在浏览器的保存时间"><a href="#2-4-2-Cookie在浏览器的保存时间" class="headerlink" title="2.4.2 Cookie在浏览器的保存时间"></a>2.4.2 Cookie在浏览器的保存时间</h5><ul><li>默认情况下，浏览器关闭(会话结束),cookie销毁(浏览器内存中存储)</li><li>设置Cookie的存活时间<br>cookie.setMaxAge(int second);<blockquote><p>  正数:指定存活时间，持久化浏览器的磁盘中，到期后自动销毁<br>  负数:默认浏览器关闭，cookie销毁<br>  零:立即销毁</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Day36_war_exploded/MaxAgeCookie"</span>&gt;</span>MaxAgeCookie<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/MaxAgeCookie"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MaxAgeCookie</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建Cookie对象</span></span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"product"</span>, <span class="string">"MI"</span>);</span><br><span class="line">        <span class="comment">//设置Cookie的存活时间,默认值-1，关闭自动销毁</span></span><br><span class="line"><span class="comment">//        cookie.setMaxAge(-1);</span></span><br><span class="line">        <span class="comment">//设定30s，自动销毁</span></span><br><span class="line"><span class="comment">//        cookie.setMaxAge(30);</span></span><br><span class="line">        <span class="comment">//立即销毁</span></span><br><span class="line">        cookie.setMaxAge(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//resp响应Cookie</span></span><br><span class="line">        resp.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-4-3-Cookie是否支持中文存储"><a href="#2-4-3-Cookie是否支持中文存储" class="headerlink" title="2.4.3 Cookie是否支持中文存储"></a>2.4.3 Cookie是否支持中文存储</h5><ul><li><p>Tomcat 8版本开始支持中文</p></li><li><p>但是不支持部分特殊字符，如:分号，空格，逗号等，会触发Rfc6265 CookieProcessor规范错误</p></li><li><p>建议使用通用方法存储字符<br>URLEncoder 编码<br>URLDecoder 解码</p><blockquote></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/EncodeCookie"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodeCookie</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String product = (<span class="string">"华为 30X,"</span>);</span><br><span class="line">        product= URLEncoder.encode(<span class="string">"UTF-8"</span>);</span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"Brand"</span>, <span class="string">"苹果"</span>);</span><br><span class="line">        Cookie cookie1 = <span class="keyword">new</span> Cookie(<span class="string">"product"</span>, product);</span><br><span class="line">        resp.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GetServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//通过request对象，接收cookie数组</span></span><br><span class="line">        Cookie[] cookies = req.getCookies();</span><br><span class="line">        <span class="keyword">if</span> (cookies != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//遍历数组</span></span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                String name = cookie.getName();</span><br><span class="line">                String value = cookie.getValue();</span><br><span class="line">                <span class="comment">//解码</span></span><br><span class="line">                value = URLDecoder.decode(<span class="string">"UTF-8"</span>);</span><br><span class="line">                System.out.println(name + <span class="string">"="</span> + value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-4-4-Cookie共享数据的范围"><a href="#2-4-4-Cookie共享数据的范围" class="headerlink" title="2.4.4 Cookie共享数据的范围"></a>2.4.4 Cookie共享数据的范围</h5><h6 id="2-4-4-1-同一个Tomcat服务器中，部署多个web项目，能否共享Cookie"><a href="#2-4-4-1-同一个Tomcat服务器中，部署多个web项目，能否共享Cookie" class="headerlink" title="2.4.4.1 同一个Tomcat服务器中，部署多个web项目，能否共享Cookie"></a>2.4.4.1 同一个Tomcat服务器中，部署多个web项目，能否共享Cookie</h6><ul><li><p>默认情况下不可以<br>默认Cookie的携带路径，是当前设置cookie的servlet父路径</p><blockquote><p>设置Cookie:<a href="http://localhost:8080/Day36_war_exploded/EncodeCookie">http://localhost:8080/Day36_war_exploded/EncodeCookie</a><br>默认携带路径:<a href="http://localhost:8080/Day36_war_exploded/">http://localhost:8080/Day36_war_exploded/</a></p></blockquote></li><li><p>指定Cookie携带路径<br>cookie.setPath(String Path);<br>例:cookie.setPath(“/“);</p><blockquote><p>/ 相当于<a href="http://localhost:8080/">http://localhost:8080/</a></p></blockquote><p>此cookie携带路径</p><blockquote><p><a href="http://localhost:8080/">http://localhost:8080/</a></p></blockquote><p>访问:</p><blockquote><p><a href="http://localhost:8080/Day36_war_exploded/">http://localhost:8080/Day36_war_exploded/</a><br><a href="http://localhost:8080/Day35_war_exploded/">http://localhost:8080/Day35_war_exploded/</a></p></blockquote></li><li><p><strong>携带路径不同，可以存储同名的cookie</strong></p></li><li><p>在当前项目下共享cookie方法<br>cookie.setPath(“/项目名”);</p></li></ul><h6 id="2-4-4-2-不同Tomcat服务器之间的Cookie能否共享"><a href="#2-4-4-2-不同Tomcat服务器之间的Cookie能否共享" class="headerlink" title="2.4.4.2 不同Tomcat服务器之间的Cookie能否共享"></a>2.4.4.2 不同Tomcat服务器之间的Cookie能否共享</h6><ul><li>默认情况下不可以</li><li>多个服务器之间的数据共享cookie，需要在同一个一级域名下<br>  cookie.setDomain(“.xx.com”)</li></ul><h4 id="2-5-Cookie特点"><a href="#2-5-Cookie特点" class="headerlink" title="2.5 Cookie特点"></a>2.5 Cookie特点</h4><ul><li>Cookie存储的数据都在客户端</li><li>Cookie存储的数据只能是字符串</li><li>Cookie单个大学不能超过4kb</li><li>同一个域名下Cookie的数量不能超过50个</li><li>Cookie路径不同，可以重名出现</li><li>Cookie存储数据不太安全</li></ul><h1 id="三-综合案例"><a href="#三-综合案例" class="headerlink" title="三.综合案例"></a>三.综合案例</h1><h4 id="3-1-用户上次访问记录"><a href="#3-1-用户上次访问记录" class="headerlink" title="3.1 用户上次访问记录"></a>3.1 用户上次访问记录</h4><p>需求:访问一个Servlet，如果是第一次访问，则提示:”您好”，如果不是，则提示”上次访问时间”</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Day36_war_exploded/LastTimeServlet"</span>&gt;</span>LastTimeServlet<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CookieUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据指定名称，查找cookie对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Cookie <span class="title">findByName</span><span class="params">(String name, Cookie[] cookies)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//非空判断</span></span><br><span class="line">        <span class="keyword">if</span> (cookies != <span class="keyword">null</span> &amp;&amp; cookies.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//遍历</span></span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                <span class="comment">//判断是否有指定名称的cookie</span></span><br><span class="line">                <span class="keyword">if</span> (name.equals(cookie.getName())) &#123;</span><br><span class="line">                    <span class="keyword">return</span> cookie;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LastTimeServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LastTimeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span><br><span class="line">        <span class="comment">//接收cookie数组，取出指定名称cookie对象</span></span><br><span class="line">        Cookie cookie = CookieUtils.findByName(<span class="string">"last_time"</span>, req.getCookies());</span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span> (cookie == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//不存在</span></span><br><span class="line">            resp.getWriter().write(<span class="string">"Welcome"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//存在</span></span><br><span class="line">            String value = cookie.getValue();</span><br><span class="line">            resp.getWriter().write(<span class="string">"Welcome Back,Last Visit Time:"</span> + value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//创建cookie对象,记录本次访问时间</span></span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd-HH:mm:ss"</span>);</span><br><span class="line">        String currentTime = simpleDateFormat.format(<span class="keyword">new</span> Date());</span><br><span class="line">        cookie = <span class="keyword">new</span> Cookie(<span class="string">"last_time"</span>, currentTime);</span><br><span class="line">        <span class="comment">//设置cookie存活1年</span></span><br><span class="line">        cookie.setMaxAge(<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">365</span>);</span><br><span class="line">        <span class="comment">//resp响应cookie</span></span><br><span class="line">        resp.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-JSP初体验"><a href="#3-2-JSP初体验" class="headerlink" title="3.2 JSP初体验"></a>3.2 JSP初体验</h4><ul><li>Java服务端页面</li><li>简单来说:一个特殊的页面，即可定义html标签，又可定义Java代码</li><li>作用:简化书写，展示动态页面</li><li>本质:Servlet<br>脚本:JSP通过脚本方式来定义Java代码<blockquote><p>&lt;%   Java代码       %&gt; 就相当于Servlet中service方法</p></blockquote>内置对象:在JSP页面中不需要获取和创建，可以直接使用对象<blockquote><p>request<br>response<br>out<br>在JSP中响应内容，使用out<br>tomcat优先解析response缓冲区内容，再解析out缓冲区内容</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;I am Title&lt;/h3&gt;</span><br><span class="line">&lt;table border=<span class="string">"1"</span> width=<span class="string">"300"</span> align=<span class="string">"center"</span>&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;I am static resource&lt;/td&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;%</span><br><span class="line"><span class="comment">//    response.getWriter().write("I am JSP");</span></span><br><span class="line">    System.out.println(<span class="string">"I am jsp"</span>);</span><br><span class="line">    out.write(<span class="string">"Out"</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-3-商品浏览记录"><a href="#3-3-商品浏览记录" class="headerlink" title="3.3 商品浏览记录"></a>3.3 商品浏览记录</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>List<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Day36_war_exploded/GoodsInfoServlet?name=MI"</span>&gt;</span>MI<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Day36_war_exploded/GoodsInfoServlet?name=HW"</span>&gt;</span>HW<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Day36_war_exploded/GoodsInfoServlet?name=Apple"</span>&gt;</span>Apple<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Day36_war_exploded/GoodsInfoServlet?name=TCL"</span>&gt;</span>TCL<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="comment">//Java Code</span></span><br><span class="line">    <span class="comment">//获取指定名称的Cookie对象</span></span><br><span class="line">    Cookie cookie = CookieUtils.findByName(<span class="string">"goods_name"</span>, request.getCookies());</span><br><span class="line">    <span class="comment">//判断是否存在浏览记录</span></span><br><span class="line">    <span class="keyword">if</span> (cookie == <span class="keyword">null</span>) &#123;</span><br><span class="line">        out.write(<span class="string">"No History"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//格式:MI-Apple..</span></span><br><span class="line">        String value = cookie.getValue();</span><br><span class="line">        <span class="keyword">for</span> (String product : value.split(<span class="string">"-"</span>)) &#123;</span><br><span class="line">            out.write(product + <span class="string">"&lt;br/&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/GoodsInfoServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsInfoServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置请求的解码方式</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//获取请求参数name</span></span><br><span class="line">        String product = req.getParameter(<span class="string">"name"</span>);</span><br><span class="line">        <span class="comment">//展示当前商品详情</span></span><br><span class="line">        resp.getWriter().write(<span class="string">"It's "</span> + product);</span><br><span class="line">        <span class="comment">//获取指定名称的Cookie对象</span></span><br><span class="line">        Cookie cookie = CookieUtils.findByName(<span class="string">"goods_name"</span>, req.getCookies());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cookie == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//如果不存在，将当前商品设置到cookie中</span></span><br><span class="line">            cookie = <span class="keyword">new</span> Cookie(<span class="string">"goods_name"</span>, product);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//如果存在，将浏览记录取出</span></span><br><span class="line">            String value = cookie.getValue();</span><br><span class="line">            <span class="comment">//判断当前商品是否在此Cookie中</span></span><br><span class="line">            List&lt;String&gt; list = Arrays.asList(value.split(<span class="string">"-"</span>));</span><br><span class="line">            <span class="comment">//如果不包含，追加，如果包含，不操作</span></span><br><span class="line">            <span class="keyword">if</span> (!list.contains(product)) &#123;</span><br><span class="line">                value=value+<span class="string">"-"</span>+product;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//将value重置到Cookie中</span></span><br><span class="line">            cookie = <span class="keyword">new</span> Cookie(<span class="string">"goods_name"</span>, value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//通过response响应到浏览器</span></span><br><span class="line">        cookie.setMaxAge(<span class="number">10</span>);</span><br><span class="line">        resp.addCookie(cookie);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//制作a标签，实现继续浏览商品功能</span></span><br><span class="line">        resp.getWriter().write(<span class="string">"&lt;br/&gt;&lt;a href='/Day36_war_exploded/goods.html'&gt;Continue View&lt;/a&gt;&lt;br/&gt;"</span>);</span><br><span class="line">        <span class="comment">//制作a标签，实现查看浏览记录功能</span></span><br><span class="line">        resp.getWriter().write(<span class="string">"&lt;a href='/Day36_war_exploded/history.jsp'&gt;History&lt;/a&gt;&lt;br/&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h2 id="一-会话概述-1"><a href="#一-会话概述-1" class="headerlink" title="一 会话概述"></a>一 会话概述</h2><h3 id="会话"><a href="#会话" class="headerlink" title="会话"></a>会话</h3><ul><li>浏览器与服务器的交互称为一次会话，包含多次请求和响应</li></ul><h3 id="会话技术作用"><a href="#会话技术作用" class="headerlink" title="会话技术作用"></a>会话技术作用</h3><ul><li>存储会话过程中产生的数据</li></ul><h3 id="种类"><a href="#种类" class="headerlink" title="种类"></a>种类</h3><ul><li><p>cookie</p><ul><li>会话数据保存在客户端</li></ul></li><li><p>session</p><ul><li>会话技术保存在服务器端</li></ul></li></ul><h2 id="二-Cookie-1"><a href="#二-Cookie-1" class="headerlink" title="二 Cookie"></a>二 Cookie</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li>在一次会话的多次请求之间共享数据，将数据保存到客户端（浏览器）</li></ul><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><ul><li><p>基于HTTP协议</p><ul><li><p>请求头</p><ul><li>cookie</li></ul></li><li><p>响应头</p><ul><li>set-cookie</li></ul></li></ul></li></ul><h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h3><ul><li><p>创建cookie</p><ul><li>Cookie cookie = new Cookie(String name,String value)</li></ul></li><li><p>发送cookie</p><ul><li>response.addCookie(cookie)</li></ul></li><li><p>获取cookie</p><ul><li>request.getCookies()</li></ul></li><li><p>细节</p><ul><li><p>设置cookie存活时间</p><ul><li><p>cookie.setMaxAge()</p><ul><li><p>正数</p><ul><li>持久化</li></ul></li><li><p>负数</p><ul><li>默认在内存中</li></ul></li><li><p>零</p><ul><li>自杀</li></ul></li></ul></li></ul></li><li><p>设置cookie携带路径</p><ul><li><p>cookie.setPath()</p><ul><li><p>默认情况下，是当前设置cookie的servlet父路径</p></li><li><p>通常情况在当前项目共享</p><ul><li>cookie.setPath(“/项目名”)</li></ul></li></ul></li></ul></li><li><p>设置cookie跨域共享</p><ul><li>cookie.setDomain()</li></ul></li></ul></li></ul><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li><ol><li>cookie在客户端存储数据</li></ol></li><li><ol start="2"><li>cookie存储数据格式只能是字符串</li></ol></li><li><ol start="3"><li>客户端对单个cookie存储数据不能超多4kb</li></ol></li><li><ol start="4"><li>同一个域名下cookie总数量不能超过50个</li></ol></li><li><ol start="5"><li>cookie存储数据不安全</li></ol></li><li><ol start="6"><li>cookie路径不同，可以重名出现</li></ol></li></ul><h2 id="三-综合案例-1"><a href="#三-综合案例-1" class="headerlink" title="三 综合案例"></a>三 综合案例</h2><h3 id="用户上次访问记录"><a href="#用户上次访问记录" class="headerlink" title="用户上次访问记录"></a>用户上次访问记录</h3><ul><li>servlet版本</li><li>jsp版本</li></ul><h3 id="Jsp初体验"><a href="#Jsp初体验" class="headerlink" title="Jsp初体验"></a>Jsp初体验</h3><ul><li>既可以定义html标签，又可以定义java代码</li></ul><h3 id="商品浏览记录"><a href="#商品浏览记录" class="headerlink" title="商品浏览记录"></a>商品浏览记录</h3><ul><li>1）goods.html</li><li>2）GoodsInfoServlet</li><li>3）history.jsp</li></ul><p><em>XMind - Trial Version</em></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（三十五）</title>
      <link href="/2020/04/16/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E4%BA%94%EF%BC%89/"/>
      <url>/2020/04/16/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>ServletContext &amp; Response</li></ul><a id="more"></a><h1 id="一-ServletContext"><a href="#一-ServletContext" class="headerlink" title="一.ServletContext"></a>一.ServletContext</h1><h4 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h4><p>ServletContext是一个容器(域对象)可以存储键值对数据(String key,Object value)，保存在ServletContext中的 数据不仅可以提供给所有的servlet使用，而且可以在整个项目范围内使用。</p><ul><li>它的主要作用有3个:<blockquote><p><strong>作为域对象</strong><br><strong>可以获取当前应用下任何路径下的任何资源</strong><br><strong>获取初始化参数</strong><br><strong>获取文件MIME类型</strong></p></blockquote></li></ul><h4 id="1-2-域对象"><a href="#1-2-域对象" class="headerlink" title="1.2 域对象"></a>1.2 域对象</h4><table><thead><tr><th align="left">说明</th><th align="left">API</th></tr></thead><tbody><tr><td align="left">往servletcontext容器中存入数据，name为数据名称，object为数据的值</td><td align="left">void setAttribute(String name,Object object)</td></tr><tr><td align="left">从ServletContext中获取数据，根据指定的数据名称</td><td align="left">Object getAttribute(String name)</td></tr><tr><td align="left">从ServletContext中移除数据，根据指定的数据名称</td><td align="left">void removeAttribute(String name)</td></tr></tbody></table><ul><li>生命周期<br>何时创建:项目加载时创建<br>何时销毁:项目卸载时销毁<br>作用范围:整个项目(多个Servlet都可以使用它)<blockquote></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/OneServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OneServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//向ServletContext域存储数据</span></span><br><span class="line">        ServletContext sc1 = req.getServletContext();</span><br><span class="line">        ServletContext sc2 = getServletContext();</span><br><span class="line">        sc1.setAttribute(<span class="string">"user"</span>,<span class="string">"jack"</span>);</span><br><span class="line">        resp.getWriter().write(<span class="string">"Set Message"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/TwoServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TwoServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//从ServletContext域存储数据</span></span><br><span class="line">        String user = (String) req.getServletContext().getAttribute(<span class="string">"user"</span>);</span><br><span class="line">        resp.getWriter().write(<span class="string">"Get Message:"</span>+user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-获取资源在服务器的真实地址"><a href="#1-3-获取资源在服务器的真实地址" class="headerlink" title="1.3 获取资源在服务器的真实地址"></a>1.3 获取资源在服务器的真实地址</h4><ul><li>可以实现Web项目的移植性，动态获取文件真实路径<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RealPath"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RealPath</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取web.xml文件真实路径</span></span><br><span class="line">        String realPath = req.getServletContext().getRealPath(<span class="string">"/WEB-INF/web.xml"</span>);</span><br><span class="line">        resp.getWriter().write(realPath);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-获取全局的配置函数"><a href="#1-4-获取全局的配置函数" class="headerlink" title="1.4 获取全局的配置函数"></a>1.4 获取全局的配置函数</h4><ul><li>读取web.xml配置文件中&lt;context-param&gt;标签,实现参数和代码的解耦(多个Servlet可以获取)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/ContextPath"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContextPath</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取全局参数</span></span><br><span class="line">        String value = req.getServletContext().getInitParameter(<span class="string">"encode"</span>);</span><br><span class="line">        System.out.println(value);</span><br><span class="line">        resp.getWriter().write(value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--   全局配置参数：所有Servlet都可以读取    --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encode<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-5-获取文件MIME类型"><a href="#1-5-获取文件MIME类型" class="headerlink" title="1.5 获取文件MIME类型"></a>1.5 获取文件MIME类型</h4><ul><li>互联网通信中的一种数据类型</li><li>格式:大类型/小类型 <blockquote><p>例如:text/html image/jpeg</p></blockquote></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Day35_war_exploded/MIMEServlet?filename=a.jpeg"</span>&gt;</span>Get MIME<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/MIMEServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MIMEServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取请求参数</span></span><br><span class="line">        String filename = req.getParameter(<span class="string">"filename"</span>);</span><br><span class="line">        <span class="comment">//获取指定文件的mime类型</span></span><br><span class="line">        String mimeType = req.getServletContext().getMimeType(filename);</span><br><span class="line">        resp.getWriter().write(filename+<span class="string">"="</span>+mimeType);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-6-案例-统计网站的访问次数"><a href="#1-6-案例-统计网站的访问次数" class="headerlink" title="1.6 案例:统计网站的访问次数"></a>1.6 案例:统计网站的访问次数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(value = <span class="string">"/CountServlet"</span>,loadOnStartup = <span class="number">4</span>)<span class="comment">//服务器启动时，创建此servlet对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CountServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        getServletContext().setAttribute(<span class="string">"count"</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置response响应编码</span></span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        resp.getWriter().write(<span class="string">"&lt;h1&gt;Welcome&lt;/h1&gt;"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用户每次访问,从域中取出，++再存入</span></span><br><span class="line">        Integer count = (Integer) req.getServletContext().getAttribute(<span class="string">"count"</span>);</span><br><span class="line">        count++;</span><br><span class="line">        getServletContext().setAttribute(<span class="string">"count"</span>, count);</span><br><span class="line"></span><br><span class="line">        resp.getWriter().write(<span class="string">"&lt;div&gt;You are the "</span>+count+<span class="string">" visitor&lt;/div&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二-Response"><a href="#二-Response" class="headerlink" title="二.Response"></a>二.Response</h1><h4 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h4><ul><li><p>response对象表示web服务器给浏览器返回的响应信息</p></li><li><p>作用:开发人员可以使用response对象方法,设置要返回给浏览器的响应信息</p></li><li><p>Response体系结构</p><blockquote></blockquote><table><thead><tr><th align="center"><div align="center"/>ServletResponse</th></tr></thead><tbody><tr><td align="center">⬆</td></tr><tr><td align="center">HttpServletResponse</td></tr><tr><td align="center">⬆</td></tr><tr><td align="center">org.apache.catalina.connector.ResponseFacade 实现类(由Tomcat提供)</td></tr></tbody></table></li></ul><h4 id="2-2-设置Http响应消息"><a href="#2-2-设置Http响应消息" class="headerlink" title="2.2 设置Http响应消息"></a>2.2 设置Http响应消息</h4><h5 id="2-2-1-响应行"><a href="#2-2-1-响应行" class="headerlink" title="2.2.1 响应行"></a>2.2.1 响应行</h5><ul><li>格式<br>协议/版本号 状态码</li><li>例如<br>HTTP/1.1 200</li><li>API<blockquote></blockquote><table><thead><tr><th align="center">说明</th><th align="center">API</th></tr></thead><tbody><tr><td align="center">设置状态码</td><td align="center">void setStatus()</td></tr></tbody></table></li></ul><h5 id="2-2-2-响应头"><a href="#2-2-2-响应头" class="headerlink" title="2.2.2 响应头"></a>2.2.2 响应头</h5><ul><li>格式<br>响应头名称:响应头的值</li><li>例如<br>Location:<a href="http://www.oracle.com">http://www.oracle.com</a></li><li>API<blockquote></blockquote><table><thead><tr><th align="center">说明</th><th align="center">API</th></tr></thead><tbody><tr><td align="center">设置指定头名称和对应的值</td><td align="center">void setHeader(String name,String vale);</td></tr></tbody></table></li></ul><h5 id="2-2-3-响应体"><a href="#2-2-3-响应体" class="headerlink" title="2.2.3 响应体"></a>2.2.3 响应体</h5><ul><li>API(输出流对象)<blockquote></blockquote><table><thead><tr><th align="center">说明</th><th align="center">API</th></tr></thead><tbody><tr><td align="center">字符输出流</td><td align="center">PrintWriter getWriter()</td></tr><tr><td align="center">字节输出流</td><td align="center">ServletOutputStream getOutputStream()</td></tr></tbody></table></li></ul><p><strong>注意</strong>:在同一个Servlet中，不能同时存在两种流，互斥</p><h4 id="2-3-响应重定向"><a href="#2-3-响应重定向" class="headerlink" title="2.3 响应重定向"></a>2.3 响应重定向</h4><h5 id="2-3-1-重定向特点"><a href="#2-3-1-重定向特点" class="headerlink" title="2.3.1 重定向特点"></a>2.3.1 重定向特点</h5><ul><li>地址栏会发生改变</li><li>重定向是二次请求</li><li>重定向是客户端(浏览器)行为,可以跳转到服务器外部资源</li><li>不能使用request域共享数据</li></ul><h5 id="2-3-2-方式一"><a href="#2-3-2-方式一" class="headerlink" title="2.3.2 方式一"></a>2.3.2 方式一</h5><table><thead><tr><th align="center">说明</th><th align="center">API</th></tr></thead><tbody><tr><td align="center">设置状态码</td><td align="center">response.setStatus(302)</td></tr><tr><td align="center">设置响应头Location</td><td align="center">response.setHeader(“Location”,”重定向网络地址”);</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/AServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"AServlet Run"</span>);</span><br><span class="line">       resp.setStatus(<span class="number">302</span>);</span><br><span class="line">       resp.setHeader(<span class="string">"Location"</span>,<span class="string">"/Day35_war_exploded/BServlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/BServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Bservlet Run"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-3-3-方式二"><a href="#2-3-3-方式二" class="headerlink" title="2.3.3 方式二"></a>2.3.3 方式二</h5><table><thead><tr><th align="center">说明</th><th align="center">API</th></tr></thead><tbody><tr><td align="center">response专门处理重定向的方法</td><td align="center">response.sendRedirect(“重定向网络地址”)</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/AServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"AServlet Run"</span>);</span><br><span class="line">        resp.sendRedirect(<span class="string">"http://www.baidu.com"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-3-4-转发与重定向区别"><a href="#2-3-4-转发与重定向区别" class="headerlink" title="2.3.4 转发与重定向区别"></a>2.3.4 转发与重定向区别</h5><ul><li>哪个对象 </li></ul><table><thead><tr><th align="center"></th><th align="center">API</th></tr></thead><tbody><tr><td align="center">转发(request对象的方法)</td><td align="center">request.getRequestDispatcher(“/bServlet”).forward(request,response);</td></tr><tr><td align="center">重定向(response对象的方法)</td><td align="center">response.sendRedirect(“/Day35_war_exploded/bServlet”);</td></tr></tbody></table><ul><li>几次请求 <blockquote></blockquote><table><thead><tr><th align="center"></th><th align="left">转发</th><th align="left">重定向</th></tr></thead><tbody><tr><td align="center">地址栏</td><td align="left">没有改变</td><td align="left">发生了改变</td></tr><tr><td align="center">浏览器</td><td align="left">发了一次请求</td><td align="left">发了两次请求</td></tr><tr><td align="center">服务器</td><td align="left">只有一对请求和响应对象</td><td align="left">有两对请求和响应对象</td></tr><tr><td align="center">发生的位置</td><td align="left">服务器</td><td align="left">浏览器</td></tr></tbody></table></li></ul><ul><li>小结 <blockquote></blockquote><table><thead><tr><th align="center">写法</th><th align="left">说明</th></tr></thead><tbody><tr><td align="center">转发</td><td align="left">(“/servlet资源路径”) 服务器内部行为</td></tr><tr><td align="center">重定向</td><td align="left">(“/虚拟路径(项目名)/servlet资源路径”) 浏览器外部行为</td></tr></tbody></table></li></ul><p><strong>使用场景</strong> </p><blockquote></blockquote><table><thead><tr><th align="center"><strong>使用场景</strong></th><th align="left">说明</th></tr></thead><tbody><tr><td align="center">如果需要传递数据(request域)</td><td align="left">使用转发</td></tr><tr><td align="center">如果不需要传递数据(request域)</td><td align="left">使用重定向</td></tr></tbody></table><h4 id="2-4-响应定时刷新"><a href="#2-4-响应定时刷新" class="headerlink" title="2.4 响应定时刷新"></a>2.4 响应定时刷新</h4><table><thead><tr><th align="center">说明</th><th align="center">API</th></tr></thead><tbody><tr><td align="center">通过response设置响应头Refresh</td><td align="center">response.setHeader(“Refresh”,”间隔时间(秒);跳转页面”)</td></tr></tbody></table><blockquote></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RefreshServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RefreshServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.setHeader(<span class="string">"Refresh"</span>,<span class="string">"3;http://www.baidu.com"</span>);</span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        resp.getWriter().write(<span class="string">"Success,Redirect After 3 seconds"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-5-响应中文"><a href="#2-5-响应中文" class="headerlink" title="2.5 响应中文"></a>2.5 响应中文</h4><p>步骤:</p><blockquote></blockquote><table><thead><tr><th align="center">说明</th><th align="center">API</th></tr></thead><tbody><tr><td align="center"><strong>统一服务器编码:</strong>指定服务器响应编码方式</td><td align="center">resp.setContentType(“text/html;charset=utf-8”);</td></tr><tr><td align="center">通过response获取字符输出流</td><td align="center">PrintWriter pw = response.getWriter();</td></tr><tr><td align="center">通过字符输出流输出文本</td><td align="center">pw.write()</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/EncodeServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//可以解决客户端中文乱码，但是编码不统一</span></span><br><span class="line"><span class="comment">//        resp.setCharacterEncoding("GBK");</span></span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="comment">//        PrintWriter pw = resp.getWriter();</span></span><br><span class="line"><span class="comment">//        pw.write("中文");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//链式编程</span></span><br><span class="line">        resp.getWriter().write(<span class="string">"中文"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h1><h4 id="3-1-点击切换验证码"><a href="#3-1-点击切换验证码" class="headerlink" title="3.1 点击切换验证码"></a>3.1 点击切换验证码</h4><ul><li>在页面展示登陆验证码，点击可以更换新验证码</li><li>作用:防止表单的恶意提交</li><li>本质:图片</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/Day35_war_exploded/CheckCodeServlet"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"image1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"image1"</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//reset src path</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// new Date().getTime()为了欺骗浏览器使用不同src，强制刷新</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.src = <span class="string">'/Day35_war_exploded/CheckCodeServlet?'</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CheckCodeServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckCodeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//  创建画布</span></span><br><span class="line">        <span class="keyword">int</span> width = <span class="number">120</span>;</span><br><span class="line">        <span class="keyword">int</span> height = <span class="number">40</span>;</span><br><span class="line">        BufferedImage bufferedImage = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="comment">//  获得画笔</span></span><br><span class="line">        Graphics g = bufferedImage.getGraphics();</span><br><span class="line">        <span class="comment">//  填充背景颜色</span></span><br><span class="line">        g.setColor(Color.white);</span><br><span class="line">        g.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        <span class="comment">//  绘制边框</span></span><br><span class="line">        g.setColor(Color.red);</span><br><span class="line">        g.drawRect(<span class="number">0</span>, <span class="number">0</span>, width - <span class="number">1</span>, height - <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//  生成随机字符</span></span><br><span class="line">        <span class="comment">//  准备数据</span></span><br><span class="line">        String data = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890"</span>;</span><br><span class="line">        <span class="comment">//  准备随机对象</span></span><br><span class="line">        Random r = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="comment">//  声明一个变量 保存验证码</span></span><br><span class="line">        String code = <span class="string">""</span>;</span><br><span class="line">        <span class="comment">//  书写4个随机字符</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//  设置字体</span></span><br><span class="line">            g.setFont(<span class="keyword">new</span> Font(<span class="string">"宋体"</span>, Font.BOLD, <span class="number">28</span>));</span><br><span class="line">            <span class="comment">//  设置随机颜色</span></span><br><span class="line">            g.setColor(<span class="keyword">new</span> Color(r.nextInt(<span class="number">255</span>), r.nextInt(<span class="number">255</span>), r.nextInt(<span class="number">255</span>)));</span><br><span class="line"></span><br><span class="line">            String str = data.charAt(r.nextInt(data.length())) + <span class="string">""</span>;</span><br><span class="line">            g.drawString(str, <span class="number">10</span> + i * <span class="number">28</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//  将新的字符 保存到验证码中</span></span><br><span class="line">            code = code + str;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//  绘制干扰线</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//  设置随机颜色</span></span><br><span class="line">            g.setColor(<span class="keyword">new</span> Color(r.nextInt(<span class="number">255</span>), r.nextInt(<span class="number">255</span>), r.nextInt(<span class="number">255</span>)));</span><br><span class="line"></span><br><span class="line">            g.drawLine(r.nextInt(width), r.nextInt(height), r.nextInt(width), r.nextInt(height));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  将验证码 打印到控制台</span></span><br><span class="line">        System.out.println(code);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  将验证码放到session中</span></span><br><span class="line">        req.getSession().setAttribute(<span class="string">"code_session"</span>, code);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  将画布显示在浏览器中</span></span><br><span class="line">        ImageIO.write(bufferedImage, <span class="string">"jpg"</span>, resp.getOutputStream());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-文件下载"><a href="#3-2-文件下载" class="headerlink" title="3.2 文件下载"></a>3.2 文件下载</h4><ul><li>用户点击页面的链接，浏览器开始下载文件。</li></ul><h5 id="3-2-1-使用链接下载文件"><a href="#3-2-1-使用链接下载文件" class="headerlink" title="3.2.1 使用链接下载文件"></a>3.2.1 使用链接下载文件</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Day35_war_exploded/download/web.xml"</span>&gt;</span>Download_XML<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>缺点<blockquote><p>浏览器可识别的媒体类型，是直接打开而不是下载<br>不能判断用户是否登录(vip)，进行限制</p></blockquote></li></ul><h5 id="3-2-2-使用Servlet下载文件"><a href="#3-2-2-使用Servlet下载文件" class="headerlink" title="3.2.2 使用Servlet下载文件"></a>3.2.2 使用Servlet下载文件</h5><p>二个响应头二个字节流</p><blockquote></blockquote><table><thead><tr><th align="left">说明</th><th align="left">API</th></tr></thead><tbody><tr><td align="left">被下载文件的字节输入流</td><td align="left">FileInputStream</td></tr><tr><td align="left">response字节输出流</td><td align="left">response字节输出流</td></tr><tr><td align="left">告知客户端下载文件的MIME类型</td><td align="left">Content-Type:MIME类型</td></tr><tr><td align="left">告知浏览器以附件的方式保存</td><td align="left">Content-Disposition:attachment;filename=文件名</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Day35_war_exploded/DownloadServlet?filename=web.xml"</span>&gt;</span>Download_XML<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/DownloadServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownloadServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取文件名</span></span><br><span class="line">        String filename = req.getParameter(<span class="string">"filename"</span>);</span><br><span class="line">        <span class="comment">//获取文件真实路径，封装字节输入流</span></span><br><span class="line">        ServletContext servletContext = req.getServletContext();</span><br><span class="line">        String realPath = servletContext.getRealPath(<span class="string">"/download/"</span> + filename);</span><br><span class="line">        FileInputStream in = <span class="keyword">new</span> FileInputStream(realPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//告诉浏览器下载文件MIME类型 Content-Type</span></span><br><span class="line">        String mimeType = servletContext.getMimeType(filename);</span><br><span class="line">        resp.setContentType(mimeType);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//告知浏览器以附件的方式保存 Content-Disposition:attachment;filename=文件名</span></span><br><span class="line">        <span class="comment">//解决中文乱码和浏览器兼容性</span></span><br><span class="line">        String userAgent = req.getHeader(<span class="string">"user-agent"</span>);</span><br><span class="line">        <span class="comment">//调用工具处理</span></span><br><span class="line">        filename=DownLoadUtils.getName(userAgent,filename);</span><br><span class="line">        resp.setHeader(<span class="string">"content-disposition"</span>, <span class="string">"attachment;filename="</span> + filename);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        resp.setHeader("Content-Disposition", "attachment;filename=" + filename);</span></span><br><span class="line">        <span class="comment">//获取response的字节输出流</span></span><br><span class="line">        ServletOutputStream out = resp.getOutputStream();</span><br><span class="line">        <span class="comment">//IO流Copy</span></span><br><span class="line"><span class="comment">//        byte[] bys = new byte[1024];</span></span><br><span class="line"><span class="comment">//        int len = 0;</span></span><br><span class="line"><span class="comment">//        while ((len = in.read(bys)) != -1) &#123;</span></span><br><span class="line"><span class="comment">//            out.write(bys, 0, len);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        IoUtil.copy(in,out);</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        out.close();<span class="comment">//可以交给Tomcat关闭</span></span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>中文乱码问题<br>如果该下载文件名是中文的话，会出现乱码…<br>谷歌和绝大多数的浏览器是通过 url编码<br>URLEncode() 编码<br>URLDecode() 解码<br>火狐浏览器 base64编码</li></ul><ul><li>如下工具包解决乱码问题:<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownLoadUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getName</span><span class="params">(String agent, String filename)</span> <span class="keyword">throws</span> UnsupportedEncodingException </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (agent.contains(<span class="string">"Firefox"</span>)) &#123;</span><br><span class="line"><span class="comment">// 火狐浏览器</span></span><br><span class="line">BASE64Encoder base64Encoder = <span class="keyword">new</span> BASE64Encoder();</span><br><span class="line">filename = <span class="string">"=?utf-8?B?"</span> + base64Encoder.encode(filename.getBytes(<span class="string">"utf-8"</span>)) + <span class="string">"?="</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 其它浏览器</span></span><br><span class="line">filename = URLEncoder.encode(filename, <span class="string">"utf-8"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> filename;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h6 id="3-2-2-1-hutool工具包"><a href="#3-2-2-1-hutool工具包" class="headerlink" title="3.2.2.1 hutool工具包"></a>3.2.2.1 hutool工具包</h6><p>官网:<a href="https://www.hutool.cn/">https://www.hutool.cn/</a></p><ul><li>hutool-all-5.2.3.jar</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h2 id="一-ServletContext-1"><a href="#一-ServletContext-1" class="headerlink" title="一 ServletContext"></a>一 ServletContext</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li>代表当前web项目对象</li></ul><h3 id="主要作用"><a href="#主要作用" class="headerlink" title="主要作用"></a>主要作用</h3><ul><li><p>共享数据（域对象）</p></li><li><p>获取资源文件在服务器上真实路径</p></li><li><p>获取全局的配置参数</p><ul><li>web.xml中配置<context-param></li></ul></li><li><p>获取文件MIME类型</p><ul><li>互联网传输数据时，识别文件的类型</li></ul></li></ul><h3 id="案例：统计网站的访问次数"><a href="#案例：统计网站的访问次数" class="headerlink" title="案例：统计网站的访问次数"></a>案例：统计网站的访问次数</h3><h2 id="二-Response-1"><a href="#二-Response-1" class="headerlink" title="二 Response"></a>二 Response</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><ul><li>开发人员可以使用response对象的方法，设置要返回给浏览器的响应信息</li></ul><h3 id="Response设置响应消息"><a href="#Response设置响应消息" class="headerlink" title="Response设置响应消息"></a>Response设置响应消息</h3><ul><li><p>设置响应行</p><ul><li>void setStatus(int sc)</li></ul></li><li><p>设置响应头</p><ul><li>void setHeader(String name, String value)  </li></ul></li><li><p>设置响应体</p><ul><li>ServletOutputStream getOutputStream() 字节输出流</li><li>PrintWriter getWriter() 字符输出流</li></ul></li></ul><h3 id="响应重定向"><a href="#响应重定向" class="headerlink" title="响应重定向"></a>响应重定向</h3><ul><li><p>转发与重定向的区别</p><ul><li><p>转发</p><ul><li>地址栏： 没有改变</li><li>浏览器： 发了一次请求</li><li>服务器： 只有一对请求和响应对象</li><li>发生的位置： 服务器</li></ul></li><li><p>重定向</p><ul><li>地址栏： 发生了改变</li><li>浏览器： 发了两次请求</li><li>服务器： 有两对请求和响应对象</li><li>发生的位置： 浏览器</li></ul></li></ul></li></ul><h3 id="响应定时刷新"><a href="#响应定时刷新" class="headerlink" title="响应定时刷新"></a>响应定时刷新</h3><h3 id="响应中文"><a href="#响应中文" class="headerlink" title="响应中文"></a>响应中文</h3><ul><li>response.setContentType(“text/html;charset=utf-8”);</li></ul><h2 id="三-综合案例"><a href="#三-综合案例" class="headerlink" title="三 综合案例"></a>三 综合案例</h2><h3 id="点击切换验证码"><a href="#点击切换验证码" class="headerlink" title="点击切换验证码"></a>点击切换验证码</h3><ul><li>随机数欺骗浏览器</li></ul><h3 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h3><ul><li>解决了中文编码</li><li>hutool工具包</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（三十四）</title>
      <link href="/2020/04/15/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E5%9B%9B%EF%BC%89/"/>
      <url>/2020/04/15/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li><p>Request</p><a id="more"></a><h1 id="一-Request概述"><a href="#一-Request概述" class="headerlink" title="一.Request概述"></a>一.Request概述</h1><p>用户通过浏览器访问服务器时,Tomcat将HTTP请求中所有信息封装在Request对象中<br>作用:开发人员可以通过Request对象方法，来获取浏览器发送的所有信息</p></li><li><p>Request体系结构</p></li></ul><table><thead><tr><th align="center"><div align="center"/>ServletRequest</th></tr></thead><tbody><tr><td align="center">⬆</td></tr><tr><td align="center">HttpServletRequest</td></tr><tr><td align="center">⬆</td></tr><tr><td align="center">org.apache.catalina.connector.RequestFacade(由tomcat厂商提供实现类)</td></tr></tbody></table><h1 id="二-Request获取Http请求信息"><a href="#二-Request获取Http请求信息" class="headerlink" title="二.Request获取Http请求信息"></a>二.Request获取Http请求信息</h1><h4 id="2-1-获取请求行信息"><a href="#2-1-获取请求行信息" class="headerlink" title="2.1 获取请求行信息"></a>2.1 获取请求行信息</h4><ul><li>例如:<br>  GET /Day34_Request_war_exploded/RequestDemo01 HTTP/1.1</li><li>相关API:<blockquote></blockquote><table><thead><tr><th align="center"><div align="center"/>说明</th><th align="left"><div align="center"/>API</th></tr></thead><tbody><tr><td align="center">获取请求方式</td><td align="left">String getMethod()</td></tr><tr><td align="center">获取项目虚拟路径名</td><td align="left">String getContextPath()</td></tr><tr><td align="center">获取URI<br/>(统一资源标识符)</td><td align="left">String getRequestURI()</td></tr><tr><td align="center">获取URL<br/>(统一资源定位符)</td><td align="left">StringBuffer getRequestURL()</td></tr><tr><td align="center">获取协议和版本号</td><td align="left">String getProtocol()</td></tr><tr><td align="center">获取客户端IP</td><td align="left">String getRemoteAddr()</td></tr></tbody></table></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RequestDemo01"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo01</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//        System.out.println(req);</span></span><br><span class="line">        <span class="comment">//1.获取请求方式</span></span><br><span class="line">        System.out.println(<span class="string">"Request Method "</span>+req.getMethod());</span><br><span class="line">        <span class="comment">//2.获取项目路径</span></span><br><span class="line">        System.out.println(<span class="string">"Project Path "</span>+req.getContextPath());</span><br><span class="line">        <span class="comment">//3.获取URI</span></span><br><span class="line">        System.out.println(<span class="string">"URI "</span>+req.getRequestURI());</span><br><span class="line">        <span class="comment">//4.获取URL</span></span><br><span class="line">        System.out.println(<span class="string">"URI "</span>+req.getRequestURL());</span><br><span class="line">        <span class="comment">//5.协议和版本</span></span><br><span class="line">        System.out.println(<span class="string">"Protocol &amp; Version "</span>+ req.getProtocol());</span><br><span class="line">        <span class="comment">//6.客户端IP</span></span><br><span class="line">        System.out.println(<span class="string">"IP "</span>+ req.getRemoteAddr());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;输出</span><br><span class="line">Request Method: GET</span><br><span class="line">Project Path: &#x2F;Day34_Request_war_exploded</span><br><span class="line">URI: &#x2F;Day34_Request_war_exploded&#x2F;RequestDemo01</span><br><span class="line">URL: http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;Day34_Request_war_exploded&#x2F;RequestDemo01</span><br><span class="line">Protocol &amp; Version: HTTP&#x2F;1.1</span><br><span class="line">IP: 127.0.0.1</span><br></pre></td></tr></table></figure><h4 id="2-2-获取请求头信息"><a href="#2-2-获取请求头信息" class="headerlink" title="2.2 获取请求头信息"></a>2.2 获取请求头信息</h4><ul><li><p>例如:</p><blockquote><p>Host:locaohost:8080</p></blockquote></li><li><p>相关API</p><blockquote></blockquote><table><thead><tr><th align="center"><div align="center"/>说明</th><th align="left"><div align="center"/>API</th></tr></thead><tbody><tr><td align="center">获取请求头名称对应的值</td><td align="left">String getHeader(String name)</td></tr><tr><td align="center">获取所有请求头的名称</td><td align="left">Enumeration<String> getHeaderNames()</td></tr></tbody></table><blockquote></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RequestDemo02"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo02</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取所有请求头名称</span></span><br><span class="line">        Enumeration&lt;String&gt; headerNames = req.getHeaderNames();</span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">while</span> (headerNames.hasMoreElements())&#123;</span><br><span class="line">        <span class="comment">//取出元素名(请求头名称)</span></span><br><span class="line">            String name = headerNames.nextElement();</span><br><span class="line">            <span class="comment">//根据名称获取值</span></span><br><span class="line">            String value = req.getHeader(name);</span><br><span class="line">            System.out.println(value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例:模拟视频防盗链</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RefereRequest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RefereRequest</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//0.设置编码，让中文不乱码</span></span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span><br><span class="line">        <span class="comment">//1.获取请求来源(如果是浏览器地址栏直接访问，referer是Null)</span></span><br><span class="line">        String referer = req.getHeader(<span class="string">"referer"</span>);</span><br><span class="line">        <span class="comment">//2.判断是否自己网站发起的请求</span></span><br><span class="line">        <span class="keyword">if</span>(referer != <span class="keyword">null</span> &amp;&amp; referer.startsWith(<span class="string">"http://127.0.0.1:8080"</span>))&#123;</span><br><span class="line">            resp.getWriter().write(<span class="string">"Play Video"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            resp.getWriter().write(<span class="string">"Permission Denied"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例:浏览器兼容性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserAgentRequest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserAgentRequest</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//0.设置语言编码</span></span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span><br><span class="line">        <span class="comment">//1.获取浏览器版本信息</span></span><br><span class="line">        String useragent = req.getHeader(<span class="string">"user-agent"</span>);</span><br><span class="line">        <span class="comment">//2.判断浏览器版本</span></span><br><span class="line">        System.out.println(useragent);</span><br><span class="line">        <span class="keyword">if</span> (useragent.contains(<span class="string">"Chrome"</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">"Chrome"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (useragent.contains(<span class="string">"Firefox"</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">"Firefox"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Others"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-获取请求参数-请求体"><a href="#2-3-获取请求参数-请求体" class="headerlink" title="2.3 获取请求参数(请求体)"></a>2.3 获取请求参数(请求体)</h4><ul><li>不论是get还是post请求方式,都可以使用下列方式来获取请求参数<br>参数:<br>username=jack&amp;password=123<blockquote></blockquote><table><thead><tr><th align="center"><div align="center"/>说明</th><th align="left"><div align="center"/>API</th></tr></thead><tbody><tr><td align="center">获取指定参数名的值</td><td align="left">String getParameter(String name);</td></tr><tr><td align="center">获取指定参数名的值数组</td><td align="left">String[] getParameterValues(String name);</td></tr><tr><td align="center">获取所有参数名和对应值数组</td><td align="left">Map&lt;String,String[]&gt; getParameterMap()</td></tr></tbody></table><blockquote></blockquote></li></ul><ul><li>中文乱码<br>get:在Tomcat 8 及以上版本，内部URL编码(UTF-8)<br>post:编码解码不一致，造成乱码现象<blockquote><p>客户端(浏览器)编码UTF-8<br>服务器默认解码:ISO-8859-1<br>指定解码:void setCharacterEncoding(String env)<br>注意:指定解码必须在行首</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RequestDemo03"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo03</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//Get manually</span></span><br><span class="line"><span class="comment">//        String username = req.getParameter("username");</span></span><br><span class="line"><span class="comment">//        System.out.println(username);</span></span><br><span class="line"><span class="comment">//        String password = req.getParameter("password");</span></span><br><span class="line"><span class="comment">//        System.out.println(password);</span></span><br><span class="line"><span class="comment">//        String[] hobbies = req.getParameterValues("hobby");</span></span><br><span class="line"><span class="comment">//        System.out.println(Arrays.toString(hobbies));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//Automatic acquisition</span></span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line">        parameterMap.forEach((k, v) -&gt; &#123;</span><br><span class="line">            System.out.println(k + <span class="string">""</span> + Arrays.toString(v));</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        <span class="comment">//使用方法一样，可以直接调用get方法</span></span><br><span class="line">        <span class="keyword">this</span>.doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-BeanUtils"><a href="#2-4-BeanUtils" class="headerlink" title="2.4 BeanUtils"></a>2.4 BeanUtils</h4><ul><li><p>Apache提供的工具类，简化参数封装，即将前端数据直接封装到想要的JavaBean中</p></li><li><p>导入Jar包</p></li><li><p>使用工具类封装数据(要求:map集合的key,必须为JavaBean属性名)</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String[] hobby;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 此处省略getter setter toString</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RequestDemo04"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo04</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//Get manually</span></span><br><span class="line">        String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        System.out.println(username);</span><br><span class="line">        String password = req.getParameter(<span class="string">"password"</span>);</span><br><span class="line">        System.out.println(password);</span><br><span class="line">        String[] hobbies = req.getParameterValues(<span class="string">"hobby"</span>);</span><br><span class="line">        <span class="comment">//Automatic acquisition</span></span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line">        parameterMap.forEach((k, v) -&gt; &#123;</span><br><span class="line">            System.out.println(k + <span class="string">""</span> + Arrays.toString(v));</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//将前端表单数据赋值到user对象中,保存到数据库</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(username);</span><br><span class="line">        user.setPassword(password);</span><br><span class="line">        user.setHobby(hobbies);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        <span class="comment">//使用方法一样，可以直接调用get方法</span></span><br><span class="line">        <span class="keyword">this</span>.doGet(req, resp);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用BeanUtils快速封装数据到User对象中</span></span><br><span class="line">        <span class="comment">//map集合的key,必须为JavaBean属性名</span></span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BeanUtils.populate(user, parameterMap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Bean Utils:<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/Day34_Request_war_exploded/RequestDemo04"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    Name:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    Password:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    Hobby:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"smoke"</span>&gt;</span>smoke</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span>&gt;</span>drink</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span>&gt;</span>perm<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Post Submit Method"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-4-1-变量名是否等于属性"><a href="#2-4-1-变量名是否等于属性" class="headerlink" title="2.4.1 变量名是否等于属性"></a>2.4.1 变量名是否等于属性</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//成员变量名username</span></span><br><span class="line"><span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//属性Username，是方法的命名</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//属性是getter/setter方法截取之后的产物</span></span><br><span class="line"><span class="comment">//通常情况下,使用IDEA自动生成getter&amp;setter时，变量名 equals 属性</span></span><br><span class="line">getUsername-Username-username</span><br><span class="line"></span><br><span class="line"><span class="comment">//不一样的情况</span></span><br><span class="line"><span class="comment">//成员变量名</span></span><br><span class="line"><span class="keyword">private</span> String user;</span><br><span class="line"><span class="comment">//属性名</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三-Request其他功能"><a href="#三-Request其他功能" class="headerlink" title="三.Request其他功能"></a>三.Request其他功能</h1><h4 id="3-1-请求转发"><a href="#3-1-请求转发" class="headerlink" title="3.1 请求转发"></a>3.1 请求转发</h4><ul><li>一种在服务器内部的资源跳转方式</li></ul><table><thead><tr><th align="center"><div align="center"/>说明</th><th align="left"><div align="center"/>API</th></tr></thead><tbody><tr><td align="center">通过request对象，获得转发器对象</td><td align="left">RequestDispatcher getRequestDispatcher(String path);</td></tr><tr><td align="center">通过转发器对象，实现转发功能</td><td align="left">void forward(ServletRequest request,ServletResponse response);</td></tr></tbody></table><ul><li>请求转发的特点:<blockquote><p>浏览器:只发了一次请求<br>地址栏:没有改变<br>只能转发到服务器内部资源</p></blockquote></li><li>链式编程<br>request.getRequestDispatcher(“/bServlet”).forward(reqeust,response)</li></ul><h4 id="3-2-域对象-共享数据"><a href="#3-2-域对象-共享数据" class="headerlink" title="3.2 域对象(共享数据)"></a>3.2 域对象(共享数据)</h4><ul><li><p>域对象:一个有作用访问的对象，可以在范围内共享数据</p></li><li><p>request域:代表一次请求范围,一般用于一次请求中转发的多个资源中共享数据</p><blockquote></blockquote><table><thead><tr><th align="center"><div align="center"/>说明</th><th align="left"><div align="center"/>API</th></tr></thead><tbody><tr><td align="center">设置数据</td><td align="left">void setAttribute(String name,Object o);</td></tr><tr><td align="center">获取数据</td><td align="left">Object getAttribute(String name)</td></tr><tr><td align="center">删除数据</td><td align="left">void removeAttribute(String name)</td></tr></tbody></table></li><li><p>生命周期</p><table><thead><tr><th align="center"></th><th align="left"></th></tr></thead><tbody><tr><td align="center">创建时间</td><td align="left">用户发送请求时，发送request</td></tr><tr><td align="center">销毁时间</td><td align="left">服务器返回响应时，销毁request</td></tr><tr><td align="center">作用范围</td><td align="left">一次请求，包含多次转发</td></tr></tbody></table></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/AServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//转发到BServlet</span></span><br><span class="line">        <span class="comment">//1.获取转发器对象 path=@WebServlet("/BServlet")</span></span><br><span class="line"><span class="comment">//        RequestDispatcher requestDispatcher = req.getRequestDispatcher("/BServlet");</span></span><br><span class="line">        <span class="comment">//2.实现转发功能</span></span><br><span class="line"><span class="comment">//        requestDispatcher.forward(req,resp);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//AServlet存一个数据</span></span><br><span class="line">        req.setAttribute(<span class="string">"name"</span>,<span class="string">"This is A Object"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//链式编程</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/BServlet"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/BServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().write(<span class="string">"B"</span>);</span><br><span class="line">        String name = (String) req.getAttribute(<span class="string">"name"</span>);</span><br><span class="line">        resp.getWriter().write(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Day34_Request_war_exploded/AServlet"</span>&gt;</span>AServlet<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-3-获取ServletContext对象"><a href="#3-3-获取ServletContext对象" class="headerlink" title="3.3 获取ServletContext对象"></a>3.3 获取ServletContext对象</h4><ul><li>应用上下文对象，表示一个web项目</li><li>通过request，可以获取ServletContext对象<br>public ServletContext getServletContext();</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RequestDemo05"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestDemo05</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取当前web项目对象</span></span><br><span class="line">        ServletContext servletContext = req.getServletContext();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四-用户登陆案例"><a href="#四-用户登陆案例" class="headerlink" title="四.用户登陆案例"></a>四.用户登陆案例</h1><p>实现用户的登录功能<br>登录成功跳转到SuccessServlet展示:登录成功!xxx,欢迎您<br>登录失败跳转到FailServlet展示:登录失败，用户名或密码错误</p><ul><li>创建web项目，导入BeanUtils(工具类)</li><li>编写index.html</li><li>User实体类</li><li>创建LoginServlet,SuccessServlet，FailedServlet</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/Day34_Request_war_exploded/loginServlet"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span>Login</span><br><span class="line">Name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">Password:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Login Submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"><span class="comment">//此处getter &amp; setter ，toString省略</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/loginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.设置request解码方式</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        <span class="comment">//2.获取浏览器参数，map集合</span></span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line">        <span class="comment">//3.使用BeanUtils工具类，封装到User中</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BeanUtils.populate(user, parameterMap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.判断(写一个file文件，存储真实到用户名密码，判断)</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"jack"</span>.equals(user.getUsername()) &amp;&amp; <span class="string">"123"</span>.equals(user.getPassword()))&#123;</span><br><span class="line">            req.setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/successServlet"</span>).forward(req, resp);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/failedServlet"</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/successServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SuccessServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.从request域获取user对象</span></span><br><span class="line">        User user = (User) req.getAttribute(<span class="string">"user"</span>);</span><br><span class="line">        <span class="comment">//2.提示</span></span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        resp.getWriter().write(user.getUsername()+<span class="string">"Successful"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/failedServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FailedServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        resp.getWriter().write(<span class="string">"Login Failed,Wrong Username or Password"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="附录-Servlet模版设置"><a href="#附录-Servlet模版设置" class="headerlink" title="附录:Servlet模版设置"></a>附录:Servlet模版设置</h1><ul><li>IDEA-Settings-Editor-File and Code Templates-Other-Web&gt;Jaava code templates&gt;Servlet Annotated Class.java<br>更改为如下代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#if ($&#123;PACKAGE_NAME&#125; &amp;&amp; $&#123;PACKAGE_NAME&#125; != "")package $&#123;PACKAGE_NAME&#125;;#end #parse("File Header.java") @javax.servlet.annotation.WebServlet("/$&#123;Class_Name&#125;")</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> $</span>&#123;Class_Name&#125; extends javax.servlet.http.HttpServlet &#123;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response)</span> <span class="keyword">throws</span> javax.servlet.ServletException, java.io.IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doPost(request,response); &#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response)</span> <span class="keyword">throws</span> javax.servlet.ServletException, java.io.IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h2 id="一-Request概述-1"><a href="#一-Request概述-1" class="headerlink" title="一 Request概述"></a>一 Request概述</h2><h3 id="开发人员可以通过request对象方法，来获取浏览器发送的所有信息"><a href="#开发人员可以通过request对象方法，来获取浏览器发送的所有信息" class="headerlink" title="开发人员可以通过request对象方法，来获取浏览器发送的所有信息."></a>开发人员可以通过request对象方法，来获取浏览器发送的所有信息.</h3><h2 id="二-Request获取Http请求信息-1"><a href="#二-Request获取Http请求信息-1" class="headerlink" title="二 Request获取Http请求信息"></a>二 Request获取Http请求信息</h2><h3 id="行"><a href="#行" class="headerlink" title="行"></a>行</h3><ul><li><p>getMethod()</p><ul><li><p>请求方式</p><ul><li>get</li><li>post</li></ul></li></ul></li><li><p>getContextPath()</p><ul><li>项目名（虚拟路径）</li></ul></li><li><p>getRemoteAddr()</p><ul><li>客户端的ip地址</li></ul></li></ul><h3 id="头"><a href="#头" class="headerlink" title="头"></a>头</h3><ul><li><p>getHeader(String key)</p><ul><li><p>Referer</p><ul><li>防盗链</li></ul></li><li><p>User-Agent</p><ul><li>浏览器兼容器</li></ul></li></ul></li><li><p>getHeaderNames()</p></li></ul><h3 id="参数（体）"><a href="#参数（体）" class="headerlink" title="参数（体）"></a>参数（体）</h3><ul><li><p>api</p><ul><li>getParameter()</li><li>getParameterValues()</li><li>getParameterMap()</li></ul></li><li><p>BeanUtils工具类</p></li><li><p>中文乱码</p><ul><li>get：tomcat8及以上版本，解决了get方式乱码问题</li><li>post：request.setCharacterEncoding(“utf-8”);</li></ul></li></ul><h2 id="三-Request其他功能-1"><a href="#三-Request其他功能-1" class="headerlink" title="三 Request其他功能"></a>三 Request其他功能</h2><h3 id="请求转发"><a href="#请求转发" class="headerlink" title="请求转发"></a>请求转发</h3><ul><li><p>一种在服务器内部的资源跳转方式</p></li><li><p>request.getRequestDispatcher(“/内部资源”).forward(request,response);</p></li><li><p>特点</p><ul><li>转发是一次请求</li><li>浏览器地址栏不发生变化</li><li>只能跳转到服务器内部资源</li></ul></li></ul><h3 id="域对象（共享数据）"><a href="#域对象（共享数据）" class="headerlink" title="域对象（共享数据）"></a>域对象（共享数据）</h3><ul><li><p>api</p><ul><li>void setAttribute(String name, Object o)</li><li>Object getAttribute(String name)</li><li>void removeAttribute(String name)</li></ul></li><li><p>生命周期</p><ul><li><p>何时创建</p><ul><li>用户发送请求时</li></ul></li><li><p>何时销毁</p><ul><li>服务器做出响应后</li></ul></li><li><p>作用范围</p><ul><li>一次请求转发中</li></ul></li></ul></li></ul><h3 id="获取ServletContext"><a href="#获取ServletContext" class="headerlink" title="获取ServletContext"></a>获取ServletContext</h3><ul><li><p>api</p><ul><li>ServletContext getServletContext()</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（三十三)</title>
      <link href="/2020/04/13/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E4%B8%89%EF%BC%89/"/>
      <url>/2020/04/13/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>Servlet<a id="more"></a></li></ul><h1 id="一-Servlet概述"><a href="#一-Servlet概述" class="headerlink" title="一.Servlet概述"></a>一.Servlet概述</h1><p>Servlet 运行在服务端的Java小程序，是sun公司提供一套规范，用来处理客户端请求、响应给浏览器的动态资源。<br>但servlet的实质就是java代码，通过java的API动态的向客户端输出内容</p><ul><li>servlet= server+applet 运行在服务器端的java程序。</li><li>Servlet是一个接口，一个类要想通过浏览器被访问到,那么这个类就必须直接或间接的实现Servlet接口</li></ul><h1 id="二-Servlet快速入门"><a href="#二-Servlet快速入门" class="headerlink" title="二.Servlet快速入门"></a>二.Servlet快速入门</h1><h4 id="2-1-代码编写"><a href="#2-1-代码编写" class="headerlink" title="2.1 代码编写"></a>2.1 代码编写</h4><ul><li><p>创建web项目</p></li><li><p>编写普通java类,实现Servlet接口<br>写抽象方法(service方法)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对外提供服务</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    request:代表请求</span></span><br><span class="line"><span class="comment">    response:代表响应</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//向浏览器写一句话</span></span><br><span class="line">        servletResponse.getWriter().write(<span class="string">"QuickServlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//表示当前Servlet对象的描述信息</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"快速入门"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置web.xml<br>配置servlet网络访问路径</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">把QuickServlet交给tomcat管理</span></span><br><span class="line"><span class="comment">servlet-name:当前servlet的别名(使用类名即可)</span></span><br><span class="line"><span class="comment">servlet-class:全限定类名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>QuickServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Project.QuickServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">给servlet社长一个网络访问地址(路径)</span></span><br><span class="line"><span class="comment">servlet-name:给指定别名的servlet配置映射</span></span><br><span class="line"><span class="comment">url-pattern:网络访问地址(注意:必须以"/"开头)</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>QuickServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/QuickServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>部署web项目</li><li>启动测试</li></ul><h4 id="2-2-执行原理"><a href="#2-2-执行原理" class="headerlink" title="2.2 执行原理"></a>2.2 执行原理</h4><p>步骤:<br>Step 1: Browser通过 Domain 在网络中Request到该 Server(Tomcat)<br>Step 2: 找到该Server后，通过Project Name查找项目(Day32_Servlet_XML)<br>Step 3: 通过Source Name(QuickServlet)查找web.xml中同名的url-pattern标签<br>Step 4: 找到url-pattern同名标签后，查找其映射的servlet-name<br>Step 5: 通过servlet-name寻找servlet-class<br>Step 6: 通过反射机制创建QuickServlet<br>Step 7: 创建后，自动调用service方法,Response to Browser</p><h1 id="三-Servlet相关API"><a href="#三-Servlet相关API" class="headerlink" title="三.Servlet相关API"></a>三.Servlet相关API</h1><h4 id="3-1-生命周期相关"><a href="#3-1-生命周期相关" class="headerlink" title="3.1 生命周期相关"></a>3.1 生命周期相关</h4><h5 id="3-1-1-思想介绍"><a href="#3-1-1-思想介绍" class="headerlink" title="3.1.1 思想介绍"></a>3.1.1 思想介绍</h5><ul><li>生命周期:指的是一个对象从创建到销毁到过程</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//servlet对象创建时,调用此方法</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"LifeServlet Created"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用户访问servlet时,调用此方法</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"LifeServlet carried out"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//servlet对象销毁时,调用此方法</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"LifeServlet destroy"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>创建</p><blockquote><p>1)默认<br>用户第一次访问时,创建servlet,执行init方法<br>2）修改servlet创建时机<br>&lt;load-on-startup&gt;&lt;/load-on-startup&gt;</p></blockquote><table><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td>正数</td><td>服务器启动时创建<br/>(Tomcat默认1-3，建议4开始)</td></tr><tr><td>负数(默认值):-1</td><td>用户第一次访问时创建</td></tr></tbody></table></li><li><p>运行</p><blockquote><p>第二次开始，都调用执行service方法</p></blockquote></li><li><p>销毁</p><blockquote><p>服务器正常关闭时,销毁servlet，执行destroy方法</p></blockquote></li></ul><h5 id="3-1-2-代码演示"><a href="#3-1-2-代码演示" class="headerlink" title="3.1.2 代码演示"></a>3.1.2 代码演示</h5><ul><li><p>LifeServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LifeServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeServlet Created"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeServlet carried out"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeServlet destroy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>web.xml</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">servlet生命周期</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LifeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Project.Demo02.LifeServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>4<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LifeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/LifeServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-拓展-ServletConfig接口"><a href="#3-2-拓展-ServletConfig接口" class="headerlink" title="3.2 拓展:ServletConfig接口"></a>3.2 拓展:ServletConfig接口</h4><p>Tomcat在Servlet对象创建时,执行init()方法，并创建一个ServletConfig配置对象</p><ul><li>主要作用:读取web.xml配置文件Servlet中<init-param>信息,实现参数和代码的解耦</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodingServlet</span> <span class="keyword">implements</span> <span class="title">Servlet</span> </span>&#123;</span><br><span class="line">    <span class="comment">//定义全局变量</span></span><br><span class="line">    <span class="keyword">private</span> ServletConfig servletConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.servletConfig = servletConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> servletConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用户访问,执行service方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//        String encode = "UTF-8";</span></span><br><span class="line"><span class="comment">//        servletResponse.getWriter().write(encode);</span></span><br><span class="line">        String encode = getServletConfig().getInitParameter(<span class="string">"encode"</span>);</span><br><span class="line">        servletResponse.getWriter().write(encode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--servlet配置对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>EncodingServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Project.Demo02.EncodingServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encode<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>EncodingServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/EncodingServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="四-Servlet体系结构"><a href="#四-Servlet体系结构" class="headerlink" title="四.Servlet体系结构"></a>四.Servlet体系结构</h1><table><thead><tr><th align="center"><div align="center"/>Servlet</th><th align="left">顶级接口,提供了5个抽象方法</th></tr></thead><tbody><tr><td align="center">⬆</td><td align="left"></td></tr><tr><td align="center">GenericServlet</td><td align="left">抽象类,重写绝大多数的抽象方法，只需要开发者重写service方法</td></tr><tr><td align="center">⬆</td><td align="left"></td></tr><tr><td align="center">HttpServlet</td><td align="left">抽象类，处理Http协议的交互信息(请求，响应),根据不同的请求方式作出不同的处理</td></tr></tbody></table><h4 id="4-1-GenericServlet"><a href="#4-1-GenericServlet" class="headerlink" title="4.1 GenericServlet"></a>4.1 GenericServlet</h4><ul><li><p>编写普通Java类继承GenericServlet抽象类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo01</span> <span class="keyword">extends</span> <span class="title">GenericServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletDemo01 Created"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.getServletConfig();<span class="comment">//调用父类的配置对象</span></span><br><span class="line">        servletResponse.getWriter().write(<span class="string">"ServletDemo01 extends GenericServlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletDemo01 Destroyed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--servlet继承GenericServlet--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo01<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Project.Demo03_inherit.ServletDemo01<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encode<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo01<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/ServletDemo01<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-2-HttpServlet"><a href="#4-2-HttpServlet" class="headerlink" title="4.2 HttpServlet"></a>4.2 HttpServlet</h4><ul><li><p>编写前端HTML页面提交表单</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://localhost:8080/Day33_Servlet_war_exploded/ServletDemo02"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Update Form"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写普通java类，继承HttpServlet抽象类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo02</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().write(<span class="string">"Get"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().write(<span class="string">"Post"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--servlet继承HttpServlet--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo02<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Project.Demo03_inherit.ServletDemo02<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo02<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/ServletDemo02<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-Http错误"><a href="#4-3-Http错误" class="headerlink" title="4.3 Http错误"></a>4.3 Http错误</h4><ul><li><p>响应状态码405<br>方法没有重写，父类抛出405<br>例:<br>ServletDemo02 extends HttpServlet 没有重写get方法，而form使用get方法，则抛出父类405错误</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类方法</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    String protocol = req.getProtocol();</span><br><span class="line">    String msg = lStrings.getString(<span class="string">"http.method_get_not_supported"</span>);</span><br><span class="line">    <span class="keyword">if</span> (protocol.endsWith(<span class="string">"1.1"</span>)) &#123;</span><br><span class="line">        resp.sendError(<span class="number">405</span>, msg);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        resp.sendError(<span class="number">400</span>, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>响应状态码500<br>Java代码写错了</p></li></ul><h1 id="五-Servlet路径"><a href="#五-Servlet路径" class="headerlink" title="五.Servlet路径"></a>五.Servlet路径</h1><h4 id="5-1-url-patterns"><a href="#5-1-url-patterns" class="headerlink" title="5.1 url-patterns"></a>5.1 url-patterns</h4><p>作用:讲一个请求的网络地址和servlet建立一个映射关系</p><h5 id="5-1-1-Servlet映射多个路径"><a href="#5-1-1-Servlet映射多个路径" class="headerlink" title="5.1.1 Servlet映射多个路径"></a>5.1.1 Servlet映射多个路径</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo03</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().write(<span class="string">"ServletDemo3 Get Method Run"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().write(<span class="string">"ServletDemo3 Post Method Run"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    一个Servlet类可以映射多个网络访问地址        --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo03<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>Project.Demo04_URL_Partten.ServletDemo03<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    映射地址一   --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo03<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/ServletDemo03<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    映射地址二    --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo03<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/Demo03<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="5-1-2-url映射模式"><a href="#5-1-2-url映射模式" class="headerlink" title="5.1.2 url映射模式"></a>5.1.2 url映射模式</h5><p>配置&lt;url-pattern&gt;url地址取值可以是:</p><ul><li><p>精确匹配</p><blockquote><p>   /ServletDemo03</p></blockquote></li><li><p>目录匹配</p><blockquote><p>  aa/*</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo04</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().write(<span class="string">"ServletDemo4 Get Method Run"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().write(<span class="string">"ServletDemo4 Post Method Run"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--目录的匹配规则</span></span><br><span class="line"><span class="comment">只要浏览器符合规则:/aa/xxx</span></span><br><span class="line"><span class="comment">都访问ServletDemo04</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo04<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.itheima.Demo04_URL_Partten.ServletDemo04<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo04<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/aa/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>后缀匹配<br>*.xxx </p><blockquote><p>例如:*.do</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo05</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().write(<span class="string">"ServletDemo5 Get Method Run"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().write(<span class="string">"ServletDemo5 Post Method Run"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 只要浏览器符合后缀匹配规则，都可以访问到这个servlet--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo05<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.itheima.Demo04_URL_Partten.ServletDemo05<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ServletDemo05<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="5-2-相对-绝对路径"><a href="#5-2-相对-绝对路径" class="headerlink" title="5.2 相对/绝对路径"></a>5.2 相对/绝对路径</h4><ul><li>浏览器的地址栏</li><li>a标签的href属性</li><li>form表单的action属性</li><li>js的location.href属性</li><li>ajax请求地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">//访问地址：http://localhost:8080/projectname/static/Path.html</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Path<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Text Interview Path<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>绝对路径<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">在开发时，强烈建议使用绝对路径</span></span><br><span class="line"><span class="comment">完整:protocol://domain:port/project/SourceName</span></span><br><span class="line"><span class="comment">推荐:/项目名/资源名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://localhost:8080/Day33_Servlet_war_exploded/QuickServlet"</span>&gt;</span></span><br><span class="line">    带HTTP协议的绝对路径:QuickServlet</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/Day33_Servlet_war_exploded/QuickServlet"</span>&gt;</span>不带HTTP协议的绝对路径:QuickServlet<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>相对路径<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">相对路径语法：</span></span><br><span class="line"><span class="comment">./当前目录</span></span><br><span class="line"><span class="comment">../上级目录</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../QuickServlet"</span>&gt;</span>相对路径:QuickServlet<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="六-Servlet3-0"><a href="#六-Servlet3-0" class="headerlink" title="六.Servlet3.0"></a>六.Servlet3.0</h1><p>通过注解配置Servlet,简化web.xml配置Servlet复杂性，提高开发效率，集合所有框架都使用注解</p><ul><li>创建web项目</li><li>编写普通Java类继承HttpServlet抽象类</li><li>配置@WebServlet</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/QuickServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().write(<span class="string">"Quick Servlet 3.0 Get Method"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        resp.getWriter().write(<span class="string">"Quick Servlet 3.0 Post Method"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h2 id="一-Servlet概述-1"><a href="#一-Servlet概述-1" class="headerlink" title="一 Servlet概述"></a>一 Servlet概述</h2><h3 id="运行在服务器端的java程序"><a href="#运行在服务器端的java程序" class="headerlink" title="运行在服务器端的java程序"></a>运行在服务器端的java程序</h3><h3 id="一个类要想通过浏览器被访问到-那么这个类就必须直接或间接的实现Servlet接口"><a href="#一个类要想通过浏览器被访问到-那么这个类就必须直接或间接的实现Servlet接口" class="headerlink" title="一个类要想通过浏览器被访问到,那么这个类就必须直接或间接的实现Servlet接口"></a>一个类要想通过浏览器被访问到,那么这个类就必须直接或间接的实现Servlet接口</h3><h2 id="二-Servlet快速入门-1"><a href="#二-Servlet快速入门-1" class="headerlink" title="二 Servlet快速入门"></a>二 Servlet快速入门</h2><h3 id="①-创建web项目"><a href="#①-创建web项目" class="headerlink" title="① 创建web项目"></a>① 创建web项目</h3><h3 id="②-创建普通的java类，实现servlet接口，重写抽象方法"><a href="#②-创建普通的java类，实现servlet接口，重写抽象方法" class="headerlink" title="② 创建普通的java类，实现servlet接口，重写抽象方法"></a>② 创建普通的java类，实现servlet接口，重写抽象方法</h3><h3 id="③-配置web-xml"><a href="#③-配置web-xml" class="headerlink" title="③ 配置web.xml"></a>③ 配置web.xml</h3><h3 id="④-部署web项目"><a href="#④-部署web项目" class="headerlink" title="④ 部署web项目"></a>④ 部署web项目</h3><h3 id="⑤-启动测试"><a href="#⑤-启动测试" class="headerlink" title="⑤ 启动测试"></a>⑤ 启动测试</h3><h2 id="三-Servlet相关API-1"><a href="#三-Servlet相关API-1" class="headerlink" title="三 Servlet相关API"></a>三 Servlet相关API</h2><h3 id="生命周期相关"><a href="#生命周期相关" class="headerlink" title="生命周期相关"></a>生命周期相关</h3><ul><li><p>创建</p><ul><li>1)默认情况下，用户第一次访问时创建，执行init方法，只创建一次</li><li>2）修改创建时机，在tomcat启动时，创建servlet，执行init方法，只创建一次</li></ul></li><li><p>运行（提供服务）</p><ul><li>用户访问servlet资源时，执行service方法</li></ul></li><li><p>销毁</p><ul><li>服务器正常关闭，销毁servlet，执行destroy方法</li></ul></li></ul><h3 id="ServletConfig接口"><a href="#ServletConfig接口" class="headerlink" title="ServletConfig接口"></a>ServletConfig接口</h3><ul><li>加载web.xml配置文件信息，实现参数和代码的解耦</li></ul><h2 id="四-Servlet体系结构-1"><a href="#四-Servlet体系结构-1" class="headerlink" title="四 Servlet体系结构"></a>四 Servlet体系结构</h2><h3 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h3><ul><li><p>GenericServlet</p><ul><li>HttpServlet</li></ul></li></ul><h2 id="五-Servlet路径-1"><a href="#五-Servlet路径-1" class="headerlink" title="五 Servlet路径"></a>五 Servlet路径</h2><h3 id="url-pattern"><a href="#url-pattern" class="headerlink" title="url-pattern"></a>url-pattern</h3><ul><li><p>Servlet映射多个url</p></li><li><p>url映射模式</p><ul><li>精确匹配</li><li>目录匹配 </li><li>后缀匹配 </li></ul></li></ul><h3 id="相对-绝对路径"><a href="#相对-绝对路径" class="headerlink" title="相对/绝对路径"></a>相对/绝对路径</h3><ul><li>绝对路径…</li></ul><h2 id="六-Servlet3-0-1"><a href="#六-Servlet3-0-1" class="headerlink" title="六 Servlet3.0"></a>六 Servlet3.0</h2><h3 id="WebServlet-“-网络访问地址”"><a href="#WebServlet-“-网络访问地址”" class="headerlink" title="@WebServlet(“/网络访问地址”)"></a>@WebServlet(“/网络访问地址”)</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（三十二)</title>
      <link href="/2020/04/13/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E4%BA%8C%EF%BC%89/"/>
      <url>/2020/04/13/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>Web知识概述</li><li>Tomcat</li><li>Http协议(请求/响应)<a id="more"></a></li></ul><h1 id="一-Web知识概述"><a href="#一-Web知识概述" class="headerlink" title="一.Web知识概述"></a>一.Web知识概述</h1><p>JavaWeb:将编写好的代码，发布到互联网，可以让所有用户访问</p><h4 id="1-1-软件架构"><a href="#1-1-软件架构" class="headerlink" title="1.1 软件架构"></a>1.1 软件架构</h4><p>•网络中有很多的计算机，它们直接的信息交流，我们称之为:交互<br>•在互联网交互的过程的有两个非常典型的交互方式——B/S 交互模型(架构)和 C/S 交互模型(架构)</p><p>C/S架构</p><blockquote><p>Client/Server 客户端/服务器<br>访问服务器资源必须安装客户端软件<br>优点:用户体验好<br>缺点:开发(客户端,服务器),部署和维护繁琐</p></blockquote><p>B/S架构</p><blockquote><p>Browser/Server 浏览器/服务器<br>访问服务器资源不需要专门安装客户端软件,而是直接通过浏览器访问服务器资源.<br>优点:开发、部署,更新简单<br>缺点:用户体验差</p></blockquote><p><strong>C/S架构也是一种特殊的B/S架构</strong></p><h4 id="1-2-Web服务器作用"><a href="#1-2-Web服务器作用" class="headerlink" title="1.2 Web服务器作用"></a>1.2 Web服务器作用</h4><ul><li>开发者通过web服务器可以把本地资源发布到互联网</li><li>用户就可以通过浏览器访问这些资源</li></ul><h4 id="1-3-资源的分类"><a href="#1-3-资源的分类" class="headerlink" title="1.3 资源的分类"></a>1.3 资源的分类</h4><p>资源:计算机中数据文件</p><ul><li><p>静态资源<br>对于同一个页面,不同用户看到的内容是一样的。<br>例如:体育新闻、网站门户等，常见后缀: <em>.html、</em>.js、*.css</p></li><li><p>动态资源 用对于同一个页面,不同用户看到的内容可能不一样。<br>例如:购物车、我的订单等，常见后缀: <em>.jsp、</em>.aspx、*.php</p></li></ul><h4 id="1-4-常见的Web服务器"><a href="#1-4-常见的Web服务器" class="headerlink" title="1.4 常见的Web服务器"></a>1.4 常见的Web服务器</h4><ul><li>Tomcat: Apache组织开源免费的web服务器,支持JavaEE规范(Servlet/Jsp). </li><li>Jetty:Apache组织开源免费的小型web服务器,支持JavaEE规范.</li><li>JBoss: RedHat红帽公司的开源免费的web服务器,支持JavaEE规范.</li><li>Glass Fish:Sun公司开源免费的web服务器,支持JavaEE规范.</li><li>WebLogic: Oracle公司收费的web服务器,支持JavaEE规范. </li><li>WebSphere:IBM公司收费的web服务器,支持JavaEE规范.</li></ul><ul><li><strong>JavaEE规范</strong><br>在Java中所有的服务器厂商都要实现一组Oracle公司规定的接口，这些接口是称为JavaEE规范。不同厂商的JavaWeb服务器都实现了这些接口，在JavaEE中一共有13种规范。实现的规范越多，功能越强。</li></ul><h1 id="二-Tomcat服务器"><a href="#二-Tomcat服务器" class="headerlink" title="二.Tomcat服务器"></a>二.Tomcat服务器</h1><h4 id="2-1-Tomcat使用"><a href="#2-1-Tomcat使用" class="headerlink" title="2.1 Tomcat使用"></a>2.1 Tomcat使用</h4><h5 id="2-1-1-下载"><a href="#2-1-1-下载" class="headerlink" title="2.1.1 下载"></a>2.1.1 下载</h5><p>Tomcat 官网下载地址:<a href="https://tomcat.apache.org/download-80.cgi">https://tomcat.apache.org/download-80.cgi</a></p><h5 id="2-1-2-安装"><a href="#2-1-2-安装" class="headerlink" title="2.1.2 安装"></a>2.1.2 安装</h5><p>解压即用</p><h5 id="2-1-3-目录结构"><a href="#2-1-3-目录结构" class="headerlink" title="2.1.3 目录结构"></a>2.1.3 目录结构</h5><p>ls -F | grep “/</p><table><thead><tr><th>目录</th><th>说明</th></tr></thead><tbody><tr><td>bin/</td><td>启停命令</td></tr><tr><td>conf/</td><td>配置文件</td></tr><tr><td>lib/</td><td>运行时所依赖的jar包</td></tr><tr><td>logs/</td><td>运行日志</td></tr><tr><td>temp/</td><td>缓存</td></tr><tr><td>webapps/</td><td>发布自己的网站目录</td></tr><tr><td>work/</td><td>存放编译生产的.java与.class文件</td></tr></tbody></table><p>cd webapps/</p><table><thead><tr><th>目录</th><th>说明</th></tr></thead><tbody><tr><td>docs</td><td>tomcat的帮助文档</td></tr><tr><td>examples</td><td>web应用实例</td></tr><tr><td>host-manager</td><td>主机管理</td></tr><tr><td>manager</td><td>主机管理</td></tr><tr><td>ROOT</td><td>说默认站点根目录明</td></tr></tbody></table><p>[root@localhost webapps]# cd ../conf/</p><table><thead><tr><th>目录</th><th>说明</th></tr></thead><tbody><tr><td>Catalina</td><td></td></tr><tr><td>catalina.policy</td><td></td></tr><tr><td>catalina.properties</td><td></td></tr><tr><td>context.xml</td><td></td></tr><tr><td>logging.properties</td><td></td></tr><tr><td>logs</td><td></td></tr><tr><td>server.xml</td><td>tomcat 主配置文件</td></tr><tr><td>tomcat-users.xml</td><td>tomcat 管理用户配置文件</td></tr><tr><td>tomcat-users.xsd</td><td></td></tr><tr><td>web.xml</td><td></td></tr></tbody></table><p>ls -l | grep ^- | awk ‘{print $9}’</p><table><thead><tr><th>文件</th><th>说明</th></tr></thead><tbody><tr><td>BUILDING.txt</td><td></td></tr><tr><td>CONTRIBUTING.md</td><td></td></tr><tr><td>LICENSE</td><td></td></tr><tr><td>NOTICE</td><td></td></tr><tr><td>README.md</td><td></td></tr><tr><td>RELEASE-NOTES</td><td></td></tr><tr><td>RUNNING.txt</td><td></td></tr></tbody></table><h5 id="2-1-4-启动和关闭"><a href="#2-1-4-启动和关闭" class="headerlink" title="2.1.4 启动和关闭"></a>2.1.4 启动和关闭</h5><p>cd apache-tomcat-8.5.54/bin<br>chmod +x *.sh<br> ./startup.sh<br> ./shutdown.sh         </p><h5 id="2-1-5-启动报错问题"><a href="#2-1-5-启动报错问题" class="headerlink" title="2.1.5 启动报错问题"></a>2.1.5 启动报错问题</h5><ul><li><p>Java环境变量</p><blockquote><p>解决方法:<br>配置JAVA_HOME</p></blockquote></li><li><p>8080端口被占用<br>启动时报错</p><blockquote><p>解决方式一:kill pid<br>netstat -anpl | grep ‘8080’<br/><br>解决方式二:修改Tomcat端口号<br>进入Tomcat安装目录/conf/server.xml 文件修改<br>cat server.xml| grep ‘Connector port’<br>Connector port=”8080” </p><br/>如果要启动多个tomcat，需要修改三个端口</blockquote></li></ul><h5 id="2-1-6-发布项目的三种方式"><a href="#2-1-6-发布项目的三种方式" class="headerlink" title="2.1.6 发布项目的三种方式"></a>2.1.6 发布项目的三种方式</h5><ul><li>webapps部署<br>直接放置在 webapps 目录下<br>cp -r myapp tomcat/webapps</li></ul><p>这种方案,一般在开发完毕后使用</p><ul><li><p>server.xml部署<strong><font color ='red'>不建议使用</font></strong><br>在tomcat/conf/server.xml中找到标签，添加<Context>标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- path虚拟路径 docBase 真实路径--&gt;</span><br><span class="line">     &lt;Context path&#x3D;&quot;myapp&quot; docBase&#x3D;&quot;apache-tomcat-8.5.54&#x2F;webapps&#x2F;myapp&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>缺点:</p><blockquote><p>I.配置文件修改完后，需要重启才生效<br>II.server.xml是tomcat核心配置文件，如果操作错误会导致tomcat启动失败</p></blockquote></li><li><p>独立xml部署<br>在tomcat/conf/Catalina/localhost 目录下创建一个xml文件，添加标签</p></li></ul><p>myapp.xml<br>文件名就是虚拟路径<br>localhost:8080/myapp/index.html</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这里没有path,真实路径就是docBase中的路径 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">Context</span> <span class="attr">docBase</span>=<span class="string">"apache-tomcat-8.5.54/webapps/myapp"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-Web项目结构"><a href="#2-2-Web项目结构" class="headerlink" title="2.2 Web项目结构"></a>2.2 Web项目结构</h4><ul><li><p>前端项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">|-- myapp(项目名称)</span><br><span class="line">    |-- css 目录 </span><br><span class="line">    |-- js 目录 </span><br><span class="line">    |-- html目录 </span><br><span class="line">    |-- img 目录 </span><br><span class="line">    |-- index.html</span><br></pre></td></tr></table></figure></li><li><p>Web项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">|-- myapp(项目名称)</span><br><span class="line">    |-- 静态资源目录(html,css,js,img)</span><br><span class="line">    |-- WEB-INF 目录 (浏览器无法直接访问内部资源)</span><br><span class="line">            |-- classes 目录(java字节码文件)</span><br><span class="line">            |-- lib     目录 (当前项目所需要的第三方jar包)</span><br><span class="line">            |-- web.xml 文件 (当前项目核心配置文件,servlet3.0可以省略)</span><br><span class="line">    |-- index.html or index.jsp</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-IDEA中使用Tomcat"><a href="#2-3-IDEA中使用Tomcat" class="headerlink" title="2.3 IDEA中使用Tomcat"></a>2.3 IDEA中使用Tomcat</h4><h5 id="2-3-1-配置Tomcat"><a href="#2-3-1-配置Tomcat" class="headerlink" title="2.3.1 配置Tomcat"></a>2.3.1 配置Tomcat</h5><p>IDEA-&gt;Edit Configuration-&gt;在Application server添加Tomcat解压的路径即可</p><h5 id="2-3-2-创建Web项目"><a href="#2-3-2-创建Web项目" class="headerlink" title="2.3.2 创建Web项目"></a>2.3.2 创建Web项目</h5><p>IDEA-&gt;New Moudle-&gt;左侧选Java Enterprise-&gt;右侧选Moudle SDK选1.8，JAVAEE Version选JAVAEE 7，Application Server选tomcat，下拉列表勾选Web Application并勾选创建web.xml，下一步即可</p><h5 id="2-3-3-发布Web页面"><a href="#2-3-3-发布Web页面" class="headerlink" title="2.3.3 发布Web页面"></a>2.3.3 发布Web页面</h5><p>IDEA-&gt;选择Edit Configurations-&gt;进入Deployment指定context(新版本会默认生成)</p><h5 id="2-3-4-页面资源热更新"><a href="#2-3-4-页面资源热更新" class="headerlink" title="2.3.4 页面资源热更新"></a>2.3.4 页面资源热更新</h5><p>IDEA-&gt;选择Edit Configurations-&gt;On ‘Update’ action 和On frame deactivation都选择Update resources</p><p><strong>注意:</strong>WEB-INF动态资源是无法被浏览器直接访问的，会出现404错误</p><h1 id="三-Http协议"><a href="#三-Http协议" class="headerlink" title="三.Http协议"></a>三.Http协议</h1><h4 id="3-1-Http协议概述"><a href="#3-1-Http协议概述" class="headerlink" title="3.1 Http协议概述"></a>3.1 Http协议概述</h4><p>超文本传输协议(Hyper Text Transfer Protocol)是互联网上应用最为广泛的一种网络协议。<br>传输协议:在客户端和服务器端通信时，规范了传输数据的格式<br>HTTP协议特点:<br>I.基于TCP协议<br>II.默认端口80<br>III.基于请求/响应模型<br>IV.无状态协议(多次请求之间都是独立，不能交互数据)</p><p>HTTPS协议:<br>本质就是HTTP，对通信对数据进行加密<br>默认端口号443</p><h4 id="3-2-Http请求"><a href="#3-2-Http请求" class="headerlink" title="3.2 Http请求"></a>3.2 Http请求</h4><h5 id="3-2-1-浏览器查看Http请求协议"><a href="#3-2-1-浏览器查看Http请求协议" class="headerlink" title="3.2.1 浏览器查看Http请求协议"></a>3.2.1 浏览器查看Http请求协议</h5><ul><li>get方式(查看Inspect-Network-Request Headers)</li></ul><table>    <tr><td>请求行</td>        <td>GET /Day32_Tomcat/web/index.html?username=jack&password=123 HTTP/1.1        </td>    </tr>        <tr><td>请求头</td>        <td>Host: localhost:63343<br/>Connection: keep-alive<br/>Upgrade-Insecure-Requests: 1<br/>User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Safari/537.36 Edg/80.0.361.109<br/>Sec-Fetch-Dest: document<br/>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br/>Sec-Fetch-Site: same-origin<br/>Sec-Fetch-Mode: navigate<br/>Sec-Fetch-User: ?1<br/>Referer: http://localhost:63343/Day32_Tomcat/web/index.html<br/>Accept-Encoding: gzip, deflate, br<br/>Accept-Language: zh,en-CN;q=0.9,en-US;q=0.8,en;q=0.7<br/>Cookie: Idea-b40ac89=cb70dd01-3e65-4870-9e53-e3ad801dd2b0; <br/>If-Modified-Since: Mon, 13 Apr 2020 10:05:39 GMT<br/></td>    </tr></table><ul><li>post方式(查看Inspect-Network-Request Headers)</li></ul><table>    <tr>        <td>请求头</td>        <td>POST /Day32_Tomcat/web/index.html?username=jack&password=123 HTTP/1.1</td>    </tr>    <tr>        <td>请求行</td>         <td>Host: localhost:63343<br/>Connection: keep-alive<br/>Content-Length: 26<br/>Cache-Control: max-age=0<br/>Origin: http://localhost:63343<br/>Upgrade-Insecure-Requests: 1<br/>Content-Type: application/x-www-form-urlencoded<br/>User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Safari/537.36 Edg/80.0.361.109<br/>Sec-Fetch-Dest: document<br/>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<br/>Sec-Fetch-Site: same-origin<br/>Sec-Fetch-Mode: navigate<br/>Sec-Fetch-User: ?1<br/>Referer: http://localhost:63343/Day32_Tomcat/web/index.html?username=jack&password=123<br/>Accept-Encoding: gzip, deflate, br<br/>Accept-Language: zh,en-CN;q=0.9,en-US;q=0.8,en;q=0.7<br/>Cookie: Idea-b40ac89=cb70dd01-3e65-4870-9e53-e3ad801dd2b0; <br/></td></tr><tr>        <td>请求体<br/>(位于Form Data)</td>        <td>username=jack&password=123</td>    </tr></table><h5 id="3-2-2-HTTP请求消息格式"><a href="#3-2-2-HTTP请求消息格式" class="headerlink" title="3.2.2 HTTP请求消息格式"></a>3.2.2 HTTP请求消息格式</h5><h6 id="3-2-2-1-请求行"><a href="#3-2-2-1-请求行" class="headerlink" title="3.2.2.1 请求行"></a>3.2.2.1 请求行</h6><ul><li>格式<br>请求方式 请求路径 协议/版本号</li></ul><p>例如<br>POST /Day32_Tomcat/web/index.html?username=jack&amp;password=123 HTTP/1.1<br>GET /Day32_Tomcat/web/index.html?username=jack&amp;password=123 HTTP/1.1</p><ul><li>请求方式区别<blockquote><p>get <br/>1.请求参数在地址栏显示(请求行)<br/>2.请求参数大小有限制<br/>3.数据不太安全</p><br/>post<br/>1.请求参数不在地址栏显示(请求体) <br/>2.请求参数大小没有限制 <br/>3.数据相对安全</blockquote></li></ul><h6 id="3-2-2-2-请求头"><a href="#3-2-2-2-请求头" class="headerlink" title="3.2.2.2 请求头"></a>3.2.2.2 请求头</h6><ul><li>格式<br>  请求头名称:请求头的值</li><li>例如<br>  Host: localhost:8080</li></ul><p><strong>常见请求头</strong>:Accept开头的，都是浏览器告诉服务器的一些暗语</p><ul><li><p>Host: 访问服务器的地址(域名+端口)</p><blockquote><p>Host: localhost:8080</p></blockquote></li><li><p>Connection: 长连接(http1.1协议) </p><blockquote><p>Connection: keep-alive</p></blockquote></li><li><p>Cache-Control: 设置缓存数据的存活时间，单位秒 </p><blockquote><p>Cache-Control: max-age=0</p></blockquote></li><li><p>Upgrade-Insecure-Requests: 客户端支持https加密协议 </p><blockquote><p>Upgrade-Insecure-Requests:1</p></blockquote></li><li><p>Content-Type: 发送数据的媒体类型</p><blockquote><p>Content-Type: application/x-www-form-urlencoded</p></blockquote></li><li><p>Accept: 客户端告诉服务器，客户端支持的数据类型 </p><blockquote><p>Accept: text/html,<em>/</em>;</p></blockquote></li><li><p>Accept-Charset: 客户端告诉服务器，客户端支持的字符集 </p><blockquote><p>Accept-Charset: UTF-8</p></blockquote></li><li><p>Accept-Encoding: 客户告诉服务器，客户端支持的压缩格式 </p><blockquote><p>Accept-Encoding: gzip, deflate</p></blockquote></li><li><p>Accept-Language: 客户端告诉服务器，客户端系统语言环境 简体中文 </p><blockquote><p>Accept-Language: zh-CN,zh;q=0.9</p></blockquote></li><li><p>Cookie:</p></li><li><p>Referer: <a href="http://baidu.com">http://baidu.com</a> 上一次请求的地址 </p></li></ul><ul><li>User-Agent: 客户端系统和浏览器版本<blockquote><p>User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) Chrome/63.0 Safari/537.36<br>浏览器兼容性</p></blockquote></li></ul><h6 id="3-2-2-3-请求体-正文"><a href="#3-2-2-3-请求体-正文" class="headerlink" title="3.2.2.3 请求体(正文)"></a>3.2.2.3 请求体(正文)</h6><ul><li><p>格式<br>参数名=参数值&amp;参数名=参数值</p></li><li><p>例如<br>username=jack&amp;password=123</p></li><li><p>注意<br>get方式没有请求体，post有请求体</p></li></ul><h4 id="3-3-Http响应"><a href="#3-3-Http响应" class="headerlink" title="3.3 Http响应"></a>3.3 Http响应</h4><h5 id="3-3-1-浏览器查看Http响应协议-查看Inspect-Network-Response-Headers-响应体查看Network的Response栏"><a href="#3-3-1-浏览器查看Http响应协议-查看Inspect-Network-Response-Headers-响应体查看Network的Response栏" class="headerlink" title="3.3.1 浏览器查看Http响应协议(查看Inspect-Network-Response Headers,响应体查看Network的Response栏)"></a>3.3.1 浏览器查看Http响应协议(查看Inspect-Network-Response Headers,响应体查看Network的Response栏)</h5><table>    <tr>        <td>响应行</td>        <td>            HTTP/1.1 200 OK        </td>    </tr>    <td>响应头</td>    <td>        HTTP/1.1 200 OK<br/>content-type: text/html<br/>server: IntelliJ IDEA 2020.1<br/>date: Mon, 13 Apr 2020 10:25:17 GMT<br/>X-Frame-Options: SameOrigin<br/>X-Content-Type-Options: nosniff<br/>x-xss-protection: 1; mode=block<br/>accept-ranges: bytes<br/>cache-control: private, must-revalidate<br/>last-modified: Mon, 13 Apr 2020 10:12:12 GMT<br/>content-length: 317<br/>access-control-allow-origin: http://localhost:63343<br/>vary: origin<br/>access-control-allow-credentials: true<br/>    </td>    </tr><td>响应体</td><td><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Login&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h3&gt;Login&lt;/h3&gt;&lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;    Name:&lt;input type=&quot;text&quot; name=&quot;username&quot;/&gt;&lt;br/&gt;    Password&lt;input type=&quot;password&quot; name=&quot;password&quot;/&gt;&lt;br/&gt;    &lt;input type=&quot;submit&quot; value=&quot;Login&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre></td></tr></table><h5 id="3-3-2-HTTP响应消息格式"><a href="#3-3-2-HTTP响应消息格式" class="headerlink" title="3.3.2 HTTP响应消息格式"></a>3.3.2 HTTP响应消息格式</h5><h6 id="3-3-2-1-响应行"><a href="#3-3-2-1-响应行" class="headerlink" title="3.3.2.1 响应行"></a>3.3.2.1 响应行</h6><ul><li><p>格式<br>协议/版本号 状态码</p></li><li><p>例如<br>tomcat8:HTTP/1.1 200<br>tomcat7:HTTP/1.1 200 OK</p></li></ul><p>• 常见状态码 </p><table><thead><tr><th>状态码</th><th>说明</th></tr></thead><tbody><tr><td>200</td><td>成功</td></tr><tr><td>302</td><td>重定向</td></tr><tr><td>304</td><td>从缓存中读取数据</td></tr><tr><td>404</td><td>请求资源未找到</td></tr><tr><td>405</td><td>请求的方法未找到</td></tr><tr><td>500</td><td>服务器内部错误</td></tr></tbody></table><h6 id="3-3-2-2-响应头"><a href="#3-3-2-2-响应头" class="headerlink" title="3.3.2.2 响应头"></a>3.3.2.2 响应头</h6><ul><li><p>格式<br>响应头名称:响应头的值</p></li><li><p>例如<br>last-modified: Mon, 13 Apr 2020 10:12:12 GMT</p></li></ul><p><strong>常见响应头</strong>:Content开头都是服务器告诉客户端一些暗语</p><ul><li><p>Location:通常与状态码302一起使用，实现重定向操作 </p><blockquote><p>Location:<a href="http://www.baidu.com">http://www.baidu.com</a></p></blockquote></li><li><p>Content-Type:服务器告诉客户端，返回响应体的数据类型和编码方式 </p><blockquote><p>Content-Type:text/html;charset=utf-8</p></blockquote></li><li><p>Content-Disposition:服务器告诉客户端，以什么样方式打开响应体</p><blockquote><p>in-line(默认):浏览器直接打开相应内容，展示给用户<br>attachment;filename=文件名:浏览器以附件的方式保存文件 【文件下载】 </p></blockquote></li><li><p>Refresh::在指定间隔时间后，跳转到某个页面</p><blockquote><p>Refresh:5;<a href="http://www.baidu.com">http://www.baidu.com</a></p></blockquote></li><li><p>Last-Modified:通常与状态码304一起使用，实现缓存机制 </p><blockquote><p>last-modified: Mon, 13 Apr 2020 10:12:12 GMT</p></blockquote></li></ul><h6 id="3-3-2-3-响应体"><a href="#3-3-2-3-响应体" class="headerlink" title="3.3.2.3 响应体"></a>3.3.2.3 响应体</h6><ul><li>服务器返回的数据，由浏览器解析后展示给用户<br>用户看到页面所有的内容，都是在响应体中返回的</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="web知识概述"><a href="#web知识概述" class="headerlink" title="web知识概述"></a>web知识概述</h2><h3 id="架构分类"><a href="#架构分类" class="headerlink" title="架构分类"></a>架构分类</h3><ul><li><p>C/S</p><ul><li>客户端专门安装软件</li></ul></li><li><p>B/S</p><ul><li>浏览器作为客户端</li></ul></li></ul><h3 id="web服务器作用"><a href="#web服务器作用" class="headerlink" title="web服务器作用"></a>web服务器作用</h3><ul><li>将本地资源发布到互联网，用户可以通过浏览器访问</li></ul><h3 id="资源分类"><a href="#资源分类" class="headerlink" title="资源分类"></a>资源分类</h3><ul><li><p>静态</p><ul><li>.html .css .js .jpg</li></ul></li><li><p>动态</p><ul><li>.jsp</li></ul></li></ul><h3 id="常见服务器"><a href="#常见服务器" class="headerlink" title="常见服务器"></a>常见服务器</h3><ul><li>Tomcat</li></ul><h2 id="tomcat服务器"><a href="#tomcat服务器" class="headerlink" title="tomcat服务器"></a>tomcat服务器</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul><li>apache-tomcat-8.5.31-windows-x64.zip</li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li>解压缩即可</li></ul><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><ul><li><p>bin</p><ul><li><p>startup.bat</p><ul><li>启动</li></ul></li><li><p>shutdown.bat</p><ul><li>关闭</li></ul></li></ul></li><li><p>conf</p><ul><li><p>server.xml</p><ul><li>配置恩建</li></ul></li></ul></li><li><p>lib</p></li><li><p>logs</p></li><li><p>temp</p></li><li><p>webapps</p><ul><li>存放自己编写web项目，对外发布</li></ul></li><li><p>work</p></li></ul><h3 id="启停"><a href="#启停" class="headerlink" title="启停"></a>启停</h3><ul><li>startup.bat</li><li>shutdown.bat</li></ul><h3 id="启动有问题"><a href="#启动有问题" class="headerlink" title="启动有问题"></a>启动有问题</h3><ul><li><p>JAVA_HOME环境变量</p></li><li><p>端口占用</p><ul><li>找到占用端口软件，关闭掉，在启动tomcat</li><li>修改tomcat在启动</li></ul></li></ul><h3 id="tomcat发布项目方式"><a href="#tomcat发布项目方式" class="headerlink" title="tomcat发布项目方式"></a>tomcat发布项目方式</h3><ul><li><p>webapps目录</p><ul><li>热部署</li></ul></li><li><p>conf/server.xml</p><ul><li>不推荐</li></ul></li><li><p>conf/catalina/localhost</p><ul><li>热部署</li></ul></li></ul><h3 id="web项目目录结构"><a href="#web项目目录结构" class="headerlink" title="web项目目录结构"></a>web项目目录结构</h3><ul><li><p>WEB-INF</p><ul><li><p>classes</p></li><li><p>lib</p></li><li><p>web.xml</p><ul><li>web3.0之后可选</li></ul></li></ul></li><li><p>静态资源</p></li><li><p>index.html或index.jsp</p></li></ul><h3 id="idea中使用tomcat"><a href="#idea中使用tomcat" class="headerlink" title="idea中使用tomcat"></a>idea中使用tomcat</h3><ul><li><p>配置tomcat</p></li><li><p>创建web项目</p></li><li><p>启动</p><ul><li>重启tomcat</li><li>重新部署项目</li></ul></li></ul><h2 id="http协议"><a href="#http协议" class="headerlink" title="http协议"></a>http协议</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li>在客户端和服务器端通信时，规范了传输数据的格式</li></ul><h3 id="构成"><a href="#构成" class="headerlink" title="构成"></a>构成</h3><ul><li><p>请求格式</p><ul><li><p>行</p><ul><li><p>请求方式</p><ul><li>get</li><li>post</li></ul></li><li><p>URL</p></li><li><p>协议</p></li></ul></li><li><p>头</p><ul><li><p>请求的描述信息</p><ul><li>Referer</li><li>User-Agent</li></ul></li></ul></li><li><p>体</p><ul><li><p>数据内容</p><ul><li>get方式没有，post才有</li></ul></li></ul></li></ul></li><li><p>响应格式</p><ul><li><p>行</p><ul><li><p>协议</p></li><li><p>状态码</p><ul><li>200</li><li>302</li><li>304</li><li>404</li><li>405</li><li>500</li></ul></li></ul></li><li><p>头</p><ul><li><p>响应的描述信息</p><ul><li>Location</li><li>Content-Type</li><li>Content-Disposition</li><li>refresh</li><li>Last-Modified</li></ul></li></ul></li><li><p>体</p><ul><li>数据内容</li></ul></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（三十一)</title>
      <link href="/2020/04/11/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E4%B8%80%EF%BC%89/"/>
      <url>/2020/04/11/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>Json</li><li>Ajax<a id="more"></a></li></ul><h1 id="一-JSON"><a href="#一-JSON" class="headerlink" title="一.JSON"></a>一.JSON</h1><h4 id="1-1-JSON概述"><a href="#1-1-JSON概述" class="headerlink" title="1.1 JSON概述"></a>1.1 JSON概述</h4><p><strong>Javascript对象表现形式(JavaScript Object Notation)</strong></p><ul><li>JavaScript对象表现形式<br>let user = {“username”:”ObjName”,”age”:”10”,”gender”:”male/female”};<br>let product = {“Brander”:”Apple”,”Price”:”8999”};</li></ul><p><em>取代厚重XML,比起XML更小更快更易解析</em></p><blockquote><p>Json,XML作用:作为数据的载体，在网络中传输</p></blockquote><h4 id="1-2-JSON基础语法"><a href="#1-2-JSON基础语法" class="headerlink" title="1.2 JSON基础语法"></a>1.2 JSON基础语法</h4><ul><li><p>对象类型<br>{name:value,name:value}</p></li><li><p>数组类型<br>[<br>{name:value,name:value},<br>{name:value,name:value},<br>{name:value,name:value}<br>]</p></li><li><p>复杂对象:<br>{<br>  name:value,<br>  array:[{name:value},{},{}],<br>  user:{name:value}<br>}</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.描述用户对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> user = &#123;<span class="string">"username"</span>: <span class="string">"Trump"</span>, <span class="string">"Gender"</span>: <span class="string">"male"</span>, <span class="string">"Age"</span>: <span class="string">"103"</span>&#125;</span></span><br><span class="line"><span class="actionscript">    alert(<span class="keyword">typeof</span> user);<span class="comment">//object</span></span></span><br><span class="line">    alert(user.username + user.Gender + user.Age);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//2.描述用户数组</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> users = [</span></span><br><span class="line"><span class="actionscript">        &#123;<span class="string">"username"</span>: <span class="string">"John"</span>, <span class="string">"Gender"</span>: <span class="string">"male"</span>, <span class="string">"Age"</span>: <span class="string">"103"</span>&#125;,</span></span><br><span class="line"><span class="actionscript">        &#123;<span class="string">"username"</span>: <span class="string">"Jack"</span>, <span class="string">"Gender"</span>: <span class="string">"Female"</span>, <span class="string">"Age"</span>: <span class="string">"23"</span>&#125;,</span></span><br><span class="line"><span class="actionscript">        &#123;<span class="string">"username"</span>: <span class="string">"Bobe"</span>, <span class="string">"Gender"</span>: <span class="string">"male"</span>, <span class="string">"Age"</span>: <span class="string">"13"</span>&#125;</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> user <span class="keyword">of</span> users) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(user.username + <span class="string">","</span> + user.Gender + <span class="string">","</span> + user.Age);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//3.描述复杂对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> Emperor = &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="string">"Age"</span>: <span class="number">20</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"Wife"</span>: [</span></span><br><span class="line"><span class="actionscript">            &#123;<span class="string">"username"</span>: <span class="string">"Queen"</span>, <span class="string">"Gender"</span>: <span class="string">"Female"</span>, <span class="string">"Age"</span>: <span class="string">"23"</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;<span class="string">"username"</span>: <span class="string">"Concubine"</span>, <span class="string">"Gender"</span>: <span class="string">"Female"</span>, <span class="string">"Age"</span>: <span class="string">"18"</span>&#125;</span></span><br><span class="line">        ],</span><br><span class="line"><span class="actionscript">        <span class="string">"Father_Emperor"</span>: &#123;<span class="string">"username"</span>: <span class="string">"Lord"</span>&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(Emperor);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(Emperor.Age);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> wifes = Emperor.Wife;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">let</span> wife <span class="keyword">of</span> wifes)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(wife.username + <span class="string">","</span> + wife.Gender + <span class="string">","</span> + wife.Age);</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> fatherEmperor = Emperor.Father_Emperor;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(fatherEmperor.username);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-3-JSON格式转换"><a href="#1-3-JSON格式转换" class="headerlink" title="1.3 JSON格式转换"></a>1.3 JSON格式转换</h4><ul><li>JSON对象与字符串的相关函数<br>语法:</li></ul><table><thead><tr><th align="center">语法</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">JSON.stringify(object)</td><td align="center">把JSON对象转换为字符串</td></tr><tr><td align="center">JSON.parse</td><td align="center">把字符串转换为JSON对象</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> user = &#123;<span class="string">"username"</span>: <span class="string">"Trump"</span>&#125;</span></span><br><span class="line"><span class="actionscript">    alert(<span class="keyword">typeof</span> user);<span class="comment">//object</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> userstr = <span class="string">'&#123;"username": "Trump"&#125;'</span></span></span><br><span class="line"><span class="actionscript">    alert(<span class="keyword">typeof</span> userstr);<span class="comment">//string</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//1. JSON.parse 把字符串转换为JSON对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> user_parse = <span class="built_in">JSON</span>.parse(userstr);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> user_parse);<span class="comment">//object</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//2. JSON.stringify(object) 把JSON对象转换为字符串</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> user_stringify = <span class="built_in">JSON</span>.stringify(user);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> user_stringify);<span class="comment">//string</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二-AJAX"><a href="#二-AJAX" class="headerlink" title="二.AJAX"></a>二.AJAX</h1><h4 id="2-1-AJAX概述"><a href="#2-1-AJAX概述" class="headerlink" title="2.1 AJAX概述"></a>2.1 AJAX概述</h4><ul><li>AJAX是浏览器提供的一套方法，在无需重新加载整个网页的情况下，能够更新部分网页技术，从而提高用户浏览器网站应用的体验</li></ul><p>应用场景</p><blockquote><p>搜索框提示<br>表单数据验证<br>无刷新分页</p></blockquote><h4 id="2-2-JS原生AJAX"><a href="#2-2-JS原生AJAX" class="headerlink" title="2.2 JS原生AJAX"></a>2.2 JS原生AJAX</h4><ul><li>代码实现<br>•创建Ajax对象<br>let xhr = new XMLHttpRequest();</li></ul><p>•告诉Ajax请求方式和请求地址<br>xhr.open(请求方式,请求地址)</p><p>•发送请求<br>xhr.send();</p><p>•获取服务器返回的数据<br>xhr.onload=function(){<br>    xhr.responseText;<br>}</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        span&#123;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"Input Username"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"userwarn"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'username'</span>).onblur = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.value);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//创建Ajax对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">//告诉Ajax请求方式和请求地址</span></span></span><br><span class="line"><span class="actionscript">        xhr.open(<span class="string">'get'</span>, <span class="string">'http://localhost:8080/check?username='</span> + <span class="keyword">this</span>.value);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">//发送请求</span></span></span><br><span class="line">        xhr.send();</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取服务器返回的数据</span></span></span><br><span class="line"><span class="actionscript">        xhr.onload = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(xhr.responseText);      <span class="comment">//返回的字符串</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">'userwarn'</span>).innerText=xhr.responseText;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-3-jQuery的Ajax插件"><a href="#2-3-jQuery的Ajax插件" class="headerlink" title="2.3 jQuery的Ajax插件"></a>2.3 jQuery的Ajax插件</h4><h5 id="2-3-1-ajax函数"><a href="#2-3-1-ajax函数" class="headerlink" title="2.3.1 ajax函数"></a>2.3.1 ajax函数</h5><ul><li>语法:<br>$.ajax(json对象格式);</li><li>参数:<br>url:请求地址<br>type:请求方式(get:不安全且大小有限制,post大小无限制且相对安全)<br>data:请求参数<br>success:请求成功时，执行回调函数<br>error:请求失败时,执行的回调函数<br>dataType:预期服务器返回的数据类型:text,json</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        span&#123;</span><br><span class="line">            color: red;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"Input Username"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"userwarn"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//给文本绑定失去焦点事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#username'</span>).blur(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//使用ajax发送请求</span></span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">"http://localhost:8080/check"</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">"post"</span>,</span></span><br><span class="line"><span class="javascript">            data: <span class="string">"username="</span> + $(<span class="keyword">this</span>).val(),</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(resp)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//实现局部刷新</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#userwarn'</span>).text(resp);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            error: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">'Server Busy ,Please Retry'</span>);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            <span class="comment">//dataType: "json"//相当于把字符串转为JSON对象</span></span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-3-2-get函数"><a href="#2-3-2-get函数" class="headerlink" title="2.3.2 get函数"></a>2.3.2 get函数</h5><ul><li>语法:<br>$.get(url,callback)</li><li>参数:<br>url:请求地址<br>success:请求地址成功时的回调函数</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        span&#123;</span><br><span class="line">            color: red;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"Input Username"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"userwarn"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//给文本绑定失去焦点事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#username'</span>).blur(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//使用get发送函数</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> url = <span class="string">'http://localhost:8080/check?username'</span> + $(<span class="keyword">this</span>).val();</span></span><br><span class="line"><span class="actionscript">        $.get(url, <span class="function"><span class="keyword">function</span> <span class="params">(resp)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//局部刷新</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#userwarn'</span>).text(resp);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-3-3-post函数"><a href="#2-3-3-post函数" class="headerlink" title="2.3.3 post函数"></a>2.3.3 post函数</h5><ul><li>语法:<br>$.post(url,data,success)</li><li>参数:<br>url:请求地址<br>data:请求参数<br>success:请求地址成功时的回调函数</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        span&#123;</span><br><span class="line">            color: red;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"Input Username"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"userwarn"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//给文本绑定失去焦点事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#username'</span>).blur(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//使用post发送函数</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> url = <span class="string">'http://localhost:8080/check'</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> data = <span class="string">'username='</span> + $(<span class="keyword">this</span>).val();</span></span><br><span class="line"><span class="javascript">        $.post(url, data, <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//局部刷新</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">'userwarn'</span>).text(resp);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-4-同步和异步概述"><a href="#2-4-同步和异步概述" class="headerlink" title="2.4 同步和异步概述"></a>2.4 同步和异步概述</h4><ul><li>使用ajax发送的是异步请求</li></ul><p>**同步和异步请求指的是:客户端和服务器的交互行为<br>同步:客户端发送请求后，必须等待服务器端响应。在等待的期间客户端不能做其他操作<br>异步:客户端发送请求后，不需要等待服务器端的响应。在服务器处理的过程中，客户端可以进行其他操作</p><p>感知同步和异步区别:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn"</span>&gt;</span>Send Ajax<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//给按钮绑定事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#btn'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 使用ajax函数发送请求，ajax默认的是异步提交，可以改为同步(了解)</span></span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'http://localhost:8080/sleep'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'get'</span>,</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(resp)</span> </span>&#123;</span></span><br><span class="line">                alert(resp)</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="keyword">async</span>: <span class="literal">false</span> <span class="comment">// 同步提交</span></span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三-搜索案例"><a href="#三-搜索案例" class="headerlink" title="三.搜索案例"></a>三.搜索案例</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Search Case<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">            width: 643px;</span><br><span class="line">            margin: 200px auto;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">'text'</span>]</span> &#123;</span></span><br><span class="line">            width: 530px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">'button'</span>]</span> &#123;</span></span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 46px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#38f</span>;</span></span><br><span class="line">            border: 0;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">            font-size: 15px</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.show</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            width: 535px;</span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#999</span>;</span></span><br><span class="line">            border-top: 0;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/logo.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"search"</span> <span class="attr">name</span>=<span class="string">"keyword"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"Search"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"show"</span> <span class="attr">style</span>=<span class="string">"display: none"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.搜索框绑定键盘弹起事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#search'</span>).keyup(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//显示div</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'.show'</span>).show();</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">//2.获取用户输入的值</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log($(<span class="keyword">this</span>).val());</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//判断用户输入的值，JS提供了trim()方法,JQ使用需要转换</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (<span class="keyword">this</span>.value.trim().length == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> $(<span class="string">'.show'</span>).hide();<span class="comment">//拦截代码，不再向下执行</span></span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">//3.使用post函数发送请求</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> url = <span class="string">'http://localhost:8080/search'</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> data = <span class="string">'keyword='</span> + $(<span class="keyword">this</span>).val();</span></span><br><span class="line"><span class="javascript">        $.post(url, data, <span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//清空上次搜索的内容</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">'.show'</span>).empty();</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//4.局部更新</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(resp);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> ele <span class="keyword">of</span> resp) &#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'.show'</span>).append(<span class="string">`&lt;div style="cursor: pointer;</span></span></span><br><span class="line">                                        text-align: left;</span><br><span class="line">                                        padding-left: 5px"</span><br><span class="line"><span class="actionscript">                                        onmouseover=<span class="string">"highlight(this)"</span></span></span><br><span class="line"><span class="actionscript">                                        onmouseout=<span class="string">"restores(this)"</span></span></span><br><span class="line"><span class="actionscript">                                        onclick=<span class="string">"set(this)"</span>&gt;$&#123;ele&#125;&lt;/div&gt;`)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">highlight</span><span class="params">(obj)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(obj).css(<span class="string">'background-color'</span>, <span class="string">'#f0f0f0'</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">restores</span><span class="params">(obj)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(obj).css(<span class="string">'background-color'</span>, <span class="string">'white'</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">set</span><span class="params">(obj)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//设置选中文字色</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#search'</span>).val($(obj).text()).css(<span class="string">'color'</span>,<span class="string">'brown'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//跳转网址</span></span></span><br><span class="line"><span class="actionscript">        location.href = <span class="string">"http://www.baidu.com"</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// $('.show').css('display', "none");</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'.show'</span>).hide();</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h3><h2 id="json"><a href="#json" class="headerlink" title="json"></a>json</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li>JavaScript对象表示形式</li><li>这哥们可以取代XML笨重的数据结构，和xml相比：更小、更快，更易解析</li></ul><h3 id="json数据格式"><a href="#json数据格式" class="headerlink" title="json数据格式"></a>json数据格式</h3><ul><li>对象类型</li><li>数组类型</li><li>复杂对象</li></ul><h3 id="JSON格式转换"><a href="#JSON格式转换" class="headerlink" title="JSON格式转换"></a>JSON格式转换</h3><ul><li><p>JSON.stringify()</p><ul><li>把json对象转为字符串</li></ul></li><li><p>JSON.parse()</p><ul><li>把字符串转为json对象</li></ul></li></ul><h2 id="ajax"><a href="#ajax" class="headerlink" title="ajax"></a>ajax</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><ul><li><p>ajax是：异步提交和局部刷新的技术</p><ul><li>提高用户浏览网站的体验</li></ul></li><li><p>应用场景</p><ul><li>搜索框提示</li><li>表单数据验证</li><li>无刷新分页</li></ul></li></ul><h3 id="JS原生AJAX"><a href="#JS原生AJAX" class="headerlink" title="JS原生AJAX"></a>JS原生AJAX</h3><h3 id="JQuery的Ajax插件"><a href="#JQuery的Ajax插件" class="headerlink" title="JQuery的Ajax插件"></a>JQuery的Ajax插件</h3><ul><li><p>ajax函数</p><ul><li><p>语法</p><ul><li>$.ajax()</li></ul></li><li><p>参数</p><ul><li><p>url：请求地址</p></li><li><p>type：请求方式</p></li><li><p>data：请求参数</p></li><li><p>success:请求成功后执行的回调函数</p></li><li><p>error：请求失败后执行的回调函数</p></li><li><p>dataType：预期服务器返回数据类型</p><ul><li>text</li><li>json</li></ul></li></ul></li></ul></li><li><p>get函数</p><ul><li><p>语法</p><ul><li>$.get()</li></ul></li><li><p>参数</p><ul><li>url:请求路径</li><li>success：请求成功后执行的回调函数</li></ul></li></ul></li><li><p>post函数</p><ul><li><p>语法</p><ul><li>$.post()</li></ul></li><li><p>参数</p><ul><li>url：请求地址</li><li>data：请求参数</li><li>success：请求成功后执行的回调函数</li></ul></li></ul></li></ul><h2 id="搜索案例"><a href="#搜索案例" class="headerlink" title="搜索案例"></a>搜索案例</h2><p><em>XMind: ZEN - Trial Version</em></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（三十)</title>
      <link href="/2020/04/10/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%EF%BC%89/"/>
      <url>/2020/04/10/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>什么是框架</li><li>jQuery基础语法——js与jQuery的区别</li><li>jQuery选择器</li><li>jQuery的DOM操作</li><li>jQuery的事件</li><li>综合案例<a id="more"></a></li></ul><h1 id="一-jQuery概述"><a href="#一-jQuery概述" class="headerlink" title="一.jQuery概述"></a>一.jQuery概述</h1><h4 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h4><p>jQuery是一个优秀的javascript的轻量级框架之一，封装了dom操作、事件、页面动画、异步操 作等功能。<br>特别值得一提的是基于jQuery的插件非常丰富，大多数2015年之前的前端业务场景都有其封装好的工具框架。</p><p><strong>注意:如果公司使用的老版本插件，升级jQuery之后，可能会让插件失效</strong></p><table><thead><tr><th align="center">库名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">jQuery-x.js</td><td align="center">开发版本:有良好的锁紧格式和注释，方便开发者阅读</td></tr><tr><td align="center">jQuery-x.min.js</td><td align="center">生产版本:代码进行压缩,体积小方便网络传输</td></tr></tbody></table><h4 id="1-2-自定义JS框架"><a href="#1-2-自定义JS框架" class="headerlink" title="1.2 自定义JS框架"></a>1.2 自定义JS框架</h4><p>框架(Framework)是完成某种功能的半成品，抽取重复繁琐代码，提高简介强大的方法实现。</p><blockquote><p>感知jQuery的强大</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 抽取获取id的方法 function jQuery(id) &#123;</span><br><span class="line">return document.getElementById(id); &#125;</span><br><span class="line">// 简化名称方案 function $(id) &#123;</span><br><span class="line">return document.getElementById(id); &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/itcast.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span>AAAAAAAAAA<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//通过JS原生方式</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// document.getElementById("myDiv").innerHTML = "CCCCCC";</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    $(<span class="string">'myDiv'</span>).innerHTML = <span class="string">'ZZZZZ'</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>小结:jQuery本质上就是js的一个类库文件，使用它时，就能简化代码</p><h1 id="二-jQuery基础语法"><a href="#二-jQuery基础语法" class="headerlink" title="二.jQuery基础语法"></a>二.jQuery基础语法</h1><h4 id="2-1-HTML引入jQuery"><a href="#2-1-HTML引入jQuery" class="headerlink" title="2.1 HTML引入jQuery"></a>2.1 HTML引入jQuery</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML Intro Jqurey<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jQuery-3.2.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDIV"</span>&gt;</span>AAAAAAAAAA<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//获取div标签的js对象</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#myDIV'</span>).html(<span class="string">"XXXXXX"</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-jQuery与JS区别"><a href="#2-2-jQuery与JS区别" class="headerlink" title="2.2 jQuery与JS区别"></a>2.2 jQuery与JS区别</h4><p>jQuery虽然本质也是JS，但是如果使用jQuery的属性和方法那么必须包装对象是jQuery对象而不是js对象。<br>通过js方式获取的是js对象，通过jQuery方式获取的是jQuery对象，两者关系和区别如下:</p><ul><li>jQuery与JS的相互转换<br>js—&gt;jq<br>  $(js对象)或者jQuery(js对象)<br>jq—&gt;js<br>  js对象[] 或者 jq对象.get(索引)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Mutual conversion<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jQuery-3.2.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span>AAAAA<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 通过js方式修改文本内容</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> myDiv=<span class="built_in">document</span>.getElementById(<span class="string">'myDiv'</span>);</span></span><br><span class="line"><span class="actionscript">    myDiv.innerHTML=<span class="string">'AAAAAAAAA'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//通过jQuery方式修改文本内容</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $myDiv = $(<span class="string">'#myDiv'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $myDiv.html('XXXXXXXXX');</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//js对象和jQuery对象的 - 属性和方法不通用</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// myDiv.html('js操作jq函数');</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $myDiv.innerHTML='jq 操作 js 属性'</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//JS对象——转换为JQ对象</span></span></span><br><span class="line"><span class="javascript">    $(myDiv).html(<span class="string">'JS convert to JQ'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//JQ对象——转换为JS对象</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//注意:jq对象本质上是js数组，数组的每一个元素就是js原生对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($myDiv.length);</span></span><br><span class="line"><span class="actionscript">    $myDiv[<span class="number">0</span>].innerHTML=<span class="string">'jQuery convert to JavaScript OB'</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>页面加载事件</li></ul><ul><li><p>js<br>window.onload=function(){}</p></li><li><p>jq<br>$(function(){})</p></li><li><p>区别<br>  js:只能定义因此，如果定义多次，后加载会进行覆盖<br>  jq:可以定义多次</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>window onload<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jQuery-3.2.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//js页面加载事件</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// window.onload = function () &#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     alert('js on load');</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//jq页面加载事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'jq on load 1'</span>)</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'jq on load 2'</span>)</span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三-jQuery选择器"><a href="#三-jQuery选择器" class="headerlink" title="三.jQuery选择器"></a>三.jQuery选择器</h1><h4 id="3-1-基本选择器"><a href="#3-1-基本选择器" class="headerlink" title="3.1 基本选择器"></a>3.1 基本选择器</h4><ul><li>标签(元素)选择器<br>  语法:<br>  $(“html标签名”) 根据标签匹配元素 格式 标签</li><li>id选择器<br>语法:<br>$(“#id的属性值”)   根据id值匹配元素 id属性是标签的唯一标志 #id</li><li>类选择器<br>语法:<br>$(“.class的属性值”) 根据class的值匹配元素 class属性是给标签归类添加样式 格式 .class</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female"</span>&gt;</span>古力娜扎<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female"</span>&gt;</span>迪丽热巴<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"female hero"</span>&gt;</span>黑寡妇<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"male hero"</span>&gt;</span>钢铁侠<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"male hero"</span>&gt;</span>超人<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.获取span标签的jQuery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'span'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//2.获取class有hero的jQuery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'.hero'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//获得id="boss"的jQuery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#boss'</span>));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-层级关系选择器"><a href="#3-2-层级关系选择器" class="headerlink" title="3.2 层级关系选择器"></a>3.2 层级关系选择器</h4><ul><li>后代选择器<br>语法:<br>$(“A B”) 选择A元素内部的所有B元素</li><li>并集选择器<br>语法:<br>$(“选择器1,选择器2….”) 获取多个选择器选中的所有元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"kangxi"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>儿子：雍正<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>孙子：乾隆<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>牛顿<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1. 获取所有的p,div的文本</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'p,div'</span>).text());</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2. 获取div的后代span的文本</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#kangxi span'</span>).text);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-3-属性选择器"><a href="#3-3-属性选择器" class="headerlink" title="3.3 属性选择器"></a>3.3 属性选择器</h4><ul><li>属性选择器</li></ul><ul><li>语法:$(“A[属性名=’值’]”) 包含指定属性等于指定值的选择器</li></ul><ul><li>复合属性选择器</li></ul><ul><li>语法:$(“A[属性名=’值’][]…”) 包含多个属性条件的选择器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"用户名"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"nickname"</span> <span class="attr">value</span>=<span class="string">"昵称"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取type='text'的input标签</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'input[type="text"]'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.获取type='text' 且 name="nickname" 的input标签</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'input[type="text"][name="nickname"]'</span>));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="3-4-过滤选择器"><a href="#3-4-过滤选择器" class="headerlink" title="3.4 过滤选择器"></a>3.4 过滤选择器</h4><ul><li>首元素选择器<br>语法: :first 获得选择的元素中的第一个元素</li><li>尾元素选择器<br>语法: :last 获得选择的元素中的最后一个元素</li><li>偶数选择器<br>语法: :even 偶数，从 0 开始计数</li><li>奇数选择器<br>语法: :odd 奇数，从 0 开始计数</li><li>指定索引选择器<br>语法: :eq(index) 指定索引元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>大娃（红娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>二娃（橙娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>三娃（黄娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>四娃（绿娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>五娃（青娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>六娃（蓝娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>七娃（紫娃）<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获得所有li标签，在此基础上进行筛选过滤</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取第一个元素</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'li:first'</span>).text());</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//获取最后一个元素</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'li:last'</span>).text());</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.获取偶数索引元素</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'li:even'</span>).text());</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取奇数索引元素</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'li:odd'</span>).text());</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.获取指定索引2的元素</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'li:eq(2)'</span>).text());</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-5-对象遍历"><a href="#3-5-对象遍历" class="headerlink" title="3.5 对象遍历"></a>3.5 对象遍历</h4><ul><li>语法<br>jq对象.each(function(index,element){</li></ul><p>})</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">jQuery对象的遍历</span></span><br><span class="line"><span class="comment">    $.each() 用法示例</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"city"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> lis = <span class="built_in">document</span>.querySelectorAll(<span class="string">'li'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//普通for</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;lis.length;i++)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(lis[i]);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">//增强for</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> li <span class="keyword">of</span> lis) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(li);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">"========="</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//jQuery的for循环</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'li'</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">index,element</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(index);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(element);<span class="comment">//遍历的元素是js对象</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(element.innerHTML);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log($(element).html());<span class="comment">//升级为jQuery对象</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">this</span>);<span class="comment">//当前遍历的元素,相当于element</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="四-jQuery的DOM操作"><a href="#四-jQuery的DOM操作" class="headerlink" title="四.jQuery的DOM操作"></a>四.jQuery的DOM操作</h1><h4 id="4-1-jQuery操作内容"><a href="#4-1-jQuery操作内容" class="headerlink" title="4.1 jQuery操作内容"></a>4.1 jQuery操作内容</h4><ul><li>text():获取/设置元素的标签体纯文本内容 </li></ul><ul><li>相当于js: innerText属性</li></ul><ul><li>html():获取/设置元素的标签体超文本内容 </li></ul><ul><li>相当于js: innerHTML属性</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>天王盖地虎<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.text()操作内容</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.1 获得纯文本内容</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#myDiv'</span>).text());</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//设置纯文本内容</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#myDiv'</span>).text(<span class="string">'&lt;h1&gt;宝塔镇河妖&lt;/h1&gt;'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.html()操作内容</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//2.1 获取超文本内容</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#myDiv'</span>).html());</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//2.2 设置超文本内容</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#myDiv'</span>).html($(<span class="string">'#myDiv'</span>).html()+<span class="string">'&lt;h1&gt;宝塔&lt;/h1&gt;'</span>);</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-2-jQuery操作属性"><a href="#4-2-jQuery操作属性" class="headerlink" title="4.2 jQuery操作属性"></a>4.2 jQuery操作属性</h4><ul><li>val():获取/设置元素的value属性值 </li></ul><ul><li>相当于:js对象.value</li></ul><ul><li>attr():获取/设置元素的属性<br>removeAttr() 删除属性</li></ul><ul><li>相当于:js对象.setAttribute() / js对象.getAttribute()</li></ul><ul><li>prop():获取/设置元素的属性<br>removeAttr() 删除属性<br>jq在1.6版本之后，提供另一组API prop 通常处理属性值为布尔类型操作<br>例如:checked selected等</li></ul><p><strong>做条件判断用prop，做属性封装做attr</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    姓名 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"德玛西亚"</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    爱好</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"hobby"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span>烫头<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"hobby_undefined"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span> &gt;</span>烫头<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"清空按钮"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交按钮"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.获取文本框value属性</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//方式一:</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#username'</span>).attr(<span class="string">"value"</span>));<span class="comment">//查看</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#username'</span>).attr(<span class="string">'value'</span>, <span class="string">'abc'</span>);<span class="comment">//新增 or 修改</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#username'</span>).removeAttr(<span class="string">'value'</span>);<span class="comment">//删除</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//方式二:</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#username'</span>).val());</span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#username'</span>).val(<span class="string">'BBC'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.获取爱好的checked属性</span></span></span><br><span class="line">    /*</span><br><span class="line">    方式一:使用attr获取复选框状态</span><br><span class="line">      该按钮选中返回:checked</span><br><span class="line"><span class="actionscript">      未选中返回:<span class="literal">undefined</span></span></span><br><span class="line">    */</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#hobby'</span>).attr(<span class="string">'checked'</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#hobby_undefined'</span>).attr(<span class="string">'checked'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//方式二:使用val获取复选框状态</span></span></span><br><span class="line">    /*</span><br><span class="line"><span class="actionscript">    jq在<span class="number">1.6</span>之后弥补了设计缺陷,如果该属性存在返回<span class="literal">true</span>,不存在返回<span class="literal">false</span></span></span><br><span class="line">    */</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#hobby'</span>).prop(<span class="string">'checked'</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'#hobby_undefined'</span>).prop(<span class="string">'checked'</span>));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-3-jQuery操作样式"><a href="#4-3-jQuery操作样式" class="headerlink" title="4.3 jQuery操作样式"></a>4.3 jQuery操作样式</h4><ul><li><p>直接修改jq对象样式属性<br>语法:<br>jq对象.css()<br>css(样式名) 获取<br>css(样式名,样式值) 设置<br>优点:支持css语法<br>举例:font-size</p></li><li><p>添加/删除jq对象样式<br>语法:<br>jq对象.addClass()<br>jq对象.removeClass()</p></li><li><p>切换jq对象样式<br>语法:<br>jq对象.toggleClass() 无添加，有删除</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#p1</span> &#123;</span></span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.mp</span> &#123;</span></span><br><span class="line">            color: green;</span><br><span class="line">            border: 2px blue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.mpp</span> &#123;</span></span><br><span class="line">            background-color: lightgray;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>1. 设置一个css样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p2"</span>&gt;</span>2. 批量设置css样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p3"</span>&gt;</span>3. 通过class设置样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p4"</span>&gt;</span>4.</span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"toggle"</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    class样式</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $p1 = $(<span class="string">'#p1'</span>);<span class="comment">//获取p1</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $p2 = $(<span class="string">'#p2'</span>);<span class="comment">//获取p2</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $p3 = $(<span class="string">'#p3'</span>);<span class="comment">//获取p3</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $p4 = $(<span class="string">'#p4'</span>);<span class="comment">//获取p4</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//0.获取单元格标签的背景色</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($p1.css(<span class="string">'background-color'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1. 设置一个css样式</span></span></span><br><span class="line"><span class="actionscript">    $p1.css(<span class="string">'background-color'</span>, <span class="string">'gray'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2. 批量设置css样式</span></span></span><br><span class="line"><span class="actionscript">    $p2.css(&#123;<span class="string">'border'</span>: <span class="string">'1px solid red'</span>, <span class="string">'font-size'</span>: <span class="string">'20px'</span>&#125;);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3. 通过class设置样式</span></span></span><br><span class="line"><span class="actionscript">    $p3.addClass(<span class="string">'mp mpp'</span>);</span></span><br><span class="line"><span class="actionscript">    $p3.removeClass(<span class="string">'mpp'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 4. toggleClass() 切换一个class</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#toggle'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        $p4.toggleClass(<span class="string">'mp'</span>) &#125;)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-4-jQuery操作元素"><a href="#4-4-jQuery操作元素" class="headerlink" title="4.4 jQuery操作元素"></a>4.4 jQuery操作元素</h4><ul><li>$(标签) 创建一个标签<br>例:</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$('<span class="tag">&lt;<span class="name">li</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">li</span>&gt;</span>')</span><br></pre></td></tr></table></figure><ul><li>$.prepend() 在父标签中将子标签放在第一个位置 </li><li>$.append() 在父标签中将子标签放在最后一个位置 </li><li>$.empty() 清空子元素  </li><li>$.remove() 删除自己  </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"star"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>古力娜扎<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>迪丽热巴<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> $star = $(<span class="string">'#star'</span>); <span class="comment">// 无序列表</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1.前面添加马尔扎哈</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">'&lt;li&gt;马尔扎哈&lt;/li&gt;'</span>));</span></span><br><span class="line"><span class="javascript">    $star.prepend($(<span class="string">'&lt;li&gt;马尔扎哈&lt;/li&gt;'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.后面添加萨瓦迪卡</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#star'</span>).append($(<span class="string">'&lt;li&gt;萨瓦迪卡&lt;/li&gt;'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 3.移出所有列表项</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#star'</span>).empty()</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 4.删除无序列表</span></span></span><br><span class="line">    $star.remove();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="五-jQuery事件绑定"><a href="#五-jQuery事件绑定" class="headerlink" title="五.jQuery事件绑定"></a>五.jQuery事件绑定</h1><p>js对象.事件属性=function(){}<br>jq对象.事件函数(function(){})</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"js方式"</span> <span class="attr">id</span>=<span class="string">"jsBtn"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"jq方式"</span> <span class="attr">id</span>=<span class="string">"jqBtn"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//js事件绑定</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'jsBtn'</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'JS Bind Event'</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//jq事件绑定</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#jqBtn'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'JQ Bind Event'</span>);</span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="额外拓展"><a href="#额外拓展" class="headerlink" title="额外拓展"></a>额外拓展</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#div1'</span>).mouseover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//可以使用this，但this是js的原生对象，需要升级成jq对象</span></span></span><br><span class="line"><span class="javascript">        $(<span class="keyword">this</span>).css(&#123;<span class="string">'background-color'</span>:<span class="string">'pink'</span>&#125;);</span></span><br><span class="line"><span class="actionscript">    &#125;).mouseout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="keyword">this</span>).css(&#123;<span class="string">'background-color'</span>:<span class="string">'skyblue'</span>&#125;);</span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="六-综合案例"><a href="#六-综合案例" class="headerlink" title="六.综合案例"></a>六.综合案例</h1><h4 id="6-1-隔行换色"><a href="#6-1-隔行换色" class="headerlink" title="6.1 隔行换色"></a>6.1 隔行换色</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">'tr:gt(0):even'</span>).css(<span class="string">'background-color'</span>,<span class="string">'lightgray'</span>);</span></span><br><span class="line"><span class="javascript">    $(<span class="string">'tr:gt(0):odd'</span>).css(<span class="string">'background-color'</span>,<span class="string">'skyblue'</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-2-商品全选"><a href="#6-2-商品全选" class="headerlink" title="6.2 商品全选"></a>6.2 商品全选</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#btn1'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'input[type="checkbox"]'</span>).prop(<span class="string">'checked'</span>, <span class="literal">true</span>);</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    $(<span class="string">'#btn2'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'input[type="checkbox"]'</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">index,element</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//js方式</span></span></span><br><span class="line">            element.checked = !element.checked;</span><br><span class="line"><span class="actionscript">            <span class="comment">//jq方式</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// $(element).prop('checked', !$(element).prop("checked"));</span></span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">    $(<span class="string">'#btn3'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'input[type="checkbox"]'</span>).prop(<span class="string">'checked'</span>, <span class="literal">false</span>);</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-3-QQ表情"><a href="#6-3-QQ表情" class="headerlink" title="6.3 QQ表情"></a>6.3 QQ表情</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>QQ表情选择<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">        *&#123;<span class="attribute">margin</span>: <span class="number">0</span>;<span class="attribute">padding</span>: <span class="number">0</span>;<span class="attribute">list-style</span>: none;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.emoji</span>&#123;<span class="attribute">margin</span>:<span class="number">50px</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span>&#123;<span class="attribute">overflow</span>: hidden;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">li</span>&#123;<span class="attribute">float</span>: left;<span class="attribute">width</span>: <span class="number">48px</span>;<span class="attribute">height</span>: <span class="number">48px</span>;<span class="attribute">cursor</span>: pointer;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.emoji</span> <span class="selector-tag">img</span>&#123; <span class="attribute">cursor</span>: pointer; &#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.2.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"emoji"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/01.gif"</span> <span class="attr">height</span>=<span class="string">"22"</span> <span class="attr">width</span>=<span class="string">"22"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/02.gif"</span> <span class="attr">height</span>=<span class="string">"22"</span> <span class="attr">width</span>=<span class="string">"22"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/03.gif"</span> <span class="attr">height</span>=<span class="string">"22"</span> <span class="attr">width</span>=<span class="string">"22"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/04.gif"</span> <span class="attr">height</span>=<span class="string">"22"</span> <span class="attr">width</span>=<span class="string">"22"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/05.gif"</span> <span class="attr">height</span>=<span class="string">"22"</span> <span class="attr">width</span>=<span class="string">"22"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/06.gif"</span> <span class="attr">height</span>=<span class="string">"22"</span> <span class="attr">width</span>=<span class="string">"22"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/07.gif"</span> <span class="attr">height</span>=<span class="string">"22"</span> <span class="attr">width</span>=<span class="string">"22"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/08.gif"</span> <span class="attr">height</span>=<span class="string">"22"</span> <span class="attr">width</span>=<span class="string">"22"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/09.gif"</span> <span class="attr">height</span>=<span class="string">"22"</span> <span class="attr">width</span>=<span class="string">"22"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/10.gif"</span> <span class="attr">height</span>=<span class="string">"22"</span> <span class="attr">width</span>=<span class="string">"22"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/11.gif"</span> <span class="attr">height</span>=<span class="string">"22"</span> <span class="attr">width</span>=<span class="string">"22"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/12.gif"</span> <span class="attr">height</span>=<span class="string">"22"</span> <span class="attr">width</span>=<span class="string">"22"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"word"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>请发言：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="comment">&lt;!-- 给文本加粗 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/12.gif"</span> <span class="attr">height</span>=<span class="string">"22"</span> <span class="attr">width</span>=<span class="string">"22"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//给所有图片绑定点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'.emoji img'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//this表示当前image标签</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#word'</span>).append($(<span class="keyword">this</span>).clone());</span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h3><h2 id="Jquery概述"><a href="#Jquery概述" class="headerlink" title="Jquery概述"></a>Jquery概述</h2><h3 id="jQuery是一个优秀的javascript的轻量级框架"><a href="#jQuery是一个优秀的javascript的轻量级框架" class="headerlink" title="jQuery是一个优秀的javascript的轻量级框架"></a>jQuery是一个优秀的javascript的轻量级框架</h3><h2 id="Jquery基础语法"><a href="#Jquery基础语法" class="headerlink" title="Jquery基础语法"></a>Jquery基础语法</h2><h3 id="HTML引入Jquery"><a href="#HTML引入Jquery" class="headerlink" title="HTML引入Jquery"></a>HTML引入Jquery</h3><ul><li><script src="../js/jquery-3.2.1.min.js"></script></li></ul><h3 id="jQuery与JS区别"><a href="#jQuery与JS区别" class="headerlink" title="jQuery与JS区别"></a>jQuery与JS区别</h3><ul><li><p>jQuery对象与js对象相互转换</p><ul><li>$(js对象) 或 jQuery(js对象)</li><li>jq对象(索引) 或 jq对象.get(索引)</li></ul></li><li><p>页面加载事件</p><ul><li><p>window.onload=function(){}</p><ul><li>只能定义一次</li></ul></li><li><p>$(function(){})</p><ul><li>可以定义多次</li></ul></li></ul></li></ul><h2 id="Jquery选择器"><a href="#Jquery选择器" class="headerlink" title="Jquery选择器"></a>Jquery选择器</h2><h3 id="1-基本选择器"><a href="#1-基本选择器" class="headerlink" title="1 基本选择器"></a>1 基本选择器</h3><ul><li>$(“html标签名”)</li><li>$(“#id的属性值”)</li><li>$(“.class的属性值”)</li></ul><h3 id="2-层级选择器"><a href="#2-层级选择器" class="headerlink" title="2 层级选择器"></a>2 层级选择器</h3><ul><li>$(“A B”)</li><li>$(“选择器1,选择器2….”)</li><li>$(“A &gt; B”)</li></ul><h3 id="3-属性选择器"><a href="#3-属性选择器" class="headerlink" title="3 属性选择器"></a>3 属性选择器</h3><ul><li>$(“A[属性名=’值’]”)</li><li>$(“A[属性名=’值’][]…”)</li></ul><h3 id="4-基本过滤选择器"><a href="#4-基本过滤选择器" class="headerlink" title="4 基本过滤选择器"></a>4 基本过滤选择器</h3><ul><li>:first</li><li>:last</li><li>:even</li><li>:odd</li><li>:eq(index) </li></ul><h3 id="5-对象遍历"><a href="#5-对象遍历" class="headerlink" title="5 对象遍历"></a>5 对象遍历</h3><ul><li>jq对象.each(function(index,element){})</li></ul><h2 id="Jquery的DOM操作"><a href="#Jquery的DOM操作" class="headerlink" title="Jquery的DOM操作"></a>Jquery的DOM操作</h2><h3 id="Jquery操作内容"><a href="#Jquery操作内容" class="headerlink" title="Jquery操作内容"></a>Jquery操作内容</h3><ul><li><p>html()</p><ul><li>超文本</li></ul></li><li><p>text()</p><ul><li>纯文本</li></ul></li></ul><h3 id="Jquery操作属性"><a href="#Jquery操作属性" class="headerlink" title="Jquery操作属性"></a>Jquery操作属性</h3><ul><li><p>val()</p><ul><li>操作value属性</li></ul></li><li><p>attr()</p><ul><li>removeAttr()</li></ul></li><li><p>prop()</p><ul><li><p>removeProp()</p><ul><li>checked</li><li>selected</li></ul></li></ul></li></ul><h3 id="Jquery操作样式"><a href="#Jquery操作样式" class="headerlink" title="Jquery操作样式"></a>Jquery操作样式</h3><ul><li><p>jq对象.css()</p></li><li><p>jq对象.addClass()</p><ul><li>jq对象.removeClass()</li></ul></li></ul><h3 id="Jquery操作元素"><a href="#Jquery操作元素" class="headerlink" title="Jquery操作元素"></a>Jquery操作元素</h3><ul><li><p>$(“<a></a>“)</p><ul><li>创建jq标签对象</li></ul></li><li><p>prepend()</p><ul><li>父添加子，放在一个位置</li></ul></li><li><p>append()</p><ul><li>父添加子，放在最后一个</li></ul></li><li><p>remove()</p><ul><li>灭门</li></ul></li><li><p>empty()</p><ul><li>断子绝孙脚</li></ul></li></ul><h2 id="Jquery事件绑定"><a href="#Jquery事件绑定" class="headerlink" title="Jquery事件绑定"></a>Jquery事件绑定</h2><h3 id="js对象-事件属性-function"><a href="#js对象-事件属性-function" class="headerlink" title="js对象.事件属性=function(){}"></a>js对象.事件属性=function(){}</h3><h3 id="jq对象-事件函数-function"><a href="#jq对象-事件函数-function" class="headerlink" title="jq对象.事件函数(function(){})"></a>jq对象.事件函数(function(){})</h3><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="隔行换色"><a href="#隔行换色" class="headerlink" title="隔行换色"></a>隔行换色</h3><h3 id="商品全选"><a href="#商品全选" class="headerlink" title="商品全选"></a>商品全选</h3><h3 id="QQ表情"><a href="#QQ表情" class="headerlink" title="QQ表情"></a>QQ表情</h3><p><em>XMind: ZEN - Trial Version</em></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（二十九)</title>
      <link href="/2020/04/09/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E4%B9%9D%EF%BC%89/"/>
      <url>/2020/04/09/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E4%B9%9D%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>BOM</li><li>DOM(与XML的dom4j思想完全一样)可以实现对节点对增删改查</li><li>正则表达式:对字符对过滤校验<a id="more"></a><h1 id="一-BOM对象"><a href="#一-BOM对象" class="headerlink" title="一.BOM对象"></a>一.BOM对象</h1><h4 id="1-1-BOM简介"><a href="#1-1-BOM简介" class="headerlink" title="1.1 BOM简介"></a>1.1 BOM简介</h4>浏览器对象模型(Browser Object Model)<br>作用:把浏览器抽象成一个对象模型,可以使用JS模拟一些浏览器功能</li></ul><h4 id="1-2-Window对象"><a href="#1-2-Window对象" class="headerlink" title="1.2 Window对象"></a>1.2 Window对象</h4><ul><li>三种弹框<br>警告框:提示信息<br>alert()<br>确认框:确认信息<br>confirm()<br>输入框:输入信息<br>prompt()</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//警告框:提示信息</span></span></span><br><span class="line"><span class="actionscript">    alert(<span class="string">"Hello"</span>)</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//确认框:确认信息</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> result = confirm(<span class="string">"Sure to Delete?Y/N"</span>)</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">if</span> (result == <span class="literal">true</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"Y"</span>);</span></span><br><span class="line"><span class="actionscript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"N"</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">//输入框:输入信息</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> age = prompt(<span class="string">"Please Input Your Age"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">if</span> (age != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"Please Input Age"</span>,<span class="string">`<span class="subst">$&#123;age&#125;</span>`</span>)</span></span><br><span class="line"><span class="actionscript">    &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"Canceled"</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>二种定时器</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">JS两个定时器</span></span><br><span class="line"><span class="comment">1)一次性定时器</span></span><br><span class="line"><span class="comment">    创建:let 定时器对象 = setTimeout(`函数()`,毫秒)</span></span><br><span class="line"><span class="comment">    关闭:clearTimeout(定时器对象)</span></span><br><span class="line"><span class="comment">2)循环型定时器</span></span><br><span class="line"><span class="comment">    创建:    let 定时器对象 = setInterval(函数,毫秒)</span></span><br><span class="line"><span class="comment">    关闭:clearInterval()</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn1"</span>&gt;</span>Cancel Print Time<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn2"</span>&gt;</span>Cancel Print Number<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.定时1s在控制台打印当前时间</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">fun1</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString());</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> timeout = setTimeout(<span class="string">`fun1()`</span>, <span class="number">1000</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//2.点击按钮取消打印时间</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"btn1"</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        clearTimeout(timeout);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//3.每隔2秒在控制台打印递增自然数</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> num = <span class="number">1</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">fun2</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(num++);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> interval = setInterval(fun2, <span class="number">2000</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//4.点击按钮取消打印自然数</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn2'</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line">        clearInterval(interval);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-3-Location对象"><a href="#1-3-Location对象" class="headerlink" title="1.3 Location对象"></a>1.3 Location对象</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">location地址</span></span><br><span class="line"><span class="comment">    1)获取当前窗口地址</span></span><br><span class="line"><span class="comment">        location.href</span></span><br><span class="line"><span class="comment">    2)刷新当前页面</span></span><br><span class="line"><span class="comment">        location.reload</span></span><br><span class="line"><span class="comment">    3)跳转页面</span></span><br><span class="line"><span class="comment">        location.href='new location'</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"addr()"</span>&gt;</span>获取当前浏览器地址<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"refresh()"</span>&gt;</span>刷新当前页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"jump()"</span>&gt;</span>跳转页面(重点)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">addr</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(location.href);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">refresh</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(location.reload());</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">jump</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(location.href = <span class="string">'https://www.baidu.com/'</span>);;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二-DOM对象"><a href="#二-DOM对象" class="headerlink" title="二.DOM对象"></a>二.DOM对象</h1><h4 id="2-1-DOM简介"><a href="#2-1-DOM简介" class="headerlink" title="2.1 DOM简介"></a>2.1 DOM简介</h4><p>DOM(Document Object Model) 页面文档对象模型<br>JS把页面抽象成为一个对象,允许我们使用js来操作页面</p><h4 id="2-2-DOM获取元素"><a href="#2-2-DOM获取元素" class="headerlink" title="2.2 DOM获取元素"></a>2.2 DOM获取元素</h4><ul><li>第一种:es6之前的获取方式<br>1)获取一个:<br><strong>document.getElementById(id属性值)</strong><br>2)获取多个:<br>document.getElementByTagName(标签名属性值) 根据标签名获取，返回数组对象<br>document.getElementByClassName(class属性值) 根据class属性获取，返回数组对象<br>document.getElementByName(name属性值) 根据name属性获取，返回数组对象</li></ul><ul><li>第二种:es6可根据CSS选择器获取<br>1)获取一个:<br>document.querySelector(id选择器)<br>2)获取多个:<br><strong>document.querySelectorAll(css选择器)</strong><br>  标签<br>  class<br>  属性<br>  后代<br>  并集<br>  父子<br>  …</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.获取id="name"对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementById(<span class="string">'name'</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelector(<span class="string">'name'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//2.获取class="radio"的标签数组</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByClassName(<span class="string">'radio'</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelectorAll(<span class="string">'radio'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//3.获取所有option标签对象数组</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByTagName(<span class="string">'option'</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelectorAll(<span class="string">'option'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//4.获取name="hobby"的input标签对象数组</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByName(<span class="string">'hobby'</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelectorAll(<span class="string">'input[name="hobby"]'</span>));<span class="comment">//CSS的属性选择器</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//5.获取文件上传选择框</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.querySelectorAll(<span class="string">'form input[type="file"]'</span>));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-3-DOM操作内容"><a href="#2-3-DOM操作内容" class="headerlink" title="2.3 DOM操作内容"></a>2.3 DOM操作内容</h4><ul><li>获取或修改元素(标签)的纯文本内容<br>语法:<br>  element.innerText</li><li>获取或者修改元素的html内容<br>  element.innerHTML;</li><li>获取或者修改包含自身的html内容<br>  element.outerHTML;</li></ul><p>总结:</p><ol><li>innerText 获取的是纯文本 innerHTML获取的是所有html内容</li><li>innerText 设置到页面中的是纯文本 innerHTML设置到页面中的html会展示出外观效果 </li><li>innerHTML不包含自身 outerHTML包含自身的html内容</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#myDiv</span> &#123;</span></span><br><span class="line">            border: 1px solid red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDiv"</span>&gt;</span>AAA<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> myDIV = <span class="built_in">document</span>.getElementById(<span class="string">'myDiv'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.innetText操作div内容</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.1获取纯文本</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(myDIV.innerText);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.2 获取纯文本,无法更改标签等属性</span></span></span><br><span class="line"><span class="actionscript">    myDIV.innerText = <span class="string">"BBBBB"</span>;<span class="comment">//覆盖</span></span></span><br><span class="line"><span class="actionscript">    myDIV.innerText += <span class="string">"BBBBB"</span>;<span class="comment">//追加</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//2.innerHTML操作div内容</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//2.1 获取超文本内容</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(myDIV.innerHTML);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//2.2 设置超文本,可以更改标签等属性</span></span></span><br><span class="line"><span class="actionscript">    myDIV.innerHTML = <span class="string">'&lt;h1&gt;CCCCCC&lt;/h1&gt;'</span><span class="comment">//覆盖</span></span></span><br><span class="line"><span class="actionscript">    myDIV.innerHTML += <span class="string">'&lt;h1&gt;CCCCCC&lt;/h1&gt;'</span><span class="comment">//追加</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//3.outerHTML操作div</span></span></span><br><span class="line"><span class="actionscript">    myDIV.outerHTML=<span class="string">'&lt;p&gt;DDDDDDDD&lt;/p&gt;'</span><span class="comment">//不仅可以修改纯文本，还能修改标签</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-4-DOM操作属性"><a href="#2-4-DOM操作属性" class="headerlink" title="2.4 DOM操作属性"></a>2.4 DOM操作属性</h4><ul><li>获取文本框的值,单选框或复选框的选中状态<br>语法:<br>  element.properties 获取或者修改元素对象的原生属性</li><li>给元素设置自定义属性<br>语法:<br>  element.setAttribute(属性名,属性值) 给元素设置一个属性值,可以设置原生和自定义</li><li>获取元素的自定义属性值<br>语法:<br>  element.getAttribute(属性名) 获取元素的一个属性值,可以获取原生和自定义 </li><li>移除元素的自定义属性<br>语法:<br>  element.removeAttribute(属性名)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"AAAAA"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    Hobby:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"smoke"</span>&gt;</span>X</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span>&gt;</span>Y</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span>&gt;</span>Z<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"清空按钮"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交按钮"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.获取文本框预定义的属性值</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> username = <span class="built_in">document</span>.getElementById(<span class="string">'username'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(username);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(username.type);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(username.name);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(username.value);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//2.给文本框设置自定义属性</span></span></span><br><span class="line"><span class="actionscript">    username.setAttribute(<span class="string">'customize'</span>, <span class="string">'customize properties'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//3.获取文本框自定义属性</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(username.getAttribute(<span class="string">'customize'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//4.移除文本框自定义属性</span></span></span><br><span class="line"><span class="actionscript">    username.removeAttribute(<span class="string">'customize'</span>);</span></span><br><span class="line"><span class="actionscript">    username.removeAttribute(<span class="string">'value'</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-5-DOM操作样式"><a href="#2-5-DOM操作样式" class="headerlink" title="2.5 DOM操作样式"></a>2.5 DOM操作样式</h4><ul><li><p>设置一个css样式<br>语法:<br>  element.style.样式名=’样式值’    获取或者修改一个css样式<br>特点:<br>  驼峰格式样式属性名<br>  css格式:font-size<br>  js格式:fontSize</p></li><li><p>批量设置css样式<br>语法:<br>  element.style.cssText 获取后者修改 标签的style属性的文本值<br>特点:有耦合性，无提示较麻烦</p></li><li><p>通过class设置样式<br>语法:<br>  element.className=’class选择器名’ 获取或者修改标签的class属性的文本值</p></li><li><p>切换class样式<br>语法:<br>  element.classList es6特别提供的操作元素class的接口<br>常用方法有四个:<br>add() 添加一个class样式<br>remove() 移除一个class样式<br>contains() 判断是否包含某一个样式<br>toggle() 切换一个class样式 有则删除,无则添加</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#p1</span> &#123;</span></span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.mp</span> &#123;</span></span><br><span class="line">            color: green;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">            font-family: "Cascadia Code";</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.mpp</span> &#123;</span></span><br><span class="line">            background-color: lightgray;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>Set One CSS Style<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p2"</span>&gt;</span>Set CSS Style<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p3"</span>&gt;</span>Set CSS Style By Class<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> p1 = <span class="built_in">document</span>.getElementById(<span class="string">'p1'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> p2 = <span class="built_in">document</span>.getElementById(<span class="string">'p2'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> p3 = <span class="built_in">document</span>.getElementById(<span class="string">'p3'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.设置一个css样式</span></span></span><br><span class="line"><span class="actionscript">    p1.style.backgroundColor = <span class="string">'black'</span>;</span></span><br><span class="line"><span class="actionscript">    p1.style.color = <span class="string">'white'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//2.批量设置css样式</span></span></span><br><span class="line"><span class="actionscript">    p2.style.cssText = <span class="string">'border:1px solid red;font-size:20px'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//3.通过class设置样式</span></span></span><br><span class="line"><span class="actionscript">    p3.className = <span class="string">'mp mpp'</span>;<span class="comment">//注意不要添加'.'符号,可以添加多个组</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-6-DOM操作元素"><a href="#2-6-DOM操作元素" class="headerlink" title="2.6 DOM操作元素"></a>2.6 DOM操作元素</h4><ul><li>创建一个标签对象<br>语法:<br>innerHTML 获取或者设置标签的html内容</li><li>父标签添加子标签<br>语法:<br>document.createElement(标签名称) 创建一个标签对象<br>parentNode.appendChild(newNode) 给父标签添加一个子标签</li><li>移除元素<br>outerHTML</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>A<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>B<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//添加一个心列表</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//方式一</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"name"</span>).innerHTML += <span class="string">'&lt;li&gt;C&lt;/li&gt;'</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//方式二</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.1 创建li标签</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> li = <span class="built_in">document</span>.createElement(<span class="string">'li'</span>);</span></span><br><span class="line"><span class="actionscript">    li.innerText = <span class="string">'All'</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(li);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.2 父标签添加子标签</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'name'</span>).appendChild(li);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三-正则表达式"><a href="#三-正则表达式" class="headerlink" title="三.正则表达式"></a>三.正则表达式</h1><p>作用:根据定义好的规则，过滤文本内容</p><ul><li><p>在js中使用正则表达式<br>创建方式<br>1)let reg1 = new RegExp(‘正则表达式字符串’);<br>2)let reg1 = /正则表达式/;<br>验证方法<br>1)正则对象.test(字符串)<br>符号正则规则就返回true，否则false<br>2)字符串对象.match(正则对象)<br>返回字符串中符号正则规则的内容</p></li><li><p>正则表达式修饰符<br>i忽略大小写  g全局匹配 m 多行匹配</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.创建正则对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> reg1 = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'\\d+'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(reg1.test(<span class="string">'abc'</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(reg1.test(<span class="string">'123'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> reg2 = <span class="regexp">/\d+/</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(reg2.test(<span class="string">'abc'</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(reg2.test(<span class="string">'123'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//验证方法</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">"a1"</span>.match(reg2));<span class="comment">//表示获取字符串符号正则规则的部分</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//正则表达式修饰符</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//i忽略大小写  g全局匹配 m 多行匹配</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> regi = <span class="regexp">/[]amn]/i</span>;<span class="comment">//不区分大小写匹配amn ignore忽略大小写</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> resi = <span class="string">'ABC'</span>.match(regi);<span class="comment">//从ABC中匹配regi模式字符串</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(resi);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> regg = <span class="regexp">/\d/g</span>;<span class="comment">//全局查找数组 global 全局</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> resg = <span class="string">"1 plus 2 equels 3"</span>.match(regg);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(resg);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> regm = <span class="regexp">/^\d/m</span>;<span class="comment">//多行匹配开头的数字(^限定开始 $限定结束) ，multipart</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> resm = <span class="string">"abc1 plus 2 equals 3\n6abcmnk"</span>.match(regm);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(resm);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="四-综合案例"><a href="#四-综合案例" class="headerlink" title="四.综合案例"></a>四.综合案例</h1><h4 id="4-1-表单校验"><a href="#4-1-表单校验" class="headerlink" title="4.1 表单校验"></a>4.1 表单校验</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.两次密码输入一致</span></span><br><span class="line"><span class="comment">//2.获取密码框和确认密码框的js对象</span></span><br><span class="line"><span class="keyword">let</span></span><br><span class="line">    pwd1 = <span class="built_in">document</span>.getElementById(<span class="string">'pwd1'</span>);</span><br><span class="line"><span class="keyword">let</span> pwd2 = <span class="built_in">document</span>.getElementById(<span class="string">'pwd2'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.2 校验密码是否一致的方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkPwd</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> boo = pwd1.value == pwd2.value;</span><br><span class="line">    <span class="keyword">if</span> (boo == <span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'pwdwarn'</span>).style.display = <span class="string">'none'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'pwdwarn'</span>).style.display = <span class="string">'inline'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> boo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.3 给确认密码框绑定失去焦点时间</span></span><br><span class="line">pwd2.onblur = checkPwd;<span class="comment">//不能加括号()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.邮箱格式正确</span></span><br><span class="line"><span class="comment">//2.1 定义邮箱正则表达式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.2 获取邮箱的js对象</span></span><br><span class="line"><span class="keyword">let</span> email = <span class="built_in">document</span>.getElementById(<span class="string">'email'</span>);</span><br><span class="line"><span class="keyword">let</span> emailReg = <span class="regexp">/\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*/</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.3 定义校验函数(方法)</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkEmail</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> boo = emailReg.test(email.value);</span><br><span class="line">    <span class="keyword">if</span> (boo == <span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'emailwarn'</span>).style.display = <span class="string">'none'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'emailwarn'</span>).style.display = <span class="string">'inline'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> boo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.4 给邮箱绑定失去焦点事件</span></span><br><span class="line">email.onblur = checkEmail;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.手机号格式正确</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> phone = <span class="built_in">document</span>.getElementById(<span class="string">'phone'</span>);</span><br><span class="line"><span class="keyword">let</span> phoneReg = <span class="regexp">/^((0\d&#123;2,3&#125;-\d&#123;7,8&#125;)|(1[3584]\d&#123;9&#125;))$/</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkPhone</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> boo = phoneReg.test(phone.value);</span><br><span class="line">    <span class="keyword">if</span> (boo == <span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'phonewarn'</span>).style.display = <span class="string">'none'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'phonewarn'</span>).style.display = <span class="string">'inline'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> boo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">phone.onblur = checkPhone;</span><br><span class="line"></span><br><span class="line"><span class="comment">//表单提交时进行校验 一定触发onsubmit()事件</span></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'myForm'</span>).onsubmit = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (checkPwd() &amp;&amp; checkEmail() &amp;&amp; checkPhone()) &#123;</span><br><span class="line">        alert(<span class="string">'Successful'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(<span class="string">'Something Wrong'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <details><summary>点我展开html和css</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;regist_bg&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;regist&quot;&gt;</span><br><span class="line">        &lt;form action&#x3D;&quot;#&quot; id&#x3D;&quot;myForm&quot;&gt;</span><br><span class="line">            &lt;table width&#x3D;&quot;700px&quot; height&#x3D;&quot;350px&quot;&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td colspan&#x3D;&quot;3&quot;&gt;</span><br><span class="line">                        &lt;font color&#x3D;&quot;#3164af&quot;&gt;会员注册&lt;&#x2F;font&gt; USER REGISTER</span><br><span class="line">                    &lt;&#x2F;td&gt;</span><br><span class="line">                &lt;&#x2F;tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td align&#x3D;&quot;right&quot;&gt;用户名&lt;&#x2F;td&gt;</span><br><span class="line">                    &lt;td colspan&#x3D;&quot;2&quot;&gt;&lt;input id&#x3D;&quot;loginnameId&quot; type&#x3D;&quot;text&quot; name&#x3D;&quot;loginname&quot; size&#x3D;&quot;50&quot;&#x2F;&gt;&lt;span</span><br><span class="line">                            id&#x3D;&quot;loginnamewarn&quot; class&#x3D;&quot;warn&quot;&gt;用户名不能为空&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;</span><br><span class="line">                &lt;&#x2F;tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td align&#x3D;&quot;right&quot;&gt;密码&lt;&#x2F;td&gt;</span><br><span class="line">                    &lt;td colspan&#x3D;&quot;2&quot;&gt;&lt;input id&#x3D;&quot;pwd1&quot; type&#x3D;&quot;password&quot; name&#x3D;&quot;pwd1&quot; size&#x3D;&quot;50&quot;&#x2F;&gt;&lt;&#x2F;td&gt;</span><br><span class="line">                &lt;&#x2F;tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td align&#x3D;&quot;right&quot;&gt;确认密码&lt;&#x2F;td&gt;</span><br><span class="line">                    &lt;td colspan&#x3D;&quot;2&quot;&gt;&lt;input id&#x3D;&quot;pwd2&quot; type&#x3D;&quot;password&quot; name&#x3D;&quot;pwd2&quot; size&#x3D;&quot;50&quot;&#x2F;&gt;&lt;span</span><br><span class="line">                            id&#x3D;&quot;pwdwarn&quot; class&#x3D;&quot;warn&quot;&gt;密码不一致&lt;&#x2F;span&gt;&lt;&#x2F;td&gt;</span><br><span class="line">                &lt;&#x2F;tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td align&#x3D;&quot;right&quot;&gt;Email&lt;&#x2F;td&gt;</span><br><span class="line">                    &lt;td colspan&#x3D;&quot;2&quot;&gt;&lt;input id&#x3D;&quot;email&quot; type&#x3D;&quot;text&quot; name&#x3D;&quot;email&quot; size&#x3D;&quot;50&quot;&#x2F;&gt; &lt;span id&#x3D;&quot;emailwarn&quot;</span><br><span class="line">                                                                                                 class&#x3D;&quot;warn&quot;&gt;邮箱格式有误&lt;&#x2F;span&gt;</span><br><span class="line">                    &lt;&#x2F;td&gt;</span><br><span class="line">                &lt;&#x2F;tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td align&#x3D;&quot;right&quot;&gt;姓名&lt;&#x2F;td&gt;</span><br><span class="line">                    &lt;td colspan&#x3D;&quot;2&quot;&gt;&lt;input name&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot; size&#x3D;&quot;50&quot;&#x2F;&gt;&lt;&#x2F;td&gt;</span><br><span class="line">                &lt;&#x2F;tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td align&#x3D;&quot;right&quot;&gt;性别&lt;&#x2F;td&gt;</span><br><span class="line">                    &lt;td colspan&#x3D;&quot;2&quot;&gt;</span><br><span class="line">                        &lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;gender&quot; value&#x3D;&quot;男&quot; checked&#x3D;&quot;checked&quot;&#x2F;&gt;男</span><br><span class="line">                        &lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;gender&quot; value&#x3D;&quot;女&quot;&#x2F;&gt;女</span><br><span class="line">                    &lt;&#x2F;td&gt;</span><br><span class="line">                &lt;&#x2F;tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td align&#x3D;&quot;right&quot;&gt;电话号码&lt;&#x2F;td&gt;</span><br><span class="line">                    &lt;td colspan&#x3D;&quot;2&quot;&gt;&lt;input id&#x3D;&quot;phone&quot; type&#x3D;&quot;text&quot; name&#x3D;&quot;phone&quot; size&#x3D;&quot;50&quot;&#x2F;&gt; &lt;span id&#x3D;&quot;phonewarn&quot;</span><br><span class="line">                                                                                                 class&#x3D;&quot;warn&quot;&gt;手机格式有误&lt;&#x2F;span&gt;</span><br><span class="line">                    &lt;&#x2F;td&gt;</span><br><span class="line">                &lt;&#x2F;tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td align&#x3D;&quot;right&quot;&gt;所在地&lt;&#x2F;td&gt;</span><br><span class="line">                    &lt;td colspan&#x3D;&quot;3&quot;&gt;</span><br><span class="line">                        &lt;select id&#x3D;&quot;provinceId&quot; onchange&#x3D;&quot;selectCity(this.value)&quot; style&#x3D;&quot;width:150px&quot;&gt;</span><br><span class="line">                            &lt;option value&#x3D;&quot;&quot;&gt;----请-选-择-省----&lt;&#x2F;option&gt;</span><br><span class="line">                            &lt;option value&#x3D;&quot;0&quot;&gt;北京&lt;&#x2F;option&gt;</span><br><span class="line">                            &lt;option value&#x3D;&quot;1&quot;&gt;辽宁&lt;&#x2F;option&gt;</span><br><span class="line">                            &lt;option value&#x3D;&quot;2&quot;&gt;江苏&lt;&#x2F;option&gt;</span><br><span class="line">                        &lt;&#x2F;select&gt;</span><br><span class="line">                        &lt;select id&#x3D;&quot;cityId&quot; style&#x3D;&quot;width:150px&quot;&gt;</span><br><span class="line">                            &lt;option&gt;----请-选-择-市----&lt;&#x2F;option&gt;</span><br><span class="line">                        &lt;&#x2F;select&gt;</span><br><span class="line">                    &lt;&#x2F;td&gt;</span><br><span class="line">                &lt;&#x2F;tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td width&#x3D;&quot;80&quot; align&#x3D;&quot;right&quot;&gt;验证码&lt;&#x2F;td&gt;</span><br><span class="line">                    &lt;td width&#x3D;&quot;100&quot;&gt;&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;verifyCode&quot;&#x2F;&gt;&lt;&#x2F;td&gt;</span><br><span class="line">                    &lt;td&gt;&lt;img src&#x3D;&quot;..&#x2F;img&#x2F;checkMa.png&quot;&#x2F;&gt;&lt;&#x2F;td&gt;</span><br><span class="line">                &lt;&#x2F;tr&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td&gt;&lt;&#x2F;td&gt;</span><br><span class="line">                    &lt;td colspan&#x3D;&quot;2&quot;&gt;</span><br><span class="line">                        &lt;input id&#x3D;&quot;rebtn&quot; type&#x3D;&quot;submit&quot; value&#x3D;&quot;注册&quot;&#x2F;&gt;</span><br><span class="line">                    &lt;&#x2F;td&gt;</span><br><span class="line">                &lt;&#x2F;tr&gt;</span><br><span class="line">            &lt;&#x2F;table&gt;</span><br><span class="line">        &lt;&#x2F;form&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.regist_bg</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(../img/bg.jpg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.regist</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">7px</span> inset <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">700px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">40px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">25%</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">"submit"</span>]</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: aliceblue;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.warn</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h4 id="4-2-商品全选"><a href="#4-2-商品全选" class="headerlink" title="4.2 商品全选"></a>4.2 商品全选</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn1"</span>&gt;</span>1.全选<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn2"</span>&gt;</span>2.反选<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn3"</span>&gt;</span>3.全部取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>Computer</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>Phone</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>Car</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>House</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span>=<span class="string">"true"</span>&gt;</span>NoteBook</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> boxs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'input[type="checkbox"]'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> box <span class="keyword">of</span> boxs) &#123;</span></span><br><span class="line"><span class="actionscript">            box.checked=<span class="literal">true</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn2'</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> box <span class="keyword">of</span> boxs) &#123;</span></span><br><span class="line">            box.checked=!box.checked;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn3'</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> box <span class="keyword">of</span> boxs) &#123;</span></span><br><span class="line"><span class="actionscript">            box.checked=<span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-3-省市联动"><a href="#4-3-省市联动" class="headerlink" title="4.3 省市联动"></a>4.3 省市联动</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">data[<span class="string">'A'</span>] = [<span class="string">'A1'</span>, <span class="string">'A2'</span>, <span class="string">'A3'</span>];</span><br><span class="line">data[<span class="string">'B'</span>] = [<span class="string">'B1'</span>, <span class="string">'B2'</span>, <span class="string">'B3'</span>];</span><br><span class="line">data[<span class="string">'C'</span>] = [<span class="string">'C1'</span>, <span class="string">'C2'</span>, <span class="string">'C3'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> provinceID = <span class="built_in">document</span>.getElementById(<span class="string">"provinceId"</span>);</span><br><span class="line"><span class="keyword">let</span> cityID = <span class="built_in">document</span>.getElementById(<span class="string">"cityId"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.页面加载成功后，初始化省份数据</span></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> index <span class="keyword">in</span> data) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(index);</span><br><span class="line">        provinceId.innerHTML +=<span class="string">`&lt;option value="<span class="subst">$&#123;index&#125;</span>"&gt;<span class="subst">$&#123;index&#125;</span>&lt;/option&gt;`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.给省份下拉框绑定onchange事件</span></span><br><span class="line">provinceId.onchange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.value);<span class="comment">//当前用户选中的value值,它就是二维数组的索引</span></span><br><span class="line">    <span class="built_in">console</span>.log(data[<span class="keyword">this</span>.value]);</span><br><span class="line">    <span class="comment">//3.城市列表</span></span><br><span class="line">    cityId.innerHTML = <span class="string">'&lt;option value=""&gt;----请-选-择-市----&lt;/option&gt;'</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.value);</span><br><span class="line">    <span class="built_in">console</span>.log(data[<span class="keyword">this</span>.value]);</span><br><span class="line">    <span class="keyword">let</span> citys = data[<span class="keyword">this</span>.value];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> city <span class="keyword">of</span> citys) &#123;</span><br><span class="line">        cityId.innerHTML += <span class="string">`&lt;option value="<span class="subst">$&#123;city&#125;</span>"&gt;<span class="subst">$&#123;city&#125;</span>&lt;/option&gt;`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <details><summary>点我展开html和css</summary><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Case 03<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../css/case03.css"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"regist_bg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"regist"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"600"</span> <span class="attr">height</span>=<span class="string">"350px"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#3164af"</span>&gt;</span>会员注册<span class="tag">&lt;/<span class="name">font</span>&gt;</span> USER REGISTER</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"loginnameId"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"loginname"</span> <span class="attr">size</span>=<span class="string">"60"</span> /&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"loginpwdId"</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"loginpwd"</span> <span class="attr">size</span>=<span class="string">"60"</span> /&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>确认密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"reloginpwdId"</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"reloginpwd"</span> <span class="attr">size</span>=<span class="string">"60"</span> /&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"emailId"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">size</span>=<span class="string">"60"</span> /&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">size</span>=<span class="string">"60"</span> /&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"男"</span> <span class="attr">checked</span>=<span class="string">"checked"</span> /&gt;</span>男</span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"女"</span> /&gt;</span>女</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>电话号码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"phone"</span> <span class="attr">size</span>=<span class="string">"60"</span> /&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>所在地<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"provinceId"</span> <span class="attr">style</span>=<span class="string">"width:150px"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>----请-选-择-省----<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"cityId"</span> <span class="attr">style</span>=<span class="string">"width:150px"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>----请-选-择-市----<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"80"</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"100"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"verifyCode"</span> /&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/checkMa.png"</span> /&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1.当页面加载成功后，要初始化省份信息</span></span><br><span class="line"><span class="comment">    页面加载事件,遍历数组的索引</span></span><br><span class="line"><span class="comment">2.给省份下拉框绑定onchange事件</span></span><br><span class="line"><span class="comment">    根据用户选择的省份查询对应的</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/case03.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">.regist_bg &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 600px;</span><br><span class="line">    padding-top: 40px;</span><br><span class="line">    background-image: url(../img/bg.jpg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.regist &#123;</span><br><span class="line">    border: 7px inset #ccc;</span><br><span class="line">    width: 600px;</span><br><span class="line">    padding: 40px 0;</span><br><span class="line">    padding-left: 80px;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">    margin-left: 25%;</span><br><span class="line">    border-radius: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input[type="submit"] &#123;</span><br><span class="line">    background-color: aliceblue;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 35px;</span><br><span class="line">    color: red;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h4 id="4-4-隔行换色"><a href="#4-4-隔行换色" class="headerlink" title="4.4 隔行换色"></a>4.4 隔行换色</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> oldColor;</span><br><span class="line"><span class="comment">//获取所有数组对象</span></span><br><span class="line"><span class="keyword">let</span> trs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'table tr'</span>);<span class="comment">//注意:这里使用的是后代选择器,这里是js的一个小坑</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; trs.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;<span class="comment">//偶数索引,奇数行</span></span><br><span class="line">        trs[i].style.backgroundColor = <span class="string">'lightgray'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;<span class="comment">//奇数索引，偶数行</span></span><br><span class="line">        trs[i].style.backgroundColor = <span class="string">'skyblue'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    trs[i].onmouseover = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">//鼠标移入某一行</span></span><br><span class="line">        <span class="comment">//获取当前行的颜色</span></span><br><span class="line">        oldColor=trs[i].style.backgroundColor;</span><br><span class="line">        trs[i].style.backgroundColor = <span class="string">'brown'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    trs[i].onmouseout = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">//鼠标移出某一行</span></span><br><span class="line">        trs[i].style.backgroundColor=oldColor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> tds = <span class="built_in">document</span>.querySelectorAll(<span class="string">'table td'</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; tds.length; i++) &#123;</span><br><span class="line">    tds[i].onmouseover=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        tds[i].style.backgroundColor=<span class="string">'Green'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    tds[i].onmouseout = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">//鼠标移出某一行</span></span><br><span class="line">        tds[i].style.backgroundColor=oldColor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <details><summary>点我展开html</summary><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"tab1"</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"800"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"100px"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>全/<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span>反选<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>分类ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>分类名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>分类描述<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>手机数码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>手机数码类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>电脑办公<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>电脑办公类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>鞋靴箱包<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>鞋靴箱包类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>家居饰品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>家居饰品类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>牛奶制品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>牛奶制品类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>大豆制品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>大豆制品类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>7<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>海参制品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>海参制品类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>羊绒制品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>羊绒制品类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>9<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>海洋产品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>海洋产品类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>10<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>奢侈用品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>奢侈用品类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>家居饰品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>家居饰品类商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></details><h4 id="4-5-拓展-为什么不用var"><a href="#4-5-拓展-为什么不用var" class="headerlink" title="4.5 拓展:为什么不用var"></a>4.5 拓展:为什么不用var</h4><ul><li>ES6之前作用域为全局，容易导致变量有值被新值替代，局部变量使用let可以自动销毁，推荐let</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// for循环举例：var声明变量全局作用域、let声明变量是局部作用域</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">'&lt;h3&gt;我是var修饰遍历的内容&lt;/h3&gt;'</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">'&lt;h3&gt;我是let修饰遍历的内容&lt;/h3&gt;'</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// console.log(j);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">let</span> b = <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 可以取到</span></span><br><span class="line"><span class="built_in">console</span>.log(b); <span class="comment">// 不能取到</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h3><h2 id="BOM对象"><a href="#BOM对象" class="headerlink" title="BOM对象"></a>BOM对象</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li>浏览器对象模型</li></ul><h3 id="Window对象"><a href="#Window对象" class="headerlink" title="Window对象"></a>Window对象</h3><ul><li><p>三种弹框</p><ul><li>alert()</li><li>confim()</li><li>prompt()</li></ul></li><li><p>二种定时器</p><ul><li><p>setTimeout(函数,毫秒)</p><ul><li>clearTimeout(定时器)</li></ul></li><li><p>setInterval(函数,毫秒)</p><ul><li>clearInterval(定时器)</li></ul></li></ul></li></ul><h3 id="Location对象"><a href="#Location对象" class="headerlink" title="Location对象"></a>Location对象</h3><ul><li><p>reload()</p></li><li><p>href</p><ul><li>跳转页面</li></ul></li></ul><h2 id="DOM对象"><a href="#DOM对象" class="headerlink" title="DOM对象"></a>DOM对象</h2><h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><ul><li>文档对象模型</li></ul><h3 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h3><ul><li><p>ES5</p><ul><li>getElementById(id属性值)</li></ul></li><li><p>ES6</p><ul><li>querySelector(CSS选择器)</li><li>querySelectorAll(CSS选择器)</li></ul></li></ul><h3 id="操作内容"><a href="#操作内容" class="headerlink" title="操作内容"></a>操作内容</h3><ul><li>innerText</li><li>innerHTML</li></ul><h3 id="操作属性"><a href="#操作属性" class="headerlink" title="操作属性"></a>操作属性</h3><ul><li><p>js对象.属性名</p><ul><li>原生属性</li></ul></li></ul><h3 id="操作样式"><a href="#操作样式" class="headerlink" title="操作样式"></a>操作样式</h3><ul><li>js对象.style.样式名(驼峰格式)</li><li>js对象.style.cssText</li><li>js对象.className</li></ul><h3 id="操作元素"><a href="#操作元素" class="headerlink" title="操作元素"></a>操作元素</h3><ul><li><p>添加元素</p><ul><li><p>js对象.innerHTML +=追加内容</p></li><li><p>document.createjs对象(标签)</p><ul><li>parentNode.appendChild(newNode)</li></ul></li></ul></li></ul><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><ul><li>let rege = new RegExp(“正则表达式”);</li><li>let regex = /正则表达式/;</li></ul><h3 id="验证方法"><a href="#验证方法" class="headerlink" title="验证方法"></a>验证方法</h3><ul><li>正则对象.test(字符串)</li></ul><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="表单校验"><a href="#表单校验" class="headerlink" title="表单校验"></a>表单校验</h3><ul><li>发挥大家的想象力</li></ul><h3 id="商品全选"><a href="#商品全选" class="headerlink" title="商品全选"></a>商品全选</h3><h3 id="省市联动"><a href="#省市联动" class="headerlink" title="省市联动"></a>省市联动</h3><h3 id="隔行换色"><a href="#隔行换色" class="headerlink" title="隔行换色"></a>隔行换色</h3><p><em>XMind: ZEN - Trial Version</em></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>金老师C#课</title>
      <link href="/2020/04/06/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E9%97%A8%E7%BC%96%E7%A8%8B%E8%AF%BE%EF%BC%88C-Sharp%E7%89%88%EF%BC%89/"/>
      <url>/2020/04/06/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E9%97%A8%E7%BC%96%E7%A8%8B%E8%AF%BE%EF%BC%88C-Sharp%E7%89%88%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>C#基本编程原则</li><li>程序是如何被计算机执行的</li><li>.NET运行原理</li><li>怎样构造求解问题的算法<a id="more"></a></li></ul><h1 id="一-大致了解C-基本编程规则"><a href="#一-大致了解C-基本编程规则" class="headerlink" title="一.大致了解C#基本编程规则"></a>一.大致了解C#基本编程规则</h1><h4 id="1-1-基本规则"><a href="#1-1-基本规则" class="headerlink" title="1.1 基本规则"></a>1.1 基本规则</h4><ul><li>“标识符(identifier:即程序中拥有特殊含义的单词)”区分大小写</li><li>每条语句以分号结尾，多条语句可以使用”{}”组合为一个语句块</li><li>编写的代码放在”类(class)”中，类是C#编程的基本单元</li><li>存放C#类的源代码文件其扩展名为”.cs”,一个”.cs”文件中可以存放多个C#类</li></ul><h4 id="1-2-Visual-Studio中文件的组织方式"><a href="#1-2-Visual-Studio中文件的组织方式" class="headerlink" title="1.2 Visual Studio中文件的组织方式:"></a>1.2 Visual Studio中文件的组织方式:</h4><ul><li>“项目(Project)”是Visual Studio编译的最小单元</li><li>一个”解决方案(solution)”中可以有多个项目，显示为粗体的是启动项目</li><li>一个项目中可以有多个类文件。一个类只有被包括在一个项目中，才可以被Visual Studio编译</li><li>程序入口点是Program类中的Main()方法</li></ul><h4 id="1-3-为什么要学习面向对象程序设计"><a href="#1-3-为什么要学习面向对象程序设计" class="headerlink" title="1.3 为什么要学习面向对象程序设计"></a>1.3 为什么要学习面向对象程序设计</h4><ul><li>面向对象是一种主流的软件开发与设计方法</li><li>当前各种软件系统，基本都是应用面向对象思想与计算开发出来的</li></ul><h4 id="1-4-软件是如何编写的"><a href="#1-4-软件是如何编写的" class="headerlink" title="1.4 软件是如何编写的"></a>1.4 软件是如何编写的</h4><table><thead><tr><th>面临问题</th><th>做出决策</th></tr></thead><tbody><tr><td>如何设计与选中特定的算法处理信息</td><td>可以选择已有的算法，也可以设计新的算法<br>算法:分而治之，动态规划<br>程序控制结构:分支，循环，递归</td></tr><tr><td>如何表达以方便计算机处理</td><td>设计和选用合适的数据结构</td></tr><tr><td>如何编写程序实现算法</td><td>选择合适的技术手段，设计合理的技术方案。软件系统价格，面向对象的分析与设计，编程语言，开发框架，软件平台…</td></tr></tbody></table><h4 id="1-5-需要掌握基础知识"><a href="#1-5-需要掌握基础知识" class="headerlink" title="1.5 需要掌握基础知识"></a>1.5 需要掌握基础知识</h4><p>程序如何被计算机执行–&gt;各种信息是如何用0/1表达的–&gt;计算机是由哪些元件组成，工作原理是什么–&gt;操作系统如何启动一个程序的执行<br/><br>如何编写可以执行的程序–&gt;第一步:编写源代码–&gt;第二步:编译–&gt;第三步:得到可执行的程序<br/><br>增压构造求解问题的算法–&gt;分析问题–&gt;设计算法–&gt;编写程序</p><h1 id="二-程序是如何被计算机执行的"><a href="#二-程序是如何被计算机执行的" class="headerlink" title="二.程序是如何被计算机执行的"></a>二.程序是如何被计算机执行的</h1><h4 id="2-1-计算机能直接执行由0和1构成的机器指令"><a href="#2-1-计算机能直接执行由0和1构成的机器指令" class="headerlink" title="2.1 计算机能直接执行由0和1构成的机器指令"></a>2.1 计算机能直接执行由0和1构成的机器指令</h4><p>计算机中数值信息，直接用二进制”0”和”1”表达，非数值信息，采用”编码”的手段</p><p>“门”是这样的一种电路：它规定各个输入信号之间满足某种逻辑关系时，才有信号输出，通常有下列三种门电路：与门、或门、非门（反相器）。从逻辑关系看，门电路的输入端或输出端只有两种状态，无信号以“0”表示，有信号以“1”表示。</p><ul><li>以”0”和”1”表达的指令，可以由计算机硬件直接执行，因此，将它们称为”机器指令”</li><li>不同体系结构的计算机硬件，能执行的机器指令是不一样的，每种机器能执行的所有机器指令，称为这种机器的”指令集” <h4 id="2-2-计算机的大脑——CPU"><a href="#2-2-计算机的大脑——CPU" class="headerlink" title="2.2 计算机的大脑——CPU"></a>2.2 计算机的大脑——CPU</h4></li><li>CPU可以执行机器指令(“0”和”1”)</li><li>指令与数据通常保存在文件中</li></ul><p>指令&amp;数据-&gt;可执行程序文件(.exe)</p><p>Win平台下可执行文件通常以.exe结尾，另一种扩展名为.dll(动态链接库)需要被.exe装入后才能执行</p><h4 id="2-3-外部存储器-amp-Memory-内存-与内存条"><a href="#2-3-外部存储器-amp-Memory-内存-与内存条" class="headerlink" title="2.3 外部存储器 &amp; Memory(内存)与内存条"></a>2.3 外部存储器 &amp; Memory(内存)与内存条</h4><ul><li>各种程序平常保存在外部存储器中<br>如硬盘，U盘等</li><li>放在外部存储器中的程序并不能直接允许，需要被装入内存后，才能执行<br>内存条中的存储新品包容许多存储单元，用于保存程序指令和数据<br>存储单元的集合，称为”内存”</li></ul><table><thead><tr><th>001011…</th></tr></thead><tbody><tr><td>011010…</td></tr><tr><td>101011…</td></tr><tr><td></td></tr><tr><td></td></tr><tr><td></td></tr></tbody></table><p>内存存储数据—&gt;分为指令,指令使用的数据</p><table><thead><tr><th align="center"><div align="center">可执行程序.exe文件保存在外部存储器</div></th></tr></thead><tbody><tr><td align="center">⬇</td></tr><tr><td align="center">在计算机上双击，系统读取文件，把它包容的指令和数据装载到内存</td></tr><tr><td align="center">⬇</td></tr><tr><td align="center">CPU直接存取放在内存存储单元的数据，并负责执行这些指令</td></tr></tbody></table><h4 id="2-4-区分两种不同的内存类型"><a href="#2-4-区分两种不同的内存类型" class="headerlink" title="2.4 区分两种不同的内存类型"></a>2.4 区分两种不同的内存类型</h4><ul><li><p>物理内存<br>计算机上的物理芯片</p></li><li><p>虚拟内存<br>操作系统所提供的”虚拟内存”</p></li></ul><p>C#写的.NET程序,无法直接访问物理内存上的特定数据单元,它所访问的上由操作系统负责提供的”虚拟内存”</p><h4 id="2-5-程序开发与运行过程简述"><a href="#2-5-程序开发与运行过程简述" class="headerlink" title="2.5 程序开发与运行过程简述"></a>2.5 程序开发与运行过程简述</h4><table><thead><tr><th align="center"><div align="center">软件工程师用各种编程语言写计算机程序</div></th></tr></thead><tbody><tr><td align="center">⬇</td></tr><tr><td align="center">编译器把源程序转换为二进制指令与数据，以文件方式保存在外部存储器中</td></tr><tr><td align="center">⬇</td></tr><tr><td align="center">操作系统将程序文件从外部存储器读入到内存中</td></tr><tr><td align="center">⬇</td></tr><tr><td align="center">CPU从内存中取出指令执行</td></tr></tbody></table><h1 id="三-Dot-Net运行原理"><a href="#三-Dot-Net运行原理" class="headerlink" title="三.Dot Net运行原理"></a>三.Dot Net运行原理</h1><h4 id="3-1-“编译”是怎么回事"><a href="#3-1-“编译”是怎么回事" class="headerlink" title="3.1 “编译”是怎么回事"></a>3.1 “编译”是怎么回事</h4><table><thead><tr><th align="center"><div align="center">纯文本形式的源代码</div></th></tr></thead><tbody><tr><td align="center">⬇提交</td></tr><tr><td align="center">C#编译器编译源码</td></tr><tr><td align="center">⬇生成</td></tr><tr><td align="center">二进制形式的可执行程序文件(HelloWorld.exe)</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">using System;&#x2F;&#x2F;表示将使用.Net基类库中的System命名空间</span><br><span class="line"></span><br><span class="line">public class Program&#x2F;&#x2F;类名Program</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;程序入口点Main(数组[] 参数名)</span><br><span class="line">    static void Main(string[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(&quot;Hello,World&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;保存为ANSI格式(源代码标准格式)</span><br><span class="line">&#x2F;&#x2F;helloworld.cs</span><br></pre></td></tr></table></figure><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">csc helloworld.cs</span><br><span class="line"></span><br><span class="line">Microsoft (R) Visual C<span class="meta"># Compiler version 3.5.0-beta4-20121-02 (00d6c926)</span></span><br><span class="line">Copyright (C) Microsoft Corporation. All rights reserved.</span><br></pre></td></tr></table></figure><br><p><strong>“编译(compile)”,粗略地说,它负责把人编写的源代码”翻译”为计算机可以识别并执行的二进制代码</strong></p><h4 id="3-2-可执行程序也是分类的"><a href="#3-2-可执行程序也是分类的" class="headerlink" title="3.2 可执行程序也是分类的"></a>3.2 可执行程序也是分类的</h4><ul><li>可执行程序也分很多类型，在Windows平台下，可分为</li></ul><table>   <tr>        <td colspan="2" align="center">可执行程序</td>       </tr>   <tr>        <td align="center">⬇</td>         <td align="center">⬇</td>    </tr>    <tr>        <td align="center">托管程序</td>            <td align="center">非托管程序</td>      </tr>    <tr>        <td align="center">例如:使用C#,VB.NET编写的可执行程序,运行时要求目标计算机上必须安装有.NET Framework</td>            <td align="center">例如:使用C/C++编写的可执行程序,可以不需要安装额外软件，就能直接在操作系统中运行</td>      </tr></table><h4 id="3-3-“托管的”应用程序是什么意思"><a href="#3-3-“托管的”应用程序是什么意思" class="headerlink" title="3.3 “托管的”应用程序是什么意思"></a>3.3 “托管的”应用程序是什么意思</h4><p> .NET应用程序是”托管(Managed)”的，意思是它必须在一个独立的运行环境(即CLR)中运行,并收到这个运行环境的管理与控制</p><table><thead><tr><th align="center"><div align="center">.NET应用程序</div></th></tr></thead><tbody><tr><td align="center">⬆管理</td></tr><tr><td align="center"><span style="color: red">.NET虚拟机(CLR) </span> <br/>CLR:通用语言运行时.NET应用程序的运行环境,可以看成是一台专用于运行.NET应用程序的虚拟机(Virtual Machine)</td></tr><tr><td align="center">⬇调用功能</td></tr><tr><td align="center">操作系统(Windows)</td></tr><tr><td align="center">⬇管理</td></tr><tr><td align="center">构成计算机的各种硬件</td></tr></tbody></table><h4 id="3-4-NET程序的开发与运行”全景图”"><a href="#3-4-NET程序的开发与运行”全景图”" class="headerlink" title="3.4 .NET程序的开发与运行”全景图”"></a>3.4 .NET程序的开发与运行”全景图”</h4><p><img src="1.png" alt=""></p><h1 id="四-怎样构造求解问题的算法"><a href="#四-怎样构造求解问题的算法" class="headerlink" title="四.怎样构造求解问题的算法"></a>四.怎样构造求解问题的算法</h1><h4 id="4-1-什么是”算法-algorithm-”"><a href="#4-1-什么是”算法-algorithm-”" class="headerlink" title="4.1 什么是”算法(algorithm)”"></a>4.1 什么是”算法(algorithm)”</h4><p>计算机中的<span style="color:red">算法</span>,主要是指为了解决某个问题而设计的一种解决方案,包容一系列计算机能够执行的有着特定顺序的命令,计算机执行完这些命令，将得到某种结果,意味着某个问题已经有了一个结论</p><ul><li>算法的针对性很强,专用于解决特定的问题<br>算法的设计,通常与数学有很密切的联系，并且是<span style="color:red">独立于</span>特定的编程语言和软件平台的，这就是说:</li></ul><p><strong>可以使用多种编程语言,以多种方式，在不同的平台上实现同一个算法</strong></p><h4 id="4-2-从”结构化”到”面向对象”"><a href="#4-2-从”结构化”到”面向对象”" class="headerlink" title="4.2 从”结构化”到”面向对象”"></a>4.2 从”结构化”到”面向对象”</h4><ul><li>程序是一个”黑盒”,程序=数据结构+算法</li><li>程序设计可以看成是一种”抽象”的艺术<br>使用”抽象”的思维方式,构造软件系统的顶层模型</li></ul><h5 id="4-2-1-数据结构————对数据进行抽象"><a href="#4-2-1-数据结构————对数据进行抽象" class="headerlink" title="4.2.1 数据结构————对数据进行抽象"></a>4.2.1 数据结构————对数据进行抽象</h5><ul><li>先确定一种数据结构，如何基于此数据结构设计算法<br>在程序设计中，依据要解决的特定问题,分析它所设计的相关数据和其中蕴含的各种信息,安装特定编程语言所制成的语法特性，将它们转换为特定的数据结构，往往是整个开发中至关重要的一步<h5 id="4-2-2-基于数据结构确定算法"><a href="#4-2-2-基于数据结构确定算法" class="headerlink" title="4.2.2 基于数据结构确定算法"></a>4.2.2 基于数据结构确定算法</h5></li><li>将人的计算方法转换为计算机算法，每个算法用一个函数实现<br>算法就是一系列的命令,计算机通过执行这些命令，完成特定的数据处理工作<h5 id="4-2-3-进一步细化与调整设计方案"><a href="#4-2-3-进一步细化与调整设计方案" class="headerlink" title="4.2.3 进一步细化与调整设计方案"></a>4.2.3 进一步细化与调整设计方案</h5><h5 id="4-2-4-最终的技术设计方案"><a href="#4-2-4-最终的技术设计方案" class="headerlink" title="4.2.4 最终的技术设计方案"></a>4.2.4 最终的技术设计方案</h5></li><li>“由粗略到详细”,”从上层到下层”地逐层设计<h5 id="4-2-5-确定开发顺序的基本方法"><a href="#4-2-5-确定开发顺序的基本方法" class="headerlink" title="4.2.5 确定开发顺序的基本方法"></a>4.2.5 确定开发顺序的基本方法</h5></li><li>具体开发时,”从 下层 到 上层”地逐层开发，像盖楼一样</li></ul><table><thead><tr><th align="center"><div align="center">开发被别人调用，自己不用调用别人的函数</div></th></tr></thead><tbody><tr><td align="center">⬇</td></tr><tr><td align="center">开发中间层函数，它需要调用底层已经实现好的函数</td></tr><tr><td align="center">⬇</td></tr><tr><td align="center">开发顶层函数，它需要调用中间层已经实现好的函数，通常情况下，避免跨层调用</td></tr></tbody></table> <details><summary style="color:blue"><b>点击展开结构化代码</b></summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">namespace Lesson_02_Calculate_1_SP</span><br><span class="line">&#123;</span><br><span class="line">    public class MyDate</span><br><span class="line">    &#123;</span><br><span class="line">        public int Year;</span><br><span class="line">        public int Month;</span><br><span class="line">        public int Day;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line"></span><br><span class="line">namespace Lesson_02_Calculate_1_SP</span><br><span class="line">&#123;</span><br><span class="line">    internal class Program</span><br><span class="line">    &#123;</span><br><span class="line">        static int[] months &#x3D; &#123;0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31&#125;;</span><br><span class="line"></span><br><span class="line">        public static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            MyDate d1 &#x3D; new MyDate();</span><br><span class="line">            MyDate d2 &#x3D; new MyDate(); &#x2F;&#x2F;起始日期和结束日期</span><br><span class="line">            &#x2F;&#x2F;1999年5月10日</span><br><span class="line">            d1.Year &#x3D; 1999;</span><br><span class="line">            d1.Month &#x3D; 5;</span><br><span class="line">            d1.Day &#x3D; 10;</span><br><span class="line">            &#x2F;&#x2F;2006年3月8日</span><br><span class="line">            d2.Year &#x3D; 2006;</span><br><span class="line">            d2.Month &#x3D; 3;</span><br><span class="line">            d2.Day &#x3D; 8;</span><br><span class="line">            &#x2F;&#x2F;计算结果</span><br><span class="line">            int days &#x3D; CalculateDaysOfTwoDate(d1, d2);</span><br><span class="line"></span><br><span class="line">            string str &#x3D; &quot;&#123;0&#125;年&#123;1&#125;月&#123;2&#125;日到&#123;3&#125;年&#123;4&#125;月&#123;5&#125;日共有天数：&quot;;</span><br><span class="line">            str &#x3D; String.Format(str, d1.Year, d1.Month, d1.Day, d2.Year, d2.Month, d2.Day);</span><br><span class="line">            Console.WriteLine(str + days);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;暂停,敲任意键结束</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        &#x2F;&#x2F;计算两个日期中的整天数</span><br><span class="line">        static int CalculateDaysOfTwoDate(MyDate beginDate, MyDate endDate)</span><br><span class="line">        &#123;</span><br><span class="line">            int days &#x3D; 0;</span><br><span class="line">            days &#x3D; CalculateDaysOfTwoYear(beginDate.Year, endDate.Year);</span><br><span class="line">            if (beginDate.Year &#x3D;&#x3D; endDate.Year)</span><br><span class="line">                days +&#x3D; CalculateDaysOfTwoMonth(beginDate, endDate, true);</span><br><span class="line">            else</span><br><span class="line"></span><br><span class="line">                days +&#x3D; CalculateDaysOfTwoMonth(beginDate, endDate, false);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            return days;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;计算机两年之间整年天数，不足一年的去掉</span><br><span class="line">        static int CalculateDaysOfTwoYear(int beginYear, int endYear)</span><br><span class="line">        &#123;</span><br><span class="line">            int days &#x3D; 0;</span><br><span class="line">            for (int i &#x3D; beginYear + 1; i &lt;&#x3D; endYear - 1; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                if (IsLeapYear(i))</span><br><span class="line">                    days +&#x3D; 366;</span><br><span class="line">                else</span><br><span class="line"></span><br><span class="line">                    days +&#x3D; 365;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return days;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 根据两个日期，计算机这两个日期之间的天数</span><br><span class="line">        static int CalculateDaysOfTwoMonth(MyDate beginDate, MyDate endDate, bool IsInOneYear)</span><br><span class="line">        &#123;</span><br><span class="line">            int days &#x3D; 0;</span><br><span class="line">            &#x2F;&#x2F;对于同一月，天数直接相减</span><br><span class="line">            if (beginDate.Month &#x3D;&#x3D; endDate.Month)</span><br><span class="line">                if (IsInOneYear)</span><br><span class="line">                    return endDate.Day - beginDate.Day;</span><br><span class="line">                else if (IsLeapYear(beginDate.Year))</span><br><span class="line">                    return 366 + (endDate.Day - beginDate.Day);</span><br><span class="line">                else</span><br><span class="line">                    return 365 + (endDate.Day - beginDate.Day);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;不同月</span><br><span class="line">            int i &#x3D; 0;</span><br><span class="line">            if (IsInOneYear)</span><br><span class="line">            &#123;</span><br><span class="line">                &#x2F;&#x2F;同一年</span><br><span class="line">                for (i &#x3D; beginDate.Month; i &lt;&#x3D; endDate.Month; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    days +&#x3D; months[i];</span><br><span class="line">                    &#x2F;&#x2F;处理闰二月</span><br><span class="line">                    if ((IsLeapYear(beginDate.Year) &amp;&amp; (i &#x3D;&#x3D; 2)))</span><br><span class="line">                        days +&#x3D; 1;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                &#x2F;&#x2F;减去月初到起始日的天数</span><br><span class="line">                days -&#x3D; beginDate.Day;</span><br><span class="line">                &#x2F;&#x2F;减去结束日到月底的天数</span><br><span class="line">                days -&#x3D; months[endDate.Month] - endDate.Day;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                &#x2F;&#x2F;不同年</span><br><span class="line">                &#x2F;&#x2F;计算到年底的天数</span><br><span class="line">                for (i &#x3D; beginDate.Month; i &lt;&#x3D; 12; i++)</span><br><span class="line">                    days +&#x3D; months[i];</span><br><span class="line"></span><br><span class="line">                &#x2F;&#x2F;减去月初到起始日的天数</span><br><span class="line">                days -&#x3D; beginDate.Day;</span><br><span class="line">                &#x2F;&#x2F;从年初到结束月的天数</span><br><span class="line">                for (i &#x3D; 1; i &lt;&#x3D; endDate.Month; i++)</span><br><span class="line">                    days +&#x3D; months[i];</span><br><span class="line"></span><br><span class="line">                &#x2F;&#x2F;减去结束日到月底的天数</span><br><span class="line">                days -&#x3D; months[endDate.Month] - endDate.Day;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return days;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        static bool IsLeapYear(int year)</span><br><span class="line">        &#123;</span><br><span class="line">            &#x2F;&#x2F;如果年能被400整除，是闰年</span><br><span class="line">            if (year % 400 &#x3D;&#x3D; 0)</span><br><span class="line">            &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;能被4整除，但不能被100整除，是闰年</span><br><span class="line">            if (year % 4 &#x3D;&#x3D; 0 &amp;&amp; year % 100 !&#x3D; 0)</span><br><span class="line">            &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;其他情况，是平年</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h4 id="4-3-转为面向对象实现"><a href="#4-3-转为面向对象实现" class="headerlink" title="4.3 转为面向对象实现"></a>4.3 转为面向对象实现</h4><ul><li><p>给函数搬一个家–类</p></li><li><p>重大变化:<br>1）DateCalculator这个类的<span style="color:red">职责很明确</span>,它负责”计算日期”,除此之外什么都不做<br>2）外界只能”看到”并调用它所定义的唯一一个”<span style="color:red">公有(public)</span>“方法<br>CalculateDaysOfTwoDate(),根本家不知道它内部定义是什么样的</p></li><li><p>面向对象带来的好处:<br>1)从使用者角度，DateCalculator类因为”<span style="color:red">简单</span>“,所以”<span style="color:red">易用</span>“<br>2)具体计算日期的算法被封装道理DateCalculator类的内部，<span style="color:red">在必要时可以修改算法,外部调用者不会收到影响</span>，其调用代码不需要改变</p></li></ul><details><summary style="color:blue"><b>点击展开面向对象代码</b></summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">namespace Lesson_02_Calculate_2_OO</span><br><span class="line">&#123;</span><br><span class="line">    public class MyDate</span><br><span class="line">    &#123;</span><br><span class="line">        public int Year;</span><br><span class="line">        public int Month;</span><br><span class="line">        public int Day;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line">namespace Lesson_02_Calculate_2_OO</span><br><span class="line">&#123;</span><br><span class="line">    public class DateCalculate</span><br><span class="line">    &#123;</span><br><span class="line">        private int[] months &#x3D; &#123;0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31&#125;;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        &#x2F;&#x2F; 计算两个日期中的整天数</span><br><span class="line">        public int CalculateDaysOfTwoDate(MyDate beginDate, MyDate endDate)</span><br><span class="line">        &#123;</span><br><span class="line">            int days &#x3D; 0;</span><br><span class="line">            days &#x3D; CalculateDaysOfTwoYear(beginDate.Year, endDate.Year);</span><br><span class="line">            if (beginDate.Year &#x3D;&#x3D; endDate.Year)</span><br><span class="line">                days +&#x3D; CalculateDaysOfTwoMonth(beginDate, endDate, true);</span><br><span class="line">            else</span><br><span class="line"></span><br><span class="line">                days +&#x3D; CalculateDaysOfTwoMonth(beginDate, endDate, false);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            return days;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;计算机两年之间整年天数，不足一年的去掉</span><br><span class="line">        private int CalculateDaysOfTwoYear(int beginYear, int endYear)</span><br><span class="line">        &#123;</span><br><span class="line">            int days &#x3D; 0;</span><br><span class="line">            for (int i &#x3D; beginYear + 1; i &lt;&#x3D; endYear - 1; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                if (IsLeapYear(i))</span><br><span class="line">                    days +&#x3D; 366;</span><br><span class="line">                else</span><br><span class="line"></span><br><span class="line">                    days +&#x3D; 365;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return days;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 根据两个日期，计算机这两个日期之间的天数</span><br><span class="line">        private int CalculateDaysOfTwoMonth(MyDate beginDate, MyDate endDate, bool IsInOneYear)</span><br><span class="line">        &#123;</span><br><span class="line">            int days &#x3D; 0;</span><br><span class="line">            &#x2F;&#x2F;对于同一月，天数直接相减</span><br><span class="line">            if (beginDate.Month &#x3D;&#x3D; endDate.Month)</span><br><span class="line">                if (IsInOneYear)</span><br><span class="line">                    return endDate.Day - beginDate.Day;</span><br><span class="line">                else if (IsLeapYear(beginDate.Year))</span><br><span class="line">                    return 366 + (endDate.Day - beginDate.Day);</span><br><span class="line">                else</span><br><span class="line">                    return 365 + (endDate.Day - beginDate.Day);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;不同月</span><br><span class="line">            int i &#x3D; 0;</span><br><span class="line">            if (IsInOneYear)</span><br><span class="line">            &#123;</span><br><span class="line">                &#x2F;&#x2F;同一年</span><br><span class="line">                for (i &#x3D; beginDate.Month; i &lt;&#x3D; endDate.Month; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    days +&#x3D; months[i];</span><br><span class="line">                    &#x2F;&#x2F;处理闰二月</span><br><span class="line">                    if ((IsLeapYear(beginDate.Year) &amp;&amp; (i &#x3D;&#x3D; 2)))</span><br><span class="line">                        days +&#x3D; 1;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                &#x2F;&#x2F;减去月初到起始日的天数</span><br><span class="line">                days -&#x3D; beginDate.Day;</span><br><span class="line">                &#x2F;&#x2F;减去结束日到月底的天数</span><br><span class="line">                days -&#x3D; months[endDate.Month] - endDate.Day;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                &#x2F;&#x2F;不同年</span><br><span class="line">                &#x2F;&#x2F;计算到年底的天数</span><br><span class="line">                for (i &#x3D; beginDate.Month; i &lt;&#x3D; 12; i++)</span><br><span class="line">                    days +&#x3D; months[i];</span><br><span class="line"></span><br><span class="line">                &#x2F;&#x2F;减去月初到起始日的天数</span><br><span class="line">                days -&#x3D; beginDate.Day;</span><br><span class="line">                &#x2F;&#x2F;从年初到结束月的天数</span><br><span class="line">                for (i &#x3D; 1; i &lt;&#x3D; endDate.Month; i++)</span><br><span class="line">                    days +&#x3D; months[i];</span><br><span class="line"></span><br><span class="line">                &#x2F;&#x2F;减去结束日到月底的天数</span><br><span class="line">                days -&#x3D; months[endDate.Month] - endDate.Day;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return days;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private bool IsLeapYear(int year)</span><br><span class="line">        &#123;</span><br><span class="line">            &#x2F;&#x2F;如果年能被400整除，是闰年</span><br><span class="line">            if (year % 400 &#x3D;&#x3D; 0)</span><br><span class="line">            &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;能被4整除，但不能被100整除，是闰年</span><br><span class="line">            if (year % 4 &#x3D;&#x3D; 0 &amp;&amp; year % 100 !&#x3D; 0)</span><br><span class="line">            &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;其他情况，是平年</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line"></span><br><span class="line">namespace Lesson_02_Calculate_2_OO</span><br><span class="line">&#123;</span><br><span class="line">    public class Program</span><br><span class="line">    &#123;</span><br><span class="line">        public static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            MyDate d1 &#x3D; new MyDate();</span><br><span class="line">            MyDate d2 &#x3D; new MyDate();</span><br><span class="line">            </span><br><span class="line">            d1.Year &#x3D; 1999;</span><br><span class="line">            d1.Month &#x3D; 5;</span><br><span class="line">            d1.Day &#x3D; 10;</span><br><span class="line">            &#x2F;&#x2F;2006年3月8日</span><br><span class="line">            d2.Year &#x3D; 2006;</span><br><span class="line">            d2.Month &#x3D; 3;</span><br><span class="line">            d2.Day &#x3D; 8;</span><br><span class="line">            &#x2F;&#x2F;计算结果</span><br><span class="line"></span><br><span class="line">            string str &#x3D; &quot;&#123;0&#125;年&#123;1&#125;月&#123;2&#125;日到&#123;3&#125;年&#123;4&#125;月&#123;5&#125;日共有天数：&quot;;</span><br><span class="line">            str &#x3D; String.Format(str, d1.Year, d1.Month, d1.Day, d2.Year, d2.Month, d2.Day);</span><br><span class="line"></span><br><span class="line">            DateCalculate obj &#x3D; new DateCalculate();</span><br><span class="line">            int days &#x3D; obj.CalculateDaysOfTwoDate(d1, d2);</span><br><span class="line">             </span><br><span class="line">            Console.WriteLine(str + days);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;暂停,敲任意键结束</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h4 id="4-4-使用内置库实现"><a href="#4-4-使用内置库实现" class="headerlink" title="4.4 使用内置库实现"></a>4.4 使用内置库实现</h4><ul><li>从如下事例中，可以看到，如果有一个功能强大的组家奴，基于这些组件开发应用程序，可以大大提升软件开发效率,因为可以重用别人的工作，不需要从头开始</li></ul><p>即不要重复发明轮子，尽量重用别人的代码</p><details><summary style="color:blue"><b>点击展开内置库代码</b></summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line"></span><br><span class="line">namespace Lesson_02_Calculate_3_BuiltIn_functions</span><br><span class="line">&#123;</span><br><span class="line">    internal class Program</span><br><span class="line">    &#123;</span><br><span class="line">        public static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            DateTime d1&#x3D;new DateTime(1999,5,10);</span><br><span class="line">            DateTime d2&#x3D;new DateTime(2006,3,8);</span><br><span class="line"></span><br><span class="line">            double days &#x3D; (d2 - d1).TotalDays;</span><br><span class="line">            </span><br><span class="line">            Console.WriteLine(days);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h1 id="五-变量、数据类型和表达式"><a href="#五-变量、数据类型和表达式" class="headerlink" title="五.变量、数据类型和表达式"></a>五.变量、数据类型和表达式</h1><h4 id="5-1-什么是”变量”"><a href="#5-1-什么是”变量”" class="headerlink" title="5.1 什么是”变量”"></a>5.1 什么是”变量”</h4><ul><li>程序运行所需要处理的数据，通常都要放到”变量(variable)”中<br>变量可以看作是一种数据容器</li><li>不同类型的”容器”,适合放置不同类型的数据,这种”类型”,称为”<span style="color:red">变量的数据类型</span>“</li></ul><h5 id="5-1-1-如何在C-中定义变量"><a href="#5-1-1-如何在C-中定义变量" class="headerlink" title="5.1.1 如何在C#中定义变量"></a>5.1.1 如何在C#中定义变量</h5><ul><li>语法格式:<br>数据类型名称 变量名 = 变量初始值;</li><li>示例<br>int value = 100;<br>该语句定义了一个<span style="color:red">int(整型)</span> 变量，可以放<span style="color:red">整数</span> ，初始值为<span style="color:red">100</span>,最后以”分号结束，C#语句结束不能省略分号”</li></ul><h5 id="5-1-2-变量存储与内存中"><a href="#5-1-2-变量存储与内存中" class="headerlink" title="5.1.2 变量存储与内存中"></a>5.1.2 变量存储与内存中</h5><ul><li>内存由多个内存单元构成，每个内存单元都有一个编号，称为”<span style="color:red">内存地址</span>“</li><li>给定一个”内存地址”，就能找到特定的内存单元</li><li>计算机可以从内存单元中写入或读出数据</li></ul><p>使用比较底层的编程语言，如”<span style="color:red">汇编语言(Assembly Language)</span>“,可以直接指定地址去存取特定的内存单元，但是由于硬件或系统不同，都可能需要修改程序，因此会低效</p><ul><li>解决方案<br>1）应用程序需要读取存取数据时，不指定具体的内存地址，只给出一个”名字”，这个”名字”引用某块内存区域<br>2）这个”名字”具体引用哪块内存区域,由OS安排，应用程序不进行管理<br>3）应用程序只需要指定可以按照”名字”找到并读写区域即可</li></ul><p><strong>这个内存区域的”名字”,结束所讲的”变量”</strong></p><h5 id="5-1-3-通过变量名”间接”地存取内存"><a href="#5-1-3-通过变量名”间接”地存取内存" class="headerlink" title="5.1.3 通过变量名”间接”地存取内存"></a>5.1.3 通过变量名”间接”地存取内存</h5><ul><li>变量的名字，可以看出是特定内存区域的”别名”,通过它计算机就能找到特定的内存单元存取数据</li><li>有了变量名，将不再需要显示指定一长串地址数值来访问内存单元了</li></ul><h5 id="5-1-4-什么是”给变量赋值”"><a href="#5-1-4-什么是”给变量赋值”" class="headerlink" title="5.1.4 什么是”给变量赋值”"></a>5.1.4 什么是”给变量赋值”</h5><p>变量定义好后，可以通过赋值语句给他传不同的值</p><ul><li>语法格式:<br>变量名=变量新值;</li></ul><p>给变量赋值，其实就是找到变量所代表的内存区域,把指定的数值写入其中</p><p><strong>注意:写入到内存单元中的数据，都被转换为<span style="color:orange">二进制</span>数值，计算机并不能直接处理十进制数</strong></p><h5 id="5-1-5-什么是变量间的相互赋值"><a href="#5-1-5-什么是变量间的相互赋值" class="headerlink" title="5.1.5 什么是变量间的相互赋值"></a>5.1.5 什么是变量间的相互赋值</h5><ul><li>变量间的相互赋值,本质上是内存单元间的<span style="color:red">值赋值</span></li><li>不同变量直接相互赋值，虽然值一样，但是变量却是相互独立的，不会因赋值而同步变化</li></ul><h4 id="5-2-C-语言数据类型"><a href="#5-2-C-语言数据类型" class="headerlink" title="5.2 C#语言数据类型"></a>5.2 C#语言数据类型</h4><table><thead><tr><th align="center">C#语言内置数据类型</th><th align="center">编译时转变为CLR</th><th align="center">CLR支持的基础数据类型</th></tr></thead><tbody><tr><td align="center">int</td><td align="center">&lt;—&gt;</td><td align="center">System.Int32</td></tr><tr><td align="center">long</td><td align="center">&lt;—&gt;</td><td align="center">System.Int64</td></tr><tr><td align="center">float</td><td align="center">&lt;—&gt;</td><td align="center">System.Single</td></tr><tr><td align="center">Double</td><td align="center">&lt;—&gt;</td><td align="center">System.Double</td></tr></tbody></table><details><summary>点我展开示例代码</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">namespace Lesson_03_Type_Of_Data</span><br><span class="line">&#123;</span><br><span class="line">    internal class Program</span><br><span class="line">    &#123;</span><br><span class="line">        public static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            DefineVariable();</span><br><span class="line">            StringOrstring();</span><br><span class="line">            UseVarKeyWord();</span><br><span class="line">            PrintDataTypeLength();</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #region &quot;变量与数据类型&quot;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 变量的定义与变量的类型</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        static void DefineVariable()</span><br><span class="line">        &#123;</span><br><span class="line">            int intValue &#x3D; 100;</span><br><span class="line">            long longValue &#x3D; 100l;</span><br><span class="line">            double doubleValue &#x3D; 100.5d;</span><br><span class="line">            float floatValue &#x3D; 100.5f;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Console.WriteLine(intValue.GetType());</span><br><span class="line">            Console.WriteLine(longValue.GetType());</span><br><span class="line">            Console.WriteLine(doubleValue.GetType());</span><br><span class="line">            Console.WriteLine(floatValue.GetType());</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(intValue.GetType() &#x3D;&#x3D; typeof(int));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        static void StringOrstring()</span><br><span class="line">        &#123;</span><br><span class="line">            String str1 &#x3D; &quot;Hello&quot;;</span><br><span class="line">            string str2 &#x3D; &quot;World&quot;;</span><br><span class="line">            Console.WriteLine(str1.GetType());</span><br><span class="line">            Console.WriteLine(str2.GetType());</span><br><span class="line">            Console.WriteLine(typeof(String) &#x3D;&#x3D; typeof(string));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F;隐式类型变量定义 </span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        static void UseVarKeyWord()</span><br><span class="line">        &#123;</span><br><span class="line">            var value &#x3D; 100;</span><br><span class="line">            Console.WriteLine(value.GetType());</span><br><span class="line"></span><br><span class="line">            var value2 &#x3D; &quot;Hello&quot;;</span><br><span class="line">            Console.WriteLine(value2.GetType());</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F; Dictionary&lt;String,List&lt;int&gt;&gt; dic &#x3D; new Dictionary&lt;string, List&lt;int&gt;&gt;();</span><br><span class="line">            var dic &#x3D; new Dictionary&lt;string, List&lt;int&gt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F;了解特定数据类型变量所占内存单元的多少</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        static void PrintDataTypeLength()</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(&quot;int类型占用&quot; + sizeof(int)); &#x2F;&#x2F;4</span><br><span class="line">            Console.WriteLine(&quot;long类型占用&quot; + sizeof(long)); &#x2F;&#x2F;8</span><br><span class="line">            Console.WriteLine(&quot;float类型占用&quot; + sizeof(float)); &#x2F;&#x2F;4</span><br><span class="line">            Console.WriteLine(&quot;double类型占用&quot; + sizeof(double)); &#x2F;&#x2F;8</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F;数值类型直接的状态转换</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        static void NumberTypeConvert()</span><br><span class="line">        &#123;</span><br><span class="line">            int intValue &#x3D; 100;</span><br><span class="line">            long longValue &#x3D; 100l;</span><br><span class="line">            double doubleValue &#x3D; 100.5d;</span><br><span class="line">            float floatValue &#x3D; 100.5f;</span><br><span class="line"></span><br><span class="line">            longValue &#x3D; intValue;</span><br><span class="line">            doubleValue &#x3D; intValue;</span><br><span class="line">            doubleValue &#x3D; floatValue;</span><br><span class="line"></span><br><span class="line">            intValue &#x3D; (int) longValue;</span><br><span class="line">            intValue &#x3D; (int) doubleValue;</span><br><span class="line"></span><br><span class="line">            floatValue &#x3D; (float) doubleValue;</span><br><span class="line"></span><br><span class="line">            floatValue &#x3D; intValue;</span><br><span class="line"></span><br><span class="line">            intValue &#x3D; (int) floatValue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F;字符串与数值类型间的转换</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        static void StringAndNumberType()</span><br><span class="line">        &#123;</span><br><span class="line">            string strValue &#x3D; &quot;100&quot;;</span><br><span class="line">            </span><br><span class="line">            &#x2F;&#x2F;字符串转换为数值</span><br><span class="line">            &#x2F;&#x2F;方法一:</span><br><span class="line">            int intValue &#x3D; int.Parse(strValue);</span><br><span class="line">            double doubleValue &#x3D; double.Parse(strValue);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;方法二:</span><br><span class="line">            intValue &#x3D; Convert.ToInt32(strValue);</span><br><span class="line">            doubleValue &#x3D; Convert.ToDouble(strValue);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;数值转换为字符串</span><br><span class="line">            &#x2F;&#x2F;方法一:</span><br><span class="line">            strValue &#x3D; intValue.ToString();</span><br><span class="line">            strValue &#x3D; doubleValue.ToString();</span><br><span class="line">            strValue &#x3D; 200.ToString();</span><br><span class="line">            </span><br><span class="line">            &#x2F;&#x2F;方法二:</span><br><span class="line">            strValue &#x3D; intValue + &quot;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #endregion</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h5 id="5-2-1-从内存模型角度，C-变量可分为以下两种类型"><a href="#5-2-1-从内存模型角度，C-变量可分为以下两种类型" class="headerlink" title="5.2.1 从内存模型角度，C#变量可分为以下两种类型"></a>5.2.1 从内存模型角度，C#变量可分为以下两种类型</h5><table>    <tr>        <td rowspan="8">        <span style='display:block;width:14px;'>C#数据类型</span>        </td>     </tr>    <tr>        <td rowspan="4">值类型</td>     </tr>    <tr>        <td >int</td>          <td rowspan="4">值类型变量存活与"线程堆栈"中</td>     </tr>       <tr>        <td >double</td>     </tr>       <tr>        <td >...</td>     </tr>       <tr>        <td rowspan="3">引用类型</td>     </tr>       <tr>        <td >string</td>          <td rowspan="3">引用类型所引用的对象，生存与"堆"中</td>     </tr>       <tr>        <td >...</td>     </tr></table><h4 id="5-3-运算符与表达式"><a href="#5-3-运算符与表达式" class="headerlink" title="5.3 运算符与表达式"></a>5.3 运算符与表达式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">namespace Lesson_04_Operators_and_expressions</span><br><span class="line">&#123;</span><br><span class="line">    internal class Program</span><br><span class="line">    &#123;</span><br><span class="line">        public static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            UseOperator();</span><br><span class="line">            UseExpression();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #region &quot;运算符与表达式&quot;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F;&lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F;使用运算符</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        static void UseOperator()</span><br><span class="line">        &#123;</span><br><span class="line">            &#x2F;&#x2F;+-*&#x2F;,()</span><br><span class="line">            double result &#x3D; ((5 + 3) * 2 - 7) &#x2F; 6d;</span><br><span class="line">            Console.WriteLine(result);</span><br><span class="line"></span><br><span class="line">            int value &#x3D; 9 % 4;</span><br><span class="line">            Console.WriteLine(value);</span><br><span class="line"></span><br><span class="line">            int index &#x3D; 1;</span><br><span class="line">            </span><br><span class="line">            &#x2F;&#x2F;index++ &lt;&#x3D;&#x3D;&gt; index&#x3D;index+1</span><br><span class="line">            Console.WriteLine(index++);</span><br><span class="line">            Console.WriteLine(++index);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F;&lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F;使用表达式</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        static void UseExpression()</span><br><span class="line">        &#123;</span><br><span class="line">            int value &#x3D; 100;</span><br><span class="line">            Console.WriteLine(value*2);</span><br><span class="line">        &#125;</span><br><span class="line">        #endregion</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-4-选择结构与逻辑表达式"><a href="#5-4-选择结构与逻辑表达式" class="headerlink" title="5.4 选择结构与逻辑表达式"></a>5.4 选择结构与逻辑表达式</h4><ul><li>三种典型的程序代码执行流程</li></ul><table>    <tr>        <td>        <span>顺序执行</span>        </td>     </tr>       <tr>        <td>        <span>按条件选择一条分支执行</span>        </td>                 <td>            <====>        </td>                  <td>        <span>选择结构</span>        </td>     </tr>       <tr>        <td>        <span>在特定场景中反复执行特定语句</span>        </td>                  <td>            <====>        </td>                  <td>        <span>循环结构</span>        </td>     </tr></table><ul><li><p>程序流程图<br>在结构化程序设计中，经常使用一种称为”<b>程序流程图</b>“的示意图来表示程序的执行流程</p></li><li><p>使用if/else语句实现程序中的选择结构<br>语法:<br>if(条件 == true)<br>{<br>  //执行语句A<br>}else<br>{<br>  //执行语句B<br>}</p></li><li><p>使用逻辑表达式表达条件，”==”是逻辑判断运算符</p></li></ul><ul><li>逻辑表达式通常用于表示某种条件是否得到满足</li><li>当程序运行时,计算机解析逻辑表达式，会得到一个值,在C#中，这个值只有”true”或”false”</li><li>在if语句中,基于逻辑表达式执行的结构执行特定的分支</li></ul><ul><li>用于构建逻辑表达式的运算符</li></ul><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>==</td><td>等于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>!=</td><td>不等于</td></tr></tbody></table><p><strong>注意:=&gt;不是”等于大于”，而是Lambda表达式</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（二十八)</title>
      <link href="/2020/04/06/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E5%85%AB%EF%BC%89/"/>
      <url>/2020/04/06/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E5%85%AB%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>JavaScript基础语法</li><li>JavaScript函数</li><li><strong>JavaScript事件</strong></li><li>JavaScript常用内置对象<a id="more"></a></li></ul><h1 id="一-JavaScript基础语法"><a href="#一-JavaScript基础语法" class="headerlink" title="一.JavaScript基础语法"></a>一.JavaScript基础语法</h1><h4 id="1-1-JS运算符"><a href="#1-1-JS运算符" class="headerlink" title="1.1 JS运算符"></a>1.1 JS运算符</h4><p>算术运算符<br>+ - * / % ++ –<br><br/><br>赋值运算符<br>= += -= *= /=<br><br/><br>比较运算符<br>&gt; &lt; ==(===) !=(!==)<br><br/><br>逻辑运算符<br>&amp;&amp; || !<br><br/><br>三元(目)运算符<br>条件表达式?为真:为假</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//算数运算符</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//在JS中数值可以与字符串进行数学运算，底层实现了隐式转换</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> a =<span class="number">10</span>;<span class="comment">//num</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> b = <span class="string">'4'</span>;<span class="comment">//String</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a+b);<span class="comment">//104 字符串拼接</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a-b);<span class="comment">//6</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a*b);<span class="comment">//40</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a/b);<span class="comment">//2.5  保留小数位</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//比较运算符</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> c=<span class="string">'10'</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a == c);<span class="comment">//比较的是内容</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a === c);<span class="comment">//比较的是类型+内容</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//!=  比较的是内容</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//!== 比较的是类型+内容</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-2-JS流程控制"><a href="#1-2-JS流程控制" class="headerlink" title="1.2 JS流程控制"></a>1.2 JS流程控制</h4><ul><li>条件判断<br>•if判断<br>if(条件表达式){<br>  代码块<br>}else if(条件表达式){<br>  代码块<br>}else{<br>  代码块<br>}</li></ul><p>•switch判断<br>switch(条件表达式){<br>    case 满足条件1 :<br>        代码块 break;<br>    case 满足条件2 :<br>        代码块 break;<br>    case 满足条件3 :<br>        代码块 break;<br>}</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line">    条件表达式</span><br><span class="line">        1)布尔型</span><br><span class="line">        2)数值型:非0为真</span><br><span class="line">        3)字符串:非空串为真</span><br><span class="line"><span class="actionscript">        <span class="number">4</span>）变量:<span class="literal">null</span> 或 <span class="literal">undefined</span> 都为假</span></span><br><span class="line">    */</span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> flag = <span class="literal">true</span>;</span></span><br><span class="line">    flag = 15;</span><br><span class="line"><span class="actionscript">    flag = <span class="string">"Hello"</span>;</span></span><br><span class="line"><span class="actionscript">    flag = <span class="literal">null</span>;</span></span><br><span class="line">    if(flag)&#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"Right"</span>);</span></span><br><span class="line"><span class="actionscript">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"Wrong"</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>循环语句</li></ul><p>•普通for循环<br>    for (let i = 0; i &lt; ; i++) {<br>        //需要执行的代码<br>    }</p><p>•增强for循环<br>    for(let obj of array){<br>        //需要执行的代码<br>    }</p><p>•索引for循环<br>for(let index in array){<br>        //需要执行的代码<br>}</p><p>•while循环<br>    while(条件表达式){<br>        //需要执行的代码<br>    }</p><p>•do…while循环<br>    do{<br>        //需要执行的代码<br>    }while(条件表达式)</p><p>•break和continue<br>    break:跳出整个循环<br>    continue:跳出本次循环</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> arr=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//普通for循环</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(arr[i]);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//增强for循环</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">let</span> element <span class="keyword">of</span> arr)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(element);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">//索引for循环</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> index <span class="keyword">in</span> arr) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(index);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(arr[index]);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二-JS函数"><a href="#二-JS函数" class="headerlink" title="二.JS函数"></a>二.JS函数</h1><p>功能:js函数用于执行特定功能的代码块，为了方便立即也可以称为JS方法</p><h4 id="2-1-普通函数"><a href="#2-1-普通函数" class="headerlink" title="2.1 普通函数"></a>2.1 <strong>普通函数</strong></h4><p>语法:<br>function 函数名(参数列表){<br>    函数体;<br>    [return 返回值;]  //中括号表示内容可以省略<br>}</p><p>js不支持方法重载，重名的方法会被覆盖</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//两数求和</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(a, b)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//console.log(a + b);   //无返回值</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> a + b;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// sum(1,10);</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//三数求和</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//NaN:not a number 这不是一个数</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//js是弱类型语言，不支持方法重载，重名的方法会覆盖</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//js函数定义的参数个数，可以与实际调用的参数个数不同</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(a, b, c)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> a + b + c;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> result = sum(<span class="number">1</span>, <span class="number">5</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(result);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(sum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">new_sum</span><span class="params">(a, b, c)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//js函数题内置arguments[]数组对象，获取实际调用者的参数值</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[<span class="number">3</span>]);<span class="comment">//可以获取额外传入的第4个参数，但是不允许这样使用</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    new_sum(1, 2, 3, 4, 5);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//可变参数,本质就是一个数组</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(<span class="rest_arg">...args</span>)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(args);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> resut = sum(<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(resut);</span></span></span><br></pre></td></tr></table></figure><h4 id="2-2-匿名函数"><a href="#2-2-匿名函数" class="headerlink" title="2.2 匿名函数"></a>2.2 匿名函数</h4><p>通常与事件结合使用<br>语法:<br>function (参数列表){<br>    函数体;<br>    [return 返回值;]//中括号表示内容可以省略<br>}</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn"</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"匿名函数触发事件"</span>);</span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-3-案例-轮插图"><a href="#2-3-案例-轮插图" class="headerlink" title="2.3 案例:轮插图"></a>2.3 案例:轮插图</h4><p>分析:<br>展示图片的&lt;img src=”1.jpg”/&gt;<br>通过js代码修改img标签的src数学</p><p>每隔3秒，切换一次，使用定时器</p><p>通过定时器，触发一个方法，修改img标签src属性的图片地址</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">setInterval(函数,间隔时间) 每隔固定间隔时间(毫秒)执行一次函数 </span></span><br><span class="line"><span class="comment">document.querySelector(css选择器) 根据css选择器获取匹配到的一个标签</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"myImg"</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"500px"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//通过DOM获取img标签的js对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> img = <span class="built_in">document</span>.getElementById(<span class="string">"myImg"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(img);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(img.src);<span class="comment">//获取img标签的src属性值</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//图片编号</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> num = <span class="number">1</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//定义一个修改图片的方法</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">change</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        img.src = <span class="string">'../img/'</span> + num + <span class="string">'1.jpg'</span>;</span></span><br><span class="line">        if (num == 4) &#123;</span><br><span class="line">            num = 0;</span><br><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//每间隔3秒，触发此方法</span></span></span><br><span class="line"><span class="actionscript">    setInterval(<span class="string">'change()'</span>, <span class="number">3000</span>);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//每间隔1秒，向控制台输出一句话</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//''相当于script标签</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// setInterval('console.log("Hello");', 1000);</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三-JS事件"><a href="#三-JS事件" class="headerlink" title="三.JS事件"></a>三.JS事件</h1><h4 id="3-1-常用事件"><a href="#3-1-常用事件" class="headerlink" title="3.1 常用事件"></a>3.1 常用事件</h4><ul><li><p><strong>点击事件</strong><br>•onclick:单击事件<br>•ondblclick:双击事件</p></li><li><p><strong>焦点事件</strong><br>•onblur:失去焦点<br>•onfocus:元素获得焦点</p></li><li><p><strong>加载事件</strong><br>•onload:页面加载完后立即发送</p></li><li><p><strong>鼠标事件</strong><br>•onmousedown:鼠标按钮被按下<br>•onmouseup:鼠标按钮被松开<br>•onmousemove:鼠标被移动<br>•onmouseover:鼠标移到某元素之上<br>•onmouseout:鼠标从某元素一开</p></li><li><p><strong>键盘事件</strong><br>•onkeydown:某个键盘按键被按下<br>•onkeyup:某个键盘按键被松开<br>•onkeypress:某个键盘按键被按下并松开</p></li><li><p><strong>改变事件</strong><br>•onchange:域的内容被改变</p></li><li><p><strong>表单事件</strong><br>•onsubmit:提交按钮被点击</p></li></ul><h4 id="3-2-事件绑定"><a href="#3-2-事件绑定" class="headerlink" title="3.2 事件绑定"></a>3.2 事件绑定</h4><p>将事件与html标签进行绑定，实现交互功能</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"普通函数"</span> <span class="attr">onclick</span>=<span class="string">"show()"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"匿名函数"</span> <span class="attr">id</span>=<span class="string">"myBtn"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//单击事件</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//普通函数 此方案有耦合性</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"普通函数触发事件"</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//匿名函数</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//通过DOM技术获取按钮标签的js对象</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var myBtn = document.getElementById("myBtn");</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// myBtn.onclick = function () &#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     alert("匿名函数触发事件");</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"myBtn"</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"匿名函数触发事件"</span>);</span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-3-案例-页面交互"><a href="#3-3-案例-页面交互" class="headerlink" title="3.3 案例:页面交互"></a>3.3 案例:页面交互</h4><p>需求:给页面表单空间绑定对应事件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">常用事件</span></span><br><span class="line"><span class="comment">    1)onload:页面加载完后立即发送</span></span><br><span class="line"><span class="comment">    2)onfocus:元素获得焦点</span></span><br><span class="line"><span class="comment">    3)onblur:失去焦点</span></span><br><span class="line"><span class="comment">    4)onchange:域的内容被改变</span></span><br><span class="line"><span class="comment">    5)onclick:单击事件</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"userName"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">Score:</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"edu"</span> <span class="attr">id</span>=<span class="string">"edu"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>A<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>B<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>C<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--button相当于&lt;input type="button" value="button"&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn"</span>&gt;</span>Button<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// js代码的执行自上而下(顺序结构)</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.onload页面加载完成</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"Page Load Done"</span>);<span class="comment">//放在哪里都是最后执行</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">"外部内容"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//2.onfocus</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//this 当前对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'userName'</span>).onfocus = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// document.getElementById('userName').value = 'Focus';</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.value = <span class="string">'Focus'</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//3.onblur</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'userName'</span>).onblur = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">this</span>.value = <span class="string">'lose Focus'</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//4.onchange</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"edu"</span>).onchange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="keyword">this</span>.value);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//5.onclick</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">'onclick Event'</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="四-JS常用内置对象"><a href="#四-JS常用内置对象" class="headerlink" title="四.JS常用内置对象"></a>四.JS常用内置对象</h1><h4 id="4-1-String对象"><a href="#4-1-String对象" class="headerlink" title="4.1 String对象"></a>4.1 String对象</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1.构造字符串对象可以使用单引号，双引号，反引号</span></span><br><span class="line"><span class="comment">2.字符串常用方法</span></span><br><span class="line"><span class="comment">    substring()</span></span><br><span class="line"><span class="comment">    toLowerCase()</span></span><br><span class="line"><span class="comment">    toUpperCase()</span></span><br><span class="line"><span class="comment">    split()</span></span><br><span class="line"><span class="comment">    trim()</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.构造字符串对象可以使用单引号，双引号，反引号</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//单引号</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> str1=<span class="string">"String"</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(str1);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//双引号</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> str2=<span class="string">"String"</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(str2);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//反引号</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> str3=<span class="string">`String`</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(str3);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//反引号案例</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> num=<span class="number">100</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> str4=<span class="string">`Need <span class="subst">$&#123;num&#125;</span> to do Something`</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(str4);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//字符串常用方法</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// substring</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> str = <span class="string">'我爱我的祖国'</span>; <span class="built_in">console</span>.log(str.substring(<span class="number">4</span>, <span class="number">6</span>));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-2-Array对象"><a href="#4-2-Array对象" class="headerlink" title="4.2 Array对象"></a>4.2 Array对象</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">数组:</span></span><br><span class="line"><span class="comment">    1.创建数组</span></span><br><span class="line"><span class="comment">        *let array=[ele1,ele2,ele3];</span></span><br><span class="line"><span class="comment">        let array=new array(ele1,ele2,ele3);</span></span><br><span class="line"><span class="comment">    特点:数组元素的类型任意</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    2.数组常用方法</span></span><br><span class="line"><span class="comment">        concat() 连接两个或更多数组，并返回结果</span></span><br><span class="line"><span class="comment">        push() 向数组末尾添加一个或多个元素，并返回一个新的长度</span></span><br><span class="line"><span class="comment">        pop()删除并返回数组的最后一个元素</span></span><br><span class="line"><span class="comment">        join()把数组所有元素放入一个字符串，元素通过指定的分隔符分隔。</span></span><br><span class="line"><span class="comment">            与字符串.split()切割为数组方法相反</span></span><br><span class="line"><span class="comment">        sort()对数组进行升序排序</span></span><br><span class="line"><span class="comment">        reverse()对数组进行降序排序</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.创建数组</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> arr1 = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>];</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr1);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> arr2 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">'AAA'</span>, <span class="number">5</span>, <span class="keyword">new</span> <span class="built_in">Date</span>());</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr2);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//2.数组合并</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> concatArr = arr1.concat(arr2);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(concatArr);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//3.添加元素,尾部添加</span></span></span><br><span class="line"><span class="actionscript">    concatArr.push(<span class="string">"New"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(concatArr);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//4.删除元素,尾部删除</span></span></span><br><span class="line"><span class="actionscript">    concatArr.pop(<span class="string">'New'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(concatArr);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//5.数组元素拼接为字符串</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(concatArr.join(<span class="string">'-'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//6.排序数组元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> arr3 = [<span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">7</span>];</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr3.sort());</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr3.reverse());</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//指定sort()排序规则</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr3.sort(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> b - a;</span></span><br><span class="line">    &#125;));</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-3-Date对象"><a href="#4-3-Date对象" class="headerlink" title="4.3 Date对象"></a>4.3 Date对象</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">日期</span></span><br><span class="line"><span class="comment">let date = new Date();</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(date);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(date.toLocaleString());<span class="comment">//转换为本地日期格式的字符串</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(date.getFullYear());<span class="comment">//年</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(date.getMonth() + <span class="number">1</span>);<span class="comment">//月</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(date.getDate());<span class="comment">//日</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(date.getDay());<span class="comment">//星期</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(date.getTime());<span class="comment">//1970至今的毫秒值</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-4-Math对象"><a href="#4-4-Math对象" class="headerlink" title="4.4 Math对象"></a>4.4 Math对象</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">数学运算</span></span><br><span class="line"><span class="comment">    1)四舍五入 round()</span></span><br><span class="line"><span class="comment">    2)向下取整 floor()</span></span><br><span class="line"><span class="comment">    3)向上取整 ceil()</span></span><br><span class="line"><span class="comment">    4)产生随机数 random() 返回[0,1)至今的随机数。左闭右开</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> a = <span class="number">1234.567</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//round</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(a));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(a));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.ceil(a));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.random());</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">100</span>+<span class="number">1</span>));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-5-全局函数"><a href="#4-5-全局函数" class="headerlink" title="4.5 全局函数"></a>4.5 全局函数</h4><p>不需要通过任何对象，可以至今调用的就称为全局函数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">全局函数</span></span><br><span class="line"><span class="comment">    1)字符串转为数字</span></span><br><span class="line"><span class="comment">        parseInt()解析一个字符串并返回一个整数</span></span><br><span class="line"><span class="comment">        parseFloat()解析一个字符串并返回一个浮点数</span></span><br><span class="line"><span class="comment">    特点:从一个字符开始转换，遇到非数值字符停止转换</span></span><br><span class="line"><span class="comment">    NaN:not a number, NaN != NaN</span></span><br><span class="line"><span class="comment">    isNaN() 判断一个字符串，如果不是数值返回true,否则返回false,即纯数值返回false</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    2)对字符串编码和解码</span></span><br><span class="line"><span class="comment">    HTTP 不识别中文，需要转码</span></span><br><span class="line"><span class="comment">        encodeURI()把字符串编码为uri</span></span><br><span class="line"><span class="comment">        decodeURI()把uri解码为字符串</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    3)把字符串当作js表达式来执行</span></span><br><span class="line"><span class="comment">        eval() 计算JavaScript字符串，识别为JS脚本片段</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.字符串转为数字</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> a = <span class="string">'123.932'</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(a));<span class="comment">//123</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">parseFloat</span>(a));<span class="comment">//123.932</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> b = <span class="string">'123.9a32'</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(b));<span class="comment">//123</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">parseFloat</span>(b));<span class="comment">//123.9</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> c = <span class="string">'a123.9a32'</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(c));<span class="comment">//NaN</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">parseFloat</span>(c));<span class="comment">//NaN</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="literal">NaN</span> == <span class="literal">NaN</span>);<span class="comment">//false</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">isNaN</span>(a));<span class="comment">//false</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">isNaN</span>(c));<span class="comment">//true</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 2.对字符串编码和解码</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> name = <span class="string">"一二三"</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> message = <span class="built_in">encodeURI</span>(name);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(message);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">decodeURI</span>(message));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//3.把字符串当作js表达式来执行</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">eval</span>(<span class="string">'alert(1)'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h3><h2 id="js基础语法"><a href="#js基础语法" class="headerlink" title="js基础语法"></a>js基础语法</h2><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><ul><li><p>算数运算符</p><ul><li>数值可以与字符串进行数学运算，底层进行了转换</li></ul></li><li><p>比较运算符</p><ul><li>=== 恒等 先比较类型后比较内容</li><li>!== 恒不等 先比较类型后比较内容</li></ul></li></ul><h3 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h3><ul><li><p>顺序</p><ul><li>代码自上而下，逐行执行</li></ul></li><li><p>分支</p><ul><li><p>条件语句</p><ul><li><p>和java一样</p><ul><li>if…else if…else</li><li>switch…case..default</li></ul></li></ul></li></ul></li><li><p>循环</p><ul><li><p>和java一样的</p><ul><li>while</li><li>do…while</li><li>for…i</li></ul></li><li><p>和java不一样的</p><ul><li><p>for…in</p><ul><li>数组的索引index</li></ul></li><li><p>for…of</p><ul><li>数组的元素</li></ul></li></ul></li></ul></li></ul><h2 id="js函数-方法"><a href="#js函数-方法" class="headerlink" title="js函数(方法)"></a>js函数(方法)</h2><h3 id="普通函数"><a href="#普通函数" class="headerlink" title="普通函数"></a>普通函数</h3><ul><li>在js中，没有方法重载</li></ul><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><h3 id="案例-轮播图"><a href="#案例-轮播图" class="headerlink" title="案例:轮播图"></a>案例:轮播图</h3><ul><li>setInterval(函数,间隔时间)</li><li>document.getElementById(id属性值)</li></ul><h2 id="js事件"><a href="#js事件" class="headerlink" title="js事件"></a>js事件</h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>JS可以监听用户的行为,并调用函数来完成用户交互功能</li></ul><h3 id="常用事件"><a href="#常用事件" class="headerlink" title="常用事件"></a>常用事件</h3><ul><li><p>页面加载完毕事件</p><ul><li>window.onload</li></ul></li><li><p>获取焦点</p><ul><li>onfocus</li></ul></li><li><p>失去焦点</p><ul><li>onblur</li></ul></li><li><p>值改变时</p><ul><li>onchange</li></ul></li><li><p>单击时</p><ul><li>onclick</li></ul></li></ul><h3 id="事件绑定"><a href="#事件绑定" class="headerlink" title="事件绑定"></a>事件绑定</h3><ul><li><p>普通函数</p></li><li><p>匿名函数</p><ul><li>解耦合….</li></ul></li></ul><h3 id="案例：页面交互"><a href="#案例：页面交互" class="headerlink" title="案例：页面交互"></a>案例：页面交互</h3><h2 id="js常用内置对象"><a href="#js常用内置对象" class="headerlink" title="js常用内置对象"></a>js常用内置对象</h2><h3 id="String-对象"><a href="#String-对象" class="headerlink" title="String 对象"></a>String 对象</h3><ul><li><p>构造</p><ul><li><p>双引号</p></li><li><p>单引号</p></li><li><p>反引号</p><ul><li><code>我爱我的祖国 ${变量占位符}</code></li></ul></li></ul></li><li><p>常用方法</p><ul><li><p>截取</p><ul><li>substring()</li></ul></li><li><p>分割为数组</p><ul><li>split()</li></ul></li><li><p>转换大小写</p><ul><li>toLowerCase()</li><li>toUpperCase()</li></ul></li><li><p>去掉前后空格</p><ul><li>trim()</li></ul></li></ul></li></ul><h3 id="Array-对象"><a href="#Array-对象" class="headerlink" title="Array 对象"></a>Array 对象</h3><ul><li><p>构造</p><ul><li>[ele1,ele2,ele3];</li><li>new Array(ele1,ele2,ele3);</li></ul></li><li><p>特点：</p><ul><li>数组的长度和类型任意，可以把它当做java的集合</li></ul></li><li><p>常用方法</p><ul><li><p>连接数组</p><ul><li>concat()</li></ul></li><li><p>拼接为字符串</p><ul><li>join()</li></ul></li><li><p>添加/移出元素</p><ul><li>push()</li><li>pop()</li></ul></li><li><p>排序</p><ul><li>sort()</li></ul></li></ul></li></ul><h3 id="Date-对象"><a href="#Date-对象" class="headerlink" title="Date 对象"></a>Date 对象</h3><h3 id="Math-对象"><a href="#Math-对象" class="headerlink" title="Math 对象"></a>Math 对象</h3><ul><li>round 四舍五入</li><li>floor 向下取整</li><li>ceil 向上取整</li><li>random 返回[0,1)随机小数</li></ul><h3 id="全局函数"><a href="#全局函数" class="headerlink" title="全局函数"></a>全局函数</h3><ul><li><p>字符串转为数字</p><ul><li><p>parseInt()</p><ul><li>转整数</li></ul></li><li><p>parseFloat()</p><ul><li>转小数</li></ul></li><li><p>isNaN()</p><ul><li>非数字</li></ul></li></ul></li><li><p>url编码</p><ul><li><p>encodURI()</p><ul><li>编码</li></ul></li><li><p>decodeURI()</p><ul><li>解码</li></ul></li></ul></li><li><p>执行字符串</p><ul><li>eval()</li></ul></li></ul><p><em>XMind: ZEN - Trial Version</em></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（二十七)</title>
      <link href="/2020/04/05/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E4%B8%83%EF%BC%89/"/>
      <url>/2020/04/05/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E4%B8%83%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>CSS概述</li><li>CSS基础语法</li><li>JavaScript概述</li><li>JavaScript基础语法<a id="more"></a></li></ul><h1 id="一-CSS概述"><a href="#一-CSS概述" class="headerlink" title="一.CSS概述"></a>一.CSS概述</h1><ul><li><p>层叠样式表<br>作用：美化页面<br>层叠样式：对同一个标签添加多个不同对样式，所有的样式会叠加在一起显示出效果</p></li><li><p>优点:<br>•实现了样式和内容对分离，提高了显示效果和样式的复用性<br>•降低耦合性，分工更加明确，CSS专门用于美化，HTML专门用于结构搭建</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    span&#123;</span><br><span class="line">        font-size: 50px;</span><br><span class="line">        color: blueviolet;</span><br><span class="line">        border: 1px solid skyblue;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS &amp; JS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>AAAAAAAAAAA <span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>BBBBBBBBBBB <span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>CCCCCCCCCCC <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二-CSS基础语法"><a href="#二-CSS基础语法" class="headerlink" title="二.CSS基础语法"></a>二.CSS基础语法</h1><h4 id="2-1-HTML引入CSS"><a href="#2-1-HTML引入CSS" class="headerlink" title="2.1 HTML引入CSS"></a>2.1 HTML引入CSS</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Introduce CSS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--内部样式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        h1&#123;</span><br><span class="line">            color: blue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 外部样式  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"MyCSS.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    HTML引入CSS的三种方式</span></span><br><span class="line"><span class="comment">    1)行内样式</span></span><br><span class="line"><span class="comment">        语法:&lt;h1 style="CSS样式"&gt;&lt;h1&gt;</span></span><br><span class="line"><span class="comment">        作用范围:当前标签范围</span></span><br><span class="line"><span class="comment">    2)内部样式:使用style标签</span></span><br><span class="line"><span class="comment">        语法:&lt;style type="text/css"&gt;&lt;/style&gt;</span></span><br><span class="line"><span class="comment">            type="text/css"告知浏览器把解析器切换成CSS类型</span></span><br><span class="line"><span class="comment">        作用范围:当前页面</span></span><br><span class="line"><span class="comment">    3)外部样式:</span></span><br><span class="line"><span class="comment">        使用link标签引入外部CSS样式</span></span><br><span class="line"><span class="comment">        语法:&lt;link rel="stylesheet" href="外部CSS文件地址" /&gt;</span></span><br><span class="line"><span class="comment">            rel="stylesheet" 告知浏览器引入的文件类型是CSS样式表</span></span><br><span class="line"><span class="comment">        作用范围:所有引入的html页面</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     CSS样式优先级:就近原则，浏览器的执行顺序自上而下</span></span><br><span class="line"><span class="comment">     CSS样式引入推荐放在head头部</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 行内样式       --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"color: red"</span>&gt;</span>A<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>B<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>C<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-CSS属性规范"><a href="#2-2-CSS属性规范" class="headerlink" title="2.2 CSS属性规范"></a>2.2 CSS属性规范</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line">    css注释内容</span><br><span class="line">    css语法:</span><br><span class="line">        选择器(css样式)</span><br><span class="line">        css样式格式:&#123;样式名:样式值:样式名:样式值&#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    样式名多个单词用横杠分隔</span><br><span class="line">    样式值多个单词用空格分隔</span><br><span class="line">    多个样式之间，以分号分隔</span><br><span class="line">    */</span><br><span class="line">    span&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-tag">gray</span>;<span class="comment">/*字体颜色*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">font-size</span>: 10<span class="selector-tag">px</span>;<span class="comment">/*字体大小*/</span></span></span><br><span class="line">        border: 2px solid chartreuse;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-3-基本选择器"><a href="#2-3-基本选择器" class="headerlink" title="2.3 基本选择器"></a>2.3 基本选择器</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Basic_Selector<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="comment">/*标签*/</span></span></span><br><span class="line">        span&#123;</span><br><span class="line">            color: red;</span><br><span class="line">            font-size: 20px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/*class类 选择器*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.a</span>&#123;</span></span><br><span class="line">            color: green;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.b</span>&#123;</span></span><br><span class="line">            color: blue;</span><br><span class="line">            font-size: 40px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.z</span>&#123;</span></span><br><span class="line">            font-weight: bold;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="comment">/*ID选择器*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-id">#c</span>&#123;</span></span><br><span class="line">            color: brown;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    选择器:作用选定一组特有的标签</span></span><br><span class="line"><span class="comment">    1)标签</span></span><br><span class="line"><span class="comment">        特点:此名称的所有标签都收到控制</span></span><br><span class="line"><span class="comment">        语法:标签名&#123;css样式&#125;</span></span><br><span class="line"><span class="comment">    2)class(类)</span></span><br><span class="line"><span class="comment">        特点:具有分组特性</span></span><br><span class="line"><span class="comment">        语法.class&#123;css样式&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    3)id</span></span><br><span class="line"><span class="comment">        特点：具有唯一性</span></span><br><span class="line"><span class="comment">        语法: #id&#123;css样式&#125;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span>A<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"a z"</span>&gt;</span>A Z<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"a z"</span>&gt;</span>A Z<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"b"</span>&gt;</span>B<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"b z"</span>&gt;</span>B Z<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"b z"</span>&gt;</span>B Z<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"c"</span>&gt;</span>C<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-4-扩展选择器"><a href="#2-4-扩展选择器" class="headerlink" title="2.4 扩展选择器"></a>2.4 扩展选择器</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Extra_Selector<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        p, span &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">font-family</span>: 楷体; <span class="comment">/*字体类型*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line">        div&gt;span&#123;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">"text"</span>]</span>&#123;</span></span><br><span class="line">            background-color: cornflowerblue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        扩展选择器</span></span><br><span class="line"><span class="comment">            1)并集</span></span><br><span class="line"><span class="comment">                语法:选择器1，选择器2...&#123;CSS样式&#125;</span></span><br><span class="line"><span class="comment">            2)后代</span></span><br><span class="line"><span class="comment">                语法:父 子(孙子)</span></span><br><span class="line"><span class="comment">            3)父子</span></span><br><span class="line"><span class="comment">                语法:父&gt;子&#123;css样式&#125;</span></span><br><span class="line"><span class="comment">            4)属性过滤</span></span><br><span class="line"><span class="comment">                语法:选择器[属性名="属性值"]&#123;CSS样式&#125;</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>AAAA<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"gbl"</span>&gt;</span>BBBB<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"jjx"</span>&gt;</span>CCCC<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"Jack"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>Passwd<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123456"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三-CSS常用样式"><a href="#三-CSS常用样式" class="headerlink" title="三.CSS常用样式"></a>三.CSS常用样式</h1><h4 id="3-1-字体和文本属性"><a href="#3-1-字体和文本属性" class="headerlink" title="3.1 字体和文本属性"></a>3.1 字体和文本属性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">        渲染需求:</span><br><span class="line">            1.所有文字绿色</span><br><span class="line">            2.所有文字大小20px</span><br><span class="line">            3.所有行高40px</span><br><span class="line">            4.所有字体加粗</span><br><span class="line">            5.所有字体楷体</span><br><span class="line">            6.第一句文字倾斜</span><br><span class="line">            7.第一句隐藏下划线</span><br><span class="line">        */</span><br><span class="line">        div p &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-tag">green</span>; <span class="comment">/*所有文字绿色*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span>: 20<span class="selector-tag">px</span>; <span class="comment">/*所有文字大小20px*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span>: 40<span class="selector-tag">px</span>; <span class="comment">/*所有行高40px*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-weight</span>: <span class="selector-tag">bold</span>; <span class="comment">/*所有字体加粗*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-family</span>: 楷体; <span class="comment">/*所有字体楷体*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        div p a &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">font-style</span>: <span class="selector-tag">italic</span>; <span class="comment">/*第一句文字倾斜*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-decoration</span>: <span class="selector-tag">none</span>; <span class="comment">/*第一句隐藏下划线*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Learn<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            HTML<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            CSS<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            Style<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-案例-公司简介"><a href="#3-2-案例-公司简介" class="headerlink" title="3.2 案例:公司简介"></a>3.2 案例:公司简介</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        h1 &#123;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">span</span><span class="selector-class">.redColor</span> &#123;</span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">span</span><span class="selector-class">.boldItalic</span> &#123;</span></span><br><span class="line">            font-weight: bold;</span><br><span class="line">            font-style: italic;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        hr &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ffa500</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span><span class="selector-class">.footer</span> &#123;</span></span><br><span class="line">            text-align: center;</span><br><span class="line">            color: gray;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>公司简介<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="symbol">&amp;emsp;</span><span class="symbol">&amp;emsp;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"redColor"</span>&gt;</span>“中关村黑马程序员训练营”<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 是由 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"boldItalic"</span>&gt;</span>传智播客联<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        合中关村软件园、CSDN，</span><br><span class="line">        并委托传智播客进行教学实施的软 件开发高端培训机构，致力于服务各大软件企业，解决当前软件开发技术飞速发展， 而企业招不到优秀人才 的困扰。<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="symbol">&amp;emsp;</span><span class="symbol">&amp;emsp;</span>目前，“中关村黑马程序员训练营”已成长为行业“学员质量好、课程内容深、企业满意”的移动开发高端训练基 地， 并被评为中关村软件园重点扶持人才企业。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="symbol">&amp;emsp;</span><span class="symbol">&amp;emsp;</span>黑马程序员的学员多为大学毕业后，有理想、有梦想，想从事IT行业，而没有环境和机遇改变自己命运的 年轻人。 黑马程序员的学员筛选制度，远比现在90%以上的企业招聘流程更为严格。任何一名学员想成功入</span><br><span class="line">        学“黑马程序员”，</span><br><span class="line">        必须经历长达2个月的面试流程，这些流程中不仅包括严格的技术测试、自学能力测试，还 包括性格测试、压力测试、 品德测试等等测试。毫不夸张地说，黑马程序员训练营所有学员都是精挑细选出 来的。百里挑一的残酷筛选制度确</span><br><span class="line">        保学员质量，并降低企业的用人风险。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="symbol">&amp;emsp;</span><span class="symbol">&amp;emsp;</span></span><br><span class="line">        中关村黑马程序员训练营不仅着重培养学员的基础理论知识，更注重培养项目实施管理能力，并密切关注 技术革新， 不断引入先进的技术，研发更新技术课程，确保学员进入企业后不仅能独立从事开发工作，更能</span><br><span class="line">        给企业带来新的技术体系和理念。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="symbol">&amp;emsp;</span><span class="symbol">&amp;emsp;</span>一直以来，黑马程序员以技术视角关注IT产业发展，以深度分享推进产业技术成长，致力于弘扬技术创 新，倡导分享、 开放和协作，努力打造高质量的IT人才服务平台。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span>江苏传智播客教育科技股份有限公司<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        版权所有Copyright © 2006-2018, All Rights Reserved 苏ICP备16007882<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-3-背景属性"><a href="#3-3-背景属性" class="headerlink" title="3.3 背景属性"></a>3.3 背景属性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        body &#123;</span><br><span class="line"><span class="css">            <span class="comment">/*background-color: gray;*/</span></span></span><br><span class="line"><span class="css">            <span class="comment">/*background-image: url("../img/Danboard.jpg");*/</span></span></span><br><span class="line"><span class="css">            <span class="comment">/*background-repeat: no-repeat;*/</span></span></span><br><span class="line">            background: gray url("../img/Danboard.jpg") no-repeat;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h1 &#123;</span><br><span class="line">            color: white;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    background-color:背景色</span></span><br><span class="line"><span class="comment">    background-image:背景图片</span></span><br><span class="line"><span class="comment">            取值:url('图片地址')</span></span><br><span class="line"><span class="comment">    background-repeat:平铺方式</span></span><br><span class="line"><span class="comment">            取值:repeat(水平和垂直),repeat-x(水平),repeat-y(垂直),no-repeat(不平铺)</span></span><br><span class="line"><span class="comment">    简写方式:</span></span><br><span class="line"><span class="comment">            background:color image repeat;</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Sub Title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-4-显示属性"><a href="#3-4-显示属性" class="headerlink" title="3.4 显示属性"></a>3.4 显示属性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    span,div&#123;</span><br><span class="line">        border: 1px solid red;</span><br><span class="line">    &#125;</span><br><span class="line">    span&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">display</span>: <span class="selector-tag">block</span>;<span class="comment">/*块级元素*/</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    div&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">display</span>: <span class="selector-tag">inline</span>;<span class="comment">/*行内元素*/</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    ul li&#123;</span><br><span class="line">        display: inline;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#div3</span>&#123;</span></span><br><span class="line">        display: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    显示属性:display</span></span><br><span class="line"><span class="comment">    1)inline:将标签改为行内元素</span></span><br><span class="line"><span class="comment">    2)block:将标签改为块级元素</span></span><br><span class="line"><span class="comment">    3)none:隐藏此标签</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>span1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>span2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>span3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>div1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div3"</span>&gt;</span>div3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>A<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>B<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>C<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-5-浮动属性"><a href="#3-5-浮动属性" class="headerlink" title="3.5 浮动属性"></a>3.5 浮动属性</h4><ul><li>打破常规，让div也能变小(实际大小，与宽高有关)</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 150px;</span><br><span class="line">            height: 150px;</span><br><span class="line">            border: red;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#a</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#b</span> &#123;</span></span><br><span class="line">            float: right;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#both</span> &#123;</span></span><br><span class="line">            clear: both;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    浮动:float</span></span><br><span class="line"><span class="comment">        取值：left,right</span></span><br><span class="line"><span class="comment">    清楚浮动:clear</span></span><br><span class="line"><span class="comment">       取值:both</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">id</span>=<span class="string">"a"</span>&gt;</span>AAA<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">id</span>=<span class="string">"b"</span>&gt;</span>BBB<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"both"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>CCC<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-6-盒子属性"><a href="#3-6-盒子属性" class="headerlink" title="3.6 盒子属性"></a>3.6 盒子属性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            border: 10px solid skyblue;</span><br><span class="line">            padding: 10px;</span><br><span class="line">            margin: 10px;</span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:auto</span>;</span></span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        盒子模型:</span></span><br><span class="line"><span class="comment">        1)宽和高</span></span><br><span class="line"><span class="comment">            width:30opx</span></span><br><span class="line"><span class="comment">            height:300px</span></span><br><span class="line"><span class="comment">        2)边框</span></span><br><span class="line"><span class="comment">            border:宽度 类型 颜色</span></span><br><span class="line"><span class="comment">                类型:solid 单线</span></span><br><span class="line"><span class="comment">                     double 双线</span></span><br><span class="line"><span class="comment">                     dashed 虚线</span></span><br><span class="line"><span class="comment">        3)内边距</span></span><br><span class="line"><span class="comment">            padding-top    上</span></span><br><span class="line"><span class="comment">            padding-right   右</span></span><br><span class="line"><span class="comment">            padding-bottom  下</span></span><br><span class="line"><span class="comment">            padding-left    左</span></span><br><span class="line"><span class="comment">          简写:</span></span><br><span class="line"><span class="comment">            padding: 上 右 下 左</span></span><br><span class="line"><span class="comment">        4)外边距</span></span><br><span class="line"><span class="comment">            margin-top     上</span></span><br><span class="line"><span class="comment">            margin-right   右</span></span><br><span class="line"><span class="comment">            margin-bottom  下</span></span><br><span class="line"><span class="comment">            margin-left    左</span></span><br><span class="line"><span class="comment">           简写:</span></span><br><span class="line"><span class="comment">            margin: 上 右 下 左</span></span><br><span class="line"><span class="comment">           特殊:</span></span><br><span class="line"><span class="comment">            margin:auto  水平居中</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         5)盒子类型</span></span><br><span class="line"><span class="comment">            box-sizing:content-box(默认)  盒子大小(宽和高+内边距+边框),计算起来麻烦</span></span><br><span class="line"><span class="comment">            box-sizing:border-box盒子大小(宽和高)包含(内边距和边框),计算起来简单</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        盒子大小=内容大小+padding+border</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/Danboard.jpg"</span> <span class="attr">width</span>=<span class="string">"260px"</span> <span class="attr">height</span>=<span class="string">"260px"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="四-JavaScript概述"><a href="#四-JavaScript概述" class="headerlink" title="四.JavaScript概述"></a>四.JavaScript概述</h1><ul><li><p>作用:页面交互</p></li><li><p>特点:<br>•JavaScrpit源码不需要编译，浏览器可以直接解释运行<br>•JavaScrpit是弱类型语言，js变量声明不需要指明类型</p></li></ul><table><thead><tr><th>组成部分</th><th>作用</th></tr></thead><tbody><tr><td>ECMA Scrpit</td><td>构成了JS核心的语法规则</td></tr><tr><td>BOM</td><td>Browser Object Model浏览器对象模型，用来操作浏览器上的对象</td></tr><tr><td>DOM</td><td>Document Object Model文档对象模型，用来操作网页中的元素</td></tr></tbody></table><h1 id="五-JavaScript基础语法"><a href="#五-JavaScript基础语法" class="headerlink" title="五.JavaScript基础语法"></a>五.JavaScript基础语法</h1><h4 id="5-1-HTML引入JS"><a href="#5-1-HTML引入JS" class="headerlink" title="5.1 HTML引入JS"></a>5.1 HTML引入JS</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">HTML引入js的两种方式</span></span><br><span class="line"><span class="comment">    1)内部脚本</span></span><br><span class="line"><span class="comment">        语法:&lt;script type="text/javascript"&gt;JS Code&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    2)外部脚本</span></span><br><span class="line"><span class="comment">        语法:&lt;script src="外部JS文件地址"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    补充:script标签可以在页面任意位置，建议放在body尾部</span></span><br><span class="line"><span class="comment">        页面顺序:css-&gt;html-&gt;js</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    注意:</span></span><br><span class="line"><span class="comment">        1)script标签不能自闭和</span></span><br><span class="line"><span class="comment">        2)如果script标签使用了src属性，那么浏览器将不会解析此标签体的js代码</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(<span class="string">'&lt;h1&gt;This is Inside Script&lt;/h1&gt;'</span>)</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"MyJS.js"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// document.write('Useless')</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-2-JS三种输出方式"><a href="#5-2-JS三种输出方式" class="headerlink" title="5.2 JS三种输出方式"></a>5.2 JS三种输出方式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    JS三种输出方式:</span></span><br><span class="line"><span class="comment">    1)浏览器弹框输出字符</span></span><br><span class="line"><span class="comment">    2)输出html内容到页面</span></span><br><span class="line"><span class="comment">    3)输出到浏览器控制台</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"浏览器弹框输出字符"</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(<span class="string">"输出html内容到页面"</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"输出到浏览器控制台"</span>)</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-3-JS变量声明"><a href="#5-3-JS变量声明" class="headerlink" title="5.3 JS变量声明"></a>5.3 JS变量声明</h4><ul><li>JS是弱类型语言，不注重变量的定义，使用在JS中定义变量的类型方式如下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        JS的变量声明:</span></span><br><span class="line"><span class="comment">        ECMAScript 6 之前所有的遍历声明都用var</span></span><br><span class="line"><span class="comment">        ES 6 之后开始退出let声明变量,const声明变量</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> str = <span class="string">"AAA"</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(str);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> i = <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(i);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> d = <span class="number">123.123</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(d);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> PI = <span class="number">3.14</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(PI);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//boolean</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> b = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(b)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//感知弱类型语言不注重变量的定义</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> a;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(a);</span></span><br><span class="line">            </span><br><span class="line">            a = 123;</span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(a);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            a = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(a);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            a = <span class="keyword">new</span> <span class="built_in">Object</span>();</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(a);</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-4-JS数据类型"><a href="#5-4-JS数据类型" class="headerlink" title="5.4 JS数据类型"></a>5.4 JS数据类型</h4><p>JS数据类型也分为基本(原始)数据类型和引用数据类型</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    基本数据类型:</span></span><br><span class="line"><span class="comment">        1)number 数值(整型,浮点都属于数值)</span></span><br><span class="line"><span class="comment">        2)string 字符串(单引号,双引号),在JS中都是字符串，没有字符概念</span></span><br><span class="line"><span class="comment">        3)boolean 布尔类型(true/false)</span></span><br><span class="line"><span class="comment">        4)undefined 未定义</span></span><br><span class="line"><span class="comment">    引用数据类型:</span></span><br><span class="line"><span class="comment">        let obj = new Object();</span></span><br><span class="line"><span class="comment">        let date = new Date();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    判断变量都数据类型:</span></span><br><span class="line"><span class="comment">        语法:typeof变量名</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">//感知弱类型语言不注重变量的定义</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> a;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> a);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        a = <span class="string">"ABC"</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> a);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        a = <span class="string">'ABC'</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> a);</span></span><br><span class="line"></span><br><span class="line">        a = 123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> a);</span></span><br><span class="line"></span><br><span class="line">        a = 123.123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> a);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        a = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> a);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        a=<span class="keyword">new</span> <span class="built_in">Object</span>();</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> a);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> stu = <span class="keyword">new</span> <span class="built_in">Object</span>();</span></span><br><span class="line">        stu.id = 1;</span><br><span class="line"><span class="actionscript">        stu.name = <span class="string">'a'</span>;</span></span><br><span class="line">        stu.age = 18;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(stu);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><h2 id="css"><a href="#css" class="headerlink" title="css"></a>css</h2><h3 id="作用：美化网页"><a href="#作用：美化网页" class="headerlink" title="作用：美化网页"></a>作用：美化网页</h3><h3 id="CSS基础语法"><a href="#CSS基础语法" class="headerlink" title="CSS基础语法"></a>CSS基础语法</h3><ul><li><p>HTML引入CSS</p><ul><li>行内样式：所有标签都有一个style属性</li><li>内部样式：使用style标签</li><li>外部样式：通过link标签引入外部样式</li></ul></li><li><p>书写和规范</p><ul><li>选择器{样式名：样式值；}</li></ul></li><li><p>基本选择器</p><ul><li>标签</li><li>id</li><li>class</li></ul></li><li><p>扩展选择器</p><ul><li><p>并集</p></li><li><p>层级</p><ul><li>后代</li><li>父子</li></ul></li><li><p>属性</p></li></ul></li></ul><h3 id="CSS常用样式"><a href="#CSS常用样式" class="headerlink" title="CSS常用样式"></a>CSS常用样式</h3><ul><li><p>字体文本</p></li><li><p>背景</p><ul><li>background</li></ul></li><li><p>显示</p><ul><li><p>display</p><ul><li><p>block</p><ul><li>块元素</li></ul></li><li><p>inline</p><ul><li>行内元素</li></ul></li><li><p>none</p><ul><li>隐藏</li></ul></li></ul></li></ul></li><li><p>浮动</p><ul><li><p>float</p><ul><li>left</li><li>right</li></ul></li></ul></li><li><p>盒子模型</p><ul><li><p>组成</p><ul><li><p>宽高</p></li><li><p>边框</p><ul><li>border</li></ul></li><li><p>内边距</p><ul><li>padding</li></ul></li><li><p>外边距</p><ul><li>margin</li></ul></li></ul></li></ul></li></ul><h3 id="作业："><a href="#作业：" class="headerlink" title="作业："></a>作业：</h3><ul><li><p>公司简介</p></li><li><p>黑马旅游网注册页面</p><ul><li>table版本</li><li>扩展：重写搭建div+css布局</li></ul></li></ul><h2 id="js入门"><a href="#js入门" class="headerlink" title="js入门"></a>js入门</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li><p>作用：网页交互</p></li><li><p>js组成</p><ul><li><p>ECMAScript</p><ul><li>基础语法</li></ul></li><li><p>BOM</p><ul><li>浏览器对象模型</li></ul></li><li><p>DOM</p><ul><li>文档对象模型</li></ul></li></ul></li></ul><h3 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h3><ul><li><p>HTML引入JS</p><ul><li>内部脚本</li><li>外部脚本</li></ul></li><li><p>JS三种输出方式</p><ul><li>alert(）</li><li>document.write()</li><li>console.log()</li></ul></li><li><p>JS变量声明</p><ul><li>let</li><li>const</li></ul></li><li><p>JS数据类型</p><ul><li><p>基本数据类型</p><ul><li>number</li><li>string</li><li>boolean</li><li>undefined</li></ul></li><li><p>引用数据类型</p><ul><li>object</li></ul></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（二十六)</title>
      <link href="/2020/04/04/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E5%85%AD%EF%BC%89/"/>
      <url>/2020/04/04/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E5%85%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>HTML概述</li><li>HTML基础</li><li>HTML常用标签</li><li>HTML的Form表单<a id="more"></a></li></ul><h1 id="一-HTML概述"><a href="#一-HTML概述" class="headerlink" title="一.HTML概述"></a>一.HTML概述</h1><ul><li>超文本标记语言(Hyper Text Markup Language)</li><li>作用：搭建基础网页</li></ul><h5 id="超文本-具有普通文本的特性，同时还可以假如图片、视频、超链接等等"><a href="#超文本-具有普通文本的特性，同时还可以假如图片、视频、超链接等等" class="headerlink" title="超文本:具有普通文本的特性，同时还可以假如图片、视频、超链接等等"></a>超文本:具有普通文本的特性，同时还可以假如图片、视频、超链接等等</h5><h5 id="标记-即标签。预定义好的标签有不同的效果或者功能"><a href="#标记-即标签。预定义好的标签有不同的效果或者功能" class="headerlink" title="标记:即标签。预定义好的标签有不同的效果或者功能"></a>标记:即标签。预定义好的标签有不同的效果或者功能</h5><h5 id="语言-人与计算机沟通桥梁"><a href="#语言-人与计算机沟通桥梁" class="headerlink" title="语言:人与计算机沟通桥梁"></a>语言:人与计算机沟通桥梁</h5><h1 id="二-HTML基础"><a href="#二-HTML基础" class="headerlink" title="二.HTML基础"></a>二.HTML基础</h1><ul><li><p>创建:在IntelliJ IDEA-New Project-New Moudle-Static Web</p></li><li><p>Editor-&gt;Code Style-&gt;HTML-&gt;Other-&gt;Do not indent children of去除<html><head><body>即可快捷键格式化</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span><span class="comment">&lt;!--文档声明，声明当前html版本为5，固定格式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span><span class="comment">&lt;!-- 表示当前网页语言 en英语，zh-CN简体中文 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>First Html<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        Hello,World</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-2-书写规范"><a href="#2-2-书写规范" class="headerlink" title="2.2 书写规范"></a>2.2 书写规范</h5><ul><li><p>文档声明<br>要求:必须在第一行，固定格式</p></li><li><p>标签<br>要求：正确嵌套，正确闭合<br>双标签&lt;开始&gt;&lt;/结束&gt;<br>单标签&lt;开始/&gt;</p></li><li><p>属性<br>要求：必须在开始标签中编写，属性值单双引都可以<br>&lt;开始 属性名=”属性值”&gt;&lt;/结束&gt;</p></li><li><p>文本<br>要求：在标签题内编写</p></li><li><p>注释</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释内容 --&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三-HTML常用标签"><a href="#三-HTML常用标签" class="headerlink" title="三.HTML常用标签"></a>三.HTML常用标签</h1><h3 id="标签语义"><a href="#标签语义" class="headerlink" title="标签语义"></a>标签语义</h3><p>标签语义：这个标签能干啥</p></li></ul><h4 id="3-1-标题标签"><a href="#3-1-标题标签" class="headerlink" title="3.1 标题标签"></a>3.1 标题标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    &lt;hn&gt;&lt;/hn&gt;</span></span><br><span class="line"><span class="comment">    n表示取值范围:1~6</span></span><br><span class="line"><span class="comment">    数值越小，字体越大</span></span><br><span class="line"><span class="comment">    常用属性:</span></span><br><span class="line"><span class="comment">        align:对齐方式</span></span><br><span class="line"><span class="comment">    取值:left center right</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>我是H1标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">"left"</span>&gt;</span>我是H2标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>我是H3标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>我是H4标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h5</span>&gt;</span>我是H5标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h6</span>&gt;</span>我是H6标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-水平线标签"><a href="#3-2-水平线标签" class="headerlink" title="3.2 水平线标签"></a>3.2 水平线标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">     水平线:&lt;hr/&gt;</span></span><br><span class="line"><span class="comment">     常用属性:</span></span><br><span class="line"><span class="comment">        color:颜色</span></span><br><span class="line"><span class="comment">        R(0-255)G(0-255)B(0-255) #ff ff ff</span></span><br><span class="line"><span class="comment">        width: 宽度</span></span><br><span class="line"><span class="comment">        1.像素 px 固定值</span></span><br><span class="line"><span class="comment">        2.百分比 % 屏幕自适应</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> <span class="attr">color</span>=<span class="string">"#183624"</span> <span class="attr">width</span>=<span class="string">"500px"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> <span class="attr">color</span>=<span class="string">"grey"</span> <span class="attr">width</span>=<span class="string">"50%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-3-段落和换行标签"><a href="#3-3-段落和换行标签" class="headerlink" title="3.3 段落和换行标签"></a>3.3 段落和换行标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">     换行:&lt;br&gt;</span></span><br><span class="line"><span class="comment">     段落:&lt;p&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="comment">        上下留白</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    1<span class="tag">&lt;<span class="name">br</span>&gt;</span>2<span class="tag">&lt;<span class="name">br</span>&gt;</span>3<span class="tag">&lt;<span class="name">p</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>5<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>6<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-4-超链接"><a href="#3-4-超链接" class="headerlink" title="3.4 超链接"></a>3.4 超链接</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    超链接&lt;a&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="comment">    常用属性:</span></span><br><span class="line"><span class="comment">    href:页面跳转地址</span></span><br><span class="line"><span class="comment">    1.绝对地址 www.baidu.com</span></span><br><span class="line"><span class="comment">    2.相对地址</span></span><br><span class="line"><span class="comment">          ./当前目录</span></span><br><span class="line"><span class="comment">          ../上级目录</span></span><br><span class="line"><span class="comment">    3.target:打开方式</span></span><br><span class="line"><span class="comment">    _self(default):当前窗口跳转</span></span><br><span class="line"><span class="comment">    _blank:打开新窗口跳转      </span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./01%20Caption.html"</span>&gt;</span>相对地址标题 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"02%20Horizontal.html"</span>&gt;</span>水平线标题 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../index.html"</span>&gt;</span>index.html <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../../Day26_Web.iml"</span>&gt;</span>index.html <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.bing.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Bing<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-5-图像标签"><a href="#3-5-图像标签" class="headerlink" title="3.5 图像标签"></a>3.5 图像标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    图像:&lt;img/&gt;</span></span><br><span class="line"><span class="comment">    常用属性:</span></span><br><span class="line"><span class="comment">    src: 图片资源地址</span></span><br><span class="line"><span class="comment">        相对地址:网站内部地址</span></span><br><span class="line"><span class="comment">        绝对地址:网站外部地址</span></span><br><span class="line"><span class="comment">    alt:图片资源丢失后，问题提示</span></span><br><span class="line"><span class="comment">    width:图片宽度</span></span><br><span class="line"><span class="comment">        1.px像素固定值</span></span><br><span class="line"><span class="comment">        2.% 百分比</span></span><br><span class="line"><span class="comment">    height:高度</span></span><br><span class="line"><span class="comment">        一般不使用，会失真</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/Danboard.jpg"</span> <span class="attr">width</span>=<span class="string">"200px"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../../img/Danboard.jpg"</span> <span class="attr">alt</span>=<span class="string">"错误"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://suo.im/5zeYyC"</span> <span class="attr">width</span>=<span class="string">"200px"</span> <span class="attr">height</span>=<span class="string">"200px"</span> <span class="attr">alt</span>=<span class="string">"错误"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-6-列表"><a href="#3-6-列表" class="headerlink" title="3.6 列表"></a>3.6 列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    有序列表:&lt;ol&gt;&lt;/ol&gt;</span></span><br><span class="line"><span class="comment">    无序列表:&lt;ul&gt;&lt;/ul&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    共同自标签:&lt;li&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>A<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>B<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>C<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>D<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>E<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>F<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-7-div和span标签"><a href="#3-7-div和span标签" class="headerlink" title="3.7 div和span标签"></a>3.7 div和span标签</h4><ul><li>没有语义的，就是一个容器，用来装内容，万物皆容器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    &lt;div&gt;和&lt;span&gt;是没有语义的,就是一个容器,用来装内容</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    div(块级元素):大容器,特点:独自占用一行</span></span><br><span class="line"><span class="comment">    span(行内元素):小容器,特点:内容有多大占用就多大</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>AAAAAAAAAAAAABBBBBBBBBBBBB<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>AAAAAAAAAAAAA<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>BBBBBBBBBBBBB<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="3-8-转义-实体-字符"><a href="#3-8-转义-实体-字符" class="headerlink" title="3.8 转义(实体)字符"></a>3.8 转义(实体)字符</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    在HTML中有两种特殊的转义符号</span></span><br><span class="line"><span class="comment">    1.与HTML语法有冲突,例如a&lt;b&gt;c 小于号 &amp;lt;</span></span><br><span class="line"><span class="comment">    2.输入法不方便输入 ❤️</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    常用字体符(了解)</span></span><br><span class="line"><span class="comment">    &amp;nbsp; 英文半角空格</span></span><br><span class="line"><span class="comment">    &amp;emsp; 中文汉字空格</span></span><br><span class="line"><span class="comment">    &amp;lt;   小于号</span></span><br><span class="line"><span class="comment">    &amp;gt;   大于号</span></span><br><span class="line"><span class="comment">    &amp;amp;  &amp;符号</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>AAA</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="symbol">&amp;emsp;</span>AAA <span class="symbol">&amp;lt;</span> <span class="symbol">&amp;amp;</span> <span class="symbol">&amp;gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-9-基本表格"><a href="#3-9-基本表格" class="headerlink" title="3.9 基本表格"></a>3.9 基本表格</h4><ul><li>有条理性地展示内容<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    table --表格</span></span><br><span class="line"><span class="comment">        tr —— 列</span></span><br><span class="line"><span class="comment">        td —— 行</span></span><br><span class="line"><span class="comment">        th -- 列表单元格(居中，加粗)</span></span><br><span class="line"><span class="comment">    table常用属性</span></span><br><span class="line"><span class="comment">        border:边框</span></span><br><span class="line"><span class="comment">        width:宽度</span></span><br><span class="line"><span class="comment">        height:高度</span></span><br><span class="line"><span class="comment">        align:表格对齐方式</span></span><br><span class="line"><span class="comment">            取值：left,center,right</span></span><br><span class="line"><span class="comment">        cellspacing：单元格外边距，通常取值 0</span></span><br><span class="line"><span class="comment">        cellpadding：单元格内边距，通常取值 0</span></span><br><span class="line"><span class="comment">        bgcolor:表格背景色</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    tr常用属性</span></span><br><span class="line"><span class="comment">        bgcolor:表格背景色</span></span><br><span class="line"><span class="comment">        align:内容对齐方式</span></span><br><span class="line"><span class="comment">            取值：left,center,right</span></span><br><span class="line"><span class="comment">        height:行高</span></span><br><span class="line"><span class="comment">    td常用属性</span></span><br><span class="line"><span class="comment">        bgcolor:表格背景色</span></span><br><span class="line"><span class="comment">        align:内容对齐方式</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"300px"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">bgcolor</span>=<span class="string">"red"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">"green"</span> <span class="attr">height</span>=<span class="string">"50"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>7<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">"pink"</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>9<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="3-10-合并表格"><a href="#3-10-合并表格" class="headerlink" title="3.10 合并表格"></a>3.10 合并表格</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    跨行合并：rowspan = "合并行数"</span></span><br><span class="line"><span class="comment">    跨列合并：colspan = "合并列数"</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    1.确定跨行还是跨列</span></span><br><span class="line"><span class="comment">    2.确定目标单元格</span></span><br><span class="line"><span class="comment">    3.删除被合并的单元格</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"300px"</span> <span class="attr">align</span>=<span class="string">"center"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">bgcolor</span>=<span class="string">"red"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">"green"</span> <span class="attr">height</span>=<span class="string">"50"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;td&gt;3&lt;/td&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;td&gt;7&lt;/td&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>9<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="四-HTML的form表单"><a href="#四-HTML的form表单" class="headerlink" title="四.HTML的form表单"></a>四.HTML的form表单</h1><h4 id="4-1-采集用户数据"><a href="#4-1-采集用户数据" class="headerlink" title="4.1 采集用户数据"></a>4.1 采集用户数据</h4><h4 id="4-2-发送数据到服务端-Java服务器"><a href="#4-2-发送数据到服务端-Java服务器" class="headerlink" title="4.2 发送数据到服务端(Java服务器)"></a>4.2 发送数据到服务端(Java服务器)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        表单:&lt;form&gt;&lt;/form&gt;(容器)</span></span><br><span class="line"><span class="comment">            常用属性：</span></span><br><span class="line"><span class="comment">                action:表单提交服务器的地址，今天暂时用#(当前页面)</span></span><br><span class="line"><span class="comment">                method:表单提交方式，有两种:get(默认),post</span></span><br><span class="line"><span class="comment">                    get:</span></span><br><span class="line"><span class="comment">                        格式：提交地址:username=A&amp;password=B&amp;birthday=&amp;gender=Male</span></span><br><span class="line"><span class="comment">                        特点：</span></span><br><span class="line"><span class="comment">                            参数在地址栏拼接，不太安全</span></span><br><span class="line"><span class="comment">                            浏览器地址大学有限制</span></span><br><span class="line"><span class="comment">                    post:</span></span><br><span class="line"><span class="comment">                        格式:username=A&amp;password=B&amp;birthday=&amp;gender=Male</span></span><br><span class="line"><span class="comment">                        特点:</span></span><br><span class="line"><span class="comment">                            参数没有在地址栏拼接，相对安全(HTTP请求体)</span></span><br><span class="line"><span class="comment">                            浏览器不会对请求体做大小对限制</span></span><br><span class="line"><span class="comment">        表单项标签:</span></span><br><span class="line"><span class="comment">            1)文本框&lt;input&gt;</span></span><br><span class="line"><span class="comment">            常用属性:</span></span><br><span class="line"><span class="comment">                name:表单项的参数名(想要表单被提交，必须知道name的值)</span></span><br><span class="line"><span class="comment">                value:表单项的值(用户输入,用户选择)</span></span><br><span class="line"><span class="comment">                type:表单项类型，有很多中，不同的类型功能和展示效果也有所不同。</span></span><br><span class="line"><span class="comment">                    常用9种:</span></span><br><span class="line"><span class="comment">                        a.text 文本框(默认)</span></span><br><span class="line"><span class="comment">                        b.password 密码框 特点:掩码</span></span><br><span class="line"><span class="comment">                        c.date 日期选择框</span></span><br><span class="line"><span class="comment">                        d.radio 单选框  特点:同一组(name的值相等)只能选一个，checked="checked"设置默认选中</span></span><br><span class="line"><span class="comment">                        e.checkbox 复选框 特点:同一组(name的值相等)能选择多个，checked="checked"设置默认选中</span></span><br><span class="line"><span class="comment">                        f.file 文件上传 特点:必须post方式</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                        reset 重置按钮(清空表单),特点:value属性就是按钮名称</span></span><br><span class="line"><span class="comment">                        submit 提交按钮,特点:value属性就是按钮名称</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            2)下拉框:&lt;select&gt;&lt;/select&gt;</span></span><br><span class="line"><span class="comment">                列表项:&lt;option&gt;&lt;/option&gt;</span></span><br><span class="line"><span class="comment">                    常用属性: selected="selected"默认列表项被选中</span></span><br><span class="line"><span class="comment">            3)文本域:&lt;textarea&gt;&lt;/textarea&gt;</span></span><br><span class="line"><span class="comment">                常用属性:</span></span><br><span class="line"><span class="comment">                    rows:行高</span></span><br><span class="line"><span class="comment">                    cols:列宽</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">            Name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"Please Input Name"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            Passwd:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"Please Input Passwd"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            Birthday:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">name</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            Gender:</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"Male"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span>Male</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"Female"</span>&gt;</span>Female</span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            Hobby:</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"smoke"</span>&gt;</span> Smoke</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"drink"</span>&gt;</span> Drink</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"perm"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span> perm</span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"pic"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            Level:</span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"Level"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>One<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            Intro:</span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"intro"</span> <span class="attr">rows</span>=<span class="string">"5"</span> <span class="attr">cols</span>=<span class="string">"20"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"Reset Button"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"Submit"</span> <span class="attr">value</span>=<span class="string">"Submit Button"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="第1章-概述"><a href="#第1章-概述" class="headerlink" title="第1章 概述"></a>第1章 概述</h3><ul><li><p>HTML</p><ul><li><p>超文本标记语言</p><ul><li>作用：搭建基础网页结构</li></ul></li></ul></li></ul><h3 id="第2章-基础"><a href="#第2章-基础" class="headerlink" title="第2章 基础"></a>第2章 基础</h3><ul><li><p>开发工具</p><ul><li><p>idea</p><ul><li>搭建 static web 模块</li></ul></li></ul></li><li><p>书写规范</p><ul><li><p>文档声明</p></li><li><p>标签</p><ul><li><p>双标签</p></li><li><p>单标签</p><ul><li>&lt;开始/&gt;</li></ul></li></ul></li><li><p>属性</p></li><li><p>文本</p></li><li><p>注释</p></li></ul></li></ul><h3 id="第3章-常用标签"><a href="#第3章-常用标签" class="headerlink" title="第3章 常用标签"></a>第3章 常用标签</h3><ul><li><p>标题</p><ul><li><p>hn</p><ul><li>h1~h6</li></ul></li></ul></li><li><p>水平线</p><ul><li><p>hr</p><ul><li><p>color</p><ul><li>光三原色</li></ul></li></ul></li></ul></li><li><p>段落换行</p><ul><li><p>br</p><ul><li>换行</li></ul></li><li><p>p</p><ul><li><p>段落</p><ul><li>特点：上下留白</li></ul></li></ul></li></ul></li><li><p>a</p><ul><li><p>超链接</p><ul><li><p>href</p><ul><li><p>绝对地址</p></li><li><p>相对地址</p><ul><li>./当前目录</li><li>../上一级目录</li></ul></li></ul></li><li><p>target</p><ul><li><p>_self（默认）</p></li><li><p>_blank</p><ul><li>打开新窗口</li></ul></li></ul></li></ul></li></ul></li><li><p>img</p><ul><li><p>src</p><ul><li><p>相对地址</p><ul><li>./当前目录</li><li>../上一级目录</li></ul></li><li><p>绝对地址</p></li></ul></li><li><p>width</p><ul><li>纵横比缩放</li></ul></li><li><p>height</p></li><li><p>alt</p></li></ul></li><li><p>列表</p><ul><li><p>ul</p><ul><li>无序</li></ul></li><li><p>ol</p><ul><li>有序</li></ul></li><li><p>li</p></li></ul></li><li><p>容器</p><ul><li><p>div</p><ul><li>块级元素，特点：独自占用一行</li></ul></li><li><p>span</p><ul><li>行内元素，特点：内容有多少，就占用多少</li></ul></li></ul></li><li><p>转义字符</p><ul><li><p>&XXX;</p><ul><li><p>&nbsp;</p><ul><li>英文半角</li></ul></li><li><p>&emsp;</p><ul><li>中文汉字</li></ul></li><li><p>&gt;</p></li><li><p>&lt;</p></li></ul></li></ul></li><li><p>表格</p><ul><li><p>table</p><ul><li>border</li><li>bgcolor</li><li>cellspacing</li><li>cellpadding</li><li>width</li><li>height</li><li>align</li></ul></li><li><p>tr</p><ul><li>height</li><li>align</li></ul></li><li><p>td</p><ul><li><p>width</p></li><li><p>align</p></li><li><p>表格合并</p><ul><li>colspan</li><li>rowspan</li></ul></li></ul></li><li><p>th</p><ul><li><p>列标题单元格</p><ul><li>特点：居中、加粗</li></ul></li></ul></li></ul></li></ul><h3 id="第4章-表单"><a href="#第4章-表单" class="headerlink" title="第4章 表单"></a>第4章 表单</h3><ul><li><p>表单容器</p><ul><li><p>form</p><ul><li><p>action</p></li><li><p>method</p><ul><li><p>get</p></li><li><p>post</p><ul><li>推荐使用</li></ul></li></ul></li></ul></li></ul></li><li><p>表单标签</p><ul><li><p>input</p><ul><li><p>name</p></li><li><p>value</p></li><li><p>type</p><ul><li>text</li><li>password</li><li>date</li><li>radio</li><li>checkbox</li><li>file</li><li>reset</li><li>submit</li><li>button</li></ul></li><li><p>checked</p><ul><li>用于设置单选和复选默认选中</li></ul></li></ul></li><li><p>label</p><ul><li><p>for</p><ul><li><p>表单项辅助标签</p><ul><li>需要跟表单项id进行绑定</li></ul></li></ul></li></ul></li><li><p>select</p><ul><li><p>option</p><ul><li><p>selected</p><ul><li>默认选中</li></ul></li></ul></li></ul></li><li><p>textarea</p></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>图解TCP/IP笔记</title>
      <link href="/2020/04/03/%E5%9B%BE%E8%A7%A3TCP-IP%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/04/03/%E5%9B%BE%E8%A7%A3TCP-IP%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<table>    <tr>        <td >7 应用层</td>          <td rowspan="3">        <应用层>         <br>        Telnet,SSH,HTTP,SMTP,POP,SSL/TLS,FTP,MIME,HTML,SNMP,MIB,SIP,RTP...            </td>   </tr>    <tr>        <td >6 表示层</td>      </tr>    <tr>        <td >5 会话层</td>      </tr>        <tr>        <td >4 传输层</td>          <td>        <传输层>        <br>        TCP,UDP,UDP-Lite,SCTP,DCTP        </td>    </tr>        <tr>        <td >3 网络层</td>          <td>        <网络层>        <br>        ARP,IPv4,IPv6,ICMP,IPsec        </td>    </tr>        <tr>        <td >2 数据链路层</td>          <td rowspan="2">        <div>        以太网,无线Lan,PPP...        <br>        (双绞线，无线，光纤)        </div>        </td>    </tr>        <tr>        <td >1 物理层</td>      </tr></table><h1 id="一-网络基础知识"><a href="#一-网络基础知识" class="headerlink" title="一.网络基础知识"></a>一.网络基础知识</h1><h4 id="1-1-以网络互联方式使用计算机"><a href="#1-1-以网络互联方式使用计算机" class="headerlink" title="1.1 以网络互联方式使用计算机"></a>1.1 以网络互联方式使用计算机</h4><p>计算机网络，根据规模可划分为WAN(Wide Area Network,广域网),和LAN(Local Area Network,局域网)</p><h4 id="1-2-计算机网络发展的7个阶段"><a href="#1-2-计算机网络发展的7个阶段" class="headerlink" title="1.2 计算机网络发展的7个阶段"></a>1.2 计算机网络发展的7个阶段</h4><table><thead><tr><th>年代</th><th>内容</th></tr></thead><tbody><tr><td>20C 50Y</td><td>批处理(Batch Processing)时代</td></tr><tr><td>20C 60Y</td><td>分时系统(TSS)时代</td></tr><tr><td>20C 70Y</td><td>计算机间的通信时代</td></tr><tr><td>20C 80Y</td><td>计算机网络时代</td></tr><tr><td>20C 90Y</td><td>互联网普及时代</td></tr><tr><td>2000 年</td><td>以互联网技术为中心时代<br>IP(Internet Protocol)取代电话网</td></tr><tr><td>2010 年</td><td>从”单纯建立连接”到”安全建立连接”</td></tr></tbody></table><ul><li>手握金刚钻的TCP/IP<br>互联网许多独立发展的通信技术最终融合成 TCP/IP(通信协议统称)</li></ul><h4 id="1-3-协议"><a href="#1-3-协议" class="headerlink" title="1.3 协议"></a>1.3 协议</h4><p>“计算机网络体系结构”将现有网络协议进行了系统归纳，TCP/IP就是IP、TCP、HTTP等协议的集合。</p><table><thead><tr><th>网络体系结构</th><th>协议</th><th>主要用途</th></tr></thead><tbody><tr><td>TCP/IP</td><td>IP,ICMP,TCP,UDP,HTTP,TELNET,SNMP,SMTP…</td><td>互联网，局域网</td></tr><tr><td>IPX/SPX<br>(Netware)</td><td>IPX,SPX,NPC…</td><td>个人电脑局域网</td></tr><tr><td>AppleTalk</td><td>DDP,RTMP,AEP,ATP,ZIP…</td><td>Apple产品局域网</td></tr><tr><td>DECnet</td><td>DPR,NSP,SCP…</td><td>前DEC小型机</td></tr><tr><td>OSI</td><td>FTAM,MOTIS,VT,CMIS/CMIP,CLNP,CONP…</td><td>–</td></tr><tr><td>XNS</td><td>IDP,SPP,PEP…</td><td>施乐公司网络</td></tr></tbody></table><ul><li><p>协议必要性<br>在计算机通信中，通信可能因为软硬件不同遇到各种异常，因此要实现达成一个详细的约定，并遵循这一约定，这种约定就是”协议”。<br>两台计算机必须支持相同的协议，并遵守相同协议进行处理，才能实现相互通信</p></li><li><p>分组交换协议<br>分组交换是指将大数据分割为一个个称为Packet的较小单位进行传输。<br>计算机通信会在每一个分组附上source地址和destination地址，这些地址以及分组序号写入的部分称为”报文首部”<br>一个较大的数据被分为多个组时，为了标明是原始数据的哪一部分，将有必要将序号写入Packet中。接收端会按照顺序重新装配原始数据</p></li></ul><h4 id="1-4-协议的标准化"><a href="#1-4-协议的标准化" class="headerlink" title="1.4 协议的标准化"></a>1.4 协议的标准化</h4><p>为了解决每家都有各自协议无法通信的情况，ISO制定了一个国际标准OSI，对通信系统进行了标准化，但是没有得到普及。<br>IETF推动了TCP/IP的标准化进程，目前是业界标准。</p><h4 id="1-5-协议分层与OSI参考模型"><a href="#1-5-协议分层与OSI参考模型" class="headerlink" title="1.5 协议分层与OSI参考模型"></a>1.5 协议分层与OSI参考模型</h4><h4 id="1-6"><a href="#1-6" class="headerlink" title="1.6"></a>1.6</h4><h4 id="1-7"><a href="#1-7" class="headerlink" title="1.7"></a>1.7</h4><h4 id="1-8"><a href="#1-8" class="headerlink" title="1.8"></a>1.8</h4><h4 id="1-9"><a href="#1-9" class="headerlink" title="1.9"></a>1.9</h4><h4 id="1-10"><a href="#1-10" class="headerlink" title="1.10"></a>1.10</h4><h1 id="二-TCP-IP基础知识"><a href="#二-TCP-IP基础知识" class="headerlink" title="二.TCP/IP基础知识"></a>二.TCP/IP基础知识</h1><h1 id="三-数据链路"><a href="#三-数据链路" class="headerlink" title="三.数据链路"></a>三.数据链路</h1><h1 id="四-IP协议"><a href="#四-IP协议" class="headerlink" title="四.IP协议"></a>四.IP协议</h1><h1 id="五-IP协议相关技术"><a href="#五-IP协议相关技术" class="headerlink" title="五.IP协议相关技术"></a>五.IP协议相关技术</h1><h1 id="六-TCP与UDP"><a href="#六-TCP与UDP" class="headerlink" title="六.TCP与UDP"></a>六.TCP与UDP</h1><h1 id="七-路由协议"><a href="#七-路由协议" class="headerlink" title="七.路由协议"></a>七.路由协议</h1><h1 id="八-应用协议"><a href="#八-应用协议" class="headerlink" title="八.应用协议"></a>八.应用协议</h1><h1 id="九-网络安全"><a href="#九-网络安全" class="headerlink" title="九.网络安全"></a>九.网络安全</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（二十五）</title>
      <link href="/2020/04/03/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E4%BA%94%EF%BC%89/"/>
      <url>/2020/04/03/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>学生管理系统</li><li>用户在客户端操作</li><li>通过TCP编程把数据发送给服务器</li><li>服务器获取数据后，要把数据保存到服务器本地</li><li>通过TCP编程把结果反馈给客户端<a id="more"></a></li></ul><h1 id="一-项目要求"><a href="#一-项目要求" class="headerlink" title="一.项目要求"></a>一.项目要求</h1><h4 id="1-1-所采用到知识点要求"><a href="#1-1-所采用到知识点要求" class="headerlink" title="1.1 所采用到知识点要求"></a>1.1 所采用到知识点要求</h4><ul><li><p>IO流技术<br>服务器读写本地文件时，采用普通字符流/缓冲流技术<br>要求一个学生一行，并且学生到属性之间使用”,”间隔</p></li><li><p>网络编程TCP技术<br>客户端和服务器采用TCP”短连接”，每个功能当需要与服务器连接时，才建立连接，功能完毕，立即断开。<br>即客户端使用一个功能连接服务器一次，使用完毕断开连接</p></li><li><p>多线程技术<br>为了同时支持多个客户端，可以连接服务器，要求每个客户端开启一个线程处理</p></li><li><p>序列化和反序列化技术<br>服务器给客户端返回一个学生对象或一个学生集合时，采用序列化流发送给客户端，客户端采用反序列化流读取数据</p></li></ul><h4 id="1-2-客户端与服务器交互"><a href="#1-2-客户端与服务器交互" class="headerlink" title="1.2 客户端与服务器交互"></a>1.2 客户端与服务器交互</h4><ul><li>交互过程图解</li></ul><ul><li>数据格式说明<br>•客户端和服务器采用TCP连接<br>•数据保存在服务器端<br>•客户端增删改啥发送数据格式说明<br>a.添加:”[1]数据”<br>b.根据ID查询一条数据:”[2]ID”<br>c.修改一条数据:”[3]新数据”<br>d.查询所有数据:”[4]”<br>e.删除一条数据:”[5]ID”</li></ul><h1 id="二-客户端代码实现"><a href="#二-客户端代码实现" class="headerlink" title="二.客户端代码实现"></a>二.客户端代码实现</h1><h4 id="2-1-学生类和打印学生信息当工具类介绍"><a href="#2-1-学生类和打印学生信息当工具类介绍" class="headerlink" title="2.1 学生类和打印学生信息当工具类介绍"></a>2.1 学生类和打印学生信息当工具类介绍</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//学生类:</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, String gender, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        Gender = gender;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//其他省略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//工具类:</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentUtils</span> </span>&#123;</span><br><span class="line">    <span class="comment">//打印ArrayList&lt;Student&gt;的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printStudentList</span><span class="params">(ArrayList&lt;Student&gt; stuList)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"--------------------------------------------------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"编号\t\t姓名\t\t\t性别\t\t年龄"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stuList.size(); i++) &#123;</span><br><span class="line">            Student stu = stuList.get(i);</span><br><span class="line">            System.out.println(stu.getId() + <span class="string">"\t\t"</span> + stu.getName() + <span class="string">"\t\t\t"</span> + stu.getSex() + <span class="string">"\t\t"</span> + stu.getAge());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"--------------------------------------------------"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//打印单个学生的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printStudent</span><span class="params">(Student stu)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"--------------------------------------------------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"编号\t\t姓名\t\t\t性别\t\t年龄"</span>);</span><br><span class="line">        System.out.println(stu.getId() + <span class="string">"\t\t"</span> + stu.getName() + <span class="string">"\t\t\t"</span> + stu.getSex() + <span class="string">"\t\t"</span> + stu.getAge());</span><br><span class="line">        System.out.println(<span class="string">"--------------------------------------------------"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2-编写客户端主程序"><a href="#2-2-编写客户端主程序" class="headerlink" title="2.2 编写客户端主程序"></a>2.2 编写客户端主程序</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentClient</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Scanner sc = <span class="keyword">new</span> Scanner((System.in));</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Welcome to Student Manager"</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            System.out.println();</span><br><span class="line">            System.out.println(<span class="string">"1. ADD 2.Modify 3.Delete 4.Require 5.Require All 6.Exit"</span>);</span><br><span class="line">            System.out.println(<span class="string">"Please Choose"</span>);</span><br><span class="line">            <span class="keyword">int</span> user = sc.nextInt();</span><br><span class="line">            <span class="keyword">switch</span> (user) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    addStudent();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    updateStudent();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    deleteStudent();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                    requireStudent();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                    requireAllStudent();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                    System.out.println(<span class="string">"Welcome next time"</span>);</span><br><span class="line">                    System.exit(<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    System.out.println(<span class="string">"Wrong Input"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-添加学生功能"><a href="#2-3-添加学生功能" class="headerlink" title="2.3 添加学生功能"></a>2.3 添加学生功能</h4><p>a.客户端得到数据(用户输入)<br>b.使用TCP连接将数据发送给服务器<br>c.读取服务器发送回来的反馈<br>d.关闭客户端，释放资源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"*ADD Student*"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Please Input Name:"</span>);</span><br><span class="line">        String name = sc.next();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Please Input Gender:"</span>);</span><br><span class="line">        String gender = sc.next();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Please Input Age:"</span>);</span><br><span class="line">        <span class="keyword">int</span> age = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        Socket socket = getSocket();</span><br><span class="line">        <span class="keyword">if</span> (socket == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Server Suspend..."</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> (OutputStream out = socket.getOutputStream();</span><br><span class="line">             InputStream in = socket.getInputStream();) &#123;</span><br><span class="line"></span><br><span class="line">            out.write((<span class="string">"[1]"</span> + name + <span class="string">","</span> + gender + <span class="string">","</span> + age).getBytes());</span><br><span class="line">            <span class="keyword">int</span> result = in.read();</span><br><span class="line">            <span class="keyword">if</span> (result == <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"ADD Successful"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"ADD Failed,Please Contact the Administrator"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            socket.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ie) &#123;</span><br><span class="line">            ie.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-修改学生功能"><a href="#2-4-修改学生功能" class="headerlink" title="2.4 修改学生功能"></a>2.4 修改学生功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">updateStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"*Modify Student*"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Please Input ID"</span>);</span><br><span class="line">        <span class="keyword">int</span> ID = sc.nextInt();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Socket socket = getSocket();</span><br><span class="line">        <span class="keyword">if</span> (socket == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Server Suspend..."</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Student student = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> (OutputStream out = socket.getOutputStream();</span><br><span class="line">             InputStream in = socket.getInputStream();) &#123;</span><br><span class="line">            out.write((<span class="string">"[2]"</span> + ID).getBytes());</span><br><span class="line"></span><br><span class="line">            ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(in);</span><br><span class="line">            student = (Student) ois.readObject();</span><br><span class="line">            <span class="keyword">if</span> (student == <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"No This Student"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                StudentUtils.printStudent(student);</span><br><span class="line">            &#125;</span><br><span class="line">            socket.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"Please Input New Name(If not modify,Input 0):"</span>);</span><br><span class="line">        String name = sc.next();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Please Input New Gender(If not modify,Input 0):"</span>);</span><br><span class="line">        String gender = sc.next();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Please Input New Age(If not modify,Input 0):"</span>);</span><br><span class="line">        <span class="keyword">int</span> age = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">"0"</span>.equals(name)) &#123;</span><br><span class="line">            student.setName(name);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="string">"0"</span>.equals(gender)) &#123;</span><br><span class="line">            student.setGender(gender);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (age != <span class="number">0</span>) &#123;</span><br><span class="line">            student.setAge(age);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Socket socketUpdate = getSocket();</span><br><span class="line">        <span class="keyword">if</span> (socketUpdate == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Server Suspend..."</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> (OutputStream out = socketUpdate.getOutputStream();</span><br><span class="line">             InputStream in = socketUpdate.getInputStream();) &#123;</span><br><span class="line"></span><br><span class="line">            out.write((<span class="string">"[3]"</span> + ID + <span class="string">","</span> + student.getName() + <span class="string">","</span> + student.getGender() + <span class="string">","</span> + student.getAge()).getBytes());</span><br><span class="line">            <span class="keyword">int</span> result = in.read();</span><br><span class="line">            <span class="keyword">if</span> (result == <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"Modify Successful"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"Modify Failed,Please Contact the Administrator"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            socketUpdate.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ie) &#123;</span><br><span class="line">            ie.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="2-5-根据ID查询学生功能"><a href="#2-5-根据ID查询学生功能" class="headerlink" title="2.5 根据ID查询学生功能"></a>2.5 根据ID查询学生功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">requireStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"*Require Student*"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Require Student By ID"</span>);</span><br><span class="line">        <span class="keyword">int</span> ID = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        Socket socket = getSocket();</span><br><span class="line">        <span class="keyword">if</span> (socket == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Server Suspend..."</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> (OutputStream out = socket.getOutputStream();</span><br><span class="line">             InputStream in = socket.getInputStream();) &#123;</span><br><span class="line">            out.write((<span class="string">"[2]"</span> + ID).getBytes());</span><br><span class="line"></span><br><span class="line">            ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(in);</span><br><span class="line">            Student student = (Student) ois.readObject();</span><br><span class="line">            <span class="keyword">if</span> (student == <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"No This Student"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                StudentUtils.printStudent(student);</span><br><span class="line">            &#125;</span><br><span class="line">            socket.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="2-6-查询所有学生功能"><a href="#2-6-查询所有学生功能" class="headerlink" title="2.6 查询所有学生功能"></a>2.6 查询所有学生功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">requireAllStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"*Require All Student*"</span>);</span><br><span class="line"></span><br><span class="line">        Socket socket = getSocket();</span><br><span class="line">        <span class="keyword">if</span> (socket == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Server Suspend..."</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> (OutputStream out = socket.getOutputStream();</span><br><span class="line">             InputStream in = socket.getInputStream();) &#123;</span><br><span class="line">            out.write((<span class="string">"[4]"</span>).getBytes());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(in);</span><br><span class="line"></span><br><span class="line">            ArrayList&lt;Student&gt; students = (ArrayList&lt;Student&gt;) ois.readObject();</span><br><span class="line">            <span class="keyword">if</span> (students == <span class="keyword">null</span> || students.size() == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"None Student"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                StudentUtils.printStudentList(students);</span><br><span class="line">            &#125;</span><br><span class="line">            socket.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Create Client Method</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Socket <span class="title">getSocket</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Socket socket = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            socket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> socket;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="2-7-删除学生功能"><a href="#2-7-删除学生功能" class="headerlink" title="2.7 删除学生功能"></a>2.7 删除学生功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"*Delete Student*"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Please Input ID"</span>);</span><br><span class="line">        <span class="keyword">int</span> ID = sc.nextInt();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Socket socket = getSocket();</span><br><span class="line">        <span class="keyword">if</span> (socket == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Server Suspend..."</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Student student = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> (OutputStream out = socket.getOutputStream();</span><br><span class="line">             InputStream in = socket.getInputStream();</span><br><span class="line">             ) &#123;</span><br><span class="line"></span><br><span class="line">            out.write((<span class="string">"[2]"</span> + ID).getBytes());</span><br><span class="line"></span><br><span class="line">            ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(in);</span><br><span class="line">            student = (Student) ois.readObject();</span><br><span class="line">            <span class="keyword">if</span> (student == <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"No This Student"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                StudentUtils.printStudent(student);</span><br><span class="line">            &#125;</span><br><span class="line">            socket.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"Sure to Delete? Y/N"</span>);</span><br><span class="line">        String user = sc.next();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">"Y"</span>.equals(user)) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Canceled"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Socket socketDelete = getSocket();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (socketDelete == <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"Server Suspend..."</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> (OutputStream out = socketDelete.getOutputStream();</span><br><span class="line">                 InputStream in = socketDelete.getInputStream();</span><br><span class="line">                 ) &#123;</span><br><span class="line"></span><br><span class="line">                out.write((<span class="string">"[5]"</span> + ID).getBytes());</span><br><span class="line">                ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(in);</span><br><span class="line">                <span class="keyword">int</span> result = in.read();</span><br><span class="line">                <span class="keyword">if</span> (result == <span class="number">1</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">"Delete Successful"</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.println(<span class="string">"Delete Failed,Please Contact the Administrator"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                socketDelete.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="三-服务器代码实现"><a href="#三-服务器代码实现" class="headerlink" title="三.服务器代码实现"></a>三.服务器代码实现</h1><h4 id="3-1-学生类和保存学生数据的工具类介绍"><a href="#3-1-学生类和保存学生数据的工具类介绍" class="headerlink" title="3.1 学生类和保存学生数据的工具类介绍"></a>3.1 学生类和保存学生数据的工具类介绍</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 学生类:</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">( String name, String gender, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        Gender = gender;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//其他省略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存学生数据的工具类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">//将集合中所有学生对象,写入到文件中</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeAll</span><span class="params">(ArrayList&lt;Student&gt; stuList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> (FileWriter out = <span class="keyword">new</span> FileWriter(<span class="string">"student.txt"</span>)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Student stu : stuList) &#123;</span><br><span class="line">                <span class="comment">//格式: id,姓名,性别,年龄</span></span><br><span class="line">                out.write(stu.getId() + <span class="string">","</span> + stu.getName() + <span class="string">","</span> + stu.getSex() + <span class="string">","</span> + stu.getAge());</span><br><span class="line">                <span class="comment">//换行</span></span><br><span class="line">                out.write(<span class="string">"\r\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//从文件中读取所有学生的信息,返回学生集合</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ArrayList&lt;Student&gt; <span class="title">readAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Student&gt; stuList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//1.创建File对象</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"student.txt"</span>);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//2.如果不存在,则创建,否则读取会抛异常</span></span><br><span class="line">                file.createNewFile();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3.读数据,一次一行 格式: id,姓名,性别,年龄</span></span><br><span class="line">        <span class="keyword">try</span> (BufferedReader bufIn = <span class="keyword">new</span> BufferedReader(</span><br><span class="line">                <span class="keyword">new</span> FileReader(<span class="string">"student.txt"</span>))) &#123;</span><br><span class="line">            String line = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">while</span> ((line = bufIn.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">//4.一行切割成一个数组,[id,姓名,性别,年龄]</span></span><br><span class="line">                String[] rowArray = line.split(<span class="string">","</span>);</span><br><span class="line">                <span class="comment">//5.创建学生对象,封装数据</span></span><br><span class="line">                Student stu = <span class="keyword">new</span> Student();</span><br><span class="line">                stu.setId(Integer.parseInt(rowArray[<span class="number">0</span>]));</span><br><span class="line">                stu.setName(rowArray[<span class="number">1</span>]);</span><br><span class="line">                stu.setSex(rowArray[<span class="number">2</span>]);</span><br><span class="line">                stu.setAge(Integer.parseInt(rowArray[<span class="number">3</span>]));</span><br><span class="line">                <span class="comment">//6.添加到集合中</span></span><br><span class="line">                stuList.add(stu);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//7.返回整个集合</span></span><br><span class="line">        <span class="keyword">return</span> stuList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加一个学生,返回boolean代表是否添加成功</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">addStudent</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.先读取所有学生</span></span><br><span class="line">        ArrayList&lt;Student&gt; stuList = readAll();</span><br><span class="line">        <span class="keyword">if</span> (stuList == <span class="keyword">null</span>) &#123;<span class="comment">//说明读取文件出错</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.获取最后一个学生的id,加1后作为新学生的id</span></span><br><span class="line">        <span class="keyword">if</span> (stuList.size() != <span class="number">0</span>) &#123;</span><br><span class="line">            student.setId(stuList.get(stuList.size() - <span class="number">1</span>).getId() + <span class="number">1</span>);<span class="comment">//取最后一个对象的id + 1</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//3.如果没有学生,说明是第一个,则id设置为1</span></span><br><span class="line">            student.setId(<span class="number">1</span>);<span class="comment">//第一次添加，文件中没有内容</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//4.添加到集合中</span></span><br><span class="line">        stuList.add(student);</span><br><span class="line">        <span class="comment">//5.把集合重写写入到文件中</span></span><br><span class="line">        writeAll(stuList);</span><br><span class="line">        <span class="comment">//6.返回添加成功</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//根据id删除一个学生,返回boolean代表是否删除成功</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">deleteById</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.先读取所有学生</span></span><br><span class="line">        ArrayList&lt;Student&gt; stuList = readAll();</span><br><span class="line">        <span class="keyword">if</span> (stuList == <span class="keyword">null</span>) &#123;<span class="comment">//说明读取文件出错</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.遍历集合</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stuList.size(); i++) &#123;</span><br><span class="line">            Student stu = stuList.get(i);</span><br><span class="line">            <span class="comment">//3.判断学生的id是否和要删除的id相等</span></span><br><span class="line">            <span class="keyword">if</span> (stu.getId() == id) &#123;</span><br><span class="line">                <span class="comment">//4.从集合中删除学生</span></span><br><span class="line">                stuList.remove(i);</span><br><span class="line">                <span class="comment">//5.重写写入到文件中</span></span><br><span class="line">                writeAll(stuList);</span><br><span class="line">                <span class="comment">//6.返回成功</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//7.如果没找到学生返回失败</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//修改学生,返回boolean代表是否修改成功</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">updateStudent</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.先读取所有学生</span></span><br><span class="line">        ArrayList&lt;Student&gt; stuList = readAll();</span><br><span class="line">        <span class="keyword">if</span> (stuList == <span class="keyword">null</span>) &#123;<span class="comment">//说明读取文件出错</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"修改的数据："</span> + student);</span><br><span class="line">        <span class="comment">//2.遍历集合</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stuList.size(); i++) &#123;</span><br><span class="line">            Student stu = stuList.get(i);</span><br><span class="line">            <span class="comment">//3.判断哪个学生id和要修改的学生id相同</span></span><br><span class="line">            <span class="keyword">if</span> (stu.getId() == student.getId()) &#123;</span><br><span class="line">                <span class="comment">//4.将学生改为新的学生</span></span><br><span class="line">                stuList.set(i, student);</span><br><span class="line">                <span class="comment">//5.重写将集合写入到文集中</span></span><br><span class="line">                writeAll(stuList);<span class="comment">//写回文件</span></span><br><span class="line">                <span class="comment">//6.返回成功</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//7.返回失败</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;<span class="comment">//没找到</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//根据id查询学生,返回查询到的学生</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Student <span class="title">findById</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.先读取所有学生</span></span><br><span class="line">        ArrayList&lt;Student&gt; stuList = readAll();</span><br><span class="line">        <span class="keyword">if</span> (stuList == <span class="keyword">null</span>) &#123;<span class="comment">//说明读取文件出错</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.遍历集合</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stuList.size(); i++) &#123;</span><br><span class="line">            Student stu = stuList.get(i);</span><br><span class="line">            <span class="comment">//3.比较id</span></span><br><span class="line">            <span class="keyword">if</span> (stu.getId() == id) &#123;</span><br><span class="line">                <span class="comment">//4.找到返回学生对象</span></span><br><span class="line">                <span class="keyword">return</span> stu;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//5.找不到返回null</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-编写服务器主程序"><a href="#3-2-编写服务器主程序" class="headerlink" title="3.2 编写服务器主程序"></a>3.2 编写服务器主程序</h4><p>注意我们的需求: 每个客户端连接后要开启一个线程来处与这个客户端的数据交互!!</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ServerSocket server = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line">        System.out.println(<span class="string">"Student Manager Server Start"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Waiting for Client"</span>);</span><br><span class="line"></span><br><span class="line">            Socket socket = server.accept();</span><br><span class="line">            <span class="comment">//New Thread</span></span><br><span class="line">            <span class="keyword">new</span> ServerThread(socket).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-编程线程的任务代码"><a href="#3-3-编程线程的任务代码" class="headerlink" title="3.3 编程线程的任务代码"></a>3.3 编程线程的任务代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> Socket socket;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ServerThread</span><span class="params">(Socket socket)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.socket = socket;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//Read Client Message</span></span><br><span class="line">        <span class="keyword">try</span> (InputStream in = socket.getInputStream();) &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] bys = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> len = in.read(bys);</span><br><span class="line">            String msg = <span class="keyword">new</span> String(bys, <span class="number">0</span>, len);</span><br><span class="line">            System.out.println(msg);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Legality Judgment</span></span><br><span class="line">            <span class="keyword">if</span> (msg.charAt(<span class="number">0</span>) != <span class="string">'['</span> || msg.charAt(<span class="number">2</span>) != <span class="string">']'</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"Client Message Error"</span>);</span><br><span class="line">                socket.close();</span><br><span class="line">                in.close();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            String num = msg.substring(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">switch</span> (num) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"1"</span>:</span><br><span class="line">                    <span class="comment">//ADD Student</span></span><br><span class="line">                    addStudent(msg);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"2"</span>:</span><br><span class="line">                    <span class="comment">//Require By ID</span></span><br><span class="line">                    requireStudent(msg);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"3"</span>:</span><br><span class="line">                    <span class="comment">//Modify</span></span><br><span class="line">                    updateStudent(msg);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"4"</span>:</span><br><span class="line">                    <span class="comment">//Require All</span></span><br><span class="line">                    requireallStudent(msg);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"5"</span>:</span><br><span class="line">                    <span class="comment">//Delete</span></span><br><span class="line">                    deleteStudent(msg);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="comment">//Wrong Client Message</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ie) &#123;</span><br><span class="line">            ie.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="3-4-线程中的增删改查实现"><a href="#3-4-线程中的增删改查实现" class="headerlink" title="3.4 线程中的增删改查实现"></a>3.4 线程中的增删改查实现</h4><p>思考：服务器增删查该的方法，有没有共同步骤<br>a.封装数据<br>b.调用StudentDao的增删改查方法<br>c.反馈数据给客户端<br>d.释放资源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String Gender;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">( String name, String gender, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        Gender = gender;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//其他省略</span></span><br></pre></td></tr></table></figure><ul><li><p>添加学生</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addStudent</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    String stuMsg = msg.substring(<span class="number">3</span>);</span><br><span class="line">    String[] msgArr = stuMsg.split(<span class="string">","</span>);</span><br><span class="line"></span><br><span class="line">    Student newStudent = <span class="keyword">new</span> Student(msgArr[<span class="number">0</span>], msgArr[<span class="number">1</span>], Integer.parseInt(msgArr[<span class="number">2</span>]));</span><br><span class="line"></span><br><span class="line">    StudentDao.addStudent(newStudent);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> (OutputStream out = socket.getOutputStream();) &#123;</span><br><span class="line"></span><br><span class="line">        out.write(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        socket.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException ie) &#123;</span><br><span class="line">        ie.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>查询所有学生</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">requireallStudent</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;Student&gt; stuList = StudentDao.readAll();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> (OutputStream out = socket.getOutputStream();</span><br><span class="line">         ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(out);) &#123;</span><br><span class="line">        oos.writeObject(stuList);</span><br><span class="line"></span><br><span class="line">        socket.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>根据id查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">requireStudent</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> requireID = Integer.parseInt(msg.substring(<span class="number">3</span>));</span><br><span class="line">    Student student = StudentDao.findById(requireID);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> (OutputStream out = socket.getOutputStream();</span><br><span class="line">         ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(out);) &#123;</span><br><span class="line">        oos.writeObject(student);</span><br><span class="line"></span><br><span class="line">        socket.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改学生</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateStudent</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">    String msgStu = msg.substring(<span class="number">3</span>);</span><br><span class="line">    String[] msgArr = msgStu.split(<span class="string">","</span>);</span><br><span class="line">    Student s = <span class="keyword">new</span> Student();</span><br><span class="line"></span><br><span class="line">    s.setId(Integer.parseInt(msgArr[<span class="number">0</span>]));</span><br><span class="line">    s.setName(msgArr[<span class="number">1</span>]);</span><br><span class="line">    s.setGender(msgArr[<span class="number">2</span>]);</span><br><span class="line">    s.setAge(Integer.parseInt(msgArr[<span class="number">3</span>]));</span><br><span class="line"></span><br><span class="line">    StudentDao.updateStudent(s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> (OutputStream out = socket.getOutputStream();) &#123;</span><br><span class="line">        out.write(<span class="number">1</span>);</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>根据id删除</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteStudent</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> deleteID = Integer.parseInt(msg.substring(<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">boolean</span> b = StudentDao.deleteById(deleteID);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> (OutputStream out = socket.getOutputStream();</span><br><span class="line">         ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(out);) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b) &#123;</span><br><span class="line">            oos.writeObject(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            oos.writeObject(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        socket.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>StudentDao<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">//将集合中所有学生对象,写入到文件中</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeAll</span><span class="params">(ArrayList&lt;Student&gt; stuList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> (FileWriter out = <span class="keyword">new</span> FileWriter(<span class="string">"student.txt"</span>)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Student stu : stuList) &#123;</span><br><span class="line">                <span class="comment">//格式: id,姓名,性别,年龄</span></span><br><span class="line">                out.write(stu.getId() + <span class="string">","</span> + stu.getName() + <span class="string">","</span> + stu.getGender() + <span class="string">","</span> + stu.getAge());</span><br><span class="line">                <span class="comment">//换行</span></span><br><span class="line">                out.write(<span class="string">"\r\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//从文件中读取所有学生的信息,返回学生集合</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ArrayList&lt;Student&gt; <span class="title">readAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Student&gt; stuList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//1.创建File对象</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"student.txt"</span>);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//2.如果不存在,则创建,否则读取会抛异常</span></span><br><span class="line">                file.createNewFile();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3.读数据,一次一行 格式: id,姓名,性别,年龄</span></span><br><span class="line">        <span class="keyword">try</span> (BufferedReader bufIn = <span class="keyword">new</span> BufferedReader(</span><br><span class="line">                <span class="keyword">new</span> FileReader(<span class="string">"student.txt"</span>))) &#123;</span><br><span class="line">            String line = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">while</span> ((line = bufIn.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">//4.一行切割成一个数组,[id,姓名,性别,年龄]</span></span><br><span class="line">                String[] rowArray = line.split(<span class="string">","</span>);</span><br><span class="line">                <span class="comment">//5.创建学生对象,封装数据</span></span><br><span class="line">                Student stu = <span class="keyword">new</span> Student();</span><br><span class="line">                stu.setId(Integer.parseInt(rowArray[<span class="number">0</span>]));</span><br><span class="line">                stu.setName(rowArray[<span class="number">1</span>]);</span><br><span class="line">                stu.setGender(rowArray[<span class="number">2</span>]);</span><br><span class="line">                stu.setAge(Integer.parseInt(rowArray[<span class="number">3</span>]));</span><br><span class="line">                <span class="comment">//6.添加到集合中</span></span><br><span class="line">                stuList.add(stu);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//7.返回整个集合</span></span><br><span class="line">        <span class="keyword">return</span> stuList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加一个学生,返回boolean代表是否添加成功</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">addStudent</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.先读取所有学生</span></span><br><span class="line">        ArrayList&lt;Student&gt; stuList = readAll();</span><br><span class="line">        <span class="keyword">if</span> (stuList == <span class="keyword">null</span>) &#123;<span class="comment">//说明读取文件出错</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.获取最后一个学生的id,加1后作为新学生的id</span></span><br><span class="line">        <span class="keyword">if</span> (stuList.size() != <span class="number">0</span>) &#123;</span><br><span class="line">            student.setId(stuList.get(stuList.size() - <span class="number">1</span>).getId() + <span class="number">1</span>);<span class="comment">//取最后一个对象的id + 1</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//3.如果没有学生,说明是第一个,则id设置为1</span></span><br><span class="line">            student.setId(<span class="number">1</span>);<span class="comment">//第一次添加，文件中没有内容</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//4.添加到集合中</span></span><br><span class="line">        stuList.add(student);</span><br><span class="line">        <span class="comment">//5.把集合重写写入到文件中</span></span><br><span class="line">        writeAll(stuList);</span><br><span class="line">        <span class="comment">//6.返回添加成功</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//根据id删除一个学生,返回boolean代表是否删除成功</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">deleteById</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.先读取所有学生</span></span><br><span class="line">        ArrayList&lt;Student&gt; stuList = readAll();</span><br><span class="line">        <span class="keyword">if</span> (stuList == <span class="keyword">null</span>) &#123;<span class="comment">//说明读取文件出错</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.遍历集合</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stuList.size(); i++) &#123;</span><br><span class="line">            Student stu = stuList.get(i);</span><br><span class="line">            <span class="comment">//3.判断学生的id是否和要删除的id相等</span></span><br><span class="line">            <span class="keyword">if</span> (stu.getId() == id) &#123;</span><br><span class="line">                <span class="comment">//4.从集合中删除学生</span></span><br><span class="line">                stuList.remove(i);</span><br><span class="line">                <span class="comment">//5.重写写入到文件中</span></span><br><span class="line">                writeAll(stuList);</span><br><span class="line">                <span class="comment">//6.返回成功</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//7.如果没找到学生返回失败</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//修改学生,返回boolean代表是否修改成功</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">updateStudent</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.先读取所有学生</span></span><br><span class="line">        ArrayList&lt;Student&gt; stuList = readAll();</span><br><span class="line">        <span class="keyword">if</span> (stuList == <span class="keyword">null</span>) &#123;<span class="comment">//说明读取文件出错</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"修改的数据："</span> + student);</span><br><span class="line">        <span class="comment">//2.遍历集合</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stuList.size(); i++) &#123;</span><br><span class="line">            Student stu = stuList.get(i);</span><br><span class="line">            <span class="comment">//3.判断哪个学生id和要修改的学生id相同</span></span><br><span class="line">            <span class="keyword">if</span> (stu.getId() == student.getId()) &#123;</span><br><span class="line">                <span class="comment">//4.将学生改为新的学生</span></span><br><span class="line">                stuList.set(i, student);</span><br><span class="line">                <span class="comment">//5.重写将集合写入到文集中</span></span><br><span class="line">                writeAll(stuList);<span class="comment">//写回文件</span></span><br><span class="line">                <span class="comment">//6.返回成功</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//7.返回失败</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;<span class="comment">//没找到</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//根据id查询学生,返回查询到的学生</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Student <span class="title">findById</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.先读取所有学生</span></span><br><span class="line">        ArrayList&lt;Student&gt; stuList = readAll();</span><br><span class="line">        <span class="keyword">if</span> (stuList == <span class="keyword">null</span>) &#123;<span class="comment">//说明读取文件出错</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.遍历集合</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stuList.size(); i++) &#123;</span><br><span class="line">            Student stu = stuList.get(i);</span><br><span class="line">            <span class="comment">//3.比较id</span></span><br><span class="line">            <span class="keyword">if</span> (stu.getId() == id) &#123;</span><br><span class="line">                <span class="comment">//4.找到返回学生对象</span></span><br><span class="line">                <span class="keyword">return</span> stu;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//5.找不到返回null</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>Tree结构：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── Day25_StudentServer.iml</span><br><span class="line">└── src</span><br><span class="line">    └── com</span><br><span class="line">        └── itheima</span><br><span class="line">            ├── Dao</span><br><span class="line">            │   └── StudentDao.java</span><br><span class="line">            ├── main</span><br><span class="line">            │   ├── ServerThread.java</span><br><span class="line">            │   └── StudentServer.java</span><br><span class="line">            └── pojo</span><br><span class="line">                └── Student.java</span><br><span class="line"></span><br><span class="line"><span class="number">6</span> directories, <span class="number">5</span> files</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">├── Day25_StudentClient.iml</span><br><span class="line">└── src</span><br><span class="line">    └── com</span><br><span class="line">        └── itheima</span><br><span class="line">            ├── main</span><br><span class="line">            │   └── StudentClient.java</span><br><span class="line">            └── pojo</span><br><span class="line">                ├── Student.java</span><br><span class="line">                └── StudentUtils.java</span><br><span class="line"></span><br><span class="line"><span class="number">5</span> directories, <span class="number">4</span> files</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>能够完成客户端添加功能<br>    [1]name,sex,age<br>能够完成客户端修改功能<br>    [3]id,name,sex,age<br>能够完成客户端删除功能<br>    [5]id<br>能够完成客户端获取功能<br>    [2]id<br>    [4]<br>能够完成服务端功能<br>    根据客户端的编码,完成不同的操作</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2020JAVA基础-深入系统的学习数据结构与算法</title>
      <link href="/2020/04/01/2020JAVA%E5%9F%BA%E7%A1%80-%E6%B7%B1%E5%85%A5%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
      <url>/2020/04/01/2020JAVA%E5%9F%BA%E7%A1%80-%E6%B7%B1%E5%85%A5%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<ul><li>数据结构和算法概述</li><li>算法分析<a id="more"></a></li></ul><h1 id="一-概述"><a href="#一-概述" class="headerlink" title="一.概述"></a>一.概述</h1><h4 id="1-1-什么是数据结构"><a href="#1-1-什么是数据结构" class="headerlink" title="1.1 什么是数据结构"></a>1.1 什么是数据结构</h4><p>把数据元素按照一定关系组织起来的集合，用来组织和存储数据</p><h4 id="1-2-数据结构分类"><a href="#1-2-数据结构分类" class="headerlink" title="1.2 数据结构分类"></a>1.2 数据结构分类</h4><p>逻辑结构分类：<br><strong>按照数据与数据之间关系分类，是抽象意义上的数据结构</strong></p><table><thead><tr><th>分类</th><th>含义</th></tr></thead><tbody><tr><td>集合结构</td><td>数据元素同属同一个集合，但是不存在任何关系</td></tr><tr><td>线性结构</td><td>数据元素与数据结构之间存在一对一关系(链表)</td></tr><tr><td>树形结构</td><td>数据元素之间存在一对多关系(树结构)</td></tr><tr><td>图结构</td><td>数据元素之间存在多对多关系</td></tr></tbody></table><p>物理结构：<br>逻辑结构在计算机中真正的表示方式，也可以叫做存储结构</p><table><thead><tr><th>分类</th><th>含义</th><th>优缺点</th></tr></thead><tbody><tr><td>顺序结构</td><td>把数据元素放到地址连续存储单元中，数据间的逻辑关系和物理关系一致(数组)</td><td>优点：数据单元相互间有索引<br><br>缺点：插入效率低</td></tr><tr><td>链式结构</td><td>内存单元可以是连续的，也可以是不连续的，数据元素间不能反映逻辑关系，因此需要一个指针存放元素地址</td><td>优点：无索引，插入效率高<br><br>缺点：查找效率低</td></tr></tbody></table><h4 id="1-3-什么是算法"><a href="#1-3-什么是算法" class="headerlink" title="1.3 什么是算法"></a>1.3 什么是算法</h4><p>在规定时间内，按照一定的条件，从已存在的数据进行计算，获得期望的结果<br><br></p><p>一个优秀的算法追求以如下两方面考虑：</p><ul><li>1.花费最少时间完成需求</li><li>2.占用最少内存空间完成需求</li></ul><h1 id="二-算法分析"><a href="#二-算法分析" class="headerlink" title="二.算法分析"></a>二.算法分析</h1><h4 id="2-1-算法时间复杂度分析"><a href="#2-1-算法时间复杂度分析" class="headerlink" title="2.1 算法时间复杂度分析"></a>2.1 算法时间复杂度分析</h4><h6 id="事前分析法："><a href="#事前分析法：" class="headerlink" title="事前分析法："></a>事前分析法：</h6><p><strong>•算法采用的策略和方案</strong><br>•编译产生的代码质量<br><strong>•问题的输入规模(输入量的规模)</strong><br>•机器执行指令的速度</p><h4 id="2-2-算法空间复杂度分析"><a href="#2-2-算法空间复杂度分析" class="headerlink" title="2.2 算法空间复杂度分析"></a>2.2 算法空间复杂度分析</h4>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（二十四）</title>
      <link href="/2020/04/01/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E5%9B%9B%EF%BC%89/"/>
      <url>/2020/04/01/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>枚举(之前学过的例如@Target)</li><li>JDK8 的新特性(之前学过默认方法[接口中的default方法],Lambda,Stream流)</li><li>新特性学习:方法引用,Base64(用于字符串编码)</li><li>正则表达式<a id="more"></a></li></ul><h1 id="一-枚举"><a href="#一-枚举" class="headerlink" title="一.枚举"></a>一.枚举</h1><h4 id="1-1-不使用枚举存在的问题"><a href="#1-1-不使用枚举存在的问题" class="headerlink" title="1.1 不使用枚举存在的问题"></a>1.1 不使用枚举存在的问题</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPerson</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Person a = <span class="keyword">new</span> Person(<span class="string">"A"</span>,<span class="string">"male"</span>);</span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line">        Person person = <span class="keyword">new</span> Person(<span class="string">"B"</span>, <span class="string">"female"</span>);</span><br><span class="line">        System.out.println(person);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//此时由于性别为String类型,赋值任意字符串均可</span></span><br><span class="line">        <span class="comment">//但是性别也是应该有要求的</span></span><br><span class="line">        <span class="comment">//这就是不使用枚举可能出现的问题</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-枚举的作用与应用场景"><a href="#1-2-枚举的作用与应用场景" class="headerlink" title="1.2 枚举的作用与应用场景"></a>1.2 枚举的作用与应用场景</h4><p>什么是枚举:是一种特殊的类,把所有可能的情况一一列举出来</p><p>什么时候使用枚举：当某个数据的值是固定有限的,就可以使用枚举把其值一一列举出来</p><h4 id="1-3-枚举的基本语法"><a href="#1-3-枚举的基本语法" class="headerlink" title="1.3 枚举的基本语法"></a>1.3 枚举的基本语法</h4><ul><li><p>定义枚举的格式<br>public enum 枚举名{<br>  //枚举项<br>  枚举项1,枚举项2,枚举项3;<br>}</p></li><li><p>枚举的入门案例</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> GenderEnum &#123;</span><br><span class="line">    Male,Female,Trans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//任何值都可以，数据不正常</span></span><br><span class="line">    <span class="comment">//private String gender;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> GenderEnum gender;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, GenderEnum gender)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Person&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", gender='"</span> + gender + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> GenderEnum <span class="title">getGender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGender</span><span class="params">(GenderEnum gender)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPerson</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Person a = <span class="keyword">new</span> Person(<span class="string">"A"</span>,GenderEnum.Male);</span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line">        Person person = <span class="keyword">new</span> Person(<span class="string">"B"</span>, GenderEnum.Female);</span><br><span class="line">        System.out.println(person);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>枚举的本质<br>枚举的本质其实就是一个类,本质其实是当前类的一个对象<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> GenderEnum &#123;</span><br><span class="line">    Male,Female,Trans;</span><br><span class="line">    <span class="comment">//既然枚举是一个类，那么就可以添加喜欢的成员变量和成员方法，甚至构造方法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//本质==&gt;</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">GenderEnum</span> <span class="keyword">extends</span> <span class="title">java</span>.<span class="title">lang</span>.<span class="title">Enum</span>&lt;<span class="title">GenderEnum</span>&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> GenderEnum Male = <span class="keyword">new</span> GenderEnum();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> GenderEnum Female = <span class="keyword">new</span> GenderEnum();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> GenderEnum Trans = <span class="keyword">new</span> GenderEnum();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法是私有化的</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">GenderEnum</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>枚举本质是一个类，那么就可以在枚举中添加各种成员变量，成员方法，构造方法等<br>成员变量和成员方法和普通类没有区别<br>构造方法:<br>a.必须是私有的<br>b.使用时 枚举项(参数)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Sex &#123;</span><br><span class="line">        Male(<span class="number">10</span>),Female(<span class="number">20</span>),Yao(<span class="number">30</span>);</span><br><span class="line">        <span class="comment">//既然枚举是一个类,那么我们就可以添加我们喜欢的成员变量和成员方法和构造方法</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showAge</span><span class="params">()</span></span>&#123;</span><br><span class="line">            System.out.println(age);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">Sex</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">Sex</span><span class="params">(<span class="keyword">int</span> age)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.age = age;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>枚举的应用场景<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">枚举表示性别：</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> Sex &#123; </span><br><span class="line">    MAIL, FEMAIL; </span><br><span class="line">&#125;</span><br><span class="line">枚举表示方向:</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Orientation &#123; </span><br><span class="line">        UP, RIGHT, DOWN, LEFT; </span><br><span class="line">    &#125;</span><br><span class="line">枚举表示季度:</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Season &#123; </span><br><span class="line">        SPRING, SUMMER, AUTUMN, WINTER; </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-JDK8的其他新特性"><a href="#二-JDK8的其他新特性" class="headerlink" title="二.JDK8的其他新特性"></a>二.JDK8的其他新特性</h1><h4 id="2-1-方法引用"><a href="#2-1-方法引用" class="headerlink" title="2.1 方法引用"></a>2.1 方法引用</h4><ul><li><p>方法引用介绍<br>所谓方法引用，就是把已经存在的方法，直接拿过来使用。<br>当我们可以一个函数式接口赋值时，赋值该接口的实现类对象，也可以赋值该接口的匿名内部类对象，也可以赋值符合接口的Lambda表达式，也可以使用方法引用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bark</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Thread Dog Bark"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bark1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Thread Dog Bark_1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Method_References_Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.创建一个线程，使用实现的方法</span></span><br><span class="line">        <span class="comment">//a.使用接口的实现类对象，给Runnable接口类型赋值</span></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyRunnable()).start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//b.使用接口的匿名内部类对象，给Runnable赋值</span></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyRunnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Thread run..."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//C.使用lambda直接给Runnable接口类型赋值</span></span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; System.out.println(<span class="string">"Thread run..."</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把已经存在的方法直接引用过来</span></span><br><span class="line">        <span class="keyword">new</span> Thread(Dog::bark).start();<span class="comment">//通过类名引用静态方法</span></span><br><span class="line">        Dog  dd = <span class="keyword">new</span> Dog();</span><br><span class="line">        <span class="keyword">new</span> Thread(dd::bark1).start();<span class="comment">//通对象名引用成员方法</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyRunnable</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Thread run..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方法引用基本使用格式</p></li></ul><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>通过类名引用其中的静态方法</td><td>类名::静态方法</td></tr><tr><td>通过对象引用其中的普通方法</td><td>对象名::普通方法名</td></tr><tr><td>通过类名引用其构造方法</td><td>类名::new Person o = new Person();</td></tr><tr><td>通过数组引用其构造方法</td><td>数据类型[]::new int[] arr = new int[10];</td></tr></tbody></table><ul><li>基于System.out.println这个方法引用的代码演示<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SystemOutPrintlnDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List names = <span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">        Collections.addAll(names,<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>);</span><br><span class="line"></span><br><span class="line">        names.stream().forEach(<span class="keyword">new</span> Consumer() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">accept</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">                System.out.println(o);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        names.forEach(<span class="keyword">new</span> Consumer() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">accept</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">                System.out.println(o);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        names.forEach(o-&gt; System.out.println(o));</span><br><span class="line"></span><br><span class="line">        names.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-2-Base64"><a href="#2-2-Base64" class="headerlink" title="2.2 Base64"></a>2.2 Base64</h4><ul><li><p>什么是Base64<br>一种常见的编码方案</p></li><li><p>Base64内嵌类和方法</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Decoder和Encoder</span><br><span class="line">UrlDecoder和UrlEncoder</span><br><span class="line">MimeDecoder和MimeDecoder</span><br><span class="line"></span><br><span class="line"><span class="function">String <span class="title">encodeToString</span><span class="params">(<span class="keyword">byte</span>[] bs)</span></span>; <span class="comment">//编码  </span></span><br><span class="line"><span class="keyword">byte</span>[] decode(String str);<span class="comment">//解码</span></span><br></pre></td></tr></table></figure><ul><li>代码演示<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Base64Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//基于普通字符串的编码解码</span></span><br><span class="line">        String encodeToString = Base64.getEncoder().encodeToString(<span class="string">"HelloWorld"</span>.getBytes());</span><br><span class="line">        System.out.println(encodeToString);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bytes = Base64.getDecoder().decode(encodeToString);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(bytes));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//基于URL的编码解码</span></span><br><span class="line">        String encodeToString_Url = Base64.getEncoder().encodeToString(<span class="string">"www.Oracle.com/index.html"</span>.getBytes());</span><br><span class="line">        System.out.println(encodeToString_Url);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] Url_bytes = Base64.getDecoder().decode(encodeToString_Url);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(Url_bytes));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//MIME类型的编码器和解码器</span></span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            UUID uuid = UUID.randomUUID();</span><br><span class="line">            sb.append(uuid.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        String content = sb.toString();</span><br><span class="line">        String MIMEEncode = Base64.getMimeEncoder().encodeToString(content.getBytes());</span><br><span class="line">        System.out.println(MIMEEncode);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] MIMEDecode = Base64.getMimeDecoder().decode(MIMEEncode);</span><br><span class="line">        System.out.println(MIMEDecode);</span><br><span class="line"></span><br><span class="line">        String  MIMEEncode2 = Base64.getMimeEncoder(<span class="number">8</span>, <span class="string">"-"</span>.getBytes()).encodeToString(content.getBytes());</span><br><span class="line">        System.out.println(MIMEEncode2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] MIMEDecode2 = Base64.getMimeDecoder().decode(MIMEEncode);</span><br><span class="line">        System.out.println(MIMEDecode2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-正则表达式"><a href="#三-正则表达式" class="headerlink" title="三.正则表达式"></a>三.正则表达式</h1><h4 id="3-1-正则表达式的概念及演示"><a href="#3-1-正则表达式的概念及演示" class="headerlink" title="3.1 正则表达式的概念及演示"></a>3.1 正则表达式的概念及演示</h4><p>什么是正则：正则是一个字符串，但是里面的内容表示某种规则(规则是有具体语法含义)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Non_RegularExpression</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Input Number"</span>);</span><br><span class="line">        String scanner = <span class="keyword">new</span> Scanner(System.in).next();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (scanner.length() &lt; <span class="number">5</span> || scanner.length() &gt; <span class="number">15</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Illegal Number"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; scanner.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> ch = scanner.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"Illegal Number"</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (scanner.charAt(<span class="number">0</span>) == <span class="string">'0'</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Illegal Number"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Legal"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestRegularExpression</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Input Number"</span>);</span><br><span class="line">        String scanner = <span class="keyword">new</span> Scanner(System.in).next();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> matches = scanner.matches(<span class="string">"[1-9]\\d&#123;4,14&#125;"</span>);</span><br><span class="line">        System.out.println(matches);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-正则表达式-字符类"><a href="#3-2-正则表达式-字符类" class="headerlink" title="3.2 正则表达式 - 字符类"></a>3.2 正则表达式 - 字符类</h4><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>[abc]</td><td>代表a或者b，或者c字符中的一个。</td></tr><tr><td>[^abc]</td><td>代表除a,b,c以外的任何字符。</td></tr><tr><td>[a-z]</td><td>代表a-z的所有小写字符中的一个。</td></tr><tr><td>[A-Z]</td><td>代表A-Z的所有大写字符中的一个。</td></tr><tr><td>[0-9]</td><td>代表0-9之间的某一个数字字符。</td></tr><tr><td>[a-zA-Z0-9]</td><td>代表a-z或者A-Z或者0-9之间的任意一个字符。</td></tr><tr><td>[a-dm-p]</td><td>a 到 d 或 m 到 p之间的任意一个字符。</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str = <span class="string">"aad"</span>;</span><br><span class="line">        <span class="comment">//1.验证str是否以h开头，以d结尾，中间是a,e,i,o,u中某个字符</span></span><br><span class="line">        System.out.println(<span class="string">"1."</span> + str.matches(<span class="string">"h[aeiou]d"</span>));</span><br><span class="line">        <span class="comment">//2.验证str是否以h开头，以d结尾，中间不是a,e,i,o,u中的某个字符</span></span><br><span class="line">        System.out.println(<span class="string">"2."</span> + str.matches(<span class="string">"h[^aeiou]d"</span>));</span><br><span class="line">        <span class="comment">//3.验证str是否a-z的任何一个小写字符开头，后跟ad</span></span><br><span class="line">        System.out.println(<span class="string">"3."</span> + str.matches(<span class="string">"[a-z]ad"</span>));</span><br><span class="line">        <span class="comment">//4.验证str是否以a-d或者m-p之间某个字符开头，后跟ad</span></span><br><span class="line">        System.out.println(<span class="string">"4."</span> + str.matches(<span class="string">"[a-dm-p]ad"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-正则表达式-逻辑运算符"><a href="#3-3-正则表达式-逻辑运算符" class="headerlink" title="3.3 正则表达式 - 逻辑运算符"></a>3.3 正则表达式 - 逻辑运算符</h4><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>与</td></tr><tr><td>&#124;</td><td>非</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 正则表达式逻辑运算符类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str = <span class="string">"bad"</span>;</span><br><span class="line">        <span class="comment">//1.要求字符串是否是除a、e、i、o、u外的其它小写字符开头，后跟ad</span></span><br><span class="line">        System.out.println(<span class="string">"1."</span> + str.matches(<span class="string">"[a-z&amp;&amp;[^aeiou]]ad"</span>));</span><br><span class="line">        <span class="comment">//2.要求字符串是aeiou中的某个字符开头，后跟ad</span></span><br><span class="line">        System.out.println(<span class="string">"2."</span> + str.matches(<span class="string">"[a|e|i|o|u]ad"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-4-正则表达式-预定义字符"><a href="#3-4-正则表达式-预定义字符" class="headerlink" title="3.4 正则表达式 - 预定义字符"></a>3.4 正则表达式 - 预定义字符</h4><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>.</td><td>匹配任何字符。</td></tr><tr><td>\d</td><td>任何数字[0-9]的简写;</td></tr><tr><td>\D</td><td>任何非数字[^0-9]的简写;</td></tr><tr><td>\s</td><td>空白字符:[ \t\n\x0B\f\r] 的简写</td></tr><tr><td>\S</td><td>非空白字符:[^\s] 的简写</td></tr><tr><td>\w</td><td>单词字符:[a-zA-Z_0-9]的简写</td></tr><tr><td>\w</td><td>非单词字符:[^\w]</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 正则表达式-预定义字符</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str = <span class="string">"had."</span>;</span><br><span class="line">        <span class="comment">//1.验证str是否3位数</span></span><br><span class="line">        System.out.println(<span class="string">"1."</span> + str.matches(<span class="string">"\\d\\d\\d"</span>));</span><br><span class="line">        <span class="comment">//2.验证手机号：1开头，第二位：3/5/8，剩下9位都是0-9的数字</span></span><br><span class="line">        System.out.println(<span class="string">"2."</span> + str.matches(<span class="string">"1[3|5|8]\\d\\d\\d\\d\\d\\d\\d\\d\\d"</span>));</span><br><span class="line">        <span class="comment">//3.验证字符串是否以h开头，以d结尾，中间是任何字符 str = "had";//要验证的字符串</span></span><br><span class="line">        System.out.println(<span class="string">"3."</span> + str.matches(<span class="string">"h.d"</span>));</span><br><span class="line">        <span class="comment">//4.验证str是否是：had.</span></span><br><span class="line">        System.out.println(<span class="string">"4."</span> + str.matches(<span class="string">"had\\."</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-5-正则表达式-数量词"><a href="#3-5-正则表达式-数量词" class="headerlink" title="3.5 正则表达式 - 数量词"></a>3.5 正则表达式 - 数量词</h4><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>X?</td><td>0次或1次</td></tr><tr><td>X*</td><td>0次到多次</td></tr><tr><td>X+</td><td>1次或多次</td></tr><tr><td>X{n}</td><td>恰好n次</td></tr><tr><td>X{n,}</td><td>至少n次</td></tr><tr><td>X{n,m}</td><td>n到m次(n和m都是包含的)</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo05</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str = <span class="string">"234"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.验证str是否是三位数字</span></span><br><span class="line">        System.out.println(<span class="string">"1."</span>+str.matches(<span class="string">"\\d&#123;3&#125;"</span>));</span><br><span class="line">        <span class="comment">//2.验证str是否是多位数字</span></span><br><span class="line">        System.out.println(<span class="string">"2."</span>+str.matches(<span class="string">"\\d&#123;2,&#125;"</span>));</span><br><span class="line">        <span class="comment">//3.验证str是否是手机号:</span></span><br><span class="line">        System.out.println(<span class="string">"3."</span>+str.matches(<span class="string">"1[3|6|8]\\d&#123;9&#125;"</span>));</span><br><span class="line">        <span class="comment">//4.验证小数:必须出现小数点，但是只能出现1次</span></span><br><span class="line">        System.out.println(<span class="string">"4."</span>+str.matches(<span class="string">"\\d+\\.\\d+"</span>));</span><br><span class="line">        <span class="comment">//5.验证小数:小数点可以不出现，也可以出现1次</span></span><br><span class="line">        System.out.println(<span class="string">"5."</span>+str.matches(<span class="string">"\\d+\\.?\\d+"</span>));</span><br><span class="line">        <span class="comment">//6.验证小数:要求匹配:3、3.、3.14、+3.14、-3.</span></span><br><span class="line">        System.out.println(<span class="string">"6."</span>+str.matches(<span class="string">"[+-]\\d+\\d?\\d*"</span>));</span><br><span class="line">        <span class="comment">//7.验证qq号码:</span></span><br><span class="line">        <span class="comment">// 1).5--15位;</span></span><br><span class="line">        <span class="comment">// 2).全部是数字;</span></span><br><span class="line">        <span class="comment">// 3).第一位不是0</span></span><br><span class="line">        System.out.println(<span class="string">"7."</span>+str.matches(<span class="string">"[1-9]\\d&#123;4,14&#125;"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-6-正则表达式-分组括号"><a href="#3-6-正则表达式-分组括号" class="headerlink" title="3.6 正则表达式 - 分组括号()"></a>3.6 正则表达式 - 分组括号()</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo06</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str = <span class="string">"DG8FV-B9TKY-FRT9J-99899-XPQ4G"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//验证这个序列号:分为5组，每组之间使用-隔开，每组由5位A-Z或者0-9的字符组成</span></span><br><span class="line">        System.out.println(str.matches(<span class="string">"([A-Z0-9]&#123;5&#125;-)&#123;4&#125;[A-Z0-9]&#123;5&#125;"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-7-String的split方法"><a href="#3-7-String的split方法" class="headerlink" title="3.7 String的split方法"></a>3.7 String的split方法</h4><p> public String[] split(String regex)//用regex正则表达式的符号作为”分隔符”来切割字符串。</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo07</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str = <span class="string">"18 4 567 99 56"</span>;</span><br><span class="line"></span><br><span class="line">        String[] split = str.split(<span class="string">" +"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String num:split</span><br><span class="line">             ) &#123;</span><br><span class="line">            System.out.println(num);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-8-String类的replaceAll方法"><a href="#3-8-String类的replaceAll方法" class="headerlink" title="3.8 String类的replaceAll方法"></a>3.8 String类的replaceAll方法</h4><p>public String replaceAll(String regex,String newStr)//将当前字符串的旧串替换为新串，其他旧串可以使用正则匹配</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo08</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//将下面字符串中的"数字"替换为"*"</span></span><br><span class="line">        String str = <span class="string">"jfdk432jfdk2jk24354j47jk5l31324"</span>;</span><br><span class="line">        System.out.println(str.replaceAll(<span class="string">"\\d"</span>, <span class="string">"*"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将所有相邻数字只替换成一个*</span></span><br><span class="line">        System.out.println(str.replaceAll(<span class="string">"\\d+"</span>, <span class="string">"*"</span>));</span><br><span class="line"></span><br><span class="line">        String newstr = <span class="string">"jjjjjjjjjfddddddk43222222222jfddddddddddkkkkkkkkkk2jk24354j47jk5l31324"</span>;</span><br><span class="line">        System.out.println(newstr.replaceAll( <span class="string">"(.)\\1+"</span> ,   <span class="string">"$1"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>定义枚举</p><p>定义：<br>public enum 枚举名{<br>    //枚举项<br>    枚举项1,枚举项2,枚举项3;<br>}</p><p>枚举名 变量名 = 枚举名.枚举项1;</p><p>方法的引用<br>集合对象.foreach(System.out::println)</p><p>Base64对基本数据，URL和MIME类型进行编码<br>  public String encodeToString(byte[] bs); //编码<br>  public byte[] decode(String str);//解码</p><p>正则表达式作用：”匹配”字符串</p><p>正则表达式对字符类<br>[abc] [^abc] [a-z] [A-Z] [0-9] [a-zA-Z0-9] [a-dm-p] </p><p>正则表达式的逻辑运算符类<br>&amp;&amp; |</p><p>正则表达式的预定义字符类<br>. \d \D \s \S \w \W</p><p>正则表达式的分组<br>(…){2}</p><p>String的split方法中使用正则表达式</p><p>String的replaceAll方法中使用正则表达式</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（二十三）</title>
      <link href="/2020/03/31/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E4%B8%89%EF%BC%89/"/>
      <url>/2020/03/31/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>单例设计模式</li><li>多例设计模式</li><li>动态代理</li><li>工厂模式设计</li><li>Lombok<a id="more"></a></li></ul><p>一.单例设计模式<br>1.1 单例设计模式介绍<br>a.在正常情况下，一个类可以创建多个对象<br>b.单例设计模式的作用介绍让某个类只能有一个对象</p><p>1.2 单例设计模式实现步骤<br>a.构造方法私有化(不让别人直接new对象)<br>b.在该类内部产生一个唯一的实例化对象,并且使用private static修饰(让别人无法直接访问)<br>c.提供一个public static的静态方法,该方法返回此静态对象(只能通过调用该方法调用对象)</p><p>1.3 单例设计模式的类型</p><ul><li><p>懒汉式:<br>不立即创建本类的对象,当别人调用静态方法获取本类对象时，才创建</p></li><li><p>饿汉式:<br>先创建对象，当别人调用静态方法时，直接返回对象即可</p></li></ul><p>1.4 饿汉单例设计模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单例模式中的饿汉式</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1.私有化构造</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Dog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.自定义一个对象</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Dog dd = <span class="keyword">new</span> Dog();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3提供一个静态方法，获取dd对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Dog <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dd;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleInstanceDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取Dog对象</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            Dog dog = Dog.getInstance();</span><br><span class="line">            System.out.println(dog);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：<br>com.itheima.Demo01_SingleInstance.Dog@61bbe9ba<br>com.itheima.Demo01_SingleInstance.Dog@61bbe9ba<br>com.itheima.Demo01_SingleInstance.Dog@61bbe9ba<br>com.itheima.Demo01_SingleInstance.Dog@61bbe9ba<br>com.itheima.Demo01_SingleInstance.Dog@61bbe9ba</p><p>1.5 懒汉单例设计模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单例模式中的懒汉式</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cat</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1.私有化构造</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Cat</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.自定义一个对象</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Cat cc=<span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3提供一个静态方法，多线程</span></span><br><span class="line">    <span class="comment">//多线程情况下需要使用synchronized保证该方法的原子性</span></span><br><span class="line">    <span class="comment">//如果不加，可能会出现如下:</span></span><br><span class="line">    <span class="comment">//线程1进来，被线程2抢走</span></span><br><span class="line">    <span class="comment">//线程2进来，不能保证原子性</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span>  <span class="keyword">static</span> Cat <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(cc == <span class="keyword">null</span>)&#123;</span><br><span class="line">            cc=<span class="keyword">new</span> Cat();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cc;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCat</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            Cat cc = Cat.getInstance();</span><br><span class="line">            System.out.println(cc);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输出：</span><br><span class="line">com.itheima.Demo02_Single_Instance_Sloth.Cat@<span class="number">61</span>bbe9ba</span><br><span class="line">com.itheima.Demo02_Single_Instance_Sloth.Cat@<span class="number">61</span>bbe9ba</span><br><span class="line">com.itheima.Demo02_Single_Instance_Sloth.Cat@<span class="number">61</span>bbe9ba</span><br><span class="line">com.itheima.Demo02_Single_Instance_Sloth.Cat@<span class="number">61</span>bbe9ba</span><br><span class="line">com.itheima.Demo02_Single_Instance_Sloth.Cat@<span class="number">61</span>bbe9ba</span><br></pre></td></tr></table></figure><p>二. 多例设计模式<br>2.1 多例设计模式多介绍<br>多例设计模式保证我们的类具有指定个数的对象</p><p>2.2 多例设计模式多实现步骤<br>a.私有化构造(不让别人直接new对象)<br>b.在该类内部产生一个private static修饰的集合(让别人无法直接访问)，用于保存自己创建的对象<br>c.使用静态代码块向集合中添加指定个数的对象<br>d.提供一个public static的静态方法,该方法返回此静态对象(只能通过调用该方法调用对象)</p><p>2.3 多例设计模式多代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//要求pig类使用多例设计模式</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Pig</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1.定义一个变量，指定集合中对象的个数,常量建议大写</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> COUNT = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.私有化构造</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Pig</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.创建一个集合</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ArrayList&lt;Pig&gt; list = <span class="keyword">new</span> ArrayList&lt;Pig&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.使用静态代码块</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">//添加指定个数的对象</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; COUNT; i++) &#123;</span><br><span class="line">            list.add(<span class="keyword">new</span> Pig());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.提供一个静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Pig <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.get(<span class="keyword">new</span> Random().nextInt(COUNT));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPig</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.获取Pig对象</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            Pig p1 = Pig.getInstance();</span><br><span class="line">            System.out.println(p1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">输出：</span><br><span class="line">com.itheima.Demo03_MultiInstance.Pig@<span class="number">511</span>d50c0</span><br><span class="line">com.itheima.Demo03_MultiInstance.Pig@<span class="number">511</span>d50c0</span><br><span class="line">com.itheima.Demo03_MultiInstance.Pig@<span class="number">511</span>d50c0</span><br><span class="line">com.itheima.Demo03_MultiInstance.Pig@<span class="number">511</span>d50c0</span><br><span class="line">com.itheima.Demo03_MultiInstance.Pig@<span class="number">511</span>d50c0</span><br><span class="line"></span><br><span class="line">com.itheima.Demo03_MultiInstance.Pig@<span class="number">5e2</span>de80c</span><br><span class="line">com.itheima.Demo03_MultiInstance.Pig@<span class="number">5e2</span>de80c</span><br><span class="line"></span><br><span class="line">com.itheima.Demo03_MultiInstance.Pig@<span class="number">610455</span>d6</span><br><span class="line">com.itheima.Demo03_MultiInstance.Pig@<span class="number">610455</span>d6</span><br><span class="line"></span><br><span class="line">com.itheima.Demo03_MultiInstance.Pig@<span class="number">60e53</span>b93</span><br></pre></td></tr></table></figure><p>三.动态代理<br>3.1 动态代理的介绍</p><ul><li><p>什么是代理<br>被代理者没有能力或不愿意完成某件事，寻求一个可以完成此事的对象，这个对象就是代理</p></li><li><p>生活中的代理</p></li><li><p>代码中的代理案例<br>a.用户登录到我们的系统后，我们的系统会为其产生一个ArrayList集合对象，内部存储了一些用户信息<br>b.对象需要被传给后面的很多其它对象，但要求其它对象不能对这个ArrayList对象执行添加、删除、修改操作，只能 get()获取元素<br>c.分析：无法控制用户如何操作集合，可以给这个集合找一个代理，判断他的操作，如果是增删改相关，直接抛出异常。如果是获取相关，找到真正的被代理集合，获取数据。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要求代理对象和被代理有一样的方法</span></span><br><span class="line"><span class="comment">// 代理对象中应该保存被代理对象</span></span><br><span class="line"><span class="comment">/* 代理对象中的方法：</span></span><br><span class="line"><span class="comment">   增删改，直接抛出异常</span></span><br><span class="line"><span class="comment">   获取，调用被代理对象的方法</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.Demo04_Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.function.UnaryOperator;</span><br><span class="line"></span><br><span class="line"><span class="comment">//此类就是普通ArrayList的代理</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.让代理对象实现被代理对象一样的接口，目的是让代理对象和被代理对象具有一样的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayListProxy</span> <span class="keyword">implements</span> <span class="title">List</span>&lt;<span class="title">String</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">//2.要在代理对象中保存一个被代理对象</span></span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;String&gt; list;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayListProxy</span><span class="params">(ArrayList&lt;String&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.下面的一堆方法中，如果是不修改集合数据的方法，就调用List的方法</span></span><br><span class="line">    <span class="comment">//如果是修改集合的方法，直接抛出异常</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.contains(o);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">replaceAll</span><span class="params">(UnaryOperator&lt;String&gt; operator)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用replaceAll方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Iterator&lt;String&gt; <span class="title">iterator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用iterator方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object[] toArray() &#123;</span><br><span class="line">        <span class="keyword">return</span> list.toArray();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; T[] toArray(T[] a) &#123;</span><br><span class="line">        <span class="keyword">return</span> list.toArray(a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用add方法"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">remove</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用remove方法"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">containsAll</span><span class="params">(Collection&lt;?&gt; c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addAll</span><span class="params">(Collection&lt;? extends String&gt; c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用addAll方法"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addAll</span><span class="params">(<span class="keyword">int</span> index, Collection&lt;? extends String&gt; c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用addAll方法"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">removeAll</span><span class="params">(Collection&lt;?&gt; c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用removeAll方法"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">retainAll</span><span class="params">(Collection&lt;?&gt; c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用retainAll方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用clear方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.get(index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">set</span><span class="params">(<span class="keyword">int</span> index, String element)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用set方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, String element)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用add方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用remove方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">indexOf</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.indexOf(o);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lastIndexOf</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.lastIndexOf(o);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListIterator&lt;String&gt; <span class="title">listIterator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用listIterator方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListIterator&lt;String&gt; <span class="title">listIterator</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用listIterator方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">subList</span><span class="params">(<span class="keyword">int</span> fromIndex, <span class="keyword">int</span> toIndex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.subList(fromIndex, toIndex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Comparator&lt;? <span class="keyword">super</span> String&gt; c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用sort(Comparator&lt;? super String&gt;方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Spliterator&lt;String&gt; <span class="title">spliterator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"不允许调用spliterator方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestProxy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; arr = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Collections.addAll(arr, <span class="string">"a"</span>, <span class="string">"18"</span>, <span class="string">"sz"</span>, <span class="string">"10000"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把集合arr先交给代理对象</span></span><br><span class="line">        List&lt;String&gt; list = getArrayListProxy(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//操作</span></span><br><span class="line">        list.add(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;String &gt; getArrayListProxy(ArrayList&lt;String &gt; arr)&#123;</span><br><span class="line">        <span class="comment">//创建一个ArrayList代理</span></span><br><span class="line">        ArrayListProxy arrayListProxy = <span class="keyword">new</span> ArrayListProxy(arr);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arrayListProxy;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.2 动态代理概述<br>动态代理和静态代理区别在于释放已经写好，上面案例就是静态代理，代理类ArrayListProxy已经编译时期定义好了<br>而动态代理，它的代理在运行时期通过代码动态生成。</p><p>动态代理作用：拦截对真实对象(被代理对象)方法对直接访问，增强/减弱 真实对象(被代理对象)方法对功能进行 增强/减弱</p><p>3.3 案例引出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dynamic_Proxy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; arr = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">        Collections.addAll(arr, <span class="string">"a"</span>, <span class="string">"18"</span>, <span class="string">"sz"</span>, <span class="string">"10000"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用arr这个集合，生成一个它的代理</span></span><br><span class="line">        List&lt;String&gt; list = Collections.unmodifiableList(arr);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        unmodifiableList该方法返回的是arr的代理对象，类似于我们自己的ArraylistProxy对象</span></span><br><span class="line"><span class="comment">        但是unmodifiableList生产的代理对象，是通过动态方式在运行时期创建出来</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用方法</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            list.remove(<span class="number">1</span>);</span><br><span class="line">            list.set(<span class="number">1</span>, <span class="string">"a"</span>);</span><br><span class="line">            list.add(<span class="string">"a"</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            list.get(<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.4 重点类方法<br>•java.lang.reflect.Proxy类:<br>这是 Java 动态代理机制的主类，它提供了一个静态方法来为一组接口的实现类动态地生 成代理类及其对象。</p><p>public static Object newProxyInstance(ClassLoader loader, Class[] interfaces, InvocationHandler h))</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>ClassLoader loader</td><td>类加载器，一般使用和被代理对象一样的类加载器</td></tr><tr><td>Class[] interfaces</td><td>被代理对象实现的所有接口的字节码数组文件</td></tr><tr><td>InvocationHandler h</td><td>处理类对象,用于拦截我们调用的所有方法，判断到底是否返回被代理对象的真实方法</td></tr></tbody></table><p>•InvocationHandler接口的invoke方法及参数详解</p><p>InvocationHandler处理类，实际上它是一个接口<br>//invoke方法就是用于拦截我们调用的真实方法<br>public Object invoke(Object proxy, Method method, Object[] args);</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>Object proxy</td><td>代理对象</td></tr><tr><td>Method method</td><td>被拦截的方法</td></tr><tr><td>Object[] args</td><td>被拦截的方法参数，如果没有就是Null</td></tr></tbody></table><p>3.5 动态代理综合案例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dynamic_Proxy_InAction</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; arr = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">        Collections.addAll(arr, <span class="string">"a"</span>, <span class="string">"18"</span>, <span class="string">"sz"</span>, <span class="string">"10000"</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; list = unmodifiableList(arr);</span><br><span class="line"></span><br><span class="line">        System.out.println(list.get(<span class="number">1</span>));</span><br><span class="line"><span class="comment">//        System.out.println(list.add("1"));方法不允许</span></span><br><span class="line"></span><br><span class="line">        System.out.println(list.indexOf(<span class="string">"18"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">unmodifiableList</span><span class="params">(List&lt;String&gt; arr)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        Proxy.newProxyInstance(arr.getClass().getClassLoader(),arr.getClass().getInterfaces(),);</span></span><br><span class="line">        List&lt;String&gt; list = (List&lt;String&gt;) Proxy.newProxyInstance(Dynamic_Proxy_InAction<span class="class">.<span class="keyword">class</span>.<span class="title">getClassLoader</span>(),</span></span><br><span class="line"><span class="class">                <span class="title">arr</span>.<span class="title">getClass</span>().<span class="title">getInterfaces</span>(), <span class="title">new</span> <span class="title">InvocationHandler</span>() </span>&#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="comment">//该方法就是用来拦截真实对象的方法</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line"><span class="comment">//                        System.out.println(method.getName());</span></span><br><span class="line"><span class="comment">//                        return null;</span></span><br><span class="line">                        <span class="comment">//获取方法名</span></span><br><span class="line">                        String name = method.getName();</span><br><span class="line">                        <span class="comment">//假设需要拦截ADD,SET,REMOVE的方法</span></span><br><span class="line">                        <span class="keyword">if</span> (name.startsWith(<span class="string">"add"</span>) || name.startsWith(<span class="string">"set"</span>) || name.startsWith(<span class="string">"remove"</span>)) &#123;</span><br><span class="line">                            <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"方法不允许"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        Object result = method.invoke(arr, args);</span><br><span class="line">                        <span class="keyword">return</span> result;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.6 动态代理的优缺点总结</p><table><thead><tr><th></th><th align="left">总结</th></tr></thead><tbody><tr><td>优点</td><td align="left">a.可以为任意接口实现类对象做动态代理(机制是由Java的反射技术生成的)<br>b.极大提高了开发效率<br>c.不改变被代理对象的代码</td></tr><tr><td>缺点</td><td align="left">java的Proxy创建动态代理必须有接口，没有接口不行</td></tr></tbody></table><p>可以通过调用第三方CGL iB对无接口的的对象进行动态代理</p><p>四.Lombok<br>4.1 下载Lombok<br><a href="https://projectlombok.org/downloads/lombok.jar">https://projectlombok.org/downloads/lombok.jar</a></p><p>4.2 安装Lombok<br>项目下建立lib文件夹，将lombok.jar拖入，并在IDE中查找Lombok插件安装并重启</p><p>4.3 Lombok常用注解</p><ul><li><p>@Getter和@Setter<br>•作用:生成成员变量的get和set方法。<br>•写在成员变量上，指对当前成员变量有效。<br>•写在类上，对所有成员变量有效。<br>•注意:静态成员变量无效。</p></li><li><p>@ToString:<br>•作用:生成toString()方法。<br>•该注解只能写在类上。</p></li><li><p>@NoArgsConstructor和@AllArgsConstructor<br>•@NoArgsConstructor:无参数构造方法。<br>•@AllArgsConstructor:满参数构造方法。<br>•注解只能写在类上。</p></li><li><p>@EqualsAndHashCode<br>•作用:生成hashCode()和equals()方法。<br>•注解只能写在类上。</p></li><li><p>@Data<br>•作用: 生成setter/getter、equals、canEqual、hashCode、toString方法，如为final属性，则不会为 该属性生成setter方法。<br>•注解只能写在类上。</p></li></ul><p>五.工厂设计模式<br>5.1 工厂模式概述<br>之前创建对象，都是new对象<br>而工厂模式，将创建对象的过程交给工厂执行，只需要从工厂中获取对象即可。</p><p>5.2 工厂模式作用<br>解决类与类之间的耦合问题</p><p>5.3 工厂模式实现步骤<br>a.提供一个所有类的父类/接口，例：提供一个Car接口<br>b.各种实现类都需要实现该接口，重写该接口中的方法<br>c.提供一个返回不同实现类对象的工厂</p><p>5.4 工厂模式实现代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Benz_Car</span> <span class="keyword">implements</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Benz Run"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BMW_Car</span> <span class="keyword">implements</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"BMW RUN"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VW_Car</span> <span class="keyword">implements</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"volk swagen run"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//汽车工厂</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Car_Factory</span> </span>&#123;</span><br><span class="line">    <span class="comment">//定义方法，用于产汽车</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Car <span class="title">getACar</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//返回一个真正的汽车对象</span></span><br><span class="line">        <span class="keyword">if</span> (id == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> VW_Car();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (id == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Benz_Car();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(id == <span class="number">3</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> BMW_Car();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchIdCarException();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCar</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        Benz_Car bz = new Benz_Car();</span></span><br><span class="line"><span class="comment">//        bz.run();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        BMW_Car bmw = new BMW_Car();</span></span><br><span class="line"><span class="comment">//        bmw.run();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        VW_Car vw = new VW_Car();</span></span><br><span class="line"><span class="comment">//        vw.run();</span></span><br><span class="line"></span><br><span class="line">        Car aCar = Car_Factory.getACar(<span class="number">1</span>);</span><br><span class="line">        aCar.run();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>补充：可以使用配置文件，来替代具体代码中的ID值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Car.properties</span></span><br><span class="line">id = <span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCar</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//从配置文件读取id</span></span><br><span class="line">        Properties ps = <span class="keyword">new</span> Properties();</span><br><span class="line">        ps.load(<span class="keyword">new</span> FileInputStream(<span class="string">"Day23/Car.properties"</span>));</span><br><span class="line"></span><br><span class="line">        String id = ps.getProperty(<span class="string">"id"</span>);</span><br><span class="line">        <span class="keyword">int</span> ID = Integer.parseInt(id);</span><br><span class="line"></span><br><span class="line">        Car aCar = Car_Factory.getACar(ID);</span><br><span class="line">        aCar.run();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：<br>单例设计模式的好处<br>可以让一个类只有一个对象：<br>饿汉式：直接在类内部定义本类对象并创建对象<br>懒汉式：在类内部定义本类对象，在getInstance方法中判断再创建对象</p><p>多例模式好处：<br>可以让一个类只有指定个数的对象<br>在类内部创建一个集合，用来保存多个本类的对象<br>一般来说都使用静态代码块向集合中添加固定个数的对象</p><p>动态代理模式作用：<br>在程序运行期间，为一个被代理对象动态创建一个代理对象<br>当调用代理对象的方法时，都会被拦截，拦截之后可以进行判断</p><p>使用Proxy的方法生成代理对象<br>Proxy.newProxyInstance(ClassLoader class,Class[ interfaces,InvocationHandler handler])</p><p>InvocationHandler接口<br>//invoke方法就是用于拦截的<br>//Method被调用的方法<br>//Object[] 被调用方法时的参数<br>public Object invoke(Object proxy, Method method, Object[] args);</p><p>在此方法中会自动判断，<br>如果满足条件，则正常调用：method.invoke(被代理对象,args)<br>如果不满足条件，则不调用，可以返回异常，也可以什么都不做</p><p>使用工厂模式编写程序</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（二十二）</title>
      <link href="/2020/03/30/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E4%BA%8C%EF%BC%89/"/>
      <url>/2020/03/30/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>XML<br>•语法全部由标签组成<br>•约束</li><li>XML的解析<br>•第三方开发包DOM4j</li></ul><a id="more"></a><p>一.XML概述<br>1.1 XML初识</p><ul><li>XML介绍以及版本<br>XML是可扩展标记语言(Extensible Markup Language)</li></ul><p>语言：XML也是一种语言<br>标记：是指标签(Tag)/元素(Element),&lt;标签名&gt;/&lt;标签名&gt;<br>可扩展：标签可以随意定义</p><p>XML版本：<br>XML 1.0(使用)<br>XML 1.1(不使用)</p><ul><li><p>XML与HTML的主要差异<br>a.XML主要是用于传输和保存数据(目前更倾向于保存,传输用Json)<br>b.HTML是用来显示数据</p></li><li><p>XML入门小案例<br>•需求<br>编写XML文档,保存人员信息,Person人员,SID编号,AGE年龄,Name姓名,Gender性别<br>•编写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Person</span> <span class="attr">sid</span> = <span class="string">"001"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">AGE</span>&gt;</span>20<span class="tag">&lt;/<span class="name">AGE</span>&gt;</span>&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>JSW<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Gender</span>&gt;</span>Male<span class="tag">&lt;/<span class="name">Gender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br></pre></td></tr></table></figure><p>•运行<br>使用浏览器打开XML即可</p></li><li><p>XML的作用<br>a.XML可以存储数据(也可以传输数据,但目前已用Json传输)<br>b.XML也可以作为配置文件(给框架使用的)</p></li></ul><p>1.2 XML的语法学习</p><ul><li>XML的组成元素<br>•文档声明<br>什么是文档声明：表面这就是一个XML文件<br>文档声明必须写在XML文件的0行0列(左上角)<br>固定格式:<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br></pre></td></tr></table></figure>•元素element<br>格式：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Element</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">other</span>&gt;</span>Tag Body<span class="tag">&lt;<span class="name">other</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Element</span>&gt;</span>&gt;</span><br><span class="line">或</span><br><span class="line"><span class="tag">&lt;<span class="name">Element</span>/&gt;</span>自闭合标签,不写任何内容使用此标签</span><br></pre></td></tr></table></figure></li></ul><p>命名要求:<br>a.区分大小写<br>b.不能使用空格、冒号等特殊字符<br>c.不建议 以XML,xml,Xml开头</p><p>注意：一个格式良好的XML文档,有且仅有一个根标签</p><p>•属性attribute<br>a.属性是元素的一部分,必须写在元素的开始标签<br>b.格式：属性名 = “属性值”,其中属性值必须使用单引号或双引号<br>c.一个元素可以有0-N个属性,但是不能有同名属性,也一样不能使用特殊字符</p><p>•注释</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- --&gt;</span></span><br></pre></td></tr></table></figure><p>•转义字符</p><table><thead><tr><th>字符</th><th align="center">预定义的转义字符</th><th align="right">说明</th></tr></thead><tbody><tr><td>&lt;</td><td align="center">&amp;lt;</td><td align="right">小于</td></tr><tr><td>&gt;</td><td align="center">&amp;gt;</td><td align="right">大于</td></tr><tr><td>“</td><td align="center">&amp;quot;</td><td align="right">双引号</td></tr><tr><td>‘</td><td align="center">&amp;apos;</td><td align="right">单引号</td></tr><tr><td>&amp;</td><td align="center">&amp;amp;</td><td align="right">和号</td></tr></tbody></table><p>•字符区<br>当出现大量需要转义的字符时,不建议逐一转义,会增加复杂度且降低可读性<br>使用CDATA区中写所有字符,会自动转义</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;![CDATA[</span><br><span class="line">可以使用任何内容</span><br><span class="line">]]&gt;</span><br></pre></td></tr></table></figure><p>二.XML约束<br>概述：就是编写XML文件的标签的规则</p><p>2.1 DTD约束</p><ul><li><p>什么是DTD约束<br>文档类型定义约束,规定我们在编写XML时具体的标签,子标签,属性等</p></li><li><p>DTD约束体验<br>a.bookshelf.dtd 这就是DTD约束文件<br>b.创建一个book.xml<br>c.在XML中引入dtd约束<br>d.根据IDE提示,编写出符合DTD约束的XML文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ELEMENT 书架 (书+)&gt;</span></span><br><span class="line">        <span class="meta">&lt;!ELEMENT 书 (书名,作者,售价)&gt;</span><span class="comment">&lt;!--约束元素书的子元素必须为书名、作者、售价--&gt;</span></span><br><span class="line">        <span class="meta">&lt;!ELEMENT 书名 (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span><br><span class="line">        <span class="meta">&lt;!ELEMENT 作者 (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span><br><span class="line">        <span class="meta">&lt;!ELEMENT 售价 (<span class="meta-keyword">#PCDATA</span>)&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE 书架 <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"bookshelf.dtd"</span>&gt;</span><span class="comment">&lt;!--指定使用bookshelf.dtd文件约束当前xml文档--&gt;</span> <span class="tag">&lt;<span class="name">书架</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">书</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">书名</span>&gt;</span>JavaWeb开发教程<span class="tag">&lt;/<span class="name">书名</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">作者</span>&gt;</span>张孝祥<span class="tag">&lt;/<span class="name">作者</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">售价</span>&gt;</span>100.00元<span class="tag">&lt;/<span class="name">售价</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">书</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">书</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">书名</span>&gt;</span>三国演义<span class="tag">&lt;/<span class="name">书名</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">作者</span>&gt;</span>罗贯中<span class="tag">&lt;/<span class="name">作者</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">售价</span>&gt;</span>100.00元<span class="tag">&lt;/<span class="name">售价</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;测试&gt;hello&lt;/测试&gt;    不符合约束,书的子元素必须为书名、作者、售价--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">书</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">书架</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>注意:开发中基本不会写DTD文件,而是由框架提供,根据DTD编写符合要求的XML文件</p><ul><li>DTD约束语法<br>•DTD的引入<br>a.内部DTD(把DTD直接写在XML中,这种方式只能对当前XML有效)<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE 根元素 [...//具体语法]&gt;</span><span class="comment">&lt;!--内部DTD--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">根元素</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">根元素</span>&gt;</span></span><br></pre></td></tr></table></figure>b.外部DTD – 本地DTD<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE 根元素 <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"bookshelf.dtd"</span>&gt;</span><span class="comment">&lt;!--外部本地DTD--&gt;</span> <span class="tag">&lt;<span class="name">根元素</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">根元素</span>&gt;</span></span><br></pre></td></tr></table></figure>c.外部DTD – 公共DTD<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"</span> <span class="meta-string">"http://java.sun.com/dtd/web-app_2_3.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>•DTD中的数量词</p><table><thead><tr><th>数量词符号</th><th align="center">含义</th></tr></thead><tbody><tr><td>*</td><td align="center">表示元素可以出现0到多个</td></tr><tr><td>+</td><td align="center">表示元素可以出现至少1个</td></tr><tr><td>？</td><td align="center">表示元素可以是0或1个</td></tr><tr><td>,</td><td align="center">表示元素需要按照顺序显示</td></tr><tr><td>&#124;</td><td align="center">表示元素需要选择其中的某一个</td></tr></tbody></table><p>•其他语法</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ATTLIST 标签名称</span></span><br><span class="line"><span class="meta">属性名称1 属性类型1 属性说明1</span></span><br><span class="line"><span class="meta">属性名称2 属性类型2 属性说明2</span></span><br><span class="line"><span class="meta">...</span></span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure><p>属性类型：</p><table><thead><tr><th>属性类型：</th><th align="center">含义</th></tr></thead><tbody><tr><td>CDATA</td><td align="center">代表属性是文本字符串, eg:</td></tr><tr><td>ID</td><td align="center">代码该属性值唯一,不能以数字开头, eg:</td></tr><tr><td>ENUMERATED</td><td align="center">代表属性值在指定范围内进行枚举 Eg:</td></tr></tbody></table><p>属性说明：</p><table><thead><tr><th>属性说明</th><th align="center">含义</th></tr></thead><tbody><tr><td>#REQUIRED</td><td align="center">代表属性是必须有的</td></tr><tr><td>#IMPLIED</td><td align="center">代表属性可有可无</td></tr><tr><td>#FIXED</td><td align="center">代表属性为固定值,实现方式:book_info CDATA #FIXED “固定值”</td></tr></tbody></table><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!ATTLIST 书                        &lt;!--设置<span class="meta-string">"书"</span>元素的的属性列表--&gt;</span> </span><br><span class="line">id ID #REQUIRED                     <span class="comment">&lt;!--"id"属性值为必须有--&gt;</span> </span><br><span class="line">编号 CDATA #IMPLIED                  <span class="comment">&lt;!--"编号"属性可有可无--&gt;</span></span><br><span class="line">出版社 (清华|北大|传智播客) "传智播客"   <span class="comment">&lt;!--"出版社"属性值是枚举值,默认为“传智播客”--&gt;</span> </span><br><span class="line">type CDATA #FIXED "IT"              <span class="comment">&lt;!--"type"属性为文本字符串并且固定值为"IT"--&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>2.2 Schema约束</p><ul><li><p>什么是Schema约束<br>也是用于约束XML文件的,是DTD的代替者,添加了 <b>数据类型</b> 的约束<br>本身也是XML,后缀名是.xsd</p></li><li><p>Schema的约束体验<br>a.bookshelf.xsd 就是Schema的约束文档<br>b.创建自己的XML文件,把Schema中需要复制的内容复制进去,其实Schema中复制过来是根标签的开始标签,需要补充完整标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;书架 xmlns="http://www.Oracle.cn"</span></span><br><span class="line"><span class="comment">xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.Oracle.cn bookshelf.xsd"</span></span><br><span class="line"><span class="comment">&gt; --&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>bookshelf.xsd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span> <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;书架 xmlns="http://www.Oracle.cn"</span></span><br><span class="line"><span class="comment">xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.Oracle.cn bookshelf.xsd"</span></span><br><span class="line"><span class="comment">&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xs:schema</span> <span class="attr">xmlns:xs</span>=<span class="string">"http://www.w3.org/2001/XMLSchema"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">targetNamespace</span>=<span class="string">"http://www.Oracle.cn"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">elementFormDefault</span>=<span class="string">"qualified"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">'书架'</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xs:sequence</span> <span class="attr">maxOccurs</span>=<span class="string">'unbounded'</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">'书'</span> &gt;</span> <span class="tag">&lt;<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">'书名'</span> <span class="attr">type</span>=<span class="string">'xs:string'</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">'作者'</span> <span class="attr">type</span>=<span class="string">'xs:string'</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">xs:element</span> <span class="attr">name</span>=<span class="string">'售价'</span> <span class="attr">type</span>=<span class="string">'xs:double'</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xs:sequence</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xs:complexType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xs:element</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xs:schema</span>&gt;</span></span><br></pre></td></tr></table></figure><p>c.根据提示完成自己的XML</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">书架</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns</span>=<span class="string">"http://www.oracle.cn"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.oracle.cn bookshelf.xsd"</span> &gt;</span><span class="comment">&lt;!--指定schema文档约束当前XML文档--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">书</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">书名</span>&gt;</span>JavaScript网页开发<span class="tag">&lt;/<span class="name">书名</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">作者</span>&gt;</span>张孝祥<span class="tag">&lt;/<span class="name">作者</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">售价</span>&gt;</span>1<span class="tag">&lt;/<span class="name">售价</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">书</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">书架</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Scheme语法和命名空间</li></ul><p>作用就是处理元素和属性的名称冲突问题,与Java中的包类似,不同命名空间可能有相同的标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xmlns="http://www.oracle.cn"</span><br><span class="line"><span class="comment">&lt;!-- 缺省的名称空间.使用此约束中的元素的时候只需要写元素名即可 例如:&lt;书&gt;&lt;/书&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">xmlns:aa="http://java.sun.com"</span><br><span class="line"><span class="comment">&lt;!-- aa就是此约束的别名,使用此约束中的元素的时候就需要加上别名 例如:&lt;aa:书&gt;&lt;/aa:书&gt; --&gt;</span></span><br></pre></td></tr></table></figure><p>引用了两个命名空间,<br>如果直接写&lt;书&gt; 表示<a href="http://www.oracle.cn">http://www.oracle.cn</a> 命名空间下的书<br>如果写<a href="aa:书">aa:书</a> 表示<a href="http://java.sun.com">http://java.sun.com</a> 命名空间下的书</p><p>2.3 XML约束的学习要求:<br>重点是根据框架提供的DTD/Scheme约束,编写出符合要求的XML文档</p><p>三.XML解析<br>3.1 什么是XML解析<br>通过代码将XML文件中保存的数据读取出来</p><p>3.2 解析方式和解析器和解析开发包<br>a.解析方式(思想)<br>•DOM解析：把整个XML加载到内存,进行解析,解析后产生一个Document对象<br>优点：元素之前结构得以保留,文档结构完整,可以通过Document对象对标签进行增删改查操作<br>缺点：如果XML文件过大,可能导致内存溢出</p><p>•SAX解析：扫描XML文档,扫描一行解析一行,解析完毕后释放该行资源<br>优点：速度快,可以处理大文件<br>缺点：只能读,逐行读取后释放资源,解析操作繁琐</p><p>•PULL解析：是安卓系统内置的XML解析方式,类似SAX</p><p>b.解析器：根据解析方式,写出对应的解析代码(代码需要考虑解析过程中的每个标签,非常繁琐)</p><p>c.解析开发包：对解析器繁琐API的封装,提供简单方便的API</p><p>常见的解析开发包：<br>•JAXP:sun公司提供支持DOM和SAX开发包<br>•Dom4j:比较简单的的解析开发包(常用)<br>•JDom:与Dom4j类似<br>•Jsoup:功能强大DOM方式的XML解析开发包,尤其对HTML解析更加方便</p><p>3.3 Dom4j的基本使用</p><ul><li><p>DOM的解析原理<br>将整个XML稳定加载到内存，进行解析，解析之后生成一个Document对象(道理的DOM树)</p></li><li><p>DOM树的结构模型</p></li></ul><p><img src='https://g.gravizo.com/svg? digraph G {   Document  [shape=box]   Book1  [shape=box]   Book2  [shape=box]   Price1  [shape=box]   Author1  [shape=box]   Price2  [shape=box]   Author2  [shape=box]   A  [shape=box]   100  [shape=box]   B  [shape=box]   200  [shape=box]   Document -> Book1;   Document -> Book2;   Book1 -> Author1;   Author1 -> A;   Price1 -> 100;   Book1 -> Price1;   Book2 -> Author2;   Book2 -> Price2;   Author2 -> B;   Price2 ->200; }'/></p><ul><li>DOM4j的jar包和常用API<br>在模块下创建一个lib文件夹(必须叫lib),然后把dom4j-1.6.1.jar包放入lib中(Day22/lib/dom4j-1.6.1.jar)<br>将lib下的jar包添加到模块中：<br>a.选中右键 –&gt; add as library<br>b.点击File –&gt; Project Structure –&gt; 先在Library添加jar包 –&gt; 然后在Moudle加入即可</li></ul><p>SAXReader对象</p><table><thead><tr><th>核心类</th><th align="center">作用</th></tr></thead><tbody><tr><td>new SAXReader()</td><td align="center">构造器</td></tr><tr><td>Document read(File file)</td><td align="center">加载执行xml文档</td></tr></tbody></table><p>Document对象</p><table><thead><tr><th>方法</th><th align="center">作用</th></tr></thead><tbody><tr><td>Element getRootElement()</td><td align="center">获得根元素</td></tr></tbody></table><p>Element对象</p><table><thead><tr><th>方法</th><th align="center">作用</th></tr></thead><tbody><tr><td>List elements([String ele] )</td><td align="center">获得指定名称的所有子元素。可以不指定名称</td></tr><tr><td>Element element([String ele])</td><td align="center">获得指定名称第一个子元素。可以不指定名称</td></tr><tr><td>String getName()</td><td align="center">获得当前元素的元素名</td></tr><tr><td>String attributeValue(String attrName)</td><td align="center">获得指定属性名的属性值</td></tr><tr><td>String elementText(Sting ele)</td><td align="center">获得指定名称子元素的文本值</td></tr><tr><td>String getText()</td><td align="center">获得当前元素的文本内容</td></tr></tbody></table><ul><li><p>DOM4j的代码演示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DOM4JDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> DocumentException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建核心对象</span></span><br><span class="line">        SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">        <span class="comment">//2.读取xml文件</span></span><br><span class="line">        Document document = reader.read(<span class="keyword">new</span> File(<span class="string">"books.xml"</span>));</span><br><span class="line">        <span class="comment">//3.获取根标签</span></span><br><span class="line">        Element rootElement = document.getRootElement();</span><br><span class="line">        System.out.println(<span class="string">"根标签是:"</span>+rootElement.getName());</span><br><span class="line">        <span class="comment">//4.获取book标签</span></span><br><span class="line">        List&lt;Element&gt; bookElements = rootElement.elements();</span><br><span class="line">        <span class="comment">//5.遍历集合</span></span><br><span class="line">        <span class="keyword">for</span> (Element bookElement : bookElements) &#123;</span><br><span class="line">            <span class="comment">//6.获取标签名</span></span><br><span class="line">            String bookElementName = bookElement.getName();</span><br><span class="line">            System.out.println(<span class="string">"子标签:"</span>+bookElementName);</span><br><span class="line">            <span class="comment">//7.获取id属性值</span></span><br><span class="line">            String idValue = bookElement.attributeValue(<span class="string">"id"</span>);</span><br><span class="line">            System.out.println(<span class="string">"属性id:"</span>+idValue);</span><br><span class="line">            <span class="comment">//8.继续获取子标签</span></span><br><span class="line">            List&lt;Element&gt; elements = bookElement.elements();</span><br><span class="line">            <span class="comment">//9.遍历</span></span><br><span class="line">            <span class="keyword">for</span> (Element element : elements) &#123;</span><br><span class="line">                <span class="comment">//10.获取标签名</span></span><br><span class="line">                System.out.println(element.getName());</span><br><span class="line">                <span class="comment">//11.获取文本</span></span><br><span class="line">                System.out.println(element.getText());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>3.4 Dom4j结合XPath解析XML</p><ul><li><p>什么是XPath<br>XML的路径表达式，可以快速从N层标签中选出需要的标签</p></li><li><p>Xpath使用步骤<br>在模块下创建一个lib文件夹(必须叫lib),然后把jaxen-1.1.2.jar包放入lib中(Day22/lib/jaxen-1.1.2.jar)<br>将lib下的jar包添加到模块中：<br>a.选中右键 –&gt; add as library<br>b.点击File –&gt; Project Structure –&gt; 先在Library添加jar包 –&gt; 然后在Moudle加入即可</p></li></ul><p>和XPath相关的API介绍：<br>List </p><table><thead><tr><th>方法</th><th align="center">作用</th></tr></thead><tbody><tr><td>List selectNodes(“表达式”)</td><td align="center">获取符合表达式的元素集合</td></tr><tr><td>Element selectSingleNode(“表达式”)</td><td align="center">获取符合表达式的唯一元素</td></tr></tbody></table><ul><li>XPath语法<br>获取XML文档节点元素一共有如下4种XPath语法方式:</li></ul><ol><li>绝对路径表达式方式 例如: /元素/子元素/子子元素…</li><li>相对路径表达式方式 例如: 子元素/子子元素.. 或者 ./子元素/子子元素.. </li><li>全文搜索路径表达式方式 例如: //子元素//子子元素</li><li>谓语(条件筛选)方式 例如: //元素[@attr1=value]</li></ol><ul><li>演示<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XPathDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> DocumentException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建核心对象</span></span><br><span class="line">        SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">        <span class="comment">//2.读取xml文件</span></span><br><span class="line">        Document document = reader.read(<span class="keyword">new</span> File(<span class="string">"books.xml"</span>));</span><br><span class="line">        <span class="comment">//3.使用Xpath</span></span><br><span class="line">        <span class="comment">//全文搜索路径表达式</span></span><br><span class="line">        List&lt;Element&gt; list = document.selectNodes(<span class="string">"//sale"</span>);</span><br><span class="line">        <span class="keyword">for</span> (Element element : list) &#123;</span><br><span class="line">            System.out.println(element.getText());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//谓语表达式</span></span><br><span class="line">        Element ele = (Element) document.selectSingleNode(<span class="string">"//book[@id='0001']/sale"</span>);</span><br><span class="line">        System.out.println(ele.getText());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.XML的语法</span><br><span class="line">    文档声明(固定)</span><br><span class="line">    标签语法(正常写即可,不用特意去背)</span><br><span class="line">    属性语法(属性名=<span class="string">"属性值"</span>)</span><br><span class="line">    注释 &lt;!--  注释 --&gt;</span><br><span class="line">    转译字符 &amp;lt; &amp;gt;</span><br><span class="line"><span class="number">2</span>.约束</span><br><span class="line">    DTD约束</span><br><span class="line">    Schema约束</span><br><span class="line">    重点是 引入约束之后根据IDEA提示,编写符合规则的XML即可</span><br><span class="line"><span class="number">3</span>.XML解析</span><br><span class="line">    DOM4J解析开发包</span><br><span class="line">    a.核心类 SaxReader的read方法</span><br><span class="line">    b.各种剥洋葱:</span><br><span class="line">getRootElement();</span><br><span class="line">elements([String name]);</span><br><span class="line">element([String name]);</span><br><span class="line"></span><br><span class="line">getName();</span><br><span class="line">getText();</span><br><span class="line">atrributeValue(String attrName);</span><br><span class="line">elementText(String name);</span><br><span class="line">c.配合XPath</span><br><span class="line">            document.selectNodes(<span class="string">"Xpath表示"</span>);</span><br><span class="line">document.selectSingleNode(<span class="string">"XPath表达式"</span>)</span><br><span class="line">            XPath表达式的写法不是重点</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（二十一）</title>
      <link href="/2020/03/28/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E4%B8%80%EF%BC%89/"/>
      <url>/2020/03/28/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>反射</li><li>注解<a id="more"></a></li></ul><p>一.反射<br>1.1 类加载器</p><ul><li><strong>类的加载</strong><br>当程序要使用某个类时,如果该类还未被加载到内存中,则系统会通过类的加载,类的连接,类的初始化这三个步骤对类进行初始化。如果不出意外,JVM将会连续完成这三个步骤,使用有时也把这三个步骤统称为类加载或类初始化。</li></ul><p>类的加载：<br>•就是将class文件读入内存,并为之创建一个java.lang.Class对象(字节码文件对象,在Heap区)<br>•任何类被使用时,系统都会为之建立一个java.lang.Class对象<br>类的连接：<br>•验证阶段：用于检验被加载的类是否有正确的内部结构,并合其他类协调一致<br>•准备阶段：负责为类变量分配内存,并社长默认初始化值<br>•解析阶段：将类的二进制数据中的符合引用替换为直接引用<br>类的初始化：<br>•在该阶段,主要就是对类变量进行初始化</p><p>类的初始化时机：<br>•假如类还未被加载和连接,则程序先加载并连接该类<br>•假如该类的父类还未被初始化,则先初始化其直接父类<br>•假如类中有初始化语句,则系统依次执行这些初始化语句<br>注意：在执行第二个步骤时,系统对直接父类的初始化步骤也遵循初始化步骤1-3</p><ul><li><p>类的初始化时机<br>a.创建类的实例<br>b.调用类的静态变量,或为静态变量赋值<br>c.调用类的静态方法<br>d.初始化某个类的子类<br>e.直接使用java命令来运行某个主类<br>f.使用反射方式来强制创建某个类或接口对应的java.lang.Class对象</p></li><li><p>类加载器的作用和分类<br>类加载器将类加载到内存</p></li></ul><p>类加载器的作用：<br>•负责将.class文件加载到内存中,并为之生成对应的java.lang.Class对象</p><p>JVM类加载机制<br>•全盘负责：当一个类加载器负责加载某个Class时,该Clas所依赖的和引用的其他Class也将由该类加载器负责载入,除非显示使用另一个类加载器来载入<br>•父类委托：当一个类加载器负责加载某个Class时,先让父类加载器试图加载该Class,只有在父类加载器无法加载该类时才尝试从自己的类路径中加载该类<br>•缓存机制：保证所有加载过的Class都会被缓存,当程序需要使用某个Class对象时,类加载器先从缓存去中搜索该Class,只有当缓存区中不存在该Class对象时,系统才会读取该类对应的二进制数据,并将其转换成Class对象,存储到缓存区</p><p>类加载器有三种:<br>ClassLoader：是负责加载类的对象<br>•启动类加载器(Bootstrap ClassLoader):用于加载系统类库<JAVA_HOME>\bin目录下的class,例如: rt.jar。<br>•扩展类加载器(Extension ClassLoader):用于加载扩展类库<JAVA_HOME>\jre\lib\ext目录下的class。<br>•应用程序类加载器(Application ClassLoader):用于加载我们自定义类的加载器。</p><p>ClassLoader：中的两种方法<br>•static ClassLoader getSystemClassLoader();返回用于委派的系统类加载器<br>•ClassLoader getParent();返回父类加载器进行委派</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassLoaderDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ClassLoader  classLoader = String<span class="class">.<span class="keyword">class</span>.<span class="title">getClassLoader</span>()</span>;</span><br><span class="line">        System.out.println(classLoader);</span><br><span class="line"></span><br><span class="line">        ClassLoader classLoader1 = ClassLoaderDemo<span class="class">.<span class="keyword">class</span>.<span class="title">getClassLoader</span>()</span>;</span><br><span class="line">        System.out.println(classLoader1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>双亲委派机制<br>当某个类加载器需要加载一个类时,它并不是直接加载,而是把加载需求交给父级类加载器,最终请求会到达启动类加载器,启动类加载器会判断是否可以加载该类,如果加载不了,在交给扩展类加载器,扩展类加载器判断是否可以加载,如果加载不了,再交给程序类加载器</li></ul><p>双亲委派机制主要作用:就是让一个类只会被加载一次,确保一个类在内存中只有它一个。</p><p>1.2 什么是反射<br>是指在运行时去获取一个类的变量和方法信息。然后通过获取到的信息(字节码文件对象)来创建对象，调用方法的一种机制。由于这种方法的动态性，可以 极大增强程序的灵活性，程序不需要在编译时期将完成确定，在运行期仍能完成扩展</p><p>1.3 反射在实际开发中的应用<br>•开发IDE<br>•框架的设计与底层原理的学习</p><p>1.4 反射中万物皆对象的概念<br>一个类变异之后的字节码文件Class对象<br>Class对象中的成员变量:Field对象<br>Class对象中的成员方法:Method对象<br>Class对象中的构造方法:Constructor对象<br>创建对象–&gt;newInstance对象<br>调用/执行–&gt;invoke对象</p><p>反射语法与正常语法是反过来的,例如:<br>创建对象:<br>正常语法:new 构造方法(参数);<br>反射语法:构造方法对象.new Instance(参数);</p><p>调用方法:<br>正常语法:对象名.成员方法名(参数);<br>反射语法:成员方法对象.invoke(对象名,参数);</p><p>1.5 反射的第一步获取字节码文件对象(Class对象)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetClassDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">//获取一个类Class对象的三种方式</span></span><br><span class="line">        <span class="comment">//1.通过类的一个静态成员 class</span></span><br><span class="line">        Class clazz1 = Dog<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">        System.out.println(clazz1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.通过该类的一个对象,获取该类的Clazz对象</span></span><br><span class="line">        Dog dd = <span class="keyword">new</span> Dog();</span><br><span class="line">        Class clazz2 = dd.getClass();</span><br><span class="line">        System.out.println(clazz2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过反射强制加载该类,并获取该类的Class对象</span></span><br><span class="line">        Class clazz3 = Class.forName(<span class="string">"com.itheima.Demo02_GetClass.Dog"</span>);</span><br><span class="line">        System.out.println(clazz3);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*以上是三种获取Dog类Class对象的方式,并不是获取三个Class对象,实际上它们获取的是同一个Class对象*/</span></span><br><span class="line">        System.out.println(clazz1 == clazz2);</span><br><span class="line">        System.out.println(clazz2 == clazz3);</span><br><span class="line">        System.out.println(clazz1 == clazz3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.6 Class对象中的三个常用方法<br>public String getName();//获取全限定类名<br>public String getSimple();//获取类名<br>public Object getInstance();//创建Class对象所代表的那个类的对象,底层实际上使用的是该类的无参构造</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassMethodDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IllegalAccessException, InstantiationException </span>&#123;</span><br><span class="line">        Class clazz = Dog<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取全限定类名</span></span><br><span class="line">        String name = clazz.getName();</span><br><span class="line">        System.out.println(name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取类名</span></span><br><span class="line">        String simpleName = clazz.getSimpleName();</span><br><span class="line">        System.out.println(simpleName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建Class对象所代表的那个类的对象,底层实际上使用的是Dog的无参构造</span></span><br><span class="line">        Dog dog = (Dog) clazz.newInstance();</span><br><span class="line">        System.out.println(dog);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出:<br>com.itheima.Demo03_ClassMethod.Dog<br>Dog<br>Dog{name=’null’, legs=0}</p><p>1.7 通过反射获取构造方法 &amp;&amp; 使用构造方法创建对象</p><ul><li>反射获取构造方法</li></ul><p><strong>Constructor getConstructor(Class… parameterTypes); //获取单个pulic构造</strong><br><strong>Constructor getDeclaredConstructor(Class… parameterTypes); //获取单个”任意”修饰符构造</strong><br>Constructor[] getConstructors(); //获得类中的所有构造方法对象,获得public修饰符构造(返回数组)<br>Constructor[] getDeclaredConstructors();//获得类中的所有修饰符构造方法对象(返回数组)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetConstructorDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchMethodException </span>&#123;</span><br><span class="line"></span><br><span class="line">        Class clazz = Dog<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">        System.out.println(clazz);</span><br><span class="line"></span><br><span class="line">        Constructor con1 = clazz.getConstructor();</span><br><span class="line">        System.out.println(con1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取单个pulic构造</span></span><br><span class="line"><span class="comment">//        Constructor con2 = clazz.getConstructor(String.class, int.class);</span></span><br><span class="line"><span class="comment">//        System.out.println(con2);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取单个"任意"修饰符构造</span></span><br><span class="line">        Constructor deccon = clazz.getDeclaredConstructor(String<span class="class">.<span class="keyword">class</span>, <span class="title">int</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        System.out.println(deccon);</span><br><span class="line"></span><br><span class="line">        Constructor[] cons = clazz.getConstructors();</span><br><span class="line">        System.out.println(cons.length);</span><br><span class="line">        <span class="keyword">for</span> (Constructor con : cons) &#123;</span><br><span class="line">            System.out.println(con);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Constructor[] deccons = clazz.getDeclaredConstructors();</span><br><span class="line">        System.out.println(deccons.length);</span><br><span class="line">        <span class="keyword">for</span> (Constructor con : deccons) &#123;</span><br><span class="line">            System.out.println(con);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用构造方法创建对象<br>语法:<br>构造方法对象.newInstance(参数);</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    Class clazz = Dog<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">    System.out.println(clazz);</span><br><span class="line"></span><br><span class="line">    Constructor con1 = clazz.getConstructor();</span><br><span class="line">    System.out.println(con1);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用构造创建对象</span></span><br><span class="line">    Dog dog = (Dog) con1.newInstance();</span><br><span class="line">    System.out.println(dog);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果是私有构造怎么办<br>私有构造必须设置暴力权限,然后才能正常使用,否则会抛出IllegalAccessException异常</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    Class clazz = Dog<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">    System.out.println(clazz);</span><br><span class="line"></span><br><span class="line">    Constructor con1 = clazz.getConstructor();</span><br><span class="line">    System.out.println(con1);</span><br><span class="line"></span><br><span class="line">    Constructor con2 = clazz.getDeclaredConstructor(String<span class="class">.<span class="keyword">class</span>,<span class="title">int</span>.<span class="title">class</span>)</span>;</span><br><span class="line">    System.out.println(con2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用构造创建对象</span></span><br><span class="line">    Dog dog = (Dog) con1.newInstance();</span><br><span class="line">    System.out.println(dog);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//私有构造,不能直接使用,因为没有权限</span></span><br><span class="line">    <span class="comment">//设置暴力访问权限</span></span><br><span class="line">    con2.setAccessible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    Dog dog2 = (Dog) con2.newInstance(<span class="string">"a"</span>, <span class="number">1</span>);</span><br><span class="line">    System.out.println(dog2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.8 通过反射获取成员方法 &amp;&amp; 调用成员方法</p><ul><li>反射获取成员方法<br>public Method get Method(String name,Class…args);//获取public方法<br>public Method get getDeclaredMethod(String name,Class…args);//获取 任意修饰 方法<br>public Method[] get Methods();//获取所有的public成员,包括父类继承的<br>public Method[] get getDeclaredMethods();//获取所有任意修饰方法,不包含父类继承的</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetConstructorDemo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class clazz = Dog<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取单个public成员方法</span></span><br><span class="line">        Method eat = clazz.getMethod(<span class="string">"eat"</span>);</span><br><span class="line">        System.out.println(eat);</span><br><span class="line"></span><br><span class="line">        Method eat1 = clazz.getMethod(<span class="string">"eat"</span>, String<span class="class">.<span class="keyword">class</span>, <span class="title">String</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        System.out.println(eat1);</span><br><span class="line"></span><br><span class="line">        Method eat3 = clazz.getDeclaredMethod(<span class="string">"eat"</span>, String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(eat3);</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取所有的 public 成员方法,包含父类</span></span><br><span class="line">        Method[] methods = clazz.getMethods();</span><br><span class="line">        System.out.println(methods.length);</span><br><span class="line">        <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">            System.out.println(method);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取所有的 任意修饰 成员方法,但是不包含父类</span></span><br><span class="line">        Method[] decmethods = clazz.getDeclaredMethods();</span><br><span class="line">        System.out.println(decmethods.length);</span><br><span class="line">        <span class="keyword">for</span> (Method method : decmethods) &#123;</span><br><span class="line">            System.out.println(method);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>调用成员方法<br>语法格式:<br>成员方法对象.invoke(对象名,参数);</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetConstructorDemo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Dog dd = <span class="keyword">new</span> Dog();</span><br><span class="line">        Class clazz = dd.getClass();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取单个public成员方法</span></span><br><span class="line">        Method eat = clazz.getMethod(<span class="string">"eat"</span>);</span><br><span class="line">        System.out.println(eat);</span><br><span class="line"></span><br><span class="line">        Method eat1 = clazz.getMethod(<span class="string">"eat"</span>, String<span class="class">.<span class="keyword">class</span>, <span class="title">String</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        System.out.println(eat1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用成员方法</span></span><br><span class="line">        eat.invoke(dd);</span><br><span class="line"></span><br><span class="line">        eat1.invoke(dd,<span class="string">" a"</span>,<span class="string">" b"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果是私有成员方法怎么调用<br>私有成员方法必须设置暴力权限,然后才能正常使用,否则会抛出IllegalAccessException异常</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Dog dd = <span class="keyword">new</span> Dog();</span><br><span class="line">        Class clazz = dd.getClass();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取单个public成员方法</span></span><br><span class="line">        Method eat = clazz.geMethod(<span class="string">"eat"</span>);</span><br><span class="line">        System.out.println(eat);</span><br><span class="line"></span><br><span class="line">        Method eat1 = clazz.getMethod(<span class="string">"eat"</span>, String<span class="class">.<span class="keyword">class</span>, <span class="title">String</span>.<span class="title">class</span>)</span>;</span><br><span class="line">        System.out.println(eat1);</span><br><span class="line"></span><br><span class="line">        Method eat2 = clazz.getDeclaredMethod(<span class="string">"eat"</span>, String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(eat1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用成员方法</span></span><br><span class="line">        eat.invoke(dd);</span><br><span class="line"></span><br><span class="line">        eat1.invoke(dd,<span class="string">" a"</span>,<span class="string">" b"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置暴力访问权限,否则会抛出IllegalAccessException异常</span></span><br><span class="line">        eat2.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        eat2.invoke(dd,<span class="string">"a"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>1.9 通过反射获取成员属性</p><p>二.注解<br>2.1 什么是注解<br>•注解是JDK1.5的新特性<br>•注解是一种标记,是类的组成部分,可以给类携带一些额外的信息<br>•标记(注解)可以用在各种地方(包,类,构造方法,普通方法,成员变量,局部变量…)<br>•注解主要是给编译器或JVM看的,用于完成某些特定功能</p><p>2.2 注解的三个作用<br>a.给程序带入一些参数<br>b.编译检查<br>c.给框架使用,作为框架的配置文件</p><p>2.3 常见的注解介绍<br>@author:用于标识作者<br>@version:用于标识对象的版本号<br>@Override:用于标识该方法是重写的<br>@deprecated:用于标识过期的API<br>@Test:用于单元测试的注解</p><p>2.4 自定义注解<br>自定义类:public class 类名<br>自定义接口:public interface 接口<br>自定义枚举:public enum 枚举名<br>自定义注解:public @interface 注解名</p><p>格式:<br>public @interface 注解名{</p><p>}</p><p>2.5 给自定义注解添加属性<br>格式:<br>public @interface 注解名{<br>    //注解内部只有属性,没有别的<br>    数据类型 属性名();<br>    数据类型 属性名()[default 默认值];<br>}</p><p>注解中并不是所有数据类型都可以的<br>只能是以下三大类型:<br>a.八大基本类型(byte,short,char,int,long,float,double,boolean)<br>b.引用类型(String,Class,注解类型,枚举类型)<br>c.以上12种具体类型的一维数组</p><p>2.6 自定义注解练习<br>创建时选中Annocation</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Book &#123;</span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">Price</span><span class="params">()</span> <span class="keyword">default</span> 100</span>;</span><br><span class="line"></span><br><span class="line">    String[] atuhors();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.7 使用注解时的注意事项<br>使用格式:<br>@注解名(属性名=属性值,属性名=属性值)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Book</span>(value = <span class="string">"A"</span>, Price = <span class="number">150.0</span>, authors =&#123;<span class="string">"a"</span>,<span class="string">"b"</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Book</span>(value = <span class="string">"B"</span>, Price = <span class="number">160.0</span>, authors =&#123;<span class="string">"c"</span>,<span class="string">"d"</span>&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Book</span>(value = <span class="string">"C"</span>, Price = <span class="number">170.0</span>, authors =<span class="string">"e"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestDemo</span><span class="params">(<span class="keyword">int</span> age, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        String name = <span class="string">"a"</span>;</span><br><span class="line">        System.out.println(age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:<br>a.使用注解时的每个属性都必须有值(有默认值可以不再赋值,没有默认值的必须赋值)<br>b.如果是数组,需要使用{}把值包起来,如果数组的值只有一个,那么{}可以省略</p><p>2.8 <strong>自定义注解中的特殊属性名value</strong><br>a.如果注解中只有一个属性,并且名字叫做value,那么使用时可以直接写属性的值,省略属性名<br>b.如果注解中有value之外的其他属性,那么其他属性都有默认值,且使用注解时只给value赋值,那么也可以直接写属性的值,省略属性名</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Book &#123;</span><br><span class="line">    <span class="comment">//特殊属性value</span></span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">Price</span><span class="params">()</span> <span class="keyword">default</span> 100.0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Book</span>(<span class="string">"a"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestDemo</span><span class="params">(<span class="keyword">int</span> age, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        String name = <span class="string">"a"</span>;</span><br><span class="line">        System.out.println(age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.9 注解的注解–元注解<br>Java官方提供的注解,用来修饰或定义注解的注解</p><ul><li>两个元注解<br>@Target 元注解<br>作用:用来标识注解的使用位置,如果没有标识,那么注解在各种地方都可以使用<br>取值:<br>可以使用ElementType枚举类中的值,常用如下:<br>TYPE,类,接口<br>FIELD, 成员变量<br>METHOD, 成员方法<br>PARAMETER, 方法参数<br>CONSTRUCTOR, 构造方法<br>LOCAL_VARIABLE, 局部变量</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用元注解来修饰定义的注解</span></span><br><span class="line"><span class="meta">@Target</span>(ElementType.LOCAL_VARIABLE)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyAnno &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestDemo</span><span class="params">(<span class="keyword">int</span> age, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//使用定义的注解</span></span><br><span class="line">        <span class="meta">@MyAnno</span></span><br><span class="line">        String name = <span class="string">"a"</span>;</span><br><span class="line">        System.out.println(age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@Retention 元注解<br>作用:用来标识注解的声明周期(有效范围)<br>取值:<br>可以使用RetentionPolicy枚举类中的值,常用如下:</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>SOURCE</td><td>只作用在源码阶段,编译生成的字节码文件后消失</td></tr><tr><td>CLASS</td><td>在源码阶段、编程成字节码文件阶段存在,运行阶段不存在</td></tr><tr><td>RUNTIME</td><td>在源码阶段,字节码文件阶段,运行阶段都存在</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.CLASS)</span><br><span class="line"><span class="meta">@Target</span>(ElementType.LOCAL_VARIABLE)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyAnno &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.10 注解的解析</p><ul><li><p>什么是注解解析<br>提供代码获取出来某个注解中的属性值</p></li><li><p>注解解析的步骤<br>a.获取注解所在类的Class对象<br>b.获取注解所在的对象(可能Field,Method,Constructor)<br>c.判断获取的对象中是否有该注解存在<br>d.如果有要的注解,取出注解即可<br>e.从注解中取出属性值即可</p></li></ul><p>与之相关的API:<br>Annotation:注解类,Java中所有定义的注解的父类<br>AnnotatedElement:该接口定义了与注解解析相关的方法<br>Field,Method,Constructor,Class等类都是实现了AnnotatedElement接口</p><p><strong>public boolean isAnnotationPresent(Class annotationClass);//判断是否存在某个注解</strong><br><strong>Annotion getAnnotation(Class annotationClass);//获取指定类型的注解</strong><br>Annotation[] getAnnotations();//获取所有注解,包含父类继承的<br>Annotation[] getDeclaredAnnotations()//获取所有注解,只包含本类的</p><ul><li>注解解析的代码实现<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Student &#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Age</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">Name</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    String[] bys();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestStudent</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Student</span>(Age = <span class="number">1</span>, Name = <span class="string">"a"</span>, bys = <span class="string">"c"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class clazz = TestStudent<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">        Method showMethod = clazz.getMethod(<span class="string">"show"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (showMethod.isAnnotationPresent(Student<span class="class">.<span class="keyword">class</span>)) </span>&#123;</span><br><span class="line">            Student anno = showMethod.getAnnotation(Student<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            <span class="keyword">int</span> age = anno.Age();</span><br><span class="line">            String name = anno.Name();</span><br><span class="line">            String[] bys = anno.bys();</span><br><span class="line"></span><br><span class="line">            System.out.println(age+<span class="string">" "</span>+name+<span class="string">" "</span>+bys.toString());</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"Y"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"N"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>2.11 注解解析案例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MyTest &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@MyTest</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"a"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@MyTest</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"b"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class clazz = Demo<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line"></span><br><span class="line">        Method[] methods = clazz.getMethods();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">            <span class="keyword">if</span> (method.isAnnotationPresent(MyTest<span class="class">.<span class="keyword">class</span>)) </span>&#123;</span><br><span class="line">                method.invoke(<span class="keyword">new</span> Demo());</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"N Annotation"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结:<br>反射技术获取Class字节码对象<br>Class clazz = 类名.class;<br>Class clazz = 对象名.getClass();<br>Class clazz = Class.forName(“包名”,”类名”);</p><p>通过反射技术怄气构造方法对象,并创建对象<br>获取构造:<br>public Constructor getConstructor(参数的类型.class,…)//获取单个 public 构造<br>public Constructor getDeclareConstructor(参数的类型.class,…)//获取单个 任意修饰 构造<br>public Constructor[] getConstructors()//获取所有个 public 构造<br>public Constructor[] getDeclareConstructors()//获取所有 任意修饰 构造<br>使用构造:<br>构造方法对象.newInstance(实际参数);<br>如果是私有构造:<br>必须在使用之前设置暴力权限-&gt;构造方法对象.getAccessable(true);</p><p>反射获取成员方法对象,并调用方法<br>public Method getMethod(String name,参数的类型.class,…)//获取单个 public 方法<br>public Method getDeclareMethod(String name,参数的类型.class,…)//获取单个 任意修饰 方法<br>public Method[] getMethods()//获取所有个 public 方法,包括父类继承的<br>public Method[] getDeclareMethods()//获取所有 任意修饰 方法,不包含父类的</p><p>使用方法:<br>成员方法对象.invoke(对象名,方法的实际参数);<br>如果是私有方法:<br>必须在使用之前设置暴力权限-&gt;成员方法对象.getAccessable(true);</p><p>通过反射获取属性对象,并能够给对象的属性赋值和取值</p><p>注解的作用:<br>a.给程序带入参数<br>b.编译检查<br>c.给框架做配置文件</p><p>自定义注解和使用注解:<br>自定义注解:<br>public @interface 注解名{<br>数据类型 属性名();<br>数据类型 属性名() default 默认值;<br>数据类型[] 属性名() default {默认值1,默认值2,…};</p><p>}<br>数据类型限定:<br>a.八大基本类型(byte,short,char,int,long,float,double,boolean)<br>b.引用类型(String,Class,注解类型,枚举类型)<br>c.以上12种具体类型的一维数组</p><p>特殊属性:<br>value<br>a.如果注解中只有一个属性,并且名字叫做value,那么使用时可以直接写属性的值,省略属性名<br>b.如果注解中有value之外的其他属性,那么其他属性都有默认值,且使用注解时只给value赋值,那么也可以直接写属性的值,省略属性名</p><p>元注解及其作用:<br>@Target<br>@Retension</p><p>解析注解并获取注解中的数据<br>写代码把某个注解上的那些属性值打印出来</p><ul><li>注解解析的步骤<br>a.获取注解所在类的Class对象<br>b.获取注解所在的对象(可能Field,Method,Constructor)<br>c.判断获取的对象中是否有该注解存在<br>d.如果有要的注解,取出注解即可<br>e.从注解中取出属性值即可</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记(二十)</title>
      <link href="/2020/03/27/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%EF%BC%89/"/>
      <url>/2020/03/27/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%E5%8D%81%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>NIO的Buffer,Channel,Selector(选择器,多路复用器)</li><li>AIO是异步非阻塞IO<a id="more"></a></li></ul><p>一.Selector(选择器,多路复用器)<br>1.1 多路复用的概念<br>多路:多个服务器分别去监听多个端口</p><p>如果不使用”多路复用”,每个服务器都需要开许多线程处理每个端口的请求,如果在高并发下,会造成系统性能下降。<br>如果使用”多路复用”,可以把多个服务器注册到一个Selector,只需要开启一个线程即可处理服务器(在高并发下性能较高)</p><p>1.2 选择器Selector</p><ul><li><p>什么是Selector<br>Selector也称为选择器,也叫多路复用器,可以让多个Channel注册到Selector上,然后监听各个Channel上发生的事件</p></li><li><p>Selector创建API<br>创建Selector的方式:<br>Selector selector = Selector.open();</p></li></ul><p>将要交给选择器管理的通道注册到选择器:<br>Channel.configureBlocking(false);//channel是一个通道,并且必须是非阻塞通道<br>SelectionKey key = channel.register(selector,SelectionKey.OP_ACCEPT);</p><p>参数1:该通道注册到的选择器<br>参数2:选择器对何种事件感兴趣(服务器通道只能写SelectionKey.OP_ACCEPT,表示有客户端连接)<br>返回值:SelectionKey 是一个对象,该对象中包含了注册到选择器的通道</p><p>可以监听4中不同类型的事件,使用SelectionKey常量表示:<br>连接就绪–常量:SelectionKey.OP_CONNECT<br>接收就绪–常量:SelectionKey.OP_ACCEPT(ServerSocketChannel在注册时只能使用此项)<br>读就绪–常量:SelectionKey.OP_READ<br>写就绪–常量:SelectionKey.OP_WRITE</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectorDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//多个服务器,每个监听多个端口</span></span><br><span class="line">        ServerSocketChannel server1 = ServerSocketChannel.open();</span><br><span class="line">        server1.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">        server1.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line"></span><br><span class="line">        ServerSocketChannel server2 = ServerSocketChannel.open();</span><br><span class="line">        server2.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">        server2.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">9999</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取Selector</span></span><br><span class="line">        Selector selector = Selector.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将多个Server注册到同一个Selector</span></span><br><span class="line">        server1.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line">        server2.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.3 Selector中的常用方法</p><ul><li>Channel注册Selector的API</li></ul><p>•获取所有已经成功注册到当前选择器的通道集合<br>public Set<SelectionKey> keys();</p><p>•表示所有已有客户端连接的通道的集合<br>public Set<SelectionKey> selectedKeys();</p><p>•如果目前没有客户端连接,该方法会阻塞。如果有客户端连接会返回<strong>本次</strong>连接的客户端数量<br>public int select();</p><ul><li>代码演示</li></ul><p>1.4 Selector实现多路连接(上)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocketChannelSelector_Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> (SocketChannel socket = SocketChannel.open()) &#123;</span><br><span class="line">                socket.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> (SocketChannel socket = SocketChannel.open()) &#123;</span><br><span class="line">                socket.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"127.0.0.1"</span>, <span class="number">9999</span>));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSelector_SelectionKey</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//多个服务器,每个监听多个端口</span></span><br><span class="line">        ServerSocketChannel server1 = ServerSocketChannel.open();</span><br><span class="line">        server1.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">        server1.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line"></span><br><span class="line">        ServerSocketChannel server2 = ServerSocketChannel.open();</span><br><span class="line">        server2.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">        server2.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">9999</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取Selector</span></span><br><span class="line">        Selector selector = Selector.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将多个Server注册到同一个Selector</span></span><br><span class="line">        server1.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line">        server2.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收客户端连接</span></span><br><span class="line">        Set&lt;SelectionKey&gt; keys = selector.keys();</span><br><span class="line">        System.out.println(keys.size());</span><br><span class="line"></span><br><span class="line">        Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys();</span><br><span class="line">        System.out.println(selectionKeys.size());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> selectedCount = selector.select();</span><br><span class="line">        System.out.println(selectedCount);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.5 Selector实现多路连接(下)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocketChannelSelector_Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> (SocketChannel socket = SocketChannel.open()) &#123;</span><br><span class="line">                socket.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> (SocketChannel socket = SocketChannel.open()) &#123;</span><br><span class="line">                socket.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"127.0.0.1"</span>, <span class="number">9999</span>));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSelector_SelectionKey</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">//多个服务器,每个监听多个端口</span></span><br><span class="line">        ServerSocketChannel server1 = ServerSocketChannel.open();</span><br><span class="line">        server1.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">        server1.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line"></span><br><span class="line">        ServerSocketChannel server2 = ServerSocketChannel.open();</span><br><span class="line">        server2.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">        server2.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">9999</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取Selector</span></span><br><span class="line">        Selector selector = Selector.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将多个Server注册到同一个Selector</span></span><br><span class="line">        server1.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line">        server2.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收客户端连接</span></span><br><span class="line">        Set&lt;SelectionKey&gt; keys = selector.keys();</span><br><span class="line">        System.out.println(keys.size());</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys();</span><br><span class="line">            System.out.println(selectionKeys.size());</span><br><span class="line"></span><br><span class="line">            <span class="comment">//此方法会阻塞</span></span><br><span class="line">            <span class="keyword">int</span> selectedCount = selector.select();</span><br><span class="line">            System.out.println(selectedCount);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//遍历已连接通道到集合</span></span><br><span class="line">            Iterator&lt;SelectionKey&gt; it = selectionKeys.iterator();</span><br><span class="line">            <span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">                <span class="comment">//获取当前通道</span></span><br><span class="line">                SelectionKey key = it.next();</span><br><span class="line">                <span class="comment">//从SelectionKey中获取通道对象</span></span><br><span class="line">                ServerSocketChannel channel = (ServerSocketChannel) key.channel();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//查看此通道是监听哪个端口</span></span><br><span class="line">                System.out.println(channel.getLocalAddress());</span><br><span class="line"></span><br><span class="line">                <span class="comment">//取出连接到该服务器客户端到客户端通道</span></span><br><span class="line">                SocketChannel accept = channel.accept();</span><br><span class="line">                System.out.println(accept);</span><br><span class="line">                <span class="comment">//从连接到通道中把已经处理过到服务器通道移除</span></span><br><span class="line">                it.remove();</span><br><span class="line">            &#125;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span> * <span class="number">5</span>);</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.6 Selecto多路信息接收测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSelector_SelectionKey</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">//多个服务器,每个监听多个端口</span></span><br><span class="line">        ServerSocketChannel server1 = ServerSocketChannel.open();</span><br><span class="line">        server1.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">        server1.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line"></span><br><span class="line">        ServerSocketChannel server2 = ServerSocketChannel.open();</span><br><span class="line">        server2.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">        server2.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">9999</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取Selector</span></span><br><span class="line">        Selector selector = Selector.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将多个Server注册到同一个Selector</span></span><br><span class="line">        server1.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line">        server2.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收客户端连接</span></span><br><span class="line">        Set&lt;SelectionKey&gt; keys = selector.keys();</span><br><span class="line">        System.out.println(keys.size());</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys();</span><br><span class="line">            System.out.println(selectionKeys.size());</span><br><span class="line"></span><br><span class="line">            <span class="comment">//此方法会阻塞</span></span><br><span class="line">            <span class="keyword">int</span> selectedCount = selector.select();</span><br><span class="line">            System.out.println(selectedCount);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//遍历已连接通道到集合</span></span><br><span class="line">            Iterator&lt;SelectionKey&gt; it = selectionKeys.iterator();</span><br><span class="line">            <span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">                <span class="comment">//获取当前通道</span></span><br><span class="line">                SelectionKey key = it.next();</span><br><span class="line">                <span class="comment">//从SelectionKey中获取通道对象</span></span><br><span class="line">                ServerSocketChannel channel = (ServerSocketChannel) key.channel();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//查看此通道是监听哪个端口</span></span><br><span class="line">                System.out.println(channel.getLocalAddress());</span><br><span class="line"></span><br><span class="line">                <span class="comment">//取出连接到该服务器客户端到客户端通道</span></span><br><span class="line">                SocketChannel accept = channel.accept();</span><br><span class="line">                System.out.println(accept);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//与客户端进行交互的代码,接收客户端接收的信息</span></span><br><span class="line">                ByteBuffer inBuf = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">                accept.read(inBuf);</span><br><span class="line">                inBuf.flip();</span><br><span class="line">                String msg = <span class="keyword">new</span> String(inBuf.array(),<span class="number">0</span>,inBuf.limit());</span><br><span class="line">                System.out.println(channel.getLocalAddress()+msg);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//从连接到通道中把已经处理过到服务器通道移除</span></span><br><span class="line">                it.remove();</span><br><span class="line">            &#125;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span> * <span class="number">5</span>);</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二.NIO2-AIO(异步非阻塞)<br>2.1 AIO概述和分类<br>什么是AIO:ASynchronized 异步非阻塞的IO</p><p>AIO的分类:<br>异步文件通道•AsynchronousFileChannel<br>异步客户端通道•AsynchronousSocketChannel<br>异步服务器通道•AsynchronousServerSocketChannel<br>异步UDP协议通道•AsynchronousDatagramChannel</p><p>AIO的异步:<br>a.建立连接时可以使用异步(调用连接时的方法,非阻塞,连接成功后会以方法的回调机制通知我们)<br>b.读取数据时,可以使用异步(调用read方法时,非阻塞,等数据接收到之后以方法调用的机制通知我们)</p><p>2.2 AIO异步非阻塞连接的建立</p><ul><li>异步非阻塞的客户端通道<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AIO_SocketChannel</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建异步客户端通道</span></span><br><span class="line">        AsynchronousSocketChannel socketChannel = AsynchronousSocketChannel.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//连接服务器,采用异步非阻塞方式</span></span><br><span class="line">        <span class="comment">//connect(服务器IP和端口号),附件(null),接口</span></span><br><span class="line">        socketChannel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"127.0.0.1"</span>,<span class="number">8888</span>),<span class="keyword">null</span>, <span class="keyword">new</span> CompletionHandler&lt;Void, Object&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">completed</span><span class="params">(Void result, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Successful"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failed</span><span class="params">(Throwable exc, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Failed"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Continue"</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>异步非阻塞的服务器通道<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AIO_ServerSocketChannel</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建异步服务器端通道</span></span><br><span class="line">        AsynchronousServerSocketChannel serversocketChannel = AsynchronousServerSocketChannel.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//绑定本地某个端口</span></span><br><span class="line">        serversocketChannel.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收异步客户端,采用异步非阻塞方式</span></span><br><span class="line">        <span class="comment">//accept附件(null),接口</span></span><br><span class="line">        serversocketChannel.accept(<span class="keyword">null</span>, <span class="keyword">new</span> CompletionHandler&lt;AsynchronousSocketChannel, Object&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">completed</span><span class="params">(AsynchronousSocketChannel result, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Connect Client Successful"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failed</span><span class="params">(Throwable exc, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Connect Client Failed"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Server Continue"</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>异步非阻塞建立连接<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AIO_SocketChannel</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建异步客户端通道</span></span><br><span class="line">        AsynchronousSocketChannel socketChannel = AsynchronousSocketChannel.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//连接服务器,采用异步非阻塞方式</span></span><br><span class="line">        <span class="comment">//connect(服务器IP和端口号),附件(null),接口</span></span><br><span class="line">        socketChannel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>), <span class="keyword">null</span>, <span class="keyword">new</span> CompletionHandler&lt;Void, Object&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">completed</span><span class="params">(Void result, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Connect Server Successful"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failed</span><span class="params">(Throwable exc, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Connect Server Failed"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Client Continue"</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AIO_ServerSocketChannel</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建异步服务器端通道</span></span><br><span class="line">        AsynchronousServerSocketChannel serversocketChannel = AsynchronousServerSocketChannel.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//绑定本地某个端口</span></span><br><span class="line">        serversocketChannel.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收异步客户端,采用异步非阻塞方式</span></span><br><span class="line">        <span class="comment">//accept附件(null),接口</span></span><br><span class="line">        serversocketChannel.accept(<span class="keyword">null</span>, <span class="keyword">new</span> CompletionHandler&lt;AsynchronousSocketChannel, Object&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">completed</span><span class="params">(AsynchronousSocketChannel result, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Connect Client Successful"</span>);</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    System.out.println(result.getLocalAddress());</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failed</span><span class="params">(Throwable exc, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Connect Client Failed"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Server Continue"</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>2.3 AIO同步读写数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AIO_SocketChannel</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建异步客户端通道</span></span><br><span class="line">        AsynchronousSocketChannel socketChannel = AsynchronousSocketChannel.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//connect(服务器IP和端口号),附件(null),接口</span></span><br><span class="line">        socketChannel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>), <span class="keyword">null</span>, <span class="keyword">new</span> CompletionHandler&lt;Void, Object&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">completed</span><span class="params">(Void result, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Connect Server Successful"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//客户端给服务器发送数据</span></span><br><span class="line">                ByteBuffer buffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">                buffer.put(<span class="string">"I am AIO Client"</span>.getBytes());</span><br><span class="line">                buffer.flip();</span><br><span class="line">                socketChannel.write(buffer);</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    socketChannel.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failed</span><span class="params">(Throwable exc, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Connect Server Failed"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Client Continue"</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AIO_ServerSocketChannel</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建异步服务器端通道</span></span><br><span class="line">        AsynchronousServerSocketChannel serversocketChannel = AsynchronousServerSocketChannel.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//绑定本地某个端口</span></span><br><span class="line">        serversocketChannel.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收异步客户端,采用异步非阻塞方式</span></span><br><span class="line">        <span class="comment">//accept附件(null),接口</span></span><br><span class="line">        serversocketChannel.accept(<span class="keyword">null</span>, <span class="keyword">new</span> CompletionHandler&lt;AsynchronousSocketChannel, Object&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">completed</span><span class="params">(AsynchronousSocketChannel result, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Connect Client Successful"</span>);</span><br><span class="line"></span><br><span class="line">                ByteBuffer buffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">                Future&lt;Integer&gt; future = result.read(buffer);</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">byte</span>[] array = buffer.array();</span><br><span class="line">                    System.out.println(Arrays.toString(array));</span><br><span class="line"></span><br><span class="line">                    Integer len = future.get();</span><br><span class="line">                    System.out.println(len);</span><br><span class="line">                    <span class="comment">//当调用future的get方法时,数据才写入到buffer中</span></span><br><span class="line">                    <span class="comment">//所以我们不能在调用get方法之前,调用flip,否则数据将无法写入</span></span><br><span class="line">                    buffer.flip();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failed</span><span class="params">(Throwable exc, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Connect Client Failed"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Server Continue"</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.4 AIO异步读写数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AIO下的 异步客户端通道</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AIOSocketChannelDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建 异步的客户端通道</span></span><br><span class="line">        AsynchronousSocketChannel socketChannel = AsynchronousSocketChannel.open();</span><br><span class="line">        <span class="comment">//2.去连接服务器,采用异步非阻塞方法</span></span><br><span class="line">        <span class="comment">//connect(服务器的connectIP和端口号,附件(null),接口);</span></span><br><span class="line">        socketChannel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>), <span class="keyword">null</span>, <span class="keyword">new</span> CompletionHandler&lt;Void, Object&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">completed</span><span class="params">(Void result, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"连接服务器成功..."</span>);</span><br><span class="line">                <span class="comment">//给服务器发送数据</span></span><br><span class="line">                ByteBuffer buffer = ByteBuffer.allocate(<span class="number">1000</span>);</span><br><span class="line">                buffer.put(<span class="string">"你好我是AIO客户端.."</span>.getBytes());</span><br><span class="line">                buffer.flip();</span><br><span class="line">                <span class="comment">//异步的write(缓冲区,超时时间,时间单位,附件(null),回调接口);</span></span><br><span class="line">                socketChannel.write(buffer, <span class="number">10</span>, TimeUnit.SECONDS, <span class="keyword">null</span>, <span class="keyword">new</span> CompletionHandler&lt;Integer, Object&gt;() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">completed</span><span class="params">(Integer result, Object attachment)</span> </span>&#123;</span><br><span class="line">                        System.out.println(<span class="string">"数据成功发送..."</span>);</span><br><span class="line">                        <span class="comment">//释放资源</span></span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            socketChannel.close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failed</span><span class="params">(Throwable exc, Object attachment)</span> </span>&#123;</span><br><span class="line">                        System.out.println(<span class="string">"数据发送失败..."</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failed</span><span class="params">(Throwable exc, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"连接服务器失败..."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"程序继续执行...."</span>);</span><br><span class="line">        Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AIO下的 异步服务器端通道</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AIOServerSocketChannelDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">//1.创建一个异步的服务器通道</span></span><br><span class="line">        AsynchronousServerSocketChannel serverSocketChannel = AsynchronousServerSocketChannel.open();</span><br><span class="line">        <span class="comment">//2.绑定本地某个端口</span></span><br><span class="line">        serverSocketChannel.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line">        <span class="comment">//3.接收异步客户端,采用异步非阻塞方式</span></span><br><span class="line">        <span class="comment">//accpet(附件(nulll),接口);</span></span><br><span class="line">        serverSocketChannel.accept(<span class="keyword">null</span>, <span class="keyword">new</span> CompletionHandler&lt;AsynchronousSocketChannel, Object&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">completed</span><span class="params">(AsynchronousSocketChannel socketChannel, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"有客户端连接...."</span>);</span><br><span class="line">                <span class="comment">//从客户端中读取数据</span></span><br><span class="line">                <span class="comment">//异步的read(字节缓冲区,超时时间,时间单位,附件(null),回调接口)</span></span><br><span class="line">                ByteBuffer buffer = ByteBuffer.allocate(<span class="number">1000</span>);</span><br><span class="line">                socketChannel.read(buffer, <span class="number">10</span>, TimeUnit.SECONDS, <span class="keyword">null</span>, <span class="keyword">new</span> CompletionHandler&lt;Integer, Object&gt;() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">completed</span><span class="params">(Integer result, Object attachment)</span> </span>&#123;</span><br><span class="line">                        System.out.println(<span class="string">"数据读取完毕.."</span>);</span><br><span class="line">                        System.out.println(<span class="string">"接收到数据的长度:"</span>+result);</span><br><span class="line">                        System.out.println(<span class="string">"接收到的数据是:"</span> + <span class="keyword">new</span> String(buffer.array(), <span class="number">0</span>, result));</span><br><span class="line">                        <span class="comment">//释放资源</span></span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            socketChannel.close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failed</span><span class="params">(Throwable exc, Object attachment)</span> </span>&#123;</span><br><span class="line">                        System.out.println(<span class="string">"读取数据失败..."</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failed</span><span class="params">(Throwable exc, Object attachment)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"客户端连接失败..."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"程序继续执行.."</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：<br>Selector作用：<br>Selector可以让多个服务器注册到它上，完成多路复用功能</p><p>使用Selector选择器<br>注册：<br>channel.register(selector,SelectionKey.OP_ACCEPT);<br>方法：<br>//表示所有被连接到服务器通道的集合<br>public Set<SelectionKey> selectedKeys();<br>Set<SelectionKey> keys = selector.selectedKeys();</p><p>//获取所有已经成功注册到选择器的服务器通道集合<br>public Set<SelectionKey> keys();<br>Set<SelectionKey> keys = selector.keys();</p><p>//如果目前没有客户端连接,该方法会阻塞。如果有客户端连接会返回<strong>本次</strong>连接的客户端数量<br>public int select();<br>int count = selector.select();</p><p>AIO特点:<br>a.支持异步非阻塞连接 connect accept<br>b.支持异步非阻塞到读写数据<br>socketChannel.write(…);<br>socketChannel.read(…);</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记(十九)</title>
      <link href="/2020/03/26/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%B9%9D%EF%BC%89/"/>
      <url>/2020/03/26/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%B9%9D%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ul><li>Junit单元测试</li><li>NIO<br>•Buffer 缓冲区<br>•Channel 通道<br>•Selector 选择器(多路复用器)<a id="more"></a></li></ul><p>一.Junit单元测试<br>1.什么是单元测试<br>I.单元,在Java中的一个单元可以指某个方法,或某个类<br>II.测试,写一段代码单元进行测试</p><p>Junit是专门为单元测试提供的一个第三方框架<br>作用:让一个普通方法独立运行(替代main方法)</p><p>2.Junit的使用步骤<br>•下载<br>junit.org  (Jetbrains IDEA开发工具中自带)</p><p>•具体使用步骤<br>a.编写一个被测试类(业务类)<br>b.编写测试类<br>c.在测试类中使用Junit单元测试框架</p><p>•运行测试<br>在需要独立运行的方法上加注解 @Test</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//业务类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = a + b + c;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDog</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDog01</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Dog dd = <span class="keyword">new</span> Dog();</span><br><span class="line">        <span class="keyword">int</span> sum = dd.getSum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDog02</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Dog dd = <span class="keyword">new</span> Dog();</span><br><span class="line">        <span class="keyword">int</span> sum = dd.getSum(<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.单元测试中的其他四个注解<br>•Junit4.x</p><table><thead><tr><th>注解</th><th align="left">作用</th></tr></thead><tbody><tr><td>@Before</td><td align="left">表示该方法会自动在”每个”@Test方法之前执行(每次执行)</td></tr><tr><td>@After</td><td align="left">表示该方法会自动在”每个”@Test方法之后执行(每次执行)</td></tr><tr><td>@BeforeClass</td><td align="left">表示该方法会自动在”所有”@Test方法之前执行,必须为静态类(只执行一次)</td></tr><tr><td>@AfterClass</td><td align="left">表示该方法会自动在”所有”@Test方法之后执行,必须为静态类(只执行一次)</td></tr></tbody></table><p>注意:@BeforeClass和@AfterClass必须在静态方法中使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDog</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterClass</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testDog02</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Dog dd = <span class="keyword">new</span> Dog();</span><br><span class="line">        <span class="keyword">int</span> sum = dd.getSum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDog01</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Dog dd = <span class="keyword">new</span> Dog();</span><br><span class="line">        <span class="keyword">int</span> sum = dd.getSum(<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeClass</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testDog03</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Dog dd = <span class="keyword">new</span> Dog();</span><br><span class="line">        <span class="keyword">int</span> sum = dd.getSum(<span class="number">111</span>, <span class="number">222</span>, <span class="number">333</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•Junit5.x</p><p>@BeforeEach ———— 相当于@Before<br>@AfterEach  ———— 相当于@After<br>@BeforeAll  ———— 相当于@BeforeClass<br>@AfterAll   ———— 相当于@AfterClass</p><p>注意:@BeforeAll和@AfterAll也必须修饰静态方法</p><p>Assert.assertEquals(“异常信息”,”得到的结果”,”预期的结果”)<br>作用:比较”得到的结果”和”预期的结果”<br>如果一样:什么都不做<br>如果不一样:抛出异常,并封装异常信息</p><p>二.NIO介绍<br>1.阻塞与非阻塞<br>阻塞:完成某个任务时,任务没有结束之前,当前线程无法继续向下执行<br>非阻塞:完成某个任务时,不需要等待任务结束,当前线程立即可以向下继续执行,后期再通过其他代码获取任务结果</p><p>2.同步与异步<br>同步:<br>同步可能是阻塞的,也可能是非阻塞的<br>同步阻塞:完成某个任务时,任务没有结束之前,当前线程无法继续向下执行<br>同步非阻塞:完成某个任务时,不需要等待任务结束,当前线程立即可以向下继续执行,后期再通过其他代码获取任务结果</p><p>异步:<br>异步一般来说都是非阻塞<br>异步非阻塞:完成某个任务时,不需要等待任务结束,当前线程立即可以向下继续执行,后期不需要写其他代码获取任务结果,任务完成后自动会通过其他机制把结果传递回来</p><p>3.BIO,NIO,AIO介绍</p><table><thead><tr><th>名称</th><th align="left">介绍</th><th align="left">名称</th></tr></thead><tbody><tr><td>BIO(传统IO):</td><td align="left">同步阻塞的IO</td><td align="left">Block IO</td></tr><tr><td>NIO:</td><td align="left">同步阻塞与同步非阻塞,由Buffer(缓冲区),Channel(通道),Selector(迭代器)组成</td><td align="left">New IO</td></tr><tr><td>NIO2(AIO):</td><td align="left">异步非阻塞IO</td><td align="left">A Synchronized</td></tr></tbody></table><p>三.NIO-Buffer类介绍<br>1.Buffer的介绍和种类<br>•什么是Buffer<br>Buffer称为缓冲区,本质是一个数组</p><p>•Buffer的一般操作步骤<br>a.写入缓冲区(把数据保存到数组中)<br>b.调用flip方法(切换缓冲区的写模式为读模式)<br>c.读缓冲区(把数组中的数据读取出来)<br>d.调用clear(清空缓冲区)或compact(清除缓冲区中的已读取过的数据数据)方法</p><p>•Buffer的种类</p><table><thead><tr><th>名称</th><th align="left">介绍</th></tr></thead><tbody><tr><td>ByteBuffer</td><td align="left">字节缓冲区(字节数组)最常用</td></tr><tr><td>CharBuffer</td><td align="left">字符缓冲区(字符数组)</td></tr><tr><td>DoubleBuffer</td><td align="left">Double缓冲区(小数数组)</td></tr><tr><td>FloatBuffer</td><td align="left">Float缓冲区(小数数组)</td></tr><tr><td>IntBuffer</td><td align="left">整型缓冲区(整型数组)</td></tr><tr><td>LongBuffer</td><td align="left">长整型缓冲区(长整型数组)</td></tr><tr><td>ShortBuffer</td><td align="left">短整型缓冲区(短整型数组)</td></tr></tbody></table><p>2.byteBuffer的三种创建方式<br>public static allocate(int capacity);//在堆区中申请一个固定大小的ByteBuffer缓冲区<br>public static allocateDirect(int capacity);//在系统的内存中申请一个固定大小字节的ByteBuffer缓冲区<br>public static wrap(byte[] arr);//把一个字节数组直接包装成ByteBuffer缓冲区</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ByteBuffer01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//allocate,间接缓冲区</span></span><br><span class="line">        <span class="comment">// 在JVM堆中,创建或销毁更快</span></span><br><span class="line">        ByteBuffer buffer1 = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//allocateDirect,直接缓冲区</span></span><br><span class="line">        <span class="comment">// 直接在操作系统中申请,操作缓冲区角度,效率更高</span></span><br><span class="line">        ByteBuffer buffer2 = ByteBuffer.allocateDirect(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//wrap,间接缓冲区,与buffer1相同</span></span><br><span class="line">        <span class="keyword">byte</span>[] bs = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        ByteBuffer buffer3 = ByteBuffer.wrap(bs);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.byteBuffer的三种添加数据方式<br>public ByteBuffer put(byte b);//添加单个字节<br>public ByteBuffer put(byte b,bs);//添加字节数组<br>public ByteBuffer put(byte b,bs,int startIndex,int len);//添加一个字节数组中的一部分</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ByteBuffer02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ByteBuffer buffer1 = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(buffer1.array()));</span><br><span class="line"><span class="comment">//[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]</span></span><br><span class="line">        buffer1.put((<span class="keyword">byte</span>) <span class="number">10</span>);</span><br><span class="line">        System.out.println(Arrays.toString(buffer1.array()));</span><br><span class="line"><span class="comment">//[10, 0, 0, 0, 0, 0, 0, 0, 0, 0]</span></span><br><span class="line">        buffer1.put((<span class="keyword">byte</span>) <span class="number">20</span>);</span><br><span class="line">        buffer1.put((<span class="keyword">byte</span>) <span class="number">30</span>);</span><br><span class="line">        System.out.println(Arrays.toString(buffer1.array()));</span><br><span class="line"><span class="comment">//[10, 20, 30, 0, 0, 0, 0, 0, 0, 0]</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bs = &#123;<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>&#125;;</span><br><span class="line">        ByteBuffer put = buffer1.put(bs);</span><br><span class="line">        System.out.println(Arrays.toString(buffer1.array()));</span><br><span class="line"><span class="comment">//[10, 20, 30, 40, 50, 60, 0, 0, 0, 0]</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] new_bs = &#123;<span class="number">70</span>,<span class="number">80</span>,<span class="number">90</span>&#125;;</span><br><span class="line">        buffer1.put(new_bs,<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(Arrays.toString(buffer1.array()));</span><br><span class="line"><span class="comment">//[10, 20, 30, 40, 50, 60, 70, 80, 0, 0]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        byte[] break_bs = &#123;40,50,60&#125;;</span></span><br><span class="line"><span class="comment">//        ByteBuffer break_put = buffer1.put(break_bs);</span></span><br><span class="line"><span class="comment">//        System.out.println(Arrays.toString(buffer1.array()));</span></span><br><span class="line">        <span class="comment">//BufferOverflowException</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.byteBuffer的容量-capacity<br>什么是容量(capacity):<br>是指Buffer最多包含的元素个数,并且Buffer一旦创建,容量无法更改<br>public int capacity();//获取Buffer容量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ByteBuffer03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">int</span> capacity = buffer.capacity();</span><br><span class="line">        System.out.println(capacity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.byteBuffer的限制-limit<br>什么是限制:是指第一个不能操作的元素索引,取值范围(0-capacity)<br>限制的作用:相当于人为”修改”缓冲区的大小,实际上缓冲区大小没有改变,只是元素的个数改变了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ByteBuffer04_limit</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line">        System.out.println(Arrays.toString(buffer.array()));</span><br><span class="line"><span class="comment">//[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> limit = buffer.limit();</span><br><span class="line">        System.out.println(limit);</span><br><span class="line"></span><br><span class="line">        buffer.limit(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">byte</span>[] bs = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>&#125;;<span class="comment">//BufferOverflowException</span></span><br><span class="line">        buffer.put(bs);</span><br><span class="line">        System.out.println(Arrays.toString(buffer.array()));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6.byteBuffer的位置-position<br>什么是位置:将要写入/读取的元素的索引,取值范围(0-capacity/limit,有最大值position但是无法操作)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ByteBuffer05_position</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(buffer.capacity());<span class="comment">//10</span></span><br><span class="line">        System.out.println(buffer.limit());<span class="comment">//10</span></span><br><span class="line">        System.out.println(buffer.position());<span class="comment">//0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bs =&#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>&#125;;</span><br><span class="line">        buffer.put(bs);</span><br><span class="line">        System.out.println(Arrays.toString(buffer.array()));</span><br><span class="line">        <span class="comment">//[10, 20, 30, 40, 50, 0, 0, 0, 0, 0]</span></span><br><span class="line">        System.out.println(buffer.position());<span class="comment">//5</span></span><br><span class="line"></span><br><span class="line">        buffer.position(<span class="number">3</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>)<span class="number">101</span>);</span><br><span class="line">        System.out.println(Arrays.toString(buffer.array()));</span><br><span class="line">        <span class="comment">//[10, 20, 30, 101, 50, 0, 0, 0, 0, 0]</span></span><br><span class="line">        System.out.println(buffer.position());<span class="comment">//4</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7.byteBuffer的标记-mark<br>什么是标记:给当前的position记录下来,当调用reset(重置)时,position会回到标记,取值范围(0-position)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ByteBuffer06_mark</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        buffer.put((<span class="keyword">byte</span>)<span class="number">10</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>)<span class="number">20</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>)<span class="number">30</span>);</span><br><span class="line">        buffer.mark();</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>)<span class="number">40</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>)<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(buffer.array()));</span><br><span class="line"><span class="comment">//[10, 20, 30, 40, 50, 0, 0, 0, 0, 0]</span></span><br><span class="line"></span><br><span class="line">        buffer.reset();</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>)<span class="number">98</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>)<span class="number">99</span>);</span><br><span class="line">        buffer.put((<span class="keyword">byte</span>)<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(buffer.array()));</span><br><span class="line"><span class="comment">//[10, 20, 30, 98, 99, 100, 0, 0, 0, 0]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>8.byteBuffer的其他方法<br>public int remaining();//获取position与limit之间的元素数<br>public boolean isReadyOnly();//获取当前缓冲区是否可读<br>public boolean isDirect();//获取当前缓冲区是否为直接缓冲区<br><strong>public boolean clear();</strong>//还原缓冲区的初始状态</p><ul><li>将position设置0</li><li>将limit置为capacity</li><li>丢弃标记</li></ul><p><strong>public Buffer flip();</strong>//切换读写模式(缩小范围)</p><ul><li>将limit设置为当前position位置</li><li>将当前position位置设置为0</li><li>丢弃标记</li></ul><p>public Buffer rewind();//重绕缓冲区</p><ul><li>将position置为0</li><li>limit不变</li><li>丢弃标记</li></ul><p>四.Channel(通道)<br>1.Channel介绍和类<br>什么是Channel:Channel是一个类,new出对象,可以通过它读写数据,和IO流类似,最大的不同在于IO流有Input/Output之分,但是Channel没有输入输出之分,都是Channel</p><p>•为所有的原始类型提供(Buffer)缓存支持;<br>•字符集编码解决方案(Charset);<br>•Channel : 一个新的原始I/O抽象;<br>•支持锁和内存映射文件的文件访问接口;<br>•提供多路(non-bloking)非阻塞式的高伸缩性网路I/O。</p><p>Channel的分类:</p><table><thead><tr><th>名称</th><th align="left">介绍</th></tr></thead><tbody><tr><td>FileChannel</td><td align="left">文件通道</td></tr><tr><td>DatagramChannel</td><td align="left">UDP协议通道,通过UDP协议收发数据</td></tr><tr><td>SocketChannel</td><td align="left">TCP协议中客户端通道,给客户端写数据</td></tr><tr><td>ServerSocketChannel</td><td align="left">TCP协议中服务器端通道,给服务器写数据</td></tr></tbody></table><p>2.FileChannel类的基本使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileChannel01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//创建文件对象</span></span><br><span class="line">        File srcFile = <span class="keyword">new</span> File(<span class="string">"Danboard.jpg"</span>);</span><br><span class="line">        File destFile = <span class="keyword">new</span> File(<span class="string">"copy.jpg"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建输入输出流</span></span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(srcFile);</span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(destFile);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通道</span></span><br><span class="line">        FileChannel inChannel = fis.getChannel();</span><br><span class="line">        FileChannel outChannel = fos.getChannel();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//复制文件</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len=inChannel.read(buffer))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">//切换模式</span></span><br><span class="line">            buffer.flip();</span><br><span class="line">            <span class="comment">//读缓冲区数据</span></span><br><span class="line">            outChannel.write(buffer);</span><br><span class="line">            <span class="comment">//清空</span></span><br><span class="line">            buffer.clear();</span><br><span class="line">        &#125;</span><br><span class="line">        outChannel.close();</span><br><span class="line">        inChannel.close();</span><br><span class="line">        fos.close();</span><br><span class="line">        fis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.FileChannel结合MappedByteBuffer实现高效读写</p><p>读取硬盘文件到内存–&gt;内存复制一份文件–&gt;副本写入到硬盘</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileChannel_RandomAccessFile</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建文件</span></span><br><span class="line">        <span class="comment">//Read Only/Read Write</span></span><br><span class="line">        RandomAccessFile srcFile = <span class="keyword">new</span> RandomAccessFile(<span class="string">"Danboard.jpg"</span>, <span class="string">"r"</span>);</span><br><span class="line">        RandomAccessFile destFile = <span class="keyword">new</span> RandomAccessFile(<span class="string">"copy.jpg"</span>, <span class="string">"rw"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取通道</span></span><br><span class="line">        FileChannel inchannel = srcFile.getChannel();</span><br><span class="line">        FileChannel outchannel = destFile.getChannel();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取文件大小</span></span><br><span class="line">        <span class="keyword">long</span> size = inchannel.size();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//建立映射缓冲区</span></span><br><span class="line">        <span class="comment">//map(模式,开始索引,字节数）</span></span><br><span class="line">        MappedByteBuffer inmap = inchannel.map(FileChannel.MapMode.READ_ONLY, <span class="number">0</span>, size);</span><br><span class="line">        MappedByteBuffer outmap = outchannel.map(FileChannel.MapMode.READ_WRITE, <span class="number">0</span>, size);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//复制</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            <span class="keyword">byte</span> b = inmap.get(i);</span><br><span class="line">            outmap.put(i,b);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        inchannel.close();</span><br><span class="line">        outchannel.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只适用于复制2G以下的文件,如果是2G以上的文件,分多次复制</p><p>4.SocketChannel和ServerSocketChannel的实现连接</p><ul><li><p>ServerSocketChannel的创建(阻塞方式)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建阻塞的服务器通道</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSocketChannel_Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建ServerSocketChannel</span></span><br><span class="line">        ServerSocketChannel open = ServerSocketChannel.open();</span><br><span class="line">        <span class="comment">//绑定端口</span></span><br><span class="line">        open.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line">        <span class="comment">//后续代码</span></span><br><span class="line">        SocketChannel accept = open.accept();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>ServerSocketChannel的创建(非阻塞方式)</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSocketChannel_Demo02_NIO</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建ServerSocketChannel</span></span><br><span class="line">        ServerSocketChannel open = ServerSocketChannel.open();</span><br><span class="line">        <span class="comment">//设置为同步非阻塞的服务器通道</span></span><br><span class="line">        open.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">//绑定端口</span></span><br><span class="line">        open.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line">        <span class="comment">//后续代码</span></span><br><span class="line">        SocketChannel accept = open.accept();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSocketChannel_Demo02_NIO</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">//创建ServerSocketChannel</span></span><br><span class="line">        ServerSocketChannel open = ServerSocketChannel.open();</span><br><span class="line">        <span class="comment">//设置为同步非阻塞的服务器通道</span></span><br><span class="line">        open.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">//绑定端口</span></span><br><span class="line">        open.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//后续代码</span></span><br><span class="line">            SocketChannel accept = open.accept();</span><br><span class="line">            <span class="keyword">if</span> (accept != <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"Y"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">                System.out.println(<span class="string">"N"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>SocketChannel的创建<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 阻塞式客户端</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocketChannelDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建SocketChannel对象</span></span><br><span class="line">        SocketChannel socketChannel = SocketChannel.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//连接服务器</span></span><br><span class="line">        <span class="keyword">boolean</span> connect = socketChannel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>));</span><br><span class="line">        <span class="comment">// 相当于socketChannel.bind(new InetSocketAddress("127.0.0.1",8888));</span></span><br><span class="line"></span><br><span class="line">        System.out.println(connect);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocketChannelDemo02_NIO</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">//创建SocketChannel对象</span></span><br><span class="line">        SocketChannel socketChannel = SocketChannel.open();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置为同步非阻塞的客户端通道</span></span><br><span class="line">        socketChannel.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//连接服务器</span></span><br><span class="line">                <span class="keyword">boolean</span> connect = socketChannel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>));</span><br><span class="line">                <span class="comment">// 相当于socketChannel.bind(new InetSocketAddress("127.0.0.1",8888));</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (connect) &#123;</span><br><span class="line">                    System.out.println(<span class="string">"Y"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                Thread.sleep(<span class="number">1000</span> * <span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>5.SocketChannel和ServerSocketChannel的实现通信</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocketChannelDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">        SocketChannel open = SocketChannel.open();</span><br><span class="line">        <span class="keyword">boolean</span> connect = open.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(connect)&#123;</span><br><span class="line">            System.out.println(<span class="string">"Y"</span>);</span><br><span class="line">            ByteBuffer wrap = ByteBuffer.wrap(<span class="string">"Client"</span>.getBytes());</span><br><span class="line">            open.write(wrap);</span><br><span class="line">            ByteBuffer buffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">            <span class="keyword">int</span> len = open.read(buffer);</span><br><span class="line">            buffer.flip();</span><br><span class="line">            System.out.println(<span class="keyword">new</span> String(buffer.array(),<span class="number">0</span>,len));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        open.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSocketChannelDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建ServerSocketChannel</span></span><br><span class="line">        ServerSocketChannel open = ServerSocketChannel.open();</span><br><span class="line">        ServerSocketChannel bind = open.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8888</span>));</span><br><span class="line"></span><br><span class="line">        SocketChannel accept = bind.accept();</span><br><span class="line">        ByteBuffer bytebuffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">        <span class="keyword">int</span> read = accept.read(bytebuffer);</span><br><span class="line"></span><br><span class="line">        bytebuffer.flip();</span><br><span class="line">        String str = <span class="keyword">new</span> String(bytebuffer.array(), <span class="number">0</span>, read);</span><br><span class="line"></span><br><span class="line">        System.out.println(str);</span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">        buffer.put(<span class="string">"Server"</span>.getBytes());</span><br><span class="line">        buffer.flip();</span><br><span class="line">        accept.write(buffer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        open.close();</span><br><span class="line">        accept.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结:<br>Junit单元测试<br>a.第三方单元测试框架<br>b.@Test将一个普通方法可以独立运行<br>c.@Before,@After,@BeforeClass,@AfterClass</p><p>阻塞:任务没有执行完毕，线程无法向下继续推行<br>非阻塞:无论任务是否执行完毕，线程继续向下执行</p><p>同步:<br>同步可能是阻塞的,也可能是非阻塞的<br>同步阻塞:完成某个任务时,任务没有结束之前,当前线程无法继续向下执行<br>同步非阻塞:完成某个任务时,不需要等待任务结束,当前线程立即可以向下继续执行,后期再通过其他代码获取任务结果</p><p>异步:<br>异步一般来说都是非阻塞<br>异步非阻塞:完成某个任务时,不需要等待任务结束,当前线程立即可以向下继续执行,后期不需要写其他代码获取任务结果,任务完成后自动会通过其他机制把结果传递回来</p><p>创建和使用ByteBuffer<br>创建:<br>public static allocate(int capacity);//在堆区中申请一个固定大小的ByteBuffer缓冲区<br>public static allocateDirect(int capacity);//在系统的内存中申请一个固定大小字节的ByteBuffer缓冲区<br>public static wrap(byte[] arr);//把一个字节数组直接包装成ByteBuffer缓冲区<br>使用:<br>public ByteBuffer put(byte b);//添加单个字节<br>public ByteBuffer put(byte b,bs);//添加字节数组<br>public ByteBuffer put(byte b,bs,int startIndex,int len);//添加一个字节数组中的一部分<br>public int capacity();//获取Buffer容量<br>buffer.limit();<br>buffer.position();<br>buffer.mark();<br>public int remaining();//获取position与limit之间的元素数<br>public boolean isReadyOnly();//获取当前缓冲区是否可读<br>public boolean isDirect();//获取当前缓冲区是否为直接缓冲区<br><strong>public boolean clear();</strong>//还原缓冲区的初始状态<br><strong>public Buffer flip();</strong>//切换读写模式(缩小范围)<br>public Buffer rewind();//重绕缓冲区</p><p>使用MappedByteBuffer实现高效读写<br>使用文件对象 RandomAccessFile 不能使用普通File</p><p>使用ServerSockerChannel和SocketChannel实现连接并收发信息<br>ServerSockerChannel服务器端，可以是同步阻塞的也可以是非同步阻塞的<br>SocketChannel客户端，可以是同步阻塞的也可以是非同步阻塞的<br>通过configureBlocking方式可以设置阻塞或非阻塞</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记(十八)</title>
      <link href="/2020/03/24/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E5%85%AB%EF%BC%89/"/>
      <url>/2020/03/24/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E5%85%AB%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•网络编程概念(网络通信协议,IP地址,端口号)<br>•TCP网络编程<br>•综合案例(文件上传)</p><a id="more"></a><p>一.网络编程入门<br>概述：在网络通信协议下，实现网络互连的不同计算机上运行的程序间可以交换的数据</p><p>1.1 软件架构介绍<br>C/S架构:Client/Server<br>B/S架构:Browser/Server</p><p>1.2 网络通信协议<br>•什么是网络通信协议:计算机必须遵循的规则<br>•TCP/IP协议<br>TCP协议:Transmission Control Protocol,传输控制协议<br>IP协议:Internet Protocol,因特网协议</p><p>1.3 Java中支持的常见协议<br>java.net包提供两个协议<br>TCP传输控制协议:面向连接的协议(数据传输之前必须先建立连接,通过三次握手建立连接)<br>优点:保存数据完整,安全<br>缺点:消耗性能</p><p>UDP用户数据协议:面向无连接协议(数据传输时,不需要关心对方是否存在,只负责传输)<br>优点:性能较高<br>缺点:不能保证完整与安全性</p><p>1.4 网络编程三要素<br>a.网络通信协议<br>b.IP地址:每台连接到互联网的计算机的唯一标识,由32位二进制组成<br>c.端口号:一台计算机上不同软件的标识<br>端口号:一共0-65535个,1024是本机发出口,其他为随机高端口</p><p>1.5 计算机小知识<br>•IP地址的分类<br>IPv4:由32位二进制组成,2^32个地址<br>IPv6:由128位二进制组成,2^128个地址</p><p>•IP地址的相关命令<br>ipconfig/ifconfig:查看本机IP<br>ping/ping6:查看网络是否畅通</p><p>•特殊的IP地址<br>127.0.0.1(localhost):本机回环地址</p><p>1.6 InetAddress类的基本使用<br>a.InetAddress类代表IP地址<br>b.获取本机IP地址<br>InetAddress.getLocalHost();<br>c.获取其他机器IP地址<br>InetAddress.getByName(“”);<br>d.成员方法<br>     String getHostName();获得主机名<br>     String getHostAddress();获得IP地址字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test_InetAddress</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> UnknownHostException </span>&#123;</span><br><span class="line">        <span class="comment">//获取本机IP地址</span></span><br><span class="line">        InetAddress localHost = InetAddress.getLocalHost();</span><br><span class="line">        System.out.println(localHost);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取其他机器IP地址</span></span><br><span class="line">        InetAddress byName = InetAddress.getByName(<span class="string">"www.baidu.com"</span>);</span><br><span class="line">        System.out.println(byName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//成员方法</span></span><br><span class="line">        String hostName = byName.getHostName();</span><br><span class="line">        System.out.println(hostName);</span><br><span class="line">        String  address = byName.getHostAddress();</span><br><span class="line">        System.out.println(address);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二.TCP通信程序<br>2.1 TCP通信分为客户端和服务器<br>客户端:用户电脑<br>服务器端:服务商电脑</p><p>2.2 TCP中两个重要的类<br>a.Socket类,代表客户端(套接字)<br>b.ServerSocket类,代表服务器端(服务器套接字)</p><p>2.3 Socket类的介绍和使用<br>•构造方法<br>public Socket(String ip,int port);//服务器IP地址,服务器端口号<br>此构造会根据传入的参数自动连接服务器:<br>若连接成功,则对象正常创建<br>若连接失败,则直接抛出异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocketDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Socket socket = <span class="keyword">new</span> Socket(<span class="string">"192.168.50.54"</span>,<span class="number">8080</span> );</span><br><span class="line">        System.out.println(socket);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•常用方法<br>public OutputStream getOutputStream();//获取连接通道中的输出流<br>public InputStream getInputStream();//获取连接通道中的输入流</p><p>public void shutDownOutput();//关闭连接通道中的输出流<br>public void shutDownInput();//关闭连接通道中的输入流</p><p>public void close();//关闭客户端对象</p><p>2.4 ServerSocket类的介绍和使用<br>•构造方法<br>public ServerSocket(int port);//指定服务器端使用的端口号</p><p>•常用的成员方法<br>public Socket accept();//接收连接到服务器的Socket对象,如果暂时没有客户端,该方法会阻塞<br>public Socket close();//关闭服务器对象</p><p>注意:服务器获取到客户端之后，也可以获得连接中的两个流，但是获取时是输入流还是输出流要相对服务器判断</p><p>2.5 简单的TCP通信实现(单向通信)<br>客户端给服务器发送信息，服务器不反馈。<br>客户端:<br>a.创建socket对象<br>b.获取输出流<br>c.调用输出流的write方法<br>d.释放资源<br>服务器:<br>a.创建ServerSocket对象<br>b.接收连接到的客户端对象<br>c.获取输入流<br>d.调用输入流的read方法<br>e.释放资源</p><p>UDP接收数据步骤:<br>①创建接收端的Socket对象(DatagramSocket)<br>DatagramSocket(int port)<br>②创建一个数据包，用于接收数据<br>DatagramPacket(byte[] buf,length)<br>③调用DatagramSocket对象的方法接收数据<br>void receive(DatagramPacket p)<br>④解析数据包，并把数据打印在控制台<br>byte[] getData()<br>int getLength()<br>⑤关闭接收端<br>void close()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//TCP 方式</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSocketDemo_TCP</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line">        System.out.println(<span class="string">"Server running"</span>);</span><br><span class="line"></span><br><span class="line">        Socket accept = serverSocket.accept();</span><br><span class="line">        System.out.println(<span class="string">"Client Coming"</span>);</span><br><span class="line"></span><br><span class="line">        InputStream in = accept.getInputStream();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bs = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = in.read(bs);</span><br><span class="line">        System.out.println(<span class="string">"Client Said"</span>+<span class="keyword">new</span> String(bs,<span class="number">0</span>,len));</span><br><span class="line"></span><br><span class="line">        in.close();</span><br><span class="line">        serverSocket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//UDP方式</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSocketDemo_UDP</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        DatagramSocket ds = <span class="keyword">new</span> DatagramSocket(<span class="number">8888</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bys = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        DatagramPacket dp = <span class="keyword">new</span> DatagramPacket(bys,bys,length)</span><br><span class="line">        </span><br><span class="line">        ds.receive(dp);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(dp.getData(),<span class="number">0</span>,dp.getlength()));</span><br><span class="line"></span><br><span class="line">        ds.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocketDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Socket socket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>,<span class="number">8888</span> );</span><br><span class="line">        System.out.println(<span class="string">"Connect Successful"</span>);</span><br><span class="line"></span><br><span class="line">        OutputStream out = socket.getOutputStream();</span><br><span class="line"></span><br><span class="line">        out.write(<span class="string">"I am Client"</span>.getBytes());</span><br><span class="line">        System.out.println(<span class="string">"Sent Successful"</span>);</span><br><span class="line"></span><br><span class="line">        out.close();</span><br><span class="line">        socket.close();</span><br><span class="line">        System.out.println(<span class="string">"Client close"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.6 简单的TCP通信实现(双向通信)<br>客户端给服务器发送信息，服务器接收后反馈。<br>客户端:<br>a.创建socket对象<br>b.获取输出流<br>c.调用输出流的write方法<br>===读取服务器回复的信息<br>d.获取输入流<br>e.调用输入流的read方法<br>f.释放资源</p><p>d.释放资源<br>服务器:<br>a.创建ServerSocket对象<br>b.接收连接到的客户端对象<br>c.获取输入流<br>d.调用输入流的read方法<br>====回信息<br>e.获取输出流<br>f.调用输出流的write方法<br>g.释放资源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSocketDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line">        System.out.println(<span class="string">"Server running"</span>);</span><br><span class="line"></span><br><span class="line">        Socket accept = serverSocket.accept();</span><br><span class="line">        System.out.println(<span class="string">"Client Coming"</span>);</span><br><span class="line"></span><br><span class="line">        InputStream in = accept.getInputStream();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bs = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = in.read(bs);</span><br><span class="line">        System.out.println(<span class="string">"Client Said"</span>+<span class="keyword">new</span> String(bs,<span class="number">0</span>,len));</span><br><span class="line"></span><br><span class="line">        OutputStream outputStream = accept.getOutputStream();</span><br><span class="line">        outputStream.write(<span class="string">"I am Server."</span>.getBytes());</span><br><span class="line"></span><br><span class="line">        outputStream.close();</span><br><span class="line">        in.close();</span><br><span class="line">        serverSocket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocketDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Socket socket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>,<span class="number">8888</span> );</span><br><span class="line">        System.out.println(<span class="string">"Connect Successful"</span>);</span><br><span class="line"></span><br><span class="line">        OutputStream out = socket.getOutputStream();</span><br><span class="line"></span><br><span class="line">        out.write(<span class="string">"I am Client"</span>.getBytes());</span><br><span class="line">        System.out.println(<span class="string">"Sent Successful"</span>);</span><br><span class="line"></span><br><span class="line">        InputStream in = socket.getInputStream();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bs = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = in.read(bs);</span><br><span class="line">        System.out.println(<span class="string">"Server Said"</span>+<span class="keyword">new</span> String(bs,<span class="number">0</span>,len));</span><br><span class="line"></span><br><span class="line">        in.close();</span><br><span class="line">        out.close();</span><br><span class="line">        socket.close();</span><br><span class="line">        System.out.println(<span class="string">"Client close"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>三.综合案例:文件上传<br>3.1 文件上传案例分析<br>客户端:<br>读取文件FileInputStream<br>发送数据getOutputStream<br>a.创建Socket<br>b.获取输出流<br>c.创建文件的输入流<br>d.循环:一边读文件，一边发送<br>e.添加一句代码，告诉服务器文件发送完毕<br>f.获取输入流<br>g.读取服务器回复的信息<br>h.释放资源</p><p>服务器:<br>读取数据getInputStream<br>写入文件FileOutputStream<br>a.创建ServerSocket<br>b.获取客户端<br>c.获取输入流<br>d.创建文件输出流<br>e.循环:一边读数据，一边写文件<br>f.获取输出流<br>g.给客户端回信息<br>h.释放资源</p><p>3.2 文件上传案例实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocketDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Socket socket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>);</span><br><span class="line">        System.out.println(<span class="string">"Connect Successful"</span>);</span><br><span class="line"></span><br><span class="line">        OutputStream outputStream = socket.getOutputStream();</span><br><span class="line"></span><br><span class="line">        FileInputStream fileInputStream = <span class="keyword">new</span> FileInputStream(<span class="string">"1.png"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bs = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len = fileInputStream.read(bs)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            outputStream.write(bs, <span class="number">0</span>, len);</span><br><span class="line">        &#125;</span><br><span class="line">        socket.shutdownOutput();</span><br><span class="line">        System.out.println(<span class="string">"File send successfle"</span>);</span><br><span class="line"></span><br><span class="line">        InputStream inputStream = socket.getInputStream();</span><br><span class="line"></span><br><span class="line">        len = inputStream.read(bs);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(bs,<span class="number">0</span>,len));</span><br><span class="line"></span><br><span class="line">        inputStream.close();</span><br><span class="line">        fileInputStream.close();</span><br><span class="line">        outputStream.close();</span><br><span class="line">        socket.close();</span><br><span class="line">        System.out.println(<span class="string">"Client close"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSocketDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line"></span><br><span class="line">        Socket accept = serverSocket.accept();</span><br><span class="line"></span><br><span class="line">        InputStream inputStream = accept.getInputStream();</span><br><span class="line"></span><br><span class="line">        FileOutputStream fileOutputStream = <span class="keyword">new</span> FileOutputStream(System.currentTimeMillis()+<span class="string">".png"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bs = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len = inputStream.read(bs)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            fileOutputStream.write(bs, <span class="number">0</span>, len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        OutputStream outputStream = accept.getOutputStream();</span><br><span class="line">        outputStream.write(<span class="string">"I am Server."</span>.getBytes());</span><br><span class="line"></span><br><span class="line">        outputStream.close();</span><br><span class="line">        fileOutputStream.close();</span><br><span class="line">        inputStream.close();</span><br><span class="line">        accept.close();</span><br><span class="line">        serverSocket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSocketMultiDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            Socket accept = serverSocket.accept();</span><br><span class="line"></span><br><span class="line">            InputStream inputStream = accept.getInputStream();</span><br><span class="line"></span><br><span class="line">            FileOutputStream fileOutputStream = <span class="keyword">new</span> FileOutputStream(System.currentTimeMillis() + <span class="string">".png"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">byte</span>[] bs = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> ((len = inputStream.read(bs)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                fileOutputStream.write(bs, <span class="number">0</span>, len);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            OutputStream outputStream = accept.getOutputStream();</span><br><span class="line">            outputStream.write(<span class="string">"I am Server."</span>.getBytes());</span><br><span class="line"></span><br><span class="line">            outputStream.close();</span><br><span class="line">            fileOutputStream.close();</span><br><span class="line">            inputStream.close();</span><br><span class="line">            accept.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSocketMultiDemo_Thread</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            Socket accept = serverSocket.accept();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    InputStream inputStream = accept.getInputStream();</span><br><span class="line"></span><br><span class="line">                    FileOutputStream fileOutputStream = <span class="keyword">new</span> FileOutputStream(System.currentTimeMillis() + <span class="string">".png"</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">byte</span>[] bs = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">while</span> ((len = inputStream.read(bs)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                        fileOutputStream.write(bs, <span class="number">0</span>, len);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    OutputStream outputStream = accept.getOutputStream();</span><br><span class="line">                    outputStream.write(<span class="string">"I am Server."</span>.getBytes());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    outputStream.close();</span><br><span class="line">                    fileOutputStream.close();</span><br><span class="line">                    inputStream.close();</span><br><span class="line">                    accept.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.3 模拟BS架构服务器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerSocketDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            Socket accept = serverSocket.accept();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">                    InputStream inputStream = accept.getInputStream();</span><br><span class="line"></span><br><span class="line">                    BufferedReader bufferedReader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream));</span><br><span class="line">                    String line = bufferedReader.readLine();</span><br><span class="line"></span><br><span class="line">                    String[] splits = line.split(<span class="string">" "</span>);</span><br><span class="line">                    String substring = splits[<span class="number">1</span>].substring(<span class="number">1</span>);</span><br><span class="line">                    System.out.println(substring);</span><br><span class="line"></span><br><span class="line">                    FileInputStream fileInputStream = <span class="keyword">new</span> FileInputStream(substring);</span><br><span class="line">                    OutputStream outputStream = accept.getOutputStream();</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">byte</span>[] bs = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">                    outputStream.write(<span class="string">"HTTP/1.1 200 OK\r\n"</span>.getBytes());</span><br><span class="line">                    outputStream.write(<span class="string">"Content-Type:text/html\r\n"</span>.getBytes());</span><br><span class="line">                    outputStream.write(<span class="string">"\r\n"</span>.getBytes());</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">while</span> ((len = fileInputStream.read(bs)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                        outputStream.write(bs, <span class="number">0</span>, len);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    outputStream.close();</span><br><span class="line">                    inputStream.close();</span><br><span class="line">                    accept.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).start();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        serverSocket.close();</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结:<br>TCP协议特点:面向有连接(先建立连接，后建立数据)<br>UDP协议特点:面向无连接(只需要发送数据，不需关心对方是否存在)<br>TCP协议两个常用名称<br>Socket:客户端类<br>•构造方法<br>public Socket(String ip,int port);//服务器IP地址,服务器端口号<br>•常用方法<br>public OutputStream getOutputStream();//获取连接通道中的输出流<br>public InputStream getInputStream();//获取连接通道中的输入流<br>public void shutDownOutput();//关闭连接通道中的输出流<br>public void shutDownInput();//关闭连接通道中的输入流<br>public void close();//关闭客户端对象</p><p>ServerSocket:服务器类<br>•构造方法<br>public ServerSocket(int port);//指定服务器端使用的端口号<br>•常用的成员方法<br>public Socket accept();//接收连接到服务器的Socket对象,如果暂时没有客户端,该方法会阻塞<br>public Socket close();//关闭服务器对象</p><p>TCP协议单双向传输数据<br>TCP协议下文件上传案例<br>上传:客户端将文件发送至服务器,服务器保存到硬盘<br>下载:<br>a.客户端读取本地文件<br>b.通过流输出发送给服务器<br>c.服务器读取输入流数据<br>d.保存到服务器本地</p><p>TCP协议到BS案例:<br>不需要写客户端，使用浏览器访问服务器，</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记(十七)</title>
      <link href="/2020/03/23/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%B8%83%EF%BC%89/"/>
      <url>/2020/03/23/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%B8%83%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•缓冲流(高效流,比普通流性能更高)<br>•转换流(编码相关的流,指定编码)<br>•序列化流(操作对象)<br>•打印流(System.out.println())<br>•设计模式(装饰设计模式,4个步骤)<br>•common-io工具包(简化IO代码)</p><a id="more"></a><p>一.缓冲流<br>1.1 缓冲流的介绍<br>缓冲流也叫高效流,是对之前的四个基本流的增强(性能,方法一模一样),会创建缓冲区,减少硬盘IO读写,提高速度。</p><p>1.2 缓冲Buffered流的分类<br>缓冲字节输入流:BufferedInputStream –&gt; 普通的字节输入流IntputStream的增强<br>缓冲字节输出流:BufferedOutputStream –&gt; 普通的字节输出流OutputStream的增强<br>缓冲字符输入流:BufferedReader –&gt; 对普通的字符输入流Reader的增强<br>缓冲字符输出流:BufferedWriter –&gt; 对普通的字符输出Writer流的增强</p><p>1.3 字节缓冲流的介绍和使用<br>•字节缓冲流的构造<br>public BufferedInputStream(InputStream in);//缓冲流的构造需要接收普通字节流<br>public BufferedOutputStream(OutputStream in);//缓冲流的构造需要接收普通字节流</p><p>•字节缓冲流的高效测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Buffered_Demo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        copy01();</span><br><span class="line">        copy02();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copy01</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        BufferedOutputStream bos = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">"1.txt"</span>));</span><br><span class="line">        BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">"2.txt"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((b = bis.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">            bos.write(b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        System.out.println(end - start);</span><br><span class="line"></span><br><span class="line">        bis.close();</span><br><span class="line">        bos.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copy02</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"1.txt"</span>);</span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"2.txt"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((b = fis.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">            fos.write(b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        System.out.println(end - start);</span><br><span class="line"></span><br><span class="line">        fos.close();</span><br><span class="line">        fis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更快的方式:使用缓冲流的同时,使用一次读取一个字节数组的方式</p><p>1.4 字符缓冲流的介绍和使用<br>•字符缓冲流的构造<br>public BufferedWriter(Writer w);//缓冲流的构造需要接收普通字符流<br>public BufferedReader(Reader r);//缓冲流的构造需要接收普通字符流</p><p>字符缓冲流也是对普通字符类对性能增强</p><p>•字符缓冲流的2个特有方法<br>BufferedWriter是对普通Writer的增强<br>多了一个特有方法:向文件中写一个换行符(根据系统而定)<br>public void newLine();</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Buffered_R_W</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(<span class="string">"1.txt"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            bw.write(<span class="string">"Java"</span>);</span><br><span class="line">            bw.newLine();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bw.close();</span><br><span class="line">        <span class="comment">//先开后关,不用即关</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BufferedReader是对普通Reader的增强<br>多了一个特有方法:一次读取一行内容<br>public void ReadLine();</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    BufferedReader bf = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">"1.txt"</span>));</span><br><span class="line"></span><br><span class="line">    String s = bf.readLine();</span><br><span class="line">    System.out.println(s);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一次读取一行的标准循环代码</span></span><br><span class="line">    String line = <span class="string">""</span>;<span class="comment">//用来保存每次读取的一行数据</span></span><br><span class="line">    <span class="keyword">while</span> ((line = bf.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">        System.out.println(line);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//(line = bf.readLine()) != null</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    读取bf.readLine();</span></span><br><span class="line"><span class="comment">    赋值line = 读到一行数据</span></span><br><span class="line"><span class="comment">    判断line != null;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    bf.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:一次读取一行的标准循环不会因为有一行是(null字符串/空行)而停止,只有读取到文件的末尾,没有内容时返回null才停止</p><p>1.5 总和练习:文本排序</p><p>读取文件并排序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        List&lt;String&gt; arr = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">        BufferedReader bf = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">"6.txt"</span>));</span><br><span class="line"></span><br><span class="line">        String line = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">while</span> ((line = bf.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            arr.add(line);</span><br><span class="line">        &#125;</span><br><span class="line">        bf.close();</span><br><span class="line"></span><br><span class="line">        Collections.sort(arr, (o1, o2) -&gt; o1.charAt(<span class="number">0</span>) - o2.charAt(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">        BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(<span class="string">"new.txt"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String s : arr) &#123;</span><br><span class="line">            bw.write(s);</span><br><span class="line">            bw.newLine();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二.转换流<br>2.1 编码和解码<br>编码:把字符 —&gt; 字节,比如’a’–&gt;97(0110 0001)<br>解码:把字节 —&gt; 字符,比如97(0110 0001)–&gt;’a’</p><p>2.2 字符集<br>字符集:就是一个系统所支持的所有字符(文字、标点、数字,图形符号等)的集合</p><p>2.3 字符编码<br>字符编码:是指字符和二进制一一对应的一套规则,比如字符’a’对应的码值是 97</p><p><b>常见的字符集和字符编码</b></p><table><thead><tr><th>字符集</th><th align="center"></th><th align="center">编码</th></tr></thead><tbody><tr><td>ASCII 字符集</td><td align="center">—&gt;</td><td align="center">ASCII编码,规定ASCII字符集中所有的字符 都占一个字节</td></tr><tr><td>GBK 字符集</td><td align="center">—&gt;</td><td align="center">GBK编码,规定所有中文字符都占2个字节(这两个字节是负数)</td></tr><tr><td>ISO-8859-1字符集</td><td align="center">—&gt;</td><td align="center">西欧国家字符集(以后使用Tomcat7以前默认就是使用ISO-8859-1)</td></tr><tr><td>Unicode字符集</td><td align="center">—&gt;</td><td align="center">UTF-8,规定所有的中文字符都占3个字节</td></tr></tbody></table><p>2.4 编码引出的问题<br>IDEA默认使用UTF-8，Windows默认使用GBK编码，以下例子会导致读取出3个字符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">"GBK.txt"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ch = fr.read();</span><br><span class="line">        System.out.println((<span class="keyword">char</span>)ch);</span><br><span class="line"></span><br><span class="line">        fr.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解决方法：<br>硬编码方式：<br>a.把文件编码改为UTF-8和IDEA一致<br>b.把IDEA编码改成GBK文件一致<br>软编码方式：转换流</p><p>2.5 使用转换流InputStreamReader解决读取中文的问题<br>转换输入流: InputStreamReader extends Reader</p><p>•构造方法<br>public InputStreamReader(InputStream in,String charsetName);//使用指定编码读文件<br>public InputStreamReader(InputStream in);//使用IDE默认编码读取文件</p><p>•使用InputStreamReader读取不同编码的文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo02_InputStreamReader</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(<span class="string">"utf8.txt"</span>), <span class="string">"UTF-8"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> ch = isr.read();</span><br><span class="line">        System.out.println((<span class="keyword">char</span>)ch);</span><br><span class="line"></span><br><span class="line">        ch = isr.read();</span><br><span class="line">        System.out.println((<span class="keyword">char</span>)ch);</span><br><span class="line"></span><br><span class="line">        ch = isr.read();</span><br><span class="line">        System.out.println((<span class="keyword">char</span>)ch);</span><br><span class="line"></span><br><span class="line">        isr.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.6 使用转换流OutputStreamWriter解决读取中文的问题<br>转换输出流:OutputStreamWriter extends Writer</p><p>•构造方法<br>public OutputStreamWriter(OutputStream out,String charsetName);//写文件时指定编码<br>public OutputStreamWriter(OutputStream out);//使用IDE默认编码</p><p>•输出指定编码的中文</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo03_OutputStreamWriter</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//        OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream("newGBK.txt"), "GBK");</span></span><br><span class="line">        OutputStreamWriter osw = <span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(<span class="string">"newutf8.txt"</span>), <span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line">        osw.write(<span class="string">"你好"</span>);</span><br><span class="line"></span><br><span class="line">        osw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.7 转换流的理解(转换流是字节与字符之间的桥梁)<br>InputStreamReader:读取字节，解码为字符，根据编码(UTF-8或GBK)去读2个或3个字节，然后根据编码(UTF-8或GBK)解码为字符<br>OutputStreamWriter:写出字符，编码为字节，根据编码(UTF-8或GBK)把字符编码为2个或3个字节，然后写到对应文件中</p><p>2.8 练习:转换文件编码<br>将GBK文件转换为UTF-8文件<br>分析:<br>a.先把GBK文件中的内容读取出来(GBK)<br>b.再把数据写入到UTF-8文件中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(<span class="string">"newGBK.txt"</span>), <span class="string">"GBK"</span>);</span><br><span class="line"></span><br><span class="line">        OutputStreamWriter osw = <span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(<span class="string">"coyt_to_UTF8.txt"</span>), <span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ch = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((ch = isr.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">            osw.write(ch);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        osw.close();</span><br><span class="line">        isr.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>三.序列化流<br>3.1 什么是序列化流<br>对象序列化：就是将对象保存到磁盘中，或者在网络中传输对象。<br>这种机制就是使用一个字节序列表示一个对象，该字节序列包含：对象的类型，对象的数据和对象中存储的属性等信息。<br>字节序列写到文件后，相当于文件中持久保存了一个对象的信息。<br>反之，该字节序列还可以从文件中读取回来，重构对象，对他进行反序列化</p><p>序列化流:写出对象的流<br>ObjectOutputStream</p><p>反序列化流:读取对象的流<br>ObjectInputStream</p><p>3.2 ObjectOutputStream介绍和使用<br>•构造方法<br>public ObjectOutputStream(OutputStream out);//需要接收一个普通的字节输出流</p><p>•序列化操作的前提<br>想要实现序列化，必须实现java.io.Serializable,否则NotSerializableException报错</p><p>该接口中没有方法，该接口一般作为标记接口</p><p>•序列化操作(代码演示)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">implements</span> <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">"Dog.txt"</span>));</span><br><span class="line"></span><br><span class="line">        Dog dd = <span class="keyword">new</span> Dog(<span class="number">10</span>, <span class="string">"a"</span>);</span><br><span class="line">        oos.writeObject(dd);</span><br><span class="line"></span><br><span class="line">        oos.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:不需要查看Dog.txt文件，编码无法查看，需要反序列化读取</p><p>3.3 ObjectInputStream介绍和使用<br>•构造方法<br>public ObjectInputStream(InputStream in);//需要接收一个普通的字节输入流</p><p>•反序列化操作(代码演示)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo_ObjectInputStream</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">"Dog.txt"</span>));</span><br><span class="line"></span><br><span class="line">        Dog obj = (Dog)ois.readObject();</span><br><span class="line">        System.out.println(obj);</span><br><span class="line"></span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.4 反序列化操作的两种异常演示<br>a.ClassNotFoundException 类没有找到的异常<br>出现原因:<br>序列化之后，反序列化之前，删除了用来序列化的类</p><p>b.InvalidClassException 无效类异常<br>出现原因:<br>序列化之后，反序列化之前，修改了用来序列化的类</p><p>c.实际上序列化流通过serialVersionUID来识别的</p><p>3.5 练习:如果需要序列化多个对象怎么操作<br>注意:序列化流一个文件只适合序列化一个对象<br>分析:<br>a.把要序列化的多个对象，保存到一个集合对象<br>b.将这个集合作为对象，序列化到文件中<br>c.从文件中将整个集合反序列化<br>d.遍历集合把里面的对象一一打印出来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        write();</span><br><span class="line">        read();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ArrayList&lt;Dog&gt; dogs = <span class="keyword">new</span> ArrayList&lt;Dog&gt;();</span><br><span class="line">        dogs.add(<span class="keyword">new</span> Dog(<span class="number">1</span>, <span class="string">"a"</span>, <span class="number">4</span>));</span><br><span class="line">        dogs.add(<span class="keyword">new</span> Dog(<span class="number">2</span>, <span class="string">"b"</span>, <span class="number">5</span>));</span><br><span class="line">        dogs.add(<span class="keyword">new</span> Dog(<span class="number">3</span>, <span class="string">"c"</span>, <span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">"Dogs.txt"</span>));</span><br><span class="line">        oos.writeObject(dogs);</span><br><span class="line">        oos.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">"Dogs.txt"</span>));</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Dog&gt; dogs = (ArrayList&lt;Dog&gt;) ois.readObject();</span><br><span class="line">        ois.close();</span><br><span class="line">        <span class="keyword">for</span> (Dog dog : dogs) &#123;</span><br><span class="line">            System.out.println(dog);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>四.打印流<br>4.1 打印流的介绍<br>a.输出System.out.println();实际上就是调用了打印流的方法<br>b.打印流PrintStream类<br>c.打印流中重载了各种数据类型的print和println方法，打印数据时非常方便<br>d.打印流不会抛出IOException</p><p>4.2 PrintStream的构造和常用方法<br>构造方法:<br>public PrintStream(String Path);//直接指定路径<br>public PrintStream(File file);//直接指定文件<br>public PrintStream(OutputStream out);//先给一个输出流，绑定什么对象就打印到什么对象</p><p>成员方法:<br>public void print(各种类型);//不带换行的打印<br>public void println(各种类型);//带换行的打印</p><p>4.3 修改打印流的流向</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPrintStream02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        PrintStream ps1 = <span class="keyword">new</span> PrintStream(<span class="string">"p.txt"</span>);</span><br><span class="line"></span><br><span class="line">        ps1.println(<span class="string">"Hallo"</span>);</span><br><span class="line"></span><br><span class="line">        System.setOut(ps1);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Java"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>五.装饰设计<br>什么是设计模式:为了解决一系列问题，总结出来的一套方案</p><p>5.1 装饰模式的作用<br>装饰模式指的是在不改变原类，不实用继承的基础上，动态地扩展一个对象的功能。</p><p>5.2 装饰者设计模式的4个基本步骤<br>•装饰类(自己定义的新类)和被装饰类(原类)必须实现相同的接口<br>•在装饰类中必须传入被装饰类的引用<br>•在装饰类中对需要的扩展方法进行扩展<br>•在装饰类中对不需要的扩展方法调用被装饰类中的同名方法</p><p>5.3 代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//相同接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SingStar</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dance</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//被装饰类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singer</span> <span class="keyword">implements</span> <span class="title">SingStar</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"aaaaa"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"bbbbb"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//装饰类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Wrapper</span> <span class="keyword">implements</span> <span class="title">SingStar</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Singer SG;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Wrapper</span><span class="params">(Singer SG)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.SG = SG;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ccc"</span>);</span><br><span class="line">        SG.sing();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SG.dance();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//调用同名方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Singer sg = <span class="keyword">new</span> Singer();</span><br><span class="line">        Wrapper wrapper = <span class="keyword">new</span> Wrapper(sg);</span><br><span class="line">        wrapper.sing();</span><br><span class="line"></span><br><span class="line">        wrapper.dance();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>六.commons-io工具包<br>6.1 commons-io的介绍和下载<br>是Apache提供的库</p><table><thead><tr><th>工具</th><th align="center">功能描述</th></tr></thead><tbody><tr><td>org.apache.commons.io</td><td align="center">有关Streams、Readers、Writers、Files的工具类</td></tr><tr><td>org.apache.commons.io.input</td><td align="center">输入流相关的实现类，包含Reader和InputStream</td></tr><tr><td>org.apache.commons.io.output</td><td align="center">输出流相关的实现类，包含Writer和OutputStream</td></tr><tr><td>org.apache.commons.io.serialization</td><td align="center">序列化相关的类</td></tr></tbody></table><p>下载commons-io.zip<br>a.解压<br>b.模块下创建lib文件夹，将commons-io.jar复制进去<br>c.选择common-io.jar，选则add as library，加载</p><p>6.2 常用API介绍<br>•复制文件API</p><p>•复制文件夹API</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Commons_IO_TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.IOUitls.copy,适合复制2GB以下的文件</span></span><br><span class="line">        IOUtils.copy(<span class="keyword">new</span> FileInputStream(<span class="string">"1.txt"</span>),<span class="keyword">new</span> FileOutputStream(<span class="string">"copy_1_common.txt"</span>));</span><br><span class="line">        <span class="comment">//1.IOUitls.copy,适合复制2GB以下的文件</span></span><br><span class="line">        IOUtils.copyLarge(<span class="keyword">new</span> FileInputStream(<span class="string">"1.txt"</span>),<span class="keyword">new</span> FileOutputStream(<span class="string">"copy_1_common_Large.txt"</span>));</span><br><span class="line">        <span class="comment">//FileUtils复制文件到文件夹</span></span><br><span class="line">        FileUtils.copyFileToDirectory(<span class="keyword">new</span> File(<span class="string">"1.txt"</span>), <span class="keyword">new</span> File(<span class="string">"copy_1_common_FileUtil.txt"</span>));</span><br><span class="line">        <span class="comment">//FileUtils复制文件夹到文件夹</span></span><br><span class="line">        FileUtils.copyDirectoryToDirectory(<span class="keyword">new</span> File(<span class="string">"/Users/swzxsyh/Downloads/c9-python-getting-started"</span>),<span class="keyword">new</span> File(<span class="string">"/Users/swzxsyh/Desktop"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结:<br>1.缓冲流<br>    字节缓冲流(BufferedOutputStream和BufferedInputStream),没有特有方法,性能比普通流更高</p><pre><code>字符缓冲流(BufferedWriter和BufferedReader),有特有方法,性能比普通流更高    BufferedWriter:         public void newLine();    BufferedReader:        public String readLine();</code></pre><p>2.转换流<br>    转换输出流： 可以指定编码写文件<br>        OutputStreamWriter<br>        public OutputStreamWriter(OutputStream out,String 指定的编码);<br>    转换输入流： 可以指定编码读文件<br>        InputStreamReader<br>        public InputStreamReader(InputStream in,String 指定的编码);</p><p>转换输入流(可以指定编码读文件):<br>InputStreamWriter<br>public InputStreamReader(InputStream out,String charsetName);//写文件时指定编码</p><p>3.序列化流<br>    序列化流:  写对象<br>        ObjectOutputStream<br>        public void writeObject(对象);//该对象的类必须实现java.io.Serializable接口<br>    反序列化流: 读对象<br>        ObjectInputStream<br>        public Object readObject();</p><p>4.打印流<br>    PrintStream ps = new PrintStream(String path/File file/OutputStream out);<br>    方法:<br>    print(各种数据类型);<br>    println(各种数据类型);<br>5.装饰设计模式<br>    步骤:<br>    a.被装饰类和装饰类实现同一个接口<br>    b.装饰类内部必须含有被装饰类的引用<br>    c.在装饰类中对需要装饰的方法进行装饰<br>    d.在装饰类中对不需要装饰的方法调用原对象的方法</p><p> 6.commons-io【重点】<br>    IOUtils  复制文件(2G以上和2G以下)<br>    FileUtils 复制文件和复制文件夹   </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记(十六)</title>
      <link href="/2020/03/22/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E5%85%AD%EF%BC%89/"/>
      <url>/2020/03/22/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E5%85%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•字符流<br>•IO流的异常处理<br>•Properties属性集,一般用于框架的配置文件<br>•ResourceBundle工具,专门用于属性集保存之后的文件</p><a id="more"></a><p>一.字符流</p><ol><li><p>为什么要用字符流<br>字节流也是可以读取文本文件的,但是读取中文时可能会出现只读取其中的部分字节,因为中文不止由一个字节组成。<br>为了解决问题,引入了字符流,以字符为单位操作</p></li><li><p>字符输入流<br>顶层父类:Reader(抽象类)<br>共性方法:<br>public void close();//释放资源<br>public int read();//一次读一个char字符,返回字符ASCII码值,为int类型<br>public int read(char[] chs);//一次读一个char字符数组,返回值表示实际读取的字符个数</p></li><li><p>FileReader类的使用<br>文件的字符输入流(从文件中读取字符数据的)</p></li></ol><p>•构造方法<br>public FileReader(String Path);<br>public FileReader(File file);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test_FileReader</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">"1.txt"</span>);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        创建对象</span></span><br><span class="line"><span class="comment">        判断文件是否存在,若存在,则不清空。若不存在,则返回错误FileNotFoundException</span></span><br><span class="line"><span class="comment">        绑定fr和1.txt文件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•读取一个字符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test_FileReader02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">"1.txt"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//一次读一个字符</span></span><br><span class="line"><span class="comment">//        int read = fr.read();</span></span><br><span class="line"><span class="comment">//        System.out.println(read);</span></span><br><span class="line"><span class="comment">//        System.out.println((char)read);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//一次读取一个字符的标准循环代码</span></span><br><span class="line">        <span class="keyword">int</span> ch = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((ch = fr.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println((<span class="keyword">char</span>) ch);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*(ch = fr.read()) != -1</span></span><br><span class="line"><span class="comment">        读取fr.read();</span></span><br><span class="line"><span class="comment">        赋值ch = 读到的字符</span></span><br><span class="line"><span class="comment">        判断ch != -1</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        fr.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•读取一个字符数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test_FileReader03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">"1.txt"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        char[] chs = new char[4];</span></span><br><span class="line"><span class="comment">//        int len = fr.read(chs);</span></span><br><span class="line"><span class="comment">//        System.out.println(len);</span></span><br><span class="line"><span class="comment">//        System.out.println(new String(chs));</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span>[] chs = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len = fr.read(chs)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="keyword">new</span> String(chs, <span class="number">0</span>, len));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        (len = fr.read(chs)) != -1</span></span><br><span class="line"><span class="comment">        读取fr.read();</span></span><br><span class="line"><span class="comment">        赋值 len = 实际读取的个数</span></span><br><span class="line"><span class="comment">        判断len != -1</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        fr.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>字符输出流<br>顶层父类:Writer(抽象类)<br>共性方法:<br>public void close();//释放资源<br>public int flush();//对于字符串游泳</li></ol><p>public int write();//一次写一个char字符,返回字符ASCII码值,为int类型<br>public int write(char[] chs);//一次写一个char字符数组<br>public int write(char[] chs,int startIndex,int len);//一次写一个char字符数组的一部分</p><p>public write(String str);//直接写一个字符串<br>public write(String str,int startIndex,int len);//直接写一个字符串的一部分</p><ol start="5"><li>FileWriter类的使用<br>文件的字符输出流(向文件中写字符数据)</li></ol><p>•构造方法<br>public FileWriter(String Path);<br>public FileWriter(File file);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestFileWriter</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">"2.txt"</span>);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        创建对象fw</span></span><br><span class="line"><span class="comment">        判断文件是否存在,若存在则覆盖,若不存在则创建</span></span><br><span class="line"><span class="comment">        绑定fw和2.TXT</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•写出字符数据的三组(五个)方法<br>public int write();//一次写一个char字符,返回字符ASCII码值,为int类型</p><p>public int write(char[] chs);//一次写一个char字符数组<br>public int write(char[] chs,int startIndex,int len);//一次写一个char字符数组的一部分</p><p>public write(String str);//直接写一个字符串<br>public write(String str,int startIndex,int len);//直接写一个字符串的一部分</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestFileWriter02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">"2.txt"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//写一个字符</span></span><br><span class="line">        fw.write(<span class="string">'a'</span>);</span><br><span class="line">        fw.write(<span class="string">'字'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//写一个字符数组</span></span><br><span class="line">        <span class="keyword">char</span>[] chs =&#123;<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'字'</span>,<span class="string">'符'</span>&#125;;</span><br><span class="line">        fw.write(chs);</span><br><span class="line"></span><br><span class="line">        fw.write(chs,<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        fw.write(<span class="string">"一二三四1234abcd"</span>);</span><br><span class="line"></span><br><span class="line">        fw.write(<span class="string">"一二三四1234abcd"</span>,<span class="number">0</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        fw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•关闭和刷新的区别<br>flush();只刷新缓冲区,不关闭流<br>close();不仅刷新缓冲区,之后还会关闭流,流不能继续使用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestFileWriter03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">"3.txt"</span>);</span><br><span class="line"></span><br><span class="line">        fw.write(<span class="string">"PHP"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//刷新缓冲区,将write的字符从Java缓冲区刷入3.txt</span></span><br><span class="line">        fw.flush();</span><br><span class="line">        fw.write(<span class="string">"Python"</span>);</span><br><span class="line">        fw.flush();</span><br><span class="line">        </span><br><span class="line">        fw.close();</span><br><span class="line">        <span class="comment">//fw.write("CPP");</span></span><br><span class="line">        <span class="comment">//报错java.io.IOException: Stream closed,流已关闭,无法写入</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•续写和换行<br>如何续写:<br>public FileWriter(String path,boolean append);//append表示是否续写<br>public FileWriter(File file,boolean append);//append表示是否续写</p><p>换行:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestFileWriter05_Return_Line</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">"3.txt"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            fw.write(<span class="string">"php"</span>+<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fw.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二.IO流的异常处理 throws</p><ol><li><p>JDK7之前的标准IO处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//IO流异常的标准处理方式(JDK 1.7之前)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mtehod01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    FileReader fr = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        fr = <span class="keyword">new</span> FileReader(<span class="string">"1.txt"</span>);</span><br><span class="line">        <span class="keyword">int</span> read = fr.read();</span><br><span class="line">        System.out.println(read);</span><br><span class="line">        fr.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException ioe) &#123;</span><br><span class="line">        ioe.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (fr != <span class="keyword">null</span>) &#123;</span><br><span class="line">                fr.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ie) &#123;</span><br><span class="line">            ie.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>JDK7引入的IO处理<br>try-with-resource(和资源一起try)<br>格式:<br>try(创建资源的代码){</p></li></ol><p>}catch(XxxException e){<br>    e.printStackTrace();<br>}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//IO流异常的标准处理方式(JDK 1.7引入)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mtehod02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> (FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">"1.txt"</span>))&#123;</span><br><span class="line">        <span class="keyword">int</span> read = fr.read();</span><br><span class="line">        System.out.println((<span class="keyword">char</span>)read);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException ioe) &#123;</span><br><span class="line">        ioe.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>三.Properties类</p><ol><li>Properties类的介绍<br>Properties继承HashTable,而HashTable继承Dictionary,实现了Map接口,实际上Properties就是一个双列接口</li></ol><p>a.Properties就是一个双列集合(Properties extends HashTable extend Dictionary implements Map)<br>b.Properties的键和值已经确定为String了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test_Properties</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取系统相关的键值对</span></span><br><span class="line">        Properties properties = System.getProperties();</span><br><span class="line">        System.out.println(properties);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>构造方法<br>public Properties();//创建一个空的Properties对象</li></ol><p>public static void main(String[] args){<br>    //创建一个空的Proerties对象<br>    Properties ps = new Properties();<br>    System.out.println(ps);<br>}</p><ol start="3"><li>基本保存数据的方法<br>Map接口定义的方法:<br>增:put(键,值)<br>删:remove(键)<br>改:put(键,值)<br>查:get(键)<br>遍历的两个方法<br>Set&lt;键的类型&gt; keys = map.keySet();<br>Set&lt;Map.Entry&lt;K,V&gt;&gt; entrys = map.entrySet();</li></ol><p>Properties具有Map接口中定义的方法,但是一般使用其特有方法<br>public Object setProperty(String key,String value);//添加键值对,和put功能一样,也能做修改使用<br>public String getProperty(String key);//以键找值,和get功能一样<br>public Set<String> stringPropertyNames();//查找所有属性名的集合,和keySet功能一样</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test_Properties02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取系统相关的键值对</span></span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        System.out.println(properties);</span><br><span class="line"><span class="comment">//增</span></span><br><span class="line">        properties.setProperty(<span class="string">"MI"</span>, <span class="string">"6888"</span>);</span><br><span class="line">        properties.setProperty(<span class="string">"HW"</span>, <span class="string">"8888"</span>);</span><br><span class="line">        properties.setProperty(<span class="string">"AP"</span>, <span class="string">"10888"</span>);</span><br><span class="line">        System.out.println(properties);</span><br><span class="line"><span class="comment">//改</span></span><br><span class="line">        properties.setProperty(<span class="string">"MI"</span>, <span class="string">"3888"</span>);</span><br><span class="line">        System.out.println(properties);</span><br><span class="line"><span class="comment">//获取</span></span><br><span class="line">        String mi = properties.getProperty(<span class="string">"MI"</span>);</span><br><span class="line">        System.out.println(mi);</span><br><span class="line"><span class="comment">//获取所有属性名(key)</span></span><br><span class="line">        Set&lt;String&gt; strings = properties.stringPropertyNames();</span><br><span class="line">        System.out.println(strings);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>与流相关的方法<br>Properties有两个流相关方法:一个叫保存,一个叫加载</li></ol><p>public void store(OutputStream out,String Description);//保存Properties对象中的数据<br>public void store(Writer write,String Description);//保存Properties对象中的数据</p><p>public void load(InputStream in);//把Properties内容加载到当前对象<br>public void load(Reader read);//把Properties文件内容加载到当前对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test_Properties04_Load</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line"></span><br><span class="line">        properties.load(<span class="keyword">new</span> FileInputStream(<span class="string">"5.properties"</span>));</span><br><span class="line">        System.out.println(properties);</span><br><span class="line"></span><br><span class="line">        Set&lt;String&gt; propertyNames = properties.stringPropertyNames();</span><br><span class="line">        <span class="keyword">for</span> (String propertyName : propertyNames) &#123;</span><br><span class="line">            System.out.println(propertyName + <span class="string">"="</span> + properties.get(propertyName));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:一般不会使用properties文件保存中文数据,否则需要额外编码转换</p><p>四.ResourceBundle工具</p><ol><li><p>ResourceBundle类的介绍<br>ResourceBundle类实际上是一个抽象类,它的子类PropertyResourceBundle,可以读取以.properties为后缀的文件中的内容</p></li><li><p>ResourceBundle类对象的创建<br>public static ResourceBundle getBundle(String baseName);用于绑定指定的.properties文件<br>注意:<br>a.xxx.properties文件必须放在类的根路径下(src目录下)<br>b.给定参数适,只需要给文件名的名字,不需要写文件后缀</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResourceBundleDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ResourceBundle data = ResourceBundle.getBundle(<span class="string">"data"</span>);</span><br><span class="line">        System.out.println(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>ResourceBundle读取陪着文件操作<br>public String getString(String key);</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResourceBundleDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ResourceBundle resourceBundle = ResourceBundle.getBundle(<span class="string">"data"</span>);</span><br><span class="line">        System.out.println(resourceBundle);</span><br><span class="line"></span><br><span class="line">        String username = resourceBundle.getString(<span class="string">"username"</span>);</span><br><span class="line">        String passwd = resourceBundle.getString(<span class="string">"passwd"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(username+<span class="string">" "</span>+passwd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结:<br>Java四大流:<br>-字节输出流OutputStream:<br>子类:FileOutputStream<br>public void close();//关闭该流,释放资源<br>public void flush();//刷新缓冲区(主要字符流使用)<br>public void write(int b);//一次写一个字节,输入是int,但是只能写一个byte的大小,即最大127<br>public void write(byte[] bs);//一次写一个字节数组<br>public void write(byte[] bs,int startIndex,int len);//一次写这一个字节数组中的一部分</p><p>构造方法三件事:<br>创建输出流对象<br>若存在覆盖,若不存在创建<br>释放资源</p><p>-字节输入流InputStream:<br>子类:FileInputStream<br>public void close();//关闭该流,释放资源<br>public int read();//一次读一个字节<br>public int read(byte[] bs);//一次读一个字节数组,返回值表示实际读取的字节个数<br>public int read(byte[] bs,int startIndex,int len);//一次读一个字节数组的一部分(基本不用)</p><p>构造方法三件事:<br>创建输入流对象<br>若存在则读取,若不存在报错<br>释放资源</p><p>-字符输出流Writer:<br>子类:FileWriter<br>public void close();//释放资源<br>public void flush();//刷新缓冲区</p><p>public int write();//一次写一个char字符,返回字符ASCII码值,为int类型<br>public int write(char[] chs);//一次写一个char字符数组<br>public int write(char[] chs,int startIndex,int len);//一次写一个char字符数组的一部分<br>public write(String str);//直接写一个字符串<br>public write(String str,int startIndex,int len);//直接写一个字符串的一部分</p><p>构造方法三件事:<br>创建字符输出流对象<br>若存在覆盖,若不存在创建<br>释放资源</p><p>-字符输入流Reader:<br>public void close();//释放资源<br>public int read();//一次读一个char字符,返回字符ASCII码值,为int类型<br>public int read(char[] chs);//一次读一个char字符数组,返回值表示实际读取的字符个数</p><p>构造方法三件事:<br>创建字符输入流对象<br>若存在覆盖,若不存在创建<br>释放资源</p><p>打印地址和内容的有哪些<br>a.数组(除了char数组),都是打印地址<br>b.集合(Collection还是Map)都是打印内容<br>c.其他类的对象,打印出来的地址还是内容,要看释放重写toString</p><p>排序的工具类<br>对数组进行排序:Arrays.sort(array,new Comparator&lt;数组元素类型&gt;);//必须引用类型<br>对List集合排序:Collections.sort(,new Comparator&lt;集合中元素对类型&gt;);<br>对Set集合排序:<br>并不是所有的Set都能排序,TreeSet才能排序:TreeSet set = new TreeSet(new 比较器对象());<br>TreeSet排序:TreeSet set = new TreeSet(new 比较器对象());//或自己写排序算法:冒泡,选择,插入,希尔,快速,堆,归并…</p><p>Stream流和IO流没有关系</p><p>字节流可以操作任何文件(一切皆字节)<br>字符流只能操作文本文件(如果使用字符流操作图片、视频,那么结果是乱码)</p><p>线程池(保存线程的集合)<br>ExecutorService service = Executors.newFixedThreadPool(线程数);<br>线程池对象底层实际上有一个集合:<br>LinkedList<Thread> ThreadList= new LinkedList<Thread>();<br>for(int i = 0;i&lt;线程数量;i++){<br>    ThreadList.add(线程对象);<br>}<br>service.submit(任务对象);<br>//ThreadList.removeFirst(线程);执行完后执行ThreadList.addLast(线程);</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>算法图解学习笔记(一)</title>
      <link href="/2020/03/19/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80/"/>
      <url>/2020/03/19/%E7%AE%97%E6%B3%95%E5%9B%BE%E8%A7%A3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<p>算法图解</p><a id="more"></a><p>1.2 二分查找<br>二分查找是一种算法，其输入是一个有序的元素列表(必须有序的原因稍后解释)。如果要 查找的元素包含在列表中，二分查找返回其位置;否则返回null。</p><p>一般而言，对于包含n个元素的列表，用二分查找最多需要log2n步，而简单查找最多需要n步。</p><p>可将一系列元素存储在一系列相邻的桶(bucket)，即数组中。这些桶从0开始编号:第一个桶的位置为#0，第二个桶为#1，第三个桶为#2，以此类推。</p><p>1.3 大O表示法是一种特殊的表示法，指出了算法的速度有多快。</p><p>大O表示法指的并非以秒为单位的速度。大O表示法 让你能够比较操作数，它指出了算法运行时间的增速。</p><p>1.3.4 一些常见的大O运行时间 下面按从快到慢的顺序列出了你经常会遇到的5种大O运行时间。<br> O(log n)，也叫对数时间，这样的算法包括二分查找。<br> O(n)，也叫线性时间，这样的算法包括简单查找。<br> O(n * log n)，这样的算法包括第4章将介绍的快速排序——一种速度较快的排序算法。<br> O(n2)，这样的算法包括第2章将介绍的选择排序——一种速度较慢的排序算法。<br> O(n!)，这样的算法包括接下来将介绍的旅行商问题的解决方案——一种非常慢的算法。</p><p>我们获得的主要启示如下。<br> 算法的速度指的并非时间，而是操作数的增速。<br> 谈论算法的速度时，我们说的是随着输入的增加，其运行时间将以什么样的速度增加。<br> 算法的运行时间用大O表示法表示。<br> O(log n)比O(n)快，当需要搜索的元素越多时，前者比后者快得越多。</p><p>1.4 小结<br> 二分查找的速度比简单查找快得多。<br> O(log n)比O(n)快。需要搜索的元素越多，前者比后者就快得越多。  算法运行时间并不以秒为单位。<br> 算法运行时间是从其增速的角度度量的。<br> 算法运行时间用大O表示法表示。</p><p>需要同时读取所有元素时，链表的效率很高:读取第一个元素，根据其中的地址再读取第二个元素，以此类推。但如果你需要跳跃，链表的效率 真的很低。</p><p>需要随机地读取元素时，数组的效率很高，因为可迅速找到数组的任何元素。<br>在链表中，元素并非靠在一起的，你无法迅速计算出第五个元素的内存地址，必须先访问第一个元素以获取第二个元素的地址，再访问第二个元素以获取第三个元素 的地址，以此类推，直到访问第五个元素。</p><p>元素的位置称为索引。因此，不说“元素20的位置为1”，而说“元素20位于索引1处”。本书 将使用索引来表示位置。</p><p>需要在中间插入元素时，数组和链表哪个更好呢?使用链表时，插入元素很简单，只需修改 它前面的那个元素指向的地址。<br>而使用数组时，则必须将后面的元素都向后移。如果没有足够的空间，可能还得将整个数组复制到其他地方!因此，当需要在中间插入元素时，链表是更好的选择。</p><p>如果你要删除元素呢?链表也是更好的选择，因为只需修改前一个元素指向的地址即可。而使用数组时，删除元素后，必须将后面的元素都向前移。<br>不同于插入，删除元素总能成功。如果内存中没有足够的空间，插入操作可能失败，但在任何情况下都能够将元素删除。</p><p>需要指出的是，仅当能够立即访问要删除的元素时，删除操作的运行时间才为O(1)。通常我 们都记录了链表的第一个元素和最后一个元素，因此删除这些元素时运行时间为O(1)。</p><p>有两 种访问方式:随机访问和顺序访问。<br>顺序访问意味着从第一个元素开始逐个地读取元素。<br>链表只能顺序访问:要读取链表的第十个元素，得先读取前九个元素，并沿链接找到第十个元素。随机 10 访问意味着可直接跳到第十个元素。<br>本书经常说数组的读取速度更快，这是因为它们支持随机访问。<br>很多情况都要求能够随机访问，因此数组用得很多。</p><p>总结：数组查找快，增删改慢。链表查找慢，增删改快。</p><p>练习<br>1.1 假设你要为饭店创建一个接受顾客点菜单的应用程序。这个应用程序存储一系列点菜 单。服务员添加点菜单，而厨师取出点菜单并制作菜肴。这是一个点菜单队列:服务 员在队尾添加点菜单，厨师取出队列开头的点菜单并制作菜肴。<br>  你使用数组还是链表来实现这个队列呢?(提示:链表擅长插入和删除，而数组擅长 随机访问。在这个应用程序中，你要执行的是哪些操作呢?)</p><p>数组，只需要查找。</p><p>1.2 我们来做一个思考实验。假设Facebook记录一系列用户名，每当有用户试图登录 Facebook时，都查找其用户名，如果找到就允许用户登录。由于经常有用户登录 Facebook，因此需要执行大量的用户名查找操作。假设Facebook使用二分查找算法， 而这种算法要求能够随机访问——立即获取中间的用户名。考虑到这一点，应使用数 组还是链表来存储用户名呢?</p><p>数组，查找快</p><p>1.3 经常有用户在Facebook注册。假设你已决定使用数组来存储用户名，在插入方面数组 有何缺点呢?具体地说，在数组中添加新用户将出现什么情况?</p><p>数组默认内存占用可能不足以插入新用户，最终创建新数组来插入新用户。</p><p>1.4 实际上，Facebook存储用户信息时使用的既不是数组也不是链表。假设Facebook使用 的是一种混合数据:链表数组。这个数组包含26个元素，每个元素都指向一个链表。<br>例如，该数组的第一个元素指向的链表包含所有以A打头的用户名，第二个元素指向的 链表包含所有以B打头的用户名，以此类推。<br>假设Adit B在Facebook注册，而你需要将其加入前述数据结构中。因此，你访问数组的 第一个元素，再访问该元素指向的链表，并将Adit B添加到这个链表末尾。现在假设你要查找Zakhir H。因此你访问第26个元素，再在它指向的链表(该链表包含所有以z打头的用户名)中查找Zakhir H。 </p><p>请问，相比于数组和链表，这种混合数据结构的查找和插入速度更慢还是更快?你不必给出大O运行时间，只需指出这种新数据结构的查找和插入速度更快还是更慢。</p><p>是，快</p><p>2.3 选择排序</p><p>需要检查的元素数越来越少<br>随着排序的进行，每次需要检查的元素数在逐渐减少，最后一次需要检查的元素都只有一 个。既然如此，运行时间怎么还是O(n2)呢?这个问题问得好，这与大O表示法中的常数相关。 第4章将详细解释，这里只简单地说一说。<br>你说得没错，并非每次都需要检查n个元素。第一次需要检查n个元素，但随后检查的元素 数依次为n  1, n – 2, …, 2和1。平均每次检查的元素数为1/2 × n，因此运行时间为O(n × 1/2 × n)。 但大O表示法省略诸如1/2这样的常数(有关这方面的完整讨论，请参阅第4章)，因此简单地写 作O(n × n)或O(n2)。</p><p>选择排序是一种灵巧的算法，但其速度不是很快。快速排序是一种更快的排序算法，其运行 时间为O(n log n)</p><p>2.4 小结<br> 计算机内存犹如一大堆抽屉。<br> 需要存储多个元素时，可使用数组或链表。<br> 数组的元素都在一起。<br> 链表的元素是分开的，其中每个元素都存储了下一个元素的地址。<br> 数组的读取速度很快。<br> 链表的插入和删除速度很快。<br> 在同一个数组中，所有元素的类型都必须相同(都为int、double等)。</p><p>3.1 递归<br>递归只是让解决方案更清晰，并没有性能上的优势。实际上，在有些情况下，使用循环的性能更好。</p><p>编写递归函数时，必须告诉它何时停止递归。正因为如此，每个递归函数都有两部分:基线条件(base case)和递归条件(recursive case)。递归条件指的是函数调用自己，而基线条件则指的是函数不再调用自己，从而避免形成无限循环。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（十五）</title>
      <link href="/2020/03/19/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89/"/>
      <url>/2020/03/19/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•File类<br>•递归<br>•IO流<br>•字节流</p><a id="more"></a><p>一.File类<br>1.1 File类的作用<br>File类可以表示文件或文件夹,是文件和目录的抽象表示<br>•文件和目录是可以通过File封装成对象的<br>•对于File而言，其封装的并不是一个真正存在的文件，仅仅是一个路径名。将来通过具体的操作把这个路径转换为具体存在的。</p><p>1.2 File类的构造</p><table><thead><tr><th>方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td>public File(String path);</td><td align="center">通过将给定的路径名字符串转换为抽象路径名来创建新的File实例</td></tr><tr><td>public File(String parent,String child);</td><td align="center">从父路径名字符串和子路径名字符串创建新的File实例</td></tr><tr><td>public File(File parent,String child);</td><td align="center">从父抽象路径名和子路径名字符串创建新的File实例</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        File f1 = <span class="keyword">new</span> File(<span class="string">"/Users/u/Desktop/12306Bypass/Logs/2019-01-03.txt"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(f1);</span><br><span class="line"></span><br><span class="line">        File f2 = <span class="keyword">new</span> File(<span class="string">"/Users/u/Desktop"</span>,<span class="string">"12306Bypass/Logs/2019-01-03.txt"</span>);</span><br><span class="line">        System.out.println(f2);</span><br><span class="line"></span><br><span class="line">        File parent = <span class="keyword">new</span> File(<span class="string">"/Users/u/Desktop"</span>);</span><br><span class="line">        File f3 = <span class="keyword">new</span> File(parent,<span class="string">"12306Bypass/Logs/2019-01-03.txt"</span>);</span><br><span class="line">        System.out.println(f3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.3 File类的获取方法<br>public String getAbsolutePath();//获取该File对象的绝对路径<br>public String getPath();//获取该File对象构造时,传入的对象<br>public String getName();//获取该File对象的代表的文件或文件夹的名字<br>public long length();//获取该File对象的文件字节</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileDemo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File f1 = <span class="keyword">new</span> File(<span class="string">"~/Desktop/12306Bypass/Logs/2019-01-03.txt"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//getAbsolutePath</span></span><br><span class="line">        String absolutePath = f1.getAbsolutePath();</span><br><span class="line">        System.out.println(absolutePath);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//getPath</span></span><br><span class="line">        String path = f1.getPath();</span><br><span class="line">        System.out.println(path);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//name</span></span><br><span class="line">        String name = f1.getName();</span><br><span class="line">        System.out.println(name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//length</span></span><br><span class="line">        <span class="keyword">long</span> length = f1.length();</span><br><span class="line">        System.out.println(length+<span class="string">" byte"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:length方法只能获取文件大小,不能获取文件夹大小</p><p>1.4 相对路径和绝对路径<br>绝对路径:以盘符开头的路径,一个完整的路径<br>例如:/Users/u/Desktop”,”12306Bypass/Logs/2019-01-03.txt</p><p>相对路径:以当前项目的根目录为起始的路径</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileDemo03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File f1 = <span class="keyword">new</span> File(<span class="string">"/Users/u/Desktop/12306Bypass/Logs/2019-01-03.txt"</span>);</span><br><span class="line"></span><br><span class="line">        File f2 = <span class="keyword">new</span> File(<span class="string">"2019-01-04.txt"</span>);</span><br><span class="line"></span><br><span class="line">        String absolutePath = f2.getAbsolutePath();</span><br><span class="line">        System.out.println(absolutePath);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.5 File类的判断方法<br>•public boolean exists();//判断该File对象代表的文件和文件夹是否存在<br>•public boolean isDirectory();//判断该File对象代表的是否是文件夹<br>•public boolean isFile();//判断该File对象代表的是否是文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileDemo04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"/Users/u/Desktop/12306Bypass/Logs/2019-01-03.txt"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> b = file.exists();</span><br><span class="line">        System.out.println(b);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> directory = file.isDirectory();</span><br><span class="line">        System.out.println(directory);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> file1 = file.isFile();</span><br><span class="line">        System.out.println(file1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.6 File类的创建删除方法<br>public boolean mkdrir();//创建单级文件夹,返回值表示是否成功<br>public boolean mkdrirs();//创建多级文件夹,返回值表示是否成功</p><p>public boolean createNewFile();//创建文件,返回值表示是否成功</p><p>public boolean delete();//删除该File对象或文件夹,返回值表示是否成功</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileDemo05</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"2.txt"</span>);</span><br><span class="line">        <span class="keyword">boolean</span> newFile = file.createNewFile();</span><br><span class="line">        System.out.println(newFile);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> mkdir = file.mkdir();</span><br><span class="line">        System.out.println(mkdir);</span><br><span class="line"></span><br><span class="line">        File file2 = <span class="keyword">new</span> File(<span class="string">"a/b/c/2.txt"</span>);</span><br><span class="line">        <span class="keyword">boolean</span> mkdirs = file2.mkdirs();</span><br><span class="line">        System.out.println(mkdirs);</span><br><span class="line"></span><br><span class="line">        File file1 = <span class="keyword">new</span> File(<span class="string">"2.txt"</span>);</span><br><span class="line">        <span class="keyword">boolean</span> delete = file1.delete();</span><br><span class="line">        System.out.println(delete);</span><br><span class="line"></span><br><span class="line">        File file3 = <span class="keyword">new</span> File(<span class="string">"a/b/c/2.txt"</span>);</span><br><span class="line">        <span class="keyword">boolean</span> delete1 = file3.delete();</span><br><span class="line">        System.out.println(delete1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        File file4 = <span class="keyword">new</span> File(<span class="string">"a/b/c/2.txt"</span>);</span><br><span class="line">        <span class="keyword">boolean</span> delete2 = file4.delete();</span><br><span class="line">        System.out.println(delete2);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:<br>a.mkdir 和 mkdirs的区别<br>b.delete方法要么删文件,要么删文件夹,不能删除空文件夹</p><p>1.7 File类的遍历目录方法<br>public String[] list();//列出当前文件夹下所有直接的文件和文件夹的名字<br>public File[] listFiles();//列出当前文件夹下所有直接的文件和文件夹的File对象【重要】</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileDemo06</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"a"</span>);</span><br><span class="line">        String[] list = file.list();</span><br><span class="line">        <span class="keyword">for</span> (String filename : list</span><br><span class="line">        ) &#123;</span><br><span class="line">            System.out.println(filename);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        File[] files = file.listFiles();</span><br><span class="line">        <span class="keyword">for</span> (File filearr : files) &#123;</span><br><span class="line">            System.out.println(filearr);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:list和listFiles只能列出直接的子文件或子文件夹</p><p>二.递归<br>2.1 什么是递归<br>递归不是Java语言独有（基本上所有语言都可以递归）<br>递归就是:在方法中调用该方法本身</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recurrence</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        method();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"method"</span>);</span><br><span class="line">        <span class="comment">//调用自己</span></span><br><span class="line">        method();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>无限递归（死递归）出现这个错误 StackOverflowError 栈溢出错误</p><p>如果要使用递归,必须保证递归有出口（结束条件）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recurrence</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        method1(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有出口递归</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"method1 "</span>+n);</span><br><span class="line">        <span class="comment">//调用自己</span></span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;<span class="comment">//递归出口</span></span><br><span class="line">        &#125;</span><br><span class="line">        method1(n-<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public static void method() &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println("method");</span></span><br><span class="line"><span class="comment">//        //调用自己</span></span><br><span class="line"><span class="comment">//        method();</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:就算递归有出口,也要保证递归在运行到出口之前次数也不能太多（太多也会爆栈）</p><p>使用递归三大步骤:<br>a.先定义一个方法<br>b.找规律调用自己<br>c.让递归有出口（结束条件）</p><p>2.2 递归求和案例<br>测试案例:求1-n的和<br><font color=red>开发中不要用递归来求和,只用循环</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recurrence02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = getSum(<span class="number">10</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> Recurrence_getSum = Recurrence_getSum(<span class="number">100</span>);</span><br><span class="line">        System.out.println(Recurrence_getSum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用递归</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Recurrence_getSum</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Recurrence_getSum(n - <span class="number">1</span>) + n;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//使用循环</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.3 递归求阶乘案例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recurrence03_getFactorial</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = getFactorial(<span class="number">10</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> recurrenceGetSum = Recurrence_getFactorial(<span class="number">10</span>);</span><br><span class="line">        System.out.println(recurrenceGetSum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用递归</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Recurrence_getFactorial</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Recurrence_getFactorial(n - <span class="number">1</span>) * n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用循环</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getFactorial</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> Factorial = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            Factorial *= i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Factorial;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.4 文件搜索案例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Recurrence04_File</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        File fileDir = <span class="keyword">new</span> File(<span class="string">"/Users/u/Downloads/黑马基础班/黑马就业班"</span>);</span><br><span class="line">        findTxtFile(fileDir);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">findTxtFile</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        File[] files = file.listFiles();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (File filearr : files) &#123;</span><br><span class="line">            <span class="keyword">if</span> (filearr.getName().endsWith(<span class="string">".java"</span>) &amp;&amp; filearr.isFile()) &#123;</span><br><span class="line">                System.out.println(filearr);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(filearr.isDirectory())&#123;</span><br><span class="line">                findTxtFile(filearr);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>三.IO流的概述<br>3.1 什么是IO流<br>I:Input输入流,数据从外部设备到程序中,”读流”<br>O:Outpur输出流,数据从程序写到外部设备,”写流”<br>流:一种抽象概念,数据传输的总称。数据在设备间的传输称为流，流的本质是数据传输</p><p>Java中流的流向都是以内存角度而言的</p><p>3.2 IO流的分类<br>a.根据流的方向分类<br>输入流:读数据(Input–&gt;Read)<br>输出流:写数据(Output–&gt;Write)</p><p>b.根据流中的数据类型分类<br>字节流:byte<br>字符流:char</p><p>以上两种分类可以综和为四大类<br>字节输入流,字节输出流,字符输入流,字符输出流</p><p>3.3 Java中的四大IO流(其他流都是这四个之一的子类)<br>字节输入流:InputStream(顶层父类,抽象类)<br>字节输出流:OutputStream(顶层父类,抽象类)</p><p>字符输入流:Reader(顶层父类,抽象类)<br>字符输出流:Writer(顶层父类,抽象类)</p><p>技巧：Java中所有的流，都会是以上四个流中某一个的子类，且具体的流的命名是非常有规范的:功能名+父类名<br>如:<br>FileWriter,向文件中写出字符为单位的数据<br>FileInputStream,从文件中读取以字节为单位的数据</p><p>四.字节流<br>4.1 万物皆对象和IO流一切皆字节<br>万物皆字节对象:现实生活中的任何东西，我们在Java中都可以使用一个对象表示<br>IO流中的一切皆字节：电脑所有的数据，最终都是由字节组成的(二进制)</p><p>4.2 字节输出流<br>顶层父类(抽象类)<br>共性方法:<br>public void close();//关闭该流，释放资源<br>public void flush();//刷新缓冲区(主要字符流使用)</p><p>public void write(int b);//一次写一个字节，输入是int，但是只能写一个byte的大小，即最大127<br>public void write(byte[] bs);//一次写一个字节数组<br>public void write(byte[] bs,int startIndex,int len);//一次写这一个字节数组中的一部分</p><p>4.4 FileOutputStream类的使用<br>文件的字节输出流(向文件中写字节数据)</p><p>•构造方法<br>public FileOutputStream(String path);//必须传入文件的路径<br>public FileOutputStream(File file);//必须传入文件的File对象</p><p>public FileOutputStream(String path);//必须传入文件的路径</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo08_FileOutputStream</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"1.txt"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        创建文件</span></span><br><span class="line"><span class="comment">        判断文件是否存在，如果存在，则清空该文件，若不存在，则创建文件</span></span><br><span class="line"><span class="comment">        让fos与1.txt绑定</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•写字节数据的三个方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileOutputStream_Demo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"1.txt"</span>);</span><br><span class="line"></span><br><span class="line">        fos.write(<span class="number">97</span>);</span><br><span class="line">        fos.write(<span class="number">57</span>);</span><br><span class="line">        fos.write(<span class="number">55</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bs1 =&#123;<span class="number">100</span>,<span class="number">101</span>,<span class="number">102</span>&#125;;</span><br><span class="line">        fos.write(bs1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="string">"HelloWorld"</span>.getBytes();</span><br><span class="line">        fos.write(bytes);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bs2 =&#123;<span class="number">100</span>,<span class="number">101</span>,<span class="number">102</span>&#125;;</span><br><span class="line">        fos.write(bs2,<span class="number">1</span>,<span class="number">1</span>);<span class="comment">//数组，下标，个数</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•如何追加续写<br>public FileOutputStream(String path,boolean append);//append表示是否追加<br>public FileOutputStream(File file,boolean append);//append表示是否追加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileOutputStream_Demo03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"1.txt"</span>,<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        fos.write(<span class="number">97</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•如何换行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileOutputStream_Demo04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"1.txt"</span>,<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            fos.write(<span class="string">"java \n"</span>.getBytes());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•flush<br>public void flush();//对于字节输出流没用</p><p>•close<br>public void close();//关闭该流，释放资源<br>一个流使用完毕，及时释放流，别的程序就可以使用该资源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileOutputStream_Demo04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"1.txt"</span>, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            fos.write(<span class="string">"java \n"</span>.getBytes());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fos.close();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//程序不会停止，但是流已关闭，可以对文件进行增删改操作</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.4 字节输入流InputStream<br>顶层父类(抽象类)<br>共性方法:<br>public void close();//关闭该流，释放资源<br>public int read();//一次读一个字节<br>public int read(byte[] bs);//一次读一个字节数组，返回值表示实际读取的字节个数<br>public int read(byte[] bs,int startIndex,int len);//一次读一个字节数组的一部分(基本不用)</p><p>4.5 FileInputStream的作用<br>文件的字节输入流(向文件中读字节数据)<br>•构造方法<br>public FileInputputStream(String path);//必须传入文件的路径<br>public FileInputStream(File file);//必须传入文件的File对象</p><p>public FileInputStream(String path);//必须传入文件的路径</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileInputStream_Demo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"1.txt"</span>);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        创建文件对象</span></span><br><span class="line"><span class="comment">        判断文件是否存在，如果存在，无动作</span></span><br><span class="line"><span class="comment">        若不存在，则直接抛出异常FileNotFoundException</span></span><br><span class="line"><span class="comment">        让fis与1.txt绑定</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•读取一个字节</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileInputStream_Demo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"1.txt"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> read = fis.read();</span><br><span class="line">        System.out.println(read);<span class="comment">//97</span></span><br><span class="line">        System.out.println((<span class="keyword">char</span>)read);<span class="comment">//a</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//一次读取一个字节的标准循环代码</span></span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((b = fis.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(b);</span><br><span class="line">            System.out.println((<span class="keyword">char</span>)b);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        (b = fis.read()) != -1</span></span><br><span class="line"><span class="comment">        先读 fis.read()</span></span><br><span class="line"><span class="comment">        赋值 b=读取字节</span></span><br><span class="line"><span class="comment">        判断 b!=-1</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        fis.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•读取一个字节数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileInputStream_Demo03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"1.txt"</span>);</span><br><span class="line">        <span class="comment">//读取字节数组</span></span><br><span class="line">        <span class="keyword">byte</span>[] bs = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">20</span>];<span class="comment">//实际开发中，一般写1024byte即1KB，或其整数倍</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        int len = fis.read(bs);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        System.out.println(len);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        System.out.println(Arrays.toString(bs));</span></span><br><span class="line"><span class="comment">//        System.out.println(new String(bs,0,len));</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> len =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len = fis.read(bs))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="keyword">new</span> String(bs,<span class="number">0</span>,len));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        (len = fis.read(bs))!=-1</span></span><br><span class="line"><span class="comment">        先读  fis.read(bs)</span></span><br><span class="line"><span class="comment">        赋值  len = 实际读取读个数</span></span><br><span class="line"><span class="comment">        判断  len !=-1</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        fis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.6 字节流练习复制图片<br>•复制文件的过程<br>FileInputStream-&gt;一次读一个数组，写一个数组-&gt;FileOutputStream</p><p>•代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Copy_File</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">"1.txt"</span>);</span><br><span class="line"></span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"copy.txt"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bs = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((len = fis.read(bs)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">//为了防止最后一次读取时，写入多余的数据</span></span><br><span class="line">            fos.write(bs,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//原则:先开后关</span></span><br><span class="line">            fos.close();</span><br><span class="line">            fis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结:<br>File创建方式:<br>public File(String path);<br>public File(String parent,String child);<br>public File(File parent,String child);</p><p>File常见方法:<br>public String getAbsolutePath();<br>public String getPath();<br>public String getName();<br>public long length();</p><p>public boolean exists();<br>public boolean isDirectory();<br>public boolean isFile();</p><p>public boolean mkdrir();<br>public boolean mkdrirs();<br>public boolean createNewFile();</p><p>public boolean delete();</p><p>public String[] list();<br>public File[] listFiles();</p><p>绝对路径和相对路径:<br>绝对路径:盘符开头<br>相对路径:当前目录的根目录</p><p>递归含义:<br>方法内部调用方法本身</p><p>递归为什么出现内存溢出:<br>方法不断入栈，栈满则溢出<br>IO流的分类和功能:<br>输入流,输出流,字节流(byte单位),字符流(char单位)</p><p>字节输出流FileOutputStream写出数据到文件:<br>public void write(int b);<br>public void write(byte[] bs);<br>public void write(byte[] bs,int startIndex,int len);</p><p>字节输入流FileInputStream读取文件数据:<br>public int read();<br>public int read(byte[] bs);</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（十四）</title>
      <link href="/2020/03/19/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/"/>
      <url>/2020/03/19/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•Lambda表达式<br>•Stream流</p><a id="more"></a><p>一.Lambda表达式<br>1.1 函数式编程的思想<br>尽量简单的格式简化面对对象的复杂语法。<br>面对对象是以何种形式去做，而函数式编程思想强调是拿什么东西做什么事，而不是强调以何种形式去做。</p><p>1.2 冗余的Runnable代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestRUNNABLEDEMO</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread t1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(Thread.currentThread().getName()+<span class="string">"RUNNABLE"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//为了避免创建一个新类，不得不创建匿名内部类</span></span><br><span class="line">        <span class="comment">//为了迎合面向对象的语法，只能使用Runnable的实现类</span></span><br><span class="line">        <span class="comment">//重写时，方法必须和接口中一模一样</span></span><br><span class="line">        <span class="comment">//真正需要的其实就是任务代码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.3 函数式编程Lambda的体验</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Thread t2 =<span class="keyword">new</span> Thread(()-&gt;&#123;</span><br><span class="line">    System.out.println(Thread.currentThread().getName()+<span class="string">"RUNNABLE"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">t2.start();</span><br></pre></td></tr></table></figure><p>1.4 Lambda标准格式介绍<br>(参数列表) -&gt; {方法体; return 返回值;}</p><p>详情介绍:<br>|          |                                                                         |<br>|———-|:———————————————————————-:|<br>| (参数列表) |   相当于方法的参数，如果没有参数，那么只写小括号即可(),注意小括号不能省略         |<br>|    -&gt;     |  固定用法，代码拿着前面的参数，做什么事                                       |<br>|   {}      |  大括号中先写计算过程，如果有返回值return返回值;如果没有返回值，return语句可以省略 | </p><p>1.5 Lambda的参数和返回值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test_ComparatorDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Integer[] num = &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">61</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">34</span>, <span class="number">56</span>, <span class="number">345</span>&#125;;</span><br><span class="line"></span><br><span class="line">        Arrays.sort(num);</span><br><span class="line">        System.out.println(Arrays.toString(num));</span><br><span class="line"></span><br><span class="line">        Arrays.sort(num, <span class="keyword">new</span> Comparator&lt;Integer&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Integer o1, Integer o2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> o1 - o2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(Arrays.toString(num));</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test_ComparatorDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Integer[] num = &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">61</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">34</span>, <span class="number">56</span>, <span class="number">345</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用Lambda表达式改写上方冗余代码</span></span><br><span class="line">        Arrays.sort(num, (Integer o1, Integer o2) -&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> o2 - o1;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(Arrays.toString(num));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test_ComparatorDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Dog[] dog = <span class="keyword">new</span> Dog[<span class="number">4</span>];</span><br><span class="line">        dog[<span class="number">0</span>] = <span class="keyword">new</span> Dog(<span class="number">1</span>, <span class="string">"a"</span>, <span class="number">2</span>);</span><br><span class="line">        dog[<span class="number">1</span>] = <span class="keyword">new</span> Dog(<span class="number">2</span>, <span class="string">"b"</span>, <span class="number">2</span>);</span><br><span class="line">        dog[<span class="number">2</span>] = <span class="keyword">new</span> Dog(<span class="number">3</span>, <span class="string">"c"</span>, <span class="number">3</span>);</span><br><span class="line">        dog[<span class="number">3</span>] = <span class="keyword">new</span> Dog(<span class="number">4</span>, <span class="string">"d"</span>, <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">        Arrays.sort(dog, <span class="keyword">new</span> Comparator&lt;Dog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Dog o1, Dog o2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> o1.age - o2.age;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Dog d : dog) &#123;</span><br><span class="line">            System.out.println(d);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test_ComparatorDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Dog[] dog = <span class="keyword">new</span> Dog[<span class="number">4</span>];</span><br><span class="line">        dog[<span class="number">0</span>] = <span class="keyword">new</span> Dog(<span class="number">1</span>, <span class="string">"a"</span>, <span class="number">2</span>);</span><br><span class="line">        dog[<span class="number">1</span>] = <span class="keyword">new</span> Dog(<span class="number">2</span>, <span class="string">"b"</span>, <span class="number">2</span>);</span><br><span class="line">        dog[<span class="number">2</span>] = <span class="keyword">new</span> Dog(<span class="number">3</span>, <span class="string">"c"</span>, <span class="number">3</span>);</span><br><span class="line">        dog[<span class="number">3</span>] = <span class="keyword">new</span> Dog(<span class="number">4</span>, <span class="string">"d"</span>, <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">        Arrays.sort(dog,(Dog o1,Dog o2)-&gt;&#123;<span class="keyword">return</span> o2.age-o1.age;&#125;);</span><br><span class="line">        <span class="keyword">for</span> (Dog d : dog) &#123;</span><br><span class="line">            System.out.println(d);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.6 Lambda的省略格式<br>a.参数类型可以省略<br>b.如果参数只有一个，那么小括号可以省略<br>c.如果{}中的代码可以写成一句代码，那么”{}”，”return”关键字和”;”可以同时省略(不能只省略一部分)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(()-&gt;&#123;System.out.println(Thread.currentThread().getName()+<span class="string">"RUNNABLE"</span>);&#125;).start();</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Thread(()-&gt;System.out.println(Thread.currentThread().getName()+<span class="string">"RUNNABLE"</span>)).start();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Arrays.sort(num, (Integer o1, Integer o2) -&gt; &#123;<span class="keyword">return</span> o2 - o1;&#125;);</span><br><span class="line"></span><br><span class="line">Arrays.sort(num, (o1, o2) -&gt; o2 - o1);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Arrays.sort(dog, (Dog o1, Dog o2) -&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> o2.age - o1.age;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Arrays.sort(dog, (o1, o2) -&gt; o2.age - o1.age);</span><br></pre></td></tr></table></figure><p>1.7 强烈注意：Lambda的使用前提<br>a.Lambda只能用于替换有且仅有一个抽象方法的接口的匿名内部类对象，这种接口称为函数式接口<br>b.Lambda具有上下午推断的功能，所以才会出现Lambda的省略格式</p><p>二.Stream流<br>2.1 引入：传统的集合操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;String &gt; list = <span class="keyword">new</span> ArrayList&lt;String &gt;();</span><br><span class="line"></span><br><span class="line">        Collections.addAll(list,<span class="string">"zaa"</span>,<span class="string">"wdt"</span>,<span class="string">"xcs"</span>,<span class="string">"zd"</span>,<span class="string">"lf"</span>);</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String &gt; z = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String name:list)&#123;</span><br><span class="line">            <span class="keyword">if</span>(name.startsWith(<span class="string">"z"</span>))&#123;</span><br><span class="line">                z.add(name);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String &gt; Three = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String name:list)&#123;</span><br><span class="line">            <span class="keyword">if</span>(name.length()==<span class="number">3</span>)&#123;</span><br><span class="line">                Three.add(name);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        System.out.println(z);</span><br><span class="line">        System.out.println(Three);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.2 循环遍历的弊端分析<br>Lambda注重于做什么，传统的面向对象注重于怎么做</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (String name:list)&#123;</span><br><span class="line">    <span class="keyword">if</span>(name.startsWith(<span class="string">"z"</span>))&#123;</span><br><span class="line">        z.add(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了解决面向对象的语法复杂形式，引入了一种新的技术:Stream 流式思想</p><p>2.3 Stream的优雅写法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list.stream().filter(s -&gt; s.startsWith(<span class="string">"x"</span>)).filter(s -&gt; s.length() == <span class="number">3</span>).forEach(s -&gt; System.out.println(s));</span><br></pre></td></tr></table></figure><p>Stream流的使用<br>•生成流<br>通过数据源(集合，数组等)生成流 list.stream();<br>•中间操作<br>•终结操作<br>一个流只能有一个终结操作，当这个操作执行完后，无法再被操作。</p><p>2.4 流式思想的概述</p><p>2.5 三种获取流的方式<br>a.Collection集合获取流<br>    Stream<E> s = 集合对象.stream();</p><p>b.Map集合不能直接获取流，但是可以间接获取流<br>map.keySet().stream();获取map的键<br>map.values().stream();获取map的值流<br>map.entrySet().stream();获取map的键值对流</p><p>c.数组获取流<br>Stream&lt;数组中元素的类型&gt; A =Stream.of(数据类型…变量名);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获取各种容器的流</span></span><br><span class="line">    <span class="comment">//单列集合</span></span><br><span class="line">    ArrayList&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String &gt;();</span><br><span class="line">    Stream&lt;String &gt; s1 = list.stream();</span><br><span class="line"></span><br><span class="line">    HashMap&lt;String ,Integer&gt; map = <span class="keyword">new</span> HashMap&lt;String, Integer&gt;(<span class="number">16</span>);</span><br><span class="line">    <span class="comment">//键流</span></span><br><span class="line">    Stream&lt;String&gt; keyStream = map.keySet().stream();</span><br><span class="line">    <span class="comment">//值流</span></span><br><span class="line">    Stream&lt;Integer&gt; valueStream = map.values().stream();</span><br><span class="line">    <span class="comment">//键值对流</span></span><br><span class="line">    Stream&lt;Map.Entry&lt;String,Integer&gt;&gt; entryStream = map.entrySet().stream();</span><br><span class="line"></span><br><span class="line">    Integer[] arr = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>&#125;;</span><br><span class="line">    Stream&lt;Integer&gt; num =  Stream.of(arr);</span><br><span class="line">    Stream&lt;Integer&gt; nums = Stream.of(<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.6 Stream流中的常用方法<br>•逐个处理:forEach</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StreamDemo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Stream&lt;Integer&gt; s1 = Stream.of(<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>);</span><br><span class="line"><span class="comment">//        s1.forEach(new Consumer&lt;Integer&gt;() &#123;</span></span><br><span class="line"><span class="comment">//            @Override</span></span><br><span class="line"><span class="comment">//            public void accept(Integer integer) &#123;</span></span><br><span class="line"><span class="comment">//                System.out.println(integer);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;);</span></span><br><span class="line"></span><br><span class="line">        s1.forEach(integer -&gt; System.out.println(integer));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•统计个数:count</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Stream&lt;Integer&gt; s1 = Stream.of(<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> count = s1.count();</span><br><span class="line">    System.out.println(count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•过滤:filter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        s1.filter(new Predicate&lt;Integer&gt;() &#123;</span></span><br><span class="line"><span class="comment">//            @Override</span></span><br><span class="line"><span class="comment">//            public boolean test(Integer integer) &#123;</span></span><br><span class="line"><span class="comment">////                if (integer&gt;100000) &#123;</span></span><br><span class="line"><span class="comment">////                    return true;</span></span><br><span class="line"><span class="comment">////                &#125;</span></span><br><span class="line"><span class="comment">//                return integer&gt;1000;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;);</span></span><br><span class="line">        Stream&lt;Integer&gt; integerStream = s1.filter(integer -&gt; integer &gt; <span class="number">1000</span>);</span><br><span class="line">        integerStream.forEach( );</span><br></pre></td></tr></table></figure><p>•取前几个:limit</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;Integer&gt; limit = s1.limit(<span class="number">3</span>);</span><br><span class="line">limit.forEach(System.out::println);</span><br></pre></td></tr></table></figure><p>•跳过前几个:skip</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;Integer&gt; skip = s1.skip(<span class="number">2</span>);</span><br><span class="line">skip.forEach(System.out::println);</span><br></pre></td></tr></table></figure><p>•映射方法:map</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        Stream&lt;String&gt; str = s6.map(new Function&lt;Integer, String&gt;() &#123;</span></span><br><span class="line"><span class="comment">//            @Override</span></span><br><span class="line"><span class="comment">//            public String apply(Integer integer) &#123;</span></span><br><span class="line"><span class="comment">//               return String.valueOf(integer);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;);</span></span><br><span class="line"></span><br><span class="line">        Stream&lt;String&gt; str = s6.map(s -&gt; String.valueOf(s));</span><br><span class="line">        str.forEach(s -&gt; System.out.println(s));</span><br></pre></td></tr></table></figure><p>mapToInt(ToIntFunction mapper):返回一个IntStream其中包含将给定函数应用于此流的结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> result = list.stream().mapToInt(Integer::parseInt).sum;</span><br><span class="line">System.out.println(result);</span><br></pre></td></tr></table></figure><p>•静态方式合并流:concat</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Stream&lt;T&gt; <span class="title">concat</span><span class="params">(Stream&lt;T&gt; s1,Stream&lt;T&gt; s2)</span></span>;</span><br><span class="line"></span><br><span class="line">Stream&lt;String &gt; s7 = Stream.of(<span class="string">"a"</span>,<span class="string">"b"</span>);</span><br><span class="line">Stream&lt;String &gt; s8 = Stream.of(<span class="string">"c"</span>,<span class="string">"d"</span>);</span><br><span class="line"></span><br><span class="line">Stream&lt;String &gt; ss = Stream.concat(s7, s8);</span><br><span class="line">ss.forEach(s-&gt; System.out.println(s));</span><br></pre></td></tr></table></figure><p>•静态方式合并流:distinct –返回该流的不同元素(根据Object.equals(Object))组成的流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Stream&lt;T&gt; <span class="title">concat</span><span class="params">(Stream&lt;T&gt; s1,Stream&lt;T&gt; s2)</span></span>;</span><br><span class="line"></span><br><span class="line">Stream&lt;String &gt; s7 = Stream.of(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"d"</span>);</span><br><span class="line">Stream&lt;String &gt; s8 = Stream.of(<span class="string">"c"</span>,<span class="string">"d"</span>,<span class="string">"a"</span>);</span><br><span class="line"></span><br><span class="line">Stream&lt;String &gt; ss = Stream.concat(s7, s8).distinct().forEach(System.out::println);</span><br></pre></td></tr></table></figure><p>•sorted():返回由此流的元素组成的流，根据自然顺序排序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Stream&lt;T&gt; <span class="title">concat</span><span class="params">(Stream&lt;T&gt; s1,Stream&lt;T&gt; s2)</span></span>;</span><br><span class="line"></span><br><span class="line">Stream&lt;String &gt; s7 = Stream.of(<span class="string">"a"</span>,<span class="string">"b"</span>);</span><br><span class="line">Stream&lt;String &gt; s8 = Stream.of(<span class="string">"c"</span>,<span class="string">"d"</span>);</span><br><span class="line"></span><br><span class="line">Stream&lt;String &gt; ss = Stream.concat(s7, s8).sorted((s1,s2)-&gt;&#123;</span><br><span class="line">    <span class="keyword">int</span> num = s1.len()-s2.length();</span><br><span class="line">    <span class="keyword">int</span> num2 = num==<span class="number">0</span>?s1.compareTo(s2):sum;</span><br><span class="line">    <span class="keyword">return</span> sum2;</span><br><span class="line">&#125;).forEach(System.out::println);</span><br></pre></td></tr></table></figure><p>•sorted(Comparator comparator):返回由该流的元素组成的流，根据提供的comparator进行排序</p><p>注意：<br>a.如果是两个以上流的合并，需要多次两两合并<br>有filter,limit,skip,map,concat</p><p>b.如果两个流的泛型不一致也可以合并，合并之后新流的泛型是他们的共同父类<br>有forEach,count</p><p>2.7 练习：集合元素的处理(Stream方式)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StreamDemo04_Lambda</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; s1 = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        List&lt;String&gt; s2 = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">        Collections.addAll(s1, <span class="string">"aa"</span>, <span class="string">"abc"</span>, <span class="string">"abcd"</span>);</span><br><span class="line">        Collections.addAll(s2, <span class="string">"ba"</span>, <span class="string">"cd"</span>, <span class="string">"ccc"</span>, <span class="string">"abcd"</span>);</span><br><span class="line"></span><br><span class="line">        Stream&lt;String&gt; a = s1.stream().filter(s -&gt; s.length() == <span class="number">3</span>).limit(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        Stream&lt;String&gt; b = s2.stream().filter(s -&gt; s.startsWith(<span class="string">"a"</span>)).skip(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        Stream&lt;String&gt; ss = Stream.concat(a, b);</span><br><span class="line"></span><br><span class="line">        Stream&lt;Person&gt; personStream = ss.map(s -&gt; <span class="keyword">new</span> Person(s));</span><br><span class="line"></span><br><span class="line">        personStream.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.8 总结：函数拼接和终结方法<br>函数拼接方法：<br>调用该方法之后，返回还是一个流对象。<br>由于这种方法返回的还是流对象，因此支持链式编程</p><p>终结方法：<br>调用该方法之后，返回值不是流或无返回值<br>由于终结方法返回的不是流对象，因此不支持链式编程，并且当某个流调用终结方法之后，该流就关闭了，不能继续调用其他方法</p><p>2.9 收集Stream的结果</p><p>可以把流收集到集合中:调用流的collect方法即可<br>可以把流收集到数组中:调用toArray()方法即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StreamDemo03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Stream&lt;Integer&gt; s1 = Stream.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">        Stream&lt;Integer&gt; s2 = Stream.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">        Stream&lt;Integer&gt; s3 = Stream.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//收集到集合</span></span><br><span class="line">        List&lt;Integer&gt; collect = s1.collect(Collectors.toList());</span><br><span class="line">        System.out.println(collect);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//收集到Set</span></span><br><span class="line">        Set&lt;Integer&gt; collect1 = s2.collect(Collectors.toSet());</span><br><span class="line">        System.out.println(collect1);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//收集到数组</span></span><br><span class="line">        Object[] objects = s3.toArray();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(Object obj:objects)&#123;</span><br><span class="line">            System.out.println(obj);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:<br>a.一个流只能收集一次（第二次会报错）<br>b.如果收集到数组，默认是Object数组；</p><p>总结：<br>1.Lambda<br>标准格式:(参数列表)-&gt;{方法体;return 返回值;}<br>省略格式:<br>参数类型可省略<br>只有一个参数，小括号可省略<br>如果{}中只有一句代码，那么{} ; return可省略<br>2.Stream流<br>a.集合或者数组获取流的方法<br>Stream<E> s = 集合.stream();//单列集合<br>Stream<E> s = Stream.of(数组/可变参数); //数组获取流<br>b.调用流的各种方式<br>filter limit skip map count foreach concat</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（十三）</title>
      <link href="/2020/03/18/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/"/>
      <url>/2020/03/18/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•死锁<br>•线程池<br>•线程状态<br>•等待与唤醒</p><a id="more"></a><p>一.线程池方式<br>1.1 线程池的思想<br>需要使用线程时，会临时创建一个线程，然后启动。而线程的创建，以及使用完毕后的销毁，都需要消耗性能的。<br>因此，<br>先创建好线程，在需要使用时直接使用，使用完毕后归还，等待下次继续使用，即线程池思想。</p><p>1.2 线程池的概念<br>线程池：其实就是一个容纳多个线程对象的容器，其中的线程可以反复使用，省去了频繁创建/销毁线程对象的操作，无需反复创建线程而消耗过多资源。</p><p>1.3 线程池的使用<br>线程池的顶层接口:<br>java.util.concuttrent.Executor</p><p>线程池的子接口:<br>java.util.concurrent.ExcutorService</p><p>线程池的工具类:其作用是帮助我们创建一个线程池对象(即ExcutorService的实现类对象)<br>java.util.concuttrent.Executors</p><p>工具类中的静态方法:创建一个线程池对象<br>public static ExecutorService newFixedThreadPool(int nThreads);//用于创建一个具有指定线程个数的线程池对象</p><p>如何向线程池中提交任务：<br>调用ExecutorService接口中规定的方法<br>public Future<?> submit(Runnable task);//向线程池中提交无返回值的任务public Future<?> submit(Callable<T> task);//向线程池中提交有返回值的任务，返回Future类型(封装线程执行完毕后结果的那个对象)</p><p>1.4 线程池的练习</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadPool</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">//使用多态接收</span></span><br><span class="line">        ExecutorService service = Executors.newFixedThreadPool(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//向线程池中提交无返回值的任务</span></span><br><span class="line"><span class="comment">//        for (int i = 0; i &lt; 10; i++) &#123;</span></span><br><span class="line">            service.submit(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    System.out.println(Thread.currentThread().getName() + <span class="string">" Done"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//向线程池中提交有返回值的任务</span></span><br><span class="line">        Future&lt;Integer&gt; future = service.submit(<span class="keyword">new</span> Callable&lt;Integer&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Integer <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">             <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">101</span>; i++) &#123;</span><br><span class="line">                    sum+=i;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> sum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        Integer result = future.get();<span class="comment">//get方法具有阻塞功能，会等待任务执行完毕后再返回结果</span></span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果想要整个进程停止,那么需要关闭线程池</span></span><br><span class="line">        service.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二.死锁<br>2.1 什么是死锁<br>在多线程中，有多把锁，最后导致所有的线程都在等待中，造成的现象，称为死锁</p><p>2.2 产生死锁的条件<br>a.至少有2个线程<br>b.至少有2个锁对象<br>c.至少有synchronized嵌套</p><p>2.3 死锁演示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2个锁对象</span></span><br><span class="line">        Object obj1 = <span class="keyword">new</span> Object();</span><br><span class="line">        Object obj2 = <span class="keyword">new</span> Object();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2个线程</span></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                    <span class="comment">//必须有synchronized嵌套</span></span><br><span class="line">                    <span class="keyword">synchronized</span> (obj1) &#123;</span><br><span class="line">                        System.out.println(<span class="string">"Thread 1 get obj1 and want obj2"</span>);</span><br><span class="line">                    <span class="comment">//方式一：sleep，不释放锁</span></span><br><span class="line"><span class="comment">//                    try &#123;</span></span><br><span class="line"><span class="comment">//                        Thread.sleep(500);</span></span><br><span class="line"><span class="comment">//                    &#125; catch (InterruptedException e) &#123;</span></span><br><span class="line"><span class="comment">//                        e.printStackTrace();</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line">                        <span class="keyword">synchronized</span> (obj2) &#123;</span><br><span class="line">                            System.out.println(<span class="string">"Thread 1 get obj2,execute"</span>);</span><br><span class="line">                            System.out.println(Thread.currentThread().getName() + <span class="string">"Done"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                    <span class="keyword">synchronized</span> (obj2) &#123;</span><br><span class="line">                        System.out.println(<span class="string">"Thread 2 get obj2 and want obj1"</span>);</span><br><span class="line"><span class="comment">//                    try &#123;</span></span><br><span class="line"><span class="comment">//                        Thread.sleep(500);</span></span><br><span class="line"><span class="comment">//                    &#125; catch (InterruptedException e) &#123;</span></span><br><span class="line"><span class="comment">//                        e.printStackTrace();</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line">                        <span class="keyword">synchronized</span> (obj1) &#123;</span><br><span class="line">                            System.out.println(<span class="string">"Thread 2 get obj1,execute"</span>);</span><br><span class="line">                            System.out.println(Thread.currentThread().getName() + <span class="string">"Done"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>注意：如果出现了死锁，无解。只能尽量避免死锁</p><p>三.线程状态</p><p>3.1 线程的六种状态(A thread state. A thread can be in one of the following states:)<br>•新建状态-NEW<br>A thread that has not yet started is in this state.<br>刚创建，且未调用strat方法的状态</p><p>•运行状态-RUNNABLE<br>A thread executing in the Java virtual machine is in this state.<br>处于新建状态的线程start方法之后<br>可运行状态(就绪)<br>可运行状态(运行)<br>注意：只有新建状态的线程才能调用start()</p><p>•受(锁)阻塞状态-BLOCKED<br>A thread that is blocked waiting for a monitor lock is in this state.<br>状态进入：<br>线程运行过程中，遇到同步方法，线程需要锁对象，但是锁对象已被其他线程持有<br>状态返回：<br>其他线程释放锁，当前线程抢到锁，才能从锁阻塞回到可运行状态</p><p>•限时等待状态-TIMED_WAITING<br>A thread that is waiting for another thread to perform an action for up to a specified waiting time is in this state.<br>状态进入：<br>线程指定到代码调用Thread.slee(毫秒值)，线程就处于限时等待状态<br>状态返回：<br>sleep时间到了，返回RUNNABLE状态</p><p>•永久等待-WAITING<br>A thread that is waiting indefinitely for another thread to perform a particular action is in this state.<br>状态进入：<br>当前线程必须持有锁对象<br>调用锁对象的wait()方法<br>此时线程就会进入永久等待，进入之前，当前线程会自动释放锁对象<br>状态返回：<br>其他线程要持有锁(必须锁刚刚进入无限等待的线程释放的锁)<br>调用锁对象的notify()方法</p><p>注意：被唤醒的线程是没有锁对象的，会进入锁阻塞，直到其他线程释放锁对象，才能进入可运行状态</p><p>•TERMINATED<br>A thread that has exited is in this state.<br>当线程任务执行完毕，已退出的线程状态(消亡状态)<br>注意：处于消亡状态的线程，不能再调用start方法</p><p><img src='https://g.gravizo.com/svg? digraph G {New [shape = box]RUNNABLE [shape = box]BLOCKED [shape = box]TERMINATED [shape = box]TIMED_WAITING [shape = box]WAITING [shape = box]New-> RUNNABLE;RUNNABLE -> BLOCKED;BLOCKED -> RUNNABLE;RUNNABLE -> TERMINATED;RUNNABLE -> TIMED_WAITING;TIMED_WAITING -> RUNNABLE;RUNNABLE -> WAITING;WAITING -> RUNNABLE; }'/></p><p>四.等待唤醒机制<br>4.1 等待唤醒机制(Wait和Notify)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestWating</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//creat lock</span></span><br><span class="line">        Object lock = <span class="keyword">new</span> Object();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//create thread</span></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">synchronized</span> (lock) &#123;</span><br><span class="line">                    <span class="comment">//get in code block</span></span><br><span class="line">                    System.out.println(<span class="string">"Thread A get into Wating"</span>);</span><br><span class="line">                    System.out.println(<span class="string">"Thread A Get Lock"</span>);</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        lock.wait();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//wake back to task</span></span><br><span class="line">                    System.out.println(<span class="string">"A Wake"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line"></span><br><span class="line">        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//New Threak wake up Thread A</span></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">//Same lock Object</span></span><br><span class="line">                <span class="keyword">synchronized</span> (lock) &#123;</span><br><span class="line">                    System.out.println(<span class="string">"Thread B Got Lock"</span>);</span><br><span class="line">                    System.out.println(<span class="string">"Thread B Wake A Up"</span>);</span><br><span class="line">                    lock.notify();</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                        System.out.println(i);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：<br>a.只有线程进入了线程等待，其他线程调用了notify()才有作用，否则也可以调用刚，但是没有任何作用<br>b.锁对象.notify方法只能唤醒一个锁对象，具体哪一个是随机的<br>c.锁对象.notifyAll方法可以唤醒多个线程，谁抢到锁谁执行</p><p>4.2 生产者与消费者<br>生产者与消费者是一个十分经典的多线程协作模式，弄懂生产者消费者问题能对多线程编程的理解更加深刻<br>所谓生产者消费者问题，实际上包含了两类线程:<br>•一类是生产者线程用于生产数据<br>•一类是消费者线程用于消费数据</p><p>为了解耦生产者和消费者的关系，通常会采用共享的数据区域，将像是一个仓库<br>•生产者生产数据之后直接放置在共享区域中，并不需要关系消费者行为<br>•消费者只需要从共享数据区其获取数据，并不需要关系生产者行为</p><p>生产者 —&gt; 共享数据区 &lt;— 消费者</p><p>(代码演示)<br>需求：<br>生产者消费案例<br>需要两个线程，线程1包子铺线程，赋值生产包子。线程2吃货线程，赋值吃包子。<br>如果没有包子，那么吃货线程等待，包子铺线程执行，执行完后唤醒吃货线程。<br>如果没有包子，那么包子铺线程等待，吃货线程执行，执行完后唤醒包子铺线程。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; arr = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        arr.add(<span class="string">"first"</span>);</span><br><span class="line"></span><br><span class="line">            Thread t1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">synchronized</span> (arr) &#123;</span><br><span class="line">                        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span> (arr.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">try</span> &#123;</span><br><span class="line">                                System.out.println(<span class="string">"Bread presence"</span>);</span><br><span class="line">                                arr.wait();</span><br><span class="line">                            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                                e.printStackTrace();</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        System.out.println(<span class="string">"Add Bread"</span>);</span><br><span class="line">                        arr.add(<span class="string">"bread"</span>);</span><br><span class="line">                        System.out.println(<span class="string">"Bread Done"</span>);</span><br><span class="line">                        arr.notify();</span><br><span class="line">                    &#125;&#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            </span><br><span class="line">            Thread t2 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">synchronized</span> (arr) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (arr.size() == <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">try</span> &#123;</span><br><span class="line">                                System.out.println(<span class="string">"No bread"</span>);</span><br><span class="line">                                arr.wait();</span><br><span class="line">                            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                                e.printStackTrace();</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        System.out.println(<span class="string">"Ate bread"</span>);</span><br><span class="line">                        arr.remove(<span class="number">0</span>);</span><br><span class="line">                        System.out.println(<span class="string">"Call Boss"</span>);</span><br><span class="line">                        arr.notify();</span><br><span class="line">                    &#125;&#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            t1.start();</span><br><span class="line">            t2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>五.定时器<br>5.1 什么是定时器<br>可以让某个线程在某个时间做指定的任务，或某个时间以后指定时间间隔中反复做某个任务</p><p>5.2 定时器Timer的使用<br>•构造方法<br>public Timer();//构造一个定时器</p><p>•成员方法<br>public void schedule(TimerTask task,long delay);//在指定时间之后，执行指定任务<br>public void schedule(TimerTask task,long delay,long period);//在指定时间之后，开始周期性执行任务，时间间隔period毫秒<br>public void schedule(TimerTask task,Date time);//在指定的时间点，执行指定的任务<br>public void schedule(TimerTask task,Date time,long period);//在指定时间第一次执行任务，之后周期性执行任务，间隔period毫秒</p><p>•案例演示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestTimer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Timer t1 = <span class="keyword">new</span> Timer();</span><br><span class="line">        Timer t2 = <span class="keyword">new</span> Timer();</span><br><span class="line">        Timer t3 = <span class="keyword">new</span> Timer();</span><br><span class="line">        Timer t4 = <span class="keyword">new</span> Timer();</span><br><span class="line"></span><br><span class="line">        t1.schedule(<span class="keyword">new</span> TimerTask() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Timer 1 Done"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        t2.schedule(<span class="keyword">new</span> TimerTask() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Timer 2 Done"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="number">1000</span>,<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        Calendar cc = Calendar.getInstance();</span><br><span class="line">        cc.add(Calendar.SECOND,<span class="number">10</span>);</span><br><span class="line">        Date date = cc.getTime();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        t3.schedule(<span class="keyword">new</span> TimerTask() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Timer 3 Done"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, date);</span><br><span class="line"></span><br><span class="line">        t4.schedule(<span class="keyword">new</span> TimerTask() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Timer 4 Done"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,date,<span class="number">1000</span> );</span><br><span class="line"></span><br><span class="line">        t2.cancel();</span><br><span class="line">        t4.cancel();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：<br>1.线程池<br>a.怎么创建<br>ExecutorService service = Executos.newFixedThreadPool(int 线程个数);<br>b.提交任务<br>service.submit(Runnalbe task);//提交无返回任务<br>Future<T> future = service.submit(Callable<T> task);//提交有返回任务<br>通过future.get()该方法会阻塞，直到线程执行完毕，返回结果<br>c.关闭线程池<br>service.shutDown();</p><p>2.死锁<br>a.多个线程<br>b.多把锁<br>c.嵌套反方向获取锁</p><p>死锁只能避免，出现即无法解决</p><p>3.线程的状态<br>a.NEW(新建状态)<br>b.RUNNABLE(可运行状态)<br>c.TERMIINATED(消亡状态)<br>d.BLOCKED(阻塞状态)<br>e.TIMED_WATING(限时等待状态)<br>f.WATING(无限等待状态)*</p><p>怎么进入WATING<br>I.当前线程获取锁对象<br>II.调用锁对象.wait()方法<br>III.进入WATING之前自动释放锁对象<br>怎么唤醒<br>I.其他线程持有锁对象（必须刚刚释放的同一把锁）<br>II.调用锁对象的.notify()方法<br>III.WATING线程醒来，进入BLOCKED状态，直到再次获取对象状态</p><p>4.TImer<br>四个方法<br>public void schedule(TimerTask task,long delay);//在指定时间之后，执行指定任务<br>public void schedule(TimerTask task,long delay,long period);//在指定时间之后，开始周期性执行任务，时间间隔period毫秒<br>public void schedule(TimerTask task,Date time);//在指定的时间点，执行指定的任务<br>public void schedule(TimerTask task,Date time,long period);//在指定时间第一次执行任务，之后周期性执行任务，间隔period毫秒</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（十二）</title>
      <link href="/2020/03/16/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/"/>
      <url>/2020/03/16/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•线程安全问题解决<br>•并发包</p><a id="more"></a><p>一.synchronized关键字<br>1.1 AtomicInteger不足之处<br>回顾：可以保证对”变量”操作是原子性的（有序性，可见性）</p><p>无法解决：多行代码的原子性</p><p>1.2 多行代码的原子性安全问题——卖票案例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TicketTask</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">10</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(<span class="string">"Sold"</span> + count);</span><br><span class="line">                count--;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TicketTask tt = <span class="keyword">new</span> TicketTask();</span><br><span class="line"></span><br><span class="line">        Thread t1 = <span class="keyword">new</span> Thread(tt);</span><br><span class="line">        Thread t2 = <span class="keyword">new</span> Thread(tt);</span><br><span class="line">        Thread t3 = <span class="keyword">new</span> Thread(tt);</span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">        <span class="comment">//线程出现安全问题</span></span><br><span class="line">        <span class="comment">//可能出现重复票据</span></span><br><span class="line">        <span class="comment">//还可能出现0甚至-1这种非法数据</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重复数据原因：当一个线程执行完卖票后，还没来得及对票数-1，就被其他线程抢走了CPU，导致其他线程也卖出了一样的票<br>非法数据原因：当剩下最后一张票时，多个线程都经过了if判断，进入卖票的代码块中，依次卖出1，0，-1张票</p><p>1.3 synchronized关键字介绍<br>a.synchronized是什么：synchronized是Java的关键字<br>b.synchronized作用：可以让多句代码具有原子性（当某个线程执行多句代码的过程中不被其他线程打断）</p><p>1.4 解决方法1:同步代码块<br>synchronized(锁对象){<br>    需要同步的代码（需要保持原子性的代码）<br>}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TicketTask</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">100</span>;</span><br><span class="line">    Object obj = <span class="keyword">new</span> Object();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (obj) &#123;</span><br><span class="line">                <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">"Sold"</span> + count);</span><br><span class="line">                    count--;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TicketTask tt = <span class="keyword">new</span> TicketTask();</span><br><span class="line"></span><br><span class="line">        Thread t1 = <span class="keyword">new</span> Thread(tt);</span><br><span class="line">        Thread t2 = <span class="keyword">new</span> Thread(tt);</span><br><span class="line">        Thread t3 = <span class="keyword">new</span> Thread(tt);</span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.5 解决方法2:同步方法<br>格式：<br>public synchronized void 方法名(){</p><p>}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TicketTask</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            sellTicket();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">sellTicket</span><span class="params">()</span> </span>&#123;<span class="comment">//默认当前任务对象</span></span><br><span class="line">        <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Sold"</span> + count);</span><br><span class="line">            count--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TicketTask tt = <span class="keyword">new</span> TicketTask();</span><br><span class="line"></span><br><span class="line">        Thread t1 = <span class="keyword">new</span> Thread(tt);</span><br><span class="line">        Thread t2 = <span class="keyword">new</span> Thread(tt);</span><br><span class="line">        Thread t3 = <span class="keyword">new</span> Thread(tt);</span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：<br>a.同步代码块和同步方法原理差不多，到底是同步代码块的同步锁需要自己指定，而同步方法的同步锁默认使用当前对象this<br>b.同步代码块可以是static的，如果同步方法是static的，默认使用当前类的字节码文件(.class文件)作为锁对象。</p><p>1.6 解决方法3：Lock锁<br>Lock是一个接口，我们需要使用其实现类ReentrantLock<br>ReentrantLock的API:<br>public ReentrantLock();<br>public void lock();//加锁<br>public void unlock();//解锁<br>格式：<br>ReentrantLock lock = new ReentrantLock();<br>lock.lock();//加锁<br>lock.unloc();//解锁</p><p>解决代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TicketTask</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> count = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建一个lock锁</span></span><br><span class="line">    Lock lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            lock.lock();</span><br><span class="line">            <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">10</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(<span class="string">"Sold"</span> + count);</span><br><span class="line">                count--;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TicketTask tt = <span class="keyword">new</span> TicketTask();</span><br><span class="line"></span><br><span class="line">        Thread t1 = <span class="keyword">new</span> Thread(tt);</span><br><span class="line">        Thread t2 = <span class="keyword">new</span> Thread(tt);</span><br><span class="line">        Thread t3 = <span class="keyword">new</span> Thread(tt);</span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二.并发包<br>什么是并发包：这是JDK提供的，包含一个在高并发情况使用集合或工具，</p><p>2.1 CopyOnWriteArrayList<br>arraylist线程是不安全的(ArrayIndexOutOfBoundsException)，需要CopyOnWriteArrayList</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mythread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"><span class="comment">//    public static List&lt;Integer&gt; list = new ArrayList&lt;&gt;();//ArrayIndexOutOfBoundsException</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Integer&gt; list = <span class="keyword">new</span> CopyOnWriteArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            list.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"Done"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestArrayList</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        Mythread mt1 = <span class="keyword">new</span> Mythread();</span><br><span class="line">        Mythread mt2 = <span class="keyword">new</span> Mythread();</span><br><span class="line"></span><br><span class="line">        mt1.start();</span><br><span class="line">        mt2.start();</span><br><span class="line"></span><br><span class="line">        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        System.out.println(Mythread.list.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.2 CopyOnWriteArraySet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestHashSet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        MyThread mt1 = <span class="keyword">new</span> MyThread();</span><br><span class="line"></span><br><span class="line">        mt1.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">10000</span>; i &lt; <span class="number">20000</span>; i++) &#123;</span><br><span class="line">            MyThread.set.add(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        System.out.println(MyThread.set.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mythread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="comment">//    public static List&lt;Integer&gt; list = new ArrayList&lt;&gt;();</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Integer&gt; list = <span class="keyword">new</span> CopyOnWriteArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            list.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"Done"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.3 ConcurrentHashMap</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="comment">//public static HashMap&lt;Integer,Integer&gt; map = new HashMap&lt;Integer, Integer&gt;();</span></span><br><span class="line"><span class="comment">//    public static Map&lt;Integer, Integer&gt; map = new Hashtable&lt;Integer, Integer&gt;();</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ConcurrentHashMap&lt;Integer, Integer&gt; map = <span class="keyword">new</span> ConcurrentHashMap&lt;Integer, Integer&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++) &#123;</span><br><span class="line">            map.put(i, i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"Done "</span>+(end-start));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestHashMap</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line"><span class="comment">//        MyThread mt1 = new MyThread();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        mt1.start();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        for (int i = 10000; i &lt; 20000; i++) &#123;</span></span><br><span class="line"><span class="comment">//            MyThread.map.put(i,i);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> MyThread().start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Thread.sleep(<span class="number">1000</span>*<span class="number">20</span>);</span><br><span class="line">        System.out.println(MyThread.map.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小结：<br>HashMap线程不安全(多线程不能操作同一个HashMap)<br>Hashtable线程安全(多线程可以操作同一个HashMap)，但是效率低<br>ConcurrentHashMap 线程安全的，并且效率较高</p><p>•为什么Hashtable效率低：Hashtable锁定整个哈希表，一个操作正在进行时<br>•为什么ConcurrentHashMap效率高：局部锁定(CAS)，只锁定链表(桶)。对当前元素锁定时，它元素不锁定。</p><p>2.4 CountDownLatch<br>•CountDownLatch的作用:允许当前线程，等待其他线程完成某种操作之后，当前线程继续执行<br>•CountDownLatch的API<br>构造方法:<br>public CountDownLatch(int count);//初始化，需要传入计数器，需要等待的线程数<br>成员方法:<br>public void await() throws InterruptedException();//让当前线程等待<br>public void countDown()//计数器减1</p><p>•CountDownLatch使用案例<br>需求：<br>线程1需要执行打印:A和C，线程2要执行打印B<br>需要结果：线程1打印A，线程2打印B，之后线程A打印C，输出A B C</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread1</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> CountDownLatch latch;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyThread1</span><span class="params">(CountDownLatch latch)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.latch = latch;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"A"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            latch.await();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread2</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> CountDownLatch latch;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyThread2</span><span class="params">(CountDownLatch latch)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.latch = latch;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"B"</span>);</span><br><span class="line">        latch.countDown();</span><br><span class="line">        System.out.println(<span class="string">"D"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCountDownLatch</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建CountDownLatch</span></span><br><span class="line">        CountDownLatch latch = <span class="keyword">new</span> CountDownLatch(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        MyThread1 mt1 = <span class="keyword">new</span> MyThread1(latch);</span><br><span class="line">        MyThread2 mt2 = <span class="keyword">new</span> MyThread2(latch);</span><br><span class="line"></span><br><span class="line">        mt1.start();</span><br><span class="line">        mt2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.5 CyclicBarrier<br>•CyclicBarrier的作用:让多个线程都到达了某种要求之后，新的任务才能执行<br>•CyclicBarrier的API<br>构造方法：<br>public CycliBarrier(int parties,Runnable barrierAction);<br>//parties【需要多少线程】，Runnable barrierAction)【所有线程都满足要求了，执行任务】</p><p>成员方法：<br>public int await();//当所有线程都到达了，需要调用await</p><p>•CyclicBarrier使用案例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> CyclicBarrier cb1;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PersonThread</span><span class="params">(CyclicBarrier cb1)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cb1 = cb1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep((<span class="keyword">int</span>) (Math.random()) * <span class="number">1000</span>);</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">"Done"</span>);</span><br><span class="line">            cb1.await();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException | BrokenBarrierException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPersonThread</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        CyclicBarrier cb1 = <span class="keyword">new</span> CyclicBarrier(<span class="number">5</span>,<span class="keyword">new</span> Runnable()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Done"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        PersonThread pt1 = <span class="keyword">new</span> PersonThread(cb1);</span><br><span class="line">        PersonThread pt2 = <span class="keyword">new</span> PersonThread(cb1);</span><br><span class="line">        PersonThread pt3 = <span class="keyword">new</span> PersonThread(cb1);</span><br><span class="line">        PersonThread pt4 = <span class="keyword">new</span> PersonThread(cb1);</span><br><span class="line">        PersonThread pt5 = <span class="keyword">new</span> PersonThread(cb1);</span><br><span class="line"></span><br><span class="line">        pt1.start();</span><br><span class="line">        pt2.start();</span><br><span class="line">        pt3.start();</span><br><span class="line">        pt4.start();</span><br><span class="line">        pt5.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.6 Semaphore<br>•Semaphore的作用:用于控制并发线程的数量</p><p>•Semaphore的API：<br>构造方法：<br>public Semaphore(int permits);//参数permit表示最多有多少个线程并发执行<br>成员方法：<br>public void acquire();//获取线程许可证<br>public void release();//释放线程许可证</p><p>•Semaphore使用案例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Semaphore semaphore;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyThread</span><span class="params">(Semaphore semaphore)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.semaphore= semaphore;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            semaphore.acquire();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">" "</span>+System.currentTimeMillis());</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>*<span class="keyword">new</span> Random().nextInt(<span class="number">6</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        System.out.println(Thread.currentThread().getName());</span></span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">" "</span>+System.currentTimeMillis());</span><br><span class="line">        semaphore.release();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Semaphore semaphore = <span class="keyword">new</span> Semaphore(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> MyThread(semaphore).start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.7 Exchanger<br>•Exchanger的作用:用于线程间的数据交换</p><p>•Exchanger的API：<br>构造方法：<br>public Exchanger<V>();</p><p>成员方法：<br>public exchanger<V x>();//参数发送给别的线程的数据，返回值返回的数据</p><p>•Exchanger使用案例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread1</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Exchanger&lt;String&gt; exchanger;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyThread1</span><span class="params">(Exchanger&lt;String&gt; exchanger)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.exchanger = exchanger;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"MyThread-1 send to Thread-2"</span>);</span><br><span class="line"></span><br><span class="line">        String result = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = exchanger.exchange(<span class="string">"Get Thread-1"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"Thread1 Get:"</span>+result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread2</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Exchanger&lt;String &gt; exchanger;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyThread2</span><span class="params">(Exchanger&lt;String &gt; exchanger)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.exchanger=exchanger;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"MyThread-2 send to Thread-1"</span>);</span><br><span class="line"></span><br><span class="line">        String result = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = exchanger.exchange(<span class="string">"Get Thread-2"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"Thread2 Get:"</span>+result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Exchanger&lt;String&gt; exchanger = <span class="keyword">new</span> Exchanger&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">        MyThread1 mt1 = <span class="keyword">new</span> MyThread1(exchanger);</span><br><span class="line">        MyThread2 mt2 = <span class="keyword">new</span> MyThread2(exchanger);</span><br><span class="line"></span><br><span class="line">        mt1.start();</span><br><span class="line">        mt2.start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：<br>使用同步代码块解决线程安全问题<br>synchronized(锁对象){<br>    需要同步的代码（需要保证原子性的代码）<br>}<br>使用同步方法解决线程安全问题<br>public synchronized void 方法名(){<br>    需要同步的代码（需要保证原子性的代码）<br>}<br>使用Lock锁解决线程安全问题<br>Lock lock = new ReentrantLock();<br>lock.lock();<br>    需要同步的代码（需要保证原子性的代码）<br>lock.unlock();</p><p>说明volatile关键字和synchronize关键字区别<br>volatile能解决有序性和可见性<br>原子类 能解决变量的原子性(有序性和可见性)<br>synchronized 能解决多句代码的原子性（有序性和可见性）</p><p>描述CopyOnWriteArrayList类作用<br>代替多线程的情况，线程安全的ArrayList集合</p><p>描述CopyOnWriteArraySet类作用<br>代替多线程的情况，线程安全的HashSet集合</p><p>描述ConcurrentHashMap类作用<br>代替多线程的情况，线程安全的HashMap集合，比HashTable效率更高</p><p>描述CountDownLatch类作用<br>可以运行一个线程等待另一个线程执行完毕后再继续执行</p><p>描述CycliBarrrier类作用<br>让一组线程都到达某中调节后再执行某个任务</p><p>描述Semaphore类作用<br>控制多线程并发的最大数量</p><p>描述Exchanger类作用<br>用于线程间的通信（数据交换）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（十一）</title>
      <link href="/2020/03/15/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/"/>
      <url>/2020/03/15/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•多线程<br>•volatile关键字<br>•原子性</p><a id="more"></a><p>一.多线程<br>1.1 并行和并发<br>并行：两个事件，在同一时刻，都在发生<br>并发：两个事件，在同一时间段内，都在发生</p><p>1.2 进程和线程<br>进程：正在内存中运行的程序，称为进程<br>•是系统进行资源分配和调用的独立单位<br>•每一个进程都有自己的诶次空间和系统资源</p><p>线程：是进程中的单个顺序控制流，进程中完成某个小功能的模块（进程中用于执行某个功能的执行单元）<br>•单线程:一个进程如果只有一条执行路径，则称为单线程程序<br>•多线程:一个进程如果有多条执行路径，则称为多线程程序</p><p>•进程和线程的区别<br>线程是属于某个进程的<br>进程：每个进程都有自己独立的内存空间(栈/堆)，并且至少有一个线程<br>线程：每个线程都会跟所在的进程申请一块独立的栈，堆共享进程的堆（堆是共享的，栈是独立的），线程小号的资源比进程小得多</p><p>•线程调度<br>线程调用是指CPU在不同的进程不同的线程之间进行快速切换</p><p>线程调度的分类：<br>    分时调度：每个线程平均拥有CPU的执行权<br>    抢占式调度：每个线程随机分配CPU的执行权（具体的分配多少和线程的优先级有关）<br>    Java进程中，所有的线程，采用抢占式调度</p><p>1.3 Thread类的介绍<br>例：IDE的main方法运行时是创建一个进程，该进程中至少有2个线程<br>I.main方法所在的线程，称为主线程<br>II.垃圾回收期线程</p><p>a.Thread类是什么<br>Thread是Java定义好的，代表线程的类，只要创建该类的一个对象，其实介绍创建了一个线程</p><p>b.Thread类的构造方法<br>public Thread();//无参构造<br>public Thread(String name);//带有线程名的构造<br>public Thread(Runnable r);//带有线程任务的构造<br>public Thread(Runnable r,String name);//即带有线程名字，又有线程任务的构造</p><p>c.Thread类的成员方法<br>public String getName();//获取线程的名字。无参构造，线程会有自己的名字，如Thread0，Thread1<br>public String setName(String name);//修改线程的名字<br>public void run();//代表线程要执行的任务，任务有关的代码需要写在此方法中<br>public void start();//线程只创建并不会执行，必须调用start开启后才会执行任务</p><p>public static void sleep(long millis);//让当前线程休眠X毫秒(指Thread.sleep(1000)代码写在哪个线程中，所在的线程就当前线程)<br>public static Thread currentThread();//获取当前线程对象(指Thread.currentThread()代码写在哪个线程中，所在的线程就当前线程)</p><p>public static void join();//等待这个线程死亡<br>public static void setDaemon(boolean on);//将此线程标记为守护线程，当允许的线程都是守护线程时，Java虚拟机将退出</p><p>public final int getPriority();//返回此线程的优先级<br>public final void setPriority(int newPriority);//更改此线程的优先级<br>线程优先级高，仅表示获取CPU时间片的几率高，并不表示会优先执行</p><p>1.4 创建新的线程方式一：继承方式<br>a. API描述：将类声明为Thread的子类。该子类重写Thread类的run方法。接下来可以分配并启动该子类的实例<br>b.分析创建步骤：<br>I.创建子类 继承 Thread<br>II.子类中重写run方法（在run中编写线程要执行的任务代码）</p><p>•为什么要重写run()方法：因为run()是用来封装被线程执行的代码<br>•run()方法和start()方法的区别：<br>i.run()封装线程执行的代码，直接调用，相当于普通方法的调用<br>ii.start()启动线程，然后由JVM调用此线程的run()方法</p><p>III.创建子类对象（实际上就是创建一个线程对象）<br>IV.调用线程对象的start方法（启动该线程）<br>案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">            System.out.println(getName()+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建子类对象（实际上就是创建一个线程对象）</span></span><br><span class="line">        MyThread mt = <span class="keyword">new</span> MyThread();</span><br><span class="line">        <span class="comment">//调用线程对象的start方法（启动该线程）</span></span><br><span class="line">        mt.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//主线程 不会等待子线程任务结束</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：<br>a.可以给线程起名，也可以使用默认名<br>b.获取线程名称时，建议使用通用方式Thread.currentThread().getName();子线程内部，也可以直接调用getName()；</p><p>1.5 创建新的线程方式二：实现方式<br>a.API描述：声明实现Runnable接口的类。该类然后实现run方法。然后可以分配该类的实例，在创建Thread时作为一个参数来传递并启动</p><p>b.分析创建步骤：<br>I.创建实现类 实现Runnable接口（实际上接口中就一个任务方法:run方法）<br>II.实现类重写run方法（run中编写具体的任务代码）<br>III.创建实现类对象(该实现类对象并不少线程对象，称为任务对象)<br>IV.创建Thread对象，同时传入实现类对象public Thread(Runnable r);<br>V.启动该线程(调用线程对象的start方法)</p><p>c.代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建实现类，实现Runnable接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRunnable</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实现类重写run方法（run中编写具体的任务代码）</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//run方法中写任务代码</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建实现类对象(该实现类对象并不少线程对象，称为任务对象)</span></span><br><span class="line">        MyRunnable mr = <span class="keyword">new</span> MyRunnable();</span><br><span class="line">        <span class="comment">//创建Thread对象，同时传入实现类对象public Thread(Runnable r);</span></span><br><span class="line">        Thread tt = <span class="keyword">new</span> Thread(mr);</span><br><span class="line">        <span class="comment">//启动该线程(调用线程对象的start方法)</span></span><br><span class="line">        tt.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//主线程不会等待子线程执行完毕</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.5.1 两种线程的优劣势比较<br>两种创建线程的方式，实现方式比较好<br>I.实现方式的线程和任务是分开的，由程序员自己组合的，适合多个相同的程序代码的线程去共享同一个资源。<br>II.实现方式避免了java中的单继承的局限性。<br>III.实现方式线程和任务是接耦的，继承方式线程和任务是紧耦合的。增加程序的健壮性，实现解耦操作，代码可以被多个线程共享，代码和线程独立。<br>IV.线程池只能放入实现Runable或Callable类线程，不能直接放入继承Thread的子类。<br>综上所述，在开发中建议使用实现方式（并不是说实现方式不对）</p><p>1.6 匿名内部类简化线程创建方式<br>匿名内部类的作用：可以快速创建一个类的子类对象，或者一个接口的实现类对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">                    System.out.println(Thread.currentThread().getName() + i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread (<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">                        System.out.println(Thread.currentThread().getName() + i);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二.高并发和线程安全<br>2.1 高并发及线程安全介绍<br>什么是高并发:在某个时间点上，大量的用户(线程)，访问同一个资源。<br>线程安全:在某个时间点上，大量用户(线程)访问同一个资源时，由于线程运行机制的原因，可能导致被访问的资源出现类”数据污染”</p><p>2.2 多线程的运行机制[内存方面]</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure><p>2.3 多线程的安全性问题：可见性<br>当一个共享的变量被多个线程使用时，当其中某个线程对其进行了修改，该值对其他线程并非立即可见的，其他线程获取的值，还是以前的副本（旧值）。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"线程启动，休息2秒..."</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span> * <span class="number">2</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"将a的值改为1"</span>);</span><br><span class="line">        a = <span class="number">1</span>;</span><br><span class="line">        System.out.println(<span class="string">"线程结束..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSafeDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.启动线程</span></span><br><span class="line">        MyThread t = <span class="keyword">new</span> MyThread();</span><br><span class="line">        t.start();</span><br><span class="line">        <span class="comment">//2.主线程继续</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (MyThread.a == <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"主线程读到了a = 1"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.4 多线程的安全性问题：有序性<br>单线程会在不影响代码的结果的程度上，对代码进行重排。<br>如果在在”多线程”情况下，可能对一样的代码执行后得出不一样的结果。<br>我们要保证在多线程的情况下，不对代码进行”重排”，保证代码是有序的（不要使用重排）</p><p>2.5 多线程的安全性问题：原子性<br>什么是原子性:线程对一个共享变量进行++时，这个++是分成两部操作的，先取出值加1，然后给共享变量赋值，如果取出值加1后，还没有来得及赋值就被其他线程抢走CPU，此时我们称++操作不具有原子性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            a++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"Done"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSaftDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        MyThread t1 = <span class="keyword">new</span> MyThread();</span><br><span class="line">        MyThread t2 = <span class="keyword">new</span> MyThread();</span><br><span class="line"></span><br><span class="line">        t1.start();<span class="comment">//Thread 1对a加了一万次</span></span><br><span class="line">        t2.start();<span class="comment">//Thread 2对a加了一万次</span></span><br><span class="line"></span><br><span class="line">        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        System.out.println(MyThread.a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>三.volatile关键字<br>3.1 volatile是什么<br>volatile是一个关键字，用来修饰成员变量（静态变量），被他修改的变量，具有可见性和有序性</p><p>3.2 volatile解决可见性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">volatile</span> <span class="keyword">static</span> <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"线程启动，休息2秒..."</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span> * <span class="number">2</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"将a的值改为1"</span>);</span><br><span class="line">        a = <span class="number">1</span>;</span><br><span class="line">        System.out.println(<span class="string">"线程结束..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSafeDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.启动线程</span></span><br><span class="line">        MyThread t = <span class="keyword">new</span> MyThread();</span><br><span class="line">        t.start();</span><br><span class="line">        <span class="comment">//2.主线程继续</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (MyThread.a == <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"主线程读到了a = 1"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.3 volatile解决有序性</p><p>3.4 volatile不能解决原子性<br>即使加了volatile，仍然会被其他线程抢占，无法解决原子性问题</p><p>小结：volatile作用<br>a.解决变量的可见性，一旦变量发生改变，所有使用到该变量的线程都会取到最新值<br>b.解决变量的有序性，一旦变量加上volatile，那么编译器不会对变量运行的代码进行重排<br>c.无法解决变量操作过程中的原子性，对变量的操作哈斯可能被其他线程打断</p><p>四.原子类<br>4.1 原子类概述<br>a.什么是原子类：是对普通类型（如:int,Integer,double ,Double)的原子类封装，使其的操作成员原子操作<br>b.原子类的作用：对原子类的增强或减少操作，保证其原子性，保证中间不会被其他线程”打断”<br>c.原子类有哪些：</p><p>在java.util.concurrent.atomic包下定义了一些对“变量”操作的“原子类”:<br>1).java.util.concurrent.atomic.AtomicInteger:对int变量操作的“原子类”;<br>2).java.util.concurrent.atomic.AtomicLong:对long变量操作的“原子类”;<br>3).java.util.concurrent.atomic.AtomicBoolean:对boolean变量操作的“原子类”;<br><b>它们可以保证对“变量”操作的:原子性、有序性、可见性。</b></p><p>4.2 AtomicInteger类示例<br>a.AtomicInteger是什么：是对int类型变量进程操作原子类<br>b.AtomicInteger的构造方法：public AtomicInteger(int num);<br>c.AtomicInteger的成员方法：<br>public int getAndIncrement();//就相当于我们的 变量++<br>public int ncrementAndGet();//就相当于我们的 ++变量</p><p>d.AtomicInteger的改写案例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            a++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"Done"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSaftDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        MyThread t1 = <span class="keyword">new</span> MyThread();</span><br><span class="line">        MyThread t2 = <span class="keyword">new</span> MyThread();</span><br><span class="line"></span><br><span class="line">        t1.start();<span class="comment">//Thread 1对a加了一万次</span></span><br><span class="line">        t2.start();<span class="comment">//Thread 2对a加了一万次</span></span><br><span class="line"></span><br><span class="line">        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        System.out.println(MyThread.a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.3 AtomicInteger类底层的工作原理-CAS机制<br>CAS：Compare And Swap(自旋)<br>我们假设两个线程交替运行的情况，看看它是怎样工作的:<br>初始AtomicInteger的值为0<br>线程A执行:var5 = this.getIntVolatile(var1,var2);获取的结果为:0<br>线程A被暂停<br>线程B执行:var5 = this.getIntVolatile(var1,var2);获取的结果为:0<br>线程B执行:this.compareAndSwapInt(var1,var2,var5,var5 + var4)<br>线程B成功将AtomicInteger中的值改为1<br>线程A恢复运行，执行:this.compareAndSwapInt(var1,var2,var5,var5 + var4)<br>此时线程A使用var1和var2从AtomicInteger中获取的值为:1，而传入的var5为0，比较失败，返回 false，继续循环。<br>线程A执行:var5 = this.getIntVolatile(var1,var2);获取的结果为:1<br>线程A执行:this.compareAndSwapInt(var1,var2,var5,var5 + var4)<br>此时线程A使用var1和var2从AtomicInteger中获取的值为:1，而传入的var5为1，比较成功，将其修改 为var5 + var4，也就是2，将AtomicInteger中的值改为2，结束。</p><p>•CAS也被称为乐观锁：因为大部分比较的结果为true，就直接修改了。只有少部分多线程并发的情况会 导致CAS失败，而再次循环。</p><p>4.4 AtomicIntegerArray类示例<br>•非原子类数组在多线程并发时会有问题</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] intArray = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1000</span>];</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; intArray.length; i++) &#123;</span><br><span class="line">            intArray[i]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> MyThread().start();</span><br><span class="line">        &#125;</span><br><span class="line">        Thread.sleep(<span class="number">1000</span>*<span class="number">5</span>);</span><br><span class="line">        System.out.println(<span class="string">"sleep 5 second"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;MyThread.intArray.length ; i++) &#123;</span><br><span class="line">            System.out.println(MyThread.intArray[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有极个别元素小于1000，因为int[]不是原子类数组，</p><p>•使用原子类数组，保证原子性，解决问题</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] intArray = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1000</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> AtomicIntegerArray arr = <span class="keyword">new</span> AtomicIntegerArray(intArray);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length(); i++) &#123;</span><br><span class="line">            arr.addAndGet(i, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> MyThread().start();</span><br><span class="line">        &#125;</span><br><span class="line">        Thread.sleep(<span class="number">1000</span>*<span class="number">5</span>);</span><br><span class="line">        System.out.println(<span class="string">"sleep 5 second"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;MyThread.arr.length() ; i++) &#123;</span><br><span class="line">            System.out.println(MyThread.arr.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：<br>进程和线程的区别：<br>进程：正在内存中运行的程序<br>线程：进程中完成某个功能的执行单元</p><p>并发于并行的区别：<br>并行：两个线程真的一起运行<br>并发：两个线程看起来一起运行，实际交替执行</p><p>Java多线程原理[CPU]：<br>线程调度</p><p>继承子类方式创建多线程：<br>I.子类 继承 Thread<br>II.子类 重写 run<br>III.创建 子类 对象<br>IV.调用 子类 对象 start</p><p>接口实现类方式实现多线程：<br>I.实现类 实现 Runnable<br>II.实现类 重写 run<br>III.创建 实现类 对象<br>IV.创建 Thread对象 同时 传入 实现类 对象<br>V.调用 Thread 对象 start 方法<br>VI.使用匿名内部类快速创建继承方式和实现方式的线程</p><p>接口实现方式好处：<br>I.实现方式的线程和任务是分开的，由程序员自己组合的，适合多个相同的程序代码的线程去共享同一个资源。<br>II.实现方式避免了java中的单继承的局限性。<br>III.实现方式线程和任务是接耦的，继承方式线程和任务是紧耦合的。增加程序的健壮性，实现解耦操作，代码可以被多个线程共享，代码和线程独立。<br>IV.线程池只能放入实现Runable或Callable类线程，不能直接放入继承Thread的子类。</p><p>安全问题出现的原因：<br>可见性 有序性 原子性</p><p>volatile关键字作用：<br>解决可见性与有序性，不能解决原子性</p><p>原子类AtomicInteger使用：<br>解决原子性<br>创建：<br>AtomicInteger i = new AtomicInteger(1);<br>使用：<br>i.getAndIncrement();//i++<br>i.incrementAndGet();//++i</p><p>原子类工作机制：<br>原子类底层使用CAS机制</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（十）</title>
      <link href="/2020/03/14/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%EF%BC%89/"/>
      <url>/2020/03/14/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•选择排序<br>•二分查找<br>•异常处理</p><a id="more"></a><p>一.选择排序<br>1.1 选择排序概述<br>核心思想：选中第一个元素，取出以后的元素依次和选中的元素进行比较，大的往后走，小的往前走，接着选中第二个元素同样操作，依此类推</p><p>1.2 选择排序图解</p><p>1.3 选择排序代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] arr = &#123;<span class="number">5</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="comment">//外层循环，控制选中的元素</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="comment">//内存循环，控制元素的比较</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">            <span class="comment">//比较arr[i] arr[j]</span></span><br><span class="line">            <span class="keyword">if</span> (arr[i] &gt; arr[j]) &#123;</span><br><span class="line">                <span class="keyword">int</span> temp = arr[i];</span><br><span class="line">                arr[i] = arr[j];</span><br><span class="line">                arr[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(Arrays.toString(arr));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二.二分查找<br>2.1 普通查找和二分查找<br>普通查找：给定数组，从数组中找到某个元素的索引<br>    int[] arr = {4,5,6,1,7,2,8,9};<br>    找出7出现的索引，只能从前往后找。<br>二分查找：给定的数组，必须是有自然顺序的，从数组中找某个元素出现的索引<br>    int[] arr = {1,3,5,6,8,9,10,12};<br>    找出8出现的索引，我们依然可以从前到后遍历，但是效率低。从中间开始，根据中间值的大小，可以让查找范围缩小一般</p><p>2.2 二分查找图解</p><p>a.首先定义两个遍历<br>int left = 0;<br>int right = arr.length-1</p><p>循环{<br>b.获取中间索引<br>int middle = (left+right/2)<br>c.获取middle索引元素和目标值比较<br>        if (arr[middle] &gt; key) {<br>            right = middle = 1;<br>        } else if (arr[middle] &lt; key) {<br>            left = middle + 1;<br>        } else {<br>            return middle;<br>        }<br>    }</p><p>2.3 二分查找代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">60</span>, <span class="number">70</span>, <span class="number">88</span>, <span class="number">90</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//查找元素</span></span><br><span class="line">        <span class="keyword">int</span> key = <span class="number">20</span>;</span><br><span class="line">        <span class="comment">//调用方法</span></span><br><span class="line">        <span class="keyword">int</span> index = Binary_Search(arr, key);</span><br><span class="line">        System.out.println(index);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> key_1 = <span class="number">200</span>;</span><br><span class="line">        <span class="keyword">int</span> index_1 = Binary_Search(arr, key_1);</span><br><span class="line">        System.out.println(index_1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//二分查找</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Binary_Search</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line"><span class="comment">//开始和结束索引</span></span><br><span class="line">        <span class="keyword">int</span> min = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> max = arr.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (min &lt;= max) &#123;</span><br><span class="line">            <span class="comment">//获取中间索引</span></span><br><span class="line">            <span class="keyword">int</span> middle = (min + max) / <span class="number">2</span>;</span><br><span class="line">            <span class="comment">//比较中间索引的元素和key</span></span><br><span class="line">            <span class="keyword">if</span> (arr[middle] &gt; key) &#123;</span><br><span class="line">                max = middle - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arr[middle] &lt; key) &#123;</span><br><span class="line">                min = middle + <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> middle;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>三.异常<br>3.1 什么是异常<br>异常：写程序或者运行程序过程中遇到的非正常返回</p><p>3.2 异常的继承关系<br>所有异常和错误的根类：Throwable<br>                    |-Error 错误类<br>                    |-Exception 异常类<br>                        |–RuntimeException<br>                        |–非RuntimeException</p><p>Error:严重问题，不需要处理<br>Exception:称为异常类，它表示程序本身可以处理的问题<br>•RuntimeException:在编译期不检查，出问题后，需要修改代码解决<br>•非RuntimeException:编译期将必须处理，否则程序不能通过编译，更不能正常运行</p><p>3.3 异常中常用的三个方法-Throwable的成员方法</p><table><thead><tr><th>方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td>public void printStackTrace();</td><td align="center">以深红色在控制台打印异常的详细信息（包括异常类型，异常的原因，异常的位置）【最常用】</td></tr><tr><td>public String getMessage();</td><td align="center">返回此throwable的详细消息字符串</td></tr><tr><td>public String toString();</td><td align="center">获取异常的类型和异常的描述信息</td></tr></tbody></table><p>打印方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;&#125;</span><br><span class="line">        <span class="keyword">int</span>[] arr =&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        System.out.println(arr[<span class="number">3</span>]);</span><br><span class="line">    &#125;<span class="keyword">catch</span>(ArrayIndexOutOfBoundsException e)&#123;</span><br><span class="line">        System.out.println(e.getMessage());</span><br><span class="line">        System.out.println(e.toString());</span><br><span class="line">        e.printStackTrace();</span><br><span class="line"><span class="comment">//        Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: 3</span></span><br><span class="line"><span class="comment">//        at com.itheima.Demo03_Exception01.TestException.main(TestException.java:6)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.4 异常的分类<br>•编译时的异常<br>写好代码之后，运行代码之前出现的异常<br>编译时异常：Exception以及Exception的子类(RuntimeException除外)</p><p>•运行时的异常<br>运行代码时出现的异常<br>运行时异常：RuntimeException以及其子类</p><p>编译时异常和运行时异常的区别：<br>Java中的异常被分为两大类：编译时异常和运行时异常，也被称为受检异常和非受检异常<br>所有的RuntimeException类及其子类被称为运行时异常，其他的异常都是编译时异常</p><p>3.5 JVM异常产生过程 - 默认处理方案<br>如果程序出现问题，且未做任何处理，最终JVM会做出默认的处理</p><ul><li>把异常名称，异常原因以及异常出现的位置等信息输出在控制台</li><li>程序停止执行</li></ul><p>四.异常处理<br>Java中异常相关的五个关键字<br>throw<br>throws<br>try…cache<br>finally</p><p>4.1 抛出异常throw<br>a.throw是什么：throw是一个关键字<br>b.什么时候使用到throw：想要向上抛出异常时，使用throw关键字<br>c.使用格式：throw 异常对象<br>d.案例演示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> element = getElement(arr);</span><br><span class="line">    System.out.println(element + <span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span>[] new_arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> new_element = getElement(new_arr);</span><br><span class="line">    System.out.println(new_element);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: Out of Array</span></span><br><span class="line"><span class="comment">        at com.itheima.Demo03_Exception01.TestException02.getElement(TestException02.java:18)</span></span><br><span class="line"><span class="comment">        at com.itheima.Demo03_Exception01.TestException02.main(TestException02.java:10)</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getElement</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//自己判断数组是否有3索引</span></span><br><span class="line">    <span class="keyword">if</span> (arr.length &lt; <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ArrayIndexOutOfBoundsException(<span class="string">"Out of Array"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取数组中索引为3的元素</span></span><br><span class="line">    <span class="keyword">int</span> number = arr[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.2 Objects中非空判断方法<br>public static <T> T requireNonNull(T obj);方法内部帮助我们判断是否为null</p><p>查看源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">requireNonNull</span><span class="params">(T obj)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (obj == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException;</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.3 遇到异常的两种处理方式<br>如果遇到编译时异常，可以使用以下两种方式处理<br>如果我们遇到运行时异常，编译时期不用处理，运行后根据异常信息修改代码即可</p><p>4.4.1 throws声明抛出异常<br>a.声明异常的格式<br>throws关键字是给方法使用的，为该方法做出声明，声明该方法内部有编译时异常，调用者需要使用该异常格式：</p><p>public void 方法名(参数列表)throws XxxException{<br>    代码（如果代码有异常）<br>}</p><p>b.案例演示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException</span>&#123;</span><br><span class="line">    ReadFiles(<span class="string">"1.txt"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//throws关键字是给方法用的，为该方法做出声明，声明该方法内部有编译时异常，调用者需要处理该异常</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ReadFiles</span><span class="params">(String name)</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">    <span class="comment">//假设硬盘上有一个1.txt文件</span></span><br><span class="line">    <span class="keyword">if</span> ((<span class="string">"1.txt"</span>).equals(name)) &#123;</span><br><span class="line">        System.out.println(<span class="string">"Successful"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//抛出异常</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> FileNotFoundException(<span class="string">"No File:"</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.4.2 try-cache捕获异常<br>a.捕获异常的格式<br>格式：<br>        try {<br>            可能出现异常的代码<br>        } catch (XxxException e) {<br>            //处理异常<br>            e.printStackTrace();//直接打印（开发阶段）<br>            save(e);//将异常保存到异常日志<br>        }</p><p>执行流程：<br>程序从try里面的代码开始执行<br>出现异常，会自动生成一个异常类对象，该异常对象被提交给Java Runtime系统<br>当Java Runtime系统接收到异常对象时，会到catch中去找匹配的异常类，找到后进行异常的处理<br>执行完毕后，程序还可以继续往下执行</p><p>b.案例演示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ReadFiles(<span class="string">"1.txt"</span>);</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        System.out.println(<span class="string">"Has Exception"</span>);</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ReadFiles(<span class="string">"2.txt"</span>);</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        System.out.println(<span class="string">"Has Exception"</span>);</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">"Continue"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//throws关键字是给方法用的，为该方法做出声明，声明该方法内部有编译时异常，调用者需要处理该异常</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ReadFiles</span><span class="params">(String name)</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">    <span class="comment">//假设硬盘上有一个1.txt文件</span></span><br><span class="line">    <span class="keyword">if</span> ((<span class="string">"1.txt"</span>).equals(name)) &#123;</span><br><span class="line">        System.out.println(<span class="string">"Successful"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//抛出异常</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> FileNotFoundException(<span class="string">"No File:"</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>c.捕获到异常之后，如何查看异常的信息<br>I.直接带你出来，调用e.printStackTrace();//一般开发阶段<br>II.可以先保存起来，比如保存到异常日志。e.save();//用户使用阶段</p><p>4.5 finally代码块<br>a.finally代码块的格式<br>finally一般不能单独使用，配合try…catch使用<br>        try {<br>            可能出现异常的代码<br>        } catch (XxxException e) {<br>            //处理异常<br>            e.printStackTrace();//直接打印（开发阶段）<br>            save(e);//将异常保存到异常日志<br>        }finally{<br>            写在finally中的代码，不论是否有异常，都会执行<br>        }<br>b.finally代码块的作用<br>写在finally中的代码，不论是否有异常，都会执行<br>一般用于写释放资源，关闭连接等代码</p><p>c.案例演示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    ReadFiles(<span class="string">"2.txt"</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">    System.out.println(<span class="string">"Has Exception"</span>);</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">    xxx.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7.异常的注意事项<br>•运行时异常被抛出可以不处理，不需要throws声明，也不需要try…catch捕获<br>•如果父类的方法抛出了多个异常，子类覆盖（重写）父类方法时，只能抛出相同的异常或者它的子集（即少于父类方法）<br>•父类方法没有抛出异常，子类在重写该方法时，必须也不能抛出异常<br>•当多异常分别处理时，捕获处理，前面的类不能是后面类的父类<br>I.每个异常单独try…catch(一般不使用)<br>try{<br>    method1();<br>}catch(1 e1){<br>}<br>try{<br>    method2();<br>}catch(2 e2){</p><p>}<br>II.所有异常一起try，但是分开catch(偶尔使用)<br>try{<br>    method1();<br>    method2();<br>}catch(1 e1){</p><p>}catch(2 e2){</p><p>}<br>注意事项：要求前面的异常必须是子类异常，后面的异常必须是父类异常</p><p>III.所有异常一起try，一个catch【经常使用】<br>try{<br>    method1();<br>    method2();<br>    method3();<br>}catch(Exception e1){</p><p>}</p><p>•在try/catch后可以追加finally代码块，其中的代码一定会被执行，通常用于资源回收。</p><p>五.自定义异常<br>5.1 为什么要定义异常<br>a.什么叫做自定义异常：自定义一个异常类，然后在适当时创建异常对象，并抛出<br>b.为什么要自定义异常：JDK提供的异常类不可能描述开发中所有问题</p><p>5.2 自定义异常的步骤<br>a.形似：创建一个类，类名必须叫XxxException<br>b.神似：继承Exception或RuntimeException<br>c.一般来说需要提供两个构造，无参构造+带有String参数的构造</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line">    <span class="comment">//无参构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//带有异常信息的构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//保存message参数</span></span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.3 自定义异常的练习<br>模拟操作，若用户名已存在，则抛出异常<br>a.JDK不带该异常，所以要自动抛出<br>b.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String name = <span class="keyword">new</span> Scanner(System.in).nextLine();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            register(name);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RegisterException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(String name)</span> <span class="keyword">throws</span> RegisterException </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; usernames = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Collections.addAll(usernames, <span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (usernames.contains(name)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RegisterException(<span class="string">"UserName Repeat"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Regeist Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：<br>a.选择排序的执行过程<br>        for (int i = 0; i &lt; arr.length - 1; i++) {<br>            for (int j = i + 1; j &lt; arr.length; j++) {<br>                if (arr[i] &gt; arr[j]) {<br>                    int temp = arr[i];<br>                    arr[i] = arr[j];<br>                    arr[j] = temp;<br>                }<br>            }<br>        }<br>b.二分查找<br>    public static int Binary_Search(int[] arr, int key) {<br>        int min = 0;<br>        int max = arr.length - 1;<br>        while (min &lt;= max) {<br>            int middle = (min + max) / 2;<br>            if (arr[middle] &gt; key) {<br>                max = middle - 1;<br>            } else if (arr[middle] &lt; key) {<br>                min = middle + 1;<br>            } else {<br>                return middle;<br>            }<br>        }<br>        return -1;<br>        }<br>c.能分辨程序中的异常和错误的区别<br>所有异常和错误的根类：Throwable<br>                    |-Error 错误类 一般是硬件引起，程序员一般无法处理<br>                    |-Exception 异常类，异常一般是由程序编写不当造成的，程序员有能力处理<br>                    |–编译时异常 Exception以及其子类（RuntimeException除外）<br>                    |–运行时异常 RuntimeException以及其子类<br>d.三个常见的运行时异常<br>    ArrayIndexOutOfBoundsException<br>    NullPointerException<br>    ClassPathException向下转型时出现的类型转换异常<br>e.使用try…catch关键字处理异常<br>try{</p><p>}catch()XxxException e{<br>    e.printStackTrace();<br>}<br>f.使用throws关键字处理异常<br>throws给方法用的，表名抛出异常，该调用的调用者要处理异常<br>public void 方法名(参数列表) throws Exception(){}<br>g.自定义异常</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（九）</title>
      <link href="/2020/03/12/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B9%9D%EF%BC%89/"/>
      <url>/2020/03/12/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B9%9D%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•Map集合<br>•斗地主案例<br>•冒泡排序</p><a id="more"></a><p>一.Map集合<br>1.1 Map的概述以及特点<br>什么是Map集合：<br>Collection集合称为单列集合，Map集合称为双列集合，key-value，键-值，名称：Entry<br>Map集合的特点：<br>a.Collection每个元素单独存在(单列)，Map每个元素成对存在(双列)<br>b.Map集合中，键必须是唯一的，值是可以重复的<br>c.Collection<E>中，泛型只有一个。Map&lt;K,V&gt;中，泛型有两个(其中K代表键Key的类，V代表值Value类)</p><p>1.2 Map的3个常用实现类以及其特点<br>Map接口有三个常见的实现类：<br>HashMap&lt;K,V&gt;:<br>底层采用哈希表结构<br>无序</p><p>LinkedHashMap&lt;K,V&gt;:<br>底层采用链表+哈希表结构<br>有序</p><p>TreeMap&lt;K,V&gt;:<br>底层采用红黑树结构<br>无序，键有自然顺序的，即按照键的自然顺序输出</p><p>重点：Map中为了保证键的唯一性，如果键是自定义类型，必须重写键的hashCode和equals方法</p><p>1.3 Map接口中定义的通用方法<br>增:public V put(K key, V value) ;添加一个键值对Entry，返回null<br>删:public V remove(Object key);根据键Key去删键值对Entry，返回被删除的键值对的值<br>查:public V get(Object key);根据键Key获取对应的值Value<br>改:public V put(K key, V value) ;添加一个重复的键时，该方法变为修改，返回修改前的值<br>其他:<br>public boolean containKey(Object K);判断Map中是否包含该键<br>public boolean containKey(Object V);判断Map中是否包含该值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;String ,Integer&gt; map = <span class="keyword">new</span> HashMap&lt;String,Integer&gt;();</span><br><span class="line"><span class="comment">//增加</span></span><br><span class="line">        map.put(<span class="string">"a"</span>,<span class="number">1</span>);</span><br><span class="line">        map.put(<span class="string">"b"</span>,<span class="number">2</span>);</span><br><span class="line">        map.put(<span class="string">"c"</span>,<span class="number">3</span>);</span><br><span class="line">        map.put(<span class="string">"d"</span>,<span class="number">4</span>);</span><br><span class="line">        map.put(<span class="string">"e"</span>,<span class="number">5</span>);</span><br><span class="line">        map.put(<span class="string">"f"</span>,<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(map);</span><br><span class="line"><span class="comment">//删除</span></span><br><span class="line">        Integer v1 = map.remove(<span class="string">"a"</span>);</span><br><span class="line">        System.out.println(v1);</span><br><span class="line">        System.out.println(map);</span><br><span class="line"><span class="comment">//删除不存在的v</span></span><br><span class="line">        Integer v2 = map.remove(<span class="string">"g"</span>);</span><br><span class="line">        System.out.println(v2);</span><br><span class="line">        System.out.println(map);</span><br><span class="line"><span class="comment">//获取</span></span><br><span class="line">        Integer v3 = map.get(<span class="string">"a"</span>);</span><br><span class="line">        System.out.println(v3);</span><br><span class="line">        System.out.println(map);</span><br><span class="line"><span class="comment">//修改也是调用put</span></span><br><span class="line">        Integer v4 = map.put(<span class="string">"c"</span>, <span class="number">12</span>);</span><br><span class="line">        System.out.println(v4);</span><br><span class="line">        System.out.println(map);</span><br><span class="line"><span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">boolean</span> k = map.containsKey(<span class="string">"a"</span>);</span><br><span class="line">        System.out.println(k);</span><br><span class="line">        <span class="keyword">boolean</span> v = map.containsValue(<span class="number">5</span>);</span><br><span class="line">        System.out.println(v);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>1.4 Map的遍历<br>•遍历方式一：以键找值<br>public Set<K> keySet() : 获取Map集合中所有的键，存储到Set集合中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;String, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;String, Integer&gt;();</span><br><span class="line"><span class="comment">//增加</span></span><br><span class="line">        map.put(<span class="string">"a"</span>, <span class="number">1</span>);</span><br><span class="line">        map.put(<span class="string">"b"</span>, <span class="number">2</span>);</span><br><span class="line">        map.put(<span class="string">"c"</span>, <span class="number">3</span>);</span><br><span class="line">        map.put(<span class="string">"d"</span>, <span class="number">4</span>);</span><br><span class="line">        map.put(<span class="string">"e"</span>, <span class="number">5</span>);</span><br><span class="line">        map.put(<span class="string">"f"</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">        Set&lt;String&gt; keys = map.keySet();</span><br><span class="line">        <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">            Integer value = map.get(key);</span><br><span class="line">            System.out.println(key);</span><br><span class="line">            System.out.println(value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>•遍历方式二:键值对方式<br>public Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet() : 获取到Map集合中所有的键值对对象的集合(Set集合)。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;String, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;String, Integer&gt;();</span><br><span class="line"><span class="comment">//增加</span></span><br><span class="line">        map.put(<span class="string">"a"</span>, <span class="number">1</span>);</span><br><span class="line">        map.put(<span class="string">"b"</span>, <span class="number">2</span>);</span><br><span class="line">        map.put(<span class="string">"c"</span>, <span class="number">3</span>);</span><br><span class="line">        map.put(<span class="string">"d"</span>, <span class="number">4</span>);</span><br><span class="line">        map.put(<span class="string">"e"</span>, <span class="number">5</span>);</span><br><span class="line">        map.put(<span class="string">"f"</span>, <span class="number">6</span>);</span><br><span class="line"><span class="comment">//Map集合遍历的第二种方式：键值对方式</span></span><br><span class="line">        <span class="comment">//获取所有键值对</span></span><br><span class="line">        Set&lt;Map.Entry&lt;String, Integer&gt;&gt; entries = map.entrySet();</span><br><span class="line">        <span class="comment">//遍历entrys集合</span></span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, Integer&gt; entry : entries) &#123;</span><br><span class="line">            <span class="comment">//从entry种取出键值</span></span><br><span class="line">            String key = entry.getKey();</span><br><span class="line">            Integer value = entry.getValue();</span><br><span class="line">            System.out.println(key+<span class="string">"..."</span>+value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>1.5 HashMap存储自定义类型的键<br>需求：创建一个Map，学生为键，家庭地址作值。</p><p>学生键：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    String Name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Student&#123;"</span> +</span><br><span class="line">                <span class="string">"Name='"</span> + Name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        Name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//为了保证学生键的唯一性，要重写hashCode和equals</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == o) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="keyword">null</span> || getClass() != o.getClass()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Student student = (Student) o;</span><br><span class="line">        <span class="keyword">return</span> age == student.age &amp;&amp;</span><br><span class="line">                Objects.equals(Name, student.Name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.hash(Name, age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试Demo：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    HashMap&lt;Student,String &gt;  std= <span class="keyword">new</span> HashMap&lt;Student,String&gt;();</span><br><span class="line">    std.put(<span class="keyword">new</span> Student(<span class="string">"a"</span>,<span class="number">1</span>), <span class="string">"PK"</span>);</span><br><span class="line">    std.put(<span class="keyword">new</span> Student(<span class="string">"b"</span>,<span class="number">2</span>), <span class="string">"GZ"</span>);</span><br><span class="line">    std.put(<span class="keyword">new</span> Student(<span class="string">"c"</span>,<span class="number">3</span>), <span class="string">"SH"</span>);</span><br><span class="line">    std.put(<span class="keyword">new</span> Student(<span class="string">"d"</span>,<span class="number">4</span>), <span class="string">"SZ"</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(std);</span><br><span class="line">    std.put(<span class="keyword">new</span> Student(<span class="string">"b"</span>,<span class="number">2</span>), <span class="string">"SC"</span>);</span><br><span class="line">    System.out.println(std);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结论：如果键是自定义类型，那么为了保证键的唯一性，必须重写hashCode和equals方法</p><p>1.6 LinkedHashMap介绍<br>HashMap底层采用哈希表结构，所以无序<br>LinkedHashMap底层采用的是链表结构+哈希表，所以是有序的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    LinkedHashMap&lt;String ,Integer&gt; LHS = <span class="keyword">new</span> LinkedHashMap&lt;String ,Integer&gt;();</span><br><span class="line"></span><br><span class="line">    LHS.put(<span class="string">"a"</span>, <span class="number">1</span>);</span><br><span class="line">    LHS.put(<span class="string">"c"</span>, <span class="number">1</span>);</span><br><span class="line">    LHS.put(<span class="string">"d"</span>, <span class="number">1</span>);</span><br><span class="line">    LHS.put(<span class="string">"b"</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(LHS);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.7 TreeMap集合<br>TreeMap底层采用的是红黑树结构，无序的，但是会以键的自然顺序输出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    TreeMap&lt;String ,Integer&gt; TM = <span class="keyword">new</span> TreeMap&lt;String,Integer&gt;();</span><br><span class="line"></span><br><span class="line">    TM.put(<span class="string">"a"</span>, <span class="number">1</span>);</span><br><span class="line">    TM.put(<span class="string">"c"</span>, <span class="number">2</span>);</span><br><span class="line">    TM.put(<span class="string">"e"</span>, <span class="number">3</span>);</span><br><span class="line">    TM.put(<span class="string">"d"</span>, <span class="number">4</span>);</span><br><span class="line">    TM.put(<span class="string">"b"</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(TM);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>扩展：<br>如果键是数值类型，那么按照数值的大小升序<br>如果键是Character类型，那么按照字母的码值排序<br>如果键是String类型，那么按照字母首字母排序，若一样，次字母排序，依次类推<br>这四种结论是一样的：Arrays.sort() Collections.sort() TreeSet TreeMap</p><p>我们也可以使用比较器排序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    TreeMap&lt;String, Integer&gt; TM = <span class="keyword">new</span> TreeMap&lt;String, Integer&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    TM.put(<span class="string">"a"</span>, <span class="number">1</span>);</span><br><span class="line">    TM.put(<span class="string">"c"</span>, <span class="number">2</span>);</span><br><span class="line">    TM.put(<span class="string">"e"</span>, <span class="number">3</span>);</span><br><span class="line">    TM.put(<span class="string">"d"</span>, <span class="number">4</span>);</span><br><span class="line">    TM.put(<span class="string">"b"</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(TM);</span><br><span class="line"></span><br><span class="line">    TreeMap&lt;Integer, String&gt; new_TM = <span class="keyword">new</span> TreeMap&lt;Integer, String&gt;(<span class="keyword">new</span> Comparator&lt;Integer&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Integer o1, Integer o2)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> o2 - o1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    new_TM.put(<span class="number">1</span>, <span class="string">"a"</span>);</span><br><span class="line">    new_TM.put(<span class="number">3</span>, <span class="string">"a"</span>);</span><br><span class="line">    new_TM.put(<span class="number">2</span>, <span class="string">"a"</span>);</span><br><span class="line">    new_TM.put(<span class="number">5</span>, <span class="string">"a"</span>);</span><br><span class="line">    new_TM.put(<span class="number">4</span>, <span class="string">"a"</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(new_TM);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    TreeMap&lt;Student, String&gt; std = <span class="keyword">new</span> TreeMap&lt;Student, String&gt;(<span class="keyword">new</span> Comparator&lt;Student&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Student o1, Student o2)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> o2.Name.length() - o1.Name.length();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    std.put(<span class="keyword">new</span> Student(<span class="string">"aa"</span>, <span class="number">1</span>), <span class="string">"PK"</span>);</span><br><span class="line">    std.put(<span class="keyword">new</span> Student(<span class="string">"bbb"</span>, <span class="number">2</span>), <span class="string">"GZ"</span>);</span><br><span class="line">    std.put(<span class="keyword">new</span> Student(<span class="string">"cc"</span>, <span class="number">3</span>), <span class="string">"SH"</span>);</span><br><span class="line">    std.put(<span class="keyword">new</span> Student(<span class="string">"ddddd"</span>, <span class="number">4</span>), <span class="string">"SZ"</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(std);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.8 Map集合练习<br>输入一个字符串，统计字符串中每个字符出现的次数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个Map</span></span><br><span class="line">        LinkedHashMap&lt;Character, Integer&gt; LHM = <span class="keyword">new</span> LinkedHashMap&lt;Character, Integer&gt;();</span><br><span class="line"><span class="comment">//输入一个字符串</span></span><br><span class="line">        System.out.println(<span class="string">"input char"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String str = <span class="keyword">new</span> Scanner(System.in).nextLine();</span><br><span class="line"><span class="comment">//遍历字符串</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line"><span class="comment">//           取出字符串中的某个字符</span></span><br><span class="line">            <span class="keyword">char</span> ch = str.charAt(i);</span><br><span class="line"><span class="comment">//这个字符ch以前出现过</span></span><br><span class="line">            <span class="keyword">if</span> (LHM.containsKey(ch)) &#123;</span><br><span class="line">                Integer oldCount = LHM.get(ch);</span><br><span class="line">                LHM.put(ch, oldCount + <span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                LHM.put(ch, <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(LHM);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>二.集合的嵌套<br>什么是集合嵌套<br>集合中的元素还是一个集合</p><p>2.1 List嵌套list</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; class1 = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">        Collections.addAll(class1, <span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>);</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; class2 = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        Collections.addAll(class2, <span class="string">"e"</span>, <span class="string">"f"</span>, <span class="string">"g"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        将class1和class2保存到一个大集合中</span></span><br><span class="line">        ArrayList&lt;ArrayList&lt;String&gt;&gt; classAll = <span class="keyword">new</span> ArrayList&lt;ArrayList&lt;String&gt;&gt;();</span><br><span class="line"></span><br><span class="line">        Collections.addAll(classAll, class1, class2);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (ArrayList&lt;String&gt; className : classAll) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String name:className</span><br><span class="line">                 ) &#123;</span><br><span class="line">                System.out.println(name);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(className);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>2.2 List嵌套Map<br>a.保存两个班学生的姓名以及对应的年龄</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    HashMap&lt;String, Integer&gt; class1 = <span class="keyword">new</span> HashMap&lt;String, Integer&gt;();</span><br><span class="line">    class1.put(<span class="string">"a"</span>, <span class="number">12</span>);</span><br><span class="line">    class1.put(<span class="string">"b"</span>, <span class="number">11</span>);</span><br><span class="line">    class1.put(<span class="string">"c"</span>, <span class="number">13</span>);</span><br><span class="line">    class1.put(<span class="string">"d"</span>, <span class="number">14</span>);</span><br><span class="line">    class1.put(<span class="string">"e"</span>, <span class="number">18</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    HashMap&lt;String, Integer&gt; class2 = <span class="keyword">new</span> HashMap&lt;String, Integer&gt;();</span><br><span class="line">    class2.put(<span class="string">"f"</span>, <span class="number">19</span>);</span><br><span class="line">    class2.put(<span class="string">"g"</span>, <span class="number">17</span>);</span><br><span class="line">    class2.put(<span class="string">"h"</span>, <span class="number">16</span>);</span><br><span class="line">    class2.put(<span class="string">"i"</span>, <span class="number">15</span>);</span><br><span class="line">    class2.put(<span class="string">"k"</span>, <span class="number">14</span>);</span><br><span class="line"></span><br><span class="line">    ArrayList&lt;HashMap&lt;String, Integer&gt;&gt; classAll = <span class="keyword">new</span> ArrayList&lt;HashMap&lt;String, Integer&gt;&gt;();</span><br><span class="line">    classAll.add(class1);</span><br><span class="line">    classAll.add(class2);</span><br><span class="line"></span><br><span class="line">    System.out.println(classAll);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (HashMap&lt;String, Integer&gt; className : classAll</span><br><span class="line">    ) &#123;</span><br><span class="line">        Set&lt;String&gt; keys = className.keySet();</span><br><span class="line">        <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">            System.out.println(key);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(className);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.3 Map嵌套Map<br>a.保存两个班的名字，和班里的同学的姓名，以及对应的年龄</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;String, Integer&gt; class1 = <span class="keyword">new</span> HashMap&lt;String, Integer&gt;();</span><br><span class="line">        class1.put(<span class="string">"a"</span>, <span class="number">12</span>);</span><br><span class="line">        class1.put(<span class="string">"b"</span>, <span class="number">11</span>);</span><br><span class="line">        class1.put(<span class="string">"c"</span>, <span class="number">13</span>);</span><br><span class="line">        class1.put(<span class="string">"d"</span>, <span class="number">14</span>);</span><br><span class="line">        class1.put(<span class="string">"e"</span>, <span class="number">18</span>);</span><br><span class="line"></span><br><span class="line">        HashMap&lt;String, Integer&gt; class2 = <span class="keyword">new</span> HashMap&lt;String, Integer&gt;();</span><br><span class="line">        class2.put(<span class="string">"f"</span>, <span class="number">19</span>);</span><br><span class="line">        class2.put(<span class="string">"g"</span>, <span class="number">17</span>);</span><br><span class="line">        class2.put(<span class="string">"h"</span>, <span class="number">16</span>);</span><br><span class="line">        class2.put(<span class="string">"i"</span>, <span class="number">15</span>);</span><br><span class="line">        class2.put(<span class="string">"k"</span>, <span class="number">14</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将两个班级的Map集合保存到另一个集合中，要求有该班级的名字</span></span><br><span class="line">        HashMap&lt;String, HashMap&lt;String, Integer&gt;&gt; classAll = <span class="keyword">new</span> HashMap&lt;String, HashMap&lt;String, Integer&gt;&gt;();</span><br><span class="line"></span><br><span class="line">        classAll.put(<span class="string">"class one"</span>, class1);</span><br><span class="line">        classAll.put(<span class="string">"class two"</span>, class2);</span><br><span class="line"></span><br><span class="line">        System.out.println(classAll);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取所有的键</span></span><br><span class="line">        Set&lt;String&gt; names = classAll.keySet();</span><br><span class="line"></span><br><span class="line">        System.out.println(names);</span><br><span class="line"><span class="comment">//遍历所有的键</span></span><br><span class="line">        <span class="keyword">for</span> (String name : names) &#123;</span><br><span class="line">            <span class="comment">//以值找值</span></span><br><span class="line">            HashMap&lt;String, Integer&gt; map = classAll.get(name);</span><br><span class="line">            <span class="comment">//获取map所有的键</span></span><br><span class="line">            System.out.println(map);</span><br><span class="line"></span><br><span class="line">            Set&lt;String&gt; ns = map.keySet();</span><br><span class="line">            <span class="keyword">for</span> (String n : ns</span><br><span class="line">            ) &#123;</span><br><span class="line">                Integer value = map.get(n);</span><br><span class="line">                System.out.println(n + <span class="string">"..."</span> + value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>三.模拟斗地主洗牌发牌<br>3.1 案例介绍<br>3.2 案例分析<br>斗地主要想办法自定义排序规则<br>核心思想：给斗地主中每一张牌，准备一个编号<br>a.不能出现相同的编号<br>b.牌越大，编号越大</p><p>I.准备编号和牌组成的Map集合<br>II.准备54个编号（一副牌）<br>III.洗牌（打乱集合）<br>V.发牌（遍历集合）<br>IV.对编号排序（sort）<br>IIV.转牌（以键找值map.get）<br>IIIV.打印给用户（println）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        I.准备编号和牌组成的Map集合</span></span><br><span class="line"></span><br><span class="line">        LinkedHashMap&lt;Integer, String&gt; Map = <span class="keyword">new</span> LinkedHashMap&lt;Integer, String&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//a.花色4种</span></span><br><span class="line">        String[] colors = &#123;<span class="string">"黑桃♠️"</span>, <span class="string">"红桃♥️"</span>, <span class="string">"梅花♣️"</span>, <span class="string">"方片♦️"</span>&#125;;</span><br><span class="line"><span class="comment">//b.数值13种</span></span><br><span class="line">        String[] numbers = &#123;<span class="string">"3"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>, <span class="string">"7"</span>, <span class="string">"8"</span>, <span class="string">"9"</span>, <span class="string">"10"</span>, <span class="string">"J"</span>, <span class="string">"K"</span>, <span class="string">"Q"</span>, <span class="string">"A"</span>, <span class="string">"2"</span>&#125;;</span><br><span class="line"><span class="comment">//c.组合拍</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> id = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (String num : numbers) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String color : colors) &#123;</span><br><span class="line">                String card = color + num;</span><br><span class="line"><span class="comment">//                for ( i &lt; num.length(); i++) &#123;</span></span><br><span class="line">                Map.put(id, card);</span><br><span class="line">                id++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Map.put(<span class="number">53</span>, <span class="string">"小王"</span>);</span><br><span class="line">        Map.put(<span class="number">54</span>, <span class="string">"大王"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        II.准备54个编号（一副牌）</span></span><br><span class="line">        ArrayList&lt;Integer&gt; Cards = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">55</span>; i++) &#123;</span><br><span class="line">            Cards.add(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//        III.洗牌（打乱集合）</span></span><br><span class="line">        Collections.shuffle(Cards);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//        V.发牌（遍历集合）</span></span><br><span class="line">        ArrayList&lt;Integer&gt; player1 = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        ArrayList&lt;Integer&gt; player2 = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        ArrayList&lt;Integer&gt; player3 = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        ArrayList&lt;Integer&gt; Holo_Card = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//        IV.对编号排序（sort）</span></span><br><span class="line">        <span class="comment">//此处不能使用增强for</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Cards.size()-<span class="number">3</span>; i++) &#123;</span><br><span class="line">            Integer Card = Cards.get(i);</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                player1.add(Card);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">1</span>) &#123;</span><br><span class="line">                player2.add(Card);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                player3.add(Card);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//最后3张给底牌</span></span><br><span class="line">        Holo_Card.add(Cards.get(<span class="number">53</span>));</span><br><span class="line">        Holo_Card.add(Cards.get(<span class="number">52</span>));</span><br><span class="line">        Holo_Card.add(Cards.get(<span class="number">51</span>));</span><br><span class="line"></span><br><span class="line">        Collections.sort(player1);</span><br><span class="line">        Collections.sort(player2);</span><br><span class="line">        Collections.sort(player3);</span><br><span class="line">        Collections.sort(Holo_Card);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//        IIV.转牌（以键找值map.get）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        IIIV.打印给用户（println）</span></span><br><span class="line"></span><br><span class="line">        lookCards(player1, Map);</span><br><span class="line">        lookCards(player2, Map);</span><br><span class="line">        lookCards(player3, Map);</span><br><span class="line">        lookCards(Holo_Card, Map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">lookCards</span><span class="params">(ArrayList&lt;Integer&gt; idCards, LinkedHashMap&lt;Integer, String&gt; Map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Integer idCard : idCards) &#123;</span><br><span class="line">            String card = Map.get(idCard);</span><br><span class="line">            System.out.println(card + <span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>3.3 代码实现</p><p>四.冒泡排序<br>排序:将一组数据按照固定的规则进行排列</p><p>4.1 冒泡排序的介绍<br>所谓的冒泡排序的思想：<br>依次比较数组/集合中相连的两个元素，然后将较大的元素放在后面，最后按照从小到大的顺序排列出来<br>规律：<br>•如果有n个数进行排序比较，那么比较次数为n-1轮<br>•每轮比较完毕，下一轮比较就会少一个数据参与</p><p>4.2 冒泡排序过程图解</p><p>4.3 代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] arr = &#123;<span class="number">4</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">82</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">5</span>&#125;;</span><br><span class="line">    <span class="comment">//外层循环，控制循环次数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="comment">//内层循环，控制比较次数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">int</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(Arrays.toString(arr));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：<br>1.Map接口中定义对通用方法*<br>put(K,V);<br>remove(K);<br>get(K)<br>put(repeat K,V)<br>containsKey(K)<br>containsValue(V)</p><p>2.Map各种实现类对遍历方式(以键找值，键值对)*<br>a.以键找值<br>set<K> keys = map.kepSet();<br>for(K key:keys){//遍历所有的键<br>//以键找值<br>V value = map.get(key);<br>sout(key,value);<br>}</p><p>b.键值对<br>set&lt;Map.Entry&lt;K,V&gt;&gt; entrys = map.entrySet();//获取所有的键值对集合<br>for(Map.Entry&lt;K,V&gt; entry:entrys)//遍历键值对集合<br>{<br>    K key = entry.getKey();//获取键值中对键和值<br>    V value = entry.getValue();//获取键值中对键和值<br>    sout(key,value);<br>}<br>3.集合嵌套<br>a.List套list<br>ArrayList&lt;ArrayList<String>&gt; arr;</p><p>b.List套Map<br>ArrayList&lt;HashMap&lt;String,Integet&gt;&gt; arr;</p><p>c.Map套map<br>HashMap&lt;String,HashMap&lt;String,Integer&gt;&gt; map;</p><p>4.斗地主案例*</p><p>5.冒泡排序<br>a.冒泡过程<br>b.算法背下来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr.lenth-<span class="number">1</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;arr.lenth-<span class="number">1</span>-i;j++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(arr[j]&gt;arr[j+i])&#123;</span><br><span class="line">    <span class="keyword">int</span> temp=arr[j];</span><br><span class="line">    arr[j]=arr[j+<span class="number">1</span>]</span><br><span class="line">    arr[j+<span class="number">1</span>]=temp;</span><br><span class="line">    &#125;&#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（八）</title>
      <link href="/2020/03/11/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AB%EF%BC%89/"/>
      <url>/2020/03/11/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AB%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•List集合<br>•Collections工具类<br>•Set集合</p><a id="more"></a><p>一.List接口<br>1.1 List接口的特点<br>    a.List接口 继承  Collection接口<br>    b.List接口的特点：<br>        有序的（Java中的有序不是指自然顺序，而是指存取元素的顺序是一致的，什么顺序存就怎么取）<br>        有索引的<br>        元素可重复的(存储的元素可以重复)</p><p>1.2 List接口中常用的方法以及常用实现类<br>    a.List接口继承Collection接口，所以已经有了collection中的8个（7个常见+iterator）<br>    b.List接口还有自己的特有方法（4个）：<br>        增：add(int index,E e)<br>        删：remove(int index,E e)<br>        改：set(int index,E e)<br>        查：get(int index,E e)<br>    c.List接口有哪些实现类<br>        ArrayList[]<br>        LinkedList[]<br>        Vector[]</p><p>1.3 ArrayList的数据结构以及使用<br>    a.ArrayList集合的方法(7个collection+1个迭代器+4个List接口中的)<br>    特有方法：无<br>    b.ArrayList集合底层采用的是数组结构，特点：查改快，增删慢<br>    c.使用ArrayList</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;String&gt; arr = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">    arr.add(<span class="string">"Java1"</span> );</span><br><span class="line">    arr.add(<span class="string">"Java2"</span> );</span><br><span class="line">    arr.add(<span class="string">"Java3"</span> );</span><br><span class="line">    arr.add(<span class="number">2</span>, <span class="string">"99"</span>);</span><br><span class="line">    System.out.println(arr);</span><br><span class="line"></span><br><span class="line">    arr.remove(<span class="number">3</span>);</span><br><span class="line">    System.out.println(arr);</span><br><span class="line"></span><br><span class="line">    arr.set(<span class="number">1</span>, <span class="string">"11"</span>);</span><br><span class="line">    System.out.println(arr);</span><br><span class="line"></span><br><span class="line">    System.out.println(arr.get(<span class="number">2</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>List的并发修改异常<br>并发修改异常：ConcurrentModificationException<br>•ConcurrentModificationException<br>产生原因：<br>•迭代器遍历的过程中，通过集合对象修改了集合中元素的长度，造成类迭代器获取元素中判断欲求修改值和实际修改值不一致<br>解决方案：<br>•用for循环遍历，然后用集合对象做对应的操作即可(get方法)</p><p>ListIterator：列表迭代器<br>•通过List集合的listIterator()方法得到，它是List集合特有的迭代器<br>•用于允许程序员沿任一方向遍历列表的列表迭代器，在迭代期间修改列表，并获取列表中迭代器的当前位置</p><p>ListIterator中的常用方法<br>•E next();返回迭代中的下一个元素<br>•boolean hasNext();如果迭代器具有更多元素，则返回true<br>•E previous();返回迭代中的上一个元素<br>•boolean hasPrevious();如果此列表迭代器在相反方向遍历列表时具有更多元素，则返回true<br>•void add(E e);将指定的元素插入列表</p><p>1.4 LinkedList的数据结构以及使用<br>    a.LinkedList的方法(7个collection+1个迭代器+4个List接口中的)<br>    有特有方法：<br>    public void addFirst(E e);//添加元素到集合首<br>    public void addLast(E e);//添加元素到集合尾<br>    public E getFirst(E e);//获取集合的首元素<br>    public E getLast(E e);//获取集合的尾元素<br>    public E removeFirst(E e);//删除集合的首元素<br>    public E removeLast(E e);//删除集合的尾元素</p><pre><code>public void pop(E e);//删除集合中的首元素，底层就是removeFirstpublic void push(E e);//添加集合中的首元素，底层就是addFirst</code></pre><p>源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> removeFirst();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    addFirst(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>b.LinkedList底层采用的是链表结构，特点：查改慢，增删快c.使用LinkedList</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    LinkedList&lt;String&gt; list = <span class="keyword">new</span> LinkedList&lt;String &gt;();</span><br><span class="line">    list.add(<span class="string">"a"</span>);</span><br><span class="line">    list.add(<span class="string">"b"</span>);</span><br><span class="line">    list.add(<span class="string">"c"</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(list);</span><br><span class="line"></span><br><span class="line">    list.addFirst(<span class="string">"1"</span>);</span><br><span class="line">    list.addLast(<span class="string">"10"</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(list);</span><br><span class="line"></span><br><span class="line">    System.out.println(list.getFirst());</span><br><span class="line">    System.out.println(list.getLast());</span><br><span class="line"></span><br><span class="line">    list.removeFirst();</span><br><span class="line">    System.out.println(list);</span><br><span class="line"></span><br><span class="line">    list.removeLast();</span><br><span class="line">    System.out.println(list);</span><br><span class="line"></span><br><span class="line">    list.pop();</span><br><span class="line">    System.out.println(list);</span><br><span class="line"></span><br><span class="line">    list.push(<span class="string">"2"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.5 LinkedList的源码分析<br>a.LinkedList底层采用的是链表结构（双向列表）</p><p>b.LinkedList这个类有两个成员变量<br>Node<E> first;记录了开始结点<br>Node<E> last;记录了结束结点</p><p>c.结点类Node，它是LinkedList的内部类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">    E item;<span class="comment">//该节点的数据域</span></span><br><span class="line">    Node&lt;E&gt; next;<span class="comment">//指针域，指向下一个结点</span></span><br><span class="line">    Node&lt;E&gt; prev;<span class="comment">//指针域，指向上一个结点</span></span><br></pre></td></tr></table></figure><p>d.LinkedList的add方法<br>I.将新增的结点，添加到last之后<br>II.并且将size++，总元素个数加一</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    linkLast(e);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>e.LinkedList的get方法<br>I.先查找指定索引的结点，（从前往后找，从后往前找）<br>II.找到结点后，获取结点的数据栈，然后返回</p><p>完整版：<br>•LinkedList的成员变量源码分析:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedList</span>&lt;<span class="title">E</span>&gt; <span class="keyword">extends</span> <span class="title">AbstractSequentialList</span>&lt;<span class="title">E</span>&gt;</span></span><br><span class="line"><span class="class">        <span class="keyword">implements</span> <span class="title">List</span>&lt;<span class="title">E</span>&gt;, <span class="title">Deque</span>&lt;<span class="title">E</span>&gt;, <span class="title">Cloneable</span>, <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">transient</span> <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 存储第一个节点的引用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">transient</span> Node&lt;E&gt; first;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 存储最后一个节点的引用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">transient</span> Node&lt;E&gt; last;</span><br><span class="line">    <span class="comment">//......</span></span><br><span class="line">    <span class="comment">//......</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•LinkedList的内部类Node类源码分析:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedList</span>&lt;<span class="title">E</span>&gt; <span class="keyword">extends</span> <span class="title">AbstractSequentialList</span>&lt;<span class="title">E</span>&gt;</span></span><br><span class="line"><span class="class">        <span class="keyword">implements</span> <span class="title">List</span>&lt;<span class="title">E</span>&gt;, <span class="title">Deque</span>&lt;<span class="title">E</span>&gt;, <span class="title">Cloneable</span>, <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="comment">//......</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">        E item;<span class="comment">//被存储的对象</span></span><br><span class="line">        Node&lt;E&gt; next;<span class="comment">//下一个节点</span></span><br><span class="line">        Node&lt;E&gt; prev;<span class="comment">//前一个节点</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//构造方法</span></span><br><span class="line">        Node(Node&lt;E&gt; prev, E element, Node&lt;E&gt; next) &#123;</span><br><span class="line">            <span class="keyword">this</span>.item = element;</span><br><span class="line">            <span class="keyword">this</span>.next = next;</span><br><span class="line">            <span class="keyword">this</span>.prev = prev;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//......</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•LinkedList的add()方法源码分析:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    linkLast(e);<span class="comment">//调用linkLast()方法 </span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;<span class="comment">//永远返回true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">linkLast</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; l = last;<span class="comment">//一个临时变量，存储最后一个节点</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; newNode = <span class="keyword">new</span> Node&lt;&gt;(l, e, <span class="keyword">null</span>);<span class="comment">//创建一个Node对象 </span></span><br><span class="line">    last = newNode;<span class="comment">//将新Node对象存储到last</span></span><br><span class="line">    <span class="keyword">if</span> (l == <span class="keyword">null</span>)<span class="comment">//如果没有最后一个元素，说明当前是第一个节点</span></span><br><span class="line">        first = newNode;<span class="comment">//将新节点存为第一个节点 else</span></span><br><span class="line">    l.next = newNode;<span class="comment">//否则不是第一个节点，就赋值到当前的last的next成员 </span></span><br><span class="line">    size++;<span class="comment">//总数量 + 1</span></span><br><span class="line">    modCount++;<span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•LinkedList的get()方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    checkElementIndex(index);<span class="comment">//检查索引的合法性(必须在0-size之间)，如果不合法，此方法抛出异常</span></span><br><span class="line">    <span class="keyword">return</span> node(index).item;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Node&lt;E&gt; <span class="title">node</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;<span class="comment">//此方法接收一个索引，返回一个Node</span></span><br><span class="line">    <span class="comment">// assert isElementIndex(index);</span></span><br><span class="line">    <span class="keyword">if</span> (index &lt; (size &gt;&gt; <span class="number">1</span>)) &#123;<span class="comment">//判断要查找的index是否小于size / 2，二分法查找</span></span><br><span class="line">        Node&lt;E&gt; x = first;<span class="comment">// x = 第一个节点——从前往后找</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index; i++)<span class="comment">//从0开始，条件:i &lt; index，此循环只控制次数</span></span><br><span class="line">            x = x.next;<span class="comment">//每次 x = 当前节点.next; </span></span><br><span class="line">        <span class="keyword">return</span> x;<span class="comment">//循环完毕，x就是index索引的节点。</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Node&lt;E&gt; x = last;<span class="comment">// x = 最后一个节点——从后往前找</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = size - <span class="number">1</span>; i &gt; index; i--)<span class="comment">//从最后位置开始，条件:i &gt; index</span></span><br><span class="line">            x = x.prev;<span class="comment">//每次 x = 当前节点.prev; </span></span><br><span class="line">        <span class="keyword">return</span> x;<span class="comment">//循环完毕，x就是index索引的节点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二.Collections类<br>2.1 Collections的介绍<br>Collections不是collection！<br>作用：Collections是一个集合的工具类，该类中有一堆静态方法，专门操作集合</p><p>2.2 Collections常用功能<br>public static void shuffle(List<?> list);//随机打乱集合中元素的顺序public static void sort(List<?> list);//将集合中的元素进行升序排序</p><p>扩展：Collections的sort方法，默认是对集合中对元素进行升序排序<br>如果集合的泛型是数值类型，那么按照数值的大小升序<br>如果集合的泛型是Character类型，那么按照字母的码值排序<br>如果集合的泛型是String类型，那么按照字母首字母排序，若一样，次字母排序，依次类推<br>提示：Collections.sort方法结论和Array.sort()是一样的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  ArrayList&lt;Integer&gt; arr = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line"></span><br><span class="line">    arr.add(<span class="number">1</span>);</span><br><span class="line">    arr.add(<span class="number">2</span>);</span><br><span class="line">    arr.add(<span class="number">3</span>);</span><br><span class="line">    arr.add(<span class="number">5</span>);</span><br><span class="line">    arr.add(<span class="number">9</span>);</span><br><span class="line">    arr.add(<span class="number">8</span>);</span><br><span class="line">    arr.add(<span class="number">7</span>);</span><br><span class="line">    arr.add(<span class="number">6</span>);</span><br><span class="line">    arr.add(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(arr);</span><br><span class="line"></span><br><span class="line">    Collections.sort(arr);</span><br><span class="line">    System.out.println(arr);</span><br><span class="line"></span><br><span class="line">    Collections.shuffle(arr);</span><br><span class="line">    System.out.println(arr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.3 Comparator比较器排序<br>Collections还有一个sort方法：<br>public static <T> void sort(List<T> list,Comparator<T> com);带有比较器的排序方法<br>这个比较器源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Comparator</span>&lt;<span class="title">T</span>&gt;</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(T o1, T o2)</span></span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们注意到Comparator实际上是一个接口，那么我们在调用sort方法时，需要传人一个该接口的实现类对象（匿名内部类）</p><p>降序排序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Collections.sort(arr, <span class="keyword">new</span> Comparator&lt;Integer&gt;() &#123;</span><br><span class="line">    <span class="comment">/*该方法就是比较方法，它会把集合中每两个元素传入</span></span><br><span class="line"><span class="comment">    @param o1 第一个元素</span></span><br><span class="line"><span class="comment">    @param o2 第二个元素</span></span><br><span class="line"><span class="comment">    @return 返回值代表谁大谁小，如果是正数代表o1大，负数则代表o2大，如果0代表一样大</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     口诀：升序前减后，降序后减前</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Integer o1, Integer o2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> o2-o1;<span class="comment">//降序</span></span><br><span class="line">        <span class="comment">//return o1-o2; //升序</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>自定义排序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Dog&gt; arr = <span class="keyword">new</span> ArrayList&lt;Dog&gt;();</span><br><span class="line"></span><br><span class="line">        arr.add(<span class="keyword">new</span> Dog(<span class="number">1</span>, <span class="string">"a"</span>, <span class="number">4</span>));</span><br><span class="line">        arr.add(<span class="keyword">new</span> Dog(<span class="number">2</span>, <span class="string">"b"</span>, <span class="number">2</span>));</span><br><span class="line">        arr.add(<span class="keyword">new</span> Dog(<span class="number">3</span>, <span class="string">"c"</span>, <span class="number">3</span>));</span><br><span class="line">        arr.add(<span class="keyword">new</span> Dog(<span class="number">4</span>, <span class="string">"d"</span>, <span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">        Collections.sort(arr, <span class="keyword">new</span> Comparator&lt;Dog&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Dog o1, Dog o2)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//按照年龄降序排序</span></span><br><span class="line"><span class="comment">//                return o2.age - o1.age;</span></span><br><span class="line">                <span class="comment">//按照姓名升序排序</span></span><br><span class="line"><span class="comment">//                return o1.name.length() - o2.name.length();</span></span><br><span class="line">                <span class="comment">//按照年龄和腿数总和升序</span></span><br><span class="line">                <span class="keyword">return</span> (o1.age+o1.legs_num)-(o2.age+o2.legs_num);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Dog dog : arr) &#123;</span><br><span class="line">            System.out.println(dog);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>2.4 可变参数<br>a.什么是可变参数：是指方法参数的个数可以任意[JDK 1.5]<br>b.可变参数的格式：<br>数据类型 … 变量名</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span> ... a)</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>可变参数的本质其实就是一个数组；<br>注意事项：<br>a.一个方法中最多只能有一个可变参数<br>b.一个方法中如果既有正常参数，又有可变参数，那么可变参数必须写在最后面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(getSum());</span><br><span class="line">    System.out.println(getSum(<span class="number">1</span>));</span><br><span class="line">    System.out.println(getSum(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">    System.out.println(getSum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">    System.out.println(getSum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>));</span><br><span class="line">    System.out.println(getSum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span>... a)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"length: "</span>+a.length);</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i : a) &#123;</span><br><span class="line">        sum +=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.5 可变参数的应用场景<br>Arrays工具类中有一个静态方法:<br>•public static <T> List<T> asList&lt;T…a&gt;:返回由指定数组支持的固定大小的列表<br>•返回的集合不能做 增 删 操作，可以做修改操作</p><p>List接口中有一个静态方法:<br>•public static <E> List<E> of(E…elements):返回包含任意数量元素的不可变列表<br>•返回的集合不能做 增 删 该 操作</p><p>Set接口中有一个静态方法:<br>•public static <E> Set<E> of(E…elements):返回一个包含任意数量元素的不可变集合<br>•在给元素时，不能给重复的元素</p><p>例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;String &gt; arr= <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Collections工具类又有一个方法，叫做addAll</span></span><br><span class="line">    Collections.addAll(arr,<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"d"</span>,<span class="string">"e"</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(arr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一次性向集合中添加多个元素</p><p>三.Set接口<br>3.1 Set接口的特点<br>a.Set接口也是继承Collection接口<br>b.Set接口的特点：<br>    无序的（指存取顺序不保证一致）<br>    无索引的(使用不能使用普通for循环遍历)<br>    元素唯一的</p><pre><code>但是实际上，严格来说，无序特点是不对的(实现类LinkedHashSet是有序的)</code></pre><p>3.2 Set接口的常用方法以及常用实现类<br>    a.Set接口中的方法(7个collection+1个迭代器)<br>    b.Set方法的特有方法：无</p><pre><code>c.Set接口的实现类:HashSetLinkedHashSetTreeSet</code></pre><p>3.3 HashSet的数据结构以及使用<br>a.HashSet也没有特有方法<br>b.HashSet底层采用的是哈希表结构(数组结构+链表结构+红黑树结构)<br>•对集合的迭代顺序不作任何保证，也就是说不保证存储和取出的元素 顺序一致<br>•没有带索引的方法，索引不能使用普通for循环遍历<br>•Set集合，所以是不包含重复元素的集合<br>c.HashSet的使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    HashSet&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">    Collections.addAll(set, <span class="string">"php"</span>,<span class="string">"Java"</span>,<span class="string">"C#"</span>);</span><br><span class="line">    Collections.addAll(set, <span class="string">"Java"</span>,<span class="string">"C#"</span>,<span class="string">"Delphi"</span>,<span class="string">"C"</span>,<span class="string">"CPP"</span>,<span class="string">"Python"</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(set);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.4 LinkedHashSet的数据结构以及使用<br>a.LinkedHashSet也没有特有方法<br>b.LinkedHashSet底层采用的是（链表结构+哈希表结构）<br>•由链表保证元素有序，也就是说元素的存储和取出顺序是一样的<br>•由哈希表保证元素唯一，也就是说没有重复的元素</p><p>c.LinkedHashSet的使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LinkedHashSet LHS = <span class="keyword">new</span> LinkedHashSet&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">        Collections.addAll(LHS, <span class="string">"php"</span>, <span class="string">"Java"</span>, <span class="string">"C#"</span>);</span><br><span class="line">        Collections.addAll(LHS, <span class="string">"Java"</span>, <span class="string">"C#"</span>, <span class="string">"Delphi"</span>, <span class="string">"C"</span>, <span class="string">"CPP"</span>, <span class="string">"Python"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(LHS);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.5 TreeSet的数据结构以及使用<br>a.TreeSet特点<br>无序的（无序是存取顺序不保证一致，但是它会以自然顺序输出）<br>    TreeSet是无序的，但是它是无序中的一种特殊存在，有自然顺序！<br>    TreeSet(Comparator comparator)：根据指定的比较器进行排序<br>无索引，所以不能用普通for循环<br>元素唯一，因为是Set集合<br>b.TreeSet特有方法:无<br>c.TreeSet底层采用的是红黑树结构<br>d.TreeSet的使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">        TreeSet&lt;Integer&gt; tree = <span class="keyword">new</span> TreeSet&lt;Integer&gt;();</span><br><span class="line"><span class="comment">//添加元素，没有带索引的方法，证明无索引</span></span><br><span class="line"><span class="comment">//tree.add()</span></span><br><span class="line"></span><br><span class="line">        Collections.addAll(tree, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>);</span><br><span class="line">        System.out.println(tree);</span><br><span class="line">        <span class="comment">//[1, 2, 3, 4, 5, 6]证明自然顺序</span></span><br><span class="line"></span><br><span class="line">        tree.add(<span class="number">4</span>);</span><br><span class="line">        System.out.println(tree);</span><br><span class="line">        <span class="comment">//[1, 2, 3, 4, 5, 6] 证明元素唯一性</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>扩展：<br>如果TreeSet保存的是数值类型，那么按照数值的大小升序<br>如果TreeSet保存是Character类型，那么按照字母的码值排序<br>如果TreeSet保存的是String类型，那么按照字母首字母排序，若一样，次字母排序，依次类推</p><p>e.TreeSet也可以使用比较器自定义排列顺序<br>TreeSet有一个带有比较器的构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    TreeSet&lt;Integer&gt; tree = <span class="keyword">new</span> TreeSet&lt;Integer&gt;(<span class="keyword">new</span> Comparator&lt;Integer&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Integer o1, Integer o2)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> o2-o1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    Collections.addAll(tree, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>);</span><br><span class="line">    System.out.println(tree);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.6 哈希表结构的的介绍<br>•对象的哈希值(对象的”数字指纹”，是JDK根据对象的地址或者字符串或者数字算出来的int类型的数值)<br>a.对象的哈希值，相对于对象的“指纹”，只是这个指纹是一个数字<br>b.我们如何获取对象的哈希值：调用对象的hashCode()方法即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Student s1 = <span class="keyword">new</span> Student(<span class="number">1</span>, <span class="string">"a"</span>);</span><br><span class="line">    <span class="keyword">int</span> hashCode = s1.hashCode();<span class="comment">//返回哈希值</span></span><br><span class="line">    System.out.println(hashCode);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>c.其实Java中所谓的地址值是假的，它是Hash值的16进制表示<br>源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getClass().getName() + <span class="string">"@"</span> + Integer.toHexString(hashCode());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>d.Java中有真正的地址值，但是当打印时，会自动调用toString方法，将hash值输出<br>Dog d = new Dog();//d就是真正的地址值<br>System.out.println(d);//打印时，会自动调toString方法，hex16操作输出</p><p>e.不同的两个对象，可能有相同的hashCode（hashCode是int类型，最多42亿，因此会相同）</p><p>结论：哈希表结构如何保证元素的唯一性<br>哈希表结构，如何判断两个元素是否重复：<br>a.哈希表结构，会先比较两个对象的哈希值<br>b.当哈希值一样，再调用equals比较两个对象<br>只有哈希值相同，并且equals结构为true，才判定这两个元素是重复的</p><p>哈希表结构=数组结构+链表结构+红黑树结构（JDK8）<br>数组结构默认长度16<br>I.向哈希值中添加元素时，元素的索引：元素.hashCode()%数组长度 =0-15<br>II.当某个链表长度超过阀值(8)时，这个链表就会变成红黑树</p><p>3.7 哈希表结构保存自定义类型练习<br>为了保证哈希表中元素的唯一性，如果元素是自定义类型，那么必须重写hashCode和equals方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> legs_num;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Dog</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Dog</span><span class="params">(<span class="keyword">int</span> age, String name, <span class="keyword">int</span> legs_num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.legs_num = legs_num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Dog&#123;"</span> +</span><br><span class="line">                <span class="string">"age="</span> + age +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", legs_num="</span> + legs_num +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//为了保证哈希表中元素的唯一性，要重写hasCode和equals方法</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == o) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="keyword">null</span> || getClass() != o.getClass()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Dog dog = (Dog) o;</span><br><span class="line">        <span class="keyword">return</span> age == dog.age &amp;&amp;</span><br><span class="line">                legs_num == dog.legs_num &amp;&amp;</span><br><span class="line">                Objects.equals(name, dog.name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.hash(age, name, legs_num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestHashSetDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashSet&lt;Dog&gt; dogHashSet = <span class="keyword">new</span> HashSet&lt;Dog&gt;();</span><br><span class="line">        dogHashSet.add(<span class="keyword">new</span> Dog(<span class="number">1</span>, <span class="string">"a"</span>, <span class="number">4</span>));</span><br><span class="line">        dogHashSet.add(<span class="keyword">new</span> Dog(<span class="number">2</span>, <span class="string">"b"</span>, <span class="number">4</span>));</span><br><span class="line">        dogHashSet.add(<span class="keyword">new</span> Dog(<span class="number">3</span>, <span class="string">"c"</span>, <span class="number">4</span>));</span><br><span class="line">        dogHashSet.add(<span class="keyword">new</span> Dog(<span class="number">1</span>, <span class="string">"d"</span>, <span class="number">4</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//        for (Dog d : dogHashSet) &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(d);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        System.out.println();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        dogHashSet.add(new Dog(3, "c", 4));</span></span><br><span class="line"><span class="comment">//        //哈希表判断两个元素重复or不重复的依据是哈希表和equals</span></span><br><span class="line"><span class="comment">//        for (Dog d : dogHashSet) &#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(d);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//为了保证元素的唯一性，要重写hashCode和equals，根据内容计算哈希值，equals也比较内容</span></span><br><span class="line"></span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="keyword">for</span> (Dog d:dogHashSet</span><br><span class="line">             ) &#123;</span><br><span class="line">            System.out.println(d);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>3.8 HashSet的源码分析<br>a.构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HashSet</span>&lt;<span class="title">E</span>&gt; <span class="keyword">extends</span> <span class="title">AbstractSet</span>&lt;<span class="title">E</span>&gt;</span></span><br><span class="line"><span class="class">        <span class="keyword">implements</span> <span class="title">Set</span>&lt;<span class="title">E</span>&gt;, <span class="title">Cloneable</span>, <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="comment">//内部一个HashMap——HashSet内部实际上是用HashMap实现的 private transient HashMap&lt;E,Object&gt; map;</span></span><br><span class="line"><span class="comment">// 用于做map的值</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Object PRESENT = <span class="keyword">new</span> Object();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造一个新的HashSet，</span></span><br><span class="line"><span class="comment">     * 内部实际上是构造了一个HashMap</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HashSet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>b.HashMap的add方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HashSet</span> </span>&#123; <span class="comment">//......</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> map.put(e, PRESENT) == <span class="keyword">null</span>;<span class="comment">//内部实际上添加到map中，键:要添加的对象，值:Object</span></span><br><span class="line">        对象</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//......</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>c.HashMap的put方法<br>HashMap保存键时，是以键的哈希值为依据确定键的保存位置<br>添加成功之后，size++，将元素的个数增加1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HashMap</span> </span>&#123; <span class="comment">//......</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> putVal(hash(key), key, value, <span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//......</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(Object key)</span> </span>&#123;<span class="comment">//根据参数，产生一个哈希值</span></span><br><span class="line">        <span class="keyword">int</span> h;</span><br><span class="line">        <span class="keyword">return</span> (key == <span class="keyword">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//......</span></span><br><span class="line">    <span class="function"><span class="keyword">final</span> V <span class="title">putVal</span><span class="params">(<span class="keyword">int</span> hash, K key, V value, <span class="keyword">boolean</span> onlyIfAbsent,</span></span></span><br><span class="line"><span class="function"><span class="params">                   <span class="keyword">boolean</span> evict)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        Node&lt;K, V&gt;[] tab; <span class="comment">//临时变量，存储"哈希表"——由此可见，哈希表是一个Node[]数组 </span></span><br><span class="line">        Node&lt;K,V&gt; p;<span class="comment">//临时变量，用于存储从"哈希表"中获取的Node</span></span><br><span class="line">        <span class="keyword">int</span> n, i;<span class="comment">//n存储哈希表长度;i存储哈希表索引</span></span><br><span class="line">        <span class="keyword">if</span> ((tab = table) == <span class="keyword">null</span> || (n = tab.length) == <span class="number">0</span>)<span class="comment">//判断当前是否还没有生成哈希表</span></span><br><span class="line">            n = (tab = resize()).length;<span class="comment">//resize()方法用于生成一个哈希表，默认长度:16，赋给n</span></span><br><span class="line">        <span class="keyword">if</span> ((p = tab[i = (n - <span class="number">1</span>) &amp; hash]) == <span class="keyword">null</span>)<span class="comment">//(n-1)&amp;hash等效于hash % n，转换为数组索 </span></span><br><span class="line">        tab[i] = newNode(hash, key, value, <span class="keyword">null</span>);<span class="comment">//此位置没有元素，直接存储</span></span><br><span class="line"><span class="keyword">else</span>&#123;<span class="comment">//否则此位置已经有元素了 </span></span><br><span class="line">Node&lt;K,V&gt; e; K k;</span><br><span class="line">            <span class="keyword">if</span> (p.hash == hash &amp;&amp;</span><br><span class="line">                    ((k = p.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))<span class="comment">//判断哈希值和</span></span><br><span class="line">                e = p;<span class="comment">//将哈希表中的元素存储为e</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (p <span class="keyword">instanceof</span> TreeNode)<span class="comment">//判断是否为"树"结构</span></span><br><span class="line">                e = ((TreeNode&lt;K, V&gt;) p).putTreeVal(<span class="keyword">this</span>, tab, hash, key, value);</span><br><span class="line">            <span class="keyword">else</span> &#123;<span class="comment">//排除以上两种情况，将其存为新的Node节点</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> binCount = <span class="number">0</span>; ; ++binCount) &#123;<span class="comment">//遍历链表 </span></span><br><span class="line">                <span class="keyword">if</span> ((e = p.next) == <span class="keyword">null</span>) &#123;<span class="comment">//找到最后一个节点</span></span><br><span class="line">                    p.next = newNode(hash, key, value, <span class="keyword">null</span>);<span class="comment">//产生一个新节点，赋值到链</span></span><br><span class="line">                    <span class="keyword">if</span> (binCount &gt;= TREEIFY_THRESHOLD - <span class="number">1</span>) <span class="comment">//判断链表长度是否大于了8 </span></span><br><span class="line">                    treeifyBin(tab, hash);<span class="comment">//树形化</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                        ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))<span class="comment">//跟当前</span></span><br><span class="line">                    变量的元素比较，如果hashCode相同，equals也相同 <span class="keyword">break</span>;<span class="comment">//结束循环</span></span><br><span class="line">                p = e;<span class="comment">//将p设为当前遍历的Node节点 &#125;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (e != <span class="keyword">null</span>) &#123; <span class="comment">// 如果存在此键</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>总结：<br><img src='https://g.gravizo.com/svg? digraph G {     ArrayList [shape = box]     LinkedList [shape = box]     HashSet  [shape = box]     LinkedHashSet   [shape = box]     TreeSet [shape = box]    Collection -> list接口;    Collection -> Set接口;    list接口 -> ArrayList;    list接口-> LinkedList;    Set接口-> HashSet;    Set接口 -> LinkedHashSet;     Set接口 -> TreeSet;  }'/></p><p>Collection<br>{<br>    Iterator<String> it = cc.iterator();<br>    public boolean add(E e);添加元素，返回值表示是否添加成功。<br>    public boolean remove(E e);删除元素，返回值表示是否删除成功。<br>    无修改方法。<br>    无查询方法。<br>    public boolean contains(Object obj);判断集合中是否包含某个元素。<br>    public void clear();清空集合（把集合中的元素全部删除，不是把集合置为Null）<br>    public boolean isEmpty();判断集合是否为空（指集合中没有元素，而非集合是否为Null）<br>    public int size();返回集合中元素的个数<br>    public Object[] toArray();将集合转成数组<br>}<br>List接口：<br>特点：有序，有索引，元素可重复<br>特有方法：<br>add(int index,E e);<br>remove(int index,E e);<br>set(int index,E e);<br>get(int index,E e);</p><p>ArrayList：<br>底层是数组结构<br>特有方法：无<br>特点：有序，有索引，元素可重复</p><p>LinkedList<br>底层是链表结构<br>特有方法：<br>    public void addFirst(E e);//添加元素到集合首<br>    public void addLast(E e);//添加元素到集合尾<br>    public E getFirst(E e);//获取集合的首元素<br>    public E getLast(E e);//获取集合的尾元素<br>    public E removeFirst(E e);//删除集合的首元素<br>    public E removeLast(E e);//删除集合的尾元素<br>    public void pop(E e);//删除集合中的首元素，底层就是removeFirst<br>    public void push(E e);//添加集合中的首元素，底层就是addFirst<br>特点：有序，有索引，元素可重复</p><p>Set接口：<br>特点：无序（LinkedHashSet除外），无索引，元素唯一<br>特有方法：无<br>特点：无索引，元素唯一</p><p>HashSet<br>底层是哈希表结构(数组结构+链表结构+红黑树结构)<br>特有方法：无<br>特点：无序，无索引，元素唯一</p><p>LinkedHashSet<br>底层是（链表结构+哈希表结构）<br>特有方法：无<br>特点：有序，无索引，元素唯一</p><p>TreeSet<br>底层是红黑树结构<br>特有方法：无<br>特点：无序的（无序是存取顺序不保证一致，但是它会以自然顺序输出），无索引，元素唯一</p><p>使用哈希表保存自定义类型时，为了保证元素的唯一性，要重写自定义类型中的hashCode方法和equals方法</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（七）</title>
      <link href="/2020/03/10/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/"/>
      <url>/2020/03/10/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•Collection集合<br>•迭代器<br>•泛型<br>•数据结构</p><a id="more"></a><p>集合体系结构：</p><p><img src='https://g.gravizo.com/svg? digraph G {   集合  [shape=box]   Collection单列  [shape=box]   Map双列  [shape=box]   List可重复  [shape=box]   Set不可重复  [shape=box]   集合 -> Collection单列;   集合 -> Map双列;   Collection单列 -> List可重复;   Collection单列 -> Set不可重复; }'/></p><p>一.Collection集合（所有集合的根接口）</p><ul><li>是单列集合的顶层接口，它表示一组对象，这些对象也称为Collection的元素</li><li>JDK不提供此接口的任何直接实现，它提供了更具体的子接口(如Set和List)实现</li></ul><p>创建Collection集合的对象<br>•多态的方式<br>•具体的实现类ArrayList</p><p>1.集合的介绍&amp;集合和数组的区别<br>a.什么是集合<br>集合就是Java用来保存数据的容器。<br>b.学过的容器<br>数组，ArrayList<br>数组定义: 数据类型[] 变量名 = new 数据类型[数组的长度]<br>集合定义: ArrayList&lt;数据类型&gt; 变量名 = new ArrayList&lt;数据类型&gt;();<br>c.数组和集合区别在哪里<br>    I.数组的长度固定，集合的长度可变<br>    II.数组中的元素类型可以是基本类型，也可以是引用类型。<br>       集合中的元素类型必须只能是引用类型，如果想保存基本类型，要写该基本类型对应的写包装类。<br>       例如：<br>            ArrayList<Integer> arr = new ArrayList<Integer>();</p><p>2.集合框架的继承体系</p><p>List接口特点：<br>有序，有索引，元素可以重复</p><p>Set接口特点：<br>无序，无索引，元素不可以重复</p><p><img src='https://g.gravizo.com/svg? digraph G {   ArrayList  [shape=box]   LinkedList  [shape=box]   Vector  [shape=box]   HashSet  [shape=box]   LinkedHashSet  [shape=box]   TreeSet  [shape=box]   Collection（阉割版） -> List接口;   Collection（阉割版） -> Set接口;   List接口 -> ArrayList;   List接口 -> LinkedList;   List接口 -> Vector;   Set接口 -> HashSet;   Set接口 -> TreeSet;   HashSet -> LinkedHashSet; }'/></p><p>3.Collection中的通用方法<br>增：增加<br>    public boolean add(E e);添加元素，返回值表示是否添加成功。<br>删：删除<br>    public boolean remove(E e);删除元素，返回值表示是否删除成功。<br>改：修改<br>    无修改方法。<br>查：查询<br>    无查询方法。<br>其他方法：<br>    public boolean contains(Object obj);判断集合中是否包含某个元素。<br>    public void clear();清空集合（把集合中的元素全部删除，不是把集合置为Null）<br>    public boolean isEmpty();判断集合是否为空（指集合中没有元素，而非集合是否为Null）<br>    public int size();返回集合中元素的个数<br>    public Object[] toArray();将集合转成数组</p><table><thead><tr><th>方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td>boolean add(E e)</td><td align="center">添加元素</td></tr><tr><td>boolean remove(Object o)</td><td align="center">从集合中移除指定元素</td></tr><tr><td>void clear()</td><td align="center">清空集合中的元素</td></tr><tr><td>boolean contains(Object o)</td><td align="center">判断集合中是否存在指定的元素</td></tr><tr><td>boolean isEmpty()</td><td align="center">判断集合是否为空</td></tr><tr><td>int size()</td><td align="center">集合的长度，也就是集合中的元素个数</td></tr><tr><td>public Object[] toArray();</td><td align="center">将集合转成数组</td></tr></tbody></table><p>二.Iterator迭代器（遍历集合）<br>1.集合迭代器的介绍与使用<br>    a.迭代器（iterator）<br>        用于遍历集合的对象（集合有无索引，均可使用迭代器来遍历，迭代器遍历集合时不需要索引）<br>    •Iterator<E> iterator():返回此集合中元素的迭代器，通过集合的iterator()方法得到<br>    •迭代器是通过集合的iterator()方法得到的，所以说他是依赖于集合而存在的</p><pre><code>b.迭代器的使用    I.获取要遍历集合的迭代器对象    II.调用迭代器对象.hasNext();boolean类型    III.调用迭代器对象的.next();方法</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">        Iterator&lt;String&gt; it = cc.iterator();</span><br><span class="line"><span class="comment">//        boolean b = a.hasNext();</span></span><br><span class="line"><span class="comment">//        if (b) &#123;</span></span><br><span class="line"><span class="comment">//            String next = a.next();</span></span><br><span class="line"><span class="comment">//            System.out.println(next);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">            String ss = it.next();</span><br><span class="line">            System.out.println(ss);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>•迭代器的注意事项（2个异常）<br>    a.NoSuchElementException<br>        出现原因：迭代器的hasNext返回false，再调用next方法，就会返回此异常<br>    b.ConcurrentModificationException<br>        出现原因：Java的迭代器规定，使用迭代器过程中，不能向集合中增删元素（不能影响集合的长度），否则就会抛出并发修改异常。</p><p>结论：<br>    a.使用迭代器时，必须先判断，且判断结果为true，才能调用.next()方法<br>    b.使用迭代器时，应该尽量只做遍历（绝对不允许直接向集合中增删元素），即使用单纯遍历功能</p><p>2.迭代器的原理<br>迭代器的底层使用指针原理，迭代器输出的是内存地址，在地址块中寻找下一个，超出后提出越界，即返回NoSuchElementException错误。同理，地址不可变，使用增删会提示ConcurrentModificationException错误</p><p>3.增强for循环<br>a.什么是增强for循环<br>    实际上是一种简便格式（语法糖），简化数组和Collection集合的遍历，实际上是迭代器的简便格式<br>b.增强for循环的用法<br>    for(数据类型 变量名:集合/数组){}<br>c.增强for循环本质使用的就是迭代器<br>证明：<br>a.源码<br>b.如果在使用增强for的过程中向集合添加或删除元素，和迭代器一样会抛出ConcurrentModificationException异常</p><p>注意：和使用迭代器一样，增强for就是用于单纯的遍历集合，不要在遍历集合的过程中增删元素</p><p>三.泛型<br>1.什么是泛型<br>泛型是JDK1.5的新特性，提供了编译时类型安全检测机制，该机制允许在编译时见到到非法到类型<br>它的本质是参数化类型，也就是说所操作的数据类型被指定为一个参数<br>参数化类型：就是将类型由原来的具体到类型参数化，然后在使用/调用时传入具体到类型</p><p>比如：<br>在JDK1.5之前，创建集合:ArrayList arr = new ArrayList();集合中可以保存任意对象<br>在JDK1.5时，创建集合:ArrayList&lt;具体的引用类型&gt; arr = new new ArrayList&lt;具体的引用类型&gt;();<br>这种参数类型可以用在类、方法和接口中，分别被称为泛型类，泛型方法，泛型接口</p><p>什么是泛型：<br>    是一种不确定的类型，程序员使用时再确定下来<br>    泛型的格式：<br>        <E>,一个泛型，如Element。这里的类型可以看作形参<br>        &lt;K,V&gt;,两个泛型，暂不确定类型。这里的类型可以看作形参<br>        将来具体调用的适合给定的类型可以看作是实参，并且实参的类型只能是引用数据类型</p><p>2.泛型的好处<br>a.避免了强制转型的麻烦<br>b.避免了类型转换的异常，将运行时期的ClassCastException，转移到了编译时期的编译失败</p><p>总之：JDK1.5之后，Java强烈推荐使用泛型</p><p>3.泛型的定义和使用<br>泛型可以定义在类、方法、接口上</p><p>•泛型类<br>泛型可以定义在类上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyArrayList</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">//就是把E当作某种类型使用</span></span><br><span class="line">    <span class="keyword">private</span> E ee;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">getEe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ee;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEe</span><span class="params">(E ee)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ee = ee;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>泛型类的使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMyArrayList</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//使用泛型类，MyArrayList</span></span><br><span class="line">        MyArrayList&lt;String&gt; arr = <span class="keyword">new</span> MyArrayList&lt;String &gt;();</span><br><span class="line"><span class="comment">//        此时arr中集合对象没有E了，所有E都变成了String</span></span><br><span class="line">        arr.setEe(<span class="string">"Java"</span>);</span><br><span class="line">        String ee = arr.getEe();</span><br><span class="line">        System.out.println(ee);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        使用泛型类，MyArrayList</span></span><br><span class="line">        MyArrayList&lt;Integer&gt; arr1= <span class="keyword">new</span> MyArrayList&lt;Integer&gt;();</span><br><span class="line">        arr1.setEe(<span class="number">1</span>);</span><br><span class="line">        System.out.println(arr1.getEe());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•泛型方法<br>泛型方法的定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">(E num)</span></span>&#123;</span><br><span class="line">        System.out.println(num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>泛型方法的使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//create object</span></span><br><span class="line">    Dog dd = <span class="keyword">new</span> Dog();</span><br><span class="line">    <span class="comment">//use method</span></span><br><span class="line">    dd.show(<span class="string">"Java"</span>);</span><br><span class="line">    dd.show(<span class="number">10</span>);</span><br><span class="line">    <span class="comment">//严格的方式</span></span><br><span class="line">    dd.&lt;String&gt;show(<span class="string">"java"</span>);</span><br><span class="line">    dd.&lt;Integer&gt;show(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•泛型接口<br>泛型定义在某个接口上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyInterface</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(E ee)</span> </span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">(E ee)</span> </span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//a.定义一个实现类，实现该接口时，可以确定E的具体类型</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> <span class="keyword">implements</span> <span class="title">MyInterface</span>&lt;<span class="title">String</span>&gt;</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(String ee)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">(String ee)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClass2</span>&lt;<span class="title">E</span>&gt; <span class="keyword">implements</span> <span class="title">MyInterface</span>&lt;<span class="title">E</span>&gt;</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(E ee)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">(E ee)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//此时实现类就是一个泛型类，创建该类对象时，可以确定泛型的具体类型</span></span><br></pre></td></tr></table></figure><p>丢弃泛型（不正规）,此时泛型被丢弃，所有泛型变为Object</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClass3</span> <span class="keyword">implements</span> <span class="title">MyInterface</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(Object ee)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">(Object ee)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：在开发中，很少自定义泛型类、方法、接口，大概率是使用已定义好的泛型类，自行更改类型即可</p><p>4.泛型通配符<br>什么是泛型通配符：<br>当集合中泛型不确定类型时，可以使用泛型通配符，表示何种泛型均可</p><p>•类型通配符:<?>•List<?>:表示元素类型未知的List,它的元素可以匹配任何的类型<br>•这种带通配符的List仅表示它是各种泛型List的父类，并不能把元素添加进去</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;String &gt; arr1 = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">    ArrayList&lt;Integer&gt; arr2 = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">    ArrayList&lt;Double&gt; arr3 = <span class="keyword">new</span> ArrayList&lt;Double&gt;();</span><br><span class="line"></span><br><span class="line">    method(arr1);</span><br><span class="line">    method(arr2);</span><br><span class="line">    method(arr3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">(ArrayList&lt;?&gt; arr)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.泛型的上下限<br>&lt;?&gt;什么泛型都是OK的</p><p>如果不希望List&lt;?&gt;是任何泛型List的父类，只希望它代表某一类泛型List的父类，可以使用类型通配符的上线</p><? extends Animal>,叫泛型的上限，表示该泛型必须是Animal本类或其子类(Dog,Cat);可以理解为"<?<=Animal>"<? super Student>.叫泛型的下限，表示该泛型必须是Student本类或其父类(Person，Object)可以理解为"<?><p>=Student&gt;”</p><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Collection&lt;Integer&gt; list1 = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        Collection&lt;String &gt; list2 = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        Collection&lt;Number&gt; list3 = <span class="keyword">new</span> ArrayList&lt;Number&gt;();</span><br><span class="line">        Collection&lt;Object&gt; list4 = <span class="keyword">new</span> ArrayList&lt;Object&gt;();</span><br><span class="line">        <span class="comment">//Number是8种数值类型的父类</span></span><br><span class="line">        <span class="comment">//SuperClass:Object---subclass（String,Number)---subclass(Integer,Number)</span></span><br><span class="line"></span><br><span class="line">        getElement1(list1);</span><br><span class="line"><span class="comment">//        getElement1(list2);String和Number不是super-sub关系，不行</span></span><br><span class="line">        getElement1(list3);</span><br><span class="line"><span class="comment">//        getElement1(list4);Object最大，不行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        getElement2(list1);Integer小于Number，不行</span></span><br><span class="line"><span class="comment">//        getElement2(list2);String和Number不是Super-sub关系，不行</span></span><br><span class="line">        getElement2(list3);</span><br><span class="line">        getElement2(list4);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getElement1</span><span class="params">(Collection&lt;? extends Number&gt; collection )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getElement2</span><span class="params">(Collection&lt;? <span class="keyword">super</span> Number&gt; collection )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>四.数据结构<br>1.什么是数据结构<br>数据结构是计算机存储、组织数据的方式(容器保存数据的方式)。是指相互之间存在一种或多种特定关系的数据元素的集合</p><p>2.常见的4+1种数据结构<br>掌握前4种数据结构<br>•栈结构<br>可以看成只有一端开口的容器<br>入栈/压栈-&gt;[栈顶U栈底]-&gt;出栈/弹栈<br>入栈顺序：1 2 3<br>出栈顺序：3 2 1</p><p>特点：先进后出</p><p>•队列结构<br>两端均有开口的容器<br>入队-&gt;[队尾——队头]-&gt;出队</p><p>只能从队尾进</p><p>入队顺序：1 2 3 4<br>出队顺序：1 2 3 4</p><p>特点：先进先出FIFO(First In First Out)</p><p>•数组结构<br>数组结构是<font color = red><b>连续的</b></font>一块区域，每个数组都有自己的索引</p><p>获取/修改元素：根据索引找到/修改元素即可</p><p>添加元素经过：<br>a.创建新数组<br>b.复制老数组数据<br>c.添加新的数据<br>d.销毁老的数据</p><p>删除元素经过：<br>a.创建新数组<br>b.复制老数组数据<br>c.删除指定的数据<br>d.销毁老的数据</p><p>特点：增删慢，查改快</p><p>•链表结构<br>在链表结构中，每一个元素称为node(节点/结点),每个node<b>至少</b>有两部分内容</p><p>单向链表结构<br>双向链表结构</p><p>数据域｜指针域（指向下一个node）<br>（指向上一个node）指针域｜数据域｜指针域 （指向下一个node）</p><p><img src='https://g.gravizo.com/svg? digraph G {    数据域｜指针域 [shape=box]    指针域｜数据域｜指针域 [shape=box] }'/></p><p>获取/修改元素:从第一个元素开始往后查找(比数组结构慢)<br>增加/删除元素:在指针域直接添加/删除新node</p><p>特点：链表结构在内存中是可以分散的，增删快，查改慢</p><p>了解另一种数据结构<br>•树结构<br>树具有的特点:</p><ol><li>每一个节点有零个或者多个子节点</li><li>没有父节点的节点称之为根节点，一个树最多有一个根节点。 3. 每一个非根节点有且只有一个父节点</li></ol><p><img src='https://g.gravizo.com/svg? digraph G {    A -> B;    A -> C;    B -> D;    C-> E;    C->F;    E ->J;     D->G;     D->H;    D ->I; }'/></p><table><thead><tr><th align="right">名词</th><th align="center">含义</th></tr></thead><tbody><tr><td align="right">结点</td><td align="center">指树中的一个元素</td></tr><tr><td align="right">结点的度</td><td align="center">节点拥有的子树的个数，二叉树的度不大于2</td></tr><tr><td align="right">叶子结点</td><td align="center">度为0的节点，也称之为终端结点</td></tr><tr><td align="right">高度</td><td align="center">叶子结点的高度为1，叶子结点的父节点高度为2，以此类推，根节点的高度最高</td></tr><tr><td align="right">层</td><td align="center">根节点在第一层，以此类推</td></tr><tr><td align="right">父节点</td><td align="center">若一个节点含有子节点，则这个节点称之为其子节点的父节点</td></tr><tr><td align="right">子结点</td><td align="center">子节点是父节点的下一层节点</td></tr><tr><td align="right">兄弟结点</td><td align="center">拥有共同父节点的节点互称为兄弟节点</td></tr></tbody></table><p>二叉树：如果树中的每个节点的子节点的个数不超过2，那么该树就是一个二叉树。<br><img src='https://g.gravizo.com/svg? digraph G {    A -> B;    A -> C;    B -> D;    D->G;     D->H;    C ->E;    C ->F;    E ->J; }'/><br>二叉查找树：<br>二叉查找树的特点:</p><ol><li>左子树上所有的节点的值均小于等于他的根节点的值 </li><li>右子树上所有的节点值均大于或者等于他的根节点的值 </li><li>每一个子节点最多有两个子树<br><img src='https://g.gravizo.com/svg?digraph G { 20 -> 18; 20 -> 23; 18 -> 17; 18-> 19; 23->22; 23 ->24;}'/><br>遍历获取元素的时候可以按照”左中右”的顺序进行遍历;<br>注意:二叉查找树存在的问题:会出现”瘸子”的现象，影响查询效率<br><img src='https://g.gravizo.com/svg?digraph G { 17 -> 24; 24 -> 19; 19 -> 18; 19-> 20; 20 ->23;}'/><br>二叉平衡树：<br>概述<br>为了避免出现”瘸子”的现象，减少树的高度，提高我们的搜素效率，又存在一种树的结构:”平衡二叉树” 规则:它的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树<br><img src='https://g.gravizo.com/svg?digraph G { 10 -> 7; 10 -> 15; 7 -> 4; 7-> 8; 15->17; 4 ->3;  8->9; }'/><br>如图所示，上图是一棵平衡二叉树，根节点10，左右两子树的高度差是1，而下图，虽然根节点左右两子树高度 差是0，但是右子树15的左右子树高度差为2，不符合定义，<br>所以右图不是一棵平衡二叉树。<br><img src='https://g.gravizo.com/svg?digraph G { 10 -> 7; 10 -> 15; 7 -> 4; 7-> 8; 15->17; 4 ->3;  8->9;  17->19;}'/></li></ol><p>红黑树：</p><ol><li>每一个节点或是红色的，或者是黑色的。</li><li>根节点必须是黑色</li><li>每个叶节点(Nil)是黑色的;(如果一个节点没有子节点或者父节点，则该节点相应的指针属性值为Nil，这些<br>Nil视为叶节点)</li><li>如果某一个节点是红色，那么它的子节点必须是黑色(不能出现两个红色节点相连的情况)</li><li>对每一个节点，从该节点到其所有后代叶节点的简单路径上，均包含相同数目的黑色节点;</li></ol><p>红黑树的特点：<br><b>查询效率非常恐怖，增删速度非常慢</b></p><p>总结：<br>1.Collection集合根接口<br>    I.集合继承体系<br>    II.Collection中定义的通用方法<br>    III.明白集合和数组的区别<br>2.迭代器<br>    I.迭代器使用的三个步骤：获取迭代器，判断有没有下一个，取出下一个元素<br>    II.增强for循环使用（底层使用就是迭代器）<br>    III.迭代器和增强for使用过程，不能增删元素</p><p>3.泛型<br>I.泛型怎么写 <E><br>II.泛型类、接口、方法怎么定义和使用<br>III.泛型通配符以及上下限<br>&lt;?&gt;代表任意泛型即可<br>&lt;? extends X  &gt;上限<br>&lt;? super Xxx&gt;下限</p><p>4.数据结构<br>栈结构：先进后出<br>队列结构：先进先出<br>数组结构：增删慢，查改快<br>链表结构：增删快，查询慢</p><p>红黑树：查询效率非常高，增删速度非常慢</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（六）</title>
      <link href="/2020/03/08/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/"/>
      <url>/2020/03/08/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>面向对象综合练习</p><a id="more"></a><p>一.综合案例-案例演示<br>1.1 启动程序<br>1.2 学生系统管理模块<br>1.3 添加学生<br>1.4 查询学生<br>1.5 修改学生<br>1.6 删除学生</p><p>二.综合案例-类的设计需求<br>2.1 父类Person（抽象）</p><p>成员属性：<br>    id(编号)<br>    name(姓名)<br>    gender(性别)<br>    birthday(生日)<br>    age(年龄-通过生日来计算)</p><p>成员方法：<br>    get/set方法<br>    无参构造<br>    全参构造<br>    toString()</p><p>抽象方法：<br>    public abstract String getType();<br>    public abstract String getWork();</p><p>2.2 子类Student<br>Student类继承Person类<br>    无参构造<br>    全参构造（super调用父类全参构造）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line">getType();<span class="comment">//“student”</span></span><br><span class="line">getWork();<span class="comment">//“study”</span></span><br></pre></td></tr></table></figure><p>2.3 子类Teacher<br>Teacher类继承Person类<br>    无参构造<br>    全参构造（super调用父类全参构造）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line">getType();<span class="comment">//“teacher”</span></span><br><span class="line">getWork();<span class="comment">//“manager”</span></span><br></pre></td></tr></table></figure><p>2.4 工具Utils类<br>    提供静态成员变量：<br>        学生ID<br>        教师ID<br>        好处是让学生ID和教师ID统一在此管理<br>    提供静态成员方法：<br>        a.根据生日年龄计算年龄的方法<br>        b.提供一个静态方法，接收参数Person类型，在方法中按照好看的格式打印其内容<br>            public static void printPerson(Person pp){<br>                //按照好看的格式打印其内容<br>            }<br>        c.提供一个静态方法，参数是一个集合（集合的范型是Person），在方法中把每一个元素遍历出来，然后调用b方法打印每个对象的信息<br>            public static void printArrayList(ArryList&lt;? extends Person&gt; arr){<br>                //按照好看的格式打印其内容<br>            }<br>2.5 启动类<br>就是的程序入口（main方法）<br>//启动类<br>public class MainApp(){<br>        public static void main(String[] args) {<br>        //程序的入口<br>    }<br>}</p><p>三.综合案例-类的制作&lt;按照需求&gt;<br>3.1 父类Person抽象<br>    public abstract String getType();//返回具体的类型（学生/老师）<br>    public abstract String getWork();//返回具体的工作（学习/讲课）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Utils.birthdayToAge(birthday);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.2 子类Student<br>    public Student(int id, String name, String gender, String birthday, int age) {<br>        super(id, name, gender, birthday, age);<br>    }</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Student"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getWork</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Learn"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.3 子类Teacher<br>public class Teacher extends Person {<br>    public Teacher(int id, String name, String gender, String birthday, int age) {<br>        super(id, name, gender, birthday, age);<br>    }</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Teacher</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Teacher"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getWork</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Teach"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-4-工具类Utils类"><a href="#2-4-工具类Utils类" class="headerlink" title="2.4 工具类Utils类"></a>2.4 工具类Utils类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">提供静态成员变量:</span><br><span class="line">学生的ID</span><br><span class="line">    教师的ID </span><br><span class="line">    这样的好处是,我们可以让学生ID和教师ID统一在此管理</span><br><span class="line">提供静态成员方法:</span><br><span class="line">a.根据出生日期计算出年龄</span><br><span class="line">    b.提供一个方法方法,参数是Person类型,在方法中按照好看的格式打印出其内容</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printPerson</span><span class="params">(Person pp)</span></span>&#123;</span><br><span class="line">        按照好看的格式打印出其内容</span><br><span class="line">    &#125;</span><br><span class="line">    c.提供一个静态方法,参数是一个集合(集合的泛型是Person),在方法中遍历集合,打印每个对象的信息</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArrayList</span><span class="params">(ArrayList&lt;? extends Person&gt; arr)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="2-5-启动类"><a href="#2-5-启动类" class="headerlink" title="2.5 启动类"></a>2.5 启动类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">就是我们的程序入口(main方法)</span><br><span class="line"><span class="comment">//启动类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainApp</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//程序的入口</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第三章-综合案例-类的制作-lt-按照需求-gt"><a href="#第三章-综合案例-类的制作-lt-按照需求-gt" class="headerlink" title="第三章 综合案例-类的制作&lt;按照需求&gt;"></a>第三章 综合案例-类的制作&lt;按照需求&gt;</h3><h5 id="3-1-父类Person-抽象"><a href="#3-1-父类Person-抽象" class="headerlink" title="3.1 父类Person(抽象)"></a>3.1 父类Person(抽象)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 抽象类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;<span class="comment">//编号</span></span><br><span class="line">    <span class="keyword">private</span> String name;<span class="comment">//姓名</span></span><br><span class="line">    <span class="keyword">private</span> String sex;<span class="comment">//性别</span></span><br><span class="line">    <span class="keyword">private</span> String birthday;<span class="comment">//出生日期</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;<span class="comment">//年龄--通过出生日期换算</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回具体的类型(学生还是教师)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">getType</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回具体的工作(学习还是讲课)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">getWork</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以使用五个参数的构造,age的值我们随便给一个即可</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(<span class="keyword">int</span> id, String name, String sex, String birthday, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">        <span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  id + <span class="string">"\t\t"</span> +</span><br><span class="line">                name + <span class="string">"\t\t"</span> +</span><br><span class="line">                sex + <span class="string">"\t\t"</span> +</span><br><span class="line">                birthday + <span class="string">"\t"</span> +</span><br><span class="line">                <span class="keyword">this</span>.getAge() + <span class="string">"\t\t"</span> +</span><br><span class="line">                <span class="string">" 我是一名："</span> + getType() + <span class="string">" 我的工作是："</span> + getWork();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//应该是根据birthday计算出age,然后返回</span></span><br><span class="line">        <span class="keyword">return</span> Utils.birthdayToAge(birthday);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-2-子类Student"><a href="#3-2-子类Student" class="headerlink" title="3.2 子类Student"></a>3.2 子类Student</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 学生类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(<span class="keyword">int</span> id, String name, String sex, String birthday, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(id, name, sex, birthday, age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"学生"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getWork</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"学习"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-3-子类Teacher"><a href="#3-3-子类Teacher" class="headerlink" title="3.3 子类Teacher"></a>3.3 子类Teacher</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 教师类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Teacher</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Teacher</span><span class="params">(<span class="keyword">int</span> id, String name, String sex, String birthday, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(id, name, sex, birthday, age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"教师"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getWork</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"讲课"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-4-工具类Utils类"><a href="#3-4-工具类Utils类" class="headerlink" title="3.4 工具类Utils类"></a>3.4 工具类Utils类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Utils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> stuId ;<span class="comment">//学员ID的初始值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> teaId ;<span class="comment">//教师ID的初始值</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        stuId = <span class="number">0</span>;</span><br><span class="line">        teaId = <span class="number">0</span>; <span class="comment">//</span></span><br><span class="line">        <span class="comment">//后期可以改为从文件/数据库读取初始值</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//根据出生日期,计算年龄的!!</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">birthdayToAge</span><span class="params">(String birthday)</span>  </span>&#123;</span><br><span class="line">        Date birthDate = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            birthDate = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>).parse(birthday);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取当前系统时间</span></span><br><span class="line">        Calendar cal = Calendar.getInstance();</span><br><span class="line">        <span class="comment">//如果出生日期大于当前时间，则抛出异常</span></span><br><span class="line">        <span class="keyword">if</span> (cal.before(birthDate)) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//取出系统当前时间的年、月、日部分</span></span><br><span class="line">        <span class="keyword">int</span> yearNow = cal.get(Calendar.YEAR);</span><br><span class="line">        <span class="keyword">int</span> monthNow = cal.get(Calendar.MONTH);</span><br><span class="line">        <span class="keyword">int</span> dayOfMonthNow = cal.get(Calendar.DAY_OF_MONTH);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将日期设置为出生日期</span></span><br><span class="line"></span><br><span class="line">        cal.setTime(birthDate);</span><br><span class="line">        <span class="comment">//取出出生日期的年、月、日部分</span></span><br><span class="line">        <span class="keyword">int</span> yearBirth = cal.get(Calendar.YEAR);</span><br><span class="line">        <span class="keyword">int</span> monthBirth = cal.get(Calendar.MONTH);</span><br><span class="line">        <span class="keyword">int</span> dayOfMonthBirth = cal.get(Calendar.DAY_OF_MONTH);</span><br><span class="line">        <span class="comment">//当前年份与出生年份相减，初步计算年龄</span></span><br><span class="line">        <span class="keyword">int</span> age = yearNow - yearBirth;</span><br><span class="line">        <span class="comment">//当前月份与出生日期的月份相比，如果月份小于出生月份，则年龄上减1，表示不满多少周岁</span></span><br><span class="line">        <span class="keyword">if</span> (monthNow &lt;= monthBirth) &#123;</span><br><span class="line">            <span class="comment">//如果月份相等，在比较日期，如果当前日，小于出生日，也减1，表示不满多少周岁</span></span><br><span class="line">            <span class="keyword">if</span> (monthNow == monthBirth) &#123;</span><br><span class="line">                <span class="keyword">if</span> (dayOfMonthNow &lt; dayOfMonthBirth) age--;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                age--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//打印ArrayList&lt;? extends Person&gt;的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printPersonList</span><span class="params">(ArrayList&lt;? extends Person&gt; personList)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"****************************************************"</span>);</span><br><span class="line">        System.out.println(<span class="string">"编号\t\t姓名\t\t性别\t\t生日\t\t\t年龄\t\t描述"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; personList.size(); i++) &#123;</span><br><span class="line">            Person p = personList.get(i);</span><br><span class="line">            System.out.println(p);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"****************************************************"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//打印Person的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printPerson</span><span class="params">(Person person)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"****************************************************"</span>);</span><br><span class="line">        System.out.println(<span class="string">"编号\t\t姓名\t\t性别\t\t生日\t\t\t年龄\t\t描述"</span>);</span><br><span class="line">        System.out.println(person);</span><br><span class="line">        System.out.println(<span class="string">"****************************************************"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-5-启动类"><a href="#3-5-启动类" class="headerlink" title="3.5 启动类"></a>3.5 启动类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 启动类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainApp</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//程序的入口</span></span><br><span class="line">        <span class="comment">//1.事先准备好两个集合</span></span><br><span class="line">        <span class="comment">//学生集合</span></span><br><span class="line">        ArrayList&lt;Student&gt; stuList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//教师集合</span></span><br><span class="line">        ArrayList&lt;Teacher&gt; teaList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第四章-综合案例-启动类实现【重点实现三遍】"><a href="#第四章-综合案例-启动类实现【重点实现三遍】" class="headerlink" title="第四章 综合案例-启动类实现【重点实现三遍】"></a>第四章 综合案例-启动类实现【重点实现三遍】</h3><h5 id="4-1-架构搭建-主菜单和二级菜单"><a href="#4-1-架构搭建-主菜单和二级菜单" class="headerlink" title="4.1 架构搭建(主菜单和二级菜单)"></a>4.1 架构搭建(主菜单和二级菜单)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 启动类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainApp</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//程序的入口</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//1.事先准备好两个集合</span></span><br><span class="line">        <span class="comment">//学生集合</span></span><br><span class="line">        ArrayList&lt;Student&gt; stuList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//教师集合</span></span><br><span class="line">        ArrayList&lt;Teacher&gt; teaList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//死循环,直到用户需要退出为止</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//2.打印一级菜单</span></span><br><span class="line">            <span class="comment">//a.打印</span></span><br><span class="line">            System.out.println(<span class="string">"1.学生管理系统    2.教师管理系统    3.退出"</span>);</span><br><span class="line">            <span class="comment">//b.输入(字符串)</span></span><br><span class="line">            <span class="comment">//sc的next(输入的内容中间不能有空格)和nextLine(最好不要和nextInt一起使用,有会BUG)的区别</span></span><br><span class="line">            String user = sc.next();</span><br><span class="line">            <span class="comment">//c.判断</span></span><br><span class="line">            <span class="keyword">if</span> (user.equals(<span class="string">"1"</span>))&#123;</span><br><span class="line">               <span class="comment">//进入学生管理系统  </span></span><br><span class="line">               studentManager();</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (user.equals(<span class="string">"2"</span>))&#123;</span><br><span class="line">               <span class="comment">//进入教师管理系统 </span></span><br><span class="line">               teacherManager();</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (user.equals(<span class="string">"3"</span>))&#123;</span><br><span class="line">                <span class="comment">//退出管理系统</span></span><br><span class="line">               exitSystem();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//输入有误提示</span></span><br><span class="line">                inputError();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//学生管理系统</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">studentManager</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//用户选择的是学生管理系统</span></span><br><span class="line">        System.out.println(<span class="string">"【欢迎来到学生管理系统~~~】"</span>);</span><br><span class="line">        <span class="comment">//死循环,直到用户退出学生管理系统为止</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="comment">//2.打印二级菜单</span></span><br><span class="line">            <span class="comment">//a.打印</span></span><br><span class="line">            System.out.println(<span class="string">"1.添加学员   2.修改学员   3.删除学员   4.查询学员   5.返回"</span>);</span><br><span class="line">            <span class="comment">//b.输入(字符串)</span></span><br><span class="line">            String select = sc.next();</span><br><span class="line">            <span class="comment">//c.判断</span></span><br><span class="line">            <span class="keyword">switch</span> (select)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"1"</span>:</span><br><span class="line">                    System.out.println(<span class="string">"【添加成功！】"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"2"</span>:</span><br><span class="line">                    System.out.println(<span class="string">"【修改成功！】"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"3"</span>:</span><br><span class="line">                    System.out.println(<span class="string">"【删除成功！】"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"4"</span>:</span><br><span class="line">                    System.out.println(<span class="string">"【查询成功！】"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"5"</span>:</span><br><span class="line">                    System.out.println(<span class="string">"【返回上一级】"</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    System.out.println(<span class="string">"【输入有误！】"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//教师管理系统</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">teacherManager</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//用户选择的是教师管理系统</span></span><br><span class="line">        System.out.println(<span class="string">"【教师管理系统正在完成中,敬请期待...】"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//退出系统方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exitSystem</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//用户选择的是退出管理系统</span></span><br><span class="line">        System.out.println(<span class="string">"【欢迎下次光临,886~~】"</span>);</span><br><span class="line">        <span class="comment">//让用户退出该系统</span></span><br><span class="line">        <span class="comment">//break;//OK</span></span><br><span class="line">        <span class="comment">//return; //OK</span></span><br><span class="line">        System.exit(<span class="number">0</span>);<span class="comment">//OK</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//输入有误</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">inputError</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//用户输入有误!</span></span><br><span class="line">        System.out.println(<span class="string">"【您的输入有误,请确认后再输入!】"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="img/image-20200308112124898.png" alt="image-20200308112124898"></p><h5 id="4-2-添加学生功能"><a href="#4-2-添加学生功能" class="headerlink" title="4.2 添加学生功能"></a>4.2 添加学生功能</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加学生</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addStudent</span><span class="params">(ArrayList&lt;Student&gt; stuList)</span></span>&#123;</span><br><span class="line">    Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    System.out.println(<span class="string">"您选择了添加学生功能!"</span>);</span><br><span class="line">    <span class="comment">//输入要添加的学生的各种信息</span></span><br><span class="line">    System.out.println(<span class="string">"请输入新学生的姓名:"</span>);</span><br><span class="line">    String name = sc.next();</span><br><span class="line">    System.out.println(<span class="string">"请输入新学生的性别:"</span>);</span><br><span class="line">    String sex = sc.next();</span><br><span class="line">    System.out.println(<span class="string">"请输入新学生的出生日期(yyyy-MM-dd):"</span>);</span><br><span class="line">    String birthday = sc.next();</span><br><span class="line">    <span class="comment">//添加到集合中</span></span><br><span class="line">    Student s = <span class="keyword">new</span> Student(++Utils.stuId,name,sex,birthday,<span class="number">0</span>);</span><br><span class="line">    stuList.add(s);</span><br><span class="line">    <span class="comment">//提示</span></span><br><span class="line">    System.out.println(<span class="string">"【添加成功！】"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-2-查看学生功能"><a href="#4-2-查看学生功能" class="headerlink" title="4.2 查看学生功能"></a>4.2 查看学生功能</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查看学生</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">findStudents</span><span class="params">(ArrayList&lt;Student&gt; stuList)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//先判断一下下,stuList是否有元素</span></span><br><span class="line">    <span class="keyword">if</span> (stuList.size() == <span class="number">0</span>) &#123;</span><br><span class="line">        System.out.println(<span class="string">"【系统中暂无学生信息,添加后再查看!】"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//使用utils工具类中,printPersonList</span></span><br><span class="line">    Utils.printPersonList(stuList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-2-删除学生功能"><a href="#4-2-删除学生功能" class="headerlink" title="4.2 删除学生功能"></a>4.2 删除学生功能</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除学生</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteStudent</span><span class="params">(ArrayList&lt;Student&gt; stuList)</span> </span>&#123;</span><br><span class="line">    Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    <span class="comment">//1.输入要删除的学生的ID</span></span><br><span class="line">    System.out.println(<span class="string">"请输入您要删除学生的ID:"</span>);</span><br><span class="line">    <span class="keyword">int</span> deleteID = sc.nextInt();</span><br><span class="line">    <span class="comment">//2.判断该deleteID是否存在</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stuList.size(); i++) &#123;</span><br><span class="line">        Student ss = stuList.get(i);</span><br><span class="line">        <span class="comment">//比较 deleteID 和 遍历出学生的id</span></span><br><span class="line">        <span class="keyword">if</span> (deleteID == ss.getId())&#123;</span><br><span class="line">            <span class="comment">//显示一下该学生的信息</span></span><br><span class="line">            System.out.println(<span class="string">"您要删除的学生信息如下:"</span>);</span><br><span class="line">            Utils.printPerson(ss);</span><br><span class="line">            <span class="comment">//确认?</span></span><br><span class="line">            System.out.println(<span class="string">"您确定要删除上面这个学生吗(y/n)?"</span>);</span><br><span class="line">            String delete = sc.next();</span><br><span class="line">            <span class="comment">//判断,是y还是n</span></span><br><span class="line">            <span class="keyword">switch</span> (delete)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"y"</span>:</span><br><span class="line">                    stuList.remove(ss);</span><br><span class="line">                    System.out.println(<span class="string">"【删除成功！】"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"n"</span>:</span><br><span class="line">                    System.out.println(<span class="string">"【取消删除！】"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    System.out.println(<span class="string">"【输入有误！删除已经取消,您安息!】"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//结束方法</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">"【输入学生ID"</span>+deleteID+<span class="string">"有误!】"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-2-修改学生功能"><a href="#4-2-修改学生功能" class="headerlink" title="4.2 修改学生功能"></a>4.2 修改学生功能</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改学生</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">updateStudent</span><span class="params">(ArrayList&lt;Student&gt; stuList)</span> </span>&#123;</span><br><span class="line">    Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    <span class="comment">//1.输入学生的ID</span></span><br><span class="line">    System.out.println(<span class="string">"请输入要修改学生的ID:"</span>);</span><br><span class="line">    <span class="keyword">int</span> updateID = sc.nextInt();</span><br><span class="line">    <span class="comment">//2.遍历集合</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stuList.size(); i++) &#123;</span><br><span class="line">        <span class="comment">//取出学生</span></span><br><span class="line">        Student ss = stuList.get(i);</span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span> (updateID == ss.getId())&#123;</span><br><span class="line">            <span class="comment">//a.打印原始信息</span></span><br><span class="line">            System.out.println(<span class="string">"您要修改的学生信息如下:"</span>);</span><br><span class="line">            Utils.printPerson(ss);</span><br><span class="line">            <span class="comment">//b.修改</span></span><br><span class="line">            System.out.println(<span class="string">"请输入修改后的名字(不修改输入0):"</span>);</span><br><span class="line">            String newName = sc.next();</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"请输入修改后的性别(不修改输入0):"</span>);</span><br><span class="line">            String newSex = sc.next();</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"请输入修改后的生日(不修改输入0):"</span>);</span><br><span class="line">            String newBirthday = sc.next();</span><br><span class="line">            <span class="comment">//c.将修改后的信息替换掉ss中原始信息</span></span><br><span class="line">            <span class="keyword">if</span> (!<span class="string">"0"</span>.equals(newName))&#123;</span><br><span class="line">                ss.setName(newName);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!<span class="string">"0"</span>.equals(newSex))&#123;</span><br><span class="line">                ss.setSex(newSex);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!<span class="string">"0"</span>.equals(newBirthday))&#123;</span><br><span class="line">                ss.setBirthday(newBirthday);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">"【修改成功！】"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//提示</span></span><br><span class="line">    System.out.println(<span class="string">"【修改学生的ID:"</span>+updateID+<span class="string">"不存在!】"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第五章-课堂练习"><a href="#第五章-课堂练习" class="headerlink" title="第五章 课堂练习"></a>第五章 课堂练习</h4><h5 id="5-1-参考学员管理实现教师管理模块"><a href="#5-1-参考学员管理实现教师管理模块" class="headerlink" title="5.1 参考学员管理实现教师管理模块"></a>5.1 参考学员管理实现教师管理模块</h5><p><img src="img/image-20200308141732394.png" alt="image-20200308141732394"></p><h5 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">从MainApp开始</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="comment">//1.定义两个集合(学生集合,教师集合)</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">        <span class="comment">//2.输出一级菜单(1.学生管理 2.教师管理 3.退出)</span></span><br><span class="line">        <span class="comment">//3.用户选择1或者2或者3</span></span><br><span class="line">        <span class="comment">//4.使用switch判断用户的选择</span></span><br><span class="line">            <span class="comment">//如果是1,调用studentManager(学生集合);</span></span><br><span class="line">            <span class="comment">//如果是2.调用teacherManger(教师集合)</span></span><br><span class="line">            <span class="comment">//如果是3.调用System.exit(0)方法退出</span></span><br><span class="line">            <span class="comment">//如果是4.提示输入有误  </span></span><br><span class="line">    &#125;     </span><br><span class="line">&#125;    </span><br><span class="line"><span class="comment">//学生管理系统</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">studentManager</span><span class="params">(学生集合)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">   <span class="comment">//1.输出二级菜单(1.添加 2修改 3删除 4查看 5.返回到上一级)</span></span><br><span class="line">     <span class="comment">//2.用户选择1 2 3 4 5 </span></span><br><span class="line">     <span class="comment">//3.使用switch判断用户的选择</span></span><br><span class="line">    <span class="comment">//如果是1,调用addStudent(学生集合);</span></span><br><span class="line">    <span class="comment">//如果是2,调用updateStudent(学生集合)</span></span><br><span class="line">    <span class="comment">//如果是3,调用deleteStudent(学生集合)</span></span><br><span class="line">    <span class="comment">//如果是4,调用findStudents(学生集合)</span></span><br><span class="line">    <span class="comment">//如果是5,直接使用return,结束当前方法,即是返回到上一级</span></span><br><span class="line">    <span class="comment">//如果是其他,提示输入有误,重写输入即可</span></span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//教师管理系统</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">teacherManager</span><span class="params">(教师集合)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">    <span class="comment">//1.输出二级菜单(1.添加 2修改 3删除 4查看 5.返回到上一级)</span></span><br><span class="line">    <span class="comment">//2.用户选择1 2 3 4 5 </span></span><br><span class="line">    <span class="comment">//3.使用switch判断用户的选择</span></span><br><span class="line">    <span class="comment">//如果是1,调用addTeacher(教师集合);</span></span><br><span class="line">    <span class="comment">//如果是2,调用updateTeacher(教师集合)</span></span><br><span class="line">    <span class="comment">//如果是3,调用deleteTeacher(教师集合)</span></span><br><span class="line">    <span class="comment">//如果是4,调用findTeachers(教师集合)</span></span><br><span class="line">    <span class="comment">//如果是5,直接使用return,结束当前方法,即是返回到上一级</span></span><br><span class="line">    <span class="comment">//如果是其他,提示输入有误,重写输入即可</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">问题<span class="number">1</span>:</span><br><span class="line"><span class="string">"0"</span>不是变量吗?怎么是常量呢??</span><br><span class="line">    <span class="string">"0"</span> 就是字面值常量</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> NUM = <span class="number">10</span>; </span><br><span class="line"></span><br><span class="line">问题<span class="number">2</span>:</span><br><span class="line">项目为什么我们获取age时,使用getAge方法,而不是直接使用age变量名</span><br><span class="line">    因为我们给age赋值时,我们统一赋值成<span class="number">0</span>,所以获取age时,不能直接使用变量名age</span><br><span class="line">    而是应该通过getAge方法,在方法中,我们是根据birthday计算出来的,而不是直接获取age的值</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//应该是根据birthday计算出age,然后返回</span></span><br><span class="line">        <span class="keyword">return</span> Utils.birthdayToAge(birthday);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">问题<span class="number">3</span>:</span><br><span class="line">两个系统(学生管理系统,教师管理系统)能调用同一个方法吗?</span><br><span class="line">    可以,实际上我们已经这这些方法,封装到Utils工具类中</span><br><span class="line">  </span><br><span class="line">问题<span class="number">4</span>:</span><br><span class="line">使用replace方法时,接收返回值为什么可使用同一个变量??</span><br><span class="line">        </span><br><span class="line">    String name = <span class="string">"张三李四王五赵六"</span>;</span><br><span class="line">name = name.replace(<span class="string">"李四"</span>,<span class="string">"**"</span>); <span class="comment">//此时name保存了替换之后的字符串</span></span><br><span class="line">System.out.println(name);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（五）</title>
      <link href="/2020/03/07/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/"/>
      <url>/2020/03/07/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•BigInteger类<br>•BigDecimal类<br>•Arrays类<br>•包装类<br>•String类的常用方法<br>•引用类型的使用场景</p><a id="more"></a><p>一.BigInteger类</p><ol><li><p>BigInteger类<br>java.math.BigInteger类，用于大整数计算(理论上整数位数是不受限制的)</p></li><li><p>BigInteger的构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BigInteger</span><span class="params">(String num)</span></span>;<span class="comment">//创建一个大整数</span></span><br></pre></td></tr></table></figure></li><li><p>BigInteger的成员方法<br>BigInteger不能直接使用+-*/进行计算，而是要通过方法进行计算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> BigInteger <span class="title">add</span><span class="params">(BigInteger value)</span></span>;<span class="comment">//求和</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BigInteger <span class="title">subtract</span><span class="params">(BigInteger value)</span></span>;<span class="comment">//求差</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BigInteger <span class="title">multiply</span><span class="params">(BigInteger value)</span></span>;<span class="comment">//求积</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BigInteger <span class="title">divide</span><span class="params">(BigInteger value)</span></span>;<span class="comment">//求商</span></span><br></pre></td></tr></table></figure><p>二.BigDecimal类</p></li><li><p>使用基本类型会出现精度差<br>计算机计算小数时，总是存在不精确的情况</p></li><li><p>BigDecimal类的介绍<br>提供了算数、缩放操作、舍入、比较、散列和格式转换的操作。提供了更加精确的数据计算方式。</p></li><li><p>BigDecimal的构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BigDecimal</span><span class="params">(<span class="keyword">double</span> d)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BigDecimal</span><span class="params">(String d)</span></span>;[推荐]</span><br></pre></td></tr></table></figure></li><li><p>BigDecimal的成员方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> BigDecimal <span class="title">add</span><span class="params">(BigDecimal value)</span></span>;<span class="comment">//求和</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BigDecimal <span class="title">subtract</span><span class="params">(BigDecimal value)</span></span>;<span class="comment">//求差</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BigDecimal <span class="title">multiply</span><span class="params">(BigDecimal value)</span></span>;<span class="comment">//求积</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BigDecimal <span class="title">divide</span><span class="params">(BigDecimal value)</span></span>;<span class="comment">//求商（能除尽）</span></span><br><span class="line">        <span class="comment">//注意：如果除不尽，会抛出异常java.lang.ArithmeticException</span></span><br><span class="line">        <span class="comment">//此时，可以使用另一个divide方法的重载</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BigDecimal <span class="title">divide</span><span class="params">(BigDecimal value,<span class="keyword">int</span> 保留位数,oundingMode.roundingMode)</span></span>;</span><br><span class="line"><span class="comment">//范例</span></span><br><span class="line">BigDecimal divide = bd1.divide(<span class="keyword">new</span> BigDecimal(<span class="string">"0.3"</span>), <span class="number">5</span>, RoundingMode.HALF_UP);</span><br></pre></td></tr></table></figure><p>三.Array类</p></li><li><p>1 Arrays类的介绍<br>Arrarys是专门操作数组的工具类（方法都是静态的）</p></li></ol><p>工具类的设计思想：<br>•构造方法用private修饰<br>•成员用public static修饰</p><p>3.2 Array类的常用方法</p><table><thead><tr><th>方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td>public static void sort(int[] a);</td><td align="center">对数组进行从小到大的排序</td></tr><tr><td>public static String toString(int[] a);</td><td align="center">将一个数组的元素拼成一个大的字符串</td></tr></tbody></table><p>extend：<br>sort方法对于数值类型的数组排序时，按照数值的从小到大进行排序。<br>sort方法对于char类型的数组排序时，按照字符码值的从小到大进行排序。<br>sort方法对于String类型的数组排序时，首先比较首字母的码值，如果相等，再比较次字母的码值，依次类推，从小到大进行排序。</p><p>四.包装类<br>4.1 包装类的作用<br>Java提供了两个类型，基本类型和引用类型，基本类型效率高，但是引用类型可操作性高，把基本类型包装成引用类型，就是包装类。<br>包装类就是基本类型对应的引用类型，全称叫基本数据类型的包装类（简称包装类）</p><p>基本类型包装类概述：将基本数据类型封装成对象的好处在于可以在对象中定义更多的功能方法操作该数据<br>常用操作之一：用于基本数据类型与字符串之间的转换</p><table><thead><tr><th>基本类型</th><th align="right">引用类型</th></tr></thead><tbody><tr><td>byte</td><td align="right">Byte</td></tr><tr><td>short</td><td align="right">Short</td></tr><tr><td>*char</td><td align="right">Character</td></tr><tr><td>*int</td><td align="right">Integer</td></tr><tr><td>long</td><td align="right">Long</td></tr><tr><td>float</td><td align="right">Float</td></tr><tr><td>double</td><td align="right">Double</td></tr><tr><td>boolean</td><td align="right">Boolean</td></tr></tbody></table><p>4.2 Integer包装类介绍<br>Integer是int基本类型的包装类</p><p>4.3 Integer类的构造方法和静态方法<br>构造方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Integer</span><span class="params">(<span class="keyword">int</span> value)</span></span>;<span class="comment">//过时</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Integer</span><span class="params">(String value)</span></span>;<span class="comment">//过时</span></span><br></pre></td></tr></table></figure><p>静态方法：</p><table><thead><tr><th>方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td>public static Integer valueof(int value);</td><td align="center">返回表示指定的int值类型的Integer实例</td></tr><tr><td>public static Integer valueof(String value);</td><td align="center">返回一个保存指定值的Integer对象String</td></tr></tbody></table><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    Integer i1 = <span class="keyword">new</span> Integer(<span class="number">10</span>);</span><br><span class="line">    System.out.println(i1);</span><br><span class="line"></span><br><span class="line">    Integer i2 = <span class="keyword">new</span> Integer(<span class="string">"11"</span>);</span><br><span class="line">    System.out.println(i2);</span><br><span class="line"></span><br><span class="line">    Integer i3 = Integer.valueOf(<span class="number">12</span>);</span><br><span class="line">    System.out.println(i3);</span><br><span class="line"></span><br><span class="line">    Integer i4 = Integer.valueOf(<span class="string">"13"</span>);</span><br><span class="line">    System.out.println(i4);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.4.1 拆箱和装箱<br>基本类型和对应的包装类是可以相互转换的。</p><p>装箱：把基本类型———转换成————&gt;对应包装类<br>拆箱：包装类———转换成————&gt;对应的基本类型</p><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//装箱操作</span></span><br><span class="line">Integer i1 = <span class="keyword">new</span> Integer(<span class="number">10</span>);</span><br><span class="line">Integer i3 = Integer.valueOf(<span class="number">12</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//拆箱操作</span></span><br><span class="line"><span class="keyword">int</span> value = i1.intValue();</span><br></pre></td></tr></table></figure><p>4.4.2 自动拆箱和装箱*[JDK 5中引入该操作]</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Integer i =<span class="number">4</span>；<span class="comment">//底层已经调用Integer.valueOf()方法自动帮助进行装箱操作</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> value  = i;<span class="comment">//底层调用i.intValue()自动帮助我们进行拆箱操作</span></span><br></pre></td></tr></table></figure><p>注意:在使用保证类类型时，如果做操作，最好先判断是否为null<br>推荐：只要是对象，在使用前将必须进行不为null的判断</p><p>题：<br>Integer a = 10;//装一次<br>a++;//拆一次 装一次<br>自动装箱2次<br>自动拆箱1次</p><p>4.5 基本类型与字符串之间的转换<br>•基本类型转换成String</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> num = <span class="number">10</span>；</span><br><span class="line"></span><br><span class="line">a.直接加一个<span class="string">" "</span></span><br><span class="line">String s = num + <span class="string">" "</span>;</span><br><span class="line"></span><br><span class="line">b.通过String的静态方法valueOf</span><br><span class="line">String s = String.valueof(num);</span><br></pre></td></tr></table></figure><p>•String转换成基本类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">String num = <span class="string">"100"</span>;</span><br><span class="line">方式一：</span><br><span class="line">a.</span><br><span class="line">先使用Integer的构造方法</span><br><span class="line">Integer i = <span class="keyword">new</span> Integer(num);</span><br><span class="line">b.</span><br><span class="line">接着拆箱调用intValue方法拆箱</span><br><span class="line"><span class="keyword">int</span> number = i.intValue();</span><br><span class="line">或不调用intValue方法自动拆箱接口</span><br><span class="line"><span class="keyword">int</span> number = i</span><br><span class="line">方式二：</span><br><span class="line">直接调用包装类的parseXxx(String s)解析字符串方法</span><br><span class="line"><span class="keyword">int</span> number = Integer.parseInt(num);</span><br></pre></td></tr></table></figure><p>•字符串无法解析成基本类型失败时的异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread <span class="string">"main"</span> java.lang.NumberFormatException</span><br></pre></td></tr></table></figure><p>五.String类常用方法<br>String的构造方法：<br>直接赋值：<br>String s = “java”;<br>构造方法：<br>String s  = new String(“java’);</p><p>char[] chs = {“j”,”a”,”v”,”a”};<br>String s = new String(chs);</p><p>byte[] bs = {97,98,99,100};<br>String s = new String(bs);//最终结果是ASCII码对应的字符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    String s = <span class="string">"Hello,World"</span>;</span><br><span class="line">    <span class="comment">//1.concat 拼接</span></span><br><span class="line">    String s1 = s.concat(<span class="string">"+Java"</span>);</span><br><span class="line">    System.out.println(s1);<span class="comment">//Hello,World+Java</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//contains 判断是否包含某个小字符串</span></span><br><span class="line">    <span class="keyword">boolean</span> b1 = s.contains(<span class="string">"o"</span>);</span><br><span class="line">    <span class="keyword">boolean</span> b2 = s.contains(<span class="string">"world"</span>);</span><br><span class="line">    System.out.println(b1);<span class="comment">//true</span></span><br><span class="line">    System.out.println(b2);<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//endswith 是否以该字符结尾</span></span><br><span class="line">    <span class="keyword">boolean</span> b3 = s.endsWith(<span class="string">"ld"</span>);</span><br><span class="line">    <span class="keyword">boolean</span> b4 = s.endsWith(<span class="string">"lo"</span>);</span><br><span class="line">    System.out.println(b3);<span class="comment">//true</span></span><br><span class="line">    System.out.println(b4);<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//startwith 是否以该字符开头</span></span><br><span class="line">    <span class="keyword">boolean</span> b5 = s.startsWith(<span class="string">"He"</span>);</span><br><span class="line">    <span class="keyword">boolean</span> b6 = s.startsWith(<span class="string">"Wo"</span>);</span><br><span class="line">    System.out.println(b5);<span class="comment">//true</span></span><br><span class="line">    System.out.println(b6);<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//indexOf查找目标字符串在当前字符串第一次出现的索引</span></span><br><span class="line">    <span class="keyword">int</span> index1 = s.indexOf(<span class="string">"o"</span>);</span><br><span class="line">    System.out.println(index1);<span class="comment">//4</span></span><br><span class="line">    <span class="keyword">int</span> php = s.indexOf(<span class="string">"php"</span>);</span><br><span class="line">    System.out.println(php);<span class="comment">// -1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//lastdexOf查找目标字符串在当前字符串最后一次出现的索引</span></span><br><span class="line">    <span class="keyword">int</span> index2 = s.lastIndexOf(<span class="string">"o"</span>);</span><br><span class="line">    System.out.println(index2);<span class="comment">//7</span></span><br><span class="line">    <span class="keyword">int</span> delphi = s.lastIndexOf(<span class="string">"delphi"</span>);</span><br><span class="line">    System.out.println(delphi);<span class="comment">// -1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//replace 将当前字符串中的目标字符串替换为另外一个字符串</span></span><br><span class="line">    String replace = s.replace(<span class="string">"Hello"</span>, <span class="string">"Halo"</span>);</span><br><span class="line">    System.out.println(replace);<span class="comment">//Halo,World</span></span><br><span class="line">    String replace1 = s.replace(<span class="string">"php"</span>, <span class="string">"Halo"</span>);</span><br><span class="line">    System.out.println(replace1);<span class="comment">//Hello,World</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//substring 指定</span></span><br><span class="line">    String subs = s.substring(<span class="number">2</span>);</span><br><span class="line">    System.out.println(subs);<span class="comment">//llo,World</span></span><br><span class="line">    String subs1 = s.substring(<span class="number">2</span>,<span class="number">5</span>);</span><br><span class="line">    System.out.println(subs1);<span class="comment">//llo,截取到5之前，不包含5</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//toCharArry 将字符转换成char Array</span></span><br><span class="line">    <span class="keyword">char</span>[] chs = s.toCharArray();</span><br><span class="line">    System.out.println(chs);<span class="comment">//Hello,World</span></span><br><span class="line">    System.out.println(Arrays.toString(chs));<span class="comment">//[H, e, l, l, o, ,, W, o, r, l, d]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//toLowerArry 转成小写</span></span><br><span class="line">    String s2 = s.toLowerCase();</span><br><span class="line">    System.out.println(s2);<span class="comment">//hello,world</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//toUpperArry 转成大写</span></span><br><span class="line">    String s3 = s.toUpperCase();</span><br><span class="line">    System.out.println(s3);<span class="comment">//HELLO,WORLD</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    String ss = <span class="string">"   Hello     ,World   "</span>;</span><br><span class="line">    <span class="comment">//trim 去除字符串两端的空格</span></span><br><span class="line">    String trim = ss.trim();</span><br><span class="line">    System.out.println(trim);<span class="comment">//Hello     ,World</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    String sss = <span class="string">"a,b,c,d,e,f"</span>;</span><br><span class="line">    <span class="comment">//split 切割字符串</span></span><br><span class="line">    String[] split = sss.split(<span class="string">","</span>,<span class="number">7</span>);</span><br><span class="line">    String s4 = Arrays.toString(split);</span><br><span class="line">    System.out.println(s4);<span class="comment">//[a, b, c, d, e, f]</span></span><br><span class="line">    System.out.println(split[<span class="number">0</span>]);<span class="comment">//a</span></span><br><span class="line">    System.out.println(split[<span class="number">1</span>]);<span class="comment">//b</span></span><br><span class="line">    System.out.println(split[<span class="number">2</span>]);<span class="comment">//c</span></span><br><span class="line">    System.out.println(split[<span class="number">3</span>]);<span class="comment">//d</span></span><br><span class="line">    System.out.println(split[<span class="number">4</span>]);<span class="comment">//e</span></span><br><span class="line">    System.out.println(split[<span class="number">5</span>]);<span class="comment">//f</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>六.引用类型使用小结<br>6.1 类名作为方法参数和返回值<br>主要是（类，抽象类，接口，以及多态）复习</p><p>基本类型：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>普通类,也可以作为方法的参数和返回</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(Dog g)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> Dog method&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>抽象类，也可以作为方法的参数和返回</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(Animal a)</span></span>&#123;</span><br><span class="line">    <span class="comment">//Animal a = 任意一个子类对象</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> Animal method&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口，也可以作为方法的参数和返回</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(Flyable a)</span></span>&#123;</span><br><span class="line">    <span class="comment">//Flyable f = 该接口的任意一个实现类对象</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Flyable <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：<br>a.当基本类型作为方法的参数和返回值时，调用方法和返回数据时，返回该基本类型的值即可<br>b.当引用类型作为方法的参数和返回值时，调用方法和返回数据时，返回该引用类型的对象/子类对象/实现类对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        killPerson(<span class="keyword">new</span> Person(<span class="number">18</span>,<span class="string">"a"</span>));</span><br><span class="line">        Person pp = birthPerson();</span><br><span class="line">        System.out.println(pp);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">killPerson</span><span class="params">(Person p)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"ppp"</span>);</span><br><span class="line">    System.out.println(p);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Person <span class="title">birthPerson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Person(<span class="number">3</span>,<span class="string">"bbb"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>总结：当方法的参数或者返回值是普通类时，我们要传入或返回对象的是该类的对象</p><p>6.2 抽象类作为方法参数和返回值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        show(<span class="keyword">new</span> Dog());</span><br><span class="line">        show(<span class="keyword">new</span> Cat());</span><br><span class="line">        Animal an = BirthAnimal();</span><br><span class="line">        an.eat();</span><br><span class="line">        an.bark();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(Animal an)</span></span>&#123;</span><br><span class="line">        an.eat();</span><br><span class="line">        an.bark();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Animal <span class="title">BirthAnimal</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//        return new Dog();</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Cat();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>总结：当方法的参数或者返回值是抽象类时，我们要传入或返回对象的是该类的子类对象</p><p>6.3 接口作为方法参数和返回值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        showFly(<span class="keyword">new</span> Bird());</span><br><span class="line">        showFly(<span class="keyword">new</span> Plane());</span><br><span class="line">        Flyable fa = getfly();</span><br><span class="line">        fa.fly();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义方法，使用Flyable接口</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showFly</span><span class="params">(Flyable fa)</span></span>&#123;</span><br><span class="line">        fa.fly();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Flyable <span class="title">getfly</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//        return new Plane();</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Bird();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>总结：当方法的参数或者返回值是接口时，我们要传入或返回对象的是该类的实现类对象</p><p>6.4 类名作为成员变量的，其实引用类型也可以作为类的成员变量<br>    public class Student{<br>        int age;<br>        String name;</p><pre><code>    Dog dog;    Animal an;    Flyable fa;}</code></pre><p>总结：当普通类作为成员变量，给该成员变量赋值时，赋值普通类的对象<br>6.5 抽象类作为成员变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    Animal an;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Student ss =<span class="keyword">new</span> Student();</span><br><span class="line">    ss.age = <span class="number">1</span>;</span><br><span class="line">    ss.name = <span class="string">"s"</span>;</span><br><span class="line">    ss.an = <span class="keyword">new</span> Dog();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：当抽象类作为成员变量时，当给该成员变量赋值，赋值给该成员类的子类对象</p><p>6.6接口作为成员变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Flyable <span class="title">getFa</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFa</span><span class="params">(Flyable fa)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fa = fa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Flyable fa;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo11</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">     Student ss = <span class="keyword">new</span> Student();</span><br><span class="line">     ss.setAge(<span class="number">1</span>);</span><br><span class="line">     ss.setName(<span class="string">"a"</span>);</span><br><span class="line">     ss.setFa(<span class="keyword">new</span> Bird());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：当接口作为成员变量时，当给该成员变量赋值，赋值给该成员类的实现类对象</p><p><b>总结</b><br>1.BigInteger<br>2.BigDecimal<br>    add subtract multiply divide</p><p>3.Arrays工具类*<br>public static void sort(int[] arr);默认对数组进行升序排序<br>public static String toString(int[] arr);将数组的所有元素拼在一起成一个大字符串返回</p><p>4.包装类*<br>a.八种基本类型对应的引用类型<br>b.装箱和拆箱（JDK5之后，自动拆装箱）<br>Integer i = 10;<br>int j =1;</p><p>5.String **<br>构造方法和常用的13个成员方法</p><p>6.引用类型的使用总结<br>引用类型作为方法的参数和返回值<br>引用类型作为成员变量</p><p>如果引用类型是普通类，那么用到该普通类的普通类对象<br>如果引用类型是抽象类，那么用到该抽象类的子类对象<br>如果引用类型是接口，那么用到该接口的实现类对象</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（四）</title>
      <link href="/2020/03/06/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2020/03/06/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•Object类<br>•时间日期类<br>•Math类<br>•System类</p><a id="more"></a><p>一. Object类<br>1.1 Object介绍<br>    Object类是所有类的父类，所有对象（包括数组）都具有该类中的11种方法。</p><p>构造方法：<br>public Object();</p><p>为什么之前说子类的构造方法默认访问的是父类的无参构造方法，因为它们的顶级父类只有无参构造方法</p><p>如果一个类我们没有指定其父类，那么默认继承Object</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> /*<span class="keyword">extends</span> <span class="title">Object</span>*/</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.2 toString方法<br>作用：返回该对象的字符串表示（调用的对象）<br>默认字符串表示的形式：<br>    包名.类名@地址值<br>    com.itheima.Demo01.Dog@61bbe9ba</p><p>在实际开发中，我们通常会重写toString方法，将本类返回的地址值改回返回对象的内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Dog&#123;"</span> +</span><br><span class="line">            <span class="string">"age="</span> + age +</span><br><span class="line">            <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">'&#125;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Dog dd = <span class="keyword">new</span> Dog(<span class="number">10</span>,<span class="string">"a"</span>);</span><br><span class="line">    String  ss = dd.toString();</span><br><span class="line">    System.out.println(ss);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Dog{age=10, name=’a’}<br>Dog{age=20, name=’b’}</p><p>注意：重写toString方法之后，当调用对象的toString方法时，返回的不再是地址值，而是具体的属性值。<br>实际上，不需要手动调用toString方法，可以简写为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Dog d = <span class="keyword">new</span> Dog();</span><br><span class="line">System.out.println(d);</span><br></pre></td></tr></table></figure><p>打印变量d，会自动调用d.toString()，其实就是打印toString方法值的返回值</p><p>总结：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(ss2.toString());</span><br><span class="line">等同于</span><br><span class="line">System.out.println(ss2);</span><br></pre></td></tr></table></figure><p>1.3 equals方法<br>作用：判断其他对象是否是此对象“相等”。<br>默认比较的是两个对象的地址值<br>equals源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">this</span> == obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在实际开发中， 也会重写equals方法，将本来的比较地址值改为比较内容（属性值）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//合法性判断</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    this --- age1</span></span><br><span class="line"><span class="comment">    o    --- age2</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">//比较地址是否相同</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> == o) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="comment">//判断参数是否为null</span></span><br><span class="line">    <span class="comment">//getClass判断是否来自同一个类(对比字节码Class文件)</span></span><br><span class="line">    <span class="keyword">if</span> (o == <span class="keyword">null</span> || getClass() != o.getClass()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">//向下转型</span></span><br><span class="line">    Cat cat = (Cat) o;</span><br><span class="line">    <span class="comment">//判断时，必须当前对象的age和比较对象的age相同，切当前name和比较对象name相同，才返回true</span></span><br><span class="line">    <span class="keyword">return</span> age == cat.age &amp;&amp;</span><br><span class="line">            Objects.equals(name, cat.name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td>public String toString();</td><td align="center">返回对象的字符串形式表示。建议所有子类重写该方法，IDE自动生成</td></tr><tr><td>public boolean equals(Object obj);</td><td align="center">比较对象是否相等，默认比较地址，重写可以比较内容，IDE自动生成</td></tr></tbody></table><p>1.4 native本地方法<br>有native修饰的方法，称为本地方法，不是用Java写的，是使用底层C/C++写的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p>1.5 扩展（equals和==的区别）<br>对于基本类型：<br>    == 比较的是数值<br>    没有equals方法<br>对于引用类型：<br>    == 比较的是地址值<br>    equals默认情况下比较的是地址值，@override后，就按照重写的比较规则比较（一般比较属性值）</p><p>1.6 Objects类<br>Objects类，称之为工具类（内部所有的方法都是静态的）<br>    在Objects中有一个方法：<br>    public static boolean equals(Object a, Object b);<br>    用于判断两个对象是否“相等”，并避免类空指针异常，该方法源码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object a, Object b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span>( a == b ) || ( a != <span class="keyword">null</span> &amp;&amp; a.equals(b));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二. Date 类<br>2.1 Date类的介绍<br>    包：java.util.Date<br>作用：代表某一个时间点，可以精确到毫秒</p><p>2.2 Date类的构造方法</p><table><thead><tr><th>方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td>public Date();</td><td align="center">创建一个Date对象，并初始化，代表当前的系统时间，精确到毫秒。</td></tr><tr><td>public Date(long date);</td><td align="center">创建一个Date对象，代表距离国际基准设计millis后的时间。</td></tr></tbody></table><p>2.3 Date类的常用方法</p><table><thead><tr><th>方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td>public void getTime();</td><td align="center">获取当前Date对象距离基准时间(1910-1-1 00:00:00)的毫秒值。</td></tr><tr><td>public void setTime(long date);</td><td align="center">设置时间，修改当前Date对象距离基准时间的毫秒值</td></tr></tbody></table><p>三. DateFormat类<br>3.1 DateFormat类的作用<br>让时间/日期和具体的文本直接来回转换</p><p>SimpleDateFormat是一个具体的类，用于以区域设置敏感的方式格式化和解析日前。</p><p>日前和时间格式由日期和时间模式字符串指定，在日期和时间模式字符串中，从’A’到’Z’以及从’a’到’z’引号的字母被解释为表示日期或时间字符串的组件的模式字母</p><p>格式化：将 <b>Date对象</b> 转成具体的 <b>时间文本字符串</b><br>解析：将 <b>时间字符串</b> 转回 <b>Date对象</b></p><p>3.2 DateFormat类的构造方法<br>DateFormat is an abstract class for date/time</p><p>DateFromat是抽象类，使用其子类（SimpleDateFormat）<br>public SimpleDateFormat(String pattern,<br>                        DateFormatSymbols formatSymbols);<br>这里的pattern表示我们想要的时间字符串格式/模式</p><table><thead><tr><th>方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td>public SimpleDateFormat();</td><td align="center">构造一个SimpleDateFormat，使用默认模式和日期格式</td></tr><tr><td>public SimpleDateFormat(String pattern);</td><td align="center">构造一个SimpleDateFormat使用给定的模式和默认的日期格式</td></tr></tbody></table><table><thead><tr><th>Letter</th><th align="center">Date or Time Component</th><th align="right">Presentation</th><th align="right">Examples</th></tr></thead><tbody><tr><td>G</td><td align="center">Era designator</td><td align="right">Text</td><td align="right">AD</td></tr><tr><td>y</td><td align="center">Year</td><td align="right">Year</td><td align="right">1996; 96</td></tr><tr><td>Y</td><td align="center">Week year</td><td align="right">Year</td><td align="right">2009; 09</td></tr><tr><td>M</td><td align="center">Month in year (context sensitive)</td><td align="right">Month</td><td align="right">July; Jul; 07</td></tr><tr><td>L</td><td align="center">Month in year (standalone form)</td><td align="right">Month</td><td align="right">July; Jul; 07</td></tr><tr><td>w</td><td align="center">Week in year</td><td align="right">Number</td><td align="right">27</td></tr><tr><td>W</td><td align="center">Week in month</td><td align="right">Number</td><td align="right">2</td></tr><tr><td>D</td><td align="center">Day in year</td><td align="right">Number</td><td align="right">189</td></tr><tr><td>d</td><td align="center">Day in month</td><td align="right">Number</td><td align="right">10</td></tr><tr><td>F</td><td align="center">Day of week in month</td><td align="right">Number</td><td align="right">2</td></tr><tr><td>E</td><td align="center">Day name in week</td><td align="right">Text</td><td align="right">Tuesday; Tue</td></tr><tr><td>u</td><td align="center">Day number of week (1 = Monday, …, 7 = Sunday)</td><td align="right">Number</td><td align="right">1</td></tr><tr><td>a</td><td align="center">Am/pm marker</td><td align="right">Text</td><td align="right">PM</td></tr><tr><td>H</td><td align="center">Hour in day (0-23)</td><td align="right">Number</td><td align="right">0</td></tr><tr><td>k</td><td align="center">Hour in day (1-24)</td><td align="right">Number</td><td align="right">24</td></tr><tr><td>K</td><td align="center">Hour in am/pm (0-11)</td><td align="right">Number</td><td align="right">0</td></tr><tr><td>h</td><td align="center">Hour in am/pm (1-12)</td><td align="right">Number</td><td align="right">12</td></tr><tr><td>m</td><td align="center">Minute in hour</td><td align="right">Number</td><td align="right">30</td></tr><tr><td>s</td><td align="center">Second in minute</td><td align="right">Number</td><td align="right">55</td></tr><tr><td>S</td><td align="center">Millisecond</td><td align="right">Number</td><td align="right">978</td></tr><tr><td>z</td><td align="center">Time zone</td><td align="right">General time zone</td><td align="right">Pacific Standard Time; PST; GMT-08:00</td></tr><tr><td>Z</td><td align="center">Time zone</td><td align="right">RFC 822 time zone</td><td align="right">-0800</td></tr><tr><td>X</td><td align="center">Time zone</td><td align="right">ISO 8601 time zone</td><td align="right">-08; -0800; -08:00</td></tr></tbody></table><p>主要：<br>y – 年<br>M – 月<br>d – 日<br>H – 时<br>m – 分<br>s – 秒</p><p>3.3 DateFormat类的成员方法</p><table><thead><tr><th>方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td>public String format(Date date);</td><td align="center">格式化方法，将日期格式化成日期/时间字符串</td></tr><tr><td>public Date parse(String date);</td><td align="center">解析方法，从给定字符串的开始解析文本以及生成日期</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">    SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日 HH:mm:ss"</span>);</span><br><span class="line">    Date now = <span class="keyword">new</span> Date();</span><br><span class="line">    String nowStr = sdf.format(now);</span><br><span class="line">    System.out.println(nowStr);</span><br><span class="line"></span><br><span class="line">    Date date = sdf.parse(<span class="string">"2020年04月07日 11:18:09"</span>);</span><br><span class="line">    System.out.println(date);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>四. Calendar类<br>4.1 Calendar的介绍和获取对象方式：<br>概述：<br>Calendar为某一时刻和一组日历字段直接的转换提供了一些方法，并为操作日历字段提供了一些方法</p><p>作用：表示某个时间点<br>获取对象的方式：<br>创建其子类GregorianCalendar类的对象（目前不使用）</p><p>使用Calendar的静态方法【推荐方式】：<br>Calendar c = Calendar.getInstance();创建一个子类对象，返回</p><p>注意：在Calendar类中，月份（0-11），代表我们的（1-12）</p><p>4.2 Calendar类中常见的方法</p><table><thead><tr><th>方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td>public int get(int field);</td><td align="center">返回给定日历字段的值</td></tr><tr><td>public abstract void add(int field,int amount);</td><td align="center">根据日历的规则，将指定的时间量添加或减去给定的日历字段</td></tr><tr><td>public final void set(int year,int month,int date);</td><td align="center">设置当前的日历年月日</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获取一个Calendar对象</span></span><br><span class="line">    Calendar c = Calendar.getInstance();<span class="comment">//多态形式</span></span><br><span class="line">    System.out.println(c);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取Calendar对象中的某个数值</span></span><br><span class="line">    <span class="keyword">int</span> year = c.get(Calendar.YEAR);</span><br><span class="line">    System.out.println(<span class="string">"Year:"</span>+year);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> month = c.get(Calendar.MONTH );</span><br><span class="line">    System.out.println(<span class="string">"Month: "</span>+month);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> day = c.get(Calendar.DAY_OF_MONTH);</span><br><span class="line">    System.out.println(<span class="string">"Day: "</span>+day);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获取一个Calendar对象</span></span><br><span class="line">    Calendar c = Calendar.getInstance();</span><br><span class="line">    System.out.println(c);</span><br><span class="line">    <span class="comment">//修改Calendar对象中某个成员的值</span></span><br><span class="line">    c.set(Calendar.YEAR,<span class="number">3000</span>);</span><br><span class="line">    c.set(Calendar.MONTH,<span class="number">3</span>);</span><br><span class="line">    c.set(Calendar.DAY_OF_MONTH,<span class="number">20</span>);</span><br><span class="line">    print(c);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加Calendar对象中某个成员的值</span></span><br><span class="line">    c.add(Calendar.YEAR,<span class="number">20</span>);</span><br><span class="line">    c.add(Calendar.MONTH,<span class="number">3</span>);</span><br><span class="line">    c.add(Calendar.DAY_OF_MONTH,<span class="number">20</span>);</span><br><span class="line">    print(c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：<br>a.Calender类中，month从0-11，我们是1-12<br>b.时间日期，也有大小之分，时间越靠后，我们认为其越大</p><p>五. Math类<br>5.1 Math类的介绍<br>Math中主要包含了一些数学运算相关的方法<br>Math类中这些方法都是静态的（通过类名就可以直接调用,Math当作一个工具类）</p><p>5.2 常用方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">abs</span><span class="params">(<span class="keyword">double</span> d)</span></span>;<span class="comment">//求绝对值</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">ceil</span><span class="params">(<span class="keyword">double</span> d)</span></span>;<span class="comment">//向上取整</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">floor</span><span class="params">(<span class="keyword">double</span> d)</span></span>;<span class="comment">//向下取整</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">round</span><span class="params">(<span class="keyword">float</span> d)</span></span>;<span class="comment">//四舍五入到整数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;<span class="comment">//返回两个int值中的较大值</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;<span class="comment">//返回两个int值中的较小值</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">pow</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b)</span></span>;<span class="comment">//求次幂,返回a的b次幂的值</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">random</span><span class="params">()</span></span>;<span class="comment">//返回值为double的正值，[0.0,1.0]</span></span><br></pre></td></tr></table></figure><p>注意：<br>ceil只要有小数部分不是0，就向整数位进1<br>floor无论如何，小数部分不要，只要整数部分<br>Math.ceil(3.0);==&gt; 3.0<br>Math.floor(3.0);==&gt; 3.0</p><p>六. System<br>6.1 System类的介绍<br>The System class contains several useful class fields and methods. It cannot be instantiated.<br>System类中包含几个静态到变量和静态到方法，且该类不能被实例化（无法被创建对象）</p><table><thead><tr><th>方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td>public static void exit(int status);</td><td align="center">终止当前运行的Java虚拟机，非0表示异常终止</td></tr><tr><td>public static long currentTimeMillis();</td><td align="center">返回当前时间(以毫秒为单位)</td></tr></tbody></table><p>System源码表示构造被私有化，故而无法创建对象<br>源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Don't let anyone instantiate this class */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">System</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6.2 System类到常见用法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exit</span><span class="params">(<span class="keyword">int</span> status)</span></span>;</span><br></pre></td></tr></table></figure><p>作用：退出Java虚拟机</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">currentTimeMillis</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p>作用：获取当前系统毫秒值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> start_new = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">StringBuilder s1 = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5000</span>; i++) &#123;</span><br><span class="line">    s1.append(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> end_new = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"time:"</span>+(end_new-start_new));</span><br></pre></td></tr></table></figure><p>总结：<br>1.Object：所有类的父类<br>toString：默认返回的字符串表示，包名.类名@地址名<br>开发中一般会重写toString，返回对象的内容（command+n自动生成）<br>注意：实际上不需要手动调用toString方法，因为在使用对象时，编译器会自动调用toString()方法</p><p>equals默认比较的是两个对象的地址值，在开发中一般会@override，比较两个对象的内容（属性值）</p><p>2.Date &amp; DateFormat</p><p>构造方法：<br>public Date();//当前系统时间<br>public Date(long millins);//距离基准时间millis毫秒后的时间</p><p>成员方法：<br>public long getTime();//获取当前Date对象距离基准时间的毫秒值<br>public long setTime(long millins);//设置当前Date对象距离基准时间的毫秒值</p><p>SimpleDateFormat&lt;子类&gt; extends DateFormat&lt;抽象类&gt;<br>构造方法：<br>public SimpleDateFormat(String 模式/格式);//“yyyy-MM-dd HH:mm:ss”</p><p>成员方法：<br>格式化：<br>public String format(Date date);<br>解析：<br>public Date parse(String time);</p><p>3.Calendar<br>获取对象：<br>Calendar c = Calendar.getinstance();//返回Calendar的子类对象<br>成员方法：<br>public void get(int field);<br>public void set(int field,int value);<br>public void add(int field,int value);</p><p>4.Math<br>Math类中方法都是静态的<br>public static double abs(double d);<br>public static double ceil(double d);<br>public static double floor(double d);<br>public static double rount(double d);<br>public static double pow(double d);</p><p>5.System<br>System类中方法都是静态的<br>public static void exit(0);//退出JVM<br>public static long currentTimeMills();//获取当前时间的毫秒值（用于计算某段代码的运行时间）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（三）</title>
      <link href="/2020/03/04/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2020/03/04/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•多态<br>•内部类<br>•权限修饰符<br>•代码块</p><a id="more"></a><p>一. 多态<br>面向对象三大特征：封装，继承，多态<br>1.1 多态定义：<br>    a.严格的定义：同一个动作，具有不同的表现形式<br>    b.不严格定义：同一个对象，具有不同的形态</p><p>1.2 多态的前提<br>    a.必须有继承关系，或者实现关系<br>    b.必须有方法的重写<br>    c.有父类引用指向子类对象<br>只有满足以上三个前提，才有多态</p><p>1.3 多态的体现<br>    语言表达：父类类型的变量 指向了子类类型的变量（地址）<br>    代码表达：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Parent P = <span class="keyword">new</span> Sub();</span><br></pre></td></tr></table></figure><pre><code>范例：</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Animal A = <span class="keyword">new</span> Dog();(假设Dog已经继承了Animal，并重写了某个方法)</span><br></pre></td></tr></table></figure><p>1.4 多态调用方法的特点<br>    a.多态调用方法时，编译阶段看父类<br>    b.多态调用方法时，运行阶段看子类<br>总结：多态调用方法的特点是编译看父，运行看子</p><p>多态成员访问特点:<br>•成员变量:编译看父，执行看父<br>•成员方法:编译看父，执行看子</p><p>为什么成员变量和成员方法访问不一样<br>•因为成员方法有重写，成员变量没有</p><p>1.5 多态的好处</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Dog dogname = <span class="keyword">new</span> Dog();</span><br><span class="line">        Feed_Animal(dogname);</span><br><span class="line"></span><br><span class="line">        Cat catname = <span class="keyword">new</span> Cat();</span><br><span class="line">        Feed_Animal(catname);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Feed_Animal</span><span class="params">(Animal an)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Come to Eat"</span>);</span><br><span class="line">        an.eat();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：多态提供了代码的扩展性/灵活性<br>具体体现：定义方法时，使用父类类型作为参数，将来在使用时，使用具体的子类型参与操作</p><p>1.6 多态的弊端<br>多态调用特点：编译看父，运行看子<br>弊端：使用多态时，只能调用子父类都有的方法，不能调用子类独有的方法</p><p>1.7 多态弊端的解决方法-向下转型<br>    向上转型(把子类类型转换成父类类型)：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Animal an = <span class="keyword">new</span> Dog();</span><br><span class="line">dd.eat();</span><br><span class="line">Dog dd = <span class="keyword">new</span> Animal();</span><br></pre></td></tr></table></figure><pre><code>向下转型（把父类类型转回子类类型）：</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Dog dog = (Dog) dd;</span><br><span class="line">dog.sleep(;)</span><br></pre></td></tr></table></figure><p>1.8 转型可能出现的异常<br>ClassCastException 类型转换异常<br>当多态一个子类是A，向下转型是另一个子类B时，会出现转换异常。</p><p>1.9 instanceof 关键字介绍<br>可以判断一个对象，是否是我们指定类的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> b = 对象名 <span class="keyword">instanceof</span> </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Animal an = <span class="keyword">new</span> Cat();</span><br><span class="line">        an.eat();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(an <span class="keyword">instanceof</span> Dog)&#123;</span><br><span class="line">            Dog dd = (Dog)an;</span><br><span class="line">            dd.Housekeeping();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(an <span class="keyword">instanceof</span> Cat)&#123;</span><br><span class="line">            Cat cc = (Cat)an;</span><br><span class="line">            cc.catchMouse();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>二. 内部类<br>2.1 什么是内部类<br>所谓的内部类就是在一个类A内部定义一个另外一个类B，此时类B内部类，类A外部类</p><p>按照内部类在类中定义的位置不同，可以分为如下两种形式<br>•在类的成员位置：成员内部类<br>•在类的局部位置：局部内部类</p><p>创建格式：<br>外部类名.内部类名 对象名 = 外部类对象.内部类对象；<br>范例：Outer.Inner oi = new Outer().new Inner();</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Human</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    内部类</span></span><br><span class="line"><span class="comment">//    成员内部类</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Heart</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> JumpCount;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Jump</span><span class="params">()</span></span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"Heart Jump"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    局部内部类</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Show</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">xxx</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>成员内部类有两个特点：<br>a.在成员内部类中可以无条件访问外部类的任何成员(包括私有)<br>b.外部类要访问内部类的成员，必须创建对象</p><p>在测试类中创建成员内部类对象写法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//创建外部类对象</span></span><br><span class="line">    Human H1 = <span class="keyword">new</span> Human();</span><br><span class="line">    <span class="comment">//Java 规定想要创建内部类的对象，必须先创建外部类的对象，然后通过外部类对象才能创建内部类对象</span></span><br><span class="line">    Human.Heart HH1 = <span class="keyword">new</span> Human().<span class="keyword">new</span> Heart();</span><br><span class="line">    <span class="comment">//也可以这么写</span></span><br><span class="line">    Human.Heart HH2 = H1.<span class="keyword">new</span> Heart();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Outer</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> num = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">            System.out.println(num)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Inner i = <span class="keyword">new</span> Inner();</span><br><span class="line">        i.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OuterDemo</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Outer o = <span class="keyword">new</span> Outer();</span><br><span class="line">        o.method();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>局部内部类：<br>局部内部类是在方法中定义的类，所有外交无法直接使用，需要在方法内部创建对象并使用<br>该类可以直接访问外部类的成员，也可以访问方法内的局部变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Outer</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> num = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> num2 = <span class="number">20</span>;</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">                System.out.println(num)</span><br><span class="line">                System.out.println(num2)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Inner i = <span class="keyword">new</span> Inner();</span><br><span class="line">        i.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OuterDemo</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Outer o = <span class="keyword">new</span> Outer();</span><br><span class="line">        o.method();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.3 内部类编译之后的字节码文件<br>内部类编译之后的字节码文件名：<br>外部类名$内部类名<br>范例：<br>Human$Heart.class</p><p>2.4 匿名内部类<br>•什么是匿名内部类<br>概念：局部内部类的简化形式，简化到不需要内部类的名字</p><p>•前提：存在一个类或接口，这里的类可以是具体类也可以是抽象类</p><p>•匿名内部类的作用<br>匿名内部类可以帮助我们快速的创建一个父类的子类对象或者一个接口的实现类对象</p><p>•本质：是一个继承了该类或者实现类该类接口的子类匿名对象</p><p>•格式：<br>new 类名或接口名(){<br>    重写方法；<br>};</p><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Inter()&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•匿名内部类的使用特点1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo06</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用匿名内部类</span></span><br><span class="line">        Animal dd = <span class="keyword">new</span> Animal()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Dog eat"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Cat eat"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        dd.eat();</span><br><span class="line">        dd.sleep();</span><br><span class="line"></span><br><span class="line">        Animal pp = <span class="keyword">new</span> Animal() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Pig eat"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"Pig sleep"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        pp.eat();</span><br><span class="line">        pp.sleep();      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>•匿名内部类的使用特点2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Flyable</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Bird</span> <span class="keyword">implements</span> <span class="title">Flyable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Bird Fly"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Bird bd = <span class="keyword">new</span> Bird();</span><br><span class="line">        bd.fly();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Anonymous</span></span><br><span class="line"><span class="comment">//        new Flyable()&#123;</span></span><br><span class="line"><span class="comment">//            @Override</span></span><br><span class="line"><span class="comment">//            public void fly() &#123;</span></span><br><span class="line"><span class="comment">//                System.out.println("bird fly");</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;;</span></span><br><span class="line">        Flyable fae = <span class="keyword">new</span> Flyable()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"bird fly"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        fae.fly();</span><br><span class="line">        <span class="comment">//调用方法</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        method(new Bird());</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        method(new Flyable() &#123;</span></span><br><span class="line"><span class="comment">            @Override</span></span><br><span class="line"><span class="comment">            public void fly() &#123;</span></span><br><span class="line"><span class="comment">                System.out.println("Fly Fly");</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;);*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">(Flyable ff)</span> </span>&#123;</span><br><span class="line">        ff.fly();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结匿名内部类的格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">父类名/接口名 对象名 = <span class="keyword">new</span> 父类名/接口名()&#123;</span><br><span class="line">    <span class="comment">//重写父类或接口中所有的抽象方法</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>三. 权限修饰符<br>Java中一共有4中常见的权限修饰符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> size;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> grade;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> height;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th align="center">public</th><th align="right">protected</th><th>（空的）</th><th align="right">private</th></tr></thead><tbody><tr><td>同一类中</td><td align="center">√</td><td align="right">√</td><td>√</td><td align="right">√</td></tr><tr><td>同一类中（子类与无关类）</td><td align="center">√</td><td align="right">√</td><td>√</td><td align="right">X</td></tr><tr><td>不同包的子类</td><td align="center">√</td><td align="right">√</td><td>X</td><td align="right">X</td></tr><tr><td>不同包中的无关类</td><td align="center">√</td><td align="right">X</td><td>X</td><td align="right">X</td></tr></tbody></table><p>一般来说：<br>    ···成员方法和构造方法是public修饰符的<br>    ···成员变量是private修饰的<br>在极个别的情况下，构造方法也可能是private(单例设计模式)</p><p>四.代码块 </p><p>什么叫做代码块：由一对大括号扩起来的一句或多句代码，就是一个代码块</p><p>4.1 构造代码块<br>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 类名</span>&#123;</span><br><span class="line">    <span class="comment">//代码</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造代码块什么时候执行<br><b>每次</b>调用构造方法创建对象<b>之前</b>执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bark</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Doge"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Dog</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Mtehod"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造代码块</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"This is Code Block"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo09</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//Create Dog Object</span></span><br><span class="line">        Dog dd = <span class="keyword">new</span> Dog();</span><br><span class="line"></span><br><span class="line">        dd.bark();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出</span></span><br><span class="line">This is Code Block</span><br><span class="line">Mtehod</span><br><span class="line">Doge</span><br></pre></td></tr></table></figure><p>4.2 静态代码块<br>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 类名</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="comment">//静态代码块</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>随着类到加载而执行，且只执行一次，优先于构造方法执行</p><p>Demo：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Pig</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Pig sleep"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Pig</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Pig Pig"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"This is Static Code Block"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo10</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Pig pgg = <span class="keyword">new</span> Pig();</span><br><span class="line">        pgg.sleep();</span><br><span class="line">        <span class="comment">//只要使用Pig类，就会加载到内存，即时立即执行静态代码块</span></span><br><span class="line"></span><br><span class="line">        Pig pgg2 = <span class="keyword">new</span> Pig();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">This is Static Code Block</span><br><span class="line">Pig Pig</span><br><span class="line">Pig sleep</span><br><span class="line">Pig Pig</span><br></pre></td></tr></table></figure><p>总结：<br>多态的前提：<br>a.必须有extend或impelement<br>b.必须有方法的重写</p><p>多态的格式：<br>父类类型 对象名 = new 子类类型();<br>接口类型 对象名 = new 实现类类型();</p><p>多态调用方法时的特点：编译看父，运行看子<br>好处：提高代码的扩展性<br>弊端：多态只能调用子父类共有的方法，无法调用子类特有的方法</p><p>向上转型：把子类类型 赋值给 父类类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Animal an = <span class="keyword">new</span> Dog();</span><br></pre></td></tr></table></figure><p>向下转型：必须有向上转型，才能向下转型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Dog dd = (Dog)an;</span><br></pre></td></tr></table></figure><p>关键字:instanceof</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(an <span class="keyword">instanceof</span> Dog)&#123;</span><br><span class="line">    Dog dd = (Dog)an;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内部类概念：在一个类的内部定义另一个类</p><p><font color="red">匿名内部类</font>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">父类/接口 = <span class="keyword">new</span> 父类/接口()&#123;</span><br><span class="line">    <span class="comment">//重写父类或接口中的所有抽象方法</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>修饰符的作用：<br>public<br>protected<br>空的<br>private</p><p>代码块：<br>构造代码块：<br>格式：<br>类中方法外一个大括号</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每次执行</p><p>静态代码块：<br>类中方法外一个static大括号</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>仅执行一次</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（二）</title>
      <link href="/2020/03/03/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2020/03/03/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•final关键字 (最终态)<br>•static (静态)<br>•接口</p><a id="more"></a><p>一. final关键字<br>1.1 final在Java中是一个定义修饰符：修饰类，修饰方法，修饰局部变量，修饰成员变量，修饰引用类型变量<br>1.2 final的作用和介绍<br>•final修饰类，不能被继承（只能做子类）。<br>•final修饰方法，不能被@override<br>•final修饰局部变量：被final修饰的局部变量，表示该变量只能赋值一次。（在循环框中，每次赋值都是新的局部变量）<br>•final修饰引用类型变量<br>    final修饰引用类型变量，表示该引用类型变量地址值中表示的地址值不能改变。<br>    注意：final修饰引用变量，只能表示引用变量的地址不能改变，并不代表地址所指向的成员值是可以改变的。<br>•final修饰成员变量，只能赋值一次，必须赋值。<br>但是赋值可以有两种选择。<br>a.定义该成员变量时赋值。<br>b.或者在构造方法中给该成员变量赋值。</p><p>总之，final修饰的成员变量，必须在创建对象之前有值。</p><p>final和abstract冲突。</p><p>二. static ：静态关键字<br>2.1 概述：也是一个修饰符，用于修饰类中的成员变量/方法，被static修饰的成员称为静态成员/类成员。</p><p>被static修饰的成员，不属于任何一个对象，属于整个类，被所有对象共享(这也是判断是否使用静态关键字的条件)</p><p>2.2 定义和格式<br>•类变量：就是使用static修饰的成员变量，称之为类变量/静态变量<br>特点：静态变量/类变量，在内存方法中的静态区，只有一份，所有对象共享它<br>•静态方法：就是使用static修饰的方法，也称为类方法。<br>特点：正常的方法必须通过对象才能调用，静态方法不需要通过对象，通过类名就可以直接调用</p><p>2.3 静态和非静态之间的相互调用<br>静态成员变量<br>静态成员方法<br>    与类是同级，只要类加载到内存，静态的成员变量/成员方法就存在（对象不一定存在）</p><p>非静态成员变量<br>非静态成员方法<br>    必须创建对象之后才能访问/调用</p><p>生命周期：<br>    静态出现的要比非静态要早</p><p>非静态成员方法：<br>•能访问静态的成员变量<br>•能访问非静态的成员变量<br>•能访问静态的成员方法<br>•能访问非静态的成员方法</p><p>静态成员方法：<br>•能访问静态的成员变量<br>•能访问静态的成员方法</p><p>结论：<br>a.静态与静态之间，非静态与非静态之间，能相互访问<br>b.静态可以访问静态，但是静态不能访问非静态<br>即：静态成员方法只能访问静态成员</p><p>2.4 建议调用格式<br>静态的成员变量<br>    对象名.静态成员变量  [可以访问，但是不建议]<br>    类名.静态成员变量   [建议访问的方式]</p><p>静态的成员方法<br>    对象名。静态成员方法    [可以访问，不建议]<br>    类名.静态成员方法    [建议的访问方式]<br>总结：静态成员虽然可以通过对象名去访问/嗲用，但是更建议通过类名去访问/调用</p><p>三. 接口<br>3.1 概述<br>    也是一种引用类型，接口是方法的集合（接口中主要写方法）<br>    接口是一种公共的规范标准，只要符合规范标准，就可以通用<br>    Java中的接口更多是体现着<strong>对行为的抽象</strong>。</p><p>3.2 定义格式<br>    定义类：class<br>    定义接口：interface<br>    定义枚举：enum<br>    定义注解：@interface</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">interfaceName</span></span>&#123;</span><br><span class="line">    <span class="keyword">abstract</span> method [JDK <span class="number">7</span>]</span><br><span class="line">    <span class="keyword">default</span> method &amp; <span class="keyword">static</span> method [JDK <span class="number">8</span>]</span><br><span class="line">    <span class="keyword">private</span> method &amp; <span class="keyword">private</span> <span class="keyword">static</span> method [JDK <span class="number">9</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口的特点：<br>•接口用关键字interface修饰<br>public interface接口名{}<br>•类实现接口用implements表示<br>public class 类名 implements 接口名{}<br>•接口不能实例化<br>参照多态的方式，通过实现类对象实例化，叫做接口多态。<br>多态的形式：具体类多态，抽象类多态，接口多态<br>多态的前提：有继承或实现关系；有方法重写；有父(类/接口)引用指向(子/实现)类对象<br>•接口的实现类<br>要么重写接口中所有的抽象方法<br>要么是抽象类</p><p>3.3 接口的使用<br>a.和abstract method类似，接口也是不能创建对象（new object）的<br>b.接口也是作为Super interface使用的，用于被其他类 实现 的<br>c.继承使用extends关键字，实现使用”implements”关键字</p><p>使用方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 实现类 <span class="keyword">implements</span> <span class="title">interfaceName</span></span>&#123;</span><br><span class="line"><span class="comment">//实现类必须重写接口中的所有抽象方法</span></span><br><span class="line"><span class="comment">//实现类可以选择性重写默认方法但是@override后不能加default</span></span><br><span class="line"><span class="comment">//静态方法通过类名/接口名直接调用的，没有@override说法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.4 接口的多实现<br>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 实现类 <span class="keyword">implements</span> <span class="title">interface1</span>,<span class="title">interface2</span>...</span>&#123;</span><br><span class="line">    <span class="comment">//实现类需要重写所有接口中的所有抽象方法</span></span><br><span class="line">    <span class="comment">//如果有抽象方法是一样的，那么实现类只需要重写一次</span></span><br><span class="line">    <span class="comment">//如果接口中有一样的默认方法，那么实现类必须重写一次！</span></span><br><span class="line">    <span class="comment">//静态方法没有重写的概念，就算多个接口中有一样的静态方法也不冲突，通过各自所在的接口名调用，没有歧义</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.5 实现和继承的优先级问题<br>一个类 可以在继承一个父类的同时实现多个接口（继承和实现可以同时存在）<br>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 子类/实现类 <span class="title">exttends</span> 父类 <span class="keyword">implements</span> 接口，接口1</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继承的优先级 高于 实现，所以必须先extends 后 implements</p><p>3.6 接口的多继承<br>类和类直接：继承关系，只能单继承，但是可以多层继承<br>类和接口：实现关系，可以单实现，也可以多实现，还可以在继承一个类的同时实现多个接口<br>接口和接口：继承关系，可以单继承，也可以多继承<br>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyInter</span> <span class="keyword">extends</span> <span class="title">Inter1</span>,<span class="title">Inter2</span></span>&#123;</span><br><span class="line">    MyInter 接口包含了Inter1和Inter2接口所有东西</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> <span class="title">impelements</span> <span class="title">MyInter</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">和</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> <span class="title">impelements</span> <span class="title">Inter1</span>,<span class="title">Inter</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>等价</code></pre><p>3.7 接口中其他成员特点<br>•接口中，无法定义成员变量，但是可以定义常量（字面值常量，由public static final修饰的常量），其值不可改变，默认使用public static final修饰<br>    【public static final】数据类型 常量名 = 值；【常量名一般纯大写，多个单词用”_”分隔】</p><p>•接口中，没有构造方法，也不能创建对象，因为接口主要是对行为进行抽象的，是没有具体存在<br>一个类如果没有父类，默认继承自Object类</p><p>•接口中，没有静态代码块<br>•【public static final】可省略直接 数据类型 常量名 = 值。但是默认是存在的</p><p>•成员方法<br>只能是抽象方法<br>默认修饰符public abstract</p><p>抽象类和接口的区别：<br>•成员区别</p><table><thead><tr><th></th><th align="center"></th></tr></thead><tbody><tr><td>抽象类</td><td align="center">变量，常量；有构造方法；有抽象方法，也有非抽象方法</td></tr><tr><td>接口</td><td align="center">常量；抽象方法</td></tr></tbody></table><p>•关系区别</p><table><thead><tr><th></th><th align="left"></th></tr></thead><tbody><tr><td>类与类</td><td align="left">继承，单继承</td></tr><tr><td>类与接口</td><td align="left">实现，可以单实现，也可以多实现</td></tr><tr><td>接口与接口</td><td align="left">继承，但继承，多继承</td></tr></tbody></table><p>•设计理念区别</p><table><thead><tr><th></th><th align="center"></th></tr></thead><tbody><tr><td>抽象类</td><td align="center">对类抽象，包括属性，行为</td></tr><tr><td>接口</td><td align="center">对行为抽象，主要是行为</td></tr></tbody></table><p>3.8 接口名作为形参和返回值<br>•方法的形参是接口名，其实需要的是该接哦哭的实现类对象<br>•方法的返回值是接口名，其实返回的是该接口的实现类对象</p><p>总结：<br>描述final<br>修饰类：该类不能被继承<br>修饰方法：该方法不能被重写<br>修饰变量：该变量只能赋值一次<br>——局部变量：可以在定义时赋值，也可以先定义后赋值<br>——成员变量：可以在定义时赋值，也可以在构造方法中赋值<br>——引用类型变量：表示该引用类型变量的地址不能改变，但是地址内成员的值是可以改变的</p><p>static关键字修饰的变量调用方式<br>类名.成员变量名 【建议的使用方式】</p><p>static关键字修饰的方法调用方式<br>类名.成员() 【建议的使用方式】</p><p>接口定义格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">interfaceName</span></span>&#123;</span><br><span class="line">    <span class="comment">//抽象方法[最多使用]</span></span><br><span class="line">    <span class="comment">//默认方法</span></span><br><span class="line">    <span class="comment">//静态方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口实现方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 实现类 <span class="title">impelements</span> <span class="title">interfaceName01</span>,02</span>&#123;</span><br><span class="line">    <span class="comment">//a.重写所有抽象方法，如果有相同，仅需重写一次</span></span><br><span class="line">    <span class="comment">//b.选择性重写默认方法，如果相同必须重写一次</span></span><br><span class="line">    <span class="comment">//c.静态方法没有重写的概念</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口中其他成员特点：<br>a.没有成员变量，只有常量 【public static final】数据类型 常量名 = 值；<br>b.没有构造方法，也不能创建对象<br>c.没有静态代码块</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>就业班学习笔记（一）</title>
      <link href="/2020/03/02/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/03/02/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>•面向对象复习<br>•继承<br>•抽象类<br>•模板设计模式</p><a id="more"></a><p>一.<br>匿名对象：没有名字的对象<br>指new对象，但是不用对象名来接收，但不是没有name属性。<br>使用场景：<br>当一个对象我们只需要使用一次时，就可以选择使用匿名对象。</p><p>二.继承</p><p>2.1<br>概念：在一个已知类A的基础上，创建新类B的过程，称之为继承<br>继承是面向对象三大特征之一。可以使得子类具有父类对属性和方法，还可以在子类中重新定义，追加属性和方法</p><p>这里类A称为SuperClass（父/基/超）类<br>这里类B称为SubClass（子/派生）类</p><p>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SuperClass</span></span>&#123;</span><br><span class="line">    <span class="comment">//member varriable</span></span><br><span class="line">    <span class="comment">//member method</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubClass</span> <span class="keyword">extends</span> <span class="title">SuperClass</span></span>&#123;</span><br><span class="line">    <span class="comment">//Automatically inherit the SupeClass's varriavle &amp; method</span></span><br><span class="line">    <span class="comment">//Also can add self varriable &amp; method</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优势：<br>a.提高代码复用性(多个类相同对成员可以放到同一个类中)<br>b.类和类有了关系，提高了代码的维护性，为多态提供前提（如果方法的代码需要修改，修改溢出即可）</p><p>弊端：<br>a.继承让类与类之间产生了关系，类的耦合性增强了，当父类发生变化时，子类也不得不跟着变化，削弱了子类的独立性</p><p>2.2 子类不能继承的内容<br>a.父类SuperClass的构造方法子类无法继承！！（因为构造方法和类名是一样的）<br>b.父类SuperClass的私有成员private menmber，子类可以继承，但是不能直接使用。可以使用get和set方法间接使用。</p><p>继承后的特点——成员变量<br>a.当子父类的成员变量名不同时，访问成员变量是没有歧义的，写哪个变量就是哪个变量。<br>b.当子父类变量同名时，在子类中会根据就近原则，优先访问子类自己的那个成员变量。<br>c.在子类方法中，使用super.methodName，就会访问SuperClass的成员变量。<br>就近原则，层层递进：<br>•子类局部范围找<br>•子类成员范围找<br>•父类成员范围找<br>•如果都没有则报错</p><p>super关键字都用法和this关键字用法相似<br>•this:代表本类成员对象的引用(this关键字指向调用该方法对象，一般是在当前类使用this关键字，使用this常代表本类对象引用)<br>•super:代表父类存储空间的标识(可以理解为父类对象引用)</p><p>继承后的特点——成员方法【重点】<br>a.当子父类的成员方法名不同时，访问成员方法名是没有歧义的，写哪个方法名就是哪个方法名。<br>b.当子父类的成员方法同名时，使用子类对象调用该方法，会根据就近原则，优先访问子类自己的那个成员方法。<br>c.无法通过子类对象使用super调用父类方法。但是可以在子类方法中使用super.methodName()调用父类的同名方法</p><p>2.3 重写的概念和应用</p><p>重写的概念：<br>方法的重载（overload）：<br>    在同一个类中，出现了方法名应用，但是参数列表（参数个数｜类型｜顺序）不一样的各种方法，称为方法的重载<br>方法的重写（override）：<br>    在继承关系sub-super中，子类中出现了一个和父类除了方法体，其他一模一样的方法，称为方法的重写</p><p>重写的应用：<br>子类继承父类时，会继承父类的方法，那么当子类发现继承过来的方法功能不足或不适用时，子类就可以重写该方法，重新实现自己需要的方法即可。</p><p>2.4 @override注解<br>@xxx这种称之为注解，英文名annotation<br>@override 此注解方法称之为方法重写注解，主要作用就是检查重写的方法是否格式正确（符合父类的除了方法体一模一样）</p><p>2.5 方法重写的注意事项<br>a.方法重写是发生在子父类sub-super之间的关系<br>b.子类方法重写父类方法时，必须要保证权限大于等于父类的权限（一般来说，父类方法权限=子类方法权限）<br>Java中四大权限（从大到小依次为：public-protected-default-private）<br>c.方法重写时，除了方法体，其他都要和父类一模一样。（虽然权限可以不一样，但是一般也写一样的权限）<br>d.私有方法不能被重写(父类私有成员子类是不能继承的)</p><p>2.6 继承后的特点——构造方法<br>子类中所有的构造方法默认都会访问父类中无参的构造方法，子类初始化之前，一定要先完成父类数据的初始化<br>构造方法特点介绍：<br>a.子类无法继承父类的构造方法<br>b.在子类的任何构造方法的第一行，都有默认一句代码super(),代表调用父类的无参构造。</p><p>构造方法总结：<br>a.子类的任何构造，第一行都会调用父类的无参构造。<br>如果父类没有无参构造：<br>•通过super关键字前显示的调用父类的带参构造方法<br>•在父类中提供一个无参构造方法<br>b.子类的构造方法第一行，super是默认存在的，可以省略不写，但是默认有的</p><p>小结：<br>a.子类的构造方法中默认有一句super()调用父类的无参构造，我们可以手动改写super(…)调用父类的有参构造，具体哪个构造，由参数决定<br>b.super(…)和this(…)必须在第一行，所有不能重复重写<br>c.super(…)和this(…)调用父的构造和子类自己的其他构造，具体哪个构造由参数决定<br>d.super(…)调用父类的有参构造，初始化父类继承的成员变量。<br>e.this(…)调用子类的其他构造方法</p><table><thead><tr><th>关键字</th><th>访问成员变量</th><th>访问构造方法</th><th>访问成员方法</th></tr></thead><tbody><tr><td>this</td><td>this.成员变量，访问本类成员变量</td><td>this(…)访问本类构造方法</td><td>this.成员方法(…) 访问本类成员方法</td></tr><tr><td>super</td><td>super.成员变量，访问父类成员变量</td><td>super(…)访问父类构造方法</td><td>super.成员方法(…) 访问父类成员方法</td></tr></tbody></table><p>2.7 Java中继承的特点<br>a.Java只支持单继承，不支持多继承。（一个类最多只有一个super）<br>b.一个类可以有多个子类（一个super可以有多个sub）<br>c.可以多层继承（sub有自己的super，相对还有super的super）<br>总结：Java只支持单继承，但是可以多层继承。</p><p>三. 抽象类<br>3.1 抽象类的概念和引入</p><p>抽象类的概念：<br>a.抽象方法：只有方法的声明，没有方法的实现(即没有方法体)<br>b.含有抽象方法的类，就是一个抽象类</p><p>使用格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">•抽象方法</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> 返回值类 方法名（参数列表）；</span><br><span class="line">•抽象类</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> 类名</span>&#123;</span><br><span class="line">    抽象方法</span><br><span class="line">    正常方法</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：抽象类不能创建对象，总是作为父类。<br>抽象类不能创建对象，需要有子类继承它，并且重写所有抽象类后，该子类才能创建对象。</p><p>3.2抽象类的特征：<br>抽象类具备了含有抽象方法的能力，同时失去了创建对象的能力。<br>注意事项：<br>a.抽象类不能创建对象<br>b.抽象类有构造方法，用于初始化类中的成员变量<br>c.抽象类中不一定含有抽象方法，有抽象方法的类一定是抽象类（一般来说，抽象类中是有抽象方法的）<br>d.抽象类的子类必须重写抽象类的所有抽象方法，否则子类还是一个抽象类<br>e.抽象类存在的意义就是被子类继承的，为子类提供模版</p><p>3.3 抽象类的成员特点<br>•成员变量：可以是变量，也可以是常量<br>•构造方法：有构造方法，本身不能实例化，用于子类访问父类数据的初始化<br>•成员方法：<br>a.可以有抽象方法：限定子类必须完成某些动作<br>b.也可以有非抽象方法：提高代码复用性</p><p>3.4 抽象类名作为形参和返回值<br>•方法的形参是抽象类名，其实需要的是该抽象类的子类对象<br>•方法的返回值是抽象类名，其实返回的是该抽象类的子类对象</p><p>3.5 模版设计模式</p><p>总结：<br>继承：<br>a.继承的格式<br>    public class 子类 extends 父亲{}<br>b.不能继承的内容<br>    I.构造方法不能继承<br>    II.私有成员子类可以继承但是不能直接使用（间接使用，通过get/set方法使用）<br>c.继承后成员变量和成员方法的特点：<br>    I.不同名，没有歧义<br>    II.同名时在子类中优先调用子类自己的成员<br>    III.可以使用关键字<br>            super.变量名 访问父类的同名成员变量<br>            super.方法名() 访问父类的同名成员方法<br>d.方法的重写<br>    方法的重写：在继承关系中，子类有一个和父类除了方法体其他一模一样的方法，该方法称为重写<br>    什么时候需要重写：<br>        当子类继承父类的方法后，发现父类方法不实用，子类就可以重写该方法<br>        重写时可以用override帮助检查格式是否正确<br>e.super(…)<br>    用于子类的构造方法第一行，调用父类的构造方法，具体是哪一个构造<br>        由super(参数)中的参数决定<br>f.this(…)<br>    用于本类的构造方法第一行，调用本类的构造方法，具体是哪一个构造<br>        由this(参数)中的参数决定<br>g.Java的继承特点：<br>    只支持单继承，但是支持多层继承<br>抽象类：<br>    a.抽象方法格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>抽象类格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">className</span></span>&#123;可能有抽象方法，可以没有抽象方法&#125;</span><br></pre></td></tr></table></figure><p>b.抽象类的使用方式：<br>        使用子类继承抽象类，重写所有抽象方法后，子类才能创建对象。<br>c.抽象类的意义：<br>        给子类继承的，为子类提供的模版（模版设计模式）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基础班学习笔记（十）</title>
      <link href="/2020/02/27/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%EF%BC%89/"/>
      <url>/2020/02/27/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>综合练习：学生管理系统<br>①定义学生类<br>②主界面的代码编写<br>•用输出语句完成主界面编写<br>•用Scanner实现键盘录入数据<br>•用switch语句完成操作选择<br>•用循环完成再次回到主界面</p><p>③添加学生的代码编写<br>•用键盘录入选择添加学生<br>•定义一个方法，用于添加学生<br>a.显示提示信息，提示要输入何种信息<br>b.键盘录入学生对象所需要的数据<br>c.创建学生对象，把键盘录入的数据赋值给学生对象的成员变量<br>d.将学生对象添加到集合中(保存)<br>e.给出添加成功的提示<br>•调用方法<br>④查看学生的代码编写<br>•用键盘录入选择查看所有学生信息<br>•定义一个方法，用于查看学生信息<br>a.显示表头信息<br>b.将集合中数据取出按照对应格式显示学生信息，年龄补充”岁”<br>•调用方法</p><p>⑤删除学生的代码编写<br>•用键盘录入选择删除学生信息<br>•定义一个方法，用于删除学生信息<br>a.显示提示信息<br>b.键盘录入要删除学生学号<br>c.遍历集合将对应学生对象从集合中删除<br>d.给出删除成功提示<br>•调用方法</p><p>⑥修改学生的代码编写<br>•用键盘录入选择修改学生信息<br>•定义一个方法，用于修改学生信息<br>a.显示提示信息<br>b.键盘录入要修改学生学号<br>c.键盘录入要修改学生信息<br>d.遍历集合修改对应的学生信息<br>e.给出修改成功提示<br>•调用方法</p><p>⑦解决删除/修改学生学号不存在问题<br>•在 删除/修改 学生操作前，对学号是否存在进行判断<br>a.如果不存在，显示提示信息<br>b.如果存在，执行删除/修改操作</p><p>⑧解决添加学生学号重复问题<br>•定义一个方法，用于对学号是否被使用进行判断<br>a.如果与集合中某一个学生学号相同，返回true<br>b.如果都不同，返回false</p><p>•在添加学生录入学号后调用该方法<br>a.如果返回true，弹出提示，重写输入学号<br>b.如果返回false，正常添加学生对象</p><p>学生类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String sid;</span><br><span class="line">    <span class="keyword">private</span> String Name;</span><br><span class="line">    <span class="keyword">private</span> String  age;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Student&#123;"</span> +</span><br><span class="line">                <span class="string">"sid='"</span> + sid + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", Name='"</span> + Name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age='"</span> + age + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", address='"</span> + address + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String sid, String name,  String age, String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sid = sid;</span><br><span class="line">        Name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSid</span><span class="params">(String sid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sid = sid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        Name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(String age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentManager</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Student&gt; array = <span class="keyword">new</span> ArrayList&lt;Student&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"=========Welcome To Student Manager System========="</span>);</span><br><span class="line">            System.out.println(<span class="string">"1 添加学生"</span>);</span><br><span class="line">            System.out.println(<span class="string">"2 删除学生"</span>);</span><br><span class="line">            System.out.println(<span class="string">"3 修改学生"</span>);</span><br><span class="line">            System.out.println(<span class="string">"4 查看所有学生"</span>);</span><br><span class="line">            System.out.println(<span class="string">"5 退出"</span>);</span><br><span class="line">            System.out.println(<span class="string">"请输入你的选择: "</span>);</span><br><span class="line"></span><br><span class="line">            Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            String line = sc.nextLine();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (line) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"1"</span>:</span><br><span class="line"><span class="comment">//                    System.out.println("添加学生");</span></span><br><span class="line">                    addStudent(array);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"2"</span>:</span><br><span class="line"><span class="comment">//                    System.out.println("删除学生");</span></span><br><span class="line">                    deleteStudent(array);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"3"</span>:</span><br><span class="line"><span class="comment">//                    System.out.println("修改学生");</span></span><br><span class="line">                    updateStudent(array);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"4"</span>:</span><br><span class="line"><span class="comment">//                    System.out.println("查看所有学生");</span></span><br><span class="line">                    findAllStudent(array);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"5"</span>:</span><br><span class="line">                    System.out.println(<span class="string">"退出"</span>);</span><br><span class="line">                    System.exit(<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public static void addStudent(ArrayList&lt;Student&gt; array) &#123;</span></span><br><span class="line"><span class="comment">//        Scanner sc = new Scanner(System.in);</span></span><br><span class="line"><span class="comment">//        System.out.println("Input Student SID");</span></span><br><span class="line"><span class="comment">//        String sid = sc.nextLine();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        System.out.println("Input Student Name");</span></span><br><span class="line"><span class="comment">//        String name = sc.nextLine();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        System.out.println("Input Student Age");</span></span><br><span class="line"><span class="comment">//        String age = sc.nextLine();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        System.out.println("Input Student Address");</span></span><br><span class="line"><span class="comment">//        String address = sc.nextLine();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        Student s = new Student();</span></span><br><span class="line"><span class="comment">//        s.setSid(sid);</span></span><br><span class="line"><span class="comment">//        s.setName(name);</span></span><br><span class="line"><span class="comment">//        s.setAge(age);</span></span><br><span class="line"><span class="comment">//        s.setAddress(address);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        array.add(s);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        System.out.println("Add Student Successful");</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//为了让SID在while循环外面被访问到，就将它定义在了循环外</span></span><br><span class="line">        String sid;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//为了让程序能回来，使用循环实现</span></span><br><span class="line">            System.out.println(<span class="string">"Input Student SID"</span>);</span><br><span class="line">            sid = sc.nextLine();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">boolean</span> used = isUsed(array, sid);</span><br><span class="line">            <span class="keyword">if</span> (used) &#123;</span><br><span class="line">                System.out.println(<span class="string">"Already Had This Student SID"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Input Student Name"</span>);</span><br><span class="line">        String name = sc.nextLine();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Input Student Age"</span>);</span><br><span class="line">        String age = sc.nextLine();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Input Student Address"</span>);</span><br><span class="line">        String address = sc.nextLine();</span><br><span class="line"></span><br><span class="line">        Student s = <span class="keyword">new</span> Student();</span><br><span class="line">        s.setSid(sid);</span><br><span class="line">        s.setName(name);</span><br><span class="line">        s.setAge(age);</span><br><span class="line">        s.setAddress(address);</span><br><span class="line"></span><br><span class="line">        array.add(s);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Add Student Successful"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">findAllStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (array.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"No Student Now.Please Add First!"</span>);</span><br><span class="line">            <span class="comment">//为了让程序不再往下执行,给出return;</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"SID\tName\tAge\tAddress"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.size(); i++) &#123;</span><br><span class="line">            Student s = array.get(i);</span><br><span class="line">            System.out.println(s.getSid() + <span class="string">"\t"</span> + s.getName() + <span class="string">"\t"</span> + s.getAge() + <span class="string">"\t"</span> + s.getAddress());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Input SID"</span>);</span><br><span class="line">        String sid = sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> index = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.size(); i++) &#123;</span><br><span class="line">            Student student = array.get(i);</span><br><span class="line">            <span class="keyword">if</span> (student.getSid().equals(sid)) &#123;</span><br><span class="line"><span class="comment">//                array.remove(i);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line">                index = i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (index == -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"No This Student Here"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            array.remove(index);</span><br><span class="line">            System.out.println(<span class="string">"Remove Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">updateStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Input Modify SID"</span>);</span><br><span class="line">        String sid = sc.nextLine();</span><br><span class="line">        System.out.println(<span class="string">"Input Student new Name"</span>);</span><br><span class="line">        String name = sc.nextLine();</span><br><span class="line">        System.out.println(<span class="string">"Input Student new Age"</span>);</span><br><span class="line">        String age = sc.nextLine();</span><br><span class="line">        System.out.println(<span class="string">"Input Student new Address"</span>);</span><br><span class="line">        String address = sc.nextLine();</span><br><span class="line"></span><br><span class="line">        Student student = <span class="keyword">new</span> Student();</span><br><span class="line">        student.setSid(sid);</span><br><span class="line">        student.setName(name);</span><br><span class="line">        student.setAge(age);</span><br><span class="line">        student.setAddress(address);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> index = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.size(); i++) &#123;</span><br><span class="line">            Student student1 = array.get(i);</span><br><span class="line">            <span class="keyword">if</span> (student1.getSid().equals(sid)) &#123;</span><br><span class="line">                index = i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (index == -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"No This Student"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            array.set(index, student);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"Modify Successful"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isUsed</span><span class="params">(ArrayList&lt;Student&gt; array, String sid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.size(); i++) &#123;</span><br><span class="line">            Student student = array.get(i);</span><br><span class="line">            <span class="keyword">if</span> (student.getSid().equals(sid)) &#123;</span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基础班学习笔记（九）</title>
      <link href="/2020/02/26/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B9%9D%EF%BC%89/"/>
      <url>/2020/02/26/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B9%9D%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>一.集合基础<br>1.1 集合概述<br>编程时如果要存储多个数据，使用长度固定的数组存储格式，不一定满足需求，耿适应不了变化的需求，此时应选择集合。</p><p>集合类的特点：提供一种存储空间可变的 存储模型，存储的数据容量可以发生改变<br>集合类非常多，首先学习:ArrayList</p><p>ArrayList<E>:</p><ul><li>可调整大小的数组实现</li><li><E>:是一种特定的数据类型，泛型</li></ul><p>使用：<br>在所有出现<E>的地方可以使用引用数据类型替换<br>例：ArrayList<String>,ArrayList<Student></p><p>1.2 ArrayList构造方法和添加方法</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public ArrayList()</td><td>创建一个空的集合对象</td></tr><tr><td>public boolean add(E e)</td><td>将指定的元素追加到此集合的末尾</td></tr><tr><td>public void add(int index,E element)</td><td>在此集合中的指定位置插入指定的元素</td></tr></tbody></table><p>1.3 ArrayList集合常用方法</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public boolean remove(Object o)</td><td>删除指定的元素，返回删除是否成功</td></tr><tr><td>public E remove(int index)</td><td>删除指定索引处的元素，返回被删的元素</td></tr><tr><td>public E set(int index,E element)</td><td>修改指定索引处的元素，返回被修改的元素</td></tr><tr><td>public E get(int index)</td><td>返回指定索引处的元素</td></tr><tr><td>public int size()</td><td>返回集合中的元素的个数</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayListDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;String&gt; array = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        Collections.addAll(array,<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(array);</span><br><span class="line"></span><br><span class="line">        System.out.println(array.remove(<span class="string">"b"</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(array.remove(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(array.set(<span class="number">0</span>,<span class="string">"ccc"</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(array.get(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(array.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基础班学习笔记（三）</title>
      <link href="/2020/02/26/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2020/02/26/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>一.数据输入<br>1.1 Scanner使用基本步骤<br>①导包<br>    import java.util.Scanner;<br>    导包的动作必须出现在定义上面。<br>②创建对象<br>    Scanner sc = new Scanner(System.in);<br>    上面这个格式里，只有变量名sc可以变，其他都不允许变。<br>③接收数据<br>    int i = sc.nextInt();<br>    上面这个格式里，只有变量名i可以变，其他都不允许变。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基础班学习笔记（八）</title>
      <link href="/2020/02/26/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AB%EF%BC%89/"/>
      <url>/2020/02/26/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AB%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>一.API<br>1.1 API (Application Programming Interface) 概述：应用程序编程接口</p><p>Java API：指的就是JDK中提供的各种功能的Java类<br>这些类将底层的实现封装了起来，可以通过帮助文档来学习这些API如何使用</p><p>1.2 如何使用帮助文档：<br>①打开使用版本的JDK文档<br>②索引框输入要查询的类<br>③查看类在哪个包下<br>④看类的描述<br>⑤看构造方法<br>⑥看成员方法</p><p>注意：调用方法时，如果方法有明确的返回值，可以用变量接收</p><p>二. String<br>2.1 String 概述：<br>String类在java.lang 包下，使用时不需要导入包。</p><p>String类代表字符串，Java程序中所有的字符串文字(例如”abc”)都被实现为此类的实例<br>也就是说，Java程序中所有的双引号字符串，都是String类的对象</p><p>字符串的特点:</p><ul><li>字符串不可变，它们的值在创建后不能被更改</li><li>虽然String值不可变，但是它们可以被共享</li><li>字符串效果上相当于字符数组(char[] ,JDK8及之前是字符数组，JDK9之后是字节数组),但是底层原理是字节数组(byte[] )</li></ul><p>2.2 String的常用构造方法：</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public String()</td><td>创建一个空白字符串对象，不含任何内容</td></tr><tr><td>public String(char[] chs)</td><td>根据字符组的内容，来创建字符串对象</td></tr><tr><td>public String(byte[] bys)</td><td>根据字节组的内容，来创建字符串对象</td></tr><tr><td>String s = “abc”</td><td>直接赋值的方式创建字符串对象，内容就是abc</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AIO_ServerSocketChannel</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String s1 = <span class="keyword">new</span> String();</span><br><span class="line">        System.out.println(s1);<span class="comment">//无内容，因为未赋值</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span>[] chs = &#123;<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>&#125;;</span><br><span class="line">        String s2 = <span class="keyword">new</span> String(chs);</span><br><span class="line">        System.out.println(s2);<span class="comment">//abc</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bys = &#123;<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>&#125;;</span><br><span class="line">        String s3 = <span class="keyword">new</span> String(bys);</span><br><span class="line">        System.out.println(s3);<span class="comment">//abc,因为使用的是ASCII码</span></span><br><span class="line"></span><br><span class="line">        String s4 = <span class="string">"abc"</span></span><br><span class="line">        System.out.println(s4);<span class="comment">//abc</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>推荐直接使用赋值方式得到字符串对象</p><p>2.3 String对象的特点<br>1)通过new创建的字符串对象，每一次new都会申请一个内存空间，虽然内容相同，但是地址值不同</p><p>char[] chs ={‘a’,’b’,’c’};<br>String s1 = new String(chs);<br>String s2 = new String(chs);<br>在上述代码中，JVM会熟悉创建一个字符数组，然后每次new的时候都会有一个新的地址，只不过s1和s2参考的字符串内容都是相同的</p><p>2)以 “” 方式给出的字符串，只要字符序列相同(顺序和大小写)，无论在程序代码中出现几次，JVM都只会建立一个String对象，并在字符串池中维护</p><p>String s3 = “abc”;<br>String s4 = “abc”;<br>在上述代码中，针对第一行代码，JVM会建立一个String对象放在字符串池中，并给s3参考；<br>第二行让s4直接参考字符串池中的String对象，也就是说它们本质上还是同一个对象</p><p>内存过程：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>[] chs =&#123;<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>&#125;;</span><br><span class="line">    String s1 = <span class="keyword">new</span> String(chs);</span><br><span class="line">    String s2 = <span class="keyword">new</span> String(chs);</span><br><span class="line">    System.out.println(s1 == s2);<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">    String s3 = <span class="string">"abc"</span>;</span><br><span class="line">    String s4 = <span class="string">"abc"</span>;</span><br><span class="line">    System.out.println(s3 == s4);<span class="comment">//true</span></span><br><span class="line">    System.out.println(s1 == s3);<span class="comment">//false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>栈内存：<br>方法main<br>char[] chs 假设地址001<br>String s1  假设地址002<br>String s2  假设地址003<br>String s3  假设地址004<br>String s4  假设地址004</p><p>堆内存：<br>new char[3]<br>001<br>0 ‘a’<br>1 ‘b’<br>2 ‘c’</p><p>new String()<br>002<br>ref 001</p><p>new String()<br>003<br>ref 001</p><p>常量池<br>004 abc 赋值给s3与s4</p><p>2.4 字符串的比较<br>使用 == 做比较</p><ul><li>基本类型：比较的是<strong>数据值</strong>是否相同</li><li>引用类型：比较的是<strong>地址值</strong>是否相同</li></ul><p>字符串是对象，它比较内容是否相同，是通过一个方法来实现的，这个方法叫:equals()</p><ul><li>public boolean equals(Object anObject);将此字符串与指定对象进行比较。由于比较的是字符串对象，所以参数直接传递一个字符串</li></ul><p>遍历字符串，首先要能够获取到字符串中的每一个字符</p><ul><li>public char charAt(int index);返回指定索引处的char值，字符串的索引也是从0开始的<br>遍历字符串，获取字符串的长度</li><li>public int length();返回此字符串的长度</li><li>数组的长度：数组名.length</li><li>字符串的长度：字符串对象.length()<br>遍历字符串通用格式：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++ )&#123;</span><br><span class="line">    s.charAt(i);<span class="comment">//就是指定索引处的字符值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>•大写字母：ch&gt;=’A’ &amp;&amp; ch &lt;= ‘Z’<br>•小写字母：ch&gt;=’a’ &amp;&amp; ch &lt;= ‘z’<br>•数字：ch&gt;=’0’ &amp;&amp; ch &lt;= ‘9’</p><p>2.5 通过帮助文档查看String中的方法</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public boolean equals(Object anObject)</td><td>比较字符串的内容，严格区分大小写(用户名&amp;密码)</td></tr><tr><td>public char charAt(int Index)</td><td>返回索引处的char值</td></tr><tr><td>public int length()</td><td>返回此字符串的长度</td></tr></tbody></table><p>三. StringBuilder<br>3.1 概述<br>StringBuilder是一个可变的字符串类，可以把它当作一个容器。<br>这里的可变指的是StringBuilder对象中的内容是可变的</p><p>String和StringBuilder的区别：</p><ul><li>String：内容是不可变的</li><li>StringBuilder：内容是可变的</li></ul><p>如果对字符串String进行拼接操作，每次拼接都会构建一个新的String对象，耗费时间与内存空间。<br>因此使用StringBuilder可类可以解决这个问题。</p><p>3.2 StringBuilder的构造方法</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public StringBuilder()</td><td>创建一个空白可变字符串对象，不含任何内容</td></tr><tr><td>public StringBuilder(String str)</td><td>根据字符串内容，创建可变字符串对象</td></tr><tr><td>public StringBuilder(int Capacity)</td><td>构造一个没有字符的字符串构建器，以及由capcacity参数指定的初始容量</td></tr><tr><td>public StringBuilder(CharSequence seq)</td><td>构造一个字符串构建器，其中包含与指定的CharSequence相同的字符</td></tr></tbody></table><p>3.3 StringBuilder的添加和反转方法</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public StringBuilder append(任意类型)</td><td>添加数据，并返回数据本身</td></tr><tr><td>public StringBuilder reserve()</td><td>返回相反的字符序列</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SBDemo01</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">        sb.append(<span class="string">"a"</span>).append(<span class="string">"b"</span>);<span class="comment">//链式编程</span></span><br><span class="line">        System.out.println(sb);<span class="comment">//ab</span></span><br><span class="line"></span><br><span class="line">        sb.reserve();</span><br><span class="line">        System.out.println(sb);<span class="comment">//ba</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.4 StringBuilder 和 String 相互转换<br>a.从StringBuilder转换为String<br>public String toString();通过toString()就可以实现把StringBuilder转换为String</p><p>b.从String转换为StringBuilder<br>public StringBuilder(String s);通过构造方法就可以把String转换为StringBuilder</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SBDemo01</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">        sb.append(<span class="string">"abc"</span>);</span><br><span class="line">        String s = sb.toString(s);</span><br><span class="line"></span><br><span class="line">        String t = <span class="string">"hello"</span>;</span><br><span class="line">        StringBuilder new_sb = <span class="keyword">new</span> StringBuilder(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.5 通过帮助文档查看 StringBuilder 中的方法</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public StringBuilder append(任意类型)</td><td>添加数据，并返回数据本身</td></tr><tr><td>public StringBuilder reserve()</td><td>返回相反的字符序列</td></tr><tr><td>public String toString()</td><td>通过toString()就可以实现把StringBuilder转换为String</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基础班学习笔记（七）</title>
      <link href="/2020/02/26/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/"/>
      <url>/2020/02/26/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>一. Debug概述<br>Debug是程序员使用的程序调试工具，他可以用于查看程序的执行流程，也可以用来追踪程序执行过程来调试程序。<br>Debug操作流程：<br>Debug调试，又被称为断点调试，断点其实是一个标记，告诉我们从哪里开始查看。<br>执行流程：<br>①如何加断点<br>选择设置断点的代码行，在行号左边的区域单击鼠标左键即可<br>②如果运行加了断点的程序<br>在代码区域右键Debug执行<br>③看哪里<br>看debug和console窗口<br>④点哪里<br>点step info(F7)这个箭头，也可以直接按F7，执行完点stop结束<br>⑤如何删除断点<br>选择要删除的断点，单击鼠标左键即可</p><p>Debug的使用：<br>•查看循环求偶数和的执行流程。<br>•查看方法调用的执行流程</p><p>注意:如果数据来自于键盘，一定要记住输入数据，不然造成阻塞</p><p>二.类和对象<br>2.1 什么是对象：万物皆对象<br>2.2 什么是面向对象：关注具体的事物信息<br>2.3 什么是类：类是对现实生活中一类具有共同属性和行为的事物的抽象</p><p>类的特点：<br>•类是对象的数据类型<br>•类是具有相同属性和行为的一组对象集合</p><p>2.4 什么是对象的属性<br>属性：对象的各种特征，每个对象的每个属性都有特定的值<br>2.5 什么是对象的行为<br>行为：对象能够执行的操作<br>2.6 类和对象的关系<br>类：类是对现实生活中一类具有共同属性和行为的事物抽象<br>对象：是能够看得到摸得到的真实存在的实体</p><p><strong>类是对象的抽象</strong><br><strong>对象是类的实体</strong></p><p>2.7 类的定义<br>类的重要性：是Java程序的重要组成单位<br>类是什么：类是对现实生活中一类具有共同属性和行为的事物抽象，确定对象将会拥有的属性和行为</p><p>类的组成：属性 和 行为<br>•属性：在类中通过成员变量来体现（类中方法外的变量）<br>•行为：在类中通过成员方法来体现（和前面的方法相比去掉static关键字即可）</p><p>类的定义步骤:<br> ①定义类<br> ②编写类的成员变量<br> ③编写类的成员方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 类名</span>&#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    变量<span class="number">1</span>的数据类型 变量<span class="number">1</span>；</span><br><span class="line">    变量<span class="number">2</span>的数据类型 变量<span class="number">2</span>；</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    方法<span class="number">1</span>；</span><br><span class="line">    方法<span class="number">2</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.8 对象的使用<br>创建对象：<br>•格式： 类名 对象名 = new 类名()；<br>•范例： Phone p = new Phone();</p><p>使用对象：<br>a.使用成员变量<br>•格式：对象名.变量名<br>•范例：p.brand</p><p>b.使用成员方法<br>•格式：对象名.方法名()<br>•范例：p.call()</p><p>三.对象内存图</p><p>3.1 对象内存图（单个对象）<br>例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentTest01</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Student s = <span class="keyword">new</span> Student();</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line">        System.out.println(s.name+<span class="string">","</span>+s.age);</span><br><span class="line">        s.name = <span class="string">"a"</span>;</span><br><span class="line">        s.age = <span class="number">1</span>;</span><br><span class="line">        System.out.println(s.name+<span class="string">","</span>+s.age);</span><br><span class="line"></span><br><span class="line">        s.study();</span><br><span class="line">        s.doHomework();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>栈内存:<br>main<br>Student s 地址值（假设为）001<br>s.study();<br>方法:study,<br>调用者s(001)，执行完毕后就销毁<br>s.doHomework();<br>方法:doHomework,<br>调用者s(001)，执行完毕后就销毁</p><p>堆内存:<br>new Student 001<br>name “a”<br>age   1</p><p>3.2 对象内存图（多个对象）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentTest01</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student();</span><br><span class="line">        System.out.println(s1);</span><br><span class="line"></span><br><span class="line">        System.out.println(s1.name+<span class="string">","</span>+s1.age);</span><br><span class="line">        s1.name = <span class="string">"a"</span>;</span><br><span class="line">        s1.age = <span class="number">1</span>;</span><br><span class="line">        System.out.println(s1.name+<span class="string">","</span>+s1.age);</span><br><span class="line"></span><br><span class="line">        s1.study();</span><br><span class="line">        s1.doHomework();</span><br><span class="line"></span><br><span class="line">        Student s2 = <span class="keyword">new</span> Student();</span><br><span class="line">        System.out.println(s2);</span><br><span class="line"></span><br><span class="line">        System.out.println(s2.name+<span class="string">","</span>+s2.age);</span><br><span class="line">        s2.name = <span class="string">"b"</span>;</span><br><span class="line">        s2.age = <span class="number">2</span>;</span><br><span class="line">        System.out.println(s2.name+<span class="string">","</span>+s2.age);</span><br><span class="line"></span><br><span class="line">        s2.study();</span><br><span class="line">        s2.doHomework();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>栈内存:<br>main<br>Student s1 地址值（假设为）001<br>s1.study();<br>方法:study,<br>调用者s(001)，执行完毕后就销毁<br>s1.doHomework();<br>方法:doHomework,<br>调用者s(001)，执行完毕后就销毁</p><p>Student s2 地址值（假设为）002<br>s2.study();<br>方法:study,<br>调用者s(001)，执行完毕后就销毁<br>s2.doHomework();<br>方法:doHomework,<br>调用者s(001)，执行完毕后就销毁</p><p>============================<br>堆内存:<br>new Student 001<br>name “a”<br>age   1</p><p>new Student 002<br>name “b”<br>age   2</p><p>3.2 对象内存图（多个对象指向相同）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentTest01</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student();</span><br><span class="line"></span><br><span class="line">        s1.name = <span class="string">"a"</span>;</span><br><span class="line">        s1.age = <span class="number">1</span>;</span><br><span class="line">        System.out.println(s1.name+<span class="string">","</span>+s1.age);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将s1赋值给s2</span></span><br><span class="line">        Student s2 = s1;</span><br><span class="line">        System.out.println(s2);</span><br><span class="line"></span><br><span class="line">        s2.name = <span class="string">"b"</span>;</span><br><span class="line">        s2.age = <span class="number">2</span>;</span><br><span class="line">        System.out.println(s1.name+<span class="string">","</span>+s1.age);</span><br><span class="line">        System.out.println(s2.name+<span class="string">","</span>+s2.age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>栈内存:<br>main<br>Student s1 地址值（假设为）001</p><p>Student s2 地址值（假设为）001</p><p>============================<br>堆内存:<br>new Student 001<br>name “a”<br>age   1</p><p>//s2<br>new Student 001<br>name “b”<br>age   2</p><p>输出：<br>a,1<br>b,2<br>b,2</p><p>结论：当两个对象指向相同（地址值相同时），其中一个对象修改了堆内存的内容，另一个对象访问时，内容也是改变过的</p><p>四.成员变量和局部变量<br>4.1 什么是成员变量和局部变量<br>成员变量：类中方法外的称为成员变量<br>局部变量：在方法中的变量</p><p>4.2 成员变量和局部变量的区别</p><table><thead><tr><th>区别</th><th align="left">成员变量</th><th align="left">局部变量</th></tr></thead><tbody><tr><td>类中位置不同</td><td align="left">类中方法外</td><td align="left">方法内或方法声明上</td></tr><tr><td>内存中位置不同</td><td align="left">堆内存</td><td align="left">栈内存</td></tr><tr><td>声明周期不同</td><td align="left">随着对象的存在而存在，随着对象的消失而消失</td><td align="left">随着方法的调用而存在，随着方法的调用完毕而消失</td></tr><tr><td>初始化值不同</td><td align="left">有默认的初始化值</td><td align="left">没有默认的初始化值，必须先定义，才能使用</td></tr></tbody></table><p>五.封装<br>5.1 private关键字<br>•是一个权限修饰符<br>•可以修饰成员（成员变量和成员方法）<br>•作用是保护成员不被别的类使用，被 private 修饰的成员只有在本类中才能访问</p><p>针对private修饰的成员变量，如果需要被其他类使用，提供相应的操作<br>•提供”get变量名()”方法，用于获取成员变量的值，方法用public修饰<br>•提供”set变量名(参数)”方法，用于设置成员变量的值，方法用public修饰</p><p>5.2 private关键字的使用<br>一个标准类的编写：<br>•把成员变量用private修饰<br>•提供对应的getXxx()/setXxx()方法</p><p>5.3 this关键字</p><p>①this修饰的变量用于指代成员变量</p><ul><li>方法的形参如果与成员变量同名，不带this修饰的变量指的是形参，而不是成员变量</li><li>放到的形参没有与成员变量同名，不带this修饰的变量指的是成员变量</li></ul><p>②什么时候使用this</p><ul><li>解决局部变量隐藏成员变量</li></ul><p>③this：代表所在类的对象引用</p><ul><li>记住：方法被哪个对象引用，this就代表哪个对象</li></ul><p>5.4 this内存原理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="title">StudentDemo</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Student s1 = <span class="keyword">new</span> Student();</span><br><span class="line">    s1.setName(<span class="string">"a"</span>);</span><br><span class="line"></span><br><span class="line">    Student s2 = <span class="keyword">new</span> Student();</span><br><span class="line">    s2.setName(<span class="string">"b"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>栈内存：<br>方法main<br>Student s1 假设内存地址001</p><p>方法：setName<br>参数：name：”a”<br>调用者：s1(001)<br>this:  s1(001)<br>使用完毕销毁</p><p>Student s2 假设内存地址002<br>参数：name：”b”<br>调用者：s1(002)<br>this:  s1(002)<br>使用完毕销毁</p><p>堆内存：<br>new Student 001<br>name a<br>age  1</p><p>new Student 002<br>name b<br>age  2</p><p>5.5 封装<br>a.封装概述<br>是面向对象的三大特征之一(封装，继承，多态)<br>是面向对象编程语言对客观实际的模拟，客观世界里成员变量都是隐藏在对象内部的，外部是无法操作的</p><p>b.封装原则<br>将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问<br>成员变量private,提供对应的getXxx()/setXxx()方法</p><p>c.封装的好处<br>通过方法来控制成员变量的操作，提高了代码的安全性<br>把代码用方法进行封装，提高了代码的复用性</p><p>六.构造方法<br>6.1 构造方法概述<br>构造方法是一种特殊的方法<br>作用：创建对象<br>格式：<br>public class 类名{<br>    修饰符 类名(参数){</p><pre><code>}</code></pre><p>}<br>功能：主要是完成对象数据的初始化</p><p>6.2 构造方法的注意事项<br>①构造方法的创建</p><ul><li>如果没有定义构造方法，系统将给出一个 默认的 无参数构造方法</li><li>如果定义了构造方法，系统将不再提供默认的构造方法</li></ul><p>②构造方法的重载</p><ul><li>如果自定义来带参构造方法，还要使用无参构造方法，将必须再写一个无参数构造方法</li></ul><p>③推荐的使用方式</p><ul><li><strong>无论是否使用，都手工书写无参数构造方法</strong></li></ul><p>6.3 标准类的制作<br>①成员变量</p><ul><li>使用private修饰<br>②构造方法</li><li>提供一个无参构造方法</li><li>提供一个带多个参数的构造方法<br>③成员方法</li><li>提供每一个成员变量对应的setXxx()/getXxx()</li><li>提供一个显示对象信息的show()<br>④创建对象并为其成员变量赋值的两种方式</li><li>无参构造方法创建后使用setXxx()赋值</li><li>使用带参构造方法直接创建带有属性值的对象</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基础班学习笔记（六）</title>
      <link href="/2020/02/26/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/"/>
      <url>/2020/02/26/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>一.方法概述<br>1.1<br>方法（method）就是将具有独立功能的代码块组织成为一个整体，使其具有特殊功能的代码集。<br>注意：<br>•方法必须先创建才可以使用，该过程称为方法定义<br>•方法创建后并不是直接运行的，需要手动使用后才执行，该过程称为方法调用<br>1.2 方法的定义和调用<br>方法定义<br>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名()&#123;</span><br><span class="line">    <span class="comment">//方法体</span></span><br><span class="line">&#125;</span><br><span class="line">范例：</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">isEvenNumber</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//方法体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法调用<br>•格式：方法名()<br>•范例：isEvenNumber()</p><p>注意：方法一定要先定义后调用，不然会报错</p><p>1.3 带参数方法的定义和调用<br>带参数方法的定义：<br>•格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名（参数）&#123;… …&#125;</span><br></pre></td></tr></table></figure><p>•格式（单个参数）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名（数据类型 变量名）&#123;… …&#125;</span><br></pre></td></tr></table></figure><p>•范例（单个参数）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">isEvenNumber</span><span class="params">(<span class="keyword">int</span> number)</span></span>&#123;… …&#125;</span><br></pre></td></tr></table></figure><p>•格式（多个参数）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名（数据类型 变量名<span class="number">1</span>,数据类型 变量名<span class="number">2</span>）&#123;… …&#125;</span><br></pre></td></tr></table></figure><p>•范例（多个参数）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">isEvenNumber</span><span class="params">(<span class="keyword">int</span> number1,<span class="keyword">int</span> number2)</span></span>&#123;… …&#125;</span><br></pre></td></tr></table></figure><p>注意：<br>•方法定义时，参数中的数据类型和变量名都不能少，缺任一程序报错<br>•方法定义时，多个参数之间用逗号(,)分隔</p><p>带参数方法的调用<br>•格式：方法名（参数）<br>•格式（单个参数）：方法名（变量名/常量值）<br>•范例（单个参数）：isEvenNumber(5)<br>•格式（多个参数）方法名（变量名1/常量值1，变量名2/常量值2）;<br>•范例（多个参数）：isEvenNumber(5,6)<br>注意：<br>方法调用时，参数的数量与类型必须与方法定义中的设置相匹配，否则程序将报错</p><p>形参和实参<br>形参：方法中定义的参数，等同于变量定义格式，例如int number<br>实参：方法中调用的参数，等同于使用变量或常量，例如10 number</p><p>1.4 带返回值方法的定义和调用<br>带返回值方法的定义<br>•格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> 数据类型 方法名（参数）&#123;</span><br><span class="line">    <span class="keyword">return</span> 数据；</span><br><span class="line">    &#125;</span><br><span class="line">•范例：<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isEvenNumber</span><span class="params">(<span class="keyword">int</span> number)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">•范例：<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">100</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：方法定义时，return的返回值与方法定义的数据类型要匹配，不然报错</p><p>带返回值方法的调用<br>•格式1:方法名（参数）;<br>•范例:isEvenNumber(5);<br>•格式2:数据类型 变量名 = 方法名（参数）<br>•范例:boolean flag = isEvenNumber(5);<br>注意：方法的返回值通常会使用变量接收，否则该返回值无意义</p><p>1.5 方法的注意事项<br>•方法不能嵌套定义<br>•void表示无返回值，可以省略return，也可以单独书写return，后面不加数据。</p><p>1.6 方法的通用格式<br>•格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> 返回值类型 方法名（参数）&#123;</span><br><span class="line">    方法体</span><br><span class="line">    <span class="keyword">return</span> 数据；</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>•public static：修饰符<br>•返回值类型：方法操作完成后，返回的数据类型。如果方法操作完毕，没有数据返回，这里写void，而且方法体中一般不写return。<br>•方法名：调用方法时使用的标识<br>•参数：由数据类型和变量名组成，多个参数之间用逗号隔开<br>•方法体：完成功能的代码块<br>•return：如果方法操作完毕，有数据返回，用于把数据返回给调用者</p><p>•定义方法时，要做到两个明确<br>明确返回值类型：主要是明确方法操作完毕后是否有数据返回，如果没有，写void，如果有，写对应的数据类型<br>明确参数：主要是明确参数的类型和数量</p><p>•调用方法时<br>void类型的方法，直接调用即可<br>非void类型的方法，推荐用变量接收调用</p><p>1.6 方法重载<br>概述：方法重载，是指同一个类中定义的多个方法之间的关系，满足下列条件的多个方法相互构成重载<br>•多个方法要在同一个类中<br>•多个方法要具有相同的方法名<br>•多个方法的参数不同，类型不同，或者数量不同</p><p>方法重载的特点：<br>•重载仅针对方法的定义，与方法的调用无关，调用方式参考标准格式。<br>•重载仅针对同一个类中方法的名称与参数进行识别，与返回值无关，换句话说就是不能通过返回值来判定两个方法是否相互构成重载</p><p>1.7 方法的参数传递<br>基本类型：对应基本数据类型的参数，形式参数的改变，不影响实际参数的值<br>引用类型：对应引用数据类型的参数，形式参数的改变，影响实际参数的值</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基础班学习笔记（五）</title>
      <link href="/2020/02/25/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/"/>
      <url>/2020/02/25/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>一.数组<br>1.1 数组概述：<br>•一次性声明大量用于存储的数据变量<br>•要存储的数据通常都是同类型数据。<br>1.2 什么是数组<br>数组（array）是一种用于存储多个相同类型数据的存储类型<br>1.3 数组定义的格式<br>•格式一：数据类型[]变量名<br>范例：int[] arr<br>•定义了一个int类型数组，数组名是arr</p><p>•格式二：数据类型 变量名[]<br>范例：int arr[]<br>•定义了一个int类型变量，变量名是arr数组</p><p>二. 数组初始化之动态初始化<br>2.1数组初始化概述<br>Java中的数组必须初始化才能使用<br>所谓初始化：就是为数组中的数组元素分配内存空间，并为每个数组赋值</p><p>2.2数组初始化方式<br>•动态初始化：初始化时只指定数组长度，由系统为数组分配初始值<br>•格式：数据类型[]变量名 = new 数据类型[数组长度]<br>•范例：int[] arr = new int[3]</p><p>•静态初始化</p><p>三.数组元素访问<br>3.1 数组元素访问<br>•数组变量访问方式<br>•格式：数组名</p><p>•数组内部保存的数据的访问方式<br>•格式：数组名[索引]</p><p>•索引是数组中数据的编号方式<br>•作用：索引用于访问数组中的数据使用，数组名[索引]等同于变量名，是一种特殊变量名<br>•特征①：索引是从0开始的<br>•特征②：索引是连续增加的<br>•特征③：索引逐一增加，每次加1</p><p>四.内存分配<br>4.1 Java中的内存分配<br>Java程序在运行时，需要在内存中分配空间，为了提高运算效率，就对内存空间进行了不同区域的划分，因为每一片区域都有特定的处理数据方式和内存管理方式。<br>数组在初始化时，会为存储空间提供默认值<br>•整数：默认值0<br>•浮点数：默认值0.0<br>•布尔值：默认false<br>•字符：默认空字符<br>•引用数据类型：默认null</p><p>•栈内存：存储局部变量<br>定义在方法中的变量，例如arr<br>使用完毕，立即消失<br>•堆内存：存储new出来的内容（实体，对象）<br>数组在初始化时，会为存储空间添加默认值<br>整数：默认值0<br>浮点数：默认值0.0<br>布尔值：默认false<br>字符：默认空字符<br>引用数据类型：默认null<br>每一个new出来的东西都有一个地址值，使用完毕，会在垃圾回收器空闲时回收。</p><p>4.2 单个数组的内存图<br>4.3 多个数组的内存图<br>4.4 多个数组指向相同的内存图<br>4.5 数组初始化之静态初始化<br>静态初始化：初始化时指定每个数组元素的初始值，由系统决定数组长度<br>•格式：数据类型[] 变量名 = new 数据类型[]{数据1，数据2，数据3…}；<br>•范例：int arr[]=new int[]{1,2,3};<br>•简化格式：数据类型[]变量名={数据1，数据2…}；<br>•范例：int[] arr={1,2,3};</p><p>4.6 数组操作的两个常见小问题<br>•索引越界：访问了数组中不存在的索引对应的元素，造成索引越界问题<br>•空指针异常：访问的数组已经不再指向堆内存的数据，造成空指针异常<br>•null：空值，引用数据类型的默认值，表示不指向任何有效对象</p><p>4.7 遍历<br>获取数组元素数量<br>•格式：数组名.length<br>•范例：arr.length<br>遍历通用格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>;x&lt;arr.length;x++)&#123;</span><br><span class="line">    arr[x]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.8 数组常见操作<br>获取最大值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] arr=&#123;<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>&#125;</span><br><span class="line"><span class="comment">//1.定义一个变量，用于保存最大（小）值</span></span><br><span class="line"><span class="keyword">int</span> max;</span><br><span class="line"><span class="comment">//2.取数组中的第一个数据作为变量的初始值</span></span><br><span class="line"><span class="keyword">int</span> max=arr[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//3.与数组中剩余的数据逐个比对，每次比对将最大值保存到变量中</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">1</span>;x&lt;arr.length;x++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(arr[x]&gt;max)&#123;</span><br><span class="line">        max=arr[x];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4.循环结束后打印变量的值</span></span><br><span class="line">System.out.println(arr[max]);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基础班学习笔记（四）</title>
      <link href="/2020/02/25/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2020/02/25/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>一. 流程控制<br>1.1 流程控制语句分类<br>•顺序结构<br>顺序结构是最基本的结构，按照代码先后依次执行。<br>•分支结构（if,switch）<br>•循环结构(for,while,do…while)</p><p>1.2 if语句①<br>格式：<br>if(关系表达式){<br>    语句体；<br>}<br>执行流程：<br>①首先计算表达式的值<br>②如果关系表达式的值为true就执行语句体。<br>③如果关系表达式的值为false就不执行语句体。<br>④继续执行后面的内容。</p><p>1.3 if语句②</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(关系表达式)&#123;</span><br><span class="line">    语句体<span class="number">1</span>；</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    语句体<span class="number">2</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>①首先计算表达式的值<br>②如果关系表达式的值为true就执行语句体1。<br>③如果关系表达式的值为false就执行语句体2。<br>④继续执行后面的内容。</p><p>1.4 if语句③</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(关系表达式<span class="number">1</span>)&#123;</span><br><span class="line">    语句体<span class="number">1</span>；</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(关系表达式<span class="number">2</span>)(</span><br><span class="line">    语句体<span class="number">2</span>；</span><br><span class="line">)...</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    语句体n+<span class="number">1</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>①首先计算表达式的值<br>②如果关系表达式的值为true就执行语句体1。<br>③如果关系表达式的值为false就执行语句体2。<br>④…<br>⑤如果没有任何true，则执行语句体n+1。</p><p>二. switch语句<br>switch语句格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)&#123;</span><br><span class="line">    <span class="keyword">case</span> 值<span class="number">1</span>:</span><br><span class="line">        语句体<span class="number">1</span>；</span><br><span class="line">        <span class="keyword">break</span>；</span><br><span class="line">    <span class="keyword">case</span> 值<span class="number">2</span>:</span><br><span class="line">        语句体<span class="number">2</span>；</span><br><span class="line">        <span class="keyword">break</span>；    </span><br><span class="line">    <span class="keyword">case</span> 值<span class="number">3</span>:</span><br><span class="line">        语句体<span class="number">3</span>；</span><br><span class="line">        <span class="keyword">break</span>；</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        语句体n+<span class="number">1</span>；</span><br><span class="line">        [<span class="keyword">break</span>;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：<br>①首先计算表达式的值<br>②依次和case后面的值进行比较，如果有对应的值，就会执行语句，在执行过程中，遇到break就结束。<br>③如果所有的case后面的值和表达式的值都不匹配，就会执行default里的语句，然后程序结束。</p><p>三. for循环语句<br>3.1 循环结构<br>循环结构组成：<br>初始化语句：用于表示程序循环开始时的起始状态，简单说就是循环开始时什么样。<br>条件判断语句：用于表示程序循环反复执行的条件，简单说就是循环是否能一直执行下去。<br>循环体语句：用于表示程序循环反复执行的内容，简单说就是循环反复执行的事情。<br>条件控制语句：简单说就是循环每次变化的内容，简单说就是控制循环是否能执行下去。</p><p>循环结构对应的语法：<br>初始化语句：这是一条或多条语句，这些语句可以完成一些初始化操作。<br>条件判断语句：这里使用一个结果为boolean类型的表达式，这个表达式能决定是否执行循环体。<br>循环体语句：这里可以是任意语句，这些语句将反复执行。<br>条件控制语句：这里通常是使用一条语句来改变变量的值，从而达到是否让循环继续执行下去的结果。<br>3.2 for语句循环格式<br>格式:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(初始化语句；条件判断语句；条件控制语句)&#123;</span><br><span class="line">    循环体语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：<br>①首先执行初始化语句<br>②执行条件判断语句，true执行，false跳出。<br>③执行循环体语句<br>④执行条件控制语句<br>⑤回到②继续</p><p>四. while循环语句<br>4.1while循环语句格式<br>完整格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">while</span>(条件判断语句)&#123;</span><br><span class="line">    循环体语句;</span><br><span class="line">    条件控制语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：<br>①首先执行初始化语句<br>②执行条件判断语句，true执行，false跳出。<br>③执行循环体语句<br>④执行条件控制语句<br>⑤回到②继续</p><p>五. do…while循环语句<br>5.1 do…while循环语句完整格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line">do&#123;</span><br><span class="line">    循环体语句;</span><br><span class="line">    条件控制语句;</span><br><span class="line">&#125;while(条件判断语句)</span><br></pre></td></tr></table></figure><p>执行流程：<br>①首先执行初始化语句<br>②执行循环体语句<br>③执行条件控制语句<br>④执行条件判断语句，true执行，false跳出。<br>⑤回到②继续</p><p>六.三种循环语句的区别<br>•for 循环和while循环先判断条件是否成立，然后决定是否执行循环体（先判断后执行）<br>•do…while循环先执行一次循环体，然后判断条件是否成立，是否继续执行循环体。（先执行后判断）<br>for和while的区别<br>•条件控制语句所控制的自增变量，因为归属for循环的语句中，在for循环结束后就不能再被访问到了。<br>•条件控制语句所控制的自增变量，因为不归属while循环的语句中，在while循环结束后，该变量还能继续使用。<br>死循环格式：<br>for(;;){}<br>while(true){}<br>do{}while(true);</p><p>七.跳转控制语句：<br>7.1 跳转控制语句概述<br>•continue 用在循环中，基于条件控制，跳过某次循环体内容执行，继续下一次执行<br>•break 用在循环中，基于条件控制，终止某次循环体内容执行，也就是说结束当前的整个循环。</p><p>八. 循环嵌套<br>语句结构：<br>•顺序语句:以分号结尾，表示一句话的结束。<br>•分支语句<br>一对大括号表示if的整体结构，整体描述一个完整的if语句<br>一对大括号表示for的整体结构，整体描述一个完整的for语句<br>•循环语句:<br>一对大括号表示while的整体结构，整体描述一个完整的while语句<br>一对大括号表示do…while的整体结构，整体描述一个完整的do…while语句<br>任何语句对外都可以看成是一句话，一句代码。<br>分支语句包含分支语句成为分支嵌套。<br>循环语句包含循环语句成为循环嵌套。</p><p>九. Random<br>9.1 random的作用和使用步骤<br>作用：用于产生一个随机数。<br>使用步骤：<br>①导包<br>import java.util.Random;<br>导包的动作必须出现在定义上面。<br>②创建对象<br>Random r = new Random();<br>上面这个格式里，只有变量名r可以变，其他都不允许变。<br>③接收数据<br>int number = r.nextInt(10);//数据获取的范围：【0，10），包括0，不包括10<br>上面这个格式里，变量名r可以变，数字范围10可以变，其他都不允许变。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基础班学习笔记（二）</title>
      <link href="/2020/02/25/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2020/02/25/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>一.运算符<br>1.1运算符和表达式<br>•运算符：对常量或者变量进行操作的符号<br>•表达式：用运算符把常量或者变量连起来符合java语法的式子就可以称为表达式。<br>        不同运算符连接到表达式体现的是不同类型表达式。<br>•举例说明：<br>    int a=10;<br>    int b=20;<br>    int c=a+b;<br>    +:是运算符，并且是算数运算符<br>    a+b:是表达式，由于+是算数运算符，所以这个是算数表达式</p><table><thead><tr><th align="center">符号</th><th>作用</th><th align="right">说明</th></tr></thead><tbody><tr><td align="center">+</td><td>加</td><td align="right"></td></tr><tr><td align="center">-</td><td>减</td><td align="right"></td></tr><tr><td align="center">*</td><td>乘</td><td align="right"></td></tr><tr><td align="center">/</td><td>除</td><td align="right">获取的是两个数据除法的商</td></tr><tr><td align="center">%</td><td>取余</td><td align="right">获取的是两个数据除法的余数</td></tr><tr><td align="center">整数相除只能得整，要小数需要浮点数参与</td><td></td><td align="right"></td></tr></tbody></table><p>1.2 字符 的“+” 操作是拿字符在计算机底层对应的数值来进行计算的<br>‘A’=&gt;65,A-Z是连续的<br>‘a’=&gt;97，a-z是连续的<br>‘0’=&gt;48，0-9是连续的<br>算数表达式中包含多个基本数据类型的值的时候，整个算数表达式的类型会自动进行提升。<br>提升规则：<br>•byte、short、和char类型将被提升为int类型<br>•整个表达式的类型自动提升到表达式中最高等级的类型<br>等级顺序：byte，short，char=&gt;int=&gt;long=&gt;float=&gt;double</p><p>1.3字符串的加操作：当“+”操作出现在字符串时，整个“+”是连接符，而不是运算符。在+操作出现字符串，那就是连接操作，从左到右执行。</p><p>二.<br>2.1 赋值运算符</p><table><thead><tr><th>符号</th><th>作用</th><th align="right">说明</th></tr></thead><tbody><tr><td>+</td><td>赋值</td><td align="right">a=10，将10赋予a</td></tr><tr><td>+=</td><td>加后赋值</td><td align="right">a+=b，将a+b的值赋予a</td></tr><tr><td>-=</td><td>减后赋值</td><td align="right">a-=b，将a-b的值赋予a</td></tr><tr><td>*=</td><td>乘后赋值</td><td align="right">a<em>=b，将a</em>b的值赋予a</td></tr><tr><td>/=</td><td>除后赋值</td><td align="right">a/=b，将a/b的商赋予a</td></tr><tr><td>%=</td><td>取余后赋值</td><td align="right">a%=b，将a/b的余数赋予a</td></tr><tr><td>扩展运算符隐藏了强制类型转换。</td><td></td><td align="right"></td></tr></tbody></table><p>2.2 自增自减运算符</p><table><thead><tr><th>符号</th><th>作用</th><th align="right">说明</th></tr></thead><tbody><tr><td>++</td><td>自增</td><td align="right">变量值加一</td></tr><tr><td>+-</td><td>自减</td><td align="right">变量值减一</td></tr></tbody></table><p>注意事项：<br>•++和–都可以放变量前面或者后面<br>•单独使用时，不论前后都是一样的<br>•参与操作时，如果放在变量后面，那么先将变量赋值再进行自增/减操作，如果在前面，先将变量做自增/减操作再进行赋值。<br>例：<br>a=10；<br>b=a++；此时先赋予b的值10，再自增11<br>c=++a；此时自增到11，再赋予c值</p><p>2.3 关系运算符</p><table><thead><tr><th align="left">符号</th><th align="center">说明</th></tr></thead><tbody><tr><td align="left">==</td><td align="center">a==b,判断a与b的值是否相等，成立为true，不成立为false</td></tr><tr><td align="left">!=</td><td align="center">a!=b,判断a与b的值是否不相等，成立为true，不成立为false</td></tr><tr><td align="left">&gt;</td><td align="center">a&gt;b,判断a值是否大于b，成立为true，不成立为false</td></tr><tr><td align="left">&gt;=</td><td align="center">a&gt;=b,判断a值是否大于等于b，成立为true，不成立为false</td></tr><tr><td align="left">&lt;</td><td align="center">a &lt; b,判断a值是否小于b，成立为true，不成立为false</td></tr><tr><td align="left">&lt;=</td><td align="center">a&lt;=b,判断a值是否小于等于b，成立为true，不成立为false</td></tr><tr><td align="left">注意事项：关系运算符的结果都是boolean，要么true，要么false</td><td align="center"></td></tr></tbody></table><p>2.4 逻辑运算符<br>逻辑运算符是用来连接关系表达式的运算符。<br>逻辑运算符也可以直接连接布尔类型的常量或变量。</p><table><thead><tr><th>符号</th><th align="center">作用</th><th align="right">说明</th></tr></thead><tbody><tr><td>&amp;</td><td align="center">逻辑与</td><td align="right">a &amp; b,a和b都是true，结果为true，否则false</td></tr><tr><td>｜</td><td align="center">逻辑或</td><td align="right">a ｜ b,a和b都是false，结果为false，否则true</td></tr><tr><td>^</td><td align="center">逻辑异或</td><td align="right">a ^ b,a和b结果不同为true，否则false</td></tr><tr><td>!</td><td align="center">逻辑非</td><td align="right">!a,结果和a的结果刚好相反</td></tr></tbody></table><p>2.5 短路逻辑运算符</p><table><thead><tr><th>符号</th><th align="center">作用</th><th align="right">说明</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td align="center">短路与</td><td align="right">作用和&amp;相同，但是有短路效果</td></tr><tr><td>｜｜</td><td align="center">短路或</td><td align="right">作用和｜相同，但是有短路效果</td></tr><tr><td>注意事项：</td><td align="center"></td><td align="right"></td></tr><tr><td>•逻辑与&amp;，无论左边真假，右边都要执行。</td><td align="center"></td><td align="right"></td></tr><tr><td>•短路与&amp;&amp;，如果左边真，右边要执行；如果左边假，右边不执行。</td><td align="center"></td><td align="right"></td></tr><tr><td>•逻辑或｜，无论左边真假，右边都要执行。</td><td align="center"></td><td align="right"></td></tr><tr><td>•短路或｜｜，如果左边假，右边要执行；如果左边真，右边不执行。</td><td align="center"></td><td align="right"></td></tr></tbody></table><p>2.6 三元运算符<br>•格式：关系表达式？表达式1：表达式2；<br>•范例a&gt;b?a:b;</p><p>计算规则：<br>首先计算关系表达式的值<br>如果值为true，表达式1就是运算结果<br>如果值为false，表达式2就是运算结果</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基础班学习笔记（一）</title>
      <link href="/2020/02/25/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/02/25/%E5%9F%BA%E7%A1%80%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>一：注释方法：</p><pre><code>//单行注释/*多行注释*//**文档注释*/</code></pre><p>二：<br>    关键字字母全部小写，一般会highlight</p><p>三：<br>    常量：在程序运行中，值不可更改的量<br>    常量分类：</p><table><thead><tr><th></th><th align="center"></th><th align="right"></th></tr></thead><tbody><tr><td>字符串常量</td><td align="center">用双引号括起来的内容</td><td align="right">“Hello”,”一二三”</td></tr><tr><td>整数常量</td><td align="center">不带小数点的数字</td><td align="right">±1</td></tr><tr><td>小数常量</td><td align="center">带小数点的数字</td><td align="right">±3.14</td></tr><tr><td>字符常量</td><td align="center">用单引号括起来的内容</td><td align="right">‘A’,’0’,’我’</td></tr><tr><td>布尔常量</td><td align="center">布尔值，true/false</td><td align="right">true,false</td></tr><tr><td>空常量</td><td align="center">特殊值，空值</td><td align="right">null</td></tr></tbody></table><p>/*<br>Java程序最基本组成单位：类<br>格式：<br>public class 类名称{<br>    }<br>*/</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span>&#123;</span><br><span class="line">    <span class="comment">//main方法是程序的入口方法，代码从main开始执行</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="comment">//字符串常量</span></span><br><span class="line">System.out.println(<span class="string">"HelloWorld，一"</span>);</span><br><span class="line"><span class="comment">//整数常量</span></span><br><span class="line">System.out.println(<span class="number">1</span>);</span><br><span class="line"><span class="comment">//小数串常量</span></span><br><span class="line">System.out.println(<span class="number">3.14</span>);</span><br><span class="line"><span class="comment">//字符常量</span></span><br><span class="line">System.out.println(<span class="string">'A'</span>);</span><br><span class="line">System.out.println(<span class="string">'0'</span>);</span><br><span class="line">System.out.println(<span class="string">'一'</span>);</span><br><span class="line"><span class="comment">//布尔常量</span></span><br><span class="line">System.out.println(<span class="keyword">true</span>);</span><br><span class="line">System.out.println(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*空常量，不能直接输出</span></span><br><span class="line"><span class="comment">System.out.println(null);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">error: reference to println is ambiguous</span></span><br><span class="line"><span class="comment">System.out.println(null);</span></span><br><span class="line"><span class="comment">          ^</span></span><br><span class="line"><span class="comment">both method println(char[]) in PrintStream and method println(String) in PrintStream match</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>四.<br>    Java语言是强类型语言，对于每一种数据都给出了明确的数据类型，不同的数据类型也分配了不同的内存空间，所以它们表示的数据大小也是不一样的。</p><p><img src='https://g.gravizo.com/svg? digraph G {   数据类型  [shape=box]   基本数据结构  [shape=box]   引用数据结构  [shape=box]   数值型  [shape=box]   非数值型  [shape=box]   整数（bytes，short，int，long）  [shape=box]   浮点数（float，double）  [shape=box]   字符（char）  [shape=box]   布尔（boolean）  [shape=box]   类（class）  [shape=box]   接口（interface）  [shape=box]   数组（Array）  [shape=box]   数据类型 -> 基本数据结构;   数据类型 -> 引用数据结构;   基本数据结构 -> 数值型;   基本数据结构 -> 非数值型;   数值型 -> 整数（bytes，short，int，long）;   数值型 -> 浮点数（float，double）;   数值型 -> 字符（char）;   非数值型 -> 布尔（boolean）;   引用数据结构 -> 类（class）;   引用数据结构 -> 接口（interface）;   引用数据结构 -> 数组（Array）; }'/></p><table><thead><tr><th>数据类型</th><th align="center">关键字</th><th align="right">内存占</th><th align="right">取值范围</th></tr></thead><tbody><tr><td>整数</td><td align="center">byte</td><td align="right">1</td><td align="right">-128～127</td></tr><tr><td></td><td align="center">short</td><td align="right">2</td><td align="right">-32768-32767</td></tr><tr><td></td><td align="center">int （默认）</td><td align="right">4</td><td align="right">-2的31次方到2的31次方-1</td></tr><tr><td></td><td align="center">long</td><td align="right">8</td><td align="right">-2的63次方到2的63次方-1</td></tr><tr><td>浮点数</td><td align="center">float</td><td align="right">4</td><td align="right">负数：-3.402823E+38到-1.401298E-45<br>正数1.401298E-45到3.402823E+38</td></tr><tr><td></td><td align="center">double （默认）</td><td align="right">8</td><td align="right">负数：-1.797693E+308到-4.9000000EE-324<br>正数：4.9000000EE-324到1.797693E+308</td></tr><tr><td>字符</td><td align="center">char</td><td align="right">2</td><td align="right">0-65535</td></tr><tr><td>布尔</td><td align="center">boolean</td><td align="right">1</td><td align="right">true，false</td></tr><tr><td>说明：E+38表示乘以10的38次方，E-45即乘以-10的45次方</td><td align="center"></td><td align="right"></td><td align="right"></td></tr></tbody></table><p>五：<br>    变量：在程序运行过程中，其值可以发生改变的量。本质上讲，变量是内存的一小块区域。<br>    格式：数据类型 变量名 = 变量值；<br>         例子：int a = 10；<br>    变量的使用：取值和修改值。<br>        例子：<br>            取值格式：变量名<br>            •范例：a<br>            修改值格式：变量名 = 变量值；<br>            •范例：a=20;<br>    变量使用事项：<br>        •名字不能重复<br>        •long类型变量定义时，为了防止整数过大，后面要加L。<br>        •float类型变量定义时，为了防止不兼容，后面要加F。</p><p>六：<br>    标识符：就是给类、方法，变量等起名字的符号。<br>    定义规则：<br>        •由数字、字母、下划线（_）和美元符($)组成。<br>        •不能以数字开头。<br>        •不能是关键字。<br>        •区分大小写。<br>    常见命名约定：<br>        小驼峰命名法：方法、变量<br>        •约定1:标识符是一个单词的时候，首字母小写。<br>        •范例1:name<br>        •约定2:标识符由多个字母组成时，第一个单词字母小写，其他单词首字母大写。<br>        •范例2:firstName<br>        大驼峰命名法：类<br>        •约定1:标识符是一个单词的时候，首字母大写。<br>        •范例1:Student<br>        •约定2:标识符由多个字母组成时，每个单词首字母大写。<br>        •范例2:GoodStudent</p><p>七：类型转换<br>    自动类型转换：把一个表示数据范围小的值或者变量赋予给另一个表示数据范围大的变量。<br>    范例：double d = 10；</p><p><img src='https://g.gravizo.com/svg?digraph G {   表示数据范围从小到大   byte  [shape=box]   short  [shape=box]   char  [shape=box]   init  [shape=box]   long  [shape=box]   float  [shape=box]   double  [shape=box]   byte -> short;   short -> init;   char -> init;   init -> long;   long -> float;   float -> double; }'/></p><p>强制类型转换：把一个数据范围大的数值或者变量赋值给一个表示数据范围小的变量<br>•格式：目标数据类型 变量名=（目标数据类型）值或者变量<br>•范例int k = （int）88.88；</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PD虚拟机Windows 10使用宿主机macOS的ss代理</title>
      <link href="/2019/10/19/PD-with-ss/"/>
      <url>/2019/10/19/PD-with-ss/</url>
      
        <content type="html"><![CDATA[<p>准备工具：<br>shadowsocks-NG</p><p>步骤：<br>1.ss-ng打开偏好设置<br>    1.1 进入“高级”标签，将“本地socks5监听地址”改为0.0.0.0（同样为本地地址，所有均可监听）<br>    1.2 进入“HTTP”标签，将“HTTP代理监听地址”改为0.0.0.0，并记下监听端口<br>2.在macOS查看本地ip地址<br>ifconfig<br>将en0（根据自己当前网卡连接选择）中的inet地址复制</p><p>3.PD虚拟机为原本配置，使用推荐：共享网络，不需更改。</p><p>打开win10设置-网络-代理，打开代理开关，填入macOS刚刚复制的ip地址，端口为SS的HTTP监听端口</p><p>完成。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>搬瓦工CentOS6 使用IPv6的SS</title>
      <link href="/2019/10/07/Centos6-SS-ipv6/"/>
      <url>/2019/10/07/Centos6-SS-ipv6/</url>
      
        <content type="html"><![CDATA[<p>当前IPv4 IP被封，需要Google查资料，使用v6 IP勉强使用，此方法延迟大约是v4的10倍，原因可能与路由出口以及IP转化有关，但是方法十分简单。</p><p>当前系统环境（均为KVM自带）：<br>centos6-bbr，<br>ss<br>网络环境：<br>电信网，支持IPv6</p><p>首先使用如下教程，获取IPv6的IP，并使其在server自启动<br><a href="https://www.bandwagonhost.net/2144.html">https://www.bandwagonhost.net/2144.html</a></p><p>我这ping通Google但是没有显示IP，不影响使用。<br>可以使用ip -6 route查看一下，自带的内容会error 113，但是自己添加的在最后4条，没有error。</p><p>到此，IPv6已经配置完成，本地也已经可以ping通服务器的IPv6地址。</p><p>但是CentOS的IPv6还有防火墙，会导致即使ping通，服务启动也无法使用ss。可以使用命令开启端口，我这里选择直接关闭。<br>service ip6tables stop<br>chkconfig ip6tables off</p><p>至此，本机可以ping通、telnet通IPv6的主机地址。重启ss服务后，将IPv6地址添加到本地Client，其他配置文件不需修改，即可使用。<br>（若多人账号，需要自行配置json文件并添加自启动）</p><p>相关ip6tables命令：<br>/sbin/ip6tables -A INPUT -m state –state NEW -m tcp -p tcp –dport 8080 -j ACCEPT;<br>/sbin/ip6tables -A INPUT -m state –state NEW -m tcp -p udp –dport 8080 -j ACCEPT;</p><p>ss相关：<br>多人用户自行配置ss.json，并添加至rc.local自启动<br>/usr/bin/ssserver -c /etc/ss.json -d start<br>/usr/bin/ssserver -c /etc/ss.json -d stop</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Centos 8 repo &amp; pd_tools</title>
      <link href="/2019/10/04/Centos-8-repo-pd-tools/"/>
      <url>/2019/10/04/Centos-8-repo-pd-tools/</url>
      
        <content type="html"><![CDATA[<p>接上篇已配置好本地local.repo，安装好图形界面<br>进入网络设置，打开本地连接开关<br>1.将本地repo取消<br>cd /etc/yum.repo.d/<br>mv local.repo local.repo.bak</p><p>2.备份远程源<br>cp CentOS-AppStream.repo{,.bak}<br>cp CentOS-Base.repo{,.bak}<br>cp CentOS-Extras.repo{,.bak}</p><p>3.添加阿里源，修改如下<br>vi CentOS-AppStream.repo</p><p>[AppStream]<br>name=CentOS-$releasever - AppStream<br><font color=#red><br>#mirrorlist=<a href="http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=AppStream&amp;infra=$infra">http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=AppStream&amp;infra=$infra</a><br>#baseurl=<a href="http://mirror.centos.org/$contentdir/$releasever/AppStream/$basearch/os/">http://mirror.centos.org/$contentdir/$releasever/AppStream/$basearch/os/</a><br>baseurl=<a href="https://mirrors.aliyun.com/centos/$releasever/AppStream/$basearch/os/">https://mirrors.aliyun.com/centos/$releasever/AppStream/$basearch/os/</a><br></font><br>gpgcheck=1<br>enabled=1<br>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial</p><p>vi CentOS-Base.repo</p><p>[BaseOS]<br>name=CentOS-$releasever - Base<br><font color=#FF0000><br>#mirrorlist=<a href="http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=BaseOS&amp;infra=$infra">http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=BaseOS&amp;infra=$infra</a><br>#baseurl=<a href="http://mirror.centos.org/$contentdir/$releasever/BaseOS/$basearch/os/">http://mirror.centos.org/$contentdir/$releasever/BaseOS/$basearch/os/</a><br>baseurl=<a href="https://mirrors.aliyun.com/centos/$releasever/BaseOS/$basearch/os/">https://mirrors.aliyun.com/centos/$releasever/BaseOS/$basearch/os/</a><br></font><br>gpgcheck=1<br>enabled=1<br>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial</p><p>vi CentOS-Extras.repo</p><p>[extras]<br>name=CentOS-$releasever - Extras<br><font color=#FF0000><br>#mirrorlist=<a href="http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras&amp;infra=$infra">http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras&amp;infra=$infra</a><br>#baseurl=<a href="http://mirror.centos.org/$contentdir/$releasever/extras/$basearch/os/">http://mirror.centos.org/$contentdir/$releasever/extras/$basearch/os/</a><br>baseurl=<a href="https://mirrors.aliyun.com/centos/$releasever/extras/$basearch/os/">https://mirrors.aliyun.com/centos/$releasever/extras/$basearch/os/</a><br></font><br>gpgcheck=1<br>enabled=1<br>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial</p><p>4.清理缓存并更新源<br>dnf clean all<br>dnf makecache</p><p>5.安装pd_tools<br>虚拟机光盘挂载prl-tools-lin.iso</p><p>进入terminal<br>mount -t auto /dev/cdrom /mnt/cdrom<br>cd /mnt/cdrom<br>./install<br>如果一切正常则安装完毕，若遇到如下问题<br>dkms<br>hpijs</p><p>dkms<br>pjijs<br>则尝试安装<br>yum install <a href="https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm">https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm</a><br>手动安装dkms<br>yum install -y dkms<br>yum install -y hpijs</p><p>再次尝试<br>to be continued<br>//切勿尝试不同版本的prl_tools_lin.iso，会直接导致图形界面宕机</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Thinkpad E450C 物理机安装黑群晖</title>
      <link href="/2019/04/17/My-New-Post-5/"/>
      <url>/2019/04/17/My-New-Post-5/</url>
      
        <content type="html"><![CDATA[<p>安装机型：Thinkpad E450C<br>安装版本：DS3617xs-6.17</p><p>镜像下载地址：<br><a href="http://www.nasyun.com/thread-64575-1-1.html">http://www.nasyun.com/thread-64575-1-1.html</a></p><p>工具：<br>空U盘（16G），img写盘工具，win8 PE盘一块</p><p>步骤：<br>使用二合一包比自行安装少很多步骤，仅需恢复后重置引导即可。</p><p>1.下载3617xs UEFI镜像后解压出约15G文件，存入16G空U盘<br>2.下载img写盘工具，一并存入（若PE已有该工具可跳过。img写盘工具比win32diskimager写入快3倍左右，建议使用）<br>3.使用PE引导Thinkpad进入PE界面<br>4.打开img写盘工具，选择解压后的镜像，目标选择 物理盘 Physical Disk，进行写入。<br>5.写入完成后已有一台可以直接硬盘启动的黑群晖，但是空间仅9G</p><p>接下来按照教程进行：<br><a href="http://www.nasyun.com/forum.php?mod=viewthread&amp;tid=65425&amp;page=1#pid486522">http://www.nasyun.com/forum.php?mod=viewthread&amp;tid=65425&amp;page=1#pid486522</a></p><p>1.删除存储空间和RAID空间，新建硬盘获得所有空间<br>3.重启进入winPE，打开DiskGenius，读取14G镜像<br>4.在刚刚创建的存储空间前有一个127M的小分区，创建63M和64M两个分区后删除63MB的，保存下一步<br>5.将虚拟镜像的EFI分区克隆进64MB分区中，重启<br>6.重启后硬盘自动引导，可以通过群晖安装助手查询该机器IP，登陆后即可操作</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>doc2dash 导入Python3.7.3中文文档</title>
      <link href="/2019/03/29/My-New-Post-4/"/>
      <url>/2019/03/29/My-New-Post-4/</url>
      
        <content type="html"><![CDATA[<p>Python官网出中文版文档（进阶部分仍是英文），但是Dash更新好像无法下载中文文档，遂自建</p><p>方法非常简单：</p><p>python先根据自己版本下载doc2dash<br>pip3 install doc2dash  </p><p>然后去官网下载中文版html<br><a href="https://docs.python.org/zh-cn/3/archives/python-3.7.3-docs-html.tar.bz2">https://docs.python.org/zh-cn/3/archives/python-3.7.3-docs-html.tar.bz2</a></p><p>解压为python-3.7.3-docs-html文件夹（可在此改名）</p><p>然后运行doc2dash  python-3.7.3-docs-html<br>Adding table of contents meta data…  [#########################################################################################################################################################]  100%<br>即可在目录创建出python-3.7.3-docs-html.docset</p><p>复制到Dash默认路径打开即可导入</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ESXi 安装 黑群晖</title>
      <link href="/2019/03/21/My-New-Post-3/"/>
      <url>/2019/03/21/My-New-Post-3/</url>
      
        <content type="html"><![CDATA[<p>方法来源：<br><a href="http://www.myxzy.com/post-462.html">http://www.myxzy.com/post-462.html</a></p><p>下载上述链接中的“6.1引导点击下载”解压并上传至ESXi存储中（2个文件，但上传后会自动合并为一个）<br>另下载“DS3617xs_15284.pat”</p><p>ESX中创建虚拟机，选择Linux（必须选择Linux 3.x或ubuntu等，不能选择其他，否则无SATA驱动器无法找到硬盘）<br>到自定义设置，首先删除已存在的硬盘，添加本地U盘（Esxi存储中找到对应引导vmdk文件），下拉选择SATA模式<br>添加新硬盘，同样更改SATA模式，SATA（0：1）<br>开启虚拟机，自动载入引导，登录网址，安装PAT文件，即可安装好群晖系统</p><p>若使用macOS，可以使用如下文章方法添加TimeMachine（需先将硬盘空间格式化NAS空间）<br><a href="https://sspai.com/post/48372">https://sspai.com/post/48372</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Esxi安装LEDE系统</title>
      <link href="/2019/03/21/My-New-Post-2/"/>
      <url>/2019/03/21/My-New-Post-2/</url>
      
        <content type="html"><![CDATA[<p>使用上一篇文章安装Exsi后，通过自己设置的IP进入Exsi（web端即可操作）</p><p>软件需求：<br>openwrt.vmdk</p><p>下载网站：<br><a href="http://firmware.koolshare.cn/LEDE_X64_fw867/">http://firmware.koolshare.cn/LEDE_X64_fw867/</a><br>下载固件：<br>openwrt-koolshare-mod-v2.30-r10402-51ad900e2c-x86-64-combined-squashfs.vmdk<br>我这时是2.3.0，combined版本</p><p>进入Exsi，选择存储，点击数据存储浏览器——创建目录——lEDE——上传openwrt-koolshare-mod-v2.30-r10402-51ad900e2c-x86-64-combined-squashfs.vmdk  退出存储界面。</p><p>若直接使用该vmdk会提示：无法打开磁盘 scsi0:0: 磁盘类型 7 不受支持或无效。请确保磁盘已导入。<br>使用另一台电脑ssh进入Exsi，进入目录 cd /vmfs/volumes/DATA卷/LEDE/<br>使用命令：<br>vmkfstools –i openwrt-koolshare-mod-v2.30-r10402-51ad900e2c-x86-64-combined-squashfs.vmdk  LDED.vmdk -d thin<br>精简后即可使用</p><p>接下来创建虚拟机：<br>创建新虚拟机——输入名称，选择Linux、Linux（64）——选择存储——自定义设置——————此时，删除硬盘，点击添加硬盘-现有硬盘，加入刚刚更改过的LDED.vmdk，完成</p><p>启动虚拟机，等命令行不动时回车即可进入（root权限）<br>安装后自动配置王官192.168.1.1，若有冲突，可以通过ssh更改为其他地址。</p><p>Web端使用自带或更改后的地址进入界面，默认密码为koolshare</p><p>左边选项中进入：网络——接口——LAN编辑——添加网关、DNS（114.114.114.114，223.5.5.5）保存并应用</p><p>这时可以正常安装并使用酷软中的软件了</p><p>其他功能有待探索<br>//TODO</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Centos 8 挂载本地镜像repo</title>
      <link href="/2019/03/21/Centos-8/"/>
      <url>/2019/03/21/Centos-8/</url>
      
        <content type="html"><![CDATA[<p>安装后命令行界面</p><p>先挂载本地镜像<br>mkdir /mnt/cdrom<br>mount -t auto /dev/cdrom /mnt/cdrom</p><p>验证是否存在<br>ll /mnt/cdrom</p><p>然后进入/etc/yum.repo.d/<br>创建local.repo</p><p>vi local.repo</p><p>[LocalRepo_BaseOS]<br>name=Centos Linux 8<br>baseurl=file:///mnt/cdrom/BaseOS<br>enabled=1<br>gpgcheck=1<br>gpgkep=file://etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial</p><p>[LocalRepo_AppStream]<br>name=Centos Linux 8<br>baseurl=file:///mnt/cdrom/AppStream<br>enabled=1<br>gpgcheck=1<br>gpgkep=file://etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial</p><p>退出</p><p>yum clean all<br>yum makecache</p><p>查看grouplist有什么可以安装的<br>yum grouplist</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPad E450C 旧货利用安装Exsi</title>
      <link href="/2019/03/21/My-New-Post-1/"/>
      <url>/2019/03/21/My-New-Post-1/</url>
      
        <content type="html"><![CDATA[<p>处理器：i3 4005U<br>内存：  4G<br>环境：  win10</p><p>需要软件：<br>UltraISO（试用版）、Esxi</p><p>需要硬件：<br>U盘（1G以上），网线连接网络设备</p><p>ESXI下载地址：<br>VM官网：<a href="https://my.vmware.com/web/vmware/details?downloadGroup=OEM-ESXI67-LENOVO&amp;productId=742">https://my.vmware.com/web/vmware/details?downloadGroup=OEM-ESXI67-LENOVO&amp;productId=742</a><br>Lenovo官网：<a href="https://vmware.lenovo.com/content/custom_iso/6.5/6.5u1/">https://vmware.lenovo.com/content/custom_iso/6.5/6.5u1/</a></p><p>这里使用的是联想官网的版本，将ISO文件刻录进U盘后，重启抹盘重装。<br>重启，Enter选择F1进入Bios，关闭安全加载，开启通用加载，在安全选项中开启虚拟化。<br>保存后再次重启，Enter选择F12使用U盘加载。</p><p>接下来菜单中，选择电脑型号——等待加载，直至跳过黄色界面，进入Welcome界面后，由于内存仅有4G，实际仅剩3.75G，所以需要照如下流程操作，若内存大于4G，则跳过此流程</p><ol><li>放入光盘或U盘，开始安装，一直普通流程到Welcome画面，按ALT+F1</li><li>登陆界面账号：root  密码为空</li><li>cd /usr/lib/vmware/weasel/util</li><li>rm upgrade_precheck.pyc（这个我进入时还未编译出来）</li><li>mv upgrade_precheck.py upgrade_precheck.py.old    </li><li>cp upgrade_precheck.py.old upgrade_precheck.py   #如果直接把这个文件备份.old</li><li>chmod 666 upgrade_precheck.py　　　　　　　　　　#增加权限后在原文件修改提示权限不允许</li><li>vi upgrade_precheck.py</li><li>编辑文本界面中查找 MEM_MIN  </li><li>MEM_MIN_SIZE= (4<em>1024) 改成 MEM_MIN_SIZE= (2</em>1024)</li><li>wq! 强制保存退出</li><li>ps -c |grep weasel        #不结束进程，直接适用ALT+F2貌似无效</li><li>kill -9 进程ID</li><li>此时正常情况下会跳回欢迎界面，如不跳回按ALT+F2返回继续安装</li></ol><p>方法来源：<a href="https://www.bbsmax.com/A/RnJW2BbOzq/">https://www.bbsmax.com/A/RnJW2BbOzq/</a></p><p>回到欢迎界面后，Enter——F11——选择你要安装的硬盘——Enter——选择键盘模式（US，Enter）——设置root密码——F11开始安装——安装完毕后Enter重启</p><p>重启后若见到黄色界面则安装成功。</p><p>F2输入账户密码进入控制界面，找到Configure Management Network，进入后，查看Network Adapter是否connect，我的无线网卡换了一块BCM的暂不处理，后期再看<br>//TODO 处理无线网卡</p><p>若connect，配置IPv4 Configuration，将IP和自身网络环境配置进去<br>由此，已可以通过同一网络环境的其他电脑进行访问ESXI</p><p>来源：<a href="http://koolshare.cn/thread-132810-1-1.html">http://koolshare.cn/thread-132810-1-1.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一条</title>
      <link href="/2018/10/25/My-New-Post/"/>
      <url>/2018/10/25/My-New-Post/</url>
      
        <content type="html"><![CDATA[<p>测试</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/10/25/hello-world/"/>
      <url>/2018/10/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
