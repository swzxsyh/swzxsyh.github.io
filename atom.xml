<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Swzxsyh</title>
  
  <subtitle>--学习笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-14T07:00:25.080Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>就业班学习笔记（七十一）</title>
    <link href="http://yoursite.com/2020/06/13/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%E5%8D%81%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2020/06/13/就业班学习笔记（七十一）/</id>
    <published>2020-06-13T06:16:37.000Z</published>
    <updated>2020-06-14T07:00:25.080Z</updated>
    
    <content type="html"><![CDATA[<ul><li>掌握图片上传</li><li>掌握SpringMVC的统一异常处理</li><li>了解SpringMVC拦截器</li><li>掌握ssm整合（SpringMVC+spring+mybatis)   </li></ul><a id="more"></a><h1 id="一-SpringMVC-实现文件上传"><a href="#一-SpringMVC-实现文件上传" class="headerlink" title="一.SpringMVC 实现文件上传"></a>一.SpringMVC 实现文件上传</h1><h4 id="1-1-目标"><a href="#1-1-目标" class="headerlink" title="1.1 目标"></a>1.1 目标</h4><p>掌握文件上传的要求</p><h4 id="1-2-学习路径"><a href="#1-2-学习路径" class="headerlink" title="1.2 学习路径"></a>1.2 学习路径</h4><ul><li>文件上传概述</li><li>文件上传要求</li><li>常见的文件上传jar包和框架</li></ul><h4 id="1-3-讲解"><a href="#1-3-讲解" class="headerlink" title="1.3 讲解"></a>1.3 讲解</h4><h5 id="1-3-1-文件上传概述"><a href="#1-3-1-文件上传概述" class="headerlink" title="1.3.1 文件上传概述"></a>1.3.1 文件上传概述</h5><p>就是把客户端(浏览器)的文件保存一份到服务器(参考各类云盘)</p><h5 id="1-3-2-文件上传要求"><a href="#1-3-2-文件上传要求" class="headerlink" title="1.3.2 文件上传要求"></a>1.3.2 文件上传要求</h5><h6 id="1-3-2-1-浏览器端要求-通用浏览器的要求"><a href="#1-3-2-1-浏览器端要求-通用浏览器的要求" class="headerlink" title="1.3.2.1 浏览器端要求(通用浏览器的要求)"></a>1.3.2.1 浏览器端要求(通用浏览器的要求)</h6><ul><li>表单提交方式 post      </li><li>提供文件上传框(组件)  input type=”file”</li><li>表单的enctype属性必须为 multipart/form-data</li></ul><h6 id="1-3-2-2-服务器端要求"><a href="#1-3-2-2-服务器端要求" class="headerlink" title="1.3.2.2 服务器端要求"></a>1.3.2.2 服务器端要求</h6><p>要使用request.getInputStream()来获取数据</p><p><strong>注意:</strong>若表单使用了 multipart/form-data ,使用原生request.getParameter()去获取参数的时候都为null</p><blockquote><p>通常借助第三方组件(jar, 框架 SpringMVC)实现文件上传.</p></blockquote><h6 id="1-3-2-3-常见的文件上传jar包和框架"><a href="#1-3-2-3-常见的文件上传jar包和框架" class="headerlink" title="1.3.2.3 常见的文件上传jar包和框架"></a>1.3.2.3 常见的文件上传jar包和框架</h6><ul><li>serlvet3.0 </li><li>commons-fileupload :  apache出品的一款专门处理文件上传的工具包 </li><li>struts2(底层封装了:commons-fileupload)   </li><li>SpringMVC(底层封装了:commons-fileupload)   </li></ul><h6 id="1-3-2-4-小结"><a href="#1-3-2-4-小结" class="headerlink" title="1.3.2.4 小结"></a>1.3.2.4 小结</h6><ul><li>文件上传可以上传文件，或sql文件直接导入数据等等</li><li>前端三要素 form post, encpt=multipart/form-data, input type=file</li><li>原生的api处理复杂，使用commons-fileupload可以帮我们简化了开发</li></ul><h3 id="案例：SpringMVC-传统方式文件上传"><a href="#案例：SpringMVC-传统方式文件上传" class="headerlink" title="案例：SpringMVC 传统方式文件上传"></a>案例：SpringMVC 传统方式文件上传</h3><h4 id="1-4-需求"><a href="#1-4-需求" class="headerlink" title="1.4 需求"></a>1.4 需求</h4><p>使用springmvc 完成传统方式文件上传 </p><h5 id="1-4-1-步骤"><a href="#1-4-1-步骤" class="headerlink" title="1.4.1 步骤"></a>1.4.1 步骤</h5><ul><li>创建Maven工厂，添加SpringMVC依赖</li><li>导入commons-fileupload坐标</li><li>在控制器的方法的形参里面定义和文件相关的变量 MultipartFile</li><li>存储到服务器</li><li>配置文件解析器 (commons-file)</li><li>在springmvc.xml配置文件解析器</li></ul><h5 id="1-4-2-实现"><a href="#1-4-2-实现" class="headerlink" title="1.4.2 实现"></a>1.4.2 实现</h5><ul><li><p>创建Maven工程,添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--springMVC核心--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--servlet--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--jsp--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--文件上传--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--前端核心控制器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--    启动时加载    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--  除jsp外的所有      --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置springmvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置spring创建容器时要扫描的包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置视图解析器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"viewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--   配置前缀后缀     --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/pages/"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 处理请求返回json字符串的中文乱码问题 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 设置静态资源不过滤 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>导入Utils</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getUUIDName</span><span class="params">(String fileName)</span></span>&#123;</span><br><span class="line">    <span class="comment">//获取后缀名</span></span><br><span class="line">    <span class="keyword">int</span> index = fileName.lastIndexOf(<span class="string">"."</span>);</span><br><span class="line">    <span class="keyword">if</span>(index==-<span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> UUID.randomUUID().toString().replace(<span class="string">"-"</span>, <span class="string">""</span>).toUpperCase();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> UUID.randomUUID().toString().replace(<span class="string">"-"</span>, <span class="string">""</span>).toUpperCase()+fileName.substring(index);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getDir</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String s=<span class="string">"0123456789ABCDEF"</span>;</span><br><span class="line">    Random r = <span class="keyword">new</span> Random();</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"/"</span>+s.charAt(r.nextInt(<span class="number">16</span>))+<span class="string">"/"</span>+s.charAt(r.nextInt(<span class="number">16</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建前端index.jsp页面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 要素：enctype ，method --&gt;</span><br><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/upload"</span> enctype=<span class="string">"multipart/form-data"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">  &lt;!-- 要素：type=<span class="string">"file"</span>  --&gt;</span><br><span class="line">  &lt;input type=<span class="string">"file"</span> name=<span class="string">"upLoadFile"</span>&gt;</span><br><span class="line">  &lt;input name=<span class="string">"desc"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Submit"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li><li><p>创建FileUploadController控制器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileInputController</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@RequestMapping</span>(<span class="string">"/upload"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">upload</span><span class="params">(HttpServletRequest req,MultipartFile upLoadFile,String desc)</span></span>&#123;</span><br><span class="line">    <span class="comment">//获取原名</span></span><br><span class="line">    String originalFilename = upLoadFile.getOriginalFilename();</span><br><span class="line">    <span class="comment">//通过UUID变为唯一</span></span><br><span class="line">    String uuidName = UploadUtils.getUUIDName(originalFilename);</span><br><span class="line">    <span class="comment">//获取文件真实存放路径</span></span><br><span class="line">    String realPath = req.getSession().getServletContext().getRealPath(<span class="string">"/upload"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成新存放目录结构</span></span><br><span class="line">    String dir = UploadUtils.getDir();</span><br><span class="line">    <span class="comment">//创建保存目录</span></span><br><span class="line">    File savePath = <span class="keyword">new</span> File(realPath, dir);</span><br><span class="line">    <span class="keyword">if</span> (!savePath.exists()) &#123;</span><br><span class="line">      savePath.mkdirs();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//保存文件</span></span><br><span class="line">    upLoadFile.transferTo(<span class="keyword">new</span> File(savePath, uuidName));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在springmvc.xml配置文件解析器 </p><p><strong>注意</strong>：</p><blockquote><p>文件上传的解析器 ==id 是固定的，不能起别的名称==，否则无法实现请求参数的绑定。（不光是文件，其他字段也将无法绑定） </p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置文件上传解析器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 设置上传文件的最大尺寸为 5MB --&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"5242880"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="1-4-3-小结"><a href="#1-4-3-小结" class="headerlink" title="1.4.3 小结"></a>1.4.3 小结</h5><ul><li>前端三要素 form post, encpt=multipart/form-data, input type=file</li><li>Controller使用MultipartFile接收文件，形参名称必须与 前端中的name 一样，严格大小写</li><li>配置使用commons-fileupload</li><li>分目录存储</li></ul><h3 id="案例：SpringMVC-跨服务器上传"><a href="#案例：SpringMVC-跨服务器上传" class="headerlink" title="案例：SpringMVC 跨服务器上传"></a>案例：SpringMVC 跨服务器上传</h3><h4 id="1-5-需求"><a href="#1-5-需求" class="headerlink" title="1.5 需求"></a>1.5 需求</h4><p>了解使用springmvc 跨服务器方式的文件上传 </p><h5 id="1-5-1-分析"><a href="#1-5-1-分析" class="headerlink" title="1.5.1 分析"></a>1.5.1 分析</h5><h5 id="1-5-2-分服务器的目的"><a href="#1-5-2-分服务器的目的" class="headerlink" title="1.5.2 分服务器的目的"></a>1.5.2 分服务器的目的</h5><p>服务器分工问题，以及数据安全问题，需要将数据存储到其他服务器，此处使用另一台Tomcat服务器作为数据接收服务器</p><blockquote><p>应用服务器：负责部署我们的应用 (Tomcat,JBOSS等)<br>数据库服务器：运行我们的数据库(Oracle小型机等)<br>缓存和消息服务器：负责处理大并发访问的缓存和消息(MQ等)<br>文件服务器：负责存储用户上传文件的服务器。  (Ceph等)</p></blockquote><h5 id="1-5-3-文件服务器步骤"><a href="#1-5-3-文件服务器步骤" class="headerlink" title="1.5.3 文件服务器步骤"></a>1.5.3 文件服务器步骤</h5><ul><li><p>复制一份Tomcat，并更改conf/web.xml为非只读</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.apache.catalina.servlets.DefaultServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>debug<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>0<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>readonly<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>listings<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建web工程文件服务器的应用(需2台Tomcat，因此需要更改端口)，布署到这个tomcat上来, 创建 upload目录</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">fileUploadServer</span><br><span class="line">├── pom.xml</span><br><span class="line">└── src</span><br><span class="line">    ├── main</span><br><span class="line">    │   ├── java</span><br><span class="line">    │   ├── resources</span><br><span class="line">    │   └── webapp</span><br><span class="line">    │       ├── WEB-INF</span><br><span class="line">    │       │   └── web.xml</span><br><span class="line">    │       └── upload</span><br><span class="line">    └── test</span><br><span class="line">        └── java</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-5-4-实现-使用传统方式文件上传案例"><a href="#1-5-4-实现-使用传统方式文件上传案例" class="headerlink" title="1.5.4 实现(使用传统方式文件上传案例)"></a>1.5.4 实现(使用传统方式文件上传案例)</h5><ul><li><p>添加添jersey依赖 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.jersey<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jersey-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.jersey<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jersey-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>前端页面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 要素：enctype ，method --&gt;</span><br><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/uploadToRemote"</span> enctype=<span class="string">"multipart/form-data"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">  &lt;!-- 要素：type=<span class="string">"file"</span>  --&gt;</span><br><span class="line">  &lt;input type=<span class="string">"file"</span> name=<span class="string">"upLoadFile"</span>&gt;</span><br><span class="line">  &lt;input name=<span class="string">"desc"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Submit"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li><li><p>FileUploadController控制器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/uploadToRemote"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">uploadToRemote</span><span class="params">(HttpServletRequest req, MultipartFile upLoadFile, String desc)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    System.out.println(desc);</span><br><span class="line">    <span class="comment">//获取原名</span></span><br><span class="line">    String originalFilename = upLoadFile.getOriginalFilename();</span><br><span class="line">    <span class="comment">//通过UUID变为唯一</span></span><br><span class="line">    String uuidName = UploadUtils.getUUIDName(originalFilename);</span><br><span class="line">    <span class="comment">// 文件服务器的连接</span></span><br><span class="line">    String url = <span class="string">"http://localhost:8081/fileUploadServer/upload/"</span>;</span><br><span class="line">    <span class="comment">// jersey客户端，需要选择jersey的Client</span></span><br><span class="line">    Client client = Client.create();</span><br><span class="line">    <span class="comment">// 定位存储的目录, 服务器的地址</span></span><br><span class="line">    WebResource resource = client.resource(url + uuidName);</span><br><span class="line">    <span class="comment">// 上传</span></span><br><span class="line">    resource.put(upLoadFile.getBytes());</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-6-小结"><a href="#1-6-小结" class="headerlink" title="1.6 小结"></a>1.6 小结</h4><ul><li><p>为什么要分服务器存储</p><ul><li>安全</li><li>维护方便</li><li>服务器性能充分的利用</li></ul></li><li><p>准备文件服务器</p><ul><li>准备文件服务器， 复制一份tomcat, 修改conf/web.xml 更改只读 为 false</li><li>创建web工程文件服务器的应用，布署(更改端口), 创建 upload目录</li></ul></li><li><p>修改文件上传代码</p><p>使用jersey，上传文件</p></li></ul><h1 id="二-SpringMVC-中的异常处理"><a href="#二-SpringMVC-中的异常处理" class="headerlink" title="二.SpringMVC 中的异常处理"></a>二.SpringMVC 中的异常处理</h1><h4 id="2-1-目标"><a href="#2-1-目标" class="headerlink" title="2.1 目标"></a>2.1 目标</h4><p>掌握SpringMVC的统一异常处理</p><h4 id="2-2-分析"><a href="#2-2-分析" class="headerlink" title="2.2 分析"></a>2.2 分析</h4><ul><li><p>系统中异常包括两类</p><ul><li>预期异常：通过捕获异常从而获取异常信息运行时异常</li><li>RuntimeException：主要通过规范代码开发、测试通过手段减少运行时异常的发生。</li></ul></li><li><p>目前Server中的MVC层均throws Exception，通过SpringMVC前端控制器交由异常处理器进行异常处理</p></li><li><p>SpringMVC在处理请求过程中出现异常信息交由异常处理器进行处理，自定义异常处理器可以实现一个系统的异常处理逻辑。</p></li><li><p>步骤</p><ul><li>自定义异常类 已知错误。作用：作为已知不符合业务逻辑的继续执行</li><li>创建异常处理类实现HandlerExceptionResolver接口</li><li>配置让springMVC使用这个接口</li><li>测试</li></ul></li></ul><h4 id="2-3-代码实现"><a href="#2-3-代码实现" class="headerlink" title="2.3 代码实现"></a>2.3 代码实现</h4><h5 id="2-3-1-自定义异常类"><a href="#2-3-1-自定义异常类" class="headerlink" title="2.3.1 自定义异常类"></a>2.3.1 自定义异常类</h5><ul><li><p>目的: 统一的管理异常, 方便统一管理错误提示语</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自定义异常类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">SysException</span><span class="params">(String msg)</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(msg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-3-2-自定义异常处理器"><a href="#2-3-2-自定义异常处理器" class="headerlink" title="2.3.2 自定义异常处理器"></a>2.3.2 自定义异常处理器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//全局异常处理</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysExceptionResolver</span> <span class="keyword">implements</span> <span class="title">HandlerExceptionResolver</span> </span>&#123;</span><br><span class="line">    <span class="comment">//处理controller往上抛的异常</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">resolveException</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> </span>&#123;</span><br><span class="line">        ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 对已知道的异常，只要提示信息</span></span><br><span class="line">        String message=<span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ex <span class="keyword">instanceof</span> SysException)&#123;</span><br><span class="line">            SysException sysException = (SysException) ex;</span><br><span class="line">            <span class="comment">// 自己报错的信息</span></span><br><span class="line">             message = ex.getMessage();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 对未知的异常，包装下再返回给页面</span></span><br><span class="line">            message=<span class="string">"Error,Please Contact Administrator"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回给前端的提示信息</span></span><br><span class="line">        modelAndView.addObject(<span class="string">"message"</span>,message);</span><br><span class="line">        modelAndView.setViewName(<span class="string">"error"</span>);</span><br><span class="line"><span class="comment">//        ex.printStackTrace();</span></span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-3-3-配置异常处理器"><a href="#2-3-3-配置异常处理器" class="headerlink" title="2.3.3 配置异常处理器"></a>2.3.3 配置异常处理器</h5><ul><li><p>springmvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--  注册全局异常处理器 由springmvc自动装载 annotation-driven  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sysExceptionResolver"</span> <span class="attr">class</span>=<span class="string">"com.itheima.exception.SysExceptionResolver"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="2-3-4-小结"><a href="#2-3-4-小结" class="headerlink" title="2.3.4 小结"></a>2.3.4 小结</h5><ul><li>自定义异常：终止已经不符合业务逻辑的继续执行，反馈自定义提示页面</li><li>自定义异常继承RuntimeException</li><li>全局异常处理器 实现HandlerExceptionResolver接口，对异常封装处理</li></ul><h4 id="2-4-扩展异常处理"><a href="#2-4-扩展异常处理" class="headerlink" title="2.4 扩展异常处理"></a>2.4 扩展异常处理</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyExceptionHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ExceptionHandler 获取的是哪种异常，使用这个方法来处理  catch</span></span><br><span class="line"><span class="comment">     * 参数：捕获的异常, 如果运行时抛出的异常与它不匹配，则不会调用这个方法，根据异常的类型来捕获，遵循从小到大</span></span><br><span class="line"><span class="comment">     * model: 数据模型，作用：传递数据给jsp页面</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(Exception<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">String</span> <span class="title">handleException</span>(<span class="title">Exception</span> <span class="title">exception</span>, <span class="title">Model</span> <span class="title">model</span>)</span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"message"</span>,<span class="string">"Unknown Error"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//数字异常</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(ArithmeticException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">String</span> <span class="title">handleArithmeticException</span>(<span class="title">ArithmeticException</span> <span class="title">arithmeticException</span>,<span class="title">Model</span> <span class="title">model</span>)</span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">"message"</span>,<span class="string">"Math Error"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三-SpringMVC-中的拦截器"><a href="#三-SpringMVC-中的拦截器" class="headerlink" title="三.SpringMVC 中的拦截器"></a>三.SpringMVC 中的拦截器</h1><h4 id="3-1-目标"><a href="#3-1-目标" class="headerlink" title="3.1 目标"></a>3.1 目标</h4><p>掌握SpringMVC基本使用</p><h5 id="3-1-1-学习路径"><a href="#3-1-1-学习路径" class="headerlink" title="3.1.1 学习路径"></a>3.1.1 学习路径</h5><ul><li>拦截器概述 </li><li>自定义拦截器入门</li></ul><h5 id="3-1-2-讲解"><a href="#3-1-2-讲解" class="headerlink" title="3.1.2 讲解"></a>3.1.2 讲解</h5><h5 id="3-1-3-拦截器概述"><a href="#3-1-3-拦截器概述" class="headerlink" title="3.1.3 拦截器概述"></a>3.1.3 拦截器概述</h5><blockquote><p>Spring MVC 的处理器拦截器类似于 Servlet 开发中的过滤器 Filter，用于对处理器(自己编写的Controller)进行预处理和后处理。用户可以自己定义一些拦截器来实现特定的功能。</p><p>谈到拦截器，还要向大家提一个词——拦截器链（Interceptor Chain）。拦截器链就是将拦截器按一定的顺序联结成一条链。在访问被拦截的方法或字段时，拦截器链中的拦截器就会按其之前定义的顺序被调用。</p></blockquote><ul><li><p>它和过滤器是有几分相似，但也有区别</p><table><thead><tr><th>类别</th><th>使用范围</th><th>拦截范围</th></tr></thead><tbody><tr><td>拦截器</td><td>SpringMVC项目</td><td>只会拦截访问的控制器方法, 可以使用spring容器</td></tr><tr><td>过滤器</td><td>任何web项目</td><td>任何资源(servlet,控制器,jsp,html等)， 无法使用Spring容器</td></tr></tbody></table></li></ul><h5 id="3-1-4-自定义拦截器入门"><a href="#3-1-4-自定义拦截器入门" class="headerlink" title="3.1.4 自定义拦截器入门"></a>3.1.4 自定义拦截器入门</h5><ul><li><p>编写个一测试用的ControllerDemo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ControllerDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/demo01"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">demo01</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Demo01 By ControllerDemo"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写一个普通类HandlerInterceptorDemo1实现 HandlerInterceptor 接口 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HandlerInterceptorDemo1</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span></span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 前置拦截, 在调用controller的方法前执行</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true: 放行， false：阻止</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// response 可以重定向， 用户登陆认证(session中不存)</span></span><br><span class="line">    System.out.println(<span class="string">"HandlerInterceptorDemo1.preHandle 执行了"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在springmvc.xml配置拦截器 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置拦截器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--        interceptor 一个拦截器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--用于指定拦截的路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/**"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"intercepter01"</span> <span class="attr">class</span>=<span class="string">"com.itheima.interceptor.HandlerInterceptorDemo1"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="3-1-5-小结"><a href="#3-1-5-小结" class="headerlink" title="3.1.5 小结"></a>3.1.5 小结</h5><ul><li>拦截器，在进入 controller之前拦截。</li><li>实现HandlerInterceptor接口, preHandler方法， 返回true则可以调用controller方法，false则不会调用controller</li><li>配置springmvc.xml</li></ul><h4 id="3-2-目标-进阶版本"><a href="#3-2-目标-进阶版本" class="headerlink" title="3.2 目标(进阶版本)"></a>3.2 目标(进阶版本)</h4><p>掌握自定义拦截器的高级使用</p><h5 id="3-2-1-学习路径"><a href="#3-2-1-学习路径" class="headerlink" title="3.2.1 学习路径"></a>3.2.1 学习路径</h5><ul><li>拦截器的放行</li><li>拦截后跳转</li><li>拦截器的路径</li><li>拦截器的其它方法</li><li>多个拦截器执行顺序</li></ul><h5 id="3-2-2-讲解"><a href="#3-2-2-讲解" class="headerlink" title="3.2.2 讲解"></a>3.2.2 讲解</h5><h5 id="3-2-3-拦截器的放行"><a href="#3-2-3-拦截器的放行" class="headerlink" title="3.2.3 拦截器的放行"></a>3.2.3 拦截器的放行</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HandlerInterceptorDemo1</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="comment">//在达到目标方法之前进行拦截——preHandle</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">"HandlerInterceptorDemo1"</span>);</span><br><span class="line">    <span class="comment">//true放行，false拦截，源码默认放行</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-2-4-拦截后跳转"><a href="#3-2-4-拦截后跳转" class="headerlink" title="3.2.4 拦截后跳转"></a>3.2.4 拦截后跳转</h5><ul><li><p>拦截器的处理结果</p><ul><li>放行：  如果后面还有拦截器就执行下一个拦截器，如果后面没有了拦截器，就执行Controller方法</li><li>拦截： 但是注意，拦截后也需要返回到一个具体的结果(页面,Controller)</li></ul></li><li><p>在preHandle方法返回false,通过request进行转发,或者通过response对象进行重定向,输出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Intercepter01</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//在达到目标方法之前执行(拦截的方法)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"preHandle 执行了..."</span>);</span><br><span class="line">        <span class="comment">//转发到拦截后的页面</span></span><br><span class="line">        <span class="comment">//request.getRequestDispatcher("/intercepter01.jsp").forward(request,response);</span></span><br><span class="line">        <span class="comment">//转发到controller</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">"/demo01/fun02"</span>).forward(request,response);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;<span class="comment">//返回true放行, 返回false拦截</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-2-5-拦截器的路径"><a href="#3-2-5-拦截器的路径" class="headerlink" title="3.2.5 拦截器的路径"></a>3.2.5 拦截器的路径</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;mvc:interceptors&gt;</span><br><span class="line">  &lt;mvc:interceptor&gt;</span><br><span class="line">    &lt;!-- 指定拦截器  拦截  路径 --&gt;</span><br><span class="line">    &lt;mvc:mapping path=<span class="string">"/**"</span>/&gt;</span><br><span class="line">    &lt;!-- 指定拦截器  放行  路径 --&gt;</span><br><span class="line">    &lt;mvc:exclude-mapping path=<span class="string">"/demo/fun01"</span>/&gt;</span><br><span class="line">      &lt;bean id=<span class="string">"interceptorDemo1"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.itheima.interceptor.HandlerInterceptorDemo1"</span>/&gt;</span><br><span class="line">   &lt;/mvc:interceptor&gt;</span><br><span class="line">&lt;/mvc:interceptors&gt;</span><br></pre></td></tr></table></figure><h5 id="3-2-6-拦截器的其它方法"><a href="#3-2-6-拦截器的其它方法" class="headerlink" title="3.2.6 拦截器的其它方法"></a>3.2.6 拦截器的其它方法</h5><ul><li><p>afterCompletion  在目标方法完成视图层渲染后执行。</p></li><li><p>postHandle  在被拦截的目标方法执行完毕获得了返回值后执行。</p></li><li><p>preHandle 被拦截的目标方法执行之前执行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Intercepter01</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="comment">//在达到目标方法之前执行(拦截的方法)</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"preHandle 执行了..."</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;<span class="comment">//返回true放行, 返回false拦截</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="comment">//在目标方法执行完成之后,完成页面渲染之前执行</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, @Nullable ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"postHandle 执行了..."</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="comment">//完成页面渲染之后执行</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, @Nullable Exception ex)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"afterCompletion 执行了..."</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-2-7-多个拦截器执行顺序"><a href="#3-2-7-多个拦截器执行顺序" class="headerlink" title="3.2.7 多个拦截器执行顺序"></a>3.2.7 多个拦截器执行顺序</h5><ul><li><p>配置顺序</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置拦截器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--用于指定拦截的路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/**"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--用于指定忽略(不拦截的路径)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">"/demo01/fun02"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"intercepter01"</span> <span class="attr">class</span>=<span class="string">"com.itheima.web.interceptor.Intercepter01"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--用于指定拦截的路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/**"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--用于指定忽略(不拦截的路径)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">"/demo01/fun02"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"intercepter02"</span> <span class="attr">class</span>=<span class="string">"com.itheima.web.interceptor.Intercepter02"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="3-2-8-小结"><a href="#3-2-8-小结" class="headerlink" title="3.2.8 小结"></a>3.2.8 小结</h5><ul><li>拦截器是一个链式模式</li><li>只有preHandler方法才有返回true 放行，false拦截</li><li>拦截器的跳转 return false, request转发，response重定向</li><li>preHandle-&gt;postHandle-&gt;afterCompletion</li><li>多个执行的顺序与配置文件的顺序有关</li></ul><h1 id="四-SSM整合环境的准备"><a href="#四-SSM整合环境的准备" class="headerlink" title="四.SSM整合环境的准备"></a>四.SSM整合环境的准备</h1><h4 id="4-1-目标"><a href="#4-1-目标" class="headerlink" title="4.1 目标"></a>4.1 目标</h4><p>能够独立准备SSM环境</p><h4 id="4-2-步骤"><a href="#4-2-步骤" class="headerlink" title="4.2 步骤"></a>4.2 步骤</h4><ul><li>创建数据库和表</li><li>创建Maven工程(war)<ul><li>导入坐标</li><li>创建实体类</li><li>拷贝log4J日志到工程</li></ul></li></ul><h4 id="4-3-讲解"><a href="#4-3-讲解" class="headerlink" title="4.3 讲解"></a>4.3 讲解</h4><h5 id="4-3-1-创建数据库和表结构"><a href="#4-3-1-创建数据库和表结构" class="headerlink" title="4.3.1 创建数据库和表结构"></a>4.3.1 创建数据库和表结构</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">create database ssm;</span><br><span class="line">use ssm;</span><br><span class="line">create table account(</span><br><span class="line">  id int primary key auto_increment,</span><br><span class="line">  name varchar(40),</span><br><span class="line">  money double</span><br><span class="line">)character set utf8 collate utf8_general_ci;</span><br><span class="line"></span><br><span class="line">insert into account(name,money) values(&#39;zs&#39;,1000);</span><br><span class="line">insert into account(name,money) values(&#39;ls&#39;,1000);</span><br><span class="line">insert into account(name,money) values(&#39;ww&#39;,1000);</span><br></pre></td></tr></table></figure><h5 id="4-3-2-创建Maven工程"><a href="#4-3-2-创建Maven工程" class="headerlink" title="4.3.2 创建Maven工程"></a>4.3.2 创建Maven工程</h5><ul><li><p>创建web项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">├── SpringMVC_Day02_04_ssm.iml</span><br><span class="line">├── pom.xml</span><br><span class="line">├── src</span><br><span class="line">│   ├── main</span><br><span class="line">│   │   ├── java</span><br><span class="line">│   │   │   └── com</span><br><span class="line">│   │   │       └── itheima</span><br><span class="line">│   │   │           └── dao</span><br><span class="line">│   │   │               └── AccountDao.java</span><br><span class="line">│   │   ├── resources</span><br><span class="line">│   │   │   └── log4j.properties</span><br><span class="line">│   │   └── webapp</span><br><span class="line">│   │       ├── WEB-INF</span><br><span class="line">│   │       │   └── web.xml</span><br><span class="line">│   │       └── index.jsp</span><br><span class="line">│   └── <span class="built_in">test</span></span><br><span class="line">│       └── java</span><br><span class="line">└── target</span><br></pre></td></tr></table></figure></li><li><p>导入坐标 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.0.2.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slf4j.version</span>&gt;</span>1.6.6<span class="tag">&lt;/<span class="name">slf4j.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- mysql8 驱动版本坐标 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis.version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">mybatis.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- log start --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- log end --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写实体类 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Integer id;</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">double</span> money;</span><br><span class="line">  <span class="comment">//省略getter/setter，toString</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>拷贝log4J配置文件到工程 </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##\u8bbe\u7f6e\u65e5\u5fd7\u8bb0\u5f55\u5230\u63a7\u5236\u53f0\u7684\u65b9\u5f0f</span></span><br><span class="line"><span class="meta">log4j.appender.std</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.std.Target</span>=<span class="string">System.out</span></span><br><span class="line"><span class="meta">log4j.appender.std.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.std.layout.ConversionPattern</span>=<span class="string">%d&#123;yyyy-MM-dd HH:mm:ss&#125; %5p %c&#123;1&#125;:%L - %m%n</span></span><br><span class="line"><span class="comment">##\u8bbe\u7f6e\u65e5\u5fd7\u8bb0\u5f55\u5230\u6587\u4ef6\u7684\u65b9\u5f0f</span></span><br><span class="line"><span class="meta">log4j.appender.file</span>=<span class="string">org.apache.log4j.FileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.file.File</span>=<span class="string">d:/mylog.log</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout.ConversionPattern</span>=<span class="string">%d&#123;ABSOLUTE&#125; %5p %c&#123;1&#125;:%L - %m%n</span></span><br><span class="line"><span class="comment">##\u65e5\u5fd7\u8f93\u51fa\u7684\u7ea7\u522b\uff0c\u4ee5\u53ca\u914d\u7f6e\u8bb0\u5f55\u65b9\u6848</span></span><br><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">debug,std</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="五-Spring整合SpringMVC"><a href="#五-Spring整合SpringMVC" class="headerlink" title="五.Spring整合SpringMVC"></a>五.Spring整合SpringMVC</h1><h4 id="5-1-目标-初始版本——SpringMVC独立运行"><a href="#5-1-目标-初始版本——SpringMVC独立运行" class="headerlink" title="5.1 目标(初始版本——SpringMVC独立运行)"></a>5.1 目标(初始版本——SpringMVC独立运行)</h4><h4 id="5-2-步骤"><a href="#5-2-步骤" class="headerlink" title="5.2 步骤"></a>5.2 步骤</h4><ul><li>创建AccountController, 定义方法 添加注解</li><li>创建springmvc.xml(开启包扫描, 注册视图解析器,忽略静态资源, 注解驱动)</li><li>配置web.xml(前端控制器, 编码过滤器)</li><li>测试</li></ul><h4 id="5-3-实现"><a href="#5-3-实现" class="headerlink" title="5.3 实现"></a>5.3 实现</h4><ul><li><p>创建AccountController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/account"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountController</span></span>&#123;</span><br><span class="line">  <span class="meta">@RequestMapping</span>(<span class="string">"/findAll"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Find All"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"list"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建springmvc.xml配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--开启包扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--   配置前缀后缀     --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/pages/"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置注解驱动支持--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">&lt;!--  静态资源过滤  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在web.xml里面配置前端控制器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!--编码过滤器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="5-4-小结"><a href="#5-4-小结" class="headerlink" title="5.4 小结"></a>5.4 小结</h4><ul><li>创建Controller, 创建方法 添加注解</li><li>创建springmvc.xml(开启包扫描, 注册视图解析器,忽略静态资源,开启注解驱动)</li><li>配置web.xml(前端控制器, 编码过滤器)</li></ul><h4 id="5-5-目标-进阶版本——注入业务层"><a href="#5-5-目标-进阶版本——注入业务层" class="headerlink" title="5.5 目标(进阶版本——注入业务层)"></a>5.5 目标(进阶版本——注入业务层)</h4><h4 id="5-6-步骤"><a href="#5-6-步骤" class="headerlink" title="5.6 步骤"></a>5.6 步骤</h4><ul><li>注册Service</li><li>在Controller里面注入Service</li></ul><h4 id="5-7-实现"><a href="#5-7-实现" class="headerlink" title="5.7 实现"></a>5.7 实现</h4><ul><li><p>编写AccountService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span></span>&#123;</span><br><span class="line">  <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写AccountServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span></span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Find All By AccountServiceImpl"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在AccountController调用AccountService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@Requestmapping</span>(<span class="string">"/account"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountController</span></span>&#123;</span><br><span class="line">  <span class="meta">@Autowired</span> AccountService accountService;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Requestmapping</span>(<span class="string">"/findAll"</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">"Find All By AccountServiceImpl"</span>);</span><br><span class="line">List&lt;Account&gt; list = accountService.findAll();</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"list"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="5-8-小结"><a href="#5-8-小结" class="headerlink" title="5.8 小结"></a>5.8 小结</h4><ul><li>创建业务接口与实现类</li><li>在实现类上加@Service 把交给spring容器管理</li><li>AccountController 注入进来 @Autowired, 调用业务方法</li></ul><h1 id="六-Spring整合MyBatis"><a href="#六-Spring整合MyBatis" class="headerlink" title="六.Spring整合MyBatis"></a>六.Spring整合MyBatis</h1><h4 id="6-1-目标-初始版本——MyBatis独立运行"><a href="#6-1-目标-初始版本——MyBatis独立运行" class="headerlink" title="6.1 目标(初始版本——MyBatis独立运行)"></a>6.1 目标(初始版本——MyBatis独立运行)</h4><h5 id="6-1-1-步骤"><a href="#6-1-1-步骤" class="headerlink" title="6.1.1 步骤"></a>6.1.1 步骤</h5><ul><li>创建Dao接口, 定义方法, 添加注解</li><li>创建SqlMapConfig.xml</li><li>编写Java代码测试</li></ul><h5 id="6-1-2-实现"><a href="#6-1-2-实现" class="headerlink" title="6.1.2 实现"></a>6.1.2 实现</h5><ul><li><p>创建AccountDao.java, 添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span></span>&#123;</span><br><span class="line">  <span class="meta">@Select</span>(<span class="string">"SELECT * FROM account"</span>)</span><br><span class="line"> <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写MyBatis核心配置文件:SqlMapConfig.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/ssm"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123456"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.itheima.dao"</span>&gt;</span><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试运行结果 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DaoTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DaoTest</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">// 创建工厂对象</span></span><br><span class="line">    SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>));</span><br><span class="line"></span><br><span class="line">    SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line"></span><br><span class="line">    AccountDao accountDao = sqlSession.getMapper(AccountDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Account&gt; list = accountDao.findAll();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Account account : list) &#123;</span><br><span class="line">      System.out.println(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sqlSession.close();</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="6-1-3-小结"><a href="#6-1-3-小结" class="headerlink" title="6.1.3 小结"></a>6.1.3 小结</h5><ul><li>创建Dao接口, 定义方法, 添加注解</li><li>创建SqlMapConfig.xml</li><li>编写Java测试代码</li></ul><h4 id="6-2-目标-进阶版本——注解版本"><a href="#6-2-目标-进阶版本——注解版本" class="headerlink" title="6.2 目标(进阶版本——注解版本)"></a>6.2 目标(进阶版本——注解版本)</h4><h5 id="6-2-1-分析"><a href="#6-2-1-分析" class="headerlink" title="6.2.1 分析"></a>6.2.1 分析</h5><table><thead><tr><th>问题</th><th>优化方式</th></tr></thead><tbody><tr><td>连接池还是用的MyBatis自带的</td><td>用第三方的连接池,通过Spring管理</td></tr><tr><td>SqlSessionFactory还是我们自己构建的</td><td>通过Spring管理SqlSessionFactory</td></tr><tr><td>扫描Dao还是由MyBatis加载的</td><td>通过Spring扫描Dao</td></tr><tr><td>事务还是由MyBatis管理</td><td>通过Spring管理事务</td></tr></tbody></table><h5 id="6-2-2-步骤"><a href="#6-2-2-步骤" class="headerlink" title="6.2.2 步骤"></a>6.2.2 步骤</h5><ul><li>创建applicationContext.xml</li><li>注册DataSource(配置四个基本项)</li><li>注册SqlSessionFactory</li><li>扫描Dao接口</li><li>配置事务</li><li>加载applicationContext.xml</li></ul><h5 id="6-2-3-实现"><a href="#6-2-3-实现" class="headerlink" title="6.2.3 实现"></a>6.2.3 实现</h5><ul><li>把SqlSessionFactory交给Spring管理,也就意味着把 mybatis 配置文件（SqlMapConfig.xml）中内容配置到 spring 配置文件中同时，把 mybatis 配置文件的内容清掉。 </li><li>使用Spring管理事务</li></ul><h4 id="6-2-3-1-Spring-接管MyBatis的Session工厂"><a href="#6-2-3-1-Spring-接管MyBatis的Session工厂" class="headerlink" title="6.2.3.1 Spring 接管MyBatis的Session工厂"></a>6.2.3.1 Spring 接管MyBatis的Session工厂</h4><ul><li><p>创建applicationContext.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--  数据源  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/ssm"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  sqlsessionFactory交给spring来创建  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  扫描dao接口 dao已经进入spring 容器了  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.itheima.dao"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>:</p><p>由于我们使用的是代理 Dao 的模式， Dao 具体实现类由 MyBatis 使用代理方式创建，所以此时 mybatis配置文件不能删。</p></blockquote></li></ul><h5 id="6-2-3-2-配置-spring-的事务"><a href="#6-2-3-2-配置-spring-的事务" class="headerlink" title="6.2.3.2 配置 spring 的事务"></a>6.2.3.2 配置 spring 的事务</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--  事务管理器  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  注解声明式事务  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"advice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"add*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">rollback-for</span>=<span class="string">"java.lang.Exception"</span> <span class="attr">isolation</span>=<span class="string">"DEFAULT"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"save*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">rollback-for</span>=<span class="string">"java.lang.Exception"</span> <span class="attr">isolation</span>=<span class="string">"DEFAULT"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"update*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">rollback-for</span>=<span class="string">"java.lang.Exception"</span> <span class="attr">isolation</span>=<span class="string">"DEFAULT"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"delete*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">rollback-for</span>=<span class="string">"java.lang.Exception"</span> <span class="attr">isolation</span>=<span class="string">"DEFAULT"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    read-only: true 不需要事务        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  切面  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"mypoint"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.itheima.service..*.*(..))"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"advice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"mypoint"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="6-2-3-3-加载applicationContext-xml"><a href="#6-2-3-3-加载applicationContext-xml" class="headerlink" title="6.2.3.3 加载applicationContext.xml"></a>6.2.3.3 加载applicationContext.xml</h5><ul><li><p>方式一:直接把applicationContext.xml里面的配置定义在springmvc.xml</p></li><li><p>方式二:更改名称，用通配符导入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--初始化参数:加载配置文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>方式三: 在springmvc.xml 引入applicationContext.xml</p><p>applicationContext.xml已经写完了, 但是发现并没有被加载,也就意味着Spring整合MyBatis的部分并没有生效. 其实我们在Spring整合SpringMVC时候, 当服务器启动的时候已经加载过springmvc.xml, spring容器也就会被初始化. 我们可以通过<strong>import标签</strong>把applicationContext.xml导入到springmvc.xml中一起加载. </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:applicationContext.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">import</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="6-2-3-4-测试SSM整合结果"><a href="#6-2-3-4-测试SSM整合结果" class="headerlink" title="6.2.3.4 测试SSM整合结果"></a>6.2.3.4 测试SSM整合结果</h5><h5 id="6-2-3-4-1-查询所有展示页面"><a href="#6-2-3-4-1-查询所有展示页面" class="headerlink" title="6.2.3.4.1 查询所有展示页面"></a>6.2.3.4.1 查询所有展示页面</h5><ul><li><p>AccountController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@Requestmapping</span>(<span class="string">"/account"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountController</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> AccountService accountService;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Requestmapping</span>(<span class="string">"/findAll"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">findAll</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">List&lt;Account&gt; list = accountService.findAll();</span><br><span class="line">    model.addAttribute(<span class="string">"list"</span>,list)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"list"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>AccountServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span></span>&#123;</span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> accountDao.findAll();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>AccountDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@Select</span>(<span class="string">"SELECT * FROM account"</span>)</span><br><span class="line">  <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>前端list.jsp页面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;ID&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;Name&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;Money&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">      &lt;c:forEach items=<span class="string">"$&#123;list&#125;"</span> <span class="keyword">var</span>=<span class="string">"account"</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">          &lt;td&gt;$&#123;account.id&#125;&lt;/td&gt;</span><br><span class="line">          &lt;td&gt;$&#123;account.name&#125;&lt;/td&gt;</span><br><span class="line">          &lt;td&gt;$&#123;account.money&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">      &lt;/c:forEach&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h5 id="6-2-3-4-2-添加账户"><a href="#6-2-3-4-2-添加账户" class="headerlink" title="6.2.3.4.2 添加账户"></a>6.2.3.4.2 添加账户</h5><ul><li><p>index.jsp页面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/account/add"</span>&gt;</span><br><span class="line">    Name:&lt;input name=<span class="string">"name"</span>&gt;</span><br><span class="line">    Money&lt;input name=<span class="string">"money"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Submit"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li><li><p>AccountController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Requestmapping</span>(<span class="string">"/add"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">(Account account)</span></span>&#123;</span><br><span class="line">  accountService.add(account);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"redirect:/account/findAll"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>AccountService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span></span>&#123;</span><br><span class="line">  <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(Account account)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>AccountServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Account account)</span></span>&#123;</span><br><span class="line">  accountDao.add(account);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>AccountDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Insert</span>(<span class="string">"INSERT INTO account(name,money) VALUES(#&#123;name&#125;,#&#123;money&#125;)"</span>)</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(Account account)</span></span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="6-2-4-总结"><a href="#6-2-4-总结" class="headerlink" title="6.2.4 总结"></a>6.2.4 总结</h4><p><strong>SpringMVC</strong></p><ul><li>创建Controller, @RequestMapping, @Controller</li><li>springmvc.xml<ul><li>扫controller</li><li>视图解析器</li><li>资源过滤</li><li>注解驱动</li></ul></li><li>web.xml<ul><li>编码过滤器 filter CharacterEncodingFilter</li><li>前端核心控制器  DispatcherServlet</li></ul></li></ul><p><strong>整合spring业务注入</strong></p><ul><li>创建service接口与实现类</li><li>实现类上加@Service</li><li>Controller通过@Autowired注入业务，controller中的方法，调用业务层</li></ul><p><strong>初级版本(MyBatis独立运行)</strong></p><ul><li>创建dao接口 注解方法</li><li>创建SqlMapConfig.xml 配置数据源，扫包</li><li>测试</li></ul><p><strong>spring整合mybatis</strong></p><ul><li>创建applicationContext.xml</li><li>注册DataSource(配置四个基本项)</li><li>注册SqlSessionFactory</li><li>扫描Dao接口</li><li>配置事务 advice aop, tx:annotation-driven</li></ul><p>注意：</p><blockquote><p>applicationContext.xml导入到springmvc.xml</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;掌握图片上传&lt;/li&gt;
&lt;li&gt;掌握SpringMVC的统一异常处理&lt;/li&gt;
&lt;li&gt;了解SpringMVC拦截器&lt;/li&gt;
&lt;li&gt;掌握ssm整合（SpringMVC+spring+mybatis)   &lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（七十）</title>
    <link href="http://yoursite.com/2020/06/12/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%E5%8D%81%EF%BC%89/"/>
    <id>http://yoursite.com/2020/06/12/就业班学习笔记（七十）/</id>
    <published>2020-06-12T03:41:08.000Z</published>
    <updated>2020-06-14T02:23:46.282Z</updated>
    
    <content type="html"><![CDATA[<ul><li>介绍SpringMVC框架</li><li>能够实现SpringMVC的环境搭建</li><li>掌握RequestMapping的使用</li><li>掌握SpringMVC的参数绑定</li><li>掌握SpringMVC的自定义类型转换器的使用</li><li>掌握SpringMVC的常用注解</li><li>掌握PathVariable注解</li><li>掌握Controller的返回值使用</li><li>掌握Controller中的转发和重定向使用</li><li>掌握SpringMVC与json交互</li></ul><a id="more"></a><h1 id="一-SpringMVC介绍"><a href="#一-SpringMVC介绍" class="headerlink" title="一.SpringMVC介绍"></a>一.SpringMVC介绍</h1><h2 id="知识点-SpringMVC概述"><a href="#知识点-SpringMVC概述" class="headerlink" title="知识点-SpringMVC概述"></a>知识点-SpringMVC概述</h2><h4 id="1-1-目标"><a href="#1-1-目标" class="headerlink" title="1.1 目标"></a>1.1 目标</h4><p>介绍SpringMVC框架</p><h4 id="1-2-路径"><a href="#1-2-路径" class="headerlink" title="1.2 路径"></a>1.2 路径</h4><p>三层架构(SpringMVC在三层架构的位置)</p><p>什么是SpringMVC</p><p>SpringMVC 的优点</p><h4 id="1-3-讲解"><a href="#1-3-讲解" class="headerlink" title="1.3 讲解"></a>1.3 讲解</h4><h5 id="1-3-1-三层架构"><a href="#1-3-1-三层架构" class="headerlink" title="1.3.1 三层架构"></a>1.3.1 三层架构</h5><p>Spring：IOC控制反转 和 AOP切面编程</p><table><thead><tr><th>浏览器</th><th></th><th>Web层</th><th>业务层</th><th>持久层</th></tr></thead><tbody><tr><td></td><td></td><td>Servlet,Filter,JSP</td><td>Spring</td><td>JDBC,DbUtils</td></tr><tr><td></td><td></td><td>SpringMVC</td><td>Spring</td><td>Hibername<br>MyBatis</td></tr><tr><td></td><td></td><td>获得请求参数<br>调用业务<br/>分发转向</td><td>对事务管理<br/>处理业务<br/>调用Dao</td><td>操作数据库</td></tr></tbody></table><p>服务器端程序，一般都基于两种形式，一种C/S架构程序，一种B/S架构程序. 使用Java语言基本上都是开发B/S架构的程序，B/S架构又分成了三层架构.</p><ul><li><p>三层架构</p><p>​    表现层：WEB层，用来和客户端进行数据交互的。表现层一般会采用MVC的设计模型</p><p>​    业务层：处理公司具体的业务逻辑的</p><p>​    持久层：用来操作数据库的</p></li><li><p>MVC全名是Model View Controller 模型视图控制器，每个部分各司其职。</p><p>​    Model：数据模型，JavaBean的类，用来进行数据封装。   </p><p>​    View：指JSP、HTML用来展示数据给用户                   </p><p>​    Controller：用来接收用户的请求，整个流程的控制器。用来进行数据校验等(Hibernate Validator)</p></li></ul><h4 id="1-3-2-什么是SpringMVC"><a href="#1-3-2-什么是SpringMVC" class="headerlink" title="1.3.2 什么是SpringMVC"></a>1.3.2 什么是SpringMVC</h4><ul><li><p>简单来说</p><p>SpringMVC 是一种基于Java实现的MVC设计模型的请求驱动类型的轻量级WEB层框架。</p></li><li><p>作用</p><p>参数绑定(获得请求参数)</p><p>调用业务</p><p>响应</p></li></ul><h4 id="1-3-3-SpringMVC-的优点"><a href="#1-3-3-SpringMVC-的优点" class="headerlink" title="1.3.3 SpringMVC 的优点"></a>1.3.3 SpringMVC 的优点</h4><ul><li>清晰的角色划分：<pre><code>前端控制器（DispatcherServlet）    请求到处理器映射（HandlerMapping）  处理器适配器（HandlerAdapter）  视图解析器（ViewResolver）  处理器或页面控制器（Controller）  验证器（ Validator）  命令对象（Command 请求参数绑定到的对象就叫命令对象）  表单对象（Form Object 提供给表单展示和提交到的对象就叫表单对象）。</code></pre></li><li>分工明确，而且扩展点相当灵活，可以很容易扩展，虽然几乎不需要。</li><li>由于命令对象就是一个 POJO，无需继承框架特定 API，可以使用命令对象直接作为业务对象。</li><li>和 Spring 其他框架无缝集成，是其它 Web 框架所不具备的。</li><li>可适配，通过 HandlerAdapter 可以支持任意的类作为处理器。</li><li>可定制性， HandlerMapping、 ViewResolver 等能够非常简单的定制。</li><li>功能强大的数据验证、格式化、绑定机制。</li><li>利用 Spring 提供的 Mock 对象能够非常简单的进行 Web 层单元测试。</li><li>本地化、主题的解析的支持，使我们更容易进行国际化和主题的切换。</li><li>强大的 JSP 标签库，使 JSP 编写更容易。</li><li>还有比如RESTful风格的支持、简单的文件上传、约定大于配置的契约式编程支持、基于注解的零配置支持等等。 </li></ul><h4 id="1-4-小结"><a href="#1-4-小结" class="headerlink" title="1.4.小结"></a>1.4.小结</h4><p>SpringMVC 位于web层</p><p>SpringMVC: Spring家族web层的一个框架,作用</p><ul><li>参数绑定(获得请求参数)</li><li>调用业务</li><li>响应</li></ul><h1 id="二-SpringMVC入门"><a href="#二-SpringMVC入门" class="headerlink" title="二.SpringMVC入门"></a>二.SpringMVC入门</h1><h4 id="2-1-需求"><a href="#2-1-需求" class="headerlink" title="2.1 需求"></a>2.1 需求</h4><p>浏览器请求服务器(SpringMVC), 响应成功页面</p><h4 id="2-2-分析"><a href="#2-2-分析" class="headerlink" title="2.2 分析"></a>2.2 分析</h4><ul><li>创建maven工程，引入spring-webmvc</li><li>创建Controller, 处理的请求</li><li>创建一个index.jsp页面</li><li>配置springmvc.xml</li><li>配置web.xml 启动时加springmvc.xml</li></ul><h4 id="2-3-实现"><a href="#2-3-实现" class="headerlink" title="2.3 实现"></a>2.3 实现</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">SpringMVC_Day01_01_quickstart</span><br><span class="line">├── SpringMVC_Day01_01_quickstart.iml</span><br><span class="line">├── pom.xml</span><br><span class="line">├── src</span><br><span class="line">│   ├── main</span><br><span class="line">│   │   ├── java</span><br><span class="line">│   │   │   └── com</span><br><span class="line">│   │   │       └── itheima</span><br><span class="line">│   │   │           └── web</span><br><span class="line">│   │   │               └── controller.java</span><br><span class="line">│   │   ├── resources</span><br><span class="line">│   │   │   └── springmvc.xml</span><br><span class="line">│   │   └── webapp</span><br><span class="line">│   │       ├── WEB-INF</span><br><span class="line">│   │       │   ├── pages</span><br><span class="line">│   │       │   │   └── success.jsp</span><br><span class="line">│   │       │   └── web.xml</span><br><span class="line">│   │       └── index.jsp</span><br><span class="line">│   └── <span class="built_in">test</span></span><br><span class="line">│       └── java</span><br><span class="line">└── target</span><br><span class="line">    ├── SpringMVC_Day01_01_quickstart-1.0-SNAPSHOT</span><br><span class="line">    │   ├── META-INF</span><br><span class="line">    │   │   └── MANIFEST.MF</span><br><span class="line">    │   ├── WEB-INF</span><br><span class="line">    │   │   ├── classes</span><br><span class="line">    │   │   │   ├── com</span><br><span class="line">    │   │   │   │   └── itheima</span><br><span class="line">    │   │   │   │       └── web</span><br><span class="line">    │   │   │   │           └── controller.class</span><br><span class="line">    │   │   │   └── springmvc.xml</span><br><span class="line">    │   │   ├── lib</span><br><span class="line">    │   │   ├── pages</span><br><span class="line">    │   │   │   └── success.jsp</span><br><span class="line">    │   │   └── web.xml</span><br><span class="line">    │   └── index.jsp</span><br><span class="line">    ├── classes</span><br><span class="line">    │   ├── com</span><br><span class="line">    │   │   └── itheima</span><br><span class="line">    │   │       └── web</span><br><span class="line">    │   │           └── controller.class</span><br><span class="line">    │   └── springmvc.xml</span><br><span class="line">    └── generated-sources</span><br><span class="line">        └── annotations</span><br></pre></td></tr></table></figure><h5 id="2-3-1-创建web项目-引入坐标"><a href="#2-3-1-创建web项目-引入坐标" class="headerlink" title="2.3.1 创建web项目,引入坐标"></a>2.3.1 创建web项目,引入坐标</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--springMVC核心--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--servlet--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--jsp--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--文件上传--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-3-2-编写Controller"><a href="#2-3-2-编写Controller" class="headerlink" title="2.3.2 编写Controller"></a>2.3.2 编写Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">controller</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/sayHello"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHelo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"quickStart_sayHello"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-3-3-编写SpringMVC的配置文件"><a href="#2-3-3-编写SpringMVC的配置文件" class="headerlink" title="2.3.3 编写SpringMVC的配置文件"></a>2.3.3 编写SpringMVC的配置文件</h5><ul><li><p>springmvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置spring创建容器时要扫描的包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"viewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--   配置前缀后缀     --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/pages/"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="2-3-4-在里面配置核心控制器"><a href="#2-3-4-在里面配置核心控制器" class="headerlink" title="2.3.4 在里面配置核心控制器"></a>2.3.4 在里面配置核心控制器</h5><ul><li><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"2.5"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置初始化参数，用于读取 SpringMVC 的配置文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置 servlet 的对象的创建时间点：应用加载时创建。取值只能是非 0 正整数，表示启动顺序 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>4<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="2-3-5-测试"><a href="#2-3-5-测试" class="headerlink" title="2.3.5 测试"></a>2.3.5 测试</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/sayHello"&gt;SpringMVC Quick Start&lt;/a&gt;</span><br></pre></td></tr></table></figure><h4 id="2-4-小结"><a href="#2-4-小结" class="headerlink" title="2.4 小结"></a>2.4 小结</h4><ul><li>创建Maven工程(war), 导入坐标(webmvc, servlet-api, jsp-api)</li><li>创建Controller类, 创建一个方法, 添加注解(类上@Controller, 方法@RquestMapping)</li><li>创建springmvc.xml(开启包扫描, 注册视图解析器, 注解驱动)</li><li>配置web.xml(前端控制器, 默认访问主页)</li></ul><h1 id="知识点-入门案例的执行过程及原理分析"><a href="#知识点-入门案例的执行过程及原理分析" class="headerlink" title="知识点-入门案例的执行过程及原理分析"></a>知识点-入门案例的执行过程及原理分析</h1><h5 id="2-5-目标"><a href="#2-5-目标" class="headerlink" title="2.5 目标"></a>2.5 目标</h5><p>掌握RequestMapping的使用</p><h5 id="2-6-路径"><a href="#2-6-路径" class="headerlink" title="2.6 路径"></a>2.6 路径</h5><ul><li>介绍RequestMapping作用</li><li>RequestMapping的使用的位置</li><li>RequestMapping的属性</li></ul><h4 id="2-7-讲解"><a href="#2-7-讲解" class="headerlink" title="2.7 讲解"></a>2.7 讲解</h4><h5 id="2-7-1-RequestMapping作用"><a href="#2-7-1-RequestMapping作用" class="headerlink" title="2.7.1 RequestMapping作用"></a>2.7.1 RequestMapping作用</h5><p>RequestMapping注解的作用是建立请求URL和处理方法之间的对应关系</p><ul><li><p>作用</p><p>把url与controller中的方法进行绑定，当请求过来时，通过url去找对应的controller对应的方法进行调用RequestMapping注解可以作用在方法和类上</p></li></ul><h5 id="2-7-2-RequestMapping的使用的位置"><a href="#2-7-2-RequestMapping的使用的位置" class="headerlink" title="2.7.2 RequestMapping的使用的位置"></a>2.7.2 RequestMapping的使用的位置</h5><ul><li><p>使用在类上:</p><p>​     请求 URL 的第一级访问目录。此处不写的话，就相当于应用的根目录。 写的话需要以/开头 .它出现的目的是为了使我们的 URL 可以按照模块化管理 </p></li><li><p>使用在方法上:</p><p>​    请求 URL 的第二级访问目录 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/account"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/add"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">(String username, <span class="keyword">double</span> money)</span> </span>&#123;</span><br><span class="line">        System.out.format(<span class="string">"%s %f"</span>, username, money);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/user/add"&gt;Add User&lt;/a&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-7-3-RequestMapping的属性"><a href="#2-7-3-RequestMapping的属性" class="headerlink" title="2.7.3 RequestMapping的属性"></a>2.7.3 RequestMapping的属性</h4><ul><li><p>value/path:     指定请求路径的url</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">  System.out.println(account);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>method :    指定该方法的请求方式</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只能接受post方式请求    </span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/delete"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  System.out.println(<span class="string">"Post Method Delete"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//只能接受gett方式请求</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/required"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">required</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  System.out.println(<span class="string">"Get Method Required"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/delete"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Post Method Successful"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/required"</span> method=<span class="string">"get"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"GET Method Successful"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h5 id="2-7-4-了解的属性"><a href="#2-7-4-了解的属性" class="headerlink" title="2.7.4 了解的属性"></a>2.7.4 了解的属性</h5><ul><li><p>params:   指定限制请求参数的条件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求参数必须是=18,如果不是,则会报错(HTTP Status 400 – Bad Request)    </span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/modify"</span>, params = &#123;<span class="string">"age=18"</span>&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">modify</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  System.out.println(<span class="string">"Modity User"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/user/modify?age=18"&gt;Params Successful&lt;/a&gt;&lt;br&gt;</span><br><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/user/modify"&gt;Failed By No Paramters&lt;/a&gt;</span><br><span class="line">&lt;hr&gt;</span><br></pre></td></tr></table></figure></li><li><p>headers:  发送的请求中必须包含的请求头</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求头必须有Accept=application/json,否则就会报错</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/headers"</span>, headers = <span class="string">"Accept=application/json"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">headers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  System.out.println(<span class="string">"Headers"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/user/headers"&gt;Headers Successful&lt;/a&gt;</span><br></pre></td></tr></table></figure><h4 id="2-8-小结"><a href="#2-8-小结" class="headerlink" title="2.8 小结"></a>2.8 小结</h4></li><li><p>RequestMapping: URL和方法进行绑定</p></li><li><p>RequestMapping定义位置</p><ul><li><p>类上面</p></li><li><p>方法上面</p><blockquote><p>如果类上面使用了, 方法上面也使用了. 访问:  类上面的RequestMapping/方法上面的RequestMapping</p></blockquote></li></ul></li></ul><ol><li><p>属性</p><ul><li><p>value/path: 访问的路径(可以配置多个)</p></li><li><p>method: 配置访问的请求方式(可以配置多个, 默认就是任何请求方式都可以)</p><p>get,post,put,delete  restful风格</p></li></ul><p>@GetMapping-&gt;RequestMethod.GEt</p><p>@PostMapping</p><p>@PutMapping</p><p>@DeleteMapping</p></li></ol><h1 id="三-SpringMVC进阶"><a href="#三-SpringMVC进阶" class="headerlink" title="三.SpringMVC进阶"></a>三.SpringMVC进阶</h1><h3 id="知识点-请求参数的绑定"><a href="#知识点-请求参数的绑定" class="headerlink" title="知识点-请求参数的绑定"></a>知识点-请求参数的绑定</h3><h4 id="3-1-目标"><a href="#3-1-目标" class="headerlink" title="3.1 目标"></a>3.1 目标</h4><p>掌握SpringMVC的参数绑定</p><h4 id="3-2-分析"><a href="#3-2-分析" class="headerlink" title="3.2 分析"></a>3.2 分析</h4><ul><li><p>绑定机制</p><p>​    表单提交的数据都是key=value格式的(username=zs&amp;password=123),SpringMVC的参数绑定过程是把表单提交的请求参数，作为控制器中方法的参数进行绑定的(要求：提交表单的name和参数的名称是相同的)</p></li><li><p>支持的数据类型</p><p>​    基本数据类型和字符串类型</p><p>​    实体类型（JavaBean）</p><p>​    集合数据类型（List、map集合等）</p></li><li><p>使用要求</p><ul><li>如果是基本类型或者 String 类型： 要求我们的参数名称必须和控制器中方法的形参名称保持一致。 (严格区分大小写) .</li><li>如果是 POJO 类型，或者它的关联对象： 要求表单中参数名称和 POJO 类的属性名称保持一致。并且控制器方法的参数类型是 POJO 类型 .</li><li>如果是集合类型,有两种方式： 第一种：要求集合类型的请求参数必须在 POJO 中。在表单中请求参数名称要和 POJO 中集合属性名称相同。给 List 集合中的元素赋值， 使用下标。给 Map 集合中的元素赋值， 使用键值对。第二种：接收的请求参数是 json 格式数据。需要借助一个注解实现 </li></ul></li></ul><h4 id="3-3-讲解"><a href="#3-3-讲解" class="headerlink" title="3.3 讲解"></a>3.3 讲解</h4><h5 id="3-3-1-基本类型和-String-类型作为参数"><a href="#3-3-1-基本类型和-String-类型作为参数" class="headerlink" title="3.3.1 基本类型和 String 类型作为参数"></a>3.3.1 基本类型和 String 类型作为参数</h5><ul><li><p>AccountController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/account"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@RequestMapping</span>(<span class="string">"/add"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">(String username, <span class="keyword">double</span> money)</span> </span>&#123;</span><br><span class="line">    System.out.format(<span class="string">"%s %f"</span>, username, money);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/account/add?name=A&amp;money=1"&gt;Basic Type With name &amp; money&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-3-2-实体类型作为参数"><a href="#3-3-2-实体类型作为参数" class="headerlink" title="3.3.2 实体类型作为参数"></a>3.3.2 实体类型作为参数</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Double money;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String provinceName;</span><br><span class="line">    <span class="keyword">private</span> String Cityname;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//此处省略getter/setter，toString</span></span><br></pre></td></tr></table></figure><ul><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/account/update"</span>&gt;</span><br><span class="line">    Name:&lt;input type=<span class="string">"text"</span> name=<span class="string">"name"</span>&gt;&lt;br&gt;</span><br><span class="line">    Money:&lt;input type=<span class="string">"text"</span> name=<span class="string">"money"</span>&gt;&lt;br&gt;</span><br><span class="line">    Provience:&lt;input type=<span class="string">"text"</span> name=<span class="string">"address.provinceName"</span>&gt;&lt;br&gt;</span><br><span class="line">    City:&lt;input type=<span class="string">"text"</span> name=<span class="string">"address.cityName"</span>&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Reference Type Domain Account"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li><li><p>AccountController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">  System.out.println(account);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-3-3-提交到数组"><a href="#3-3-3-提交到数组" class="headerlink" title="3.3.3 提交到数组"></a>3.3.3 提交到数组</h5><ul><li><p>AccountController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/findByIds"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">findByIds</span><span class="params">(Integer[] ids)</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (Integer id : ids) &#123;</span><br><span class="line">    System.out.println(id);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/findByIds"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"checkbox"</span> value=<span class="string">"1"</span> name=<span class="string">"ids"</span>&gt;A&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"checkbox"</span> value=<span class="string">"2"</span> name=<span class="string">"ids"</span>&gt;B&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"checkbox"</span> value=<span class="string">"3"</span> name=<span class="string">"ids"</span>&gt;C&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"checkbox"</span> value=<span class="string">"4"</span> name=<span class="string">"ids"</span>&gt;D&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Reference Type Update Array"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>:只能用数组来接前端多个参数，不能用List集合。确实需要List集合接收时，使用包装user.list</p></li></ul><h4 id="3-4-POJO-类中包含集合类型参数"><a href="#3-4-POJO-类中包含集合类型参数" class="headerlink" title="3.4 POJO 类中包含集合类型参数"></a>3.4 POJO 类中包含集合类型参数</h4><h5 id="3-4-1-POJO-类中包含List"><a href="#3-4-1-POJO-类中包含List" class="headerlink" title="3.4.1 POJO 类中包含List"></a>3.4.1 POJO 类中包含List</h5><ul><li><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Account&gt; accountList;</span><br><span class="line">  <span class="comment">//此处省略getter/setter，toString</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/account/saveList"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    Name:&lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt;&lt;br&gt;</span><br><span class="line">    Password:&lt;input type=<span class="string">"password"</span> name=<span class="string">"password"</span>&gt;&lt;br&gt;</span><br><span class="line">    Age:&lt;input type=<span class="string">"text"</span> name=<span class="string">"age"</span>&gt;&lt;br&gt;</span><br><span class="line">    First Account Name:&lt;input type=<span class="string">"text"</span> name=<span class="string">"accountList[0].name"</span>&gt;&lt;br&gt;</span><br><span class="line">    First Account Money:&lt;input type=<span class="string">"text"</span> name=<span class="string">"accountList[0].money"</span>&gt;&lt;br&gt;</span><br><span class="line">    Second Account Name:&lt;input type=<span class="string">"text"</span> name=<span class="string">"accountList[1].name"</span>&gt;&lt;br&gt;</span><br><span class="line">    Second Account Money:&lt;input type=<span class="string">"text"</span> name=<span class="string">"accountList[1].money"</span>&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> name=<span class="string">"List Save"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li><li><p>AccountController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/saveList"</span>)</span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">saveList</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">  System.out.println(user);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-4-2-POJO-类中包含Map"><a href="#3-4-2-POJO-类中包含Map" class="headerlink" title="3.4.2 POJO 类中包含Map"></a>3.4.2 POJO 类中包含Map</h5><ul><li><p>Player.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String ,Account&gt; accountMap;</span><br><span class="line">  <span class="comment">//此处省略getter/setter，toString</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/account/saveMap"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    Name:&lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt;&lt;br&gt;</span><br><span class="line">    Password:&lt;input type=<span class="string">"password"</span> name=<span class="string">"password"</span>&gt;&lt;br&gt;</span><br><span class="line">    Age:&lt;input type=<span class="string">"text"</span> name=<span class="string">"age"</span>&gt;&lt;br&gt;</span><br><span class="line">    First Account Name:&lt;input type=<span class="string">"text"</span> name=<span class="string">"accountMap[0].name"</span>&gt;&lt;br&gt;</span><br><span class="line">    First Account Money:&lt;input type=<span class="string">"text"</span> name=<span class="string">"accountMap[0].money"</span>&gt;&lt;br&gt;</span><br><span class="line">    Second Account Name:&lt;input type=<span class="string">"text"</span> name=<span class="string">"accountMap[1].name"</span>&gt;&lt;br&gt;</span><br><span class="line">    Second Account Money:&lt;input type=<span class="string">"text"</span> name=<span class="string">"accountMap[1].money"</span>&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> name=<span class="string">"Map Save"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li><li><p>AccountController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/saveMap"</span>)</span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">saveMap</span><span class="params">(Player player)</span> </span>&#123;</span><br><span class="line">  System.out.println(player);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-5-小结"><a href="#3-5-小结" class="headerlink" title="3.5 小结"></a>3.5 小结</h4><ul><li><p>请求参数类型是简单(基本,String)类型</p><ul><li>方法的形参和请求参数的name一致就可以</li></ul></li><li><p>请求参数类型是pojo对象类型</p><ul><li>形参就写pojo对象</li><li>pojo的属性必须和请求参数的name一致就可以</li></ul></li><li><p>请求参数类型是pojo对象类型, 包含集合</p><ul><li>形参就写pojo对象</li><li>pojo的属性必须和请求参数的name一致就可以</li><li>如果包含List,  list的属性名[下标].pojo属性名</li><li>如果包含map,  map的属性名[key].pojo属性名</li></ul></li><li><p>提交数组，只能用数组接收，多个参数的参数名一致，参数要与controller中的参数名一致</p></li></ul><p><strong>注意</strong>：</p><blockquote><p>严格区分大小写</p><p>不能直接提交List与map集合, 需要通过其它方式转换(fastjson)</p></blockquote><h4 id="3-6-请求参数细节和特殊情况"><a href="#3-6-请求参数细节和特殊情况" class="headerlink" title="3.6 请求参数细节和特殊情况"></a>3.6 请求参数细节和特殊情况</h4><h5 id="3-6-1-目标"><a href="#3-6-1-目标" class="headerlink" title="3.6.1 目标"></a>3.6.1 目标</h5><p>掌握乱码处理和自定义类型转换器</p><h5 id="3-6-2-路径"><a href="#3-6-2-路径" class="headerlink" title="3.6.2 路径"></a>3.6.2 路径</h5><ul><li>请求参数乱码处理</li><li>自定义类型转换器</li><li>使用 ServletAPI 对象作为方法参数</li></ul><h5 id="3-6-3-讲解"><a href="#3-6-3-讲解" class="headerlink" title="3.6.3 讲解"></a>3.6.3 讲解</h5><h6 id="3-6-3-1-请求参数乱码处理"><a href="#3-6-3-1-请求参数乱码处理" class="headerlink" title="3.6.3.1 请求参数乱码处理"></a>3.6.3.1 请求参数乱码处理</h6><ul><li><p>在web.xml里面配置编码过滤器 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置spring提供的字符集过滤器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置初始化参数，指定字符集 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span>[]</span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 强制使用 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h6 id="3-6-3-2-自定义类型转换器"><a href="#3-6-3-2-自定义类型转换器" class="headerlink" title="3.6.3.2 自定义类型转换器"></a>3.6.3.2 自定义类型转换器</h6><p>默认情况下,SpringMVC已经实现一些数据类型自动转换。 内置转换器全都在：        org.springframework.core.convert.support包下 ,如遇特殊类型转换要求，需要我们自己编写自定义类型转换器。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">java.lang.Boolean -&gt; java.lang.String : ObjectToStringConverter</span><br><span class="line">java.lang.Character -&gt; java.lang.Number : CharacterToNumberFactory</span><br><span class="line">java.lang.Character -&gt; java.lang.String : ObjectToStringConverter</span><br><span class="line">java.lang.Enum -&gt; java.lang.String : EnumToStringConverter</span><br><span class="line">java.lang.Number -&gt; java.lang.Character : NumberToCharacterConverter</span><br><span class="line">java.lang.Number -&gt; java.lang.Number : NumberToNumberConverterFactory</span><br><span class="line">java.lang.Number -&gt; java.lang.String : ObjectToStringConverter</span><br><span class="line">java.lang.String -&gt; java.lang.Boolean : StringToBooleanConverter</span><br><span class="line">java.lang.String -&gt; java.lang.Character : StringToCharacterConverter</span><br><span class="line">java.lang.String -&gt; java.lang.Enum : StringToEnumConverterFactory</span><br><span class="line">java.lang.String -&gt; java.lang.Number : StringToNumberConverterFactory</span><br><span class="line">java.lang.String -&gt; java.util.Locale : StringToLocaleConverter</span><br><span class="line">java.lang.String -&gt; java.util.Properties : StringToPropertiesConverter</span><br><span class="line">java.lang.String -&gt; java.util.UUID : StringToUUIDConverter</span><br><span class="line">java.util.Locale -&gt; java.lang.String : ObjectToStringConverter</span><br><span class="line">java.util.Properties -&gt; java.lang.String : PropertiesToStringConverter</span><br><span class="line">java.util.UUID -&gt; java.lang.String : ObjectToStringConverter</span><br><span class="line"> ....</span><br></pre></td></tr></table></figure><h6 id="3-6-3-3-场景"><a href="#3-6-3-3-场景" class="headerlink" title="3.6.3.3 场景"></a>3.6.3.3 场景</h6><ul><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/account/BirthDate?date=1900-01-01"&gt;Convert Date&lt;/a&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure></li><li><p>AccountController.java(错误页面400)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/BirthDate"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">BirthDate</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">  System.out.println(date);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>需自定义类型转换器 </p><ul><li><p>步骤</p><p>创建一个类实现Converter 接口</p><p>配置类型转换器</p></li><li><p>实现</p><ul><li><p>定义一个类，实现 Converter 接口</p><p>该接口有两个泛型,,S:表示接受的类型， T：表示目标类型(需要转的类型)</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringToDateConverter</span> <span class="keyword">implements</span> <span class="title">Converter</span>&lt;<span class="title">String</span>,<span class="title">Date</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@Nullable</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Date <span class="title">convert</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(StringUtils.isEmpty(s))&#123;</span><br><span class="line">        <span class="keyword">throw</span>  <span class="keyword">new</span> RuntimeException(<span class="string">"字符串不能为null"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      SimpleDateFormat dateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">      <span class="keyword">return</span> dateFormat.parse(s);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">      <span class="keyword">return</span>  <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>在springmvc.xml里面配置转换器</p><p>spring 配置类型转换器的机制是，将自定义的转换器注册到类型转换服务中去</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置类型转换器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"conversionService"</span> <span class="attr">class</span>=<span class="string">"org.springframework.context.support.ConversionServiceFactoryBean"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 给工厂注入一个新的类型转换器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"converters"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 配置自定义类型转换器 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.itheima.converter.StringToDateConverter"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在 annotation-driven 标签中引用配置的类型转换服务 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置Spring开启mvc注解--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">conversion-service</span>=<span class="string">"conversionService"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h6 id="3-6-3-4-使用-ServletAPI-对象作为方法参数"><a href="#3-6-3-4-使用-ServletAPI-对象作为方法参数" class="headerlink" title="3.6.3.4 使用 ServletAPI 对象作为方法参数"></a>3.6.3.4 使用 ServletAPI 对象作为方法参数</h6><p>SpringMVC 还支持使用原始 ServletAPI 对象作为控制器方法的参数。我们可以把它们直接写在控制的方法参数中使用。</p><table><thead><tr><th><center/>支持原始 ServletAPI 对象</th></tr></thead><tbody><tr><td><center/>HttpServletRequest</td></tr><tr><td><center/>    HttpServletResponse</td></tr><tr><td><center/>    HttpSession</td></tr><tr><td><center/>    java.security.Principal</td></tr><tr><td><center/>    Locale</td></tr><tr><td><center/>    InputStream</td></tr><tr><td><center/>    OutputStream</td></tr><tr><td><center/>Reader</td></tr><tr><td><center/>Writer</td></tr></tbody></table><ul><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/account/testServletAPI?name=AAA"&gt;testServletAPI&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>AccountController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/testServletAPI"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testServletAPI</span><span class="params">(HttpServletRequest req,HttpServletResponse resp,HttpSession session)</span> </span>&#123;</span><br><span class="line">    System.out.println(req);</span><br><span class="line">    System.out.println(resp);</span><br><span class="line">    System.out.println(session);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h6 id="3-6-3-5-小结"><a href="#3-6-3-5-小结" class="headerlink" title="3.6.3.5 小结"></a>3.6.3.5 小结</h6><ul><li><p>处理post乱码  直接在web.xml 配置编码过滤器 characterEncodingFilter /*</p></li><li><p>类型转换器</p><ul><li>创建一个类实现Converter &lt;Src, target&gt;</li><li>在springmvc.xml进行配置 conversionService </li></ul></li><li><p>ServletApi方式</p><ul><li>直接方法的形参里面绑定requet, response. session…</li><li>使用属性注入</li></ul></li></ul><h3 id="3-7-知识点-常用注解"><a href="#3-7-知识点-常用注解" class="headerlink" title="3.7 知识点-常用注解"></a>3.7 知识点-常用注解</h3><h4 id="3-7-1-目标"><a href="#3-7-1-目标" class="headerlink" title="3.7.1 目标"></a>3.7.1 目标</h4><p>掌握常用注解 </p><h4 id="3-7-2-路径"><a href="#3-7-2-路径" class="headerlink" title="3.7.2 路径"></a>3.7.2 路径</h4><p>@RequestParam </p><p>@RequestBody  </p><p>@PathVariable  </p><p>@RequestHeader </p><p>@CookieValue </p><h4 id="3-7-3-讲解"><a href="#3-7-3-讲解" class="headerlink" title="3.7.3 讲解"></a>3.7.3 讲解</h4><h5 id="3-7-3-1-RequestParam"><a href="#3-7-3-1-RequestParam" class="headerlink" title="3.7.3.1 RequestParam"></a>3.7.3.1 RequestParam</h5><h6 id="3-7-3-1-1-使用说明"><a href="#3-7-3-1-1-使用说明" class="headerlink" title="3.7.3.1.1  使用说明"></a>3.7.3.1.1  使用说明</h6><ul><li><p>作用：</p><p>把请求中指定名称的参数给控制器中的形参赋值。 </p></li><li><p>属性</p><p>value： 请求参数中的名称。<br>required：请求参数中是否必须提供此参数。 默认值： true。表示必须提供，如果不提供将报错。 </p><p>defaultValue:默认值</p></li></ul><ul><li>使用场景：form提交，url参数使用的是 <strong>?</strong> 方式来提交请求</li></ul><h6 id="3-7-3-1-2-使用实例"><a href="#3-7-3-1-2-使用实例" class="headerlink" title="3.7.3.1.2 使用实例"></a>3.7.3.1.2 使用实例</h6><ul><li><p>页面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/testRequestParam"</span>&gt;</span><br><span class="line">    Name:&lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"testRequestParam"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/testRequestParam"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testRequestParam</span><span class="params">(@RequestParam(value = <span class="string">"username"</span>, required = <span class="keyword">true</span>, defaultValue = <span class="string">"一"</span>)</span> String username) </span>&#123;</span><br><span class="line">  System.out.println(username);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-7-3-2-RequestBody"><a href="#3-7-3-2-RequestBody" class="headerlink" title="3.7.3.2 RequestBody"></a>3.7.3.2 RequestBody</h5><p>请求体: post方式的请求参数,get方式没有请求体</p><p>Get和Post区别</p><ul><li>get方式 请求参数拼接在请求路径后面, post 方式 请求参数在请求体里面</li><li>get方式 请求参数浏览器地址栏可见,  post 方式 请求参数浏览器地址栏不可见</li><li>get方式 请求参数大小有限制的, post 方式请求参数大小没有限制的</li></ul><h6 id="3-7-3-2-1使用说明"><a href="#3-7-3-2-1使用说明" class="headerlink" title="3.7.3.2.1使用说明"></a>3.7.3.2.1使用说明</h6><ul><li><p>作用</p><p>1.用于获取请求体内容。 直接使用得到是 key=value&amp;key=value…结构的字符串。</p><p>2.把获得json类型的数据转成pojo对象(后面再讲)【推荐】</p><p>注意: get 请求方式不适用。 </p></li><li><p>属性</p><p>required：是否必须有请求体。默认值是:true。当取值为 true 时,get 请求方式会报错。如果取值为 false， get 请求得到是 null。 </p></li></ul><ul><li>@RequestBody 不能使用get请求, 在Controller的方法参数里，有且只有一个</li></ul><h6 id="3-7-3-2-2使用实例"><a href="#3-7-3-2-2使用实例" class="headerlink" title="3.7.3.2.2使用实例"></a>3.7.3.2.2使用实例</h6><ul><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/testRequestBody"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">  Name:&lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt;&lt;br&gt;</span><br><span class="line">  Password:&lt;input type=<span class="string">"password"</span> name=<span class="string">"password"</span>&gt;&lt;br&gt;</span><br><span class="line">  &lt;input type=<span class="string">"submit"</span> value=<span class="string">"testRequestBody"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/testRequestBody"</span>, produces = <span class="string">"application/xml; charset=utf-8"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testRequestBody</span><span class="params">(@RequestBody String queryStr)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//返回json格式，中途会转化成欧码，需要转换</span></span><br><span class="line">    String a = URLDecoder.decode(queryStr, <span class="string">"UTF-8"</span>);</span><br><span class="line">    System.out.println(a);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-7-3-2-3-PathVariable"><a href="#3-7-3-2-3-PathVariable" class="headerlink" title="3.7.3.2.3 PathVariable"></a>3.7.3.2.3 PathVariable</h5><h6 id="3-7-3-2-3-1-REST-风格-URL"><a href="#3-7-3-2-3-1-REST-风格-URL" class="headerlink" title="3.7.3.2.3.1 REST 风格 URL"></a>3.7.3.2.3.1 REST 风格 URL</h6><p>REST（英文： Representational State Transfer，简称 REST）描述了一个架构样式的网络系统，比如 web 应用程序。它首次出现在 2000 年 Roy Fielding 的博士论文中，他是 HTTP 规范的主要编写者之一。在目前主流的三种 Web 服务交互方案中， REST 相比于 SOAP（Simple Object Access protocol，简单对象访问协议）以及 XML-RPC 更加简单明了，无论是对 URL 的处理还是对 Payload 的编码， REST 都倾向于用更加简单轻量的方法设计和实现。值得注意的是 REST 并没有一个明确的标准，而更像是一种设计的风格。它本身并没有什么实用性，其核心价值在于如何设计出符合 REST 风格的网络接口。</p><ul><li><p>restful 的优点</p><p>它结构清晰、符合标准、易于理解、 扩展方便，所以正得到越来越多网站的采用。</p></li><li><p>restful 的特性：</p><p>​    资源（Resources） ： 网络上的一个实体，或者说是网络上的一个具体信息。它可以是一段文本、一张图片、一首歌曲、一种服务，总之就是一个具体的存在。可以用一个 URI（统一资源定位符）指向它，每种资源对应一个特定的 URI 。要获取这个资源，访问它的 URI 就可以，因此 URI 即为每一个资源的独一无二的识别符。表现层（Representation） ： 把资源具体呈现出来的形式，叫做它的表现层 （Representation）。比如，文本可以用 txt 格式表现，也可以用 HTML 格式、 XML 格式、 JSON 格式表现，甚至可以采用二进制格式。状态转化（State Transfer） ： 每 发出一个请求，就代表了客户端和服务器的一次交互过程。HTTP 协议，是一个无状态协议，即所有的状态都保存在服务器端。因此，如果客户端想要操作服务器，必须通过某种手段， 让服务器端发生“ 状态转化” （State Transfer）。而这种转化是建立在表现层之上的，所以就是 “ 表现层状态转化” 。具体说，就是 HTTP 协议里面，四个表示操作方式的动词： GET 、 POST 、 PUT、DELETE。它们分别对应四种基本操作： GET 用来获取资源， POST 用来新建资源， PUT 用来更新资源， DELETE 用来删除资源 .</p></li></ul><ul><li><p>实例      </p><table><thead><tr><th></th><th>保存(POST方式)</th></tr></thead><tbody><tr><td>传统</td><td><a href="http://localhost:8080/user/save">http://localhost:8080/user/save</a></td></tr><tr><td>REST</td><td><a href="http://localhost:8080/user">http://localhost:8080/user</a></td></tr><tr><td></td><td>执行保存 添加资源<br>不安全且不幂等(执行多次)</td></tr><tr><td></td><td><strong>更新(PUT方式,requestBody更新的内容)</strong></td></tr><tr><td>传统</td><td><a href="http://localhost:8080/user/update?id=1">http://localhost:8080/user/update?id=1</a></td></tr><tr><td>REST</td><td><a href="http://localhost:8080/user/1">http://localhost:8080/user/1</a></td></tr><tr><td></td><td>执行更新   1代表id<br>不安全，幂(多少次方)等</td></tr><tr><td></td><td><strong>删除(DELETE方式)</strong></td></tr><tr><td>传统</td><td><a href="http://localhost:8080/user/delete?id=1">http://localhost:8080/user/delete?id=1</a></td></tr><tr><td>REST</td><td><a href="http://localhost:8080/user/1">http://localhost:8080/user/1</a></td></tr><tr><td></td><td>执行删除 1代表id<br>不安全，幂(多少次方)等</td></tr><tr><td></td><td><strong>查询(GET方式)</strong></td></tr><tr><td>传统</td><td><a href="http://localhost:8080/user/findAll">http://localhost:8080/user/findAll</a></td></tr><tr><td>REST</td><td><a href="http://localhost:8080/user">http://localhost:8080/user</a></td></tr><tr><td></td><td>GET方式    查所有<br/>安全，幂(多少次方)等</td></tr><tr><td>传统</td><td><a href="http://localhost:8080/user/findById?id=1">http://localhost:8080/user/findById?id=1</a></td></tr><tr><td>REST</td><td><a href="http://localhost:8080/user/1">http://localhost:8080/user/1</a></td></tr><tr><td></td><td>GET方式    根据id查1个<br/>安全，幂(多少次方)等</td></tr></tbody></table></li></ul><h6 id="3-7-3-2-3-2-使用说明"><a href="#3-7-3-2-3-2-使用说明" class="headerlink" title="3.7.3.2.3.2 使用说明"></a>3.7.3.2.3.2 使用说明</h6><ul><li><p>作用：</p><p>用于绑定 url 中的占位符。 例如：请求 url 中 /delete/{id}， 这个{id}就是 url 占位符。<br>url 支持占位符是 spring3.0 之后加入的。是 springmvc 支持 rest 风格 URL 的一个重要标志。</p></li><li><p>属性：</p><p>value： 用于指定 url 中占位符名称。<br>required：是否必须提供占位符。 </p></li></ul><ul><li>场景：获取路径中的参数</li></ul><h6 id="3-7-3-2-3-3-使用实例"><a href="#3-7-3-2-3-3-使用实例" class="headerlink" title="3.7.3.2.3.3 使用实例"></a>3.7.3.2.3.3 使用实例</h6><ul><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/user/testPathVaribale/1"&gt;testPathVaribale&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"testPathVaribale/&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testPathVaribale</span><span class="params">(@PathVariable(value = <span class="string">"id"</span>)</span> Integer id) </span>&#123;</span><br><span class="line">  System.out.println(id);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-7-3-2-3-4-RequestHeader"><a href="#3-7-3-2-3-4-RequestHeader" class="headerlink" title="3.7.3.2.3.4 RequestHeader"></a>3.7.3.2.3.4 RequestHeader</h5><h6 id="3-7-3-2-3-4-1-使用说明"><a href="#3-7-3-2-3-4-1-使用说明" class="headerlink" title="3.7.3.2.3.4.1 使用说明"></a>3.7.3.2.3.4.1 使用说明</h6><ul><li>作用：<br>用于获取请求消息头。</li><li>属性：<br>value：提供消息头名称<br>required：是否必须有此消息头 </li><li>从请求头中获取参数，鉴权(token 畅购open auth 2.0 jwt token) Authorization</li></ul><h6 id="3-7-3-2-3-4-2-使用实例"><a href="#3-7-3-2-3-4-2-使用实例" class="headerlink" title="3.7.3.2.3.4.2 使用实例"></a>3.7.3.2.3.4.2 使用实例</h6><ul><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/user/testRequestHeader"&gt;testRequestHeader&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/testRequestHeader"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testRequestHeader</span><span class="params">(@RequestHeader(value = <span class="string">"User-Agent"</span>)</span> String requestHeader) </span>&#123;</span><br><span class="line"></span><br><span class="line">  System.out.println(requestHeader);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-7-3-2-3-5-CookieValue"><a href="#3-7-3-2-3-5-CookieValue" class="headerlink" title="3.7.3.2.3.5 CookieValue"></a>3.7.3.2.3.5 CookieValue</h5><h6 id="3-7-3-2-3-5-1-使用说明"><a href="#3-7-3-2-3-5-1-使用说明" class="headerlink" title="3.7.3.2.3.5.1 使用说明"></a>3.7.3.2.3.5.1 使用说明</h6><ul><li><p>作用：</p><p>用于把指定 cookie 名称的值传入控制器方法参数。</p></li><li><p>属性：</p><p>value：指定 cookie 的名称。<br>required：是否必须有此 cookie。 </p></li></ul><h6 id="3-7-3-2-3-5-2-使用实例"><a href="#3-7-3-2-3-5-2-使用实例" class="headerlink" title="3.7.3.2.3.5.2 使用实例"></a>3.7.3.2.3.5.2 使用实例</h6><ul><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/user/testCookieValue"&gt;testCookieValue&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/testCookieValue"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">testCookieValue</span><span class="params">(@CookieValue(value = <span class="string">"JSESSIONID"</span>)</span> String sessionId)</span>&#123;</span><br><span class="line">  System.out.println(sessionId);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-7-3-2-3-6-ModelAttribute"><a href="#3-7-3-2-3-6-ModelAttribute" class="headerlink" title="3.7.3.2.3.6 ModelAttribute"></a>3.7.3.2.3.6 ModelAttribute</h5><h6 id="3-7-3-2-3-6-1-使用说明"><a href="#3-7-3-2-3-6-1-使用说明" class="headerlink" title="3.7.3.2.3.6.1 使用说明"></a>3.7.3.2.3.6.1 使用说明</h6><ul><li><p>作用：</p><p>​    该注解是 SpringMVC4.3 版本以后新加入的。它可以用于修饰方法和参数。</p><p>​    出现在方法上，表示当前方法会在控制器的方法执行之前，先执行。它可以修饰没有返回值的方法，也可以修饰有具体返回值的方法。</p><p>​    出现在参数上，获取指定的数据给参数赋值。</p></li><li><p>属性：<br>value：用于获取数据的 key。 key 可以是 POJO 的属性名称，也可以是 map 结构的 key。</p></li><li><p>应用场景：<br>当表单提交数据不是完整的实体类数据时，保证没有提交数据的字段使用数据库对象原来的数据。<br>例如：<br>​        我们在编辑一个用户时，用户有一个创建信息字段，该字段的值是不允许被修改的。在提交表单数<br>​据是肯定没有此字段的内容，一旦更新会把该字段内容置为 null，此时就可以使用此注解解决问题。 </p></li></ul><h6 id="3-7-3-2-3-6-2-使用实例"><a href="#3-7-3-2-3-6-2-使用实例" class="headerlink" title="3.7.3.2.3.6.2 使用实例"></a>3.7.3.2.3.6.2 使用实例</h6><ul><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/testModelAttributeMethod"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    Name:&lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span>/&gt;&lt;br/&gt;</span><br><span class="line">    Password:&lt;input type=<span class="string">"text"</span> name=<span class="string">"password"</span>/&gt;&lt;br/&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"testModelAttribute"</span>/&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/testModelAttributeArgs"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    Name:&lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span>/&gt;&lt;br/&gt;</span><br><span class="line">    Password:&lt;input type=<span class="string">"text"</span> name=<span class="string">"password"</span>/&gt;&lt;br/&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"testModelAttribute"</span>/&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li><li><p>实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> String username;</span><br><span class="line">  <span class="keyword">private</span> String password;</span><br><span class="line">  <span class="keyword">private</span> String gender;</span><br><span class="line">  <span class="comment">//此处省略getter/setter，toString</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserController.java(用在方法上面)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/testModelAttribute"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String  <span class="title">testModelAttribute</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"testModelAttribute ...收到了请求..."</span>+user);</span><br><span class="line">    <span class="keyword">return</span>  <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="meta">@ModelAttribute</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User  <span class="title">getModel</span><span class="params">(String username,String password)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"getModel ...收到了请求..."</span>);</span><br><span class="line">    <span class="comment">//模拟查询数据库, 把性别也查询出来</span></span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUsername(username);</span><br><span class="line">    user.setUsername(password);</span><br><span class="line">    <span class="comment">// 在前端的form表单中不要有这个字段，不要提交这个参数，&lt;input disabled&gt;</span></span><br><span class="line">    <span class="comment">// 如果提交了这个参数，则以提交的为主</span></span><br><span class="line">    user.setGender(<span class="string">"男"</span>);</span><br><span class="line">    <span class="keyword">return</span>  user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserController.java(用在参数上面)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/testModelAttribute"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String  <span class="title">testModelAttribute</span><span class="params">(@ModelAttribute(<span class="string">"u"</span>)</span> User user)</span>&#123;</span><br><span class="line">       System.out.println(<span class="string">"testModelAttribute ...收到了请求..."</span>+user);</span><br><span class="line">       <span class="keyword">return</span>  <span class="string">"success"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  </span><br><span class="line">   <span class="meta">@ModelAttribute</span></span><br><span class="line"><span class="comment">//没有返回值</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title">getModel</span><span class="params">(String username, String password, Map&lt;String,User&gt; map)</span></span>&#123;</span><br><span class="line">       System.out.println(<span class="string">"getModel ...收到了请求..."</span>);</span><br><span class="line">       <span class="comment">//模拟查询数据库, 把性别也查询出来</span></span><br><span class="line">       User user = <span class="keyword">new</span> User();</span><br><span class="line">       user.setUsername(username);</span><br><span class="line">       user.setUsername(password);</span><br><span class="line">       user.setGender(<span class="string">"男"</span>);</span><br><span class="line">       map.put(<span class="string">"u"</span>,user);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-7-3-2-3-7-SessionAttributes"><a href="#3-7-3-2-3-7-SessionAttributes" class="headerlink" title="3.7.3.2.3.7 SessionAttributes"></a>3.7.3.2.3.7 SessionAttributes</h5><p>3.7.3.2.3.7.1 使用说明</p><ul><li><p>作用：</p><p>用于多次执行(多次请求)控制器方法间的参数共享。(该注解定义在类上)</p></li><li><p>属性：<br>value：用于指定存入的属性名称<br>type：用于指定存入的数据类型。 </p></li></ul><h6 id="3-7-3-2-3-7-2-使用实例"><a href="#3-7-3-2-3-7-2-使用实例" class="headerlink" title="3.7.3.2.3.7.2 使用实例"></a>3.7.3.2.3.7.2 使用实例</h6><ul><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/sessionController/setAttribute"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> name=<span class="string">"name"</span>&gt;&lt;br&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> name=<span class="string">"age"</span>&gt;&lt;br&gt;</span><br><span class="line">  &lt;input type=<span class="string">"submit"</span> value=<span class="string">"setAttribute"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/sessionController/getAttribute"&gt;Get SessionAttribute&lt;/a&gt;&lt;br/&gt;</span><br><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/sessionController/removeAttribute"&gt;Empty SessionAttribute&lt;/a&gt;&lt;br/&gt;</span><br></pre></td></tr></table></figure></li><li><p>SessionController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/sessionController"</span>)</span><br><span class="line"><span class="meta">@SessionAttributes</span>(value = &#123;<span class="string">"name"</span>, <span class="string">"age"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SessionController</span> </span>&#123;</span><br><span class="line">  <span class="meta">@RequestMapping</span>(<span class="string">"/setAttribute"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">setAttribute</span><span class="params">(String name, <span class="keyword">int</span> age, Model model)</span> </span>&#123;</span><br><span class="line">    model.addAttribute(<span class="string">"name"</span>, name);</span><br><span class="line">    model.addAttribute(<span class="string">"age"</span>, age);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@RequestMapping</span>(<span class="string">"/getAttribute"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getAttribute</span><span class="params">(ModelMap modelMap)</span> </span>&#123;</span><br><span class="line">    System.out.println(modelMap.get(<span class="string">"name"</span>));</span><br><span class="line">    System.out.println(modelMap.get(<span class="string">"age"</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@RequestMapping</span>(<span class="string">"/removeAttribute"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">removeAttribute</span><span class="params">(SessionStatus sessionStatus)</span> </span>&#123;</span><br><span class="line">    sessionStatus.setComplete();</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-响应数据和结果视图"><a href="#四-响应数据和结果视图" class="headerlink" title="四.响应数据和结果视图"></a>四.响应数据和结果视图</h1><h3 id="知识点-返回值分类"><a href="#知识点-返回值分类" class="headerlink" title="知识点-返回值分类"></a>知识点-返回值分类</h3><h4 id="4-1-目标"><a href="#4-1-目标" class="headerlink" title="4.1 目标"></a>4.1 目标</h4><p>掌握Controller的返回值使用</p><h4 id="4-2-路径"><a href="#4-2-路径" class="headerlink" title="4.2 路径"></a>4.2 路径</h4><ul><li>字符串 </li><li>void </li><li>ModelAndView </li></ul><h4 id="4-3-讲解"><a href="#4-3-讲解" class="headerlink" title="4.3 讲解"></a>4.3 讲解</h4><h5 id="4-3-1-字符串"><a href="#4-3-1-字符串" class="headerlink" title="4.3.1 字符串"></a>4.3.1 字符串</h5><p>controller 方法返回字符串可以指定逻辑视图名，通过视图解析器解析为物理视图地址。</p><ul><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/response/testReturnString"&gt;String Return Value&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/response"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResponseController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//指定逻辑视图名，经过视图解析器解析为 jsp 物理路径： /WEB-INF/pages/success.jsp</span></span><br><span class="line">  <span class="meta">@RequestMapping</span>(<span class="string">"/testReturnString"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">testReturnString</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"testReturnString"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="4-3-2-void"><a href="#4-3-2-void" class="headerlink" title="4.3.2 void"></a>4.3.2 void</h5><p>控制器方法返回值是void时:</p><p>​    如果控制器方法的参数中没有response对象</p><p>​        它的视图是以方法是RequestMapping的取值作为视图名称</p><p>​        如果类上也有RequestMapping，则类上的RequestMapping是其中的1级路径</p><p>​    如果控制器方法的参数中有response对象</p><p>​        则默认前往的jsp页面上无法显示内容</p><ul><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/response/testReturnVoid"&gt;void Return Value&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/response/testReturnVoidWithReturnValue"&gt;void Return Value&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/testReturnVoid"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testReturnVoid</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"testReturnVoid"</span>);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/testReturnVoidWithReturnValue"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testReturnVoidWithReturnValue</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"testReturnVoidWithReturnValue"</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        resp.sendRedirect(<span class="string">"http://www.baidu.com"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="4-3-3-ModelAndView"><a href="#4-3-3-ModelAndView" class="headerlink" title="4.3.3 ModelAndView"></a>4.3.3 ModelAndView</h5><p>ModelAndView 是 SpringMVC 为我们提供的一个对象，该对象也可以用作控制器方法的返回值。 </p><ul><li><p>jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/response/testReturnModelAndView"&gt;testReturnModelAndView&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/testReturnModelAndView"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">testReturnModelAndView</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">    modelAndView.addObject(<span class="string">"name"</span>,<span class="string">"a"</span>);</span><br><span class="line">    modelAndView.addObject(<span class="string">"age"</span>,<span class="number">18</span>);</span><br><span class="line">    modelAndView.setViewName(<span class="string">"success"</span>);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="4-3-4-小结"><a href="#4-3-4-小结" class="headerlink" title="4.3.4 小结"></a>4.3.4 小结</h5><ul><li><p>返回String.  返回值是逻辑视图, 通过视图解析器拼接成物理视图</p></li><li><p>返回void </p></li><li><p>返回ModelAndView </p><ul><li>设置数据  向request存</li><li>设置视图  逻辑视图</li></ul></li><li><p>方法参数中使用Model 携带数据到jsp中，替换ModelAndView  </p></li></ul><h4 id="4-4-知识点-转发和重定向"><a href="#4-4-知识点-转发和重定向" class="headerlink" title="4.4 知识点-转发和重定向"></a>4.4 知识点-转发和重定向</h4><h4 id="4-4-1-目标"><a href="#4-4-1-目标" class="headerlink" title="4.4.1 目标"></a>4.4.1 目标</h4><p>掌握Controller中的转发和重定向使用</p><h4 id="4-4-2-路径"><a href="#4-4-2-路径" class="headerlink" title="4.4.2 路径"></a>4.4.2 路径</h4><ul><li>forward 转发 </li><li>Redirect 重定向 </li></ul><h4 id="4-4-3-讲解"><a href="#4-4-3-讲解" class="headerlink" title="4.4.3 讲解"></a>4.4.3 讲解</h4><h5 id="4-4-3-1-forward-转发"><a href="#4-4-3-1-forward-转发" class="headerlink" title="4.4.3.1 forward 转发"></a>4.4.3.1 forward 转发</h5><p>​    controller 方法在提供了 String 类型的返回值之后，默认就是请求转发。我们也可以加上  <code>forward:</code>  可以转发到页面,也可以转发到其它的controller方法</p><ul><li><p>转发到页面</p><p>​    需要注意的是，如果用了 formward： 则路径必须写成实际视图 url，不能写逻辑视图。它相当于“request.getRequestDispatcher(“url”).forward(request,response)” </p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/forwardToPage"&gt;forwardToPage&lt;/a&gt;&lt;br&gt;</span><br><span class="line">&lt;a</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedirectController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//转发到页面</span></span><br><span class="line">  <span class="meta">@RequestMapping</span>(<span class="string">"/forwardToPage"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">forwardToPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"forwardToPage"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"forward:/WEB-INF/pages/success.jsp"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>转发到其它的controller方法</p><p>语法: <code>forward:/类上的RequestMapping/方法上的RequestMapping</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">href="$&#123;pageContext.request.contextPath&#125;/forwardToOtherController"&gt;forwardToOtherController&lt;/a&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//转发到其它controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/forwardToOtherController"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">forwardToOtherController</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  System.out.println(<span class="string">"forwardToOtherController"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"forward:/response/testReturnModelAndView"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="4-4-3-2-Redirect-重定向"><a href="#4-4-3-2-Redirect-重定向" class="headerlink" title="4.4.3.2 Redirect 重定向"></a>4.4.3.2 Redirect 重定向</h5><p>​    contrller 方法提供了一个 String 类型返回值之后， 它需要在返回值里使用: <code>redirect:</code> 同样可以重定向到页面,也可以重定向到其它controller</p><ul><li><p>重定向到页面</p><p>​    它相当于“response.sendRedirect(url)” 。需要注意的是，如果是重定向到 jsp 页面，则 jsp 页面不能写在 WEB-INF 目录中，否则无法找到。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/redirectToPage"&gt;redirectToPage&lt;/a&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//重定向到页面</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/redirectToPage"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">redirectToPage</span><span class="params">()</span></span>&#123;</span><br><span class="line">  System.out.println(<span class="string">"redirectToPage"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"redirect:/redirect.jsp"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>重定向到其它的controller方法</p><p>语法: <code>redirect:/类上的RequestMapping/方法上的RequestMapping</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/redirectToOtherController"&gt;redirectToOtherController&lt;/a&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//重定向到其它Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/redirectToOtherController"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">redirectToOtherController</span><span class="params">()</span></span>&#123;</span><br><span class="line">  System.out.println(<span class="string">"redirectToOtherController"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"redirect:/response/testReturnModelAndView"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="4-4-4-小结"><a href="#4-4-4-小结" class="headerlink" title="4.4.4 小结"></a>4.4.4 小结</h5><h4 id="4-4-1-转发和重定向区别"><a href="#4-4-1-转发和重定向区别" class="headerlink" title="4.4.1 转发和重定向区别"></a>4.4.1 转发和重定向区别</h4><ul><li>转发是一次请求, 重定向是两次请求</li><li>转发路径不会变化, 重定向的路径会改变</li><li>转发只能转发到内部的资源,重定向可以重定向到内部的(当前项目里面的)也可以是外部的(项目以外的)</li><li>转发可以转发到WEB-INF里面的资源, 重定向不可以重定向到WEB-INF里面的资源</li></ul><h5 id="4-4-2-转发和重定向-返回String"><a href="#4-4-2-转发和重定向-返回String" class="headerlink" title="4.4.2 转发和重定向(返回String)"></a>4.4.2 转发和重定向(返回String)</h5><ul><li><p>转发到页面  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">forward:/页面的路径</span><br></pre></td></tr></table></figure></li><li><p>转发到Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">forward:/类上面的RequestMapping/方法上面的RequestMapping</span><br></pre></td></tr></table></figure></li><li><p>重定向到页面  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redirect:/页面的路径</span><br></pre></td></tr></table></figure></li><li><p>重定向到Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redirect:/类上面的RequestMapping/方法上面的RequestMapping</span><br></pre></td></tr></table></figure></li></ul><h5 id="4-4-3-知识点-ResponseBody响应-json数据"><a href="#4-4-3-知识点-ResponseBody响应-json数据" class="headerlink" title="4.4.3 知识点-ResponseBody响应 json数据"></a>4.4.3 知识点-ResponseBody响应 json数据</h5><h6 id="4-4-3-1-目标"><a href="#4-4-3-1-目标" class="headerlink" title="4.4.3.1 目标"></a>4.4.3.1 目标</h6><p>掌握SpringMVC与json交互</p><h6 id="4-4-3-2-路径"><a href="#4-4-3-2-路径" class="headerlink" title="4.4.3.2 路径"></a>4.4.3.2 路径</h6><ul><li>使用说明 </li><li>使用示例 </li></ul><h6 id="4-4-3-3-讲解"><a href="#4-4-3-3-讲解" class="headerlink" title="4.4.3.3 讲解"></a>4.4.3.3 讲解</h6><h6 id="4-4-3-3-1-使用说明"><a href="#4-4-3-3-1-使用说明" class="headerlink" title="4.4.3.3.1 使用说明"></a>4.4.3.3.1 使用说明</h6><p>​    该注解用于将 Controller 的方法返回的对象，通过 HttpMessageConverter 接口转换为指定格式的数据如： json,xml 等，通过 Response 响应给客户端 </p><h6 id="4-4-3-3-2-使用示例"><a href="#4-4-3-3-2-使用示例" class="headerlink" title="4.4.3.3.2 使用示例"></a>4.4.3.3.2 使用示例</h6><ul><li><p>需求:</p><p>发送Ajax请求,  使用@ResponseBody 注解实现将 controller 方法返回对象转换为 json 响应给客户端</p></li><li><p>步骤:</p><p>导入jackson坐标</p><p>把什么对象转json, 方法返回值就定义什么类型</p><p>添加@ResponseBody注解</p></li><li><p>实现</p><p>在springmvc.xml里面设置过滤资源</p><p>DispatcherServlet会拦截到所有的资源(除了JSP)，导致一个问题就是静态资源（img、css、js）也会被拦截到，从而不能被使用。解决问题就是需要配置静态资源不进行拦截.</p><p>语法: <code>&lt;mvc:resources location=&quot;/css/&quot; mapping=&quot;/css/**&quot;/&gt;</code>, location:webapp目录下的包,mapping:匹配请求路径的格式</p><p>在springmvc.xml配置文件添加如下配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 设置静态资源不过滤 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">"/css/"</span> <span class="attr">mapping</span>=<span class="string">"/css/**"</span>/&gt;</span>  <span class="comment">&lt;!-- 样式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">"/images/"</span> <span class="attr">mapping</span>=<span class="string">"/images/**"</span>/&gt;</span>  <span class="comment">&lt;!-- 图片 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">location</span>=<span class="string">"/js/"</span> <span class="attr">mapping</span>=<span class="string">"/js/**"</span>/&gt;</span>  <span class="comment">&lt;!-- javascript --&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>页面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"button"</span> id=<span class="string">"BtnId"</span> value=<span class="string">"Ajax Request"</span>&gt;&lt;br&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    $(function () &#123;</span><br><span class="line">        $(<span class="string">"#BtnId"</span>).click(function () &#123;</span><br><span class="line">            $.post(<span class="string">"$&#123;pageContext.request.contextPath&#125;/response/testJson"</span>,&#123;username:<span class="string">"ABC"</span>,password:<span class="number">123</span>&#125;,function (result) &#123;</span><br><span class="line">                alert(<span class="string">"result="</span>+result);</span><br><span class="line">            &#125;,<span class="string">"json"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>Springmvc 默认用 MappingJacksonHttpMessageConverter 对 json 数据进行转换，需要添加jackson依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/testJson"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@ResponseBody</span> <span class="function">User <span class="title">ResponseController</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">  System.out.println(user);</span><br><span class="line">  user.setUsername(<span class="string">"ABC"</span>);</span><br><span class="line">  <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h6 id="4-4-3-3-3-小结"><a href="#4-4-3-3-3-小结" class="headerlink" title="4.4.3.3.3 小结"></a>4.4.3.3.3 小结</h6><h6 id="4-4-3-3-3-1-实现步骤"><a href="#4-4-3-3-3-1-实现步骤" class="headerlink" title="4.4.3.3.3.1 实现步骤"></a>4.4.3.3.3.1 实现步骤</h6><ul><li>添加jackson坐标</li><li>把什么对象转成json, controller中的方法的返回值就是什么类型</li><li>在方法上面或者方法的返回值前面添加@ResponseBody</li></ul><h6 id="4-4-3-3-3-2-注意事项"><a href="#4-4-3-3-3-2-注意事项" class="headerlink" title="4.4.3.3.3.2 注意事项"></a>4.4.3.3.3.2 注意事项</h6><ul><li>Dispacher的路径是/ , 除了jsp以外所有的资源都匹配, 要使用JQ 忽略静态资源</li><li>idea有时不会自动帮我们把新加内容打包到target目录下，这时需要手工删除target目录</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;介绍SpringMVC框架&lt;/li&gt;
&lt;li&gt;能够实现SpringMVC的环境搭建&lt;/li&gt;
&lt;li&gt;掌握RequestMapping的使用&lt;/li&gt;
&lt;li&gt;掌握SpringMVC的参数绑定&lt;/li&gt;
&lt;li&gt;掌握SpringMVC的自定义类型转换器的使用&lt;/li&gt;
&lt;li&gt;掌握SpringMVC的常用注解&lt;/li&gt;
&lt;li&gt;掌握PathVariable注解&lt;/li&gt;
&lt;li&gt;掌握Controller的返回值使用&lt;/li&gt;
&lt;li&gt;掌握Controller中的转发和重定向使用&lt;/li&gt;
&lt;li&gt;掌握SpringMVC与json交互&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>黑马快速入门VUE</title>
    <link href="http://yoursite.com/2020/06/08/%E9%BB%91%E9%A9%AC%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8VUE/"/>
    <id>http://yoursite.com/2020/06/08/黑马快速入门VUE/</id>
    <published>2020-06-07T19:08:19.000Z</published>
    <updated>2020-06-10T12:15:22.021Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Vue基础</li><li>本地应用</li><li>网络应用</li><li>综合应用</li></ul><a id="more"></a><h1 id="一-Vue基础"><a href="#一-Vue基础" class="headerlink" title="一.Vue基础"></a>一.Vue基础</h1><h4 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h4><p>是一个JavaScript框架，可以简化Dom操作，响应式数据驱动</p><p>官网： <a href="https://cn.vuejs.org">https://cn.vuejs.org</a></p><h4 id="1-2-快速入门"><a href="#1-2-快速入门" class="headerlink" title="1.2 快速入门"></a>1.2 快速入门</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      &#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">          message:<span class="string">"hello,Vue"</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">                       );</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-3-el-挂载点"><a href="#1-3-el-挂载点" class="headerlink" title="1.3 el:挂载点"></a>1.3 el:挂载点</h4><ul><li><p>Vue实例范围</p><p>Vue会管理EL选项 命中的元素 和其内部的 后代元素</p></li><li><p>其他选择器</p><p>可以使用其他选择器，如class、标签选择器，但是建议使用id选择器，更清晰</p></li><li><p>其他DOM元素</p><p>可以设置其他双标签，但是不能使用HTML和body标签</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                message:<span class="string">"EL"</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-4-data数据对象"><a href="#1-4-data数据对象" class="headerlink" title="1.4 data数据对象"></a>1.4 data数据对象</h4><blockquote><p>Vue用到的数据定义再Data中</p><p>data中可以写复杂类型数据</p><p>渲染复杂类型数据时，遵守js语法即可</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;Object&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>&#123;&#123;Object.Name&#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>&#123;&#123;Object.Gender&#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h5</span>&gt;</span>&#123;&#123;campus&#125;&#125;<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h5</span>&gt;</span>&#123;&#123;campus[0]&#125;&#125;<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h5</span>&gt;</span>&#123;&#123;campus[1]&#125;&#125;<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h5</span>&gt;</span>&#123;&#123;campus[2]&#125;&#125;<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h5</span>&gt;</span>&#123;&#123;campus[3]&#125;&#125;<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                message:<span class="string">"EL"</span>,</span></span><br><span class="line"><span class="javascript">                <span class="built_in">Object</span>:&#123;</span></span><br><span class="line"><span class="actionscript">                    Name:<span class="string">"Data Object"</span>,</span></span><br><span class="line"><span class="actionscript">                    Gender:<span class="string">"Test"</span></span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                campus:[<span class="string">"A"</span>,<span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"D"</span>]</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二-本地应用"><a href="#二-本地应用" class="headerlink" title="二.本地应用"></a>二.本地应用</h1><ul><li>通过Vue实现常见网页效果</li></ul><h4 id="2-1-内容绑定，事件绑定"><a href="#2-1-内容绑定，事件绑定" class="headerlink" title="2.1 内容绑定，事件绑定"></a>2.1 内容绑定，事件绑定</h4><ul><li><p>v-text</p><ul><li><p>作用：设置标签的文本值(textContent)</p><p>默认写法会替换全部内容，使用差值表达式&lt;!–￼25–&gt;可以替换指定内容(推荐差值表达式方法)</p></li><li><p>案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;message+"!"&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">"message+'!'"</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                message:<span class="string">"V-TEXT"</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>v-html</p><ul><li><p>作用：设置标签的innerHTML</p><blockquote><p>内容中有html结构均会被解析为标签</p><p>v-text指令无论什么结构都只会解析为文本</p></blockquote></li><li><p>案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 本身文本内容，解析为文本 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h5</span> <span class="attr">v-html</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">        <span class="comment">&lt;!-- 带有html结构，解析为标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h5</span> <span class="attr">v-html</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">&lt;!-- v-text只能解析为文本 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h5</span> <span class="attr">v-text</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                message:<span class="string">"EL"</span>,</span></span><br><span class="line"><span class="actionscript">                content:<span class="string">"&lt;hr&gt;"</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>v-on基础</p><ul><li><p>作用：为元素绑定事件</p><blockquote><p>事件名不需要写on</p><p>指令可以简写为@</p><p>绑定的方法定义在methods中</p><p>方法内部通过this关键字可以访问定义在data中的数据</p></blockquote></li><li><p>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"事件绑定"</span> <span class="attr">v-on:</span>事件名=<span class="string">"方法"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 或 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"事件绑定"</span> @事件名=<span class="string">"方法"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"v-on指令-基础 A"</span> <span class="attr">v-on:click</span>=<span class="string">"A"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"v-on简写-基础 B"</span> @<span class="attr">click</span>=<span class="string">"B"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"v-on简写-双击-基础 C"</span> @<span class="attr">dblclick</span>=<span class="string">"C"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> @<span class="attr">click</span>=<span class="string">"ChangeMessage"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                message:<span class="string">"This is MESSAGE"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods:&#123;</span><br><span class="line"><span class="actionscript">                A:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="string">"Function Click A"</span>);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                B:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="string">"Function Shorthand Click B"</span>);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                C:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="string">"Fuction Doble Click C"</span>)</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                ChangeMessage:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.message+=<span class="string">"!"</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="2-1-1-综合案例：计数器"><a href="#2-1-1-综合案例：计数器" class="headerlink" title="2.1.1 综合案例：计数器"></a>2.1.1 综合案例：计数器</h5><ul><li><p>分析</p><blockquote><p>data中定义数据</p><p>methods添加add,minus方法</p><p>使用v-text将num给span设置标签</p><p>使用v-on将add和minus分别设置给+-按钮</p><p>累加的逻辑：小于10可加，否则alert</p><p>累减的逻辑：大于0可减，否则提示</p></blockquote></li><li><p>实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"-"</span> @<span class="attr">click</span>=<span class="string">"minus"</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"+"</span> @<span class="attr">click</span>=<span class="string">"add"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line">                message:0</span><br><span class="line">            &#125;,</span><br><span class="line">            methods:&#123;</span><br><span class="line"><span class="actionscript">                minus:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span>(<span class="keyword">this</span>.message&gt;<span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">this</span>.message-=<span class="number">1</span>;</span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                        alert(<span class="string">"MIN"</span>)</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    </span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                add:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span>(<span class="keyword">this</span>.message&lt;<span class="number">10</span>)&#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">this</span>.message+=<span class="number">1</span>;                        </span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                        alert(<span class="string">"MAX"</span>)</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="2-1-2-小结"><a href="#2-1-2-小结" class="headerlink" title="2.1.2 小结"></a>2.1.2 小结</h5><ul><li>创建Vue实例时：el挂载点，data数据，methods方法</li><li>v-on指令的作用是绑定事件，简写为@</li><li>方法中通过this关键字获取data中的数据</li><li>v-text指令的作用是：设置元素的文本值，简写为&lt;!–￼26–&gt;</li></ul><h4 id="2-2-显示切换，属性绑定"><a href="#2-2-显示切换，属性绑定" class="headerlink" title="2.2 显示切换，属性绑定"></a>2.2 显示切换，属性绑定</h4><ul><li><p>v-show</p><ul><li><p>作用：根据表达式的真假，切换元素的显示和隐藏</p><blockquote><p>原理是修改元素的display状态，实现显示/隐藏</p><p>指令后的元素，最终都会解析成为boolean值</p><p>值为true显示，值为false隐藏</p></blockquote></li><li><p>案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 按钮取反 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"Change Shown"</span> @<span class="attr">click</span>=<span class="string">"changeIsShow"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 增加数值，使变true --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"Add Age"</span> @<span class="attr">Click</span>=<span class="string">"add"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-show</span>=<span class="string">"isShow"</span> <span class="attr">src</span>=<span class="string">"./img/A.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-show</span>=<span class="string">"age&gt;=18"</span> <span class="attr">src</span>=<span class="string">"./img/A.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                isShow:<span class="literal">false</span>,</span></span><br><span class="line">                age:17</span><br><span class="line">            &#125;,</span><br><span class="line">            methods:&#123;</span><br><span class="line"><span class="actionscript">                changeIsShow:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.isShow=!<span class="keyword">this</span>.isShow;</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                add:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.age+=<span class="number">1</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>v-if</p><ul><li><p>作用：根据表达式的真假，切换元素的显示和隐藏(操纵dom元素)</p><blockquote><p>本质是通过操纵DOM元素来切换显示状态</p><p>表达式的值为true，元素存于DOM树中，false则从DOM树移除</p><p>频繁切换使用v-show，反之使用v-if，前者切换消耗小</p></blockquote></li><li><p>案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"v-if"</span> @<span class="attr">click</span>=<span class="string">"changeShow"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 元素始终存在，只是被隐藏，操作的是CSS --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-show</span>=<span class="string">"isShow"</span>&gt;</span>V-SHOW<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 点击后增加/删除该标签，非隐藏效果，操作的是DOM树 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-if</span>=<span class="string">"isShow"</span>&gt;</span>V-IF<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                isShow:<span class="literal">false</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods:&#123;</span><br><span class="line"><span class="actionscript">                changeShow:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.isShow=!<span class="keyword">this</span>.isShow;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>v-bind</p><ul><li><p>作用：设置元素的属性(如：src/title/class等)</p><blockquote><p>完整语法：v-bind:属性名</p><p>简写可以省略v-bind，只保留:属性名</p><p>需要动态的增删class建议使用对象方式</p></blockquote></li><li><p>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-bind:属性名=表达式</span><br></pre></td></tr></table></figure></li><li><p>案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.active</span>&#123;</span></span><br><span class="line">            border: 5px solid green;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">"imgSrc"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"imgSrc"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">:title</span>=<span class="string">"imgTitle+'@@@'"</span> <span class="attr">:class</span>=<span class="string">"&#123;active:isActive&#125;"</span> @<span class="attr">click</span>=<span class="string">"imgActive"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                imgSrc:<span class="string">"./img/A.png"</span>,</span></span><br><span class="line"><span class="actionscript">                imgTitle:<span class="string">"AAABBBCCC"</span>,</span></span><br><span class="line"><span class="actionscript">                isActive:<span class="literal">false</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods:&#123;</span><br><span class="line"><span class="actionscript">                imgActive:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.isActive=!<span class="keyword">this</span>.isActive;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="2-2-1-综合案例：图片轮播"><a href="#2-2-1-综合案例：图片轮播" class="headerlink" title="2.2.1 综合案例：图片轮播"></a>2.2.1 综合案例：图片轮播</h5><ul><li><p>分析</p><blockquote><p>定义图片数组</p><p>添加图片索引</p><p>绑定src属性：v-bind</p><p>图片切换逻辑：v-on</p><p>显示状态切换：v-show</p></blockquote></li><li><p>实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"mask"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- IMG --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"imgArr[index]"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">:class</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Left Arrow --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">v-show</span>=<span class="string">"index!=0"</span> @<span class="attr">click</span>=<span class="string">"prew"</span>&gt;</span>Left<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Right Arrow --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">v-show</span>=<span class="string">"index&lt;imgArr.length-1"</span> @<span class="attr">click</span>=<span class="string">"next"</span>&gt;</span>Right<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#mask"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                imgArr:[<span class="string">"./img/A.png"</span>,<span class="string">"./img/B.png"</span>,<span class="string">"./img/C.png"</span>],</span></span><br><span class="line">                index:0,</span><br><span class="line">            &#125;,</span><br><span class="line">            methods:&#123;</span><br><span class="line"><span class="actionscript">                prew:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.index--;</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                next:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.index++;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="2-2-2-小结"><a href="#2-2-2-小结" class="headerlink" title="2.2.2 小结"></a>2.2.2 小结</h5><ul><li>列表数据用数组保存</li><li>v-bind可以设置元素属性，如class/src</li><li>v-show和v-if都可以切换元素状态，频繁切换应使用v-show</li></ul><h4 id="2-3-列表循环，表单元素绑定"><a href="#2-3-列表循环，表单元素绑定" class="headerlink" title="2.3 列表循环，表单元素绑定"></a>2.3 列表循环，表单元素绑定</h4><ul><li><p>v-for</p><ul><li><p>作用：根据数据生成列表结构</p><blockquote><p>数组经常和v-for结合使用</p><p>语法是(item,index) in 数据</p><p>item和index可以和其他指令结合使用</p><p>数组长度的更新会同步到页面上，是响应式的</p></blockquote></li><li><p>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for:</span>"(<span class="attr">item</span>,<span class="attr">index</span>) <span class="attr">in</span> <span class="attr">arr</span>" <span class="attr">:title</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">&#123;&#123;index&#125;&#125;&#123;&#123;item&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for:</span>"(<span class="attr">item</span>,<span class="attr">index</span>) <span class="attr">in</span> <span class="attr">ObjArr</span>"&gt;</span> </span><br><span class="line">&#123;&#123;item.name&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"ADD"</span> @<span class="attr">click</span>=<span class="string">"add"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"DELETE"</span> @<span class="attr">click</span>=<span class="string">"del"</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in arr"</span>&gt;</span>@@@ :&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in arr"</span>&gt;</span>&#123;&#123;index&#125;&#125;@@@ :&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span> <span class="attr">v-for</span>=<span class="string">"item in Obj"</span> <span class="attr">:title</span>=<span class="string">"item.name"</span> &gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                arr:[<span class="string">"A"</span>,<span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"D"</span>],</span></span><br><span class="line"><span class="actionscript">                Obj:[&#123;name:<span class="string">"AA"</span>&#125;,&#123;name:<span class="string">"BB"</span>&#125;,&#123;name:<span class="string">"CC"</span>&#125;]</span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods:&#123;</span><br><span class="line"><span class="actionscript">                add:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.Obj.push(&#123;name:<span class="string">"!"</span>&#125;);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                del:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.Obj.shift();</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>v-on补充</p><ul><li><p>作用：传递自定义参数，事件修饰符</p><blockquote><p>事件绑定的方法写成<strong>函数调用</strong>的形式，可以传入自定义参数</p><p>定义方法时，需要定义<strong>形参</strong>来接收传入的实参</p><p>事件的后面跟上 <strong>.修饰符</strong>可以对事件进行限制</p><p><strong>.enter</strong>可以限制触发的按键为回车</p><p>事件修饰符有多种<a href="https://cn.vuejs.org/v2/api/#v-on">https://cn.vuejs.org/v2/api/#v-on</a></p></blockquote></li><li><p>语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> @<span class="attr">click</span>=<span class="string">"doSomething(p1,p2)"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">keyup.enter</span>=<span class="string">"doSomething"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"Just Click"</span> @<span class="attr">click</span>=<span class="string">"doSomething(123,'BCD')"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">keyup.enter</span>=<span class="string">"saySomething"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            methods:&#123;</span><br><span class="line"><span class="actionscript">                doSomething:<span class="function"><span class="keyword">function</span><span class="params">(A1,A2)</span></span>&#123;</span></span><br><span class="line">                    alert(A1);</span><br><span class="line">                    alert(A2);</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                saySomething:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="string">"Hello,Vue"</span>);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>v-model</p><ul><li><p>作用：获取和设置表单元素的值（双向元素绑定）</p><blockquote><p>v-model指令作用是便捷的设置和获取表单元素的值</p><p>绑定的数据会和表单元素 值 相关联</p><p>绑定的数据 与 表单元素的值 相互绑定</p></blockquote></li><li><p>案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"Change Meg"</span> @<span class="attr">click</span>=<span class="string">"setMessage"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"message"</span> @<span class="attr">keyup.enter</span>=<span class="string">"getMessage"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                message:<span class="string">"AAA"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods:&#123;</span><br><span class="line"><span class="actionscript">                getMessage:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="keyword">this</span>.message);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                setMessage:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.message=<span class="string">"Change Message"</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="2-3-1-综合案例：记事本"><a href="#2-3-1-综合案例：记事本" class="headerlink" title="2.3.1 综合案例：记事本"></a>2.3.1 综合案例：记事本</h5><ul><li><p>分析</p><ul><li><p>新增</p><blockquote><p>生成列表结构(v-for，数组)</p><p>获取用户输入(v-model)</p><p>回车，新增数据(v-on， .enter，  添加数据)</p><ul><li><p>注意</p><blockquote><p>v-for指令作用</p><p>v-model指令作用</p><p>v-on指令，事件修饰符</p><p>通过审查元素快速定位</p></blockquote></li></ul></blockquote></li><li><p>删除</p><blockquote><p>点击删除内容(v-on指令，splice，索引)</p><ul><li><p>索引</p><blockquote><p>数据改变，和数据绑定的元素同步改变</p><p>事件接收自定义参数</p><p>splice方法的作用</p></blockquote></li></ul></blockquote></li><li><p>统计</p><blockquote><p>统计信息个数(v-text指令，length)</p><ul><li><p>注意</p><blockquote><p>基于数据的开发方式</p><p>v-text指令的作用</p></blockquote></li></ul></blockquote></li><li><p>清空</p><blockquote><p>点击清楚所有信息(v-on 清空数组)</p><ul><li>注意</li></ul><blockquote><p>基于数据的开发方式</p></blockquote></blockquote></li><li><p>隐藏</p><blockquote><p>没有数据时候，隐藏元素(v-show，v-if，数组非空)</p></blockquote></li></ul></li><li><p>实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 主体区域 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"todoapp"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 输入框 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Note Book<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"inputValue"</span> @<span class="attr">keyup.enter</span>=<span class="string">"add"</span> <span class="attr">autofocus</span>=<span class="string">"autofocus"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">placeholder</span>=<span class="string">"Input Something"</span> <span class="attr">class</span>=<span class="string">"new-todo-list"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 列表区域 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"todo"</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in list"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"view"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"index"</span>&gt;</span>&#123;&#123;index+1&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"destory"</span> @<span class="attr">click</span>=<span class="string">"remove(index)"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 统计和清空 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"todo-count"</span> <span class="attr">v-show</span>=<span class="string">"list.length!=0"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123;list.length&#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                items left</span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"clear-compltted"</span> @<span class="attr">click</span>=<span class="string">"clear"</span> <span class="attr">v-if</span>=<span class="string">"list.length!=0"</span>&gt;</span></span><br><span class="line">                Clear</span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 底部 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">"#todoapp"</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                list: [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>],</span></span><br><span class="line"><span class="actionscript">                inputValue: <span class="string">"INIT"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                add: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.list.push(<span class="keyword">this</span>.inputValue);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                remove: <span class="function"><span class="keyword">function</span> <span class="params">(index)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.list.splice(index, <span class="number">1</span>)</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                clear:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.list=[];</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="2-3-2-小结"><a href="#2-3-2-小结" class="headerlink" title="2.3.2 小结"></a>2.3.2 小结</h5><ul><li>列表结构可以通过v-for指令结合数据生成</li><li>v-on结合修饰符可以对事件进行限制，比如 .enter</li><li>v-on在绑定事件时可以传递自定义参数</li><li>通过v-model可以快速地设置和获取表单元素的值</li><li>基于数据的开发方式</li></ul><h1 id="三-网络应用"><a href="#三-网络应用" class="headerlink" title="三.网络应用"></a>三.网络应用</h1><ul><li>Vue结合网络数据开发应用</li></ul><h4 id="3-1-axios-网络请求库"><a href="#3-1-axios-网络请求库" class="headerlink" title="3.1 axios 网络请求库"></a>3.1 axios 网络请求库</h4><h5 id="3-1-1-语法"><a href="#3-1-1-语法" class="headerlink" title="3.1.1 语法"></a>3.1.1 语法</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">axios.get(地址?key=value&amp;key2=value2).then(function(response)&#123;&#125;,function(err)&#123;&#125;)</span><br><span class="line">axios.post(地址,&#123;key:value,key2:value2&#125;).then(function(response)&#123;&#125;,function(err)&#123;&#125;)</span><br></pre></td></tr></table></figure><h4 id="3-1-2-案例"><a href="#3-1-2-案例" class="headerlink" title="3.1.2 案例"></a>3.1.2 案例</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>axios<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"Get Request"</span> <span class="attr">class</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"Post Request"</span> <span class="attr">class</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">".get"</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">            axios.get(<span class="string">"https://autumnfish.cn/api/joke/list?num=3"</span>)</span></span><br><span class="line"><span class="actionscript">            .then(<span class="function"><span class="keyword">function</span><span class="params">(response)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(response);</span></span><br><span class="line"><span class="actionscript">            &#125;,<span class="function"><span class="keyword">function</span><span class="params">(err)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(err);</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">".post"</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">            axios.post(<span class="string">"https://autumnfish.cn/api/user/reg"</span>,&#123;username:<span class="string">"ABCD"</span>&#125;)</span></span><br><span class="line"><span class="actionscript">            .then(<span class="function"><span class="keyword">function</span><span class="params">(response)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(response);</span></span><br><span class="line"><span class="actionscript">            &#125;,<span class="function"><span class="keyword">function</span><span class="params">(err)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(err);</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-1-3-小结"><a href="#3-1-3-小结" class="headerlink" title="3.1.3 小结"></a>3.1.3 小结</h4><ul><li>axios必须先导入再使用</li><li>使用get或post方法即可发送对应的请求</li><li>then方法中的回调函数会在请求成功或失败时触发</li><li>通过回调函数的形参可以获取响应内容，或错误信息</li><li>官网：<a href="https://github.com/axios/axios">https://github.com/axios/axios</a></li></ul><h4 id="3-2-axios结合Vue"><a href="#3-2-axios结合Vue" class="headerlink" title="3.2 axios结合Vue"></a>3.2 axios结合Vue</h4><h5 id="3-2-1-语法"><a href="#3-2-1-语法" class="headerlink" title="3.2.1 语法"></a>3.2.1 语法</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el:<span class="string">"#app"</span>,</span><br><span class="line">  data:&#123;</span><br><span class="line">    joke:<span class="string">"Click To Get Joke"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    getJoke:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      axios.get(<span class="string">"URL"</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">      &#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="3-2-2-案例"><a href="#3-2-2-案例" class="headerlink" title="3.2.2 案例"></a>3.2.2 案例</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>axios+vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">Value</span>=<span class="string">"Get Joke"</span> @<span class="attr">click</span>=<span class="string">"getJoke"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;joke&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                joke:<span class="string">"Click To Get Joke"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods:&#123;</span><br><span class="line"><span class="actionscript">                getJoke:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> that=<span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">                    axios.get(<span class="string">"https://autumnfish.cn/api/joke"</span>)</span></span><br><span class="line"><span class="actionscript">                    .then(<span class="function"><span class="keyword">function</span><span class="params">(response)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(response.data)</span></span><br><span class="line">                        that.joke=response.data;</span><br><span class="line"><span class="actionscript">                    &#125;,<span class="function"><span class="keyword">function</span><span class="params">(err)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(err)</span></span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-2-3-小结"><a href="#3-2-3-小结" class="headerlink" title="3.2.3 小结"></a>3.2.3 小结</h5><ul><li>axios回调函数中的this已经改变，无法访问到data中的数据</li><li>把this保存起来，回调函数中直接使用保存的this即可</li><li>和本地应用最大的区别就是改变了数据来源</li></ul><h4 id="3-3-案例：天气预报"><a href="#3-3-案例：天气预报" class="headerlink" title="3.3 案例：天气预报"></a>3.3 案例：天气预报</h4><h5 id="3-3-1-分析"><a href="#3-3-1-分析" class="headerlink" title="3.3.1 分析"></a>3.3.1 分析</h5><ul><li><p>回车查询</p><blockquote><p>按下回车(v-on， .enter)</p><p>查询数据(axios 接口 v-model)</p><p>渲染数据( v-for 数组 that )</p></blockquote></li><li><p>点击查询</p><blockquote><p>点击城市(v-on 自定义函数)</p><p>查询数据(this.method())</p><p>渲染数据()</p></blockquote></li></ul><h5 id="3-3-2-代码实现"><a href="#3-3-2-代码实现" class="headerlink" title="3.3.2 代码实现"></a>3.3.2 代码实现</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Weather<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form_group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"city"</span> @<span class="attr">keyup.enter</span>=<span class="string">"searchWeather"</span> <span class="attr">class</span>=<span class="string">"input_text"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">placeholder</span>=<span class="string">"Input Weather Query City"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span>&gt;</span></span><br><span class="line">                Search</span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hotkey"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> @<span class="attr">click</span>=<span class="string">"changeCity('北京')"</span>&gt;</span>BJ<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> @<span class="attr">click</span>=<span class="string">"changeCity('上海')"</span>&gt;</span>SH<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> @<span class="attr">click</span>=<span class="string">"changeCity('广州')"</span>&gt;</span>GZ<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> @<span class="attr">click</span>=<span class="string">"changeCity('深圳')"</span>&gt;</span>SZ<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"weather_list"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in weatherList"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"info_type"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"iconfont"</span>&gt;</span>&#123;&#123;item.type&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"info_temp"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;&#123;item.low&#125;&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;&#123;item.high&#125;&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"info_data"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;item.date&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">"#app"</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                city: <span class="string">''</span>,</span></span><br><span class="line">                weatherList:[]</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                searchWeather: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// console.log("Search City Weather");</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// console.log(this.city);</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//保存this</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> that=<span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//调用接口</span></span></span><br><span class="line"><span class="actionscript">                    axios.get(<span class="string">'http://wthrcdn.etouch.cn/weather_mini?city='</span> + <span class="keyword">this</span>.city)</span></span><br><span class="line"><span class="actionscript">                        .then(<span class="function"><span class="keyword">function</span> <span class="params">(response)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                            <span class="comment">// console.log(response.data.data.forecast);</span></span></span><br><span class="line">                            that.weatherList=response.data.data.forecast;</span><br><span class="line"><span class="actionscript">                        &#125;,<span class="function"><span class="keyword">function</span> <span class="params">(err)</span> </span>&#123;&#125;)                        </span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                changeCity:<span class="function"><span class="keyword">function</span><span class="params">(city)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.city=city;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.searchWeather();</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-3-3-小结"><a href="#3-3-3-小结" class="headerlink" title="3.3.3 小结"></a>3.3.3 小结</h5><ul><li>应用逻辑代码，建议与页面分离，使用单独js文件编写</li><li>axios回调函数中this指向改变了，需要额外保存一份</li><li>服务器返回数据比较复杂时，获取的时候需要注意层级结构</li><li>自定义参数可以让代码复用性更高</li><li>methods中定义的方法内部，可以通过this关键字点出其他方法</li></ul><h1 id="四-综合应用：网络播放器"><a href="#四-综合应用：网络播放器" class="headerlink" title="四.综合应用：网络播放器"></a>四.综合应用：网络播放器</h1><h4 id="4-1-需求分析"><a href="#4-1-需求分析" class="headerlink" title="4.1 需求分析"></a>4.1 需求分析</h4><ul><li><p>歌曲搜索</p><blockquote><p>按下回车(v-on ，.enter)</p><p>查询数据(axios 接口 v-model)</p><p>渲染数据(v-for 数组 that)</p><ul><li>搜素接口：</li></ul><blockquote><p>请求地址：<a href="https://autumnfish.cn/search">https://autumnfish.cn/search</a></p><p>请求方法：get</p><p>请求参数：keywords</p><p>响应内容：歌曲搜索结果</p></blockquote><ul><li><p>注意</p><blockquote><p>服务器返回数据，如果比较复杂，获取时需注意层级结构</p><p>通过审查元素，快速定位到需要操纵的元素</p></blockquote></li></ul></blockquote></li><li><p>歌曲播放</p><blockquote><p>点击播放(v-on 自定义参数)</p><p>歌曲地址获取(接口 歌曲ID)</p><p>歌曲地址设置(v-bind)</p><ul><li><p>歌曲URL接口获取</p><blockquote><p>请求地址：<a href="https://autumnfish.cn/song/url">https://autumnfish.cn/song/url</a></p><p>请求方法：get</p><p>请求参数：id</p><p>响应内容：歌曲URL地址</p></blockquote></li><li><p>注意</p><blockquote><p>歌曲id依赖歌曲搜索的结果，对于不用的数据也需要关注</p></blockquote></li></ul></blockquote></li><li><p>歌曲封面</p><blockquote><p>点击播放(增加逻辑)</p><p>歌曲封面获取(接口 歌曲id)</p><p>设置歌曲封面(v-bind)</p><ul><li><p>歌曲详情获取</p><blockquote><p>请求地址：<a href="https://autumnfish.cn/song/detail">https://autumnfish.cn/song/detail</a></p><p>请求方法：get</p><p>请求参数：ids</p><p>响应内容：歌曲详情，包含封面信息</p></blockquote></li><li><p>注意</p><blockquote><p>在Vue中通过v-bind操作元素属性，这里主要指src属性</p></blockquote></li></ul></blockquote></li><li><p>歌曲评论</p><blockquote><p>点击播放(增加逻辑)</p><p>歌曲评论获取(接口 歌曲id)</p><p>渲染歌曲评论(v-for)</p><ul><li><p>热门评论获取</p><blockquote><p>请求地址：<a href="https://autumnfish.cn/comment/hot?type=0">https://autumnfish.cn/comment/hot?type=0</a></p><p>请求方法：get</p><p>请求参数：id</p><p>响应内容：歌曲的热门评论</p></blockquote></li><li><p>注意</p><blockquote><p>在Vue中通过v-for获取生成列表</p></blockquote></li></ul></blockquote></li><li><p>播放动画</p><blockquote><p>监听音乐播放(v-on play)</p><p>监听音乐暂停(v-on pause)</p><p>操纵类名(v-bind 对象)</p><ul><li><p>注意</p><blockquote><p>audio标签的play事件会在音频播放时触发</p><p>audio标签的pause事件会在音频暂停时触发</p><p>通过对象的方式设置类名，类名生效与否取决于后面值的真假</p></blockquote></li></ul></blockquote></li><li><p>mv播放</p><blockquote><p>mv图标显示(v-if)</p><p>mv地址获取(接口 mvid)</p><p>遮罩层(v-show v-on)</p><p>mv地址设置(v-bind)</p><ul><li><p>MV地址获取</p><blockquote><p>请求地址：<a href="https://autumnfish.cn/mv/url">https://autumnfish.cn/mv/url</a></p><p>请求方法：get</p><p>请求参数：id</p><p>响应内容：MV地址</p></blockquote></li><li><p>注意</p><blockquote><p>不同接口需要的数据是不同的，文档阅读需要仔细</p><p>页面结构复杂之后，通过审查元素的方式快速定位相关元素</p><p>响应式数据，一定要在data中定义</p></blockquote></li></ul></blockquote></li></ul><h4 id="4-2-代码实现"><a href="#4-2-代码实现" class="headerlink" title="4.2 代码实现"></a>4.2 代码实现</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Music Player<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 播放器主体区域 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"play_wrap"</span> <span class="attr">id</span>=<span class="string">"player"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"search_bar"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 搜索歌曲 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">autocapitalize</span>=<span class="string">"off"</span> <span class="attr">v-model</span>=<span class="string">"query"</span> @<span class="attr">keyup.enter</span>=<span class="string">"searchMusic"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center_con"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 搜索歌曲列表 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"song_wrapper"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in musicList"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> @<span class="attr">click</span>=<span class="string">"playMusic(item.id)"</span>&gt;</span>play<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"item.mvid!=0"</span> @<span class="attr">click</span>=<span class="string">"playMV(item.mvid)"</span>&gt;</span>   MV <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 歌曲信息容器 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player_con"</span> <span class="attr">:class</span>=<span class="string">"&#123;playing:isPlaying&#125;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"musicCover"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 评论容器 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment_wrapper"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span><span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment_list"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">dl</span> <span class="attr">v-for</span>=<span class="string">"item in hotComments"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"item.user.avatarUrl"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"name"</span>&gt;</span>&#123;&#123;item.nickname&#125;&#125;<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">"detail"</span>&gt;</span>&#123;&#123;item.content&#125;&#125;<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"audio_con"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">audio</span> <span class="attr">ref</span>=<span class="string">"audio"</span> @<span class="attr">play</span>=<span class="string">"play"</span> @<span class="attr">pause</span>=<span class="string">"pause"</span> <span class="attr">:src</span>=<span class="string">"musicUrl"</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span> <span class="attr">class</span>=<span class="string">"myaudio"</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"video_con"</span> <span class="attr">v-show</span>=<span class="string">"isShow"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">video</span>  <span class="attr">ref</span>=<span class="string">"vedio"</span>  <span class="attr">:src</span>=<span class="string">"mvUrl"</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mask"</span> @<span class="attr">click</span>=<span class="string">"hide"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">"#player"</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">//查询歌曲名称</span></span></span><br><span class="line"><span class="actionscript">                query: <span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//歌曲列表</span></span></span><br><span class="line">                musicList: [],</span><br><span class="line"><span class="actionscript">                <span class="comment">//歌曲地址</span></span></span><br><span class="line">                musicUrl: [],</span><br><span class="line"><span class="actionscript">                <span class="comment">//歌曲封面</span></span></span><br><span class="line"><span class="actionscript">                musicCover: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//歌曲评论</span></span></span><br><span class="line">                hotComments: [],</span><br><span class="line"><span class="actionscript">                <span class="comment">//动画播放状态</span></span></span><br><span class="line"><span class="actionscript">                isPlaying:<span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//遮罩层的显示状态</span></span></span><br><span class="line"><span class="actionscript">                isShow:<span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//mv地址</span></span></span><br><span class="line"><span class="actionscript">                mvUrl:<span class="string">""</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">//歌曲搜索</span></span></span><br><span class="line"><span class="actionscript">                searchMusic: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//保存this</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//调用接口</span></span></span><br><span class="line"><span class="actionscript">                    axios.get(<span class="string">'https://autumnfish.cn/search?keywords='</span> + <span class="keyword">this</span>.query)</span></span><br><span class="line"><span class="actionscript">                        .then(<span class="function"><span class="keyword">function</span> <span class="params">(response)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                            <span class="comment">// console.log(response);</span></span></span><br><span class="line">                            that.musicList = response.data.result.songs;</span><br><span class="line"><span class="actionscript">                        &#125;, <span class="function"><span class="keyword">function</span> <span class="params">(err)</span> </span>&#123;&#125;);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                <span class="comment">//歌曲播放</span></span></span><br><span class="line"><span class="actionscript">                playMusic: <span class="function"><span class="keyword">function</span> <span class="params">(musicId)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// console.log(musicId)</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//获取歌曲地址</span></span></span><br><span class="line"><span class="actionscript">                    axios.get(<span class="string">"https://autumnfish.cn/song/url?id="</span> + musicId)</span></span><br><span class="line"><span class="actionscript">                        .then(<span class="function"><span class="keyword">function</span> <span class="params">(response)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                            <span class="comment">// console.log(response);</span></span></span><br><span class="line"><span class="actionscript">                            <span class="comment">// console.log(response.data.data[0].url);</span></span></span><br><span class="line">                            that.musicUrl = response.data.data[0].url;</span><br><span class="line"><span class="actionscript">                        &#125;, <span class="function"><span class="keyword">function</span> <span class="params">(err)</span> </span>&#123;&#125;)</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//歌曲详情获取</span></span></span><br><span class="line"><span class="actionscript">                    axios.get(<span class="string">"https://autumnfish.cn/song/detail?ids="</span> + musicId)</span></span><br><span class="line"><span class="actionscript">                        .then(<span class="function"><span class="keyword">function</span> <span class="params">(response)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                            <span class="comment">// console.log(response);</span></span></span><br><span class="line"><span class="actionscript">                            <span class="comment">// console.log(response.data.songs[0].al.picUrl);</span></span></span><br><span class="line">                            that.musicCover = response.data.songs[0].al.picUrl;</span><br><span class="line"><span class="actionscript">                        &#125;, <span class="function"><span class="keyword">function</span> <span class="params">(err)</span> </span>&#123;&#125;)</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//歌曲评论获取</span></span></span><br><span class="line"><span class="actionscript">                    axios.get(<span class="string">"https://autumnfish.cn/comment/hot?type=0&amp;id="</span> + musicId)</span></span><br><span class="line"><span class="actionscript">                        .then(<span class="function"><span class="keyword">function</span> <span class="params">(response)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                            <span class="comment">// console.log(response);</span></span></span><br><span class="line"><span class="actionscript">                            <span class="comment">// console.log(response.data.hotComments);</span></span></span><br><span class="line">                            that.hotComments = response.data.hotComments;</span><br><span class="line"><span class="actionscript">                        &#125;, <span class="function"><span class="keyword">function</span> <span class="params">(err)</span> </span>&#123;&#125;)</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                <span class="comment">// 动画播放/暂停</span></span></span><br><span class="line"><span class="actionscript">                play: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"play"</span>);</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.isPlaying=<span class="literal">true</span>;</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                pause: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"pause"</span>);</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.isPlaying=<span class="literal">false</span>;</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                <span class="comment">//播放MV</span></span></span><br><span class="line"><span class="actionscript">                playMV:<span class="function"><span class="keyword">function</span><span class="params">(mvid)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> that=<span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">                    axios.get(<span class="string">"https://autumnfish.cn/mv/url?id="</span>+mvid)</span></span><br><span class="line"><span class="actionscript">                    .then(<span class="function"><span class="keyword">function</span><span class="params">(response)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">// console.log(response.data.data.url);</span></span></span><br><span class="line"><span class="actionscript">                        that.isShow=<span class="literal">true</span>;</span></span><br><span class="line">                        that.mvUrl=response.data.data.url;</span><br><span class="line"><span class="actionscript">                    &#125;,<span class="function"><span class="keyword">function</span><span class="params">(err)</span></span>&#123;&#125;)</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                <span class="comment">//隐藏</span></span></span><br><span class="line"><span class="actionscript">                hide:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.isShow==<span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.$refs.vedio.pause()</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-3-小结"><a href="#4-3-小结" class="headerlink" title="4.3 小结"></a>4.3 小结</h4><ul><li>服务器返回数据，如果比较复杂，获取时需注意层级结构</li><li>通过审查元素，快速定位到需要操纵的元素</li><li>歌曲id依赖歌曲搜索的结果，对于不用的数据也需要关注</li><li>在Vue中通过v-bind操作元素属性</li><li>在Vue中通过v-for获取生成列表</li><li>audio标签的play事件会在音频播放时触发</li><li>audio标签的pause事件会在音频暂停时触发</li><li>通过对象的方式设置类名，类名生效与否取决于后面值的真假</li><li>不同接口需要的数据是不同的，文档阅读需要仔细</li><li>页面结构复杂之后，通过审查元素的方式快速定位相关元素</li><li>响应式数据，一定要在data中定义</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Vue基础&lt;/li&gt;
&lt;li&gt;本地应用&lt;/li&gt;
&lt;li&gt;网络应用&lt;/li&gt;
&lt;li&gt;综合应用&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（六十九）</title>
    <link href="http://yoursite.com/2020/06/04/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E4%B9%9D%EF%BC%89/"/>
    <id>http://yoursite.com/2020/06/04/就业班学习笔记（六十九）/</id>
    <published>2020-06-04T09:29:00.000Z</published>
    <updated>2020-06-05T13:15:14.669Z</updated>
    
    <content type="html"><![CDATA[<ul><li>SpringMVC接收请求</li><li>文件上传</li><li>静态资源访问开启功能</li></ul><a id="more"></a><h1 id="一-SpringMVC的请求"><a href="#一-SpringMVC的请求" class="headerlink" title="一.SpringMVC的请求"></a>一.SpringMVC的请求</h1><ul><li><p>搭建环境</p><ul><li><p>建立新Moudle，配置pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span> </span><br><span class="line">  <span class="comment">&lt;!--springMVC核心--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!--servlet--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!--jsp--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">version</span>=<span class="string">"2.5"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 前端控制器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>spring-mvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--开启注解组件扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima.web"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启mvc注解支持--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/pages/"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="1-1-请求参数"><a href="#1-1-请求参数" class="headerlink" title="1.1 请求参数"></a>1.1 请求参数</h4><p>客户端请求参数的格式是: name=value&amp;name=value</p><p>服务器要获取请求的参数，有时还需要进行数据的封装，SpringMVC可以接收如下类型的参数:</p><ul><li><p>简单类型(基本类型\基本类型的包装类型\字符串)</p><ul><li><p>index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;index&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;SpringMVC知识学习&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/simpleParam?username=jack&amp;age=18"</span>&gt;</span><br><span class="line">    simpleParam</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/simpleParam"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">simpleParam</span><span class="params">(String username,Integer age)</span></span>&#123;</span><br><span class="line">        System.out.println(username);</span><br><span class="line">        System.out.println(age);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong>注意</strong>:前端页面的name属性名必须与方法中的形参名称一致，类型自定义</p></blockquote></li><li><p>对象类型</p><ul><li><p>User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/pojoParam"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    User: &lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt;&lt;br&gt;</span><br><span class="line">    Age: &lt;input type=<span class="string">"text"</span> name=<span class="string">"age"</span>&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Object_Type"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/pojoParam"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">pojoParam</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong>注意</strong>:表单元素的name属性必须与user实体的属性名一致</p></blockquote></li><li><p>数组类型</p><blockquote><p>应用场景:批量删除</p></blockquote><ul><li><p>index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/arrayParam"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"ids"</span> value=<span class="string">"1"</span>&gt;User A&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"ids"</span> value=<span class="string">"2"</span>&gt;User B&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"ids"</span> value=<span class="string">"3"</span>&gt;User C&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"ids"</span> value=<span class="string">"4"</span>&gt;User D&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Array Param"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/arrayParam"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">arrayParam</span><span class="params">(Integer[] ids)</span></span>&#123;</span><br><span class="line">    System.out.println(Arrays.toString(ids));</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong>注意</strong>:复选框的name属性名必须与数组的变量名一致</p></blockquote></li><li><p>集合(复杂)类型</p><p>如果提交的是一个集合的数据，springMVC的方法形参是无法接收的，必须要通过实体类进行包装才行</p><ul><li><p>QueryVo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Simple Type</span></span><br><span class="line">    <span class="keyword">private</span> String keyword;</span><br><span class="line">    <span class="comment">//Object Type</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">    <span class="comment">//List Type</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; list;</span><br><span class="line">    <span class="comment">//Map Type</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/queryVoParam"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    Search: &lt;input type=<span class="string">"text"</span> name=<span class="string">"keyword"</span>&gt;&lt;br&gt;</span><br><span class="line">    User: &lt;input type=<span class="string">"text"</span> name=<span class="string">"user.username"</span> placeholder=<span class="string">"User Name"</span>&gt;&lt;input type=<span class="string">"text"</span> name=<span class="string">"user.age"</span> placeholder=<span class="string">"Age"</span>&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">    List Array:</span><br><span class="line">    &lt;%--</span><br><span class="line">        list[<span class="number">0</span>] == 第一个元素</span><br><span class="line">        list[<span class="number">1</span>] == 第二个元素</span><br><span class="line">    --%&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> name=<span class="string">"list[0]"</span> placeholder=<span class="string">"First Element"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> name=<span class="string">"list[1]"</span> placeholder=<span class="string">"Second Element"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> name=<span class="string">"list[2]"</span> placeholder=<span class="string">"Third Element"</span>&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Map Array:</span><br><span class="line">    &lt;%--</span><br><span class="line">        map.put(<span class="string">"key1"</span>,value);</span><br><span class="line">        map.put(<span class="string">"key2"</span>,value);</span><br><span class="line">    --%&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> name=<span class="string">"map[key1]"</span> placeholder=<span class="string">"Key1 Value"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> name=<span class="string">"map[key2]"</span> placeholder=<span class="string">"Key2 Value"</span>&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Complex Type"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/queryVoParam"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">queryVoParam</span><span class="params">(QueryVo queryVo)</span></span>&#123;</span><br><span class="line">    System.out.println(queryVo);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="1-2-中文乱码过滤器"><a href="#1-2-中文乱码过滤器" class="headerlink" title="1.2 中文乱码过滤器"></a>1.2 中文乱码过滤器</h4><blockquote><p>如果是get请求，tomcat8以上版本的服务器统一了UTF-8编码，所以我们不会出现乱码 </p><p>如果是post请求，由于servlet规范当中post默认解码方式为ISO-8859-1，所以出现了中文乱码问题 </p><p>spring框架提供了post请求中文过滤器</p></blockquote><ul><li><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--中文乱码过滤器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-自定义类型转换器"><a href="#1-3-自定义类型转换器" class="headerlink" title="1.3 自定义类型转换器"></a>1.3 自定义类型转换器</h4><ul><li><p>自定义类型转换器</p><blockquote><p>此处应用场景:日期格式</p><p>yyyy-MM-dd 框架无法识别，报400错误，springMVC已支持自定义类型转换器的扩展</p></blockquote></li><li><p>spring-mvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--开启mvc注解支持--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">conversion-service</span>=<span class="string">"conversionService"</span>/&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!-- 扩展自定义类型转换器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"conversionService"</span> <span class="attr">class</span>=<span class="string">"org.springframework.context.support.ConversionServiceFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"converters"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.itheima.web.convert.DateConverter"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/dateParam"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    Birthday: &lt;input type=<span class="string">"text"</span> name=<span class="string">"birthday"</span>&gt;(日期格式:yyyy-MM-dd)&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Date Submit"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 接收日期类型</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/dateParam"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">dateParam</span><span class="params">(Date birthday)</span></span>&#123;</span><br><span class="line">    SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">    System.out.println(simpleDateFormat.format(birthday));</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>注解方案</p><ul><li><p>删除web.xml添加的配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--开启注解组件扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima.web"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启mvc注解支持--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 扩展自定义类型转换器 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean"&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name="converters"&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;set&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;bean class="com.itheima.web.convert.DateConverter"&gt;&lt;/bean&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;/set&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;/property&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/bean&gt;--&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>UserController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 接收日期类型</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/dateParam"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">dateParam</span><span class="params">(@DateTimeFormat(pattern = <span class="string">"yyyy-MM-dd"</span>)</span> Date birthday)</span>&#123;</span><br><span class="line">    SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">    System.out.println(simpleDateFormat.format(birthday));</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="1-4-相关注解"><a href="#1-4-相关注解" class="headerlink" title="1.4 相关注解"></a>1.4 相关注解</h4><ul><li><p>@RequestParam</p><blockquote><p>应用场景:分页查询</p></blockquote><ul><li><p>index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/findByPage?pageNum=1&amp;size=10"</span>&gt;</span><br><span class="line">    Page Query</span><br><span class="line">&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页查询</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@RequestParam 注解 常用属性</span></span><br><span class="line"><span class="comment">name/value:帮我们解决请求参数名和方法的变量名不一致问题</span></span><br><span class="line"><span class="comment">required: 默认值为true，要求前端必须提交参数和值</span></span><br><span class="line"><span class="comment">defaultValue:指定参数的默认值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/findByPage"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">findByPage</span><span class="params">(@RequestParam(name = <span class="string">"pageNum"</span>,defaultValue = <span class="string">"1"</span>)</span> Integer currentPage,@<span class="title">RequestParam</span><span class="params">(name = <span class="string">"size"</span>,defaultValue = <span class="string">"10"</span>)</span>Integer pageSize)</span>&#123;</span><br><span class="line">    System.out.println(currentPage);</span><br><span class="line">    System.out.println(pageSize);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>@RequestHeader</p><blockquote><p>获取请求头，相当于:request.getHeader();</p></blockquote><ul><li><p>index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/user/requestHeader"&gt;Request Header&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/requestHeader"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">requestHeader</span><span class="params">(@RequestHeader(<span class="string">"User-Agent"</span>)</span> String userAgent,@<span class="title">RequestHeader</span><span class="params">(<span class="string">"Cookie"</span>)</span> String cookie)</span>&#123;</span><br><span class="line">  System.out.println(userAgent);</span><br><span class="line">  System.out.println(cookie);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>@CookieValue</p><blockquote><p>专门获取指定cookie名称的值</p></blockquote><ul><li><p>index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/user/cookieValue"&gt;Cookie Value&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/cookieValue"</span>)</span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">cookieValue</span><span class="params">(@CookieValue(<span class="string">"JSESSIONID"</span>)</span> String jsessionid)</span>&#123;</span><br><span class="line">  System.out.println(<span class="string">"JSESSIONID: "</span>+jsessionid);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="1-5-获取Servlet相关API"><a href="#1-5-获取Servlet相关API" class="headerlink" title="1.5 获取Servlet相关API"></a>1.5 获取Servlet相关API</h4><ul><li><p>index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/user/servletAPI"&gt; servletAPI&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// servletAPI</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/servletAPI"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">servletAPI</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, HttpSession httpSession)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">  String username = httpServletRequest.getParameter(<span class="string">"username"</span>);</span><br><span class="line">  System.out.println(username);</span><br><span class="line">  httpServletRequest.getRequestDispatcher(<span class="string">"/WEB-INF/pages/success.jsp"</span>).forward(httpServletRequest,httpServletResponse);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-文件上传"><a href="#二-文件上传" class="headerlink" title="二.文件上传"></a>二.文件上传</h1><ul><li><p>需求分析</p><table><thead><tr><th align="center"><center>       需求分析   <center/></th></tr></thead><tbody><tr><td align="center"><center/>一.文件上传三要素<br/>Avatar: &lt;input type=”file” name=”picFile”&gt;</td></tr><tr><td align="center"><center/>⬇</td></tr><tr><td align="center"><center/>二.SpringMVC集成文件上传组件<br/>MultipartResolver多组件上传解析器<br/><center/>⬇<br/>底层依赖file-upload环境</td></tr><tr><td align="center"><center/>⬇</td></tr><tr><td align="center"><center/>UserController<br/>public String upload(String username, MultipartFile picFile)</td></tr></tbody></table></li></ul><h4 id="2-1-文件上传三要素"><a href="#2-1-文件上传三要素" class="headerlink" title="2.1 文件上传三要素"></a>2.1 文件上传三要素</h4><ul><li>表单的提交方式 method=”POST” </li><li>表单的enctype属性是多部分表单形式 enctype=“multipart/form-data” </li><li>表单项(元素)type=”file”</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">    Name: &lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt;&lt;br&gt;</span><br><span class="line">    Avatar: &lt;input type=<span class="string">"file"</span> name=<span class="string">"picFile"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h4 id="2-2-文件上传原理"><a href="#2-2-文件上传原理" class="headerlink" title="2.2 文件上传原理"></a>2.2 文件上传原理</h4><p><img src="image-20200604113142400.png" alt=""></p><h4 id="2-3-springMVC实现文件上传"><a href="#2-3-springMVC实现文件上传" class="headerlink" title="2.3 springMVC实现文件上传"></a>2.3 springMVC实现文件上传</h4><ul><li><p>index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/upload"</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">  Name: &lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt;&lt;br&gt;</span><br><span class="line">  Avatar: &lt;input type=<span class="string">"file"</span> name=<span class="string">"picFile"</span>&gt;&lt;br&gt;</span><br><span class="line">  &lt;input type=<span class="string">"submit"</span> value=<span class="string">"File Upload"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li><li><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--文件上传--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>修改spring-mvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">文件上传组件扩展</span></span><br><span class="line"><span class="comment">id="multipartResolver" 此id必须是这个名称</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    限定文件的大小</span></span><br><span class="line"><span class="comment">    单位是字节(B)</span></span><br><span class="line"><span class="comment">    限制大约在5MB左右</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"512000"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>UserController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文件上传</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/upload"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">upload</span><span class="params">(String username, MultipartFile picFile)</span></span>&#123;</span><br><span class="line">  System.out.println(<span class="string">"Basic"</span>+username);</span><br><span class="line">  System.out.println(<span class="string">"File"</span>+picFile);</span><br><span class="line">  System.out.println(<span class="string">"File Name"</span>+picFile.getOriginalFilename());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    picFile.transferTo(<span class="keyword">new</span> File(<span class="string">"/Users/swzxsyh/Downloads/"</span>+picFile.getOriginalFilename()));</span><br><span class="line">  &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-静态资源访问的开启"><a href="#三-静态资源访问的开启" class="headerlink" title="三 静态资源访问的开启"></a>三 静态资源访问的开启</h1><ul><li><p>问题</p><p>webapp路径下创建img文件夹，添加1.png图片，但是访问404</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/img/1.png"&gt;Static Resources&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>解释</p><p>在SpringMVC的前端控制器DispatcherServlet的url-pattern配置的是 /(缺省),代表除了jsp请求不拦截, 其他的所有请求都会拦截，包括一些静态文件(html、css、js)等, 而拦截住之后,它又找不到对应的处理器方法来处理, 因此报错.</p><p><img src="image-20200604142556165.png" alt=""></p><p><img src="image-20200604142605374.png" alt=""></p></li></ul><h4 id="3-1-方式一"><a href="#3-1-方式一" class="headerlink" title="3.1 方式一"></a>3.1 方式一</h4><blockquote><p>手动配置springMVC框架的静态资源映射</p></blockquote><table><thead><tr><th><center/><a href="http://localhost:8080/项目名/img">http://localhost:8080/项目名/img</a></th></tr></thead><tbody><tr><td><center/>⬇</td></tr><tr><td><center/>配置&lt;mvc:resources mapping=”/img/**” location=”/img/“/&gt;</td></tr><tr><td><center/>⬇</td></tr><tr><td><center/>查找到src/main/webapp/img/1.png</td></tr></tbody></table><ul><li><p>spring-mvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    静态资源手动映射</span></span><br><span class="line"><span class="comment">    mapping="/img/**" 浏览器发送请求</span></span><br><span class="line"><span class="comment">    location="/img/" 静态资源的路径</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/img/**"</span> <span class="attr">location</span>=<span class="string">"/img/"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>问题</p><p>不同静态资源目录，都需要映射一次，重复代码过多</p></li></ul><h4 id="3-2-方式二"><a href="#3-2-方式二" class="headerlink" title="3.2 方式二"></a>3.2 方式二</h4><ul><li><p>spring-mvc.xml添加如下配置即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置tomcat默认的静态资源处理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="image-20200604143356664.png" alt=""></p></li></ul><h4 id="3-3-方式三"><a href="#3-3-方式三" class="headerlink" title="3.3 方式三"></a>3.3 方式三</h4><ul><li><p>方式二可优化处</p><p>web.xml中url-pattern相当于覆盖tomcat本身规则，可以创建自身规则进行拦截</p></li><li><p>注释spring-mvc.xml内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--    </span></span><br><span class="line"><span class="comment">静态资源手动映射</span></span><br><span class="line"><span class="comment">    mapping="/img/**" 浏览器发送请求</span></span><br><span class="line"><span class="comment">    location="/img/" 静态资源的路径</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;mvc:resources mapping="/img/**" location="/img/"/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置tomcat默认的静态资源处理--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;mvc:default-servlet-handler/&gt;--&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 前端控制器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">   自定义一个不会与默认的tomcat冲突的拦截规则</span></span><br><span class="line"><span class="comment">   配置：*.do  *.action 之后</span></span><br><span class="line"><span class="comment">   什么情况下才会被sprignMVC框架所拦截</span></span><br><span class="line"><span class="comment">   浏览器访问的资源需要加上：/user/quick.do</span></span><br><span class="line"><span class="comment">   所以静态  1.png  a.html 这些就不会被springMVC框架拦截，就不会出现404问题</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 SpringMVC的请求</strong></p><p><strong>### 接收请求参数</strong></p><p>- 简单类型</p><p>- 对象类型</p><p>- 数组类型</p><p>- 集合（复杂）类型</p><p><strong>### post请求中文过滤器</strong></p><p>- CharacterEncodingFilter</p><p>​    - UTF-8</p><p><strong>### 自定义类型转换器</strong></p><p>- Converter&lt;source,target&gt;</p><p><strong>### 相关注解</strong></p><p>- @RequestParam</p><p>- @RequestHeader</p><p>- @CookieValue</p><p><strong>### 原生ServletAPI</strong></p><p>- HttpServletRequest</p><p>- HttpServletResponse</p><p>- HttpSession</p><p><strong>## 二 文件上传</strong></p><p><strong>### 文件上传三要素</strong></p><p>- 表单项 type=”file”</p><p>- 表单的提交方式 method=”POST”</p><p>- 表单的enctype属性是多部分表单形式 enctype=“multipart/form-data”</p><p><strong>### 文件上传</strong></p><p>- 导入fileupload坐标</p><p>- 配置文件上传解析器</p><p>​    - CommonsMultipartResolver</p><p>- 编写文件上传代码</p><p>​    - MultipartFile</p><p><strong>## 三 静态资源访问的开启</strong></p><p><strong>### &lt;mvc:resources mapping=”/img/*“ location=”/img/“/&gt;</strong></p><p><strong>### <a href="mvc:default-servlet-handler/">mvc:default-servlet-handler/</a></strong></p><p><strong>###  &lt;url-pattern&gt;*.ys&lt;/url-pattern&gt;</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;SpringMVC接收请求&lt;/li&gt;
&lt;li&gt;文件上传&lt;/li&gt;
&lt;li&gt;静态资源访问开启功能&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（六十八）</title>
    <link href="http://yoursite.com/2020/06/03/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E5%85%AB%EF%BC%89/"/>
    <id>http://yoursite.com/2020/06/03/就业班学习笔记（六十八）/</id>
    <published>2020-06-03T01:03:57.000Z</published>
    <updated>2020-06-03T14:15:42.213Z</updated>
    
    <content type="html"><![CDATA[<ul><li>声明式事务</li><li>Servlet整合Spring</li><li>SpringMVC</li></ul><a id="more"></a><h1 id="一-Spring的事务"><a href="#一-Spring的事务" class="headerlink" title="一.Spring的事务"></a>一.Spring的事务</h1><p>Spring的事务控制可以分为编程式事务控制和声明式事务控制。 </p><ul><li><p>编程式事务</p><p>就是将业务代码和事务代码放在一起书写,它的耦合性太高,开发中不使用</p></li><li><p>声明式事务</p><p>其实就是将事务代码和业务代码隔离开发, 然后通过一段配置让他们组装运行, 最后达到事务控制的目的.</p><p>声明式事务就是通过AOP原理实现的.</p></li></ul><h4 id="1-1-Spring声明式事务"><a href="#1-1-Spring声明式事务" class="headerlink" title="1.1 Spring声明式事务"></a>1.1 Spring声明式事务</h4><p>在 Spring 配置文件中声明式的处理事务来代替代码式的处理事务。底层采用AOP思想来实现的</p><h5 id="1-1-1-思想"><a href="#1-1-1-思想" class="headerlink" title="1.1.1 思想"></a>1.1.1 思想</h5><ul><li>目标对象:AccountServiceImpl</li><li>通知对象:DataSourceTransactionManager</li><li>配置切面:xml、注解</li></ul><h5 id="1-1-2-环境搭建"><a href="#1-1-2-环境搭建" class="headerlink" title="1.1.2 环境搭建"></a>1.1.2 环境搭建</h5><ul><li><p>创建java模块</p></li><li><p>导入jar包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--druid连接池--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring-jdbc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring核心--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring整合junit--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring的orm--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aspectj--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写AccountDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">outUser</span><span class="params">(String outUser, Double money)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">inUser</span><span class="params">(String inUser, Double money)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写AccountDaoImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJdbcTemplate</span><span class="params">(JdbcTemplate jdbcTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.jdbcTemplate = jdbcTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">outUser</span><span class="params">(String outUser, Double money)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">"UPDATE account SET money = money - ? WHERE name  = ?"</span>;</span><br><span class="line">        jdbcTemplate.update(sql, money, outUser);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inUser</span><span class="params">(String inUser, Double money)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">"UPDATE account SET money = money + ? WHERE name  = ?"</span>;</span><br><span class="line">        jdbcTemplate.update(sql, money, inUser);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写AccountService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser,String inUser,Double money)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写AccountServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccountDao</span><span class="params">(AccountDao accountDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.accountDao = accountDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser, String inUser, Double money)</span> </span>&#123;</span><br><span class="line">        accountDao.outUser(outUser,money);</span><br><span class="line">        accountDao.inUser(inUser,money);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写spring的配置文件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;beans xmlns=<span class="string">"http://www.springframework.org/schema/beans"</span></span><br><span class="line">       xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">       xmlns:aop=<span class="string">"http://www.springframework.org/schema/aop"</span></span><br><span class="line">       xmlns:context=<span class="string">"http://www.springframework.org/schema/context"</span></span><br><span class="line">       xsi:schemaLocation=<span class="string">" http://www.springframework.org/schema/beans</span></span><br><span class="line"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="line"><span class="string">        http://www.springframework.org/schema/aop</span></span><br><span class="line"><span class="string">        http://www.springframework.org/schema/aop/spring-aop.xsd</span></span><br><span class="line"><span class="string">        http://www.springframework.org/schema/context</span></span><br><span class="line"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--加载第三方配置文件--&gt;</span><br><span class="line">    &lt;context:property-placeholder location=<span class="string">"classpath:jdbc.properties"</span>/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--druid交给ioc--&gt;</span><br><span class="line">    &lt;bean id=<span class="string">"dataSource"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">"driverClassName"</span> value=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">"url"</span> value=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">"username"</span> value=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">"password"</span> value=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--jdbcTemplate交给ioc--&gt;</span><br><span class="line">    &lt;bean id=<span class="string">"jdbcTemplate"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.springframework.jdbc.core.JdbcTemplate"</span>&gt;</span><br><span class="line">        &lt;constructor-arg name=<span class="string">"dataSource"</span> ref=<span class="string">"dataSource"</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--dao交给ioc--&gt;</span><br><span class="line">    &lt;bean id=<span class="string">"accountDao"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.itheima.dao.impl.AccountDaoImpl"</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">"jdbcTemplate"</span> ref=<span class="string">"jdbcTemplate"</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--将service交给ioc--&gt;</span><br><span class="line">    &lt;bean id=<span class="string">"accountService"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.itheima.service.impl.AccountServiceImpl"</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">"accountDao"</span> ref=<span class="string">"accountDao"</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--事务管理器交给ioc--&gt;</span><br><span class="line">    &lt;bean id=<span class="string">"transactionManager"</span>  <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">"dataSource"</span> ref=<span class="string">"dataSource"</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line">@ContextConfiguration("classpath:applicationContext.xml")</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        accountService.transfer(<span class="string">"tom"</span>,<span class="string">"jerry"</span>,<span class="number">100</span>d);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-1-3-XML配置"><a href="#1-1-3-XML配置" class="headerlink" title="1.1.3 XML配置"></a>1.1.3 XML配置</h5><ul><li><p>配置xml事务aop</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">" http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx/spring-tx.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--加载第三方配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--druid交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--jdbcTemplate交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jdbcTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.core.JdbcTemplate"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--dao交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.AccountDaoImpl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcTemplate"</span> <span class="attr">ref</span>=<span class="string">"jdbcTemplate"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--将service交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AccountServiceImpl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"accountDao"</span> <span class="attr">ref</span>=<span class="string">"accountDao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--事务管理器交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--将事务管理器升级为事务通知类--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!--aop配置--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 仅spring的事务切面配置使用此标签</span></span><br><span class="line"><span class="comment">            通知+切点=切面</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span> <span class="attr">pointcut</span>=<span class="string">"execution(* com.itheima.service..*.*(..))"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p></li><li><p>事务通知类细节补充</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">" http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx/spring-tx.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--加载第三方配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--druid交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--jdbcTemplate交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jdbcTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.core.JdbcTemplate"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--dao交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.AccountDaoImpl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcTemplate"</span> <span class="attr">ref</span>=<span class="string">"jdbcTemplate"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--将service交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AccountServiceImpl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"accountDao"</span> <span class="attr">ref</span>=<span class="string">"accountDao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--事务管理器交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--将事务管理器升级为事务通知类--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"save*"</span> <span class="attr">isolation</span>=<span class="string">"DEFAULT"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"false"</span> <span class="attr">timeout</span>=<span class="string">"-1"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"update*"</span> <span class="attr">isolation</span>=<span class="string">"DEFAULT"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"false"</span> <span class="attr">timeout</span>=<span class="string">"-1"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"delete*"</span> <span class="attr">isolation</span>=<span class="string">"DEFAULT"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"false"</span> <span class="attr">timeout</span>=<span class="string">"-1"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"find*"</span> <span class="attr">propagation</span>=<span class="string">"SUPPORTS"</span> <span class="attr">read-only</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> <span class="attr">isolation</span>=<span class="string">"DEFAULT"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span> <span class="attr">read-only</span>=<span class="string">"false"</span> <span class="attr">timeout</span>=<span class="string">"-1"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    定义事务管理器信息 DefaultTransactionDefinition</span></span><br><span class="line"><span class="comment">    可以控制指定的方法，设置事务隔离级别、传播行为、是否只读、是否超时</span></span><br><span class="line"><span class="comment">    name="transfer" 需要控制事务的方法名</span></span><br><span class="line"><span class="comment">    isolation="DEFAULT" 设置当前方法的事务隔离界别，mysql默认级别:repeatable_read</span></span><br><span class="line"><span class="comment">    propagation="REQUIRED" 设置当前方法的事务传播行为 ，REQUIRED:当前方法 必须有一个事务(单独使用开启，别人调用加入对方事务)</span></span><br><span class="line"><span class="comment">    read-only="false" 当前方式为非只读(增删改用的)</span></span><br><span class="line"><span class="comment">    timeout="-1" 事务超时时间，-1:永不超时</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--aop配置--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 仅spring的事务切面配置使用此标签</span></span><br><span class="line"><span class="comment">            通知+切点=切面</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span> <span class="attr">pointcut</span>=<span class="string">"execution(* com.itheima.service..*.*(..))"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="1-1-4-ANNO配置"><a href="#1-1-4-ANNO配置" class="headerlink" title="1.1.4 ANNO配置"></a>1.1.4 ANNO配置</h5><ul><li><p>复制java模块</p></li><li><p>删除事务的xml配置&amp;&amp;开启tx的注解支持</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">" http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx/spring-tx.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--加载第三方配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--druid交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--jdbcTemplate交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jdbcTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.core.JdbcTemplate"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--dao交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.AccountDaoImpl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcTemplate"</span> <span class="attr">ref</span>=<span class="string">"jdbcTemplate"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--将service交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AccountServiceImpl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"accountDao"</span> <span class="attr">ref</span>=<span class="string">"accountDao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--事务管理器交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 开启tx事务注解支持 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在目标对象的上，使用事务注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccountDao</span><span class="params">(AccountDao accountDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.accountDao = accountDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span>    <span class="comment">//此方法被事务控制</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser, String inUser, Double money)</span> </span>&#123;</span><br><span class="line">        accountDao.outUser(outUser,money);</span><br><span class="line"><span class="comment">//        int i = 1/0;</span></span><br><span class="line">        accountDao.inUser(inUser,money);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p></li><li><p>注解事务细节补充(使用就近原则)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional</span> <span class="comment">//当前类所有方法被事务控制</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccountDao</span><span class="params">(AccountDao accountDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.accountDao = accountDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//此方法被事务控制，配置单独参数,方法控制就近原则</span></span><br><span class="line">    <span class="meta">@Transactional</span>(isolation = Isolation.DEFAULT,propagation = Propagation.REQUIRED,readOnly = <span class="keyword">false</span>,timeout = -<span class="number">1</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser, String inUser, Double money)</span> </span>&#123;</span><br><span class="line">        accountDao.outUser(outUser,money);</span><br><span class="line"><span class="comment">//        int i = 1/0;</span></span><br><span class="line">        accountDao.inUser(inUser,money);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-Spring集成Web环境"><a href="#二-Spring集成Web环境" class="headerlink" title="二.Spring集成Web环境"></a>二.Spring集成Web环境</h1><h4 id="2-1-Web环境搭建"><a href="#2-1-Web环境搭建" class="headerlink" title="2.1 Web环境搭建"></a>2.1 Web环境搭建</h4><ul><li><p>创建Maven模块，JBLJavatoweb变更为web模块，添加Tomcat支持，配置pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--spring-jdbc--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--spring核心--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>UserDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserDaoImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Saved!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServic</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取spring容器的上下文对象</span></span><br><span class="line">        ClassPathXmlApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">        <span class="comment">// 调用service，实现保存功能</span></span><br><span class="line">        UserService userService = app.getBean(UserService<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        userService.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>applicationContext</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--开启注解组件扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><p><a href="http://localhost:8080/项目名/UserServlet">http://localhost:8080/项目名/UserServlet</a></p></li><li><p>问题</p><p>在servlet中的方法，直接创建spring容器，每一次都要创建，浪费内容空间和性能</p></li></ul><h4 id="2-2-自定义监听器和工具类"><a href="#2-2-自定义监听器和工具类" class="headerlink" title="2.2 自定义监听器和工具类"></a>2.2 自定义监听器和工具类</h4><p>在web阶段学的servletContextListener监听器，在项目启动时执行，就可以创建 ClassPathXmlApplicationContext ，可以将这个spring的app对象，设置到ServletContext域，所有servlet都可以从这个域中，获取此对象</p><ul><li><p>自定义监听器</p><ul><li><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">version</span>=<span class="string">"2.5"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>com.itheima.web.listener.MyContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>MyContextLoaderListener</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyContextLoaderListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    ClassPathXmlApplicationContext app = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在web项目启动时，创建spring环境</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent sce)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取servletContext域对象</span></span><br><span class="line">        ServletContext servletContext = sce.getServletContext();</span><br><span class="line">        <span class="comment">// 读取全局配置参数</span></span><br><span class="line">        String contextConfigLocation = servletContext.getInitParameter(<span class="string">"contextConfigLocation"</span>);</span><br><span class="line">        <span class="comment">// 创建spring环境</span></span><br><span class="line">        app = <span class="keyword">new</span> ClassPathXmlApplicationContext(contextConfigLocation);</span><br><span class="line">        <span class="comment">// 设置到域中</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"app"</span>, app);</span><br><span class="line">        System.out.println(<span class="string">"Spring Environment Init"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在web项目卸载时，关闭spring环境</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent sce)</span> </span>&#123;</span><br><span class="line">        app.close();</span><br><span class="line">        System.out.println(<span class="string">"Spring Environment Destroyed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>获取spring容器工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 专门从web最大的域中获取spring环境</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebApplicationContextUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ApplicationContext <span class="title">getWebApplicationContext</span><span class="params">(ServletContext servletContext)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (ApplicationContext) servletContext.getAttribute(<span class="string">"app"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取spring容器的上下文对象</span></span><br><span class="line"><span class="comment">//        ClassPathXmlApplicationContext app = new ClassPathXmlApplicationContext("applicationContext.xml");</span></span><br><span class="line">        <span class="comment">// 调用service，实现保存功能</span></span><br><span class="line"></span><br><span class="line">        ApplicationContext app = MyWebApplicationContextUtils.getWebApplicationContext(req.getServletContext());</span><br><span class="line"></span><br><span class="line">        UserService userService = app.getBean(UserService<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        userService.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-Spring提供工具类"><a href="#2-3-Spring提供工具类" class="headerlink" title="2.3 Spring提供工具类"></a>2.3 Spring提供工具类</h4><ul><li><p>导入spring-web坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--spring整合web容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置spring提供的监听器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">version</span>=<span class="string">"2.5"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--全局配置参数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>修改UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        ApplicationContext app = WebApplicationContextUtils.getWebApplicationContext(req.getServletContext());</span><br><span class="line"></span><br><span class="line">        UserService userService = app.getBean(UserService<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        userService.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-Spring的MVC简介"><a href="#三-Spring的MVC简介" class="headerlink" title="三.Spring的MVC简介"></a>三.Spring的MVC简介</h1><h4 id="3-1-回顾MVC模式"><a href="#3-1-回顾MVC模式" class="headerlink" title="3.1 回顾MVC模式"></a>3.1 回顾MVC模式</h4><ul><li><p>MVC</p><ul><li><p>Model</p><p>模型 JavaBean(1.处理业务逻辑 2.封装数据)</p></li><li><p>View</p><p>视图 Jsp/html(展示数据)</p></li><li><p>Controller</p><p>控制器 Servlet(1.接收请求 2.调用模型 3.转发视图)</p></li></ul></li><li><p>三层架构</p><ul><li><p>web层</p><p>用户与java交互</p></li><li><p>service层</p><p>处理业务逻辑</p></li><li><p>dao层</p><p>Java与数据库交互</p></li></ul></li></ul><table><thead><tr><th>用户</th><th></th><th>Web层</th><th></th><th>Service层(JavaBean)</th><th></th><th>Dao层(JavaBean)</th></tr></thead><tbody><tr><td>用户</td><td>➡请求</td><td>SpringMVC:简化servlet</td><td>↔</td><td>处理业务逻辑<br/>Spring:IOC,AOP</td><td>↔</td><td>封装数据<br/>Mybatis,DbUtils,JdbcTemplate</td></tr><tr><td>用户</td><td></td><td>⬇</td><td></td><td></td><td></td><td></td></tr><tr><td>用户</td><td>⬅响应</td><td>视图(jsp)</td><td></td><td></td><td></td><td></td></tr></tbody></table><h4 id="3-2-SpringMVC介绍"><a href="#3-2-SpringMVC介绍" class="headerlink" title="3.2 SpringMVC介绍"></a>3.2 SpringMVC介绍</h4><p>SpringMVC 是一种基于 Java 的实现 MVC 设计模式的轻量级 Web 框架，它可以通过一套注解，让一个 简单的Java类成为控制器，而无须实现任何接口。</p><blockquote><p>SpringMVC框架本质上就是一个servlet，封装了共有的行为(请求、响应)，简化代码</p></blockquote><table><thead><tr><th>User</th><th>➡请求<br/>⬅响应</th><th>Tomcat</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td>⬇</td><td></td><td></td><td>↗</td><td>特有行为JavaBean</td></tr><tr><td></td><td></td><td>Web.xml<br/>配置Servlet<br/>指定Servlet的类信息<br/>指定Servlet的url地址</td><td>➡</td><td>SpringMVC框架<br/>Servlet<br/>共有行为</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td>↘</td><td>特有行为JavaBean</td></tr></tbody></table><h1 id="四-SpringMVC快速入门"><a href="#四-SpringMVC快速入门" class="headerlink" title="四.SpringMVC快速入门"></a>四.SpringMVC快速入门</h1><ul><li><p>需求</p><p>访问一个URL, 可以在控制台打印一句话, 然后跳转到一个新的页面</p></li><li><p>需求分析</p><table><thead><tr><th>User</th><th>➡请求<br/>⬅响应</th><th>Tomcat<br/>一.导入SpringMVC坐标</th><th></th><th>三.编写Controller和jsp页面<br/>四.将Controller交给IOC容器建立URL和方法映射</th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td>⬇</td><td></td><td></td><td>↗</td><td>特有行为JavaBean</td></tr><tr><td></td><td></td><td>Web.xml<br/><strong>二.配置前端控制器DispatcherServlet</strong><br/>配置Servlet<br/>指定Servlet的类信息<br/>指定Servlet的url地址</td><td>➡</td><td>SpringMVC框架<br/>Servlet<br/>共有行为</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td><strong>五.编写Spring-mvc.xml<br/>1.开启注解组件扫描<br/>2.开启MVC注解支持</strong></td><td>↘</td><td>特有行为JavaBean</td></tr></tbody></table></li><li><p>代码实现</p><ul><li><p>创建web模块，并导入坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Spring_online_Day05_04_WEB_MVC<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--springMVC--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--servlet--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--jsp--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置前端控制器(servlet) </p><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"2.5"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--前端控制器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--加载指定配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指定servlet在tomcat启动时创建--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>4<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--拦截url规则:/(默认)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写controller和jsp</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个模块对应一个控制器(类)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//// 一个请求对应一个方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">quickStart</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Quick Start"</span>);</span><br><span class="line">        <span class="comment">// 转发给一个视图（在该路径创建该JSP即可）</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"/WEB-INF/pages/success.jsp"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个模块对应一个控制器(类)</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//// 一个请求对应一个方法</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(path = <span class="string">"/quickStart"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">quickStart</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Quick Start"</span>);</span><br><span class="line">        <span class="comment">// 转发给一个视图</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"/WEB-INF/pages/success.jsp"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写spring-mvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--开启注解组件扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima.web"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启mvc注解支持--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>部署并测试</p><p><a href="http://localhost:8080/项目名/quickStart">http://localhost:8080/项目名/quickStart</a></p></li></ul></li><li><p>简易流程</p><p><img src="220541.png" alt=""></p></li></ul><h1 id="五-SpringMVC组件概述"><a href="#五-SpringMVC组件概述" class="headerlink" title="五.SpringMVC组件概述"></a>五.SpringMVC组件概述</h1><h4 id="5-1-执行流程"><a href="#5-1-执行流程" class="headerlink" title="5.1 执行流程"></a>5.1 执行流程</h4><p><img src="image-20200603142039976.png" alt=""></p><h4 id="5-2-三大组件"><a href="#5-2-三大组件" class="headerlink" title="5.2 三大组件"></a>5.2 三大组件</h4><ul><li><p>处理器映射器:HandlerMapping<br> 将请求url 和 处理器的方法 建立映射关系</p></li><li><p>处理器适配器</p><p>HandlerAdapter 从多个处理器当中，适配其中一个，调用目标执行</p></li><li><p>视图解析器</p><p>ViewResolver 将逻辑视图解析为物理视图</p></li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Default implementation classes for DispatcherServlet's strategy interfaces.</span></span><br><span class="line"><span class="comment"># Used as fallback when no matching beans are found in the DispatcherServlet context.</span></span><br><span class="line"><span class="comment"># Not meant to be customized by application developers.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">org.springframework.web.servlet.LocaleResolver</span>=<span class="string">org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver</span></span><br><span class="line"></span><br><span class="line"><span class="meta">org.springframework.web.servlet.ThemeResolver</span>=<span class="string">org.springframework.web.servlet.theme.FixedThemeResolver</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#处理器映射器</span></span><br><span class="line"><span class="meta">org.springframework.web.servlet.HandlerMapping</span>=<span class="string">org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping,\</span></span><br><span class="line"><span class="attr">org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#处理器适配器</span></span><br><span class="line"><span class="meta">org.springframework.web.servlet.HandlerAdapter</span>=<span class="string">org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter,\</span></span><br><span class="line">org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter,\</span><br><span class="line"><span class="attr">org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter</span></span><br><span class="line"></span><br><span class="line"><span class="meta">org.springframework.web.servlet.HandlerExceptionResolver</span>=<span class="string">org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver,\</span></span><br><span class="line">org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver,\</span><br><span class="line"><span class="attr">org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver</span></span><br><span class="line"></span><br><span class="line"><span class="meta">org.springframework.web.servlet.RequestToViewNameTranslator</span>=<span class="string">org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#视图解析器</span></span><br><span class="line"><span class="meta">org.springframework.web.servlet.ViewResolver</span>=<span class="string">org.springframework.web.servlet.view.InternalResourceViewResolver</span></span><br><span class="line"></span><br><span class="line"><span class="meta">org.springframework.web.servlet.FlashMapManager</span>=<span class="string">org.springframework.web.servlet.support.SessionFlashMapManager</span></span><br></pre></td></tr></table></figure><h4 id="5-3-常用注解"><a href="#5-3-常用注解" class="headerlink" title="5.3 常用注解"></a>5.3 常用注解</h4><ul><li><p>@Controller</p><p>SpringMVC基于Spring容器，所以在进行SpringMVC操作时，需要将Controller存储到Spring容器中， 故使用此注解</p></li><li><p>@RequestMapping</p><p>用于建立请求 URL 和处理请求方法之间的对应关系</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个模块对应一个控制器(类)</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">         @RequestMapping</span></span><br><span class="line"><span class="comment">            功能:将请求的url 和 方法 建立映射关系</span></span><br><span class="line"><span class="comment">        位置:</span></span><br><span class="line"><span class="comment">            类上:建立一级url访问路径</span></span><br><span class="line"><span class="comment">            方法上:建立二级的url访问路径，与一级路径组成一个完整url路径</span></span><br><span class="line"><span class="comment">        例:</span></span><br><span class="line"><span class="comment">                    /user/quickStart</span></span><br><span class="line"><span class="comment">        常用属性:</span></span><br><span class="line"><span class="comment">            value/path:声明url访问路径</span></span><br><span class="line"><span class="comment">            method:限定请求方式，默认支持所有，共有7种(get、post、put、delete)</span></span><br><span class="line"><span class="comment">            params:限定请求参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/quickStart"</span>, method = &#123;RequestMethod.POST, RequestMethod.GET&#125;, params = &#123;<span class="string">"username"</span>, <span class="string">"password"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">quickStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Quick Start"</span>);</span><br><span class="line">        <span class="comment">// 转发给一个视图</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong># spring05</strong></p><p><strong>## 一 Spring的事务</strong></p><p><strong>### 声明式事务控制</strong></p><p>- xml配置</p><p>​    - 平台事务管理器配置</p><p>​        - <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"></p><p>​    <property name="dataSource" ref="dataSource"></property></p></bean><p>​    - 事务通知的配置</p><p>​        - &lt;tx:advice id=”myAdvice” transaction-manager=”transactionManager”&gt;</p><p>​    <!--定义事务的属性--></p><p>​    <a href="tx:attributes">tx:attributes</a></p><p>​        &lt;tx:method name=”*”/&gt;</p><p>​    </tx:attributes></p><p></tx:advice></p><p>​    - 事务aop织入的配置</p><p>​        - <a href="aop:config">aop:config</a></p><p>​    &lt;aop:advisor advice-ref=”myAdvice” </p><p>​                 pointcut=”execution(* com.itheima.service.impl.<em>.</em>(..))”&gt;</p><p>​    </aop:advisor></p><p></aop:config></p><p>- 常用注解配置</p><p>​    - 平台事务管理器配置</p><p>​        - <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"></p><p>​    <property name="dataSource" ref="dataSource"></property></p></bean><p>​    - 开启注解支持</p><p>​        - <a href="tx:annotation-driven/">tx:annotation-driven/</a></p><p>​    - 在目标对象上使用事务注解</p><p>​        - @Transactional</p><p><strong>## 二 Spring集成web环境</strong></p><p><strong>### 导入Spring集成web的坐标</strong></p><dependency><p>​    <groupId>org.springframework</groupId></p><p>​    <artifactId>spring-web</artifactId></p><p>​    <version>5.1.5.RELEASE</version></p></dependency><p><strong>### 配置ContextLoaderListener监听器</strong></p><!--全局参数--><context-param><p>​    <param-name>contextConfigLocation</param-name></p><p>​    <param-value>classpath:applicationContext.xml</param-value></p></context-param><!--Spring的监听器--><listener><p>​    <listener-class></p><p>​        org.springframework.web.context.ContextLoaderListener</listener-class></p></listener><p><strong>### 通过工具获得应用上下文对象</strong></p><p>ApplicationContext app =    </p><p>​    WebApplicationContextUtils.getWebApplicationContext(servletContext);</p><p>​    Object obj = app.getBean(“id”);</p><p><strong>## 三 SpringMVC简介</strong></p><p><strong>### MVC模式</strong></p><p>- M（model）模型：处理业务逻辑，封装实体</p><p>- V（view） 视图：展示内容</p><p>- C（controller）控制器：负责调度分发（1.接收请求、2.调用模型、3.转发到视图）</p><p><strong>### springMVC</strong></p><p>- springMVC是基于java实现MVC设计模式的轻量级web框架。封装了servlet共有的特性，使开发者关注业务本身。</p><p>- 本质上就是一个servlet</p><p>​    - 我们只需要写控制器（controller）</p><p><strong>## 四 SpringMVC快速入门</strong></p><p><strong>### 1. 创建web项目，导入SpringMVC相关坐标</strong></p><p><strong>### 2. 配置SpringMVC前端控制器 DispathcerServlet</strong></p><p><strong>### 3. 编写Controller类和视图页面</strong></p><p><strong>### 4. 使用注解配置Controller类中业务方法的映射地址</strong></p><p><strong>### 5. 配置SpringMVC核心文件 spring-mvc.xml</strong></p><p><strong>### 6.部署并测试</strong></p><p><strong>## 五 SpringMVC组件概述</strong></p><p><strong>### SpringMVC的执行流程</strong></p><p><strong>### 三大组件</strong></p><p>- HandlerMapping</p><p>- HandlerAdapter</p><p>- ViewResolver</p><p>​    - 重写视图解析器，指定前后缀</p><p><strong>### 注解解析</strong></p><p>- @Controller</p><p>​    - 将对象交给ioc容器</p><p>- @requestMapping</p><p>​    - 将url与方法建立映射关系</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;声明式事务&lt;/li&gt;
&lt;li&gt;Servlet整合Spring&lt;/li&gt;
&lt;li&gt;SpringMVC&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（六十七）</title>
    <link href="http://yoursite.com/2020/06/01/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E4%B8%83%EF%BC%89/"/>
    <id>http://yoursite.com/2020/06/01/就业班学习笔记（六十七）/</id>
    <published>2020-06-01T01:01:31.000Z</published>
    <updated>2020-06-02T08:15:50.113Z</updated>
    
    <content type="html"><![CDATA[<ul><li>XML版本详细介绍</li><li>注解版本详细介绍</li><li>AOP方式优化转账案例</li><li>Spring针对JDBC操作简化的工具包JdbcTemplate</li><li>Spring的事务</li></ul><a id="more"></a><h1 id="一-基于XML的AOP开发"><a href="#一-基于XML的AOP开发" class="headerlink" title="一.基于XML的AOP开发"></a>一.基于XML的AOP开发</h1><h4 id="1-1-XML配置详解"><a href="#1-1-XML配置详解" class="headerlink" title="1.1 XML配置详解"></a>1.1 XML配置详解</h4><h5 id="1-1-1-切点表达式"><a href="#1-1-1-切点表达式" class="headerlink" title="1.1.1 切点表达式"></a>1.1.1 切点表达式</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execution([修饰符] 返回值类型 包名.类名.方法名(参数列表))</span><br></pre></td></tr></table></figure><ul><li><p>访问修饰符可以省略</p></li><li><p>返回值类型、包名、类名、方法名可以使用星号 * 代替，代表任意</p></li><li><p>包名与类名之间一个点 . 代表当前包下的类，两个点 .. 表示当前包及其子包下的类</p></li><li><p>参数列表可以使用两个点 .. 表示任意个数，任意类型的参数列表</p><table><thead><tr><th>版本</th><th></th></tr></thead><tbody><tr><td>版本一</td><td>控制目标对象中，返回值类型void且public修饰的所有方法<br/>execution(public void com.itheima.service.impl.AccountServiceImpl.*(..))</td></tr><tr><td>版本二</td><td>控制目标对象中，任意修饰符任意返回值的所有方法<br/>    execution(* com.itheima.service.impl.AccountServiceImpl.*(..))</td></tr><tr><td>版本三</td><td>版本三：控制service层所有对象的方法    <br/>    execution(* com.itheima.service..<em>.</em>(..))</td></tr></tbody></table></li><li><p>切点表达式抽取</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop/spring-aop.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--开启注解组件扫描--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"myAdvice"</span> <span class="attr">class</span>=<span class="string">"com.itheima.advice.MyAdvice"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--aop配置--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--切面--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">"myAdvice"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--抽取切点表达式--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"myPointcut"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.itheima.service..*.*(..))"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--织入过程...</span></span><br><span class="line"><span class="comment">            method="通知方法" 通知方法</span></span><br><span class="line"><span class="comment">            pointcut="切点表达式"</span></span><br><span class="line"><span class="comment">            execution([修饰符] 返回值类型  包名.类名.方法名(参数列表))</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">"before"</span> <span class="attr">pointcut-ref</span>=<span class="string">"myPointcut"</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:before</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="1-2-2-通知类型"><a href="#1-2-2-通知类型" class="headerlink" title="1.2.2 通知类型"></a>1.2.2 通知类型</h5><ul><li><p>通知的配置语法</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;aop:通知类型 method="通知类中方法名" pointcut="切点表达式"&gt;&lt;/aop:通知类型&gt;</span><br></pre></td></tr></table></figure></li><li><p>四大通知</p><table><thead><tr><th>名称</th><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>前置通知</td><td>&lt;aop:before&gt;</td><td>在切入点方法之前执行</td></tr><tr><td>后置通知</td><td>&lt;aop:afterReturning&gt;</td><td>在切入点方法正常运行之后执行</td></tr><tr><td>异常通知</td><td>&lt;aop:afterThrowing&gt;</td><td>在切点方法发生异常的时候执行</td></tr><tr><td>最终通知</td><td>&lt;aop:after&gt;</td><td>无论切入点方法执行时是否有异常，都会执行</td></tr></tbody></table><p>Myadvice</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 前置增强</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Advance Notice"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 后置增强</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Post Notification"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 异常增强</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterThrowing</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Exception Notification"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最终增强</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Final Notice"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>applicationContext.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--开启注解组件扫描--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"myAdvice"</span> <span class="attr">class</span>=<span class="string">"com.itheima.advice.MyAdvice"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--aop配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--切面--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">"myAdvice"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--抽取切点表达式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"myPointcut"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.itheima.service..*.*(..))"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--织入过程...</span></span><br><span class="line"><span class="comment">            method="通知方法" 通知方法</span></span><br><span class="line"><span class="comment">            pointcut="切点表达式"</span></span><br><span class="line"><span class="comment">            execution([修饰符] 返回值类型  包名.类名.方法名(参数列表))</span></span><br><span class="line"><span class="comment">            --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">"before"</span> <span class="attr">pointcut-ref</span>=<span class="string">"myPointcut"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:after-returning</span> <span class="attr">method</span>=<span class="string">"afterReturning"</span> <span class="attr">pointcut-ref</span>=<span class="string">"myPointcut"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:after-throwing</span> <span class="attr">method</span>=<span class="string">"afterThrowing"</span> <span class="attr">pointcut-ref</span>=<span class="string">"myPointcut"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">"after"</span> <span class="attr">pointcut-ref</span>=<span class="string">"myPointcut"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>  <strong>注意</strong>：四大通知一般单独使用，因为xml配置顺序可能会打乱我们执行计划，建议使用环绕通知</p><ul><li><p>环绕通知(强无敌)</p><table><thead><tr><th>名称</th><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>环绕通知</td><td>&lt;aop:around&gt;</td><td>可以灵活实现四大通知的所有效果</td></tr></tbody></table><p>环绕通知的代码编写，更贴近于动态代理的底层代码</p><p><strong>注意</strong>：测试环绕通知，需要注释掉四大通知</p><p>Myadvice</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 环绕通知</span></span><br><span class="line"><span class="comment">// Proceeding（运行）JoinPoint（连接点）  = 切点</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">around</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"Advance notice"</span>);</span><br><span class="line">        <span class="comment">// 执行切点(调用目标对象原有的方法)</span></span><br><span class="line">        proceedingJoinPoint.proceed();</span><br><span class="line">  </span><br><span class="line">        System.out.println(<span class="string">"Post Notification"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">        throwable.printStackTrace();</span><br><span class="line">        System.out.println(<span class="string">"Exception Notification"</span>);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"Final Notice"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">"around"</span> <span class="attr">pointcut-ref</span>=<span class="string">"myPointcut"</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:around</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="1-2-知识小结"><a href="#1-2-知识小结" class="headerlink" title="1.2 知识小结"></a>1.2 知识小结</h4><ul><li>aop织入的配置 </li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">“通知类”</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">“通知方法名称”</span> <span class="attr">pointcut</span>=<span class="string">“切点表达式</span>"&gt;</span>\<span class="tag">&lt;/<span class="name">aop:before</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>通知的类型 </p><p>前置通知、后置通知、异常通知、最终通知 </p><p>环绕通知</p></li><li><p>切点表达式</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execution([修饰符] 返回值类型 包名.类名.方法名(参数列表))</span><br></pre></td></tr></table></figure><h1 id="二-基于注解的AOP开发"><a href="#二-基于注解的AOP开发" class="headerlink" title="二.基于注解的AOP开发"></a>二.基于注解的AOP开发</h1><h4 id="2-1-快速入门"><a href="#2-1-快速入门" class="headerlink" title="2.1 快速入门"></a>2.1 快速入门</h4><ul><li><p>复制上面的xml工程</p></li><li><p>目标对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Transfer"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Save"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>通知对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通知类(增强)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAdvice</span> </span>&#123;</span><br></pre></td></tr></table></figure></li><li><p>开启Spring的AOP注解支持</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop/spring-aop.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--开启注解组件扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 开启Spring的AOP注解支持 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>将通知升级为切面(通知+切点= 切面)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通知类(增强)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="comment">//升级为切面</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"execution(* com.itheima.service..*.*(..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">myPointcut</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 前置增强</span></span><br><span class="line">    <span class="meta">@Before</span>(<span class="string">"MyAdvice.myPointcut()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Advance notice"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 后置增强</span></span><br><span class="line">    <span class="meta">@AfterReturning</span>(<span class="string">"MyAdvice.myPointcut()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Post Notification"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 异常增强</span></span><br><span class="line">    <span class="meta">@AfterThrowing</span>(<span class="string">"MyAdvice.myPointcut()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterThrowing</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Exception Notification"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最终增强</span></span><br><span class="line">    <span class="meta">@After</span>(<span class="string">"MyAdvice.myPointcut()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Final Notice"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line">@ContextConfiguration("classpath:applicationContext.xml")</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 配置了aop之后，这就是代理对象</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAOP</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        accountService.transfer();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-2-注解配置详解"><a href="#2-2-注解配置详解" class="headerlink" title="2.2 注解配置详解"></a>2.2 注解配置详解</h4><h5 id="2-2-1-切点表达式"><a href="#2-2-1-切点表达式" class="headerlink" title="2.2.1 切点表达式"></a>2.2.1 切点表达式</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execution([修饰符] 返回值类型 包名.类名.方法名(参数列表))</span><br></pre></td></tr></table></figure><ul><li>访问修饰符可以省略</li><li>返回值类型、包名、类名、方法名可以使用星号 * 代替，代表任意</li><li>包名与类名之间一个点 . 代表当前包下的类，两个点 .. 表示当前包及其子包下的类</li><li>参数列表可以使用两个点 .. 表示任意个数，任意类型的参数列表</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//切面类中抽取表达式</span></span><br><span class="line"><span class="meta">@Pointcut</span>(<span class="string">"execution(* com.itheima.service..*.*(..))"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">myPointcut</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//上面代码替代了XML文件中的</span></span><br><span class="line">&lt;aop:pointcut id=<span class="string">"myPointcut"</span> expression=<span class="string">"execution(* com.itheima.service..*.*(..))"</span>/&gt;</span><br><span class="line"></span><br><span class="line">  -------------------</span><br><span class="line">  <span class="comment">//直接调用</span></span><br><span class="line">  <span class="meta">@Before</span>(<span class="string">"MyAdvice.myPointcut()"</span>)</span><br></pre></td></tr></table></figure><h5 id="2-2-2-通知类型"><a href="#2-2-2-通知类型" class="headerlink" title="2.2.2 通知类型"></a>2.2.2 通知类型</h5><ul><li><p>四大通知</p><table><thead><tr><th>名称</th><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>前置通知</td><td>@Before</td><td>在切入点方法之前执行</td></tr><tr><td>后置通知</td><td>@AfterReturning</td><td>在切入点方法正常运行之后执行</td></tr><tr><td>异常通知</td><td>@AfterThrowing</td><td>在切点方法发生异常的时候执行</td></tr><tr><td>最终通知</td><td>@After</td><td>无论切入点方法执行时是否有异常，都会执行</td></tr></tbody></table><p><strong>注意</strong>:使用注解时，四大通知同时开启的顺序：@Before – &gt; @After –&gt; @AfterReturning(异常则@AfterThrowing)</p><p>​        与XML版本相同，大于等于2个通知时，建议使用环绕通知</p></li><li><p>环绕通知(强无敌)</p><table><thead><tr><th>名称</th><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>环绕通知</td><td>@Around</td><td>可以灵活实现四大通知的所有效果</td></tr></tbody></table><p><strong>注意</strong>：测试时，注释掉四大通知的注解</p><p>当切点同时符合切点规则和环绕规则时，顺序：</p><p>@Around – &gt;@Before – &gt; @After –&gt; @Around 执行proceedingJoinPoint.proceed()后的动作–&gt; @AfterReturning(异常则@AfterThrowing)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通知类(增强)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="comment">//升级为切面</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"execution(* com.itheima.service..*.*(..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">myPointcut</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 环绕通知</span></span><br><span class="line">    <span class="comment">// Proceeding（运行）JoinPoint（连接点）  = 切点</span></span><br><span class="line">    <span class="meta">@Around</span>(<span class="string">"MyAdvice.myPointcut()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">around</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Advance notice"</span>);</span><br><span class="line">            <span class="comment">// 执行切点(调用目标对象原有的方法)</span></span><br><span class="line">            proceedingJoinPoint.proceed();</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"Post Notification"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            throwable.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">"Exception Notification"</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Final Notice"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-纯注解配置"><a href="#2-3-纯注解配置" class="headerlink" title="2.3 纯注解配置"></a>2.3 纯注解配置</h4><ul><li><p>删除Spring的配置文件</p></li><li><p>写出Spring配置类SpringConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(<span class="string">"com.itheima"</span>)</span><br><span class="line"><span class="meta">@EnableAspectJAutoProxy</span><span class="comment">//&lt;aop:aspectj-autoproxy&gt;</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ContextConfiguration</span>(<span class="title">classes</span> </span>= SpringConfig<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">AccountTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 配置了aop之后，这就是代理对象</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAOP</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        accountService.transfer();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-知识小结"><a href="#2-4-知识小结" class="headerlink" title="2.4 知识小结"></a>2.4 知识小结</h4><table><thead><tr><th>使用注解</th><th>作用</th></tr></thead><tbody><tr><td>使用@Aspect注解</td><td>标注切面类</td></tr><tr><td>使用@Before等注解</td><td>标注通知方法</td></tr><tr><td>使用@Pointcut注解</td><td>抽取切点表达式</td></tr><tr><td>配置aop自动代理</td><td>&lt;aop:aspectj-autoproxy/&gt; 或 @EnableAspectJAutoProxy</td></tr></tbody></table><h1 id="三-AOP优化转账案例"><a href="#三-AOP优化转账案例" class="headerlink" title="三.AOP优化转账案例"></a>三.AOP优化转账案例</h1><ul><li><p>需求</p><p>依然使用前面的转账案例，将两个代理工厂对象直接删除！改为spring的aop思想来实现</p></li></ul><h4 id="3-1-XML实现"><a href="#3-1-XML实现" class="headerlink" title="3.1 XML实现"></a>3.1 XML实现</h4><ul><li><p>新建Java模块，配置依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itheima<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Spring_online_Day04_04_transfer_XML<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--druid--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--dbUtils--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring核心--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--aspectj--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring整合junit--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置编译版本为1.8 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Domain,Dao层对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Double money;</span><br><span class="line"></span><br><span class="line"><span class="comment">//此处省略getter/setter/toString</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//转出</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">outUser</span><span class="params">(String outUser, Double money)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//转入</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">inUser</span><span class="params">(String inUser, Double money)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//转出</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">outUser</span><span class="params">(Connection connection,String outUser, Double money)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//转入</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">inUser</span><span class="params">(Connection connection,String inUser, Double money)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> QueryRunner queryRunner;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ConnectionUtils connectionUtils;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">outUser</span><span class="params">(String outUser, Double money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.编写sql</span></span><br><span class="line">            String sql = <span class="string">"UPDATE account SET money=money-? WHERE name = ?"</span>;</span><br><span class="line">            <span class="comment">// 获取当前线程内的 conn</span></span><br><span class="line">            Connection threadConnection = connectionUtils.getThreadConnection();</span><br><span class="line">            <span class="comment">// 2.执行sql</span></span><br><span class="line">            queryRunner.update(threadConnection,sql, money, outUser);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inUser</span><span class="params">(String inUser, Double money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">"UPDATE account SET money=money+? WHERE name = ?"</span>;</span><br><span class="line">            Connection threadConnection = connectionUtils.getThreadConnection();</span><br><span class="line">            queryRunner.update(threadConnection,sql, money, inUser);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        List&lt;Account&gt; list = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">"SELECT * FROM account"</span>;</span><br><span class="line">            list=queryRunner.query(sql,<span class="keyword">new</span> BeanListHandler&lt;&gt;(Account<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">outUser</span><span class="params">(Connection connection, String outUser, Double money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">"UPDATE account SET money=money-? WHERE name = ?"</span>;</span><br><span class="line">            queryRunner.update(connection,sql, money, outUser);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inUser</span><span class="params">(Connection connection, String inUser, Double money)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">"UPDATE account SET money=money+? WHERE name = ?"</span>;</span><br><span class="line">            queryRunner.update(connection,sql, money, inUser);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>目标对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//转账</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser,String inUser,Double money)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 依赖AccountDao</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser, String inUser, Double money)</span> </span>&#123;</span><br><span class="line">        accountDao.outUser(outUser,money);</span><br><span class="line">        accountDao.inUser(inUser,money);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>通知对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransactionManager</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ConnectionUtils connectionUtils;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.开启事务</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beginTransaction</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connectionUtils.getThreadConnection().setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.提交事务</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connectionUtils.getThreadConnection().commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.回滚事务</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rollback</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connectionUtils.getThreadConnection().rollback();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 恢复自动提交</span></span><br><span class="line">            connectionUtils.getThreadConnection().setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">// 归还到连接池</span></span><br><span class="line">            connectionUtils.getThreadConnection().close();</span><br><span class="line">            <span class="comment">// 从当前线程删除conn对象</span></span><br><span class="line">            connectionUtils.removeThreadConnection();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//环绕通知</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">aroundTx</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            beginTransaction();</span><br><span class="line">            proceedingJoinPoint.proceed();</span><br><span class="line">            commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            throwable.printStackTrace();</span><br><span class="line">            rollback();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            release();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置xml的切面</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/aop/spring-aop.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 开启注解组件扫描 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 加载第三方配置文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--druid连接交给ioc容器,第三方类目前仅能用bean标签--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--queryRunner交给ioc容器,第三方类目前仅能用bean标签--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"queryRunner"</span> <span class="attr">class</span>=<span class="string">"org.apache.commons.dbutils.QueryRunner"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"ds"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"myPointcut"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.itheima.service..*.*(..))"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">"aroundTx"</span> <span class="attr">pointcut-ref</span>=<span class="string">"myPointcut"</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:around</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line">@ContextConfiguration("classpath:applicationContext.xml")</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTransferXML</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        accountService.transfer(<span class="string">"jerry"</span>,<span class="string">"tom"</span>,<span class="number">100.0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-2-注解实现"><a href="#3-2-注解实现" class="headerlink" title="3.2 注解实现"></a>3.2 注解实现</h4><ul><li><p>复制java模块</p></li><li><p>目标对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 依赖AccountDao</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser, String inUser, Double money)</span> </span>&#123;</span><br><span class="line">        accountDao.outUser(outUser,money);</span><br><span class="line">        accountDao.inUser(inUser,money);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>通知对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransactionManager</span></span></span><br></pre></td></tr></table></figure></li><li><p>开启AOP注解支持</p><p>SpringConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(<span class="string">"com.itheima"</span>)</span><br><span class="line"><span class="meta">@PropertySource</span>(<span class="string">"classpath:jdbc.properties"</span>)</span><br><span class="line"><span class="meta">@EnableAspectJAutoProxy</span></span><br><span class="line"><span class="meta">@Import</span>(&#123;DataSourceConfig<span class="class">.<span class="keyword">class</span>&#125;)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">SpringConfig</span></span></span><br></pre></td></tr></table></figure></li><li><p>将通知升级为切面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransactionManager</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> ConnectionUtils connectionUtils;</span><br><span class="line"></span><br><span class="line">  ......</span><br><span class="line">    ......</span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"execution(* com.itheima.service..*.*(..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">myPointcut</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">  <span class="comment">//环绕通知</span></span><br><span class="line">  <span class="meta">@Around</span>(<span class="string">"TransactionManager.myPointcut()"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">aroundTx</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      beginTransaction();</span><br><span class="line">      proceedingJoinPoint.proceed();</span><br><span class="line">      commit();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">      throwable.printStackTrace();</span><br><span class="line">      rollback();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      release();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line">//@ContextConfiguration("classpath:applicationContext.xml")</span><br><span class="line"><span class="meta">@ContextConfiguration</span>(classes = SpringConfig<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">AccountTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTransferANNO</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        accountService.transfer(<span class="string">"jerry"</span>,<span class="string">"tom"</span>,<span class="number">100</span>d);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-Spring的JdbcTemplate"><a href="#四-Spring的JdbcTemplate" class="headerlink" title="四.Spring的JdbcTemplate"></a>四.Spring的JdbcTemplate</h1><h4 id="4-1-JdbcTemplate是什么"><a href="#4-1-JdbcTemplate是什么" class="headerlink" title="4.1 JdbcTemplate是什么"></a>4.1 JdbcTemplate是什么</h4><p>JdbcTemplate是Spring的一款用于简化Dao代码的工具包，它底层封装了JDBC技术。</p><ul><li><p>核心对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JdbcTemplate jdbcTemplate = <span class="keyword">new</span> JdbcTemplate(DataSource dataSource);</span><br></pre></td></tr></table></figure></li><li><p>核心方法</p><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>int update();</td><td>执行增、删、改语句</td></tr><tr><td>List&lt;T&gt; query();</td><td>查询多个</td></tr><tr><td>T queryForObject();</td><td>查询一个</td></tr><tr><td>RowMapper&lt;&gt;();</td><td>ORM映射接口</td></tr><tr><td>new BeanPropertyRowMapper&lt;&gt;();</td><td>实现ORM映射封装子类</td></tr></tbody></table></li><li><p>例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcTemplateTest</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123; </span><br><span class="line">    <span class="comment">// 创建核心对象</span></span><br><span class="line">    JdbcTemplate jdbcTemplate = <span class="keyword">new</span> JdbcTemplate(JdbcUtils.getDataSource()); </span><br><span class="line">    <span class="comment">// 编写sql</span></span><br><span class="line">    String sql = <span class="string">"select * from account"</span>;</span><br><span class="line">    <span class="comment">// 执行sql</span></span><br><span class="line">    List&lt;Account&gt; list = jdbcTemplate.query(sql, <span class="keyword">new</span> BeanPropertyRowMapper&lt;&gt; (Account<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-2-快速入门"><a href="#4-2-快速入门" class="headerlink" title="4.2 快速入门"></a>4.2 快速入门</h4><ul><li><p>创建maven的java模块</p></li><li><p>导入依赖坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--druid连接池--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring-jdbc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring核心--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring整合junit--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>复制JDBC连接池工具类和配置文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span></span></span><br></pre></td></tr></table></figure></li><li><p>编写新增代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcTemplateTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJdbcTemplate</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建JdbcTemplate核心对象</span></span><br><span class="line">        JdbcTemplate jdbcTemplate = <span class="keyword">new</span> JdbcTemplate(JdbcUtils.getDataSource());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.编写sql</span></span><br><span class="line">        String sql = <span class="string">"INSERT INTO account(name,money) VALUES (?,?)"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.执行sql</span></span><br><span class="line">        <span class="keyword">int</span> i = jdbcTemplate.update(sql, <span class="string">"testJdbcTemplate"</span>, <span class="number">1000</span>d);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line">@ContextConfiguration("classpath:applicationContext.xml")</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcTemplateTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJdbcTemplate</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建JdbcTemplate核心对象</span></span><br><span class="line">        JdbcTemplate jdbcTemplate = <span class="keyword">new</span> JdbcTemplate(JdbcUtils.getDataSource());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.编写sql</span></span><br><span class="line">        String sql = <span class="string">"INSERT INTO account(name,money) VALUES (?,?)"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.执行sql</span></span><br><span class="line">        <span class="keyword">int</span> i = jdbcTemplate.update(sql, <span class="string">"testJdbcTemplate"</span>, <span class="number">1000</span>d);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-Spring整合JdbcTemplate"><a href="#4-3-Spring整合JdbcTemplate" class="headerlink" title="4.3 Spring整合JdbcTemplate"></a>4.3 Spring整合JdbcTemplate</h4><ul><li><p>编写AccountDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">    <span class="function">Account <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写AccountDaoImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">"INSERT INTO account (name, money) VALUES(?,?)"</span>;</span><br><span class="line">        jdbcTemplate.update(sql,account.getName(),account.getMoney());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">"UPDATE account SET name = ?,money = ? WHERE id=?"</span>;</span><br><span class="line">        jdbcTemplate.update(sql, account.getName(),account.getMoney(),account.getId());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">"DELETE FROM account WHERE id = ?"</span>;</span><br><span class="line">        jdbcTemplate.update(sql, id);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">"SELECT * FROM account WHERE id = ?"</span>;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.queryForObject(sql, <span class="keyword">new</span> BeanPropertyRowMapper&lt;&gt;(Account<span class="class">.<span class="keyword">class</span>), <span class="title">id</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">"SELECT * FROM account"</span>;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.query(sql, <span class="keyword">new</span> BeanPropertyRowMapper&lt;&gt;(Account<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写AccountService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Account <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写AccountServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.save(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.update(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        accountDao.delete(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写Spring的配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--加载第三方配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启注解组件扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--druid交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--jdbcTemplate交给ioc--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span>  <span class="attr">id</span>=<span class="string">"jdbcTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.core.JdbcTemplate"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line">@ContextConfiguration("classpath:applicationContext.xml")</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcTemplateTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJdbcTemplate</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建JdbcTemplate核心对象</span></span><br><span class="line">        JdbcTemplate jdbcTemplate = <span class="keyword">new</span> JdbcTemplate(JdbcUtils.getDataSource());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.编写sql</span></span><br><span class="line">        String sql = <span class="string">"INSERT INTO account(name,money) VALUES (?,?)"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.执行sql</span></span><br><span class="line">        <span class="keyword">int</span> i = jdbcTemplate.update(sql, <span class="string">"testJdbcTemplate"</span>, <span class="number">1000</span>d);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJdbcFindByID</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        JdbcTemplate jdbcTemplate = <span class="keyword">new</span> JdbcTemplate(JdbcUtils.getDataSource());</span><br><span class="line"></span><br><span class="line">        String sql = <span class="string">"SELECT * FROM account WHERE id = ?"</span>;</span><br><span class="line"></span><br><span class="line">        Account account = jdbcTemplate.queryForObject(sql, <span class="keyword">new</span> BeanPropertyRowMapper&lt;&gt;(Account<span class="class">.<span class="keyword">class</span>), 5)</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJdbcFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">        List&lt;Account&gt; list = accountService.findAll();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Account account : list) &#123;</span><br><span class="line">            System.out.println(account);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJdbcFindById</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">        Account byId = accountService.findById(<span class="number">4</span>);</span><br><span class="line">        System.out.println(byId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJdbcDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        accountService.delete(<span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJdbcUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Account account = <span class="keyword">new</span> Account();</span><br><span class="line">        account.setId(<span class="number">5</span>);</span><br><span class="line">        account.setName(<span class="string">"K"</span>);</span><br><span class="line">        account.setMoney(<span class="number">100</span>d);</span><br><span class="line">        accountService.update(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJdbcCreate</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Account account = <span class="keyword">new</span> Account();</span><br><span class="line">        account.setName(<span class="string">"K"</span>);</span><br><span class="line">        account.setMoney(<span class="number">100</span>d);</span><br><span class="line">        accountService.save(account);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-4-实现转账案例"><a href="#4-4-实现转账案例" class="headerlink" title="4.4 实现转账案例"></a>4.4 实现转账案例</h4><p>Spring当时在设计时，就要求事务交给spring控制,因此无法操作自定义的事务管理器</p><ul><li><p>AccountDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">outUser</span><span class="params">(String outUser,Double money)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">inUser</span><span class="params">(String inUser,Double money)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AccountDaoImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">outUser</span><span class="params">(String outUser, Double money)</span> </span>&#123;</span><br><span class="line">    String sql = <span class="string">"update account set money = money - ? where name = ?"</span>;</span><br><span class="line">    jdbcTemplate.update(sql,money,outUser);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inUser</span><span class="params">(String inUser, Double money)</span> </span>&#123;</span><br><span class="line">    String sql = <span class="string">"update account set money = money + ? where name = ?"</span>;</span><br><span class="line">    jdbcTemplate.update(sql,money,inUser);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String sql = <span class="string">"SELECT * FROM account"</span>;</span><br><span class="line">    <span class="keyword">return</span> jdbcTemplate.query(sql, <span class="keyword">new</span> BeanPropertyRowMapper&lt;&gt;(Account<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AccountService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser,String inUser,Double money)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>AccountServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser, String inUser, Double money)</span> </span>&#123;</span><br><span class="line">    accountDao.outUser(outUser,money);</span><br><span class="line">    accountDao.inUser(inUser,money);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> accountDao.findAll();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJdbcTransfer</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    accountService.transfer(<span class="string">"tom"</span>,<span class="string">"jerry"</span>,<span class="number">100</span>d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="五-Spring的事务"><a href="#五-Spring的事务" class="headerlink" title="五.Spring的事务"></a>五.Spring的事务</h1><p>Spring的事务控制可以分为编程式事务控制和声明式事务控制。</p><ul><li><p>编程式事务</p><p>就是将业务代码和事务代码放在一起书写,它的耦合性太高,开发中不使用</p></li><li><p>声明式事务</p><p>将事务代码（spring内置）和业务代码隔离开发, 然后通过一段配置让他们组装运行, 最后达到事务控制的目的.</p><p>声明式事务就是通过AOP原理实现的.</p></li></ul><h4 id="5-1-编程式事务"><a href="#5-1-编程式事务" class="headerlink" title="5.1 编程式事务"></a>5.1 编程式事务</h4><h5 id="5-1-1-Platform-TransactionManager"><a href="#5-1-1-Platform-TransactionManager" class="headerlink" title="5.1.1 Platform TransactionManager"></a>5.1.1 Platform TransactionManager</h5><p>spring事务管理器的顶级接口，里面提供了我们常用的操作事务的方法(需要坐标 spring-orm)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--spring的orm--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>事务</th><th>功能</th></tr></thead><tbody><tr><td>TransactionStatus getTransaction(TransactionDefinition definition);</td><td>获取事务的状态信息</td></tr><tr><td>void commit(TransactionStatus status)；</td><td>提交事务</td></tr><tr><td>void rollback(TransactionStatus status)；</td><td>回滚事务</td></tr></tbody></table><h5 id="5-1-2-TransactionDefinition"><a href="#5-1-2-TransactionDefinition" class="headerlink" title="5.1.2 TransactionDefinition"></a>5.1.2 TransactionDefinition</h5><p>Spring事务定义参数的接口，例如定义：事务隔离级别、事务传播行为等</p><ul><li><p>事务隔离级别</p><table><thead><tr><th>事务的隔离级别</th><th></th></tr></thead><tbody><tr><td>ISOLATION_DEFAULT</td><td>使用数据库默认级别<br/>MySQL可重复读;Oracle读已提交</td></tr><tr><td>ISOLATION_READ_UNCOMMITTED</td><td>读未提交</td></tr><tr><td>ISOLATION_READ_COMMITTED</td><td>读已提交</td></tr><tr><td>ISOLATION_REPEATABLE_READ</td><td>可重复读</td></tr><tr><td>ISOLATION_SERIALIZABLE</td><td>串行化</td></tr></tbody></table></li><li><p>事务传播行为</p><p>事务传播行为指的就是当一个业务方法 <strong>被</strong> 另一个业务方法调用时，应该如何进行事务控制。</p><table><thead><tr><th>行为</th><th>说明</th></tr></thead><tbody><tr><td>REQUIRED（默认传播行为）</td><td>如果当前没有事务，就新建一个事务，如果已经存在一个事务中，加入到这个事务中。<br/>    如果单独调用方法B时，没有事务，spring就给当前方法创建一个新事物<br/>    如果方法A中已经存在了事务，调用方法B时，方法B加方法A的事务中</td></tr><tr><td>SUPPORTS</td><td>支持当前事务，如果当前没有事务，就以非事务方式执行<br/>    如果单独调用方法B时没有事务，咱们就以非事务方法运行<br/>如果方法A中已经存在了事务，调用方法B时，方法B加方法A的事务中</td></tr><tr><td>MANDATORY</td><td>使用当前的事务，如果当前没有事务，就抛出异常</td></tr><tr><td>REQUERS_NEW</td><td>新建事务，如果当前在事务中，把当前事务挂起</td></tr><tr><td>NOT_SUPPORTED</td><td>以非事务方式执行操作，如果当前存在事务，就把当前事务挂起</td></tr><tr><td>NEVER</td><td>以非事务方式运行，如果当前存在事务，抛出异常</td></tr><tr><td>NESTED</td><td>如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行 REQUIRED 类似的操作</td></tr></tbody></table><p><img src="%E4%BA%8B%E5%8A%A1%E4%BC%A0%E6%92%AD%E8%A1%8C%E4%B8%BA1.png" alt=""></p><p><img src="%E4%BA%8B%E5%8A%A1%E4%BC%A0%E6%92%AD%E8%A1%8C%E4%B8%BA2.png" alt=""></p><p><img src="%E4%BA%8B%E5%8A%A1%E4%BC%A0%E6%92%AD%E8%A1%8C%E4%B8%BA3.png" alt=""></p></li><li><p>是否只读</p><table><thead><tr><th>是否只读</th><th></th></tr></thead><tbody><tr><td>read-only</td><td>只读事务(增 删 改不能使用,只能查询使用)</td></tr></tbody></table></li><li><p>超时时间</p><table><thead><tr><th>超时时间</th><th></th></tr></thead><tbody><tr><td>timeout</td><td>默认值是-1，没有超时限制。如果有，以秒为单位进行设置</td></tr></tbody></table></li></ul><h5 id="5-1-3-TransactionStatus"><a href="#5-1-3-TransactionStatus" class="headerlink" title="5.1.3 TransactionStatus"></a>5.1.3 TransactionStatus</h5><p>获取spring当前事务运行的状态</p><h5 id="5-1-4-知识小结"><a href="#5-1-4-知识小结" class="headerlink" title="5.1.4 知识小结"></a>5.1.4 知识小结</h5><p>Spring中的事务控制主要就是通过这三个API实现的</p><table><thead><tr><th>API</th><th></th></tr></thead><tbody><tr><td>PlatformTransactionManager</td><td>负责事务的管理，它是个接口，其子类负责具体工作</td></tr><tr><td>TransactionDefinition</td><td>定义了事务的一些相关参数</td></tr><tr><td>TransactionStatus</td><td>代表事务运行的一个实时状态</td></tr></tbody></table><p>可以简单的理解三者的关系:<strong>事务管理器</strong>通过读取<strong>事务定义参数</strong>进行事务管理，然后会产生一系列的<strong>事务状态</strong>。</p><h4 id="5-2-使用编程式事务"><a href="#5-2-使用编程式事务" class="headerlink" title="5.2 使用编程式事务"></a>5.2 使用编程式事务</h4><h5 id="5-2-1-配置事务管理器"><a href="#5-2-1-配置事务管理器" class="headerlink" title="5.2.1 配置事务管理器"></a>5.2.1 配置事务管理器</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--事务管理器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span> <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="5-2-2-修改service层代码"><a href="#5-2-2-修改service层代码" class="headerlink" title="5.2.2 修改service层代码"></a>5.2.2 修改service层代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">xxxServiceImpl</span> <span class="keyword">implements</span> <span class="title">xxxService</span></span>&#123;</span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> PlatformTransactionManager transactionManager;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DefaultTransactionDefinition def = <span class="keyword">new</span> DefaultTransactionDefinition(); </span><br><span class="line">    <span class="comment">// 设置是否只读，为false才支持事务</span></span><br><span class="line">    def.setReadOnly(<span class="keyword">false</span>);</span><br><span class="line">    <span class="comment">// 设置隔离级别 </span></span><br><span class="line">    def.setIsolationLevel(TransactionDefinition.ISOLATION_DEFAULT);</span><br><span class="line">    <span class="comment">// 设置事务的传播行为 </span></span><br><span class="line">    def.setPropagationBehavior(TransactionDefinition.PROPAGATION_REQUIRED); </span><br><span class="line">    <span class="comment">// 对事务管理器进行配置</span></span><br><span class="line">    TransactionStatus status = transactionManager.getTransaction(def);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 业务操作</span></span><br><span class="line">      <span class="comment">// 提交事务</span></span><br><span class="line">      transactionManager.commit(status); </span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace(); <span class="comment">// 回滚事务</span></span><br><span class="line">      transactionManager.rollback(status); &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 依赖dao</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PlatformTransactionManager transactionManager;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser, String inUser, Double money)</span> </span>&#123;</span><br><span class="line">        DefaultTransactionDefinition def = <span class="keyword">new</span> DefaultTransactionDefinition();</span><br><span class="line">        <span class="comment">// 设置是否只读，为false才支持事务</span></span><br><span class="line">        def.setReadOnly(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">// 设置隔离级别</span></span><br><span class="line">        def.setIsolationLevel(TransactionDefinition.ISOLATION_DEFAULT);</span><br><span class="line">        <span class="comment">// 设置事务的传播行为</span></span><br><span class="line">        def.setPropagationBehavior(TransactionDefinition.PROPAGATION_REQUIRED);</span><br><span class="line">        <span class="comment">// 对事务管理器进行配置</span></span><br><span class="line">        TransactionStatus status = transactionManager.getTransaction(def);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 核心业务</span></span><br><span class="line">            accountDao.outUser(outUser, money);</span><br><span class="line">            <span class="comment">// 模拟异常..</span></span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">            accountDao.inUser(inUser, money);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 提交事务</span></span><br><span class="line">            transactionManager.commit(status);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="comment">// 回滚事务</span></span><br><span class="line">            transactionManager.rollback(status);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong># spring04</strong></p><p><strong>## 一 基于XML的AOP开发</strong></p><p><strong>### aop织入的配置</strong></p><p>- <a href="aop:config">aop:config</a></p><p>​        &lt;aop:aspect ref=“通知类”&gt;</p><p>​            &lt;aop:before method=“通知方法名称” pointcut=“切点表达式”&gt;</aop:before></p><p>​        </aop:aspect></p><p></aop:config></p><p><strong>### 切点表达式</strong></p><p>- &lt;aop:pointcut id=”myPointcut” expression=”execution(* com.itheima.service..<em>.</em>(..))”&gt;</p><p><strong>### 通知的类型</strong></p><p>- <a href="aop:before">aop:before</a></p><p>-  <a href="aop:after-returning">aop:after-returning</a></p><p>- <a href="aop:after-throwing">aop:after-throwing</a></p><p>- <a href="aop:after">aop:after</a></p><p>- <a href="aop:around">aop:around</a></p><p><strong>## 二 基于注解的AOP开发</strong></p><p><strong>### 切面类</strong></p><p>- @Aspect</p><p>public class MyAdvice {}</p><p><strong>### 切点表达式</strong></p><p>- @Pointcut(“execution(void com.itheima.service..<strong>.</strong>(..))”)</p><p>public void myPoint(){}</p><p><strong>### 通知类型</strong></p><p>- @Before</p><p>- @AfterReturning</p><p>- @AfterThrowing</p><p>- @After</p><p>- @Around</p><p><strong>### AOP自动代理</strong></p><p>- <a href="aop:aspectj-autoproxy/">aop:aspectj-autoproxy/</a></p><p>- @EnableAspectJAutoProx</p><p><strong>## 三 AOP优化转账案例</strong></p><p><strong>### xml配置实现</strong></p><p><strong>### 注解配置实现</strong></p><p><strong>## 四 Spring的JdbcTemplate</strong></p><p><strong>### 介绍</strong></p><p>- JdbcTemplate是Spring的一款用于简化Dao代码的工具，它底层封装了JDBC技术</p><p>- 核心对象</p><p>​    - JdbcTemplate jdbcTemplate = new JdbcTemplate(DataSource dataSource);</p><p>- 核心方法</p><p>​    - DML</p><p>​        - int update(); </p><p>​    - DQL</p><p>​        - List<T> query(); </p><p>​        - T queryForObject(); </p><p>​    - 查询ORM映射处理实现类</p><p>​        - BeanPropertyRowMapper&lt;&gt;(Class 字节码对象)</p><p><strong>###  Spring整合JdbcTemplate</strong></p><p><strong>### 实现转账案例</strong></p><p>- 我们发现了无法使用自己定义的事务管理器（LOW）、需要引出spring内置事务管理器</p><p><strong>## 五 Spring的事务</strong></p><p><strong>### 编程式事务控制（了解）</strong></p><p>- 开发者直接把事务的代码和业务代码耦合到一起，在实际开发中不用。</p><p>- 相关对象</p><p>​    - PlatformTransactionManager</p><p>​        - DataSourceTransactionManager</p><p>​    - TransactionDefinition</p><p>​        - 隔离级别</p><p>​        - 传播行为</p><p>​            - REQUIRED</p><p>​            - SUPPORTS</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;XML版本详细介绍&lt;/li&gt;
&lt;li&gt;注解版本详细介绍&lt;/li&gt;
&lt;li&gt;AOP方式优化转账案例&lt;/li&gt;
&lt;li&gt;Spring针对JDBC操作简化的工具包JdbcTemplate&lt;/li&gt;
&lt;li&gt;Spring的事务&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（六十六）</title>
    <link href="http://yoursite.com/2020/05/31/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E5%85%AD%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/31/就业班学习笔记（六十六）/</id>
    <published>2020-05-31T00:57:40.000Z</published>
    <updated>2020-05-31T17:09:46.105Z</updated>
    
    <content type="html"><![CDATA[<ul><li>转账案例<ul><li>事务安全问题</li><li>手动控制事务</li></ul></li><li>转账案例的进阶<ul><li>动态代理(jdk,cglib)</li></ul></li><li>SpringAOP(在不修改源代码情况下，实现对代码增强)</li><li>XML版本AOP</li></ul><a id="more"></a><h1 id="一-转账案例基础"><a href="#一-转账案例基础" class="headerlink" title="一.转账案例基础"></a>一.转账案例基础</h1><ul><li><p>需求</p><p>使用Spring框架整合DbUtils技术，实现用户转账功能</p></li></ul><h4 id="1-1-转账基础功能"><a href="#1-1-转账基础功能" class="headerlink" title="1.1 转账基础功能"></a>1.1 转账基础功能</h4><ul><li><p>Java环境与数据库准备</p><p>IDEA new moudle==&gt;MAVEN==&gt;创建moudle==&gt;导入包，复制applicationContext.xml和jdbc.properties</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--druid--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--dbUtils--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring核心--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring整合junit--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 省略约束 --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 开启注解组件扫描 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- 加载第三方配置文件 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!--druid连接交给ioc容器,第三方类目前仅能用bean标签--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!--queryRunner交给ioc容器,第三方类目前仅能用bean标签--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"queryRunner"</span> <span class="attr">class</span>=<span class="string">"org.apache.commons.dbutils.QueryRunner"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"ds"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写AccountDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//转出</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">outUser</span><span class="params">(String outUser, Double money)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//转入</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">inUser</span><span class="params">(String inUser, Double money)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>AccountDaoImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> QueryRunner queryRunner;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">outUser</span><span class="params">(String outUser, Double money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">"UPDATE account SET money=money-? WHERE name = ?"</span>;</span><br><span class="line">            queryRunner.update(sql, money, outUser);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inUser</span><span class="params">(String inUser, Double money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">"UPDATE account SET money=money+? WHERE name = ?"</span>;</span><br><span class="line">            queryRunner.update(sql, money, inUser);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写AccountService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//转账</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser,String inUser,Double money)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>AccountServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser, String inUser, Double money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        accountDao.outUser(outUser,money);</span><br><span class="line">        accountDao.inUser(inUser,money);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ContextConfiguration</span>(</span>&#123;<span class="string">"classpath:applicationContext.xml"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTransfer</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        accountService.transfer(<span class="string">"tom"</span>,<span class="string">"jerry"</span>,<span class="number">100</span>d);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>目前问题</p><p>若服务器出现宕机等事故，事务无回滚，导致只执行一半的问题</p></li></ul><h4 id="1-2-事务控制"><a href="#1-2-事务控制" class="headerlink" title="1.2 事务控制"></a>1.2 事务控制</h4><ul><li><p>解决方案</p><p>将service方法的多个dao层代码，看做一个事务，要么都成功，要么都失败</p><p>Version_1:手动控制事务，通过一个connection来操作核心业务</p></li><li><p>修改AccountServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 依赖dataSource</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Version_1</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser, String inUser, Double money)</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取conn手动控制事务</span></span><br><span class="line">            connection = dataSource.getConnection();</span><br><span class="line">            connection.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">            <span class="comment">// 业务代码-------- start</span></span><br><span class="line">            <span class="comment">// 转出</span></span><br><span class="line">            accountDao.outUser(connection, outUser, money);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 转入</span></span><br><span class="line">            accountDao.inUser(connection, inUser, money);</span><br><span class="line">            <span class="comment">// 提交事务</span></span><br><span class="line">            connection.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 回滚事务</span></span><br><span class="line">                connection.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 再改为自动提交</span></span><br><span class="line">                connection.setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line">                <span class="comment">// 释放资源</span></span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>修改AccountDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> QueryRunner queryRunner;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ConnectionUtils connectionUtils;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">outUser</span><span class="params">(String outUser, Double money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">"UPDATE account SET money=money-? WHERE name = ?"</span>;</span><br><span class="line">            Connection threadConnection = connectionUtils.getThreadConnection();</span><br><span class="line">            queryRunner.update(threadConnection,sql, money, outUser);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inUser</span><span class="params">(String inUser, Double money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">"UPDATE account SET money=money+? WHERE name = ?"</span>;</span><br><span class="line">            Connection threadConnection = connectionUtils.getThreadConnection();</span><br><span class="line">            queryRunner.update(threadConnection,sql, money, inUser);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        List&lt;Account&gt; list = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">"SELECT * FROM account"</span>;</span><br><span class="line">            list=queryRunner.query(sql,<span class="keyword">new</span> BeanListHandler&lt;&gt;(Account<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">outUser</span><span class="params">(Connection connection, String outUser, Double money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">"UPDATE account SET money=money-? WHERE name = ?"</span>;</span><br><span class="line">            queryRunner.update(connection,sql, money, outUser);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inUser</span><span class="params">(Connection connection, String inUser, Double money)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">"UPDATE account SET money=money+? WHERE name = ?"</span>;</span><br><span class="line">            queryRunner.update(connection,sql, money, inUser);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ContextConfiguration</span>(</span>&#123;<span class="string">"classpath:applicationContext.xml"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTransferVersionOne</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    accountService.transfer(<span class="string">"tom"</span>,<span class="string">"jerry"</span>,<span class="number">100</span>d);</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>问题</p><p>不应该将service的conn对象传递到dao层，这种方式，就产生了dao层与service的耦合性问题</p></li></ul><h4 id="1-3-ThreadLocal"><a href="#1-3-ThreadLocal" class="headerlink" title="1.3 ThreadLocal"></a>1.3 ThreadLocal</h4><ul><li><p>解决方案</p><p>ThreadLocal是一个线程的局部变量,此处用作线程K-V 线程map集合的存取</p></li><li><p>编写ConnectionUtils</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">ThreadLocal操作的工具类</span></span><br><span class="line"><span class="comment">1. 从当前线程内绑定并获取conn对象</span></span><br><span class="line"><span class="comment">2. 移除当前线程的conn对象</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 交给ioc容器</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConnectionUtils</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 线程隔离</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;Connection&gt; tl = <span class="keyword">new</span> ThreadLocal&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.从当前线程内绑定并获取conn对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Connection <span class="title">getThreadConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 第一次执行get，肯定获取不到</span></span><br><span class="line">        Connection connection = tl.get();</span><br><span class="line">        <span class="keyword">if</span>(connection==<span class="keyword">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection = dataSource.getConnection();</span><br><span class="line">                tl.set(connection);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2.移除当前线程的conn对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeThreadConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">        tl.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改AccountServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 依赖dataSource</span></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//Version_2</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> ConnectionUtils connectionUtils;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser, String inUser, Double money)</span> </span>&#123;</span><br><span class="line">    Connection connection=<span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 获取conn手动控制事务</span></span><br><span class="line">      connection = connectionUtils.getThreadConnection();</span><br><span class="line">      connection.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">      <span class="comment">// 业务代码-------- start</span></span><br><span class="line">      <span class="comment">// 转出</span></span><br><span class="line">      accountDao.outUser(outUser,money);</span><br><span class="line">      <span class="comment">// 转入</span></span><br><span class="line">      accountDao.inUser(inUser,money);</span><br><span class="line">      <span class="comment">// 业务代码-------- end</span></span><br><span class="line">      <span class="comment">// 提交事务</span></span><br><span class="line">      connection.commit();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">      throwables.printStackTrace();</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 回滚事务</span></span><br><span class="line">        connection.rollback();</span><br><span class="line">      &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 再改为自动提交</span></span><br><span class="line">        connection.setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 释放资源</span></span><br><span class="line">        connection.close();</span><br><span class="line">      &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">        throwables.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>修改AccountDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> QueryRunner queryRunner;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ConnectionUtils connectionUtils;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">outUser</span><span class="params">(String outUser, Double money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.编写sql</span></span><br><span class="line">            String sql = <span class="string">"UPDATE account SET money=money-? WHERE name = ?"</span>;</span><br><span class="line">            <span class="comment">// 获取当前线程内的 conn</span></span><br><span class="line">            Connection threadConnection = connectionUtils.getThreadConnection();</span><br><span class="line">            <span class="comment">// 2.执行sql</span></span><br><span class="line">            queryRunner.update(threadConnection,sql, money, outUser);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inUser</span><span class="params">(String inUser, Double money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">"UPDATE account SET money=money+? WHERE name = ?"</span>;</span><br><span class="line">            Connection threadConnection = connectionUtils.getThreadConnection();</span><br><span class="line">            queryRunner.update(threadConnection,sql, money, inUser);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ContextConfiguration</span>(</span>&#123;<span class="string">"classpath:applicationContext.xml"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTransferVersionTwo</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    accountService.transfer(<span class="string">"tom"</span>,<span class="string">"jerry"</span>,<span class="number">100</span>d);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>翻看源码</p><ul><li><p>向当前线程map集合存值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(T value)</span> </span>&#123;</span><br><span class="line">    Thread t = Thread.currentThread();</span><br><span class="line">    ThreadLocalMap map = getMap(t);</span><br><span class="line">    <span class="keyword">if</span> (map != <span class="keyword">null</span>)</span><br><span class="line">        map.set(<span class="keyword">this</span>, value);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        createMap(t, value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>当前线程map取值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Thread t = Thread.currentThread();</span><br><span class="line">    ThreadLocalMap map = getMap(t);</span><br><span class="line">    <span class="keyword">if</span> (map != <span class="keyword">null</span>) &#123;</span><br><span class="line">        ThreadLocalMap.Entry e = map.getEntry(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">if</span> (e != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line">            T result = (T)e.value;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> setInitialValue();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>从当前线程map移出值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ThreadLocalMap m = getMap(Thread.currentThread());</span><br><span class="line">  <span class="keyword">if</span> (m != <span class="keyword">null</span>)</span><br><span class="line">    m.remove(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>问题</p><p>在企业开发时，我们基础每一个业务层方法都需要进行事务的控制，这部分代码属于公共业务且重复 的，出现了大量的代码冗余</p></li></ul><h4 id="1-4-事务管理器"><a href="#1-4-事务管理器" class="headerlink" title="1.4 事务管理器"></a>1.4 事务管理器</h4><ul><li><p>解决方案</p><p>这时候我们可以把这部分代码抽取到工具类(事务管理器)</p></li><li><p>编写TransactionManager</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransactionManager</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ConnectionUtils connectionUtils;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.开启事务</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beginTransaction</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connectionUtils.getThreadConnection().setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.提交事务</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connectionUtils.getThreadConnection().commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.回滚事务</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rollback</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connectionUtils.getThreadConnection().rollback();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 恢复自动提交</span></span><br><span class="line">            connectionUtils.getThreadConnection().setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">// 归还到连接池</span></span><br><span class="line">            connectionUtils.getThreadConnection().close();</span><br><span class="line">            <span class="comment">// 从当前线程删除conn对象</span></span><br><span class="line">            connectionUtils.removeThreadConnection();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改AccountService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment">//Version_3</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TransactionManager transactionManager;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser, String inUser, Double money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 开启事务</span></span><br><span class="line">            transactionManager.beginTransaction();</span><br><span class="line">            <span class="comment">// 业务代码-------- start</span></span><br><span class="line">            <span class="comment">// 转出</span></span><br><span class="line">            accountDao.outUser(outUser,money);</span><br><span class="line">            <span class="comment">// 转入</span></span><br><span class="line">            accountDao.inUser(inUser,money);</span><br><span class="line">            <span class="comment">// 业务代码-------- end</span></span><br><span class="line">            <span class="comment">// 提交事务</span></span><br><span class="line">            transactionManager.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="comment">// 回滚事务</span></span><br><span class="line">            transactionManager.rollback();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 释放资源</span></span><br><span class="line">            transactionManager.release();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTransferVersionThree</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    accountService.transfer(<span class="string">"tom"</span>,<span class="string">"jerry"</span>,<span class="number">100</span>d);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>问题</p><ul><li>所有事务都不可避免使用事务管理器控制</li><li>事务管理器属于通用业务，与核心代码产生耦合性</li></ul></li></ul><h1 id="二-转账案例进阶"><a href="#二-转账案例进阶" class="headerlink" title="二.转账案例进阶"></a>二.转账案例进阶</h1><p>可以将业务代码和事务代码进行拆分，通过动态代理的方式，对业务方法进行事务的增强。这样就 不会对业务层产生影响，解决了耦合性的问题</p><ul><li><p>常用的动态代理技术</p><p>JDK 代理 : 基于接口的动态代理技术</p><p>CGLIB代理:基于父类的动态代理技术</p><p><img src="1573227895080.png" alt=""></p></li><li><p>修改AccountService代码</p><blockquote><p>企业开发时业务层，只有核心业务代码，不会出现事务相关代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 依赖dataSource</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(String outUser, String inUser, Double money)</span> </span>&#123;</span><br><span class="line">        accountDao.outUser(outUser,money);</span><br><span class="line">        accountDao.inUser(inUser,money);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-1-JDK动态代理"><a href="#2-1-JDK动态代理" class="headerlink" title="2.1 JDK动态代理"></a>2.1 JDK动态代理</h4><ul><li><p>思想</p><p>JDKProxyFactory工厂，生产多个代理对象，进行事务增强</p><p>目标对象——目标接口——基于接口，创建代理对象(method.invoke调用目标对象原有功能进行增强)</p></li><li><p>目标对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span></span></span><br></pre></td></tr></table></figure></li><li><p>编写JdkProxyFactory</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">基于jdk，实现对目标对象，进行事务的增强</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdkProxyFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TransactionManager transactionManager;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">createJDKProxyTx</span><span class="params">(Object target)</span> </span>&#123;</span><br><span class="line">        Object proxy = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用sun公司提供的jdk代理工具类</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        1.目标对象类加器</span></span><br><span class="line"><span class="comment">        2.目标对象接口数组</span></span><br><span class="line"><span class="comment">        3.实现增强的业务逻辑(匿名内部类、lambda)</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//目标对象类 加载器</span></span><br><span class="line">        ClassLoader classLoader = target.getClass().getClassLoader();</span><br><span class="line">        <span class="comment">// 目标对象实现的接口数组</span></span><br><span class="line">        Class&lt;?&gt;[] interfaces = target.getClass().getInterfaces();</span><br><span class="line">        proxy = Proxy.newProxyInstance(classLoader, interfaces, <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">invoke 方法是代理对象的入口</span></span><br><span class="line"><span class="comment">proxy:jdk工具类生产的代理对象 method:当前用户执行的某个具体方法</span></span><br><span class="line"><span class="comment">args:当前用户执行的某个具体方法传递的实际参数列表</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                Object result = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 开启事务</span></span><br><span class="line">                    transactionManager.beginTransaction();</span><br><span class="line">                    <span class="comment">// 执行目标对象原有的功能</span></span><br><span class="line">                    result = method.invoke(target, args);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 提交事务</span></span><br><span class="line">                    transactionManager.commit();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                    <span class="comment">// 回滚事务</span></span><br><span class="line">                    transactionManager.rollback();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="comment">// 释放资源</span></span><br><span class="line">                    transactionManager.release();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 返回增强后的代理对象</span></span><br><span class="line">        <span class="keyword">return</span> proxy;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ContextConfiguration</span>(</span>&#123;<span class="string">"classpath:applicationContext.xml"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 目标对象</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// jdk生产代理对象工厂</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdkProxyFactory jdkProxyFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJDKProxy</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 目标对象没有事务增强</span></span><br><span class="line">        <span class="comment">// accountService.transfer("tom", "jerry", 100d);</span></span><br><span class="line">        <span class="comment">// 使用jdk对目标对象事务增强</span></span><br><span class="line">        AccountService jdkProxy = (AccountService) jdkProxyFactory.createJDKProxyTx(accountService);</span><br><span class="line">        jdkProxy.transfer(<span class="string">"tom"</span>,<span class="string">"jerry"</span>,<span class="number">100</span>d);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-2-CGLIB动态代理"><a href="#2-2-CGLIB动态代理" class="headerlink" title="2.2 CGLIB动态代理"></a>2.2 CGLIB动态代理</h4><ul><li><p>问题</p><p>进入公司，可能有些代码没有接口，但又需要动态代理进行增强，这时候sun公司提供jdk工具就无法实 现了</p></li><li><p>解决方案</p><p>基于CGLIB技术，对普通java类型实现代理增强(第三方，需导包)</p><p>代理对象获取父对象所有方法(method.invoke)，用户访问代理增强对象即可</p></li><li><p>目标对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span></span></span><br></pre></td></tr></table></figure></li><li><p>编写CglibProxyFactory</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">基于cglib，实现对目标对象，进行事务的增强</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CglibProxyFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TransactionManager transactionManager;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">createCglibProxyTx</span><span class="params">(Object target)</span> </span>&#123;</span><br><span class="line">        Object proxy = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用cglib提供的工具类</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        1. 目标对象class类</span></span><br><span class="line"><span class="comment">        2. 实现增强的业务逻辑(匿名内部类、lambda) */</span></span><br><span class="line"></span><br><span class="line">        proxy = Enhancer.create(target.getClass(), <span class="keyword">new</span> MethodInterceptor() &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            intercept 代理对象方法入口</span></span><br><span class="line"><span class="comment">            1.o cglib生产出来的代理对象</span></span><br><span class="line"><span class="comment">            2.method 执行代理对象(子)，被拦截的方法</span></span><br><span class="line"><span class="comment">            3.objects 执行代理对象，被拦截的方法的参数列表</span></span><br><span class="line"><span class="comment">            4.methodProxy 目标对象(父)，被拦截的方法，功能与method一样的</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Object <span class="title">intercept</span><span class="params">(Object o, Method method, Object[] objects, MethodProxy methodProxy)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                Object result = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 开启事务</span></span><br><span class="line">                    transactionManager.beginTransaction();</span><br><span class="line">                    <span class="comment">// 调用目标对象原有的功能</span></span><br><span class="line">                    result=method.invoke(target,objects);</span><br><span class="line">                    <span class="comment">// 提交事务</span></span><br><span class="line">                    transactionManager.commit();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                    <span class="comment">// 回滚事务</span></span><br><span class="line">                    transactionManager.rollback();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="comment">// 释放资源</span></span><br><span class="line">                    transactionManager.release();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 返回增强后的代理对象</span></span><br><span class="line">        <span class="keyword">return</span> proxy;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ContextConfiguration</span>(</span>&#123;<span class="string">"classpath:applicationContext.xml"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 目标对象</span></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> CglibProxyFactory cglibProxyFactory;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCglibProxy</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">// 使用cglib对目标对象事务增强</span></span><br><span class="line">    AccountService jdkProxy = (AccountService) cglibProxyFactory.createCglibProxyTx(accountService);</span><br><span class="line">    jdkProxy.transfer(<span class="string">"tom"</span>,<span class="string">"jerry"</span>,<span class="number">100</span>d);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-总结"><a href="#2-3-总结" class="headerlink" title="2.3 总结"></a>2.3 总结</h4><h5 id="2-3-1-jdk和cglib两种代理方式的选择"><a href="#2-3-1-jdk和cglib两种代理方式的选择" class="headerlink" title="2.3.1 jdk和cglib两种代理方式的选择?"></a>2.3.1 jdk和cglib两种代理方式的选择?</h5><blockquote><p>优先使用jdk，性能高于cglib </p><p>如果目标对象有接口，一定使用jdk创建代理对象 </p><p>如果目标对象没有接口，没办法只能使用cglib创建代理对象</p></blockquote><h5 id="2-3-2-当核心业务-转账-和通用业务-事务、日志-同时出现时"><a href="#2-3-2-当核心业务-转账-和通用业务-事务、日志-同时出现时" class="headerlink" title="2.3.2 当核心业务(转账)和通用业务(事务、日志)同时出现时?"></a>2.3.2 当核心业务(转账)和通用业务(事务、日志)同时出现时?</h5><ul><li><p>开发阶段</p><p>拆分(核心业务在service，事务管理在单独工具类中):解耦 </p></li><li><p>运行阶段</p><p>通过动态代理技术，进行组合:功能增强</p></li></ul><p><img src="image-20200531121327900.png" alt=""></p><h1 id="三-SpringAOP简介"><a href="#三-SpringAOP简介" class="headerlink" title="三.SpringAOP简介"></a>三.SpringAOP简介</h1><h4 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h4><p>AOP( 面向切面编程 )是一种思想, 它的目的就是在不修改源代码的基础上,对原有功能进行增强。 Spring AOP是对AOP思想的一种实现, Spring底层同时支持jdk和cglib动态代理。</p><ul><li>优势<ul><li>在程序运行期间，在不修改源码的情况下对方法进行功能增强</li><li>逻辑清晰，开发核心业务的时候，不必关注增强业务的代码</li><li>减少重复代码，提高开发效率，便于后期维护</li></ul></li><li>Spring会根据被代理的类是否有接口自动选择代理方式<ul><li>如果有接口,就采用jdk动态代理</li><li>没有接口就采用cglib的方式</li></ul></li></ul><h4 id="3-2-相关术语"><a href="#3-2-相关术语" class="headerlink" title="3.2 相关术语"></a>3.2 相关术语</h4><table><thead><tr><th>术语</th><th>解释</th><th>目标对象</th></tr></thead><tbody><tr><td>Target</td><td>目标对象</td><td>service层的核心业务</td></tr><tr><td>JoinPoint</td><td>连接点</td><td>目标对象中的所有方法</td></tr><tr><td>Pointcut</td><td>切点</td><td>目标对象需要增强的方法</td></tr><tr><td>Advice</td><td>通知(增强)</td><td>实现增强的功能的</td></tr><tr><td>Weaving</td><td>织入</td><td>将通知和切点进行织入(动作)</td></tr><tr><td>Aspect</td><td>切面(spring术语)</td><td>通知 + 切点 = 切面</td></tr><tr><td>Proxy</td><td>代理对象(底层实现)</td><td>通知 + 切点 = 代理对象</td></tr></tbody></table><h4 id="3-3-明确注意事项"><a href="#3-3-明确注意事项" class="headerlink" title="3.3 明确注意事项"></a>3.3 明确注意事项</h4><ul><li><p>开发阶段</p><ul><li>编写核心业务代码(开发主线):要求熟悉业务需求。</li><li>把公用代码抽取出来，制作成通知，要求熟悉AOP思想。</li><li>在配置文件中，声明切入点与通知间的关系，即切面，要求熟悉AOP思想。</li></ul></li><li><p>运行阶段(Spring框架完成的)</p><p>Spring读取配置文件中的切面信息，根据切面中的描述，将增强功能增加在目标对象的切点方法上，动 态创建代理对象，最后将经过代理之后对象放入ioc容器中</p></li><li><p>必知必会</p><ul><li>能够编写目标对象(转账)</li><li>能够看懂通知类(事务管理器)</li><li>能够配置aop切面(切点+通知)，spring自动创建代理对象</li></ul></li></ul><h1 id="四-基于XML的AOP开发"><a href="#四-基于XML的AOP开发" class="headerlink" title="四.基于XML的AOP开发"></a>四.基于XML的AOP开发</h1><h4 id="4-1-快速入门"><a href="#4-1-快速入门" class="headerlink" title="4.1 快速入门"></a>4.1 快速入门</h4><ul><li><p>需求</p><p>实现对转账方法的增强</p></li><li><p>创建maven的java模块，导入坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--spring的核心--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--aspectj--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--spring整合junit--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写目标类(AccountService)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">transfer</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>AccountServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Transfer"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Save"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写通知类(增强)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通知类(增强)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Advance notice"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置spring的AOP(切点+通知)</p><p>如果spring要使用aop，需要再引入schema约束+命名空间</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop/spring-aop.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AccountServiceImpl"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"myAdvice"</span> <span class="attr">class</span>=<span class="string">"com.itheima.advice.MyAdvice"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">"myAdvice"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">"before"</span> <span class="attr">pointcut</span>=<span class="string">"execution(public void com.itheima.service.impl.AccountServiceImpl.transfer())"</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:before</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line">@ContextConfiguration("classpath:applicationContext.xml")</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 配置了aop之后，这就是代理对象</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountService accountService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAOP</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        accountService.transfer();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-2-xml配置详解"><a href="#4-2-xml配置详解" class="headerlink" title="4.2 xml配置详解"></a>4.2 xml配置详解</h4><h5 id="4-2-1-切点表达式"><a href="#4-2-1-切点表达式" class="headerlink" title="4.2.1 切点表达式"></a>4.2.1 切点表达式</h5><ul><li><p>表达式语法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execution([修饰符] 返回值类型 包名.类名.方法名(参数列表))</span><br></pre></td></tr></table></figure><p>访问修饰符可以省略</p><p>返回值类型、包名、类名、方法名可以使用星号 * 代替，代表任意</p><p>包名与类名之间一个点 . 代表当前包下的类，两个点 .. 表示当前包及其子包下的类</p><p>参数列表可以使用两个点 .. 表示任意个数，任意类型的参数列表</p></li></ul><h5 id="4-2-2-通知类型"><a href="#4-2-2-通知类型" class="headerlink" title="4.2.2 通知类型"></a>4.2.2 通知类型</h5><ul><li><p>通知的配置语法</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;aop:通知类型 method="通知类中方法名" pointcut="切点表达式"&gt;&lt;/aop:通知类型&gt;</span><br></pre></td></tr></table></figure></li><li><p>四大通知</p><table><thead><tr><th>名称</th><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>前置通知</td><td>&lt;aop:before&gt;</td><td>在切入点方法之前执行</td></tr><tr><td>后置通知</td><td>&lt;aop:afterReturning&gt;</td><td>在切入点方法正常运行之后执行</td></tr><tr><td>异常通知</td><td>&lt;aop:afterThrowing&gt;</td><td>在切点方法发生异常的时候执行</td></tr><tr><td>最终通知</td><td>&lt;aop:after&gt;</td><td>无论切入点方法执行时是否有异常，都会执行</td></tr></tbody></table></li></ul><ul><li><p>环绕通知</p><table><thead><tr><th>名称</th><th>标签</th><th>说明</th></tr></thead><tbody><tr><td>环绕通知</td><td>&lt;aop:around&gt;</td><td>可以灵活实现四大通知的所有效果</td></tr></tbody></table></li></ul><h5 id="4-2-3-知识小结"><a href="#4-2-3-知识小结" class="headerlink" title="4.2.3 知识小结"></a>4.2.3 知识小结</h5><ul><li>aop织入的配置 </li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">“通知类”</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">“通知方法名称”</span> <span class="attr">pointcut</span>=<span class="string">“切点表达式</span>"&gt;</span>\<span class="tag">&lt;/<span class="name">aop:before</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>通知的类型 </p><p>前置通知、后置通知、异常通知、最终通知 </p><p>环绕通知</p></li><li><p>切点表达式</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execution([修饰符] 返回值类型 包名.类名.方法名(参数列表))</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong># spring03</strong></p><p><strong>## 一 转账案例基础</strong></p><p><strong>### 基础功能</strong></p><p>- 转出</p><p>- 转入</p><p><strong>### 传统事务控制</strong></p><p>- ConnectionUtils</p><p>​    - ThreadLocal</p><p>​        - 线程局部变量，存储空间（Thread.ThreadLocalMap）</p><p>- TransactionManager</p><p>​    - 事务管理器</p><p><strong>### 问题：</strong></p><p>- 核心业务  和 通用业务 产生了代码入侵</p><p><strong>## 二 转账案例进阶</strong></p><p><strong>### 代理事务控制</strong></p><p>- JDK</p><p>- CGLIB</p><p><strong>## 三 SpringAOP简介</strong></p><p><strong>### AOP：面向切面编程</strong></p><p>- 在不修改源代码情况下，实现对方法的增强</p><p><strong>### spring的AOP</strong></p><p>- 简化了增强部分的配置，使开发者只关注业务本身</p><p><strong>### AOP底层实现</strong></p><p>- 动态代理</p><p><strong>### AOP相关概念</strong></p><p>- Target</p><p>​    - 目标对象</p><p>- Joinpoint</p><p>​    - 连接点</p><p>- Pointcut</p><p>​    - 切点</p><p>- Advice</p><p>​    - 通知</p><p>- Weaving</p><p>​    - 织入</p><p>- Aspect</p><p>​    - 切面</p><p>- Proxy</p><p>​    - 代理对象</p><p><strong>## 四 基于XML的AOP开发</strong></p><p><strong>### aop织入的配置</strong></p><p>- <a href="aop:config">aop:config</a></p><p>​        &lt;aop:aspect ref=“通知类”&gt;</p><p>​            &lt;aop:before method=“通知方法名称” pointcut=“切点表达式”&gt;&lt;/aop:before&gt;</p><p>​        &lt;/aop:aspect&gt;</p><p>&lt;/aop:config&gt;</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;转账案例&lt;ul&gt;
&lt;li&gt;事务安全问题&lt;/li&gt;
&lt;li&gt;手动控制事务&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;转账案例的进阶&lt;ul&gt;
&lt;li&gt;动态代理(jdk,cglib)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SpringAOP(在不修改源代码情况下，实现对代码增强)&lt;/li&gt;
&lt;li&gt;XML版本AOP&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（六十五）</title>
    <link href="http://yoursite.com/2020/05/29/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E4%BA%94%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/29/就业班学习笔记（六十五）/</id>
    <published>2020-05-29T01:50:38.000Z</published>
    <updated>2020-05-29T13:35:11.084Z</updated>
    
    <content type="html"><![CDATA[<ul><li>apache推出的dao层工具类:DbUtils</li><li>spring的注解开发</li><li>使用注解优化Spring整合DbUtils</li><li>Spring整合Junit</li></ul><a id="more"></a><h1 id="一-DbUtils"><a href="#一-DbUtils" class="headerlink" title="一.DbUtils"></a>一.DbUtils</h1><h4 id="1-1-DbUtils是什么"><a href="#1-1-DbUtils是什么" class="headerlink" title="1.1 DbUtils是什么"></a>1.1 DbUtils是什么</h4><p>DbUtils是Apache的一款用于简化Dao层代码的工具类，它底层封装了JDBC技术。</p><ul><li><p>核心对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner(DataSource dataSource);</span><br></pre></td></tr></table></figure></li><li><p>核心方法</p><table><thead><tr><th>方法</th><th></th></tr></thead><tbody><tr><td>int update();</td><td>执行增、删、改语句</td></tr><tr><td>T query();   <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ResultSetHandler&lt;T&gt;</td><td>执行查询语句<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一个接口，主要作用是将数据库返回的记录封装到实体对象</td></tr></tbody></table></li><li><p>例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DbUtilsTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findAllTest</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 创建DBUtils工具类，传入连接池</span></span><br><span class="line">        QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner(JdbcUtils.getDataSource());</span><br><span class="line">        <span class="comment">// 编写sql</span></span><br><span class="line">        String sql = <span class="string">"select * from account"</span>;</span><br><span class="line">        <span class="comment">// 执行sql</span></span><br><span class="line">        List&lt;Account&gt; list = queryRunner.query(sql, <span class="keyword">new</span> BeanListHandler&lt;Account&gt;</span><br><span class="line">                (Account<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">        <span class="comment">// 打印结果</span></span><br><span class="line">        <span class="keyword">for</span> (Account account : list) &#123;</span><br><span class="line">            System.out.println(account);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-2-DbUtils快速入门"><a href="#1-2-DbUtils快速入门" class="headerlink" title="1.2 DbUtils快速入门"></a>1.2 DbUtils快速入门</h4><ul><li><p>准备数据库环境</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> spring_db<span class="string">` </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">USE `</span>spring_db<span class="string">`;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">DROP TABLE IF EXISTS `</span><span class="keyword">account</span><span class="string">`;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CREATE TABLE `</span><span class="keyword">account</span><span class="string">` (</span></span><br><span class="line"><span class="string">  `</span><span class="keyword">id</span><span class="string">` int(11) NOT NULL AUTO_INCREMENT,</span></span><br><span class="line"><span class="string">  `</span><span class="keyword">name</span><span class="string">` varchar(32) DEFAULT NULL,</span></span><br><span class="line"><span class="string">  `</span>money<span class="string">` double DEFAULT NULL,</span></span><br><span class="line"><span class="string">  PRIMARY KEY (`</span><span class="keyword">id</span><span class="string">`)</span></span><br><span class="line"><span class="string">) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">insert  into `</span><span class="keyword">account</span><span class="string">`(`</span><span class="keyword">id</span><span class="string">`,`</span><span class="keyword">name</span><span class="string">`,`</span>money<span class="string">`) values (1,'tom',1000),(2,'jerry',1000);</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建maven的java模块</p><p>IDEA new moudle==&gt;Maven==&gt;moudle_name</p></li><li><p>导入相关jar包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--druid连接池--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--dbUtils工具包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--junit单元测试--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring核心--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>JdbcUtils工具类(需组合jdbc.properties)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> DruidDataSource dc =  <span class="keyword">new</span> DruidDataSource();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    ResourceBundle bundle = ResourceBundle.getBundle(<span class="string">"jdbc"</span>);</span><br><span class="line">    String driverClass = bundle.getString(<span class="string">"jdbc.driver"</span>);</span><br><span class="line">    String jdbcUrl = bundle.getString(<span class="string">"jdbc.url"</span>);</span><br><span class="line">    String username = bundle.getString(<span class="string">"jdbc.username"</span>);</span><br><span class="line">    String password = bundle.getString(<span class="string">"jdbc.password"</span>);</span><br><span class="line"></span><br><span class="line">    dc.setDriverClassName(driverClass);</span><br><span class="line">    dc.setUrl(jdbcUrl);</span><br><span class="line">    dc.setUsername(username);</span><br><span class="line">    dc.setPassword(password);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dc.getConnection();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dc;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新增/修改/删除一条记录</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DbUtilsTest</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 新增记录</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCreate</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">// 1.创建QueryRunner核心对象</span></span><br><span class="line">    QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner(JdbcUtils.getDataSource());</span><br><span class="line">    <span class="comment">// 2.编写sql语句</span></span><br><span class="line">    String sql = <span class="string">"INSERT INTO account(name,money) VALUES(?,?)"</span>;</span><br><span class="line">    <span class="comment">// 3.执行sql</span></span><br><span class="line">    queryRunner.update(sql,<span class="string">"TEST_CREATE"</span>,<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 修改记录</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">    QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner(JdbcUtils.getDataSource());</span><br><span class="line"></span><br><span class="line">    String sql = <span class="string">"UPDATE account SET name=?,money=? WHERE id = ?"</span>;</span><br><span class="line">    queryRunner.update(sql,<span class="string">"test_Update"</span>,<span class="number">100</span>,<span class="number">2</span> );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 删除记录</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">    QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner(JdbcUtils.getDataSource());</span><br><span class="line">    String sql = <span class="string">"DELETE FROM account WHERE id = ?"</span>;</span><br><span class="line">    queryRunner.update(sql,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>查询记录</p><ul><li><p>实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Account</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Double money;</span><br><span class="line"></span><br><span class="line"><span class="comment">//省略getter/setter，toString方法</span></span><br></pre></td></tr></table></figure></li><li><p>api介绍</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">query</span><span class="params">(String sql, ResultSetHandler&lt;T&gt; rsh, Object... params)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">  Connection conn = <span class="keyword">this</span>.prepareConnection();</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.query(conn, <span class="keyword">true</span>, sql, rsh, params);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>String sql</td><td>执行的sql语句</td></tr><tr><td>ResultSetHandler&lt;T&gt; rsh</td><td>返回查询结果的映射处理</td></tr><tr><td>Object… params</td><td>设置的实际参数</td></tr></tbody></table></li><li><p>查询结果映射介绍</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询多条记录</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanListHandler</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">ResultSetHandler</span>&lt;<span class="title">List</span>&lt;<span class="title">T</span>&gt;&gt; </span></span><br><span class="line"><span class="class">  </span></span><br><span class="line"><span class="class">//查询单条记录</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">BeanHandler</span>(<span class="title">Class</span>&lt;<span class="title">T</span>&gt; <span class="title">type</span>)</span></span><br></pre></td></tr></table></figure></li><li><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据id查询</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">  QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner(JdbcUtils.getDataSource());</span><br><span class="line"></span><br><span class="line">  String sql = <span class="string">"SELECT * FROM account WHERE id = ?"</span>;</span><br><span class="line"></span><br><span class="line">  Account query = queryRunner.query(sql, <span class="keyword">new</span> BeanHandler&lt;&gt;(Account<span class="class">.<span class="keyword">class</span>),2)</span>;</span><br><span class="line"></span><br><span class="line">  System.out.println(query);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询所有</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">  QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner(JdbcUtils.getDataSource());</span><br><span class="line"></span><br><span class="line">  String sql = <span class="string">"SELECT * FROM account"</span>;</span><br><span class="line"></span><br><span class="line">  List&lt;Account&gt; query = queryRunner.query(sql, <span class="keyword">new</span> BeanListHandler&lt;&gt;(Account<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line"></span><br><span class="line">  System.out.println(query);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="1-3-Spring的xml整合DbUtils"><a href="#1-3-Spring的xml整合DbUtils" class="headerlink" title="1.3 Spring的xml整合DbUtils"></a>1.3 Spring的xml整合DbUtils</h4><ul><li><p>需求</p><p>基于Spring的xml配置实现账户的CRUD案例</p></li><li><p>编写AccountDao接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">Account <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>AccountDaoImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 声明 QueryRunner 对象</span></span><br><span class="line">  <span class="keyword">private</span> QueryRunner queryRunner;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setQueryRunner</span><span class="params">(QueryRunner queryRunner)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.queryRunner = queryRunner;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      String sql = <span class="string">"INSERT INTO account(name,money) VALUES(?,?)"</span>;</span><br><span class="line">      queryRunner.update(sql, account.getName(), account.getMoney());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">      throwables.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      String sql = <span class="string">"UPDATE account SET name=?,money=? WHERE id = ?"</span>;</span><br><span class="line">      queryRunner.update(sql, account.getName(), account.getMoney(), account.getId());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">      throwables.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      String sql = <span class="string">"DELETE FROM account WHERE id = ?"</span>;</span><br><span class="line">      queryRunner.update(sql, id);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">      throwables.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    List&lt;Account&gt; list = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      String sql = <span class="string">"SELECT * FROM account"</span>;</span><br><span class="line">      list = queryRunner.query(sql, <span class="keyword">new</span> BeanListHandler&lt;&gt;(Account<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">      throwables.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Account <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Account account = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      String sql = <span class="string">"SELECT * FROM account WHERE id = ?"</span>;</span><br><span class="line">      account = queryRunner.query(sql, <span class="keyword">new</span> BeanHandler&lt;&gt;(Account<span class="class">.<span class="keyword">class</span>), <span class="title">id</span>)</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">      throwables.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> account;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>编写AccountService接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">    <span class="function">List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">Account <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>AccountServiceImpl实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccountDao</span><span class="params">(AccountDao accountDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.accountDao = accountDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.save(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Account account)</span> </span>&#123;</span><br><span class="line">        accountDao.update(account);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        accountDao.delete(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Account&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Account <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> accountDao.findById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>编写spring的核心配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--druid连接交给ioc容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/spring_db"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--queryRunner交给ioc容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"queryRunner"</span> <span class="attr">class</span>=<span class="string">"org.apache.commons.dbutils.QueryRunner"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"ds"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--accountDao交给ioc容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.AccountDaoImpl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"queryRunner"</span> <span class="attr">ref</span>=<span class="string">"queryRunner"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--accountService交给ioc容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AccountServiceImpl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"accountDao"</span> <span class="attr">ref</span>=<span class="string">"accountDao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCreate</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    ClassPathXmlApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">    AccountService accountService = app.getBean(AccountService<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    Account account = <span class="keyword">new</span> Account();</span><br><span class="line">    account.setMoney(<span class="number">100.0</span>);</span><br><span class="line">    account.setName(<span class="string">"testCreate"</span>);</span><br><span class="line">    accountService.save(account);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    ClassPathXmlApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">    AccountService accountService = app.getBean(AccountService<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    Account account = <span class="keyword">new</span> Account();</span><br><span class="line">    account.setId(<span class="number">4</span>);</span><br><span class="line">    account.setMoney(<span class="number">100.0</span>);</span><br><span class="line">    account.setName(<span class="string">"testUpdate"</span>);</span><br><span class="line">    accountService.update(account);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">    ClassPathXmlApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">    AccountService accountService = app.getBean(AccountService<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    accountService.delete(<span class="number">3</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    ClassPathXmlApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">    AccountService accountService = app.getBean(AccountService<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;Account&gt; list = accountService.findAll();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Account account : list) &#123;</span><br><span class="line">      System.out.println(account);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    ClassPathXmlApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">    AccountService accountService = app.getBean(AccountService<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    Account byId = accountService.findById(<span class="number">2</span>);</span><br><span class="line">    System.out.println(byId);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-jdbc配置文件抽取"><a href="#1-4-jdbc配置文件抽取" class="headerlink" title="1.4 jdbc配置文件抽取"></a>1.4 jdbc配置文件抽取</h4><ul><li><p>引入context命名空间(约束)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>修改配置文件标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 加载第三方配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="二-Spring注解开发"><a href="#二-Spring注解开发" class="headerlink" title="二.Spring注解开发"></a>二.Spring注解开发</h1><p>Spring是轻代码而重配置的框架，配置比较繁重，影响开发效率，所以注解开发是一种趋势，注解代替</p><p>xml配置文件可以简化配置，提高开发效率。</p><h4 id="2-1-Spring常用注解"><a href="#2-1-Spring常用注解" class="headerlink" title="2.1 Spring常用注解"></a>2.1 Spring常用注解</h4><p>Spring常用注解主要是替代 &lt;bean&gt; 的配置</p><h5 id="2-2-1-IOC-控制反转"><a href="#2-2-1-IOC-控制反转" class="headerlink" title="2.2.1 IOC:控制反转"></a>2.2.1 IOC:控制反转</h5><table><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td>@Component</td><td>相当于 &lt;bean&gt;&lt;/bean&gt;</td></tr><tr><td>@Repository</td><td>专门处理dao层，交给ioc容器</td></tr><tr><td>@Service</td><td>专门处理service层，交给ioc容器</td></tr><tr><td>@Controller</td><td>专门处理web层，交给ioc容器</td></tr></tbody></table><ul><li><p>如果使用注解开发，必须开启注解组件扫描</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开启注解组件扫描 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>UserDaoImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @Component("userDao") value 属性相当于 id="userDao"</span></span><br><span class="line"><span class="comment">// @Repository("userDao")</span></span><br><span class="line"><span class="meta">@Repository</span> <span class="comment">// 如果我们在此处省略了value属性，那么id的默认值就是 类名首字母小写 userDaoImpl</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserDao Saved!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserDao</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-2-2-DI-依赖注入"><a href="#2-2-2-DI-依赖注入" class="headerlink" title="2.2.2 DI:依赖注入"></a>2.2.2 DI:依赖注入</h5><table><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td>@Autowired</td><td>相当于 &lt;property&gt;&lt;/property&gt; ，根据类型注入</td></tr><tr><td>@Qualifies</td><td>与@Autowired一起使用，根据id查找同类型下的实例</td></tr><tr><td>@Resource</td><td>JDK提供的注解(@Autowired+@Qualifies)</td></tr></tbody></table><ul><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//使用注解完成注入，代替set方法</span></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    userDao.save();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>IOC容器结构图</p><table><thead><tr><th>Type</th><th>id</th><th>Class</th></tr></thead><tbody><tr><td>UserDao</td><td>userDaoImpl</td><td>com.itheima.dao.impl.userDaoImpl</td></tr><tr><td>UserDao</td><td>userDaoImplPro</td><td>com.itheima.dao.impl.userDaoImplPro</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用注解完成注入，代替set方法</span></span><br><span class="line">    <span class="meta">@Autowired</span><span class="comment">//根据类型注入</span></span><br><span class="line">    <span class="meta">@Resource</span>(name = <span class="string">"userDaoImpl"</span>)<span class="comment">//JDK提供，ID+类型</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-2-3-补充"><a href="#2-2-3-补充" class="headerlink" title="2.2.3 补充"></a>2.2.3 补充</h5><table><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td>@Scope</td><td>相当于 &lt;bean scope=””&gt;&lt;/bean&gt;</td></tr><tr><td>@PostConstruct</td><td>相当于 &lt;bean init-method=””&gt;&lt;/bean&gt;</td></tr><tr><td>@PreDestroy</td><td>相当于 &lt;bean detroy-method=””&gt;&lt;/bean&gt;</td></tr><tr><td>@Value</td><td>通过${} SPEL,从配置文件中获取数据</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//使用注解完成注入，代替set方法</span></span><br><span class="line">  <span class="meta">@Autowired</span><span class="comment">//根据类型注入</span></span><br><span class="line">  <span class="meta">@Resource</span>(name = <span class="string">"userDaoImpl"</span>)<span class="comment">//JDK提供，ID+类型</span></span><br><span class="line">  <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Value</span>(<span class="string">"A"</span>)</span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.driver&#125;"</span>)</span><br><span class="line">  <span class="keyword">private</span> String driver;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    userDao.save();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@PostConstruct</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Init Run"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@PreDestroy</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destory</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"Destory Run"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2-Spring常用注解整合DbUtils"><a href="#2-2-Spring常用注解整合DbUtils" class="headerlink" title="2.2 Spring常用注解整合DbUtils"></a>2.2 Spring常用注解整合DbUtils</h4><ul><li><p>复制java模块并改名导入</p><p>IDEA new==&gt;Exist moudle==&gt;SELECT Moudle==&gt;Rename Moudle==&gt;修改pom.xml</p></li><li><p>AccountDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountDaoImpl</span> <span class="keyword">implements</span> <span class="title">AccountDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="comment">// 声明 QueryRunner 对象</span></span><br><span class="line">    <span class="keyword">private</span> QueryRunner queryRunner;</span><br></pre></td></tr></table></figure></li><li><p>AccountService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccountServiceImpl</span> <span class="keyword">implements</span> <span class="title">AccountService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AccountDao accountDao;</span><br></pre></td></tr></table></figure></li><li><p>修改spring配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 开启注解组件扫描 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 加载第三方配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--druid连接交给ioc容器,第三方类目前仅能用bean标签--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--queryRunner交给ioc容器,第三方类目前仅能用bean标签--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"queryRunner"</span> <span class="attr">class</span>=<span class="string">"org.apache.commons.dbutils.QueryRunner"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"ds"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    ClassPathXmlApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">    AccountService accountService = app.getBean(AccountService<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;Account&gt; list = accountService.findAll();</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> (Account account : list) &#123;</span><br><span class="line">        System.out.println(account);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-Spring新注解"><a href="#2-3-Spring新注解" class="headerlink" title="2.3 Spring新注解"></a>2.3 Spring新注解</h4><p>使用上面的注解还不能全部替代xml配置文件，还需要使用注解替代的配置</p><table><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td>@Configuration</td><td>相当于applicationContext.xml</td></tr><tr><td>@Bean</td><td>加载第三方类(对象)，交给ioc容器</td></tr><tr><td>@PropertySource</td><td>相当于 &lt;context:property-placeholder location=””/&gt;</td></tr><tr><td>@ComponentScan</td><td>相当于 &lt;context:component-scan base-package=””/&gt;</td></tr><tr><td>@Import</td><td>相当于 &lt;import resource=””&gt;&lt;/import&gt;</td></tr></tbody></table><h4 id="2-4-Spring纯注解整合DbUtils"><a href="#2-4-Spring纯注解整合DbUtils" class="headerlink" title="2.4 Spring纯注解整合DbUtils"></a>2.4 Spring纯注解整合DbUtils</h4><ul><li><p>创建SpringConfig配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(<span class="string">"com.itheima"</span>)</span><br><span class="line"><span class="meta">@PropertySource</span>(<span class="string">"classpath:jdbc.properties"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.driver&#125;"</span>)</span><br><span class="line">  <span class="keyword">private</span> String driverClassName;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.url&#125;"</span>)</span><br><span class="line">  <span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.username&#125;"</span>)</span><br><span class="line">  <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.password&#125;"</span>)</span><br><span class="line">  <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 自定义druid对象，交给ioc容器</span></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">&lt;bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"&gt;</span></span><br><span class="line"><span class="comment">    &lt;property name="driverClassName" value="$&#123;jdbc.driver&#125;"&gt;&lt;/property&gt;</span></span><br><span class="line"><span class="comment">    &lt;property name="url" value="$&#123;jdbc.url&#125;"&gt;&lt;/property&gt;</span></span><br><span class="line"><span class="comment">    &lt;property name="username" value="$&#123;jdbc.username&#125;"&gt;&lt;/property&gt;</span></span><br><span class="line"><span class="comment">    &lt;property name="password" value="$&#123;jdbc.password&#125;"&gt;&lt;/property&gt;</span></span><br><span class="line"><span class="comment">&lt;/bean&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Bean</span>(<span class="string">"dataSource"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> DataSource <span class="title">createDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DruidDataSource druidDataSource = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">    druidDataSource.setDriverClassName(driverClassName);</span><br><span class="line">    druidDataSource.setUrl(url);</span><br><span class="line">    druidDataSource.setUsername(username);</span><br><span class="line">    druidDataSource.setPassword(password);</span><br><span class="line">    <span class="keyword">return</span> druidDataSource;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 自定义queryRunner对象，交给ioc容器</span></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">&lt;bean id="queryRunner" class="org.apache.commons.dbutils.QueryRunner"&gt;</span></span><br><span class="line"><span class="comment">    &lt;constructor-arg name="ds" ref="dataSource"&gt;&lt;/constructor-arg&gt;</span></span><br><span class="line"><span class="comment">&lt;/bean&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">  <span class="meta">@Bean</span>(<span class="string">"queryRunner"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> QueryRunner <span class="title">createQueryRunner</span><span class="params">(@Autowired DataSource dataSource)</span> </span>&#123;</span><br><span class="line">    QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">    <span class="keyword">return</span> queryRunner;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAnnoQueryRunner</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">  AnnotationConfigApplicationContext app = <span class="keyword">new</span> AnnotationConfigApplicationContext(SpringConfig<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  AccountService accountService = app.getBean(AccountService<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  Account byId = accountService.findById(<span class="number">1</span>);</span><br><span class="line">  System.out.println(byId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-5-配置类模块化"><a href="#2-5-配置类模块化" class="headerlink" title="2.5 配置类模块化"></a>2.5 配置类模块化</h4><ul><li><p>编写DataSourceConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.driver&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String driverClassName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.url&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.username&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jdbc.password&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义druid对象，交给ioc容器</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&lt;bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"&gt;</span></span><br><span class="line"><span class="comment">    &lt;property name="driverClassName" value="$&#123;jdbc.driver&#125;"&gt;&lt;/property&gt;</span></span><br><span class="line"><span class="comment">    &lt;property name="url" value="$&#123;jdbc.url&#125;"&gt;&lt;/property&gt;</span></span><br><span class="line"><span class="comment">    &lt;property name="username" value="$&#123;jdbc.username&#125;"&gt;&lt;/property&gt;</span></span><br><span class="line"><span class="comment">    &lt;property name="password" value="$&#123;jdbc.password&#125;"&gt;&lt;/property&gt;</span></span><br><span class="line"><span class="comment">&lt;/bean&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(<span class="string">"dataSource"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">createDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DruidDataSource druidDataSource = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">        druidDataSource.setDriverClassName(driverClassName);</span><br><span class="line">        druidDataSource.setUrl(url);</span><br><span class="line">        druidDataSource.setUsername(username);</span><br><span class="line">        druidDataSource.setPassword(password);</span><br><span class="line">        <span class="keyword">return</span> druidDataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改主配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(<span class="string">"com.itheima"</span>)</span><br><span class="line"><span class="meta">@PropertySource</span>(<span class="string">"classpath:jdbc.properties"</span>)</span><br><span class="line"><span class="meta">@Import</span>(&#123;DataSourceConfig<span class="class">.<span class="keyword">class</span>&#125;)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">SpringConfig</span> </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    @Value("$&#123;jdbc.driver&#125;")</span></span><br><span class="line"><span class="comment">    private String driverClassName;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="三-Spring整合Junit"><a href="#三-Spring整合Junit" class="headerlink" title="三.Spring整合Junit"></a>三.Spring整合Junit</h1><h4 id="3-1-介绍"><a href="#3-1-介绍" class="headerlink" title="3.1 介绍"></a>3.1 介绍</h4><p>Junit是一个单元测试工具，点击run的执行测试方法时，其实底层是通过runner(运行器)来工作的， 默认的Junit是不会自动加载spring环境。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlockJUnit4ClassRunner</span> <span class="keyword">extends</span> <span class="title">ParentRunner</span>&lt;<span class="title">FrameworkMethod</span>&gt; </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> ConcurrentHashMap&lt;FrameworkMethod, Description&gt; methodDescriptions = <span class="keyword">new</span> ConcurrentHashMap&lt;FrameworkMethod, Description&gt;();</span><br></pre></td></tr></table></figure><p>如果想在Junit中直接获取spring的容器，我们需要导入spring提供的测试整合包，切换为spring的运行 器，就可以直接获取IOC容器中的对象了。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--junit单元测试--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--spring整合junit--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-使用"><a href="#3-2-使用" class="headerlink" title="3.2 使用"></a>3.2 使用</h4><ul><li><p>在进行单元测试时，指定junti的运行器为spring的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>) // 将单元测试的运行器，切换为<span class="title">spring</span>的</span></span><br></pre></td></tr></table></figure></li><li><p>指定加载配置文件或者配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ContextConfiguration</span>(classes = SpringConfig<span class="class">.<span class="keyword">class</span>) // 加载配置类的</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong># spring02</strong></p><p><strong>## 一 DbUtils</strong></p><p><strong>### 介绍</strong></p><p>- DbUtils是Apache一款用于简化jdbc操作的工具类</p><p>- 核心对象</p><p>​    - QueryRunner queryRunner = new QueryRunner(DataSource dataSource);</p><p>- 核心方法</p><p>​    - int update();</p><p>​        - DML类型</p><p>​    - T query();</p><p>​        - DQL类型</p><p><strong>### Spring的xml整合DbUtils</strong></p><p>- spring整合第三方数据源</p><p>​    - Druid</p><p>- spring整合DbUtils</p><p>​    - QueryRunner</p><p>- 加载第三方配置文件</p><p>​    - &lt;context:property-placeholder location=”classpath:jdbc.properties”/&gt;</p><p>- 使用SPEL</p><p>​    - ${xxxxxx}</p><p><strong>## 二 Spring注解开发</strong></p><p><strong>### 常用注解</strong></p><p>- IOC</p><p>​    - @Component</p><p>​    - @Controller</p><p>​    - @Service</p><p>​    - @Repository</p><p>- DI</p><p>​    - @Autowired</p><p>​        - 根据类型</p><p>​    - @Qualifier</p><p>​        - 在@Autowired基础上+id</p><p>​    - @Resource</p><p>​        - @Autowired + @Qualifier</p><p>​    - @Value</p><p>​        - 通过SPEL表达式，获取第三方配置文件的值</p><p>- 生命周期</p><p>​    - @Scope</p><p>​        - 作用范围</p><p>​            - singleton</p><p>​            - prototype</p><p>​    - @PostConstruct</p><p>​        - 初始化执行方法</p><p>​    - @PreDestroy</p><p>​        - 销毁执行方法</p><p><strong>### 新注解</strong></p><p>- @Configuration</p><p>​    - spring的配置文件</p><p>​        - applicationContext.xml</p><p>- @Bean</p><p>​    - 将第三方类，交给ioc容器</p><p>- @PropertySource</p><p>​    - 加载第三方配置文件</p><p>- @ComponentScan</p><p>​    - 开启注解组件扫描</p><p>- @Import</p><p>​    - 配置类模块化</p><p><strong>## 三 Spring整合Junit</strong></p><p><strong>### @Runwith注解替换原来的运行器</strong></p><p>- @RunWith(SpringRunner.class)</p><p><strong>### 使用@ContextConfiguration指定配置文件或配置类</strong></p><p>- @ContextConfiguration(value = {“classpath:applicationContext.xml”})</p><p>- @ContextConfiguration(classes = {SpringConfig.class}) </p><p><strong>## 作业</strong></p><p><strong>### DBUtil快速入门</strong></p><p><strong>### spring的xml版本整合DBUtils</strong></p><p><strong>### spring的常用注解版本整合DBUtils</strong></p><p><strong>### spring的纯注解版本整合DBUtils</strong></p><p><strong>### spring整合junit</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;apache推出的dao层工具类:DbUtils&lt;/li&gt;
&lt;li&gt;spring的注解开发&lt;/li&gt;
&lt;li&gt;使用注解优化Spring整合DbUtils&lt;/li&gt;
&lt;li&gt;Spring整合Junit&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（六十四）</title>
    <link href="http://yoursite.com/2020/05/28/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E5%9B%9B%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/28/就业班学习笔记（六十四）/</id>
    <published>2020-05-28T01:03:54.000Z</published>
    <updated>2020-05-28T16:00:00.089Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Spring介绍</li><li>ioc介绍</li><li>Spring快速入门</li><li>相关API</li><li>Spring配置文件</li></ul><a id="more"></a><h1 id="一-Spring概述"><a href="#一-Spring概述" class="headerlink" title="一.Spring概述"></a>一.Spring概述</h1><h4 id="1-1-Spring是什么"><a href="#1-1-Spring是什么" class="headerlink" title="1.1 Spring是什么"></a>1.1 Spring是什么</h4><p>Spring是分层的 Java SE/EE应用 full-stack(全栈) 轻量级开源框架。<br> Spring的核心是 IOC(Inverse Of Control:控制反转)和 AOP(Aspect Oriented Programming:面向切面编程)</p><p>Spring一个全栈应用框架, 提供了表现层 Spring MVC 和持久层 Spring JDBC 以及业务层事务管理等众 多应用技术</p><p>Spring还能整合开源世界众多著名的第三方框架和类库，逐渐成为使用最多的 Java EE 企业应用开源框 架</p><p>Spring官网:<a href="https://spring.io/">https://spring.io/</a></p><h4 id="1-2-Spring发展历程"><a href="#1-2-Spring发展历程" class="headerlink" title="1.2 Spring发展历程"></a>1.2 Spring发展历程</h4><ul><li><p>EJB</p><p>1997  年，IBM提出了EJB 的思想</p><p>1998  年，SUN制定开发标准规范 EJB1.0</p><p>1999  年，EJB1.1 发布</p><p>2001 年，EJB2.0 发布 </p><p>2003 年，EJB2.1 发布 </p><p>2006 年，EJB3.0 发布</p></li><li><p>Spring<br> Rod Johnson 2002年编著《Expert one on one J2EE design and development》指出了JavaEE和EJB组件框架中的存在的一些主要缺陷;提出普通java类依赖注入更为简单的解决方案。</p><p>2004年编著《Expert one-on-one J2EE Development without EJB》 阐述了JavaEE开发时不使用EJB的解决方式(Spring 雏形) 同年4月spring1.0诞生</p><p>2006年10月，发布 Spring2.0 </p><p>2009年12月，发布 Spring3.0 </p><p>2013年12月，发布 Spring4.0</p><p>2017年9月， 发布最新 Spring5.0 通用版(GA)</p></li></ul><h4 id="1-3-Spring优势"><a href="#1-3-Spring优势" class="headerlink" title="1.3 Spring优势"></a>1.3 Spring优势</h4><ul><li><p>方便解耦，简化开发<br>通过Spring提供的 IOC 容器，可以将对象间的依赖关系交由 Spring 进行控制，避免硬编码所造成的过度耦合。 </p></li><li><p>AOP编程的支持</p><p>通过Spring的AOP功能，方便进行面向切面编程，可以方便的实现对程序进行权限拦截、运行监控等功能。</p></li><li><p>声明式事务的支持</p><p>只需要通过配置就可以完成对事务的管理，而无需手动编程。</p></li><li><p>方便程序的测试</p><p>Spring对Junit4支持，可以通过注解方便的测试Spring程序。</p></li><li><p>方便集成各种优秀框架</p><p>Spring对各种优秀框架(Struts、Hibernate、Hessian、Quartz等)的支持。</p></li><li><p>降低JavaEE API的使用难度</p><p>Spring对JavaEEAPI(如JDBC、JavaMail、RPC等)进行了薄薄的封装层，使这些 API 的使用难度大为降低。</p></li></ul><h4 id="1-4-Spring体系结构"><a href="#1-4-Spring体系结构" class="headerlink" title="1.4 Spring体系结构"></a>1.4 Spring体系结构</h4><ul><li>核心容器（Core Container）</li><li>数据访问/集成（Data Access/Integration）层</li><li>Web层</li><li>AOP（Aspect Oriented Programming）模块</li><li>植入（Instrumentation）模块</li><li>消息传输（Messaging）</li><li>测试（Test）模块</li></ul><p><img src="image-20200528093016354.png" alt=""></p><h1 id="二-初识IOC"><a href="#二-初识IOC" class="headerlink" title="二.初识IOC"></a>二.初识IOC</h1><h4 id="2-1-介绍"><a href="#2-1-介绍" class="headerlink" title="2.1 介绍"></a>2.1 介绍</h4><p>控制反转(Inverse Of Control) 是一种设计思想。它的目的是指导我们设计出更加松耦合的程序。</p><blockquote><p>控制:在java中指的是对象的控制权限(创建、销毁)</p><p>反转:指的是对象控制权由原来  由开发者在类中手动控制 反转到 由Spring容器控制</p></blockquote><h4 id="2-2-环境搭建"><a href="#2-2-环境搭建" class="headerlink" title="2.2 环境搭建"></a>2.2 环境搭建</h4><p>IDEA new empty project ==&gt;设置Project Name、JDK Version、Encodings==&gt;添加maven module==&gt;导入Jar包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--dom4j--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--xpath--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-3-版本一-原始版本"><a href="#2-3-版本一-原始版本" class="headerlink" title="2.3 版本一:原始版本"></a>2.3 版本一:原始版本</h4><ul><li><p>编写UserDao接口和实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserDao Saved!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写UserService接口和实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        UserDaoImpl userDao = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line">        userDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写UserTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserTest</span></span>&#123;</span><br><span class="line">  <span class="comment">//调用Service实现保存</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUser01</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserServiceImpl userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">    userService.save();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>问题</p><ul><li>Service层和dao层代码产生耦合——松耦原则：编译期解耦，运行期可以耦合</li><li>每次调用save方法时，都会创建一个新的dao对象</li></ul></li></ul><h4 id="2-4-版本二-工厂解耦"><a href="#2-4-版本二-工厂解耦" class="headerlink" title="2.4 版本二:工厂解耦"></a>2.4 版本二:工厂解耦</h4><ul><li><p>编写beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.UserDaoImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写BeanFactory</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        Object object = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.通过类加载器读取 beans.xml</span></span><br><span class="line">            InputStream in = BeanFactory.class.getClassLoader().getResourceAsStream("beans.xml");</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.创建dom4j核心解析器对象</span></span><br><span class="line">            SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">            Document document = saxReader.read(in);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3.编写xpath表达式</span></span><br><span class="line">            String xpath = <span class="string">"//bean[@id='"</span> + id + <span class="string">"']"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 4.获取指定id的标签对象</span></span><br><span class="line">            Element element = (Element) document.selectSingleNode(xpath);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 5.获取全限定名</span></span><br><span class="line">            String className = element.attributeValue(<span class="string">"class"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 6.通过反射创建对象实例</span></span><br><span class="line">            object = Class.forName(className).newInstance();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 7.返回对象实例</span></span><br><span class="line">        <span class="keyword">return</span> object;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>修改UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//        UserDaoImpl userDao = new UserDaoImpl();</span></span><br><span class="line">        UserDao userDao = (UserDao) BeanFactory.getBean(<span class="string">"userDao"</span>);</span><br><span class="line">        userDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>问题</p><p>每次调用save方法，都会创建一个新的dao对象，工厂每次调用getBean方法都会创建一个新的对象实例，浪费内存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//        UserDaoImpl userDao = new UserDaoImpl();</span></span><br><span class="line">        UserDao userDao = (UserDao) BeanFactory.getBean(<span class="string">"userDao"</span>);</span><br><span class="line">        UserDao userDao1 = (UserDao) BeanFactory.getBean(<span class="string">"userDao"</span>);</span><br><span class="line">        userDao.save();</span><br><span class="line">        userDao1.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">com.itheima.dao.impl.UserDaoImpl@516be40f</span></span><br><span class="line"><span class="comment">com.itheima.dao.impl.UserDaoImpl@3c0a50da</span></span><br><span class="line"><span class="comment">UserDao Saved!</span></span><br><span class="line"><span class="comment">UserDao Saved!</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-5-版本三-工厂优化"><a href="#2-5-版本三-工厂优化" class="headerlink" title="2.5 版本三:工厂优化"></a>2.5 版本三:工厂优化</h4><ul><li><p>修改BeanFactory</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明存储对象的容器(map集合)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, Object&gt; ioc = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态代码块，初始化ioc容器</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        String id = <span class="keyword">null</span>;</span><br><span class="line">        String className = <span class="keyword">null</span>;</span><br><span class="line">        Object object = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.通过类加载器读取 beans.xml</span></span><br><span class="line">            InputStream in = BeanFactory.class.getClassLoader().getResourceAsStream("beans.xml");</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.创建dom4j核心解析器对象</span></span><br><span class="line">            SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">            Document document = saxReader.read(in);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3.编写xpath表达式</span></span><br><span class="line">            String xpath = <span class="string">"//bean"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 4.获取所有bean标签对象</span></span><br><span class="line">            List&lt;Element&gt; list = document.selectNodes(xpath);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 5.遍历集合，创建对象实例，设置到ioc容器中</span></span><br><span class="line">            <span class="keyword">for</span> (Element element : list) &#123;</span><br><span class="line">                id = element.attributeValue(<span class="string">"id"</span>);</span><br><span class="line">                className = element.attributeValue(<span class="string">"class"</span>);</span><br><span class="line">                object = Class.forName(className).newInstance();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 设置到map集合</span></span><br><span class="line">                ioc.put(id, object);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (</span><br><span class="line">                Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 7.从ioc容器获取指定id的对象实例</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ioc.get(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">com.itheima.dao.impl.UserDaoImpl@4ba2ca36</span></span><br><span class="line"><span class="comment">com.itheima.dao.impl.UserDaoImpl@4ba2ca36</span></span><br><span class="line"><span class="comment">UserDao Saved!</span></span><br><span class="line"><span class="comment">UserDao Saved!</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-6-小结"><a href="#2-6-小结" class="headerlink" title="2.6 小结"></a>2.6 小结</h4><p>对象的创建由原来的 使用 new关键字 在类中主动创建 变成了 从工厂中获取, 而对象的创建过程由工厂 内部来实现, 而这个工厂就是 Spring的IOC容器。</p><p>也就是以后我们的对象不再自己创建,而是直接向 Spring要, 这种思想就是IOC</p><blockquote><p>目的：松耦合</p></blockquote><h1 id="三-Spring快速入门"><a href="#三-Spring快速入门" class="headerlink" title="三.Spring快速入门"></a>三.Spring快速入门</h1><h4 id="3-1-需求"><a href="#3-1-需求" class="headerlink" title="3.1 需求"></a>3.1 需求</h4><table><thead><tr><th>UserServiceImpl</th><th></th><th>UserDaoImpl</th></tr></thead><tbody><tr><td>UserDao userDao = Spring客户端.getBean(id标识)</td><td></td><td>CURD方法</td></tr><tr><td>⬆⬇Spring框架</td><td></td><td>⬆⬇</td></tr><tr><td>读取xml配置文件<br/>根据id标识获得Bean权限定名<br/>通过反射创建Bean对象<br/>返回对象</td><td>➡<br/>⬅</td><td>xml配置文件<br/>id标识=com.itheima.dao.UserDaoImpl</td></tr></tbody></table><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li><p>创建maven的java模块</p><p>IDEA new moudle==&gt;MVN==&gt;导入依赖管理Spring、Junit坐标，JDK1.8插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Spring_online_Day01_ioc_xml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring的核心坐标--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写UserDao接口和实现类(同上)</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserDao Saved!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建spring的核心配置文件，导入约束</p><blockquote><p>官方推荐名称:applicationContext.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>写bean标签(id、class)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    将userDao的对象创建权交给ioc容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.UserDaoImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试(模拟service层)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">// spring的快速入门</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 1.通过spring的api读取配置文件</span></span><br><span class="line">        ClassPathXmlApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">        <span class="comment">// 2.获取指定id的对象实例</span></span><br><span class="line">        UserDao userDao = (UserDao) app.getBean(<span class="string">"userDao"</span>);</span><br><span class="line">        userDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-Spring相关API"><a href="#四-Spring相关API" class="headerlink" title="四.Spring相关API"></a>四.Spring相关API</h1><h4 id="4-1-二个接口-创建的对象均为单例"><a href="#4-1-二个接口-创建的对象均为单例" class="headerlink" title="4.1 二个接口(创建的对象均为单例)"></a>4.1 二个接口(创建的对象均为单例)</h4><ul><li><p>BeanFactory</p><ul><li><p>介绍</p><p>IOC容器的顶级接口，定义了IOC的最基础的功能, 但功能比较简单,一般面向Spring自身使用</p></li><li><p>特点(懒汉设计)</p><p>在第一次使用到某个Bean时(调用getBean())，才对该Bean进行加载实例化[用的时候再创建] </p></li></ul></li><li><p>ApplicationContext</p><ul><li><p>介绍</p><p>这是在BeanFactory基础上衍生出的接口,它扩展了BeanFactory的功能,一般面向程序员使用</p></li><li><p>特点(恶汉设计)</p><p>在容器启动时，一次性创建并加载了所有的Bean [初始化的时候全创建好] </p></li></ul></li></ul><h4 id="4-2-三个实现类"><a href="#4-2-三个实现类" class="headerlink" title="4.2 三个实现类"></a>4.2 三个实现类</h4><ul><li><p>ClassPathXmlApplicationContext</p><ul><li><blockquote><p>功能：读取类路径(classpath)下的xml配置文件</p></blockquote></li></ul></li><li><p>FileSystemXmlApplicationContext</p><ul><li><blockquote><p>功能：读取本地磁盘下的xml配置文件</p></blockquote></li></ul></li><li><p>AnnotationConfigApplicationContext</p><ul><li><blockquote><p>功能：读取java配置类加载配置</p></blockquote></li></ul></li></ul><h4 id="4-3-一个方法"><a href="#4-3-一个方法" class="headerlink" title="4.3 一个方法"></a>4.3 一个方法</h4><ul><li><p>public Object getBean(String name) throws BeansException;</p><ul><li><blockquote><p>功能：通过指定id获取对象的实例，需要手动强转</p></blockquote></li></ul></li><li><p>public &lt;T&gt; T getBean(Class&lt;T&gt; requiredType);</p><ul><li><blockquote><p>功能：通过指定类型获取对象的实例，不需要强转</p></blockquote></li></ul></li><li><p>public &lt;T&gt; T getBean(String name, Class&lt;T&gt; requiredType);</p><ul><li><blockquote><p>功能：通过指定id和类型获取对象的实例</p></blockquote></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// getBean方法介绍</span></span><br><span class="line"><span class="comment">// 方式一: 通过指定id获取对象的实例，需要手动强转</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUserByID</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">  <span class="comment">// 1.通过spring的api读取配置文件</span></span><br><span class="line">  ApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">  <span class="comment">// 2.获取指定id的对象实例</span></span><br><span class="line">  UserDao userDao = (UserDao) app.getBean(<span class="string">"userDao"</span>);</span><br><span class="line">  userDao.save();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// getBean方法介绍</span></span><br><span class="line"><span class="comment">// 方式二:通过指定(接口)类型获取对象的实例，不需要强转</span></span><br><span class="line"><span class="comment">//缺点:如果同一个接口类型下有多个对象实例，会报错</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUserByInstance</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">  <span class="comment">// 1.通过spring的api读取配置文件</span></span><br><span class="line">  ApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line"></span><br><span class="line">  UserDao userDao = app.getBean(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  userDao.save();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// getBean方法介绍</span></span><br><span class="line"><span class="comment">// 方式三:通过指定id和类型获取对象的实例</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUserBySpecifyIdOfType</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">  <span class="comment">// 1.通过spring的api读取配置文件</span></span><br><span class="line">  ApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line"></span><br><span class="line">  UserDao userDao = app.getBean(<span class="string">"userDao"</span>, UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  userDao.save();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-4-知识小结"><a href="#4-4-知识小结" class="headerlink" title="4.4 知识小结"></a>4.4 知识小结</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext app = <span class="keyword">new</span> ClasspathXmlApplicationContext(<span class="string">"xml文件"</span>); </span><br><span class="line">app.getBean(<span class="string">"id"</span>);</span><br><span class="line">app.getBean(Class);</span><br></pre></td></tr></table></figure><h1 id="五-Spring配置文件"><a href="#五-Spring配置文件" class="headerlink" title="五.Spring配置文件"></a>五.Spring配置文件</h1><h4 id="5-1-Bean标签基本配置"><a href="#5-1-Bean标签基本配置" class="headerlink" title="5.1 Bean标签基本配置"></a>5.1 Bean标签基本配置</h4><ul><li><p>基本配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.dao.impl.UserDaoImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>基本属性</th><th></th></tr></thead><tbody><tr><td>id</td><td>在ioc容器的唯一标识</td></tr><tr><td>class</td><td>创建对象实例的全限定名</td></tr></tbody></table></li></ul><ul><li><p>作用范围</p><table><thead><tr><th>scope属性:声明此对象的作用范围</th><th>何时创建</th><th>对象运行</th><th>何时销毁</th></tr></thead><tbody><tr><td>singleton(单例对象)</td><td>ioc容器初始化时，创建对象</td><td>ioc容器在,对象在</td><td>ioc容器关闭时，销毁对象</td></tr><tr><td>prototype(多例对象)</td><td>在调用getBean()方法时，创建</td><td>一直使用就一直活着</td><td>当对象不再使用后，根据JVM GC机制垃圾回收</td></tr></tbody></table></li><li><p>生命周期</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    将userDao的对象创建权交给ioc容器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.UserDaoImpl"</span> <span class="attr">scope</span>=<span class="string">"singleton"</span> <span class="attr">init-method</span>=<span class="string">"MethodInit"</span> <span class="attr">destroy-method</span>=<span class="string">"MethodDestory"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserDao Saved!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//当创建时，init-method="MethodInit"</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MethodInit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Method Init Now"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//当销毁时，destroy-method="MethodDestory"</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MethodDestory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Method Die Now"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUserDestory</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">  <span class="comment">// 1.通过spring的api读取配置文件</span></span><br><span class="line">  ApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">  <span class="comment">// 2.获取指定id的对象实例</span></span><br><span class="line">  UserDao userDao = (UserDao) app.getBean(<span class="string">"userDao"</span>);</span><br><span class="line">  UserDao userDao1 = (UserDao) app.getBean(<span class="string">"userDao"</span>);</span><br><span class="line"></span><br><span class="line">  System.out.println(userDao);</span><br><span class="line">  System.out.println(userDao1);</span><br><span class="line"></span><br><span class="line">  ((ClassPathXmlApplicationContext) app).close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Method Init Now</span></span><br><span class="line"><span class="comment">com.itheima.dao.impl.UserDaoImpl@78e67e0a</span></span><br><span class="line"><span class="comment">com.itheima.dao.impl.UserDaoImpl@78e67e0a</span></span><br><span class="line"><span class="comment">Method Die Now</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="5-2-spring创建对象实例三种方式"><a href="#5-2-spring创建对象实例三种方式" class="headerlink" title="5.2 spring创建对象实例三种方式"></a>5.2 spring创建对象实例三种方式</h4><ul><li><p>无参构造方法实例化</p><blockquote><p>在企业开发时，所有的类必须提供无参构造方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UserDaoImpl</span><span class="params">(String a)</span></span></span><br><span class="line"><span class="function">  <span class="comment">//若未提供无参构造，则xml中class="com.itheima.dao.impl.UserDaoImpl" 会报错</span></span></span><br></pre></td></tr></table></figure></li><li><p>工厂静态方法实例化</p><blockquote><p>依赖的jar包中有个A类，A类中有个静态方法m1，m1方法的返回值是一个B对象。如果我们频繁 使用B对象，此时我们可以将B对象的创建权交给spring的IOC容器，以后我们在使用B对象时，无 需调用A类中的m1方法，直接从IOC容器获得。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//工厂静态方法实例化对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticFactoryBean</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> UserDao <span class="title">createUserDao</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 传统方式，自己通过工厂获取对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        UserDao userDao = StaticFactoryBean.createUserDao();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--工厂静态方法实例化对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.factory.StaticFactoryBean"</span> <span class="attr">factory-method</span>=<span class="string">"createUserDao"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>工厂普通方法实例化</p><blockquote><p>依赖的jar包中有个A类，A类中有个普通方法m1，m1方法的返回值是一个B对象。如果我们频繁 使用B对象，此时我们可以将B对象的创建权交给spring的IOC容器，以后我们在使用B对象时，无 需调用A类中的m1方法，直接从IOC容器获得。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//工厂普通方法实例化对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicFactoryBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> UserDao <span class="title">createUserDao</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 传统方式，自己通过工厂获取对象</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 1.创建工厂对象</span></span><br><span class="line">    DynamicFactoryBean dynamicFactoryBean = <span class="keyword">new</span> DynamicFactoryBean();</span><br><span class="line">    <span class="comment">// 2.创建UserDao对象</span></span><br><span class="line">    UserDao userDao = dynamicFactoryBean.createUserDao();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--工厂普通方法实例化对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dynamicFactoryBean"</span> <span class="attr">class</span>=<span class="string">"com.itheima.factory.DynamicFactoryBean"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">factory-bean</span>=<span class="string">"dynamicFactoryBean"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="5-3-Bean依赖注入"><a href="#5-3-Bean依赖注入" class="headerlink" title="5.3 Bean依赖注入"></a>5.3 Bean依赖注入</h4><h5 id="5-3-1-概述"><a href="#5-3-1-概述" class="headerlink" title="5.3.1 概述"></a>5.3.1 概述</h5><p>依赖注入(Dependency Injection, DI) 它是 Spring 框架核心 IOC 的具体实现 </p><p>其实就是给对象中的属性赋值的过程，通过spring完成依赖注入</p><table><thead><tr><th>UserServiceImpl</th><th>➡依赖</th><th>UserDaoImpl</th></tr></thead><tbody><tr><td>private UserDao userDao<br/>userDao.save()</td><td></td><td></td></tr><tr><td>⬆service层需要调用dao层对象的实例，就要从Spring的ioc容器注入此实例， <br/>⬆这个过程称为依赖注入</td><td></td><td></td></tr><tr><td><b>Spring的配置文件</td><td></td><td></td></tr><tr><td>&lt;bean id=”userDao” class=”xxx”&gt;<br/>&lt;bean id=”userService” class=”xxx”&gt;</td><td></td><td></td></tr></tbody></table><h5 id="5-3-2-环境搭建"><a href="#5-3-2-环境搭建" class="headerlink" title="5.3.2 环境搭建"></a>5.3.2 环境搭建</h5><p>IDEA new moudle==&gt;MVN==&gt;导入依赖管理Spring、Junit坐标，JDK1.8插件==&gt;复制UserDao,UserService==&gt;编写spring的核心配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring的核心坐标--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    将userDao的对象创建权交给ioc容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.UserDaoImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    将userService交给ioc容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.UserServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-4-Bean依赖注入方式"><a href="#5-4-Bean依赖注入方式" class="headerlink" title="5.4 Bean依赖注入方式"></a><h4 id="1"/>5.4 Bean依赖注入方式</h4><ul><li><p>构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserServiceImpl</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">构造方法注入: &lt;constructor-arg&gt; 子标签</span></span><br><span class="line"><span class="comment">版本一:</span></span><br><span class="line"><span class="comment">name:构造方法参数名称 </span></span><br><span class="line"><span class="comment">value:简单数据类型(String、int、double...)</span></span><br><span class="line"><span class="comment">ref:引用数据类型(从ioc容器中获取的对象) </span></span><br><span class="line"><span class="comment">版本二:</span></span><br><span class="line"><span class="comment">index:构造方法参数索引 </span></span><br><span class="line"><span class="comment">type:该索引对应的java类型(全限定名) </span></span><br><span class="line"><span class="comment">value:简单数据类型(String、int、double...) </span></span><br><span class="line"><span class="comment">ref:引用数据类型(从ioc容器中获取的对象)</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    将userService交给ioc容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.UserServiceImpl"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"userDao"</span> <span class="attr">ref</span>=<span class="string">"userDao"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>set方法(推荐使用 )</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public UserServiceImpl(UserDao userDao) &#123;</span></span><br><span class="line"><span class="comment">//        this.userDao = userDao;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserDao</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    将userDao的对象创建权交给ioc容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.UserDaoImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    set方法注入:&lt;property&gt; 子标签</span></span><br><span class="line"><span class="comment">        name:set方法的属性名 setUserDao() -&gt; UserDao -&gt; userDao</span></span><br><span class="line"><span class="comment">        value:简单数据类型(String、int、double...)</span></span><br><span class="line"><span class="comment">        ref:引用数据类型(从ioc容器中获取的对象)</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.UserServiceImpl"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"userDao"</span> <span class="attr">ref</span>=<span class="string">"userDao"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>P命名空间注入</p><blockquote><p>P命名空间注入底层(本质)使用的也是set方法注入，只是在上着的基础上进行简化</p></blockquote><ul><li><p>导入P命名空间约束</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用P命名空间注完成注入(单一属性来简洁，但是若变量多，则不如第二种规范)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.UserServiceImpl"</span> <span class="attr">p:userDao-ref</span>=<span class="string">"userDao"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="5-5-Bean依赖注入的数据类型"><a href="#5-5-Bean依赖注入的数据类型" class="headerlink" title="5.5 Bean依赖注入的数据类型"></a>5.5 Bean依赖注入的数据类型</h4><ul><li><p>简单数据类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注入简单数据类型 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user"</span> <span class="attr">class</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"jack"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>引用数据类型</p><p>参考<a href="#1">5.4 Bean依赖注入方式</a></p></li><li><p>集合数据类型</p><ul><li><p>单列集合(list、set、array)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; list;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Object&gt; set;</span><br><span class="line">    <span class="keyword">private</span> Object[] array;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setList</span><span class="params">(List&lt;Object&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSet</span><span class="params">(Set&lt;Object&gt; set)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.set = set;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setArray</span><span class="params">(Object[] array)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.array = array;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserDao Saved!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    di 注入单列集合类型</span></span><br><span class="line"><span class="comment">        需要在 &lt;property&gt;标签中</span></span><br><span class="line"><span class="comment">    list集合 使用子标签 &lt;list&gt;</span></span><br><span class="line"><span class="comment">            &lt;value&gt; 简单数据类型</span></span><br><span class="line"><span class="comment">            &lt;ref&gt; 引用数据类型(对象在ioc容器中)</span></span><br><span class="line"><span class="comment">    set集合 使用子标签 &lt;set&gt;</span></span><br><span class="line"><span class="comment">        &lt;value&gt; 简单数据类型</span></span><br><span class="line"><span class="comment">        &lt;ref&gt; 引用数据类型(对象在ioc容器中)</span></span><br><span class="line"><span class="comment">    array数组 使用子标签&lt;array&gt;</span></span><br><span class="line"><span class="comment">        &lt;value&gt; 简单数据类型</span></span><br><span class="line"><span class="comment">        &lt;ref&gt; 引用数据类型(对象在ioc容器中)</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.UserDaoImpl"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>A<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>B<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"set"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>C<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>D<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"array"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>E<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>F<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>双列集合(map、properties)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.dao.impl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.dao.UserDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    private List&lt;Object&gt; list;</span></span><br><span class="line"><span class="comment">//    private Set&lt;Object&gt; set;</span></span><br><span class="line"><span class="comment">//    private Object[] array;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    public void setList(List&lt;Object&gt; list) &#123;</span></span><br><span class="line"><span class="comment">//        this.list = list;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    public void setSet(Set&lt;Object&gt; set) &#123;</span></span><br><span class="line"><span class="comment">//        this.set = set;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    public void setArray(Object[] array) &#123;</span></span><br><span class="line"><span class="comment">//        this.array = array;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String ,Object&gt; map;</span><br><span class="line">    <span class="keyword">private</span> Properties properties;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMap</span><span class="params">(Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.map = map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProperties</span><span class="params">(Properties properties)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.properties = properties;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserDao Saved!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">di 注入双列集合类型</span></span><br><span class="line"><span class="comment">    需要在 &lt;property&gt;标签中</span></span><br><span class="line"><span class="comment">map集合 使用子标签&lt;map&gt;</span></span><br><span class="line"><span class="comment">    &lt;entry key="" value="简单数据类型" | value-ref="引用数据类型(对象ioc中)" &gt;&lt;/entry&gt;</span></span><br><span class="line"><span class="comment">properties集合 使用子标签 &lt;props&gt;</span></span><br><span class="line"><span class="comment">     &lt;prop key="" &gt;value&lt;/prop&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.UserDaoImpl"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"k1"</span> <span class="attr">value</span>=<span class="string">"v1"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"k2"</span> <span class="attr">value</span>=<span class="string">"v2"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"u1"</span> <span class="attr">value-ref</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"properties"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"k1"</span>&gt;</span>v1<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"k3"</span>&gt;</span>v2<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"k3"</span>&gt;</span>v3<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="5-6-配置文件模块化"><a href="#5-6-配置文件模块化" class="headerlink" title="5.6 配置文件模块化"></a>5.6 配置文件模块化</h4><p>实际开发中，Spring的配置内容非常多，这就导致Spring配置很繁杂且体积很大，所以，可以将部分配置拆解到其他配置文件中，也就是所谓的配置文件模块化。</p><ul><li><p>并列加载</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//并列加载</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testParallels</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    ApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext_dao.xml"</span>,<span class="string">"applicationContext_service.xml"</span>);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>主从配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tree   </span><br><span class="line">.</span><br><span class="line">├── applicationContext-dao.xml</span><br><span class="line">├── applicationContext-service.xml</span><br><span class="line">└── applicationContext.xml</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- applicationContext.xml--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:applicationContext-dao.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">import</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:applicationContext-service.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">import</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>注意：</strong>不论是否同一个xml，都不得出现相同id，否则触发报错或覆盖问题</p><h4 id="5-7-知识小结"><a href="#5-7-知识小结" class="headerlink" title="5.7 知识小结"></a>5.7 知识小结</h4><ul><li><p>&lt;bean&gt;标签:创建对象并放到spring的IOC容器 </p><p>id属性:在容器中Bean实例的唯一标识，不允许重复 </p><p>class属性:要实例化的Bean的全限定名 </p><p>scope属性:Bean的作用范围，常用是Singleton(默认)和prototype</p></li><li><p>&lt;constructor-arg&gt;标签:属性注入 </p><p>name属性:属性名称</p><p>value属性:注入的简单属性值 </p><p>ref属性:注入的对象引用值</p></li><li><p>&lt;property&gt;标签:属性注入 </p><p>name属性:属性名称</p><p>value属性:注入的简单属性值 </p><p>ref属性:注入的对象引用值 </p></li></ul><p>&lt;list&gt;<br>&lt;set&gt;<br>&lt;array&gt;<br>&lt;map&gt;<br>&lt;props&gt;</p><p>&lt;import&gt;标签:导入其他的Spring的分文件</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong># spring01</strong></p><p><strong>## 一 Spring概述</strong></p><p><strong>### spring是一款 full-stack 轻量级开源框架</strong></p><p>- IOC</p><p>​    - 控制反转</p><p>- AOP</p><p>​    - 面向切面编程</p><p><strong>## 二 初识IOC</strong></p><p><strong>### 控制反转（Inverse Of Control）是一种设计思想。它的目的是指导我们设计出更加松耦合的程序。</strong></p><p><strong>### 自定义IOC容器</strong> </p><p>- BeanFactory</p><p><strong>## 三 Spring快速入门</strong></p><p><strong>### 1. 创建java项目，导入spring开发基本坐标</strong></p><p><strong>### 2. 编写Dao接口和实现类</strong></p><p><strong>### 3. 创建spring核心配置文件</strong></p><p><strong>### 4. 在spring配置文件中配置 UserDaoImpl</strong></p><p><strong>### 5. 使用spring相关API获得Bean实例</strong></p><p><strong>## 四 Spring相关API</strong></p><p><strong>### BeanFactory</strong></p><p>- 是 IOC 容器的核心接口，它定义了IOC的基本功能。</p><p><strong>### ApplicationContext</strong></p><p>- 代表应用上下文对象，可以获得spring中IOC容器的Bean对象。</p><p>- 常用实现类</p><p>​    - 1. ClassPathXmlApplicationContext </p><p>​    - 2. FileSystemXmlApplicationContext </p><p>​    - 3. AnnotationConfigApplicationContext</p><p>- 常用方法</p><p>​    - 1. Object getBean(String name);</p><p>​    - 2. &lt;T&gt; T getBean(Class&lt;T&gt; requiredType);</p><p>​    - 3. &lt;T&gt; T getBean(String name,Class&lt;T&gt; requiredType);</p><p><strong>## 五 Spring配置文件</strong></p><p><strong>### 5.1 Bean标签基本配置</strong></p><p>- id：Bean实例在Spring容器中的唯一标识</p><p>- class：Bean的全限定名</p><p><strong>### 5.2 Bean标签范围配置</strong></p><p>- scope</p><p>​    - singleton</p><p>​    - prototype</p><p><strong>### 5.3 Bean生命周期配置</strong></p><p>- init-method</p><p>- destroy-method</p><p><strong>### 5.4 Bean实例化三种方式</strong></p><ul><li><p>无参构造方法</p></li><li><p>工厂静态方法</p></li><li><p>工厂实例方法</p></li></ul><p><strong>### 5.5 Bean依赖注入概述</strong></p><ul><li>通过框架把持久层对象传入业务层，而不用我们自己去获取。</li></ul><p><strong>### 5.6 Bean依赖注入方式</strong></p><ul><li>构造方法</li></ul><ul><li>&lt;constructor-arg name=”userDao” ref=”userDao”/&gt;</li></ul><ul><li>set方法</li></ul><ul><li>&lt;property name=”userDao” ref=”userDao”/&gt;</li></ul><ul><li>p命名空间</li></ul><ul><li>&lt;bean id=”userService” class=”com.itheima.service.impl.UserServiceImpl”   p:userDao-ref=”userDao”/&gt;</li></ul><p><strong>### 5.7 Bean依赖注入的数据类型</strong></p><p>- 简单数据类型</p><p>- 引用数据类型</p><p>- 集合数据类型</p><p>​    - list</p><p>​    - set</p><p>​    - array</p><p>​    - map</p><p>​    - properties</p><p><strong>### 5.8 配置文件模块化</strong></p><p>- 主从配置</p><ul><li>&lt;import resource=”applicationContext-xxx.xml”/&gt;</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Spring介绍&lt;/li&gt;
&lt;li&gt;ioc介绍&lt;/li&gt;
&lt;li&gt;Spring快速入门&lt;/li&gt;
&lt;li&gt;相关API&lt;/li&gt;
&lt;li&gt;Spring配置文件&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（六十三）</title>
    <link href="http://yoursite.com/2020/05/27/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E4%B8%89%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/27/就业班学习笔记（六十三）/</id>
    <published>2020-05-27T14:58:52.000Z</published>
    <updated>2020-05-29T03:41:43.776Z</updated>
    
    <content type="html"><![CDATA[<ul><li>jdk</li><li>tomcat    </li><li>mysql</li><li>redis</li><li>nginx</li><li>反向代理+负载均衡</li></ul><a id="more"></a><h1 id="一-软件部署的设计"><a href="#一-软件部署的设计" class="headerlink" title="一 软件部署的设计"></a>一 软件部署的设计</h1><table><thead><tr><th>User</th><th></th><th>Server</th><th></th><th></th><th></th><th>环境</th></tr></thead><tbody><tr><td></td><td>➡</td><td></td><td></td><td>Tomcat1</td><td></td><td>JDK</td></tr><tr><td></td><td></td><td>Nginx</td><td>➡</td><td></td><td></td><td>MySQL</td></tr><tr><td></td><td></td><td>反向代理</td><td></td><td>Tomcat2</td><td></td><td>Redis</td></tr><tr><td></td><td></td><td>负载均衡</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td>端口：80</td><td></td><td></td><td></td><td></td></tr></tbody></table><h1 id="二-软件安装"><a href="#二-软件安装" class="headerlink" title="二 软件安装"></a>二 软件安装</h1><h2 id="2-1-软件安装介绍"><a href="#2-1-软件安装介绍" class="headerlink" title="2.1 软件安装介绍"></a>2.1 软件安装介绍</h2><h3 id="2-1-1-常见的安装方式"><a href="#2-1-1-常见的安装方式" class="headerlink" title="2.1.1 常见的安装方式"></a>2.1.1 常见的安装方式</h3><h4 id="1）-二进制发布包（绿色免安装）"><a href="#1）-二进制发布包（绿色免安装）" class="headerlink" title="1） 二进制发布包（绿色免安装）"></a>1） 二进制发布包（绿色免安装）</h4><p>软件已经针对具体平台编译打包发布开发人员拿到安装包之后只要解压，修改配置即可使用。</p><h4 id="2）RPM安装包"><a href="#2）RPM安装包" class="headerlink" title="2）RPM安装包"></a>2）RPM安装包</h4><p>​    软件已经按照redhat的包管理工具规范RPM进行打包发布，需要获取到相应的软件RPM发布包，然后用RPM命令进行安装。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>rpm命令安装</span><br><span class="line"><span class="code">语法:  rpm 参数  安装包</span></span><br><span class="line"><span class="code">参数:</span></span><br><span class="line"><span class="code">        -v 显示指令执行过程</span></span><br><span class="line"><span class="code">        -h 表示显示进度</span></span><br><span class="line"><span class="code">        -q 查询包是否已经安装</span></span><br><span class="line"><span class="code">        -a 查看所有安装的软件</span></span><br><span class="line"><span class="code">        -i 安装软件</span></span><br><span class="line"><span class="code">        -U 更新升级</span></span><br><span class="line"><span class="code">        -e 卸载软件</span></span><br><span class="line"><span class="code">        --nodeps 不验证软件的相互关联性 </span></span><br><span class="line"><span class="bullet">* </span>常用命令:</span><br><span class="line"><span class="code">    安装：rpm  -ivh  rpm文件</span></span><br><span class="line"><span class="code">    升级：rpm  -Uvh  rpm文件</span></span><br><span class="line"><span class="code">    卸载：rpm  -e --nodeps 软件名</span></span><br><span class="line"><span class="code">    查看所有安装的软件：rpm -qa | grep 具体名</span></span><br></pre></td></tr></table></figure><h4 id="3）YUM在线安装"><a href="#3）YUM在线安装" class="headerlink" title="3）YUM在线安装"></a>3）YUM在线安装</h4><p>​    软件已经以RPM规范打包，但发布在了网络上的一些服务器上，可用yum在线安装服务器上的rpm软件，并且会自动解决软件安装过程中的库依赖问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install 软件名</span><br><span class="line">yum localinstall rpm包  使用yum安装本地rpm包[此过程会自动解决依赖]</span><br></pre></td></tr></table></figure><h4 id="4）源码包"><a href="#4）源码包" class="headerlink" title="4）源码包"></a>4）源码包</h4><p>此种安装包软件以源码工程的形式发布,需要程序员自行编译安装</p><blockquote><p>它一般包含四个步骤:<br>        解压——&gt;配置——-&gt;编译——–&gt;安装</p></blockquote><h3 id="2-1-2-上传与下载工具"><a href="#2-1-2-上传与下载工具" class="headerlink" title="2.1.2 上传与下载工具"></a>2.1.2 上传与下载工具</h3><p><strong>FTP（File Transfer Protocol，文件传输协议）</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>sftp（实现了ssh加密）</span><br><span class="line"><span class="code">使用alt + p 组合键打开sftp窗口</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">get:  将远程主机（linux）中文件下载到本地主机（windows）</span></span><br><span class="line"><span class="code">        put:  将本地主机（windows）中文件上传到远程主机（linux）</span></span><br><span class="line"><span class="code">        quit: 断开FTP连接</span></span><br><span class="line"><span class="code">pwd:  查询linux主机所在目录</span></span><br><span class="line"><span class="code">        lpwd: 查询windows主机所在目录</span></span><br><span class="line"><span class="code">        ls:   查询连接到当前linux主机所在目录有哪些文件</span></span><br><span class="line"><span class="code">        lls:  查询当前本地上传目录有哪些文件</span></span><br><span class="line"><span class="code">        lcd:  改变本地上传目录的路径</span></span><br><span class="line"><span class="code">        cd:   改变远程上传目录      </span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>lrzsz</span><br><span class="line"><span class="code">        我们可以使用yum安装方式安装： yum install lrzsz</span></span><br><span class="line"><span class="code">    注意：必须有网络</span></span><br><span class="line"><span class="code">    rz 上传</span></span><br><span class="line"><span class="code">    sz 下载</span></span><br></pre></td></tr></table></figure><h2 id="2-2-JDK安装"><a href="#2-2-JDK安装" class="headerlink" title="2.2 JDK安装"></a>2.2 JDK安装</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>查看当前Linux系统是否已经安装java</span><br><span class="line"><span class="code">rpm -qa | grep -i java</span></span><br><span class="line"><span class="code">rpm -e --nodeps xxxxxx</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>解压已上传的JDK压缩包，并移动到/usr/local目录下</span><br><span class="line"><span class="code">tar -zxvf /root/jdk-8u201-linux-x64.tar.gz -C/usr/local/</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>测试jdk</span><br><span class="line"><span class="code">/usr/local/jdk1.8.0_201/bin/java -version</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4. </span>配置环境变量</span><br><span class="line"><span class="code">vim /etc/profile</span></span><br><span class="line"><span class="code">   G 跳转到最后一行</span></span><br><span class="line"><span class="code">   i 进入插入模式</span></span><br><span class="line"><span class="code">        export JAVA_HOME=/usr/local/jdk1.8.0_201</span></span><br><span class="line"><span class="code">        export PATH=$PATH:$JAVA_HOME/bin</span></span><br><span class="line"><span class="code">   esc 进入命令行模式</span></span><br><span class="line"><span class="code">   :wq! 保存</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5. </span>更新环境变量</span><br><span class="line"><span class="code">source /etc/profile</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6. </span>测试</span><br><span class="line"><span class="code">java -version</span></span><br></pre></td></tr></table></figure><h2 id="2-3-Tomcat安装"><a href="#2-3-Tomcat安装" class="headerlink" title="2.3 Tomcat安装"></a>2.3 Tomcat安装</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>解压已上传的Tomcat压缩包，到/user/local目录下</span><br><span class="line"><span class="code">tar -zxvf /root/apache-tomcat-8.5.27.tar.gz -C /root</span></span><br><span class="line"><span class="code">cp -r /root/apache-tomcat-8.5.27 /usr/local/tomcat1</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>启动tomcat</span><br><span class="line"><span class="code">/usr/local/tomcat1/bin/startup.sh </span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>动态查看日志</span><br><span class="line"><span class="code">tail -f /usr/local/tomcat1/logs/catalina.out </span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4. </span>防火墙放行端口</span><br><span class="line"><span class="code">firewall-cmd --zone=public --add-port=8080/tcp --permanent</span></span><br><span class="line"><span class="code">firewall-cmd --reload</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5. </span>关闭tomcat</span><br><span class="line"><span class="code">/usr/local/tomcat1/bin/shutdown.sh</span></span><br></pre></td></tr></table></figure><h2 id="2-4-Nginx安装"><a href="#2-4-Nginx安装" class="headerlink" title="2.4 Nginx安装"></a>2.4 Nginx安装</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>安装必须库</span><br><span class="line"><span class="code">yum  install  gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel -y</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>解压文件</span><br><span class="line"><span class="code">tar -zxvf /root/nginx-1.13.9.tar.gz  -C /root</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>配置</span><br><span class="line"><span class="code">cd /root/nginx-1.13.9</span></span><br><span class="line"><span class="code">./configure --prefix=/usr/local/nginx</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4. </span>编译</span><br><span class="line"><span class="code">make</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5. </span>安装</span><br><span class="line"><span class="code">make install</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6. </span>启动</span><br><span class="line"><span class="code">/usr/local/nginx/sbin/nginx</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">7. </span>防火墙放行端口</span><br><span class="line"><span class="code">firewall-cmd  --zone=public  --add-port=80/tcp  --permanent</span></span><br><span class="line"><span class="code">firewall-cmd --reload</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">8. </span>停止nginx</span><br><span class="line"><span class="code">/usr/local/nginx/sbin/nginx -s stop   #停止服务</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">9. </span>修改后，执行</span><br><span class="line"><span class="code">/usr/local/nginx/sbin/nginx -s reload  #重新加载配置</span></span><br></pre></td></tr></table></figure><h2 id="2-5-MySQL安装"><a href="#2-5-MySQL安装" class="headerlink" title="2.5 MySQL安装"></a>2.5 MySQL安装</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>查看CentOS是否自带的MySQL环境</span><br><span class="line"><span class="code">rpm -qa | grep -i mysql</span></span><br><span class="line"><span class="code">rpm -qa | grep -i mariadb</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>卸载mariadb</span><br><span class="line"><span class="code">rpm -e --nodeps mariadb-libs-5.5.56-2.el7.x86_64</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>解压文件</span><br><span class="line"><span class="code">mkdir -p /usr/local/mysql</span></span><br><span class="line"><span class="code">tar -zxvf /root/mysql-5.7.25-1.el7.x86_64.rpm-bundle.tar.gz -C/usr/local/mysql</span></span><br><span class="line"><span class="code">cd /usr/local/mysql/</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4. </span>安装libaio环境（已经存在不需要）</span><br><span class="line"><span class="code">yum install libaio</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5. </span>安装MySQL（按顺序）</span><br><span class="line"><span class="code">        rpm -ivh /usr/local/mysql/mysql-community-common-5.7.25-1.el7.x86_64.rpm</span></span><br><span class="line"><span class="code">        rpm -ivh /usr/local/mysql/mysql-community-libs-5.7.25-1.el7.x86_64.rpm</span></span><br><span class="line"><span class="code">        rpm -ivh /usr/local/mysql/mysql-community-devel-5.7.25-1.el7.x86_64.rpm</span></span><br><span class="line"><span class="code">        rpm -ivh /usr/local/mysql/mysql-community-libs-compat-5.7.25-1.el7.x86_64.rpm</span></span><br><span class="line"><span class="code">        rpm -ivh /usr/local/mysql/mysql-community-client-5.7.25-1.el7.x86_64.rpm</span></span><br><span class="line"><span class="code">        rpm -ivh /usr/local/mysql/mysql-community-server-5.7.25-1.el7.x86_64.rpm</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6. </span>启动mysql服务</span><br><span class="line"><span class="code">systemctl start mysqld</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">7. </span>查看随机生成的密码</span><br><span class="line"><span class="code">grep 'temporary password' /var/log/mysqld.log</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">8. </span>修改root用户密码</span><br><span class="line"><span class="code">        mysql -u root -p</span></span><br><span class="line"><span class="code">        Enter password:输入刚才查询到的随机密码</span></span><br><span class="line"><span class="code">        &gt;set global validate_password_length=4;</span></span><br><span class="line"><span class="code">        &gt;set global validate_password_policy=LOW; </span></span><br><span class="line"><span class="code">        &gt;set password = password('root');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">9. </span>防火墙放行端口</span><br><span class="line"><span class="code">        firewall-cmd --zone=public --add-port=3306/tcp --permanent</span></span><br><span class="line"><span class="code">        firewall-cmd --reload</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">10. </span>开启mysql的远程登录权限</span><br><span class="line"><span class="code">        mysql -uroot -proot</span></span><br><span class="line"><span class="code">        &gt; CREATE USER 'root'@'%' IDENTIFIED BY 'root';</span></span><br><span class="line"><span class="code">        &gt; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' ;</span></span><br><span class="line"><span class="code">        &gt; FLUSH PRIVILEGES;</span></span><br><span class="line"><span class="code">        &gt; exit;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">11. </span>MySQL编码问题（默认安装完毕为 ISO-8859-1）</span><br><span class="line"><span class="bullet">1. </span>编辑/etc/my.cnf,在[mysqld]选项下添加字符集的设置</span><br><span class="line"><span class="code">vim /etc/my.cnf</span></span><br><span class="line"><span class="code">          [mysqld]</span></span><br><span class="line"><span class="code">        character-set-server=utf8</span></span><br><span class="line"><span class="bullet">2. </span>重新启动mysql的服务</span><br><span class="line"><span class="code">systemctl restart mysqld</span></span><br></pre></td></tr></table></figure><h2 id="2-6-Redis安装"><a href="#2-6-Redis安装" class="headerlink" title="2.6 Redis安装"></a>2.6 Redis安装</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>解压文件</span><br><span class="line"><span class="code">tar -zxvf /root/redis-3.0.7.tar.gz -C /root</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>编译</span><br><span class="line"><span class="code">cd /root/redis-3.0.7</span></span><br><span class="line"><span class="code">make</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>安装</span><br><span class="line"><span class="code">make PREFIX=/usr/local/redis install</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4. </span>复制配置文件到/usr/local/redis/bin</span><br><span class="line"><span class="code">cp /root/redis-3.0.7/redis.conf /usr/local/redis/bin/</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5. </span>设置后台启动</span><br><span class="line"><span class="code">vim /usr/local/redis/bin/redis.conf</span></span><br><span class="line"><span class="code">daemonize yes</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6. </span>启动redis</span><br><span class="line"><span class="code">/usr/local/redis/bin/redis-server /usr/local/redis/bin/redis.conf</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">7. </span>防火墙放行端口</span><br><span class="line"><span class="code">firewall-cmd --zone=public --add-port=6379/tcp --permanent</span></span><br><span class="line"><span class="code">firewall-cmd --reload</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">8. </span>关闭redis</span><br><span class="line"><span class="code">/usr/local/redis/bin/redis-cli shutdown</span></span><br></pre></td></tr></table></figure><h1 id="三-项目部署"><a href="#三-项目部署" class="headerlink" title="三 项目部署"></a>三 项目部署</h1><h2 id="3-1-环境确认"><a href="#3-1-环境确认" class="headerlink" title="3.1 环境确认"></a>3.1 环境确认</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>语法</span><br><span class="line"><span class="code">netstat -antup</span></span><br><span class="line"><span class="code">netstat -antup | grep 端口号</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>参数解释</span><br><span class="line"><span class="code">-antup查看当前正在使用的udp和tcp协议的端口号和进程号</span></span><br></pre></td></tr></table></figure><h2 id="3-2-数据库迁移"><a href="#3-2-数据库迁移" class="headerlink" title="3.2 数据库迁移"></a>3.2 数据库迁移</h2><h4 id="1）将windows的数据库进行备份"><a href="#1）将windows的数据库进行备份" class="headerlink" title="1）将windows的数据库进行备份"></a>1）将windows的数据库进行备份</h4><h4 id="2）还原到linux的数据库中"><a href="#2）还原到linux的数据库中" class="headerlink" title="2）还原到linux的数据库中"></a>2）还原到linux的数据库中</h4><h2 id="3-3-Tomcat部署项目"><a href="#3-3-Tomcat部署项目" class="headerlink" title="3.3 Tomcat部署项目"></a>3.3 Tomcat部署项目</h2><h4 id="1）打开idea，对maven进行package打包"><a href="#1）打开idea，对maven进行package打包" class="headerlink" title="1）打开idea，对maven进行package打包"></a>1）打开idea，对maven进行package打包</h4><blockquote><p>注意：我们之前编写了日志，日志文件路径是D盘</p><p>我们需要吧日志代码注释掉，linux环境是没有D盘</p></blockquote><h4 id="2）进入target目录，对war包改名"><a href="#2）进入target目录，对war包改名" class="headerlink" title="2）进入target目录，对war包改名"></a>2）进入target目录，对war包改名</h4><h4 id="3）使用FTP上传到linux服务器"><a href="#3）使用FTP上传到linux服务器" class="headerlink" title="3）使用FTP上传到linux服务器"></a>3）使用FTP上传到linux服务器</h4><h4 id="4）部署到tomcat中的webapps目录"><a href="#4）部署到tomcat中的webapps目录" class="headerlink" title="4）部署到tomcat中的webapps目录"></a>4）部署到tomcat中的webapps目录</h4><h4 id="5）浏览器访问测试"><a href="#5）浏览器访问测试" class="headerlink" title="5）浏览器访问测试"></a>5）浏览器访问测试</h4><h2 id="3-4-nginx配置反向代理"><a href="#3-4-nginx配置反向代理" class="headerlink" title="3.4 nginx配置反向代理"></a>3.4 nginx配置反向代理</h2><p><strong>需要在修改 nginx.cnf 配置文件</strong></p><blockquote><p>修改完毕后，需要重写加载配置文件</p><p>/usr/local/nginx/sbin/nginx -s reload</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定你要代理的tomcat服务器列表</span></span><br><span class="line"><span class="attribute">upstream</span> tomcat_server &#123;</span><br><span class="line"><span class="attribute">server</span> localhost:<span class="number">8080</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span>   html;</span><br><span class="line">    <span class="comment"># 现在我们nginx不在是访问html路径，改成反向代理</span></span><br><span class="line">            <span class="attribute">proxy_pass</span>  http://tomcat_server; </span><br><span class="line">            <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>反向代理执行流程图</strong></p><table><thead><tr><th>User</th><th></th><th>Nginx</th><th></th><th></th><th></th><th>Tomcat</th></tr></thead><tbody><tr><td></td><td>➡</td><td>proxy_pass  <a href="http://tomcat_server">http://tomcat_server</a>;</td><td>➡</td><td>upstream tomcat_server</td><td>➡</td><td>tomcat_server</td></tr></tbody></table><h2 id="3-5-nginx配置负载均衡"><a href="#3-5-nginx配置负载均衡" class="headerlink" title="3.5 nginx配置负载均衡"></a>3.5 nginx配置负载均衡</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>将当前tomcat1停止运行</span><br><span class="line">  /usr/local/tomcat1/bin/shutdown.sh</span><br><span class="line">  </span><br><span class="line"><span class="bullet">2. </span>复制tomcat1为tomcat2</span><br><span class="line"><span class="code">cp -r /usr/local/tomcat1 /usr/local/tomcat2</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>修改tomcat2的3个端口</span><br><span class="line"><span class="code">vim /usr/local/tomcat2/conf/server.xml</span></span><br><span class="line"><span class="code">    8005--&gt;8015   8009--&gt;8019  8080--&gt;8081</span></span><br><span class="line"><span class="code">    </span></span><br><span class="line"><span class="bullet">4. </span>放行8081端口</span><br><span class="line">  firewall-cmd --zone=public --add-port=8081/tcp --permanent</span><br><span class="line"><span class="code">firewall-cmd --reload  </span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5. </span>启动两个tomcat</span><br><span class="line"><span class="code">/usr/local/tomcat1/bin/startup.sh</span></span><br><span class="line"><span class="code">/usr/local/tomcat2/bin/startup.sh</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6. </span>在nginx中配置负载均衡策略</span><br><span class="line"><span class="code">       vim /usr/local/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="code">            upstream tomcat_server&#123;</span></span><br><span class="line"><span class="code">               ip_hash;</span></span><br><span class="line"><span class="code">               server localhost:8080 weight=2;</span></span><br><span class="line"><span class="code">               server localhost:8081 weight=1;</span></span><br><span class="line"><span class="code">            &#125;</span></span><br><span class="line"><span class="code">    </span></span><br><span class="line"><span class="bullet">7. </span>重新加载nginx配置</span><br><span class="line"><span class="code">/usr/local/nginx/sbin/nginx -s reload</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">8. </span>同时开启两个窗口,通过动态查看tomcat日志可见结果</span><br><span class="line"><span class="code">tail -f /usr/local/tomcat1/logs/catalina.out</span></span><br><span class="line"><span class="code">tail -f /usr/local/tomcat2/logs/catalina.out</span></span><br></pre></td></tr></table></figure><h2 id="3-6-我们可以欺骗自己的电脑"><a href="#3-6-我们可以欺骗自己的电脑" class="headerlink" title="3.6 我们可以欺骗自己的电脑"></a>3.6 我们可以欺骗自己的电脑</h2><blockquote><p>伪 DNS映射</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"192.168.1.200 travel.com"</span> &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;jdk&lt;/li&gt;
&lt;li&gt;tomcat    &lt;/li&gt;
&lt;li&gt;mysql&lt;/li&gt;
&lt;li&gt;redis&lt;/li&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;li&gt;反向代理+负载均衡&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（六十二）</title>
    <link href="http://yoursite.com/2020/05/25/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/25/就业班学习笔记（六十二）/</id>
    <published>2020-05-25T01:01:19.000Z</published>
    <updated>2020-05-25T14:06:32.128Z</updated>
    
    <content type="html"><![CDATA[<ul><li>linux基础</li><li>Linux网络</li><li>Nginx</li></ul><a id="more"></a><h1 id="一-linux基础"><a href="#一-linux基础" class="headerlink" title="一.linux基础"></a>一.linux基础</h1><h4 id="1-1-远程连接工具使用"><a href="#1-1-远程连接工具使用" class="headerlink" title="1.1 远程连接工具使用"></a>1.1 远程连接工具使用</h4><p>在实际开发中，Linux服务器都在其他的地方，我们要通过windows客户端工具远程去连接Linux并操作 它，连接Linux的windows客户端工具有很多，企业中常用的有secureCRT、Putty、xshell、SSH Secure等。</p><h4 id="1-2-Linux目录结构"><a href="#1-2-Linux目录结构" class="headerlink" title="1.2 Linux目录结构"></a>1.2 Linux目录结构</h4><p>root目录:超级管理员所在的目录，用~表示<br>home目录:普通用户所在的目录<br>usr目录:安装用户文件所在的目录<br>etc目录:Linux系统管理和配置文件所在的目录</p><h4 id="1-3-文件夹-目录-操作命令"><a href="#1-3-文件夹-目录-操作命令" class="headerlink" title="1.3 文件夹(目录)操作命令"></a>1.3 文件夹(目录)操作命令</h4><ul><li><p>查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line"></span><br><span class="line">List directory contents.</span><br><span class="line"></span><br><span class="line">- List files one per line:</span><br><span class="line">    ls -1</span><br><span class="line"></span><br><span class="line">- List all files, including hidden files:</span><br><span class="line">    ls -a</span><br><span class="line"></span><br><span class="line">- Long format list (permissions, ownership, size and modification date) of all files:</span><br><span class="line">    ls -la</span><br><span class="line"></span><br><span class="line">- Long format list with size displayed using human readable units (KB, MB, GB):</span><br><span class="line">    ls -lh</span><br><span class="line"></span><br><span class="line">- Long format list sorted by size (descending):</span><br><span class="line">    ls -lS</span><br><span class="line"></span><br><span class="line">- Long format list of all files, sorted by modification date (oldest first):</span><br><span class="line">    ls -ltr</span><br></pre></td></tr></table></figure></li><li><p>跳转</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span></span><br><span class="line"></span><br><span class="line">Change the current working directory.</span><br><span class="line"></span><br><span class="line">- Go to the given directory:</span><br><span class="line">    <span class="built_in">cd</span> path/to/directory</span><br><span class="line"></span><br><span class="line">- Go to home directory of current user:</span><br><span class="line">    <span class="built_in">cd</span></span><br><span class="line"></span><br><span class="line">- Go up to the parent of the current directory:</span><br><span class="line">    <span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line">- Go to the previously chosen directory:</span><br><span class="line">    <span class="built_in">cd</span> -</span><br></pre></td></tr></table></figure></li><li><p>创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir</span><br><span class="line"></span><br><span class="line">Creates a directory.</span><br><span class="line"></span><br><span class="line">- Create a directory <span class="keyword">in</span> current directory or given path:</span><br><span class="line">    mkdir directory</span><br><span class="line"></span><br><span class="line">- Create directories recursively (useful <span class="keyword">for</span> creating nested <span class="built_in">dirs</span>):</span><br><span class="line">    mkdir -p path/to/directory</span><br></pre></td></tr></table></figure></li><li><p>搜索</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">find</span><br><span class="line"></span><br><span class="line">Find files or directories under the given directory tree, recursively.</span><br><span class="line"></span><br><span class="line">- Find files by extension:</span><br><span class="line">    find root_path -name <span class="string">'*.ext'</span></span><br><span class="line"></span><br><span class="line">- Find files by matching multiple patterns:</span><br><span class="line">    find root_path -name <span class="string">'*pattern_1*'</span> -or -name <span class="string">'*pattern_2*'</span></span><br><span class="line"></span><br><span class="line">- Find directories matching a given name, <span class="keyword">in</span> <span class="keyword">case</span>-insensitive mode:</span><br><span class="line">    find root_path -<span class="built_in">type</span> d -iname <span class="string">'*lib*'</span></span><br><span class="line"></span><br><span class="line">- Find files matching a path pattern:</span><br><span class="line">    find root_path -path <span class="string">'**/lib/**/*.ext'</span></span><br><span class="line"></span><br><span class="line">- Find files matching a given pattern, excluding specific paths:</span><br><span class="line">    find root_path -name <span class="string">'*.py'</span> -not -path <span class="string">'*/site-packages/*'</span></span><br><span class="line"></span><br><span class="line">- Find files matching a given size range:</span><br><span class="line">    find root_path -size +500k -size -10M</span><br><span class="line"></span><br><span class="line">- Run a <span class="built_in">command</span> <span class="keyword">for</span> each file (use `&#123;&#125;` within the <span class="built_in">command</span> to access the filename):</span><br><span class="line">    find root_path -name <span class="string">'*.ext'</span> -<span class="built_in">exec</span> wc -l &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">- Find files modified <span class="keyword">in</span> the last 7 days, and delete them:</span><br><span class="line">    find root_path -mtime -7 -delete</span><br></pre></td></tr></table></figure></li><li><p>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mv</span><br><span class="line"></span><br><span class="line">Move or rename files and directories.</span><br><span class="line"></span><br><span class="line">- Move files <span class="keyword">in</span> arbitrary locations:</span><br><span class="line">    mv <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Do not prompt <span class="keyword">for</span> confirmation before overwriting existing files:</span><br><span class="line">    mv -f <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Prompt <span class="keyword">for</span> confirmation before overwriting existing files, regardless of file permissions:</span><br><span class="line">    mv -i <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Do not overwrite existing files at the target:</span><br><span class="line">    mv -n <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Move files <span class="keyword">in</span> verbose mode, showing files after they are moved:</span><br><span class="line">    mv -v <span class="built_in">source</span> target</span><br></pre></td></tr></table></figure></li><li><p>剪切</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mv</span><br><span class="line"></span><br><span class="line">Move or rename files and directories.</span><br><span class="line"></span><br><span class="line">- Move files <span class="keyword">in</span> arbitrary locations:</span><br><span class="line">    mv <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Do not prompt <span class="keyword">for</span> confirmation before overwriting existing files:</span><br><span class="line">    mv -f <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Prompt <span class="keyword">for</span> confirmation before overwriting existing files, regardless of file permissions:</span><br><span class="line">    mv -i <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Do not overwrite existing files at the target:</span><br><span class="line">    mv -n <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Move files <span class="keyword">in</span> verbose mode, showing files after they are moved:</span><br><span class="line">    mv -v <span class="built_in">source</span> target</span><br></pre></td></tr></table></figure></li><li><p>复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cp</span><br><span class="line"></span><br><span class="line">Copy files and directories.</span><br><span class="line"></span><br><span class="line">- Copy a file to another location:</span><br><span class="line">    cp path/to/file.ext path/to/copy.ext</span><br><span class="line"></span><br><span class="line">- Copy a file into another directory, keeping the filename:</span><br><span class="line">    cp path/to/file.ext path/to/target_parent_directory</span><br><span class="line"></span><br><span class="line">- Recursively copy a directory<span class="string">'s contents to another location (if the destination exists, the directory is copied inside it):</span></span><br><span class="line"><span class="string">    cp -r path/to/directory path/to/copy</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Copy a directory recursively, in verbose mode (shows files as they are copied):</span></span><br><span class="line"><span class="string">    cp -vr path/to/directory path/to/copy</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Copy text files to another location, in interactive mode (prompts user before overwriting):</span></span><br><span class="line"><span class="string">    cp -i *.txt path/to/target_directory</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Dereference symbolic links before copying:</span></span><br><span class="line"><span class="string">    cp -L link path/to/copy</span></span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rmdir</span><br><span class="line"></span><br><span class="line">Removes a directory.</span><br><span class="line"></span><br><span class="line">- Remove directory, provided it is empty. Use `rm` to remove not empty directories:</span><br><span class="line">    rmdir path/to/directory</span><br><span class="line"></span><br><span class="line">- Remove directories recursively (useful <span class="keyword">for</span> nested <span class="built_in">dirs</span>):</span><br><span class="line">    rmdir -p path/to/directory</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-文件操作命令"><a href="#1-4-文件操作命令" class="headerlink" title="1.4 文件操作命令"></a>1.4 文件操作命令</h4><ul><li><p>创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">touch</span><br><span class="line"></span><br><span class="line">Change a file access and modification <span class="built_in">times</span> (atime, mtime).</span><br><span class="line"></span><br><span class="line">- Create a new empty file(s) or change the <span class="built_in">times</span> <span class="keyword">for</span> existing file(s) to current time:</span><br><span class="line">    touch filename</span><br><span class="line"></span><br><span class="line">- Set the <span class="built_in">times</span> on a file to a specific date and time:</span><br><span class="line">    touch -t YYYYMMDDHHMM.SS filename</span><br><span class="line"></span><br><span class="line">- Use the <span class="built_in">times</span> from a file to <span class="built_in">set</span> the <span class="built_in">times</span> on a second file:</span><br><span class="line">    touch -r filename filename2</span><br></pre></td></tr></table></figure></li><li><p>查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">cat</span><br><span class="line"></span><br><span class="line">Print and concatenate files.</span><br><span class="line"></span><br><span class="line">- Print the contents of a file to the standard output:</span><br><span class="line">    cat file</span><br><span class="line"></span><br><span class="line">- Concatenate several files into the target file:</span><br><span class="line">    cat file1 file2 &gt; target_file</span><br><span class="line"></span><br><span class="line">- Append several files into the target file:</span><br><span class="line">    cat file1 file2 &gt;&gt; target_file</span><br><span class="line"></span><br><span class="line">- Number all output lines:</span><br><span class="line">    cat -n file</span><br><span class="line"></span><br><span class="line">- Display non-printable and whitespace characters (with `M-` prefix <span class="keyword">if</span> non-ASCII):</span><br><span class="line">    cat -v -t -e file</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">tail</span><br><span class="line"></span><br><span class="line">Display the last part of a file.</span><br><span class="line"></span><br><span class="line">- Show last <span class="string">'num'</span> lines <span class="keyword">in</span> file:</span><br><span class="line">    tail -n num file</span><br><span class="line"></span><br><span class="line">- Show all file since line <span class="string">'num'</span>:</span><br><span class="line">    tail -n +num file</span><br><span class="line"></span><br><span class="line">- Show last <span class="string">'num'</span> bytes <span class="keyword">in</span> file:</span><br><span class="line">    tail -c num file</span><br><span class="line"></span><br><span class="line">- Keep reading file until `Ctrl + C`:</span><br><span class="line">    tail -f file</span><br><span class="line"></span><br><span class="line">- Keep reading file until `Ctrl + C`, even <span class="keyword">if</span> the file is rotated:</span><br><span class="line">    tail -F file</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">head</span><br><span class="line"></span><br><span class="line">Output the first part of files.</span><br><span class="line"></span><br><span class="line">- Output the first few lines of a file:</span><br><span class="line">    head -n count_of_lines filename</span><br><span class="line"></span><br><span class="line">- Output the first few bytes of a file:</span><br><span class="line">    head -c number_in_bytes filename</span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">rm</span><br><span class="line"></span><br><span class="line">Remove files or directories.</span><br><span class="line"></span><br><span class="line">- Remove files from arbitrary locations:</span><br><span class="line">    rm path/to/file path/to/another/file</span><br><span class="line"></span><br><span class="line">- Recursively remove a directory and all its subdirectories:</span><br><span class="line">    rm -r path/to/directory</span><br><span class="line"></span><br><span class="line">- Forcibly remove a directory, without prompting <span class="keyword">for</span> confirmation or showing error messages:</span><br><span class="line">    rm -rf path/to/directory</span><br><span class="line"></span><br><span class="line">- Interactively remove multiple files, with a prompt before every removal:</span><br><span class="line">    rm -i file(s)</span><br><span class="line"></span><br><span class="line">- Remove files <span class="keyword">in</span> verbose mode, printing a message <span class="keyword">for</span> each removed file:</span><br><span class="line">    rm -v path/to/directory/*</span><br></pre></td></tr></table></figure></li><li><p>编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">vim</span><br><span class="line"></span><br><span class="line">Vim (Vi IMproved), a <span class="built_in">command</span>-line text editor, provides several modes <span class="keyword">for</span> different kinds of text manipulation.</span><br><span class="line">Pressing `i` enters edit mode. `&lt;Esc&gt;` goes back to normal mode, <span class="built_in">which</span> doesn<span class="string">'t allow regular text insertion.</span></span><br><span class="line"><span class="string">More information: &lt;https://www.vim.org&gt;.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Open a file:</span></span><br><span class="line"><span class="string">    vim path/to/file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- View Vim'</span>s <span class="built_in">help</span> manual:</span><br><span class="line">    :<span class="built_in">help</span>&lt;Enter&gt;</span><br><span class="line"></span><br><span class="line">- Save a file:</span><br><span class="line">    :write&lt;Enter&gt;</span><br><span class="line"></span><br><span class="line">- Quit without saving:</span><br><span class="line">    :quit!&lt;Enter&gt;</span><br><span class="line"></span><br><span class="line">- Open a file at a specified line number:</span><br><span class="line">    vim +line_number path/to/file</span><br><span class="line"></span><br><span class="line">- Undo the last operation:</span><br><span class="line">    u</span><br><span class="line"></span><br><span class="line">- Search <span class="keyword">for</span> a pattern <span class="keyword">in</span> the file (press `n`/`N` to go to next/previous match):</span><br><span class="line">    /search_pattern&lt;Enter&gt;</span><br><span class="line"></span><br><span class="line">- Perform a regex substitution <span class="keyword">in</span> the whole file:</span><br><span class="line">    :%s/pattern/replacement/g&lt;Enter&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-5-文件压缩命令"><a href="#1-5-文件压缩命令" class="headerlink" title="1.5 文件压缩命令"></a>1.5 文件压缩命令</h4><ul><li><p>将文件打成压缩包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">tar</span><br><span class="line"></span><br><span class="line">Archiving utility.</span><br><span class="line">Often combined with a compression method, such as gzip or bzip.</span><br><span class="line">More information: &lt;https://www.gnu.org/software/tar&gt;.</span><br><span class="line"></span><br><span class="line">- Create an archive from files:</span><br><span class="line">    tar cf target.tar file1 file2 file3</span><br><span class="line"></span><br><span class="line">- Create a gzipped archive:</span><br><span class="line">    tar czf target.tar.gz file1 file2 file3</span><br><span class="line"></span><br><span class="line">- Create a gzipped archive from a directory using relative paths:</span><br><span class="line">    tar czf target.tar.gz -C path/to/directory .</span><br><span class="line"></span><br><span class="line">- Extract a (compressed) archive into the current directory:</span><br><span class="line">    tar xf source.tar[.gz|.bz2|.xz]</span><br><span class="line"></span><br><span class="line">- Extract an archive into a target directory:</span><br><span class="line">    tar xf source.tar -C directory</span><br><span class="line"></span><br><span class="line">- Create a compressed archive, using archive suffix to determine the compression program:</span><br><span class="line">    tar caf target.tar.xz file1 file2 file3</span><br><span class="line"></span><br><span class="line">- List the contents of a tar file:</span><br><span class="line">    tar tvf source.tar</span><br><span class="line"></span><br><span class="line">- Extract files matching a pattern:</span><br><span class="line">    tar xf source.tar --wildcards <span class="string">"*.html"</span></span><br><span class="line"></span><br><span class="line">- Extract a specific file without preserving the folder structure:</span><br><span class="line">    tar xf source.tar source.tar/path/to/extract --strip-components=depth_to_strip</span><br></pre></td></tr></table></figure></li><li><p>解压缩包获得文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">tar</span><br><span class="line"></span><br><span class="line">Archiving utility.</span><br><span class="line">Often combined with a compression method, such as gzip or bzip.</span><br><span class="line">More information: &lt;https://www.gnu.org/software/tar&gt;.</span><br><span class="line"></span><br><span class="line">- Create an archive from files:</span><br><span class="line">    tar cf target.tar file1 file2 file3</span><br><span class="line"></span><br><span class="line">- Create a gzipped archive:</span><br><span class="line">    tar czf target.tar.gz file1 file2 file3</span><br><span class="line"></span><br><span class="line">- Create a gzipped archive from a directory using relative paths:</span><br><span class="line">    tar czf target.tar.gz -C path/to/directory .</span><br><span class="line"></span><br><span class="line">- Extract a (compressed) archive into the current directory:</span><br><span class="line">    tar xf source.tar[.gz|.bz2|.xz]</span><br><span class="line"></span><br><span class="line">- Extract an archive into a target directory:</span><br><span class="line">    tar xf source.tar -C directory</span><br><span class="line"></span><br><span class="line">- Create a compressed archive, using archive suffix to determine the compression program:</span><br><span class="line">    tar caf target.tar.xz file1 file2 file3</span><br><span class="line"></span><br><span class="line">- List the contents of a tar file:</span><br><span class="line">    tar tvf source.tar</span><br><span class="line"></span><br><span class="line">- Extract files matching a pattern:</span><br><span class="line">    tar xf source.tar --wildcards <span class="string">"*.html"</span></span><br><span class="line"></span><br><span class="line">- Extract a specific file without preserving the folder structure:</span><br><span class="line">    tar xf source.tar source.tar/path/to/extract --strip-components=depth_to_strip</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-6-文件权限命令"><a href="#1-6-文件权限命令" class="headerlink" title="1.6 文件权限命令"></a>1.6 文件权限命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">chmod</span><br><span class="line"></span><br><span class="line">Change the access permissions of a file or directory.</span><br><span class="line"></span><br><span class="line">- Give the [u]ser who owns a file the right to e[x]ecute it:</span><br><span class="line">    chmod u+x file</span><br><span class="line"></span><br><span class="line">- Give the [u]ser rights to [r]ead and [w]rite to a file/directory:</span><br><span class="line">    chmod u+rw file_or_directory</span><br><span class="line"></span><br><span class="line">- Remove e[x]ecutable rights from the [g]roup:</span><br><span class="line">    chmod g-x file</span><br><span class="line"></span><br><span class="line">- Give [a]ll users rights to [r]ead and e[x]ecute:</span><br><span class="line">    chmod a+rx file</span><br><span class="line"></span><br><span class="line">- Give [o]thers (not <span class="keyword">in</span> the file owner<span class="string">'s group) the same rights as the [g]roup:</span></span><br><span class="line"><span class="string">    chmod o=g file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Remove all rights from [o]thers:</span></span><br><span class="line"><span class="string">    chmod o= file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Change permissions recursively giving [g]roup and [o]thers the abililty to [w]rite:</span></span><br><span class="line"><span class="string">    chmod -R g+w,o+w directory</span></span><br></pre></td></tr></table></figure><h4 id="1-7-其他命令"><a href="#1-7-其他命令" class="headerlink" title="1.7 其他命令"></a>1.7 其他命令</h4><ul><li><p>显示工作目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">Print name of current/working directory.</span><br><span class="line"></span><br><span class="line">- Print the current directory:</span><br><span class="line">    <span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">- Print the current directory, and resolve all symlinks (i.e. show the <span class="string">"physical"</span> path):</span><br><span class="line">    <span class="built_in">pwd</span> -P</span><br></pre></td></tr></table></figure></li><li><p>查看进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ps</span><br><span class="line"></span><br><span class="line">Information about running processes.</span><br><span class="line"></span><br><span class="line">- List all running processes:</span><br><span class="line">    ps aux</span><br><span class="line"></span><br><span class="line">- List all running processes including the full <span class="built_in">command</span> string:</span><br><span class="line">    ps auxww</span><br><span class="line"></span><br><span class="line">- Search <span class="keyword">for</span> a process that matches a string:</span><br><span class="line">    ps aux | grep string</span><br><span class="line"></span><br><span class="line">- List all processes of the current user <span class="keyword">in</span> extra full format:</span><br><span class="line">    ps --user $(id -u) -F</span><br><span class="line"></span><br><span class="line">- List all processes of the current user as a tree:</span><br><span class="line">    ps --user $(id -u) f</span><br><span class="line"></span><br><span class="line">- Get the parent pid of a process:</span><br><span class="line">    ps -o ppid= -p pid</span><br></pre></td></tr></table></figure></li><li><p>杀死进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span></span><br><span class="line"></span><br><span class="line">Sends a signal to a process, usually related to stopping the process.</span><br><span class="line">All signals except <span class="keyword">for</span> SIGKILL and SIGSTOP can be intercepted by the process to perform a clean <span class="built_in">exit</span>.</span><br><span class="line"></span><br><span class="line">- Terminate a program using the default SIGTERM (terminate) signal:</span><br><span class="line">    <span class="built_in">kill</span> process_id</span><br><span class="line"></span><br><span class="line">- List available signal names (to be used without the `SIG` prefix):</span><br><span class="line">    <span class="built_in">kill</span> -l</span><br><span class="line"></span><br><span class="line">- Terminate a background job:</span><br><span class="line">    <span class="built_in">kill</span> %job_id</span><br><span class="line"></span><br><span class="line">- Terminate a program using the SIGHUP (hang up) signal. Many daemons will reload instead of terminating:</span><br><span class="line">    <span class="built_in">kill</span> -1|HUP process_id</span><br><span class="line"></span><br><span class="line">- Terminate a program using the SIGINT (interrupt) signal. This is typically initiated by the user pressing `Ctrl + C`:</span><br><span class="line">    <span class="built_in">kill</span> -2|INT process_id</span><br><span class="line"></span><br><span class="line">- Signal the operating system to immediately terminate a program (<span class="built_in">which</span> gets no chance to capture the signal):</span><br><span class="line">    <span class="built_in">kill</span> -9|KILL process_id</span><br><span class="line"></span><br><span class="line">- Signal the operating system to pause a program until a SIGCONT (<span class="string">"continue"</span>) signal is received:</span><br><span class="line">    <span class="built_in">kill</span> -17|STOP process_id</span><br><span class="line"></span><br><span class="line">- Send a `SIGUSR1` signal to all processes with the given GID (group id):</span><br><span class="line">    <span class="built_in">kill</span> -SIGUSR1 -group_id</span><br></pre></td></tr></table></figure></li><li><p>搜索</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">grep</span><br><span class="line"></span><br><span class="line">Matches patterns <span class="keyword">in</span> input text.</span><br><span class="line">Supports simple patterns and regular expressions.</span><br><span class="line"></span><br><span class="line">- Search <span class="keyword">for</span> an exact string:</span><br><span class="line">    grep search_string path/to/file</span><br><span class="line"></span><br><span class="line">- Search <span class="keyword">in</span> <span class="keyword">case</span>-insensitive mode:</span><br><span class="line">    grep -i search_string path/to/file</span><br><span class="line"></span><br><span class="line">- Search recursively (ignoring non-text files) <span class="keyword">in</span> current directory <span class="keyword">for</span> an exact string:</span><br><span class="line">    grep -RI search_string .</span><br><span class="line"></span><br><span class="line">- Use extended regular expressions (supporting `?`, `+`, `&#123;&#125;`, `()` and `|`):</span><br><span class="line">    grep -E ^regex$ path/to/file</span><br><span class="line"></span><br><span class="line">- Print 3 lines of [C]ontext around, [B]efore, or [A]fter each match:</span><br><span class="line">    grep -C|B|A 3 search_string path/to/file</span><br><span class="line"></span><br><span class="line">- Print file name with the corresponding line number <span class="keyword">for</span> each match:</span><br><span class="line">    grep -Hn search_string path/to/file</span><br><span class="line"></span><br><span class="line">- Use the standard input instead of a file:</span><br><span class="line">    cat path/to/file | grep search_string</span><br><span class="line"></span><br><span class="line">- Invert match <span class="keyword">for</span> excluding specific strings:</span><br><span class="line">    grep -v search_string</span><br></pre></td></tr></table></figure></li><li><p>管道</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|      ##管道符</span><br><span class="line">管道只允许正确输出通过</span><br><span class="line"> tee         ####复制一份输出</span><br><span class="line">2&gt;&amp;1 |       ####转换错误输出为正确再通过管道</span><br></pre></td></tr></table></figure></li><li><p>关机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poweroff</span><br></pre></td></tr></table></figure></li><li><p>重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br><span class="line"></span><br><span class="line">Reboot the system.</span><br><span class="line"></span><br><span class="line">- Reboot immediately:</span><br><span class="line">    sudo reboot</span><br><span class="line"></span><br><span class="line">- Reboot immediately without gracefully shutting down:</span><br><span class="line">    sudo reboot -q</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-Linux网络"><a href="#二-Linux网络" class="headerlink" title="二.Linux网络"></a>二.Linux网络</h1><h4 id="2-1-网络服务"><a href="#2-1-网络服务" class="headerlink" title="2.1 网络服务"></a>2.1 网络服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br><span class="line"></span><br><span class="line">Network Interface Configurator.</span><br><span class="line"></span><br><span class="line">- View network settings of an ethernet adapter:</span><br><span class="line">    ifconfig eth0</span><br><span class="line"></span><br><span class="line">- Display details of all interfaces, including disabled interfaces:</span><br><span class="line">    ifconfig -a</span><br><span class="line"></span><br><span class="line">- Disable eth0 interface:</span><br><span class="line">    ifconfig eth0 down</span><br><span class="line"></span><br><span class="line">- Enable eth0 interface:</span><br><span class="line">    ifconfig eth0 up</span><br><span class="line"></span><br><span class="line">- Assign IP address to eth0 interface:</span><br><span class="line">    ifconfig eth0 ip_address</span><br><span class="line">    </span><br><span class="line">ip addr :CentOS7版本</span><br><span class="line">修改网卡ip</span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><table><thead><tr><th>概要信息</th><th></th></tr></thead><tbody><tr><td>DEVICE=ens33</td><td>网卡名称</td></tr><tr><td>TYPE=Ethernet</td><td>网卡类型 以太网</td></tr><tr><td>ONBOOT=yes</td><td>是否开机就使用此网卡</td></tr><tr><td>BOOTPROTO=dhcp</td><td>启动网卡时指定获取IP地址的方式</td></tr><tr><td>IPADDR=</td><td>ip地址</td></tr><tr><td>GATEWAY=</td><td>网关</td></tr><tr><td>NETMASK=255.255.255.0</td><td>子网掩码</td></tr><tr><td>DNS1=</td><td>DNS服务器</td></tr></tbody></table><table><thead><tr><th>重启网卡服务</th><th></th></tr></thead><tbody><tr><td>systemctl status network</td><td>查看指定服务的状态</td></tr><tr><td>systemctl stop network</td><td>停止指定服务</td></tr><tr><td>systemctl start network</td><td>启动指定服务</td></tr><tr><td>systemctl restart network</td><td>重启指定服务</td></tr></tbody></table><h4 id="2-2-防火墙服务"><a href="#2-2-防火墙服务" class="headerlink" title="2.2 防火墙服务"></a>2.2 防火墙服务</h4><h5 id="2-2-1-防火墙设置"><a href="#2-2-1-防火墙设置" class="headerlink" title="2.2.1 防火墙设置"></a>2.2.1 防火墙设置</h5><table><thead><tr><th>防火墙设置</th><th></th></tr></thead><tbody><tr><td>开启防火墙</td><td>systemctl start firewalld</td></tr><tr><td>重启防火墙</td><td>systemctl restart firewalld</td></tr><tr><td>关闭防火墙</td><td>systemctl stop firewalld</td></tr><tr><td>设置开机启动</td><td>systemctl enable firewalld</td></tr><tr><td>停止并关闭开机启动</td><td>systemctl disable firewalld</td></tr><tr><td>查看防火墙状态</td><td>systemctl status firewalld 或者 firewall-cmd –state</td></tr><tr><td>查看防火墙开机时是否启动</td><td>systemctl list-unit-files | grep firewalld</td></tr></tbody></table><h5 id="2-2-2-端口设置"><a href="#2-2-2-端口设置" class="headerlink" title="2.2.2 端口设置"></a>2.2.2 端口设置</h5><table><thead><tr><th>端口设置</th><th></th></tr></thead><tbody><tr><td>添加</td><td>firewall-cmd –zone=public –add-port=80/tcp –permanent</td></tr><tr><td>更新防火墙规则</td><td>firewall-cmd –reload</td></tr><tr><td>查看</td><td>firewall-cmd –zone=public –query-port=80/tcp<br>firewall-cmd –zone=public –list-ports</td></tr><tr><td>删除</td><td>firewall-cmd –zone=public –remove-port=80/tcp –permanent</td></tr><tr><td>常用端口</td><td>8080 tomcat<br>80 http协议<br>443 https协议<br/>22 ssh远程连接<br/>3306 mysql<br/>6379 redis</td></tr></tbody></table><h1 id="三-Nginx"><a href="#三-Nginx" class="headerlink" title="三.Nginx"></a>三.Nginx</h1><h4 id="3-1-介绍"><a href="#3-1-介绍" class="headerlink" title="3.1 介绍"></a>3.1 介绍</h4><p>Nginx是一款轻量级的 Web 服务器,由俄罗斯的程序设计师伊戈尔·西索夫所开发。 Nginx性能非常优秀, 官方测试能够支撑5万并发链接，并且 cpu、内存等资源消耗却非常低，运行非常稳定。</p><p>Nginx的功能有很多，我们主要使用它来做静态资源服务器、负载均衡服务器和反向代理服务器。</p><h4 id="3-2-应用场景"><a href="#3-2-应用场景" class="headerlink" title="3.2 应用场景"></a>3.2 应用场景</h4><h5 id="3-2-1-静态资源服务器"><a href="#3-2-1-静态资源服务器" class="headerlink" title="3.2.1 静态资源服务器"></a>3.2.1 静态资源服务器</h5><p>部署网站的静态资源(html、css、js),可与Tomcat等实现动静分离</p><h4 id="3-2-2-反向代理服务器"><a href="#3-2-2-反向代理服务器" class="headerlink" title="3.2.2 反向代理服务器"></a>3.2.2 反向代理服务器</h4><ul><li><p>代理</p><p>给某个对象提供一个代理对象，并由代理对象控制原对象的引用</p></li><li><p>正向代理</p><p>对客户端进行代理(例如VPN)</p></li><li><p>反向代理</p><p>对服务端进行代理</p><p>反向代理，就是对服务端进行代理，作为客户端,只需要将请求发送到反向代理服务器，由反向代理服务 器去选择目标服务器获取数据后，再响应给客户端，此时反向代理服务器和目标服务器对外就是一个服 务器，暴露的是代理服务器地址，隐藏了真实服务器IP地址。</p></li></ul><h5 id="3-2-3-负载均衡服务器"><a href="#3-2-3-负载均衡服务器" class="headerlink" title="3.2.3 负载均衡服务器"></a>3.2.3 负载均衡服务器</h5><p>负载均衡 <em>Load Balance</em> 意思就是将一份负载分摊到多个操作单元上进行执行</p><h4 id="3-3-配置文件介绍-nginx-1-13-9-conf-nginx-conf"><a href="#3-3-配置文件介绍-nginx-1-13-9-conf-nginx-conf" class="headerlink" title="3.3 配置文件介绍(nginx-1.13.9/conf/nginx.conf)"></a>3.3 配置文件介绍(nginx-1.13.9/conf/nginx.conf)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80; <span class="comment">#port</span></span><br><span class="line">    server_name  localhost; <span class="comment">#Server</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   html; <span class="comment">#Static resource directory</span></span><br><span class="line">        index  index.html index.htm; <span class="comment">#Default visit page</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="3-5-nginx与tomcat区别"><a href="#3-5-nginx与tomcat区别" class="headerlink" title="3.5 nginx与tomcat区别"></a>3.5 nginx与tomcat区别</h5><ul><li><p>存放的文件(资源)形式<br> Nginx是http服务器,只能解析静态文件 </p><p>Tomcat是web中间件(本质上是一个servlet),能解析jsp和静态文件</p></li><li><p>用途 </p><p>nginx可以作为反向代理服务器,负责均衡服务器,静态资源存放服务器 </p><p>tomcat能作为jsp容器使用,静态资源存放服务器</p></li><li><p>性能 </p><p>nginx支持5W+并发,tomcat的并发只能在200-400之间</p></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong># linux基础</strong></p><p><strong>## Linux基本命令</strong></p><p><strong>### 目录结构</strong></p><p>- root</p><p>​    - 超级管理员所在的目录</p><p>- home</p><p>​    - 普通用户所在的目录</p><p>- usr</p><p>​    - 安装用户文件所在的目录</p><p>- etc</p><p>​    - Linux系统管理和配置文件所在的目录</p><p><strong>### 目录操作</strong></p><p>- 查看</p><p>​    - ll</p><p>​    - ls</p><p>- 切换</p><p>​    - cd</p><p>​        - 绝对路径</p><p>​        - 相对路径</p><p>- 创建</p><p>​    - mkdir -p</p><p>- 修改/剪切</p><p>​    - mv</p><p>- 复制</p><p>​    - cp -r</p><p>- 删除</p><p>​    - rmdir -p</p><p><strong>### 文件操作</strong></p><p>- 创建</p><p>​    - touch</p><p>- 查看</p><p>​    - cat/more/less/head/tail</p><p>- 删除</p><p>​    - rm -rf</p><p>- 编辑</p><p>​    - vim</p><p>​        - 插入模式</p><p>​            - i</p><p>​        - 命令行模式 </p><p>​            - esc</p><p>​        - 底行模式</p><p>​            - :</p><p>​                - wq!</p><p>​                - q!</p><p><strong>### 压缩命令</strong></p><p>- 打包</p><p>​    - tar -zcvf</p><p>​        - xxxx.tar.gz</p><p>- 解压缩</p><p>​    - tar -zxvf</p><p>​        - xxxx.tar.gz</p><p><strong>### 文件权限</strong></p><p>- chmod -R 777</p><p><strong>### 其他命令</strong></p><p>- 查看进程</p><p>​    - ps -ef</p><p>- 杀死进程</p><p>​    - kill -9 PID</p><p>- 文本搜索</p><p>​    - grep -in</p><p>- 管道</p><p>​    - 一个命令的输出作为另一个命令的输入</p><p><strong>## Linux网络</strong></p><p><strong>### 网络</strong></p><p>- 查看ip</p><p>​    - ifconfig</p><p>​    - ip addr</p><p><strong>### 防火墙</strong></p><p>- 防火墙设置</p><p>​    - 关闭</p><p>​        - systemctl stop firewalld</p><p>​    - 关闭开机自启动</p><p>​        - systemctl disable firewalld</p><p>- 端口设置</p><p>​    - 放行端口</p><p>​        - firewall-cmd –zone=public –add-port=80/tcp –permanent</p><p>​    - 更新规则</p><p>​        - firewall-cmd –reload</p><p><strong>## Nginx</strong></p><p><strong>### 由战斗民族开发的一款高性能的 http 服务器/反向代理服务器</strong></p><p>- http服务器</p><p>- 反向代理（负载均衡）</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;linux基础&lt;/li&gt;
&lt;li&gt;Linux网络&lt;/li&gt;
&lt;li&gt;Nginx&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（六十一）</title>
    <link href="http://yoursite.com/2020/05/24/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/24/就业班学习笔记（六十一）/</id>
    <published>2020-05-24T01:02:20.000Z</published>
    <updated>2020-05-24T16:16:40.110Z</updated>
    
    <content type="html"><![CDATA[<ul><li>二维码</li><li>微信开发平台——支付</li><li>统一下单——生成预交易链接</li><li>支付结果通知</li><li>支付状态查询</li></ul><a id="more"></a><h1 id="一-二维码"><a href="#一-二维码" class="headerlink" title="一.二维码"></a>一.二维码</h1><h4 id="1-1-什么是二维码"><a href="#1-1-什么是二维码" class="headerlink" title="1.1 什么是二维码"></a>1.1 什么是二维码</h4><p>二维码又称QR Code，QR全称Quick Response，是一个近几年来移动设备上超流行的一种编码方式， 它比传统的Bar Code条形码能存更多的信息，也能表示更多的数据类型。</p><h4 id="1-2-二维码优势"><a href="#1-2-二维码优势" class="headerlink" title="1.2 二维码优势"></a>1.2 二维码优势</h4><ul><li><p>信息容量大, 可以容纳多达1850个大写字母或2710个数字或500多个汉字 </p></li><li><p>应用范围广, 支持文字,声音,图片,指纹等等</p></li><li><p>容错能力强, 即使图片出现部分破损也能使用</p></li><li><p>成本低, 容易制作</p></li></ul><h4 id="1-3-二维码容错级别"><a href="#1-3-二维码容错级别" class="headerlink" title="1.3 二维码容错级别"></a>1.3 二维码容错级别</h4><ul><li>L级(低) 7%的码字可以被恢复。 </li><li>M级(中) 15%的码字可以被恢复。 </li><li>Q级(四分)25%的码字可以被恢复。 </li><li>H级(高)30% 的码字可以被恢复。</li></ul><h4 id="1-4-二维码生成插件QR-Code"><a href="#1-4-二维码生成插件QR-Code" class="headerlink" title="1.4 二维码生成插件QR Code"></a>1.4 二维码生成插件QR Code</h4><p>就与jquery开发的一个插件，QRCode是一款基于HTML5 Canvas的纯JS二维码生成插件 下载地址:<a href="https://github.com/davidshimjs/qrcodejs">https://github.com/davidshimjs/qrcodejs</a></p><p>QRCode.js二维码插件的可用配置参数如下:</p><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>text</td><td>String</td><td>“<a href="https://www.baidu.com&quot;">https://www.baidu.com&quot;</a></td><td>需要编码为二维码的值</td></tr><tr><td>width</td><td>Number</td><td>256</td><td>二维码的宽度，单位像素。</td></tr><tr><td>height</td><td>Number</td><td>256</td><td>二维码的高度，单位像素。</td></tr><tr><td>colorLight</td><td>String</td><td>“white”</td><td>二维码的背景颜色。</td></tr><tr><td>colorDark</td><td>String</td><td>“black”</td><td>二维码的前景颜色。</td></tr><tr><td>correctLevel</td><td>String</td><td>QRCode.CorrectLevel.L</td><td>二维码的误差校正级别(L, M, Q, H)。</td></tr></tbody></table><ul><li><p>快速入门</p><ul><li><p>从资料中将js文件复制到项目中</p></li><li><p>QRCodeTest.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../../src/main/webapp/js/jquery-3.3.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../../src/main/webapp/js/qrcode.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"qrcode"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        // 参数一 div的id ， 参数二 将xxxx生成二维码</span><br><span class="line">        // let qrCode = new QRCode('qrCode','https://www.baidu.com');</span><br><span class="line">    </span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> qrcode = <span class="keyword">new</span> QRCode(<span class="built_in">document</span>.getElementById(<span class="string">"qrcode"</span>), &#123;</span></span><br><span class="line"><span class="actionscript">            text: <span class="string">"http://jindo.dev.naver.com/collie"</span>,</span></span><br><span class="line">            width: 128,</span><br><span class="line">            height: 128,</span><br><span class="line"><span class="actionscript">            colorDark : <span class="string">"#000000"</span>,</span></span><br><span class="line"><span class="actionscript">            colorLight : <span class="string">"#ffffff"</span>,</span></span><br><span class="line">            correctLevel : QRCode.CorrectLevel.H</span><br><span class="line">          &#125;);</span><br><span class="line">      <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="二-微信扫描支付简介"><a href="#二-微信扫描支付简介" class="headerlink" title="二.微信扫描支付简介"></a>二.微信扫描支付简介</h1><h4 id="2-1-微信扫码支付申请"><a href="#2-1-微信扫码支付申请" class="headerlink" title="2.1 微信扫码支付申请"></a>2.1 微信扫码支付申请</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">微信扫码支付是商户系统按微信支付协议生成支付二维码，用户再用微信“扫一扫”完成支付的模式。</span><br><span class="line">该模式适用于PC网站支付、实体店单品或订单支付、媒体广告支付等场景。</span><br><span class="line"></span><br><span class="line">申请步骤:</span><br><span class="line"></span><br><span class="line">- 第一步:注册公众号(类型须为:服务号)</span><br><span class="line"></span><br><span class="line">请根据营业执照类型选择以下主体注册:个体工商户| 企业&#x2F;公司| 政府| 媒体| 其他类型。</span><br><span class="line"></span><br><span class="line">- 第二步:认证公众号</span><br><span class="line"></span><br><span class="line">公众号认证后才可申请微信支付，认证费:300元&#x2F;次。</span><br><span class="line"></span><br><span class="line">- 第三步:提交资料申请微信支付</span><br><span class="line"></span><br><span class="line">登录公众平台，点击左侧菜单【微信支付】，开始填写资料等待审核，审核时间为1-5个工作日内。</span><br><span class="line"></span><br><span class="line">- 第四步:开户成功，登录商户平台进行验证</span><br><span class="line"></span><br><span class="line">资料审核通过后，请登录联系人邮箱查收商户号和密码，并登录商户平台填写财付通备付金打的小额资 金数额，完成账户验证。</span><br><span class="line"></span><br><span class="line">- 第五步:在线签署协议</span><br><span class="line"></span><br><span class="line">本协议为线上电子协议，签署后方可进行交易及资金结算，签署完立即生效。</span><br></pre></td></tr></table></figure><h4 id="2-2-开发文档"><a href="#2-2-开发文档" class="headerlink" title="2.2 开发文档"></a>2.2 开发文档</h4><ul><li><p>在线微信支付开发文档:</p><p><a href="https://pay.weixin.qq.com/wiki/doc/api/index.html">https://pay.weixin.qq.com/wiki/doc/api/index.html</a></p><img src="https://pay.weixin.qq.com/wiki/doc/api/img/chapter6_5_1.png"/></li><li><p>微信支付接口调用的整体思路:</p><ul><li><p>1、商户生成订单</p></li><li><p>2、商户调用微信下单接口，获取预交易的链接 </p></li><li><p>3、商户将链接生成二维码图片，展示给用户;</p></li><li><p>4、支付结果通知:</p><p>微信异步通知商户支付结果，商户告知微信支付接收情况</p><p>商户如果没有收到通知，可以调用接口，查询支付状态 </p></li><li><p>5、如果支付成功，发货，修改订单状态</p></li></ul></li></ul><h4 id="2-3-API"><a href="#2-3-API" class="headerlink" title="2.3 API"></a>2.3 API</h4><h5 id="2-3-1-统一下单"><a href="#2-3-1-统一下单" class="headerlink" title="2.3.1 统一下单"></a>2.3.1 统一下单</h5><ul><li><p>请求路径</p><p>POST , URL地址:<a href="https://api.mch.weixin.qq.com/pay/unifiedorder">https://api.mch.weixin.qq.com/pay/unifiedorder</a></p></li><li><p>请求参数</p><p><a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1</a></p><table><thead><tr><th align="left">字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td align="left">公众账号ID</td><td>appid</td><td>是</td><td>String(32)</td><td>wxd678efh56</td><td>微信支付分配的公众账号ID</td></tr><tr><td align="left">商户号</td><td>mch_id</td><td>是</td><td>String(32)</td><td>1230000109</td><td>微信支付分配的商户号</td></tr><tr><td align="left">随机字符串</td><td>nonce_str</td><td>是</td><td>String(32)</td><td>5K8264ILT</td><td>随机字符串，长度要求在32位以内</td></tr><tr><td align="left">签名</td><td>sign</td><td>是</td><td>String(32)</td><td>C380BEC2B</td><td>通过签名算法计算得出的签名值</td></tr><tr><td align="left">商品描述</td><td>body</td><td>是</td><td>String(128)</td><td>华为手机</td><td>商品简单描述</td></tr><tr><td align="left">商户订单号</td><td>out_trade_no</td><td>是</td><td>String(32)</td><td>20150806125</td><td>商户系统内部订单号</td></tr><tr><td align="left">标价金额</td><td>total_fee</td><td>是</td><td>Int</td><td>88</td><td>订单总金额，单位为分</td></tr><tr><td align="left">终端IP</td><td>spbill_create_ip</td><td>是</td><td>String(16)</td><td>123.12.12.123</td><td>APP和网页支付提交用户端ip，Native支付填调用微信支付API的机器IP。</td></tr><tr><td align="left">通知地址</td><td>notify_url</td><td>是</td><td>String(256)</td><td><a href="http://www.weixin.qq.com/wxpay/pay.php">http://www.weixin.qq.com/wxpay/pay.php</a></td><td>异步接收微信支付结果通知的回调地址，通知url必须为外网可访问的url，不能携带参数。</td></tr><tr><td align="left">交易类型</td><td>trade_type</td><td>是</td><td>String(16)</td><td>JSAPI</td><td>JSAPI 公众号支付；NATIVE 扫码支付</td></tr></tbody></table></li><li><p>这些参数大致分成3类</p><ul><li>appid、mch_id、spbill_create_ip、notify_url、trade_type:是商家自己的信息或固定数据，可以提前配置，因此无需每次请求单独配置，而是统一设置好即可。</li><li>nonce_str、sign:是为了保证数据安全而添加的验证数据，根据算法去生成，每次请求自动生成 即可。</li><li>body、out_trade_no、total_fee:订单相关信息，需要我们自己填写。</li></ul></li></ul><h5 id="2-3-2-支付结果通知"><a href="#2-3-2-支付结果通知" class="headerlink" title="2.3.2 支付结果通知"></a>2.3.2 支付结果通知</h5><p>支付完成后，微信会把相关支付结果和用户信息发送给商户，商户需要接收处理，并返回应答。 </p><p>微信服务会自动向 notify_url 地址发起POST请求:</p><ul><li><p>通知参数</p><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>返回状态码</td><td>return_code</td><td>是</td><td>String(16)</td><td>SUCCESS</td><td>SUCCESS/FAIL此字段是通信标识，非交易标识，交易是否成功需要查看trade_state来判断</td></tr><tr><td>返回信息</td><td>return_msg</td><td>是</td><td>String(128)</td><td>OK</td><td>当return_code为FAIL时返回信息为错误原因 ，例如签名失败参数格式校验错误</td></tr></tbody></table><p>通信成功，会返回下面信息：</p><table><thead><tr><th align="left">字段名</th><th align="left">变量名</th><th align="left">必填</th><th align="left">类型</th><th align="left">示例值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">商户订单号</td><td align="left">out_trade_no</td><td align="left">是</td><td align="left">String(32)</td><td align="left">1212321</td><td align="left">商户系统内部订单号，要求32个字符内</td></tr><tr><td align="left">业务结果</td><td align="left">result_code</td><td align="left">是</td><td align="left">String(16)</td><td align="left">SUCCESS</td><td align="left">SUCCESS/FAIL</td></tr></tbody></table></li><li><p>我们需要返回给微信的参数</p><table><thead><tr><th align="left">字段名</th><th align="left">变量名</th><th align="left">必填</th><th align="left">类型</th><th align="left">示例值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">返回状态码</td><td align="left">return_code</td><td align="left">是</td><td align="left">String(16)</td><td align="left">SUCCESS</td><td align="left">请按示例值填写</td></tr><tr><td align="left">返回信息</td><td align="left">return_msg</td><td align="left">是</td><td align="left">String(128)</td><td align="left">OK</td><td align="left">请按示例值填写</td></tr></tbody></table><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">return_code</span>&gt;</span>&lt;![CDATA[SUCCESS]]&gt;<span class="tag">&lt;/<span class="name">return_code</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">return_msg</span>&gt;</span>&lt;![CDATA[OK]]&gt;<span class="tag">&lt;/<span class="name">return_msg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-SDK"><a href="#2-4-SDK" class="headerlink" title="2.4 SDK"></a>2.4 SDK</h4><ul><li><p>官方已经提供了SDK，供我们使用</p><p><a href="https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=11_1">https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=11_1</a></p></li><li><p>但是微信没有提供maven仓库坐标，因此我们必须下载使用</p><p>自定义PayConfig实现，定义:公众号id、商户号、账户签名，打包</p></li><li><p>打包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn <span class="built_in">source</span>:jar install -Dmaven.test.skip=<span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>在travel中引入坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.wxpay<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>wxpay-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>简化API参数的Util</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 微信支付工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> WXPay wxPay;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支付成功回调地址</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String notifyUrl = <span class="string">"自行定义"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化微信支付</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            PayConfig payConfig = <span class="keyword">new</span> PayConfig();</span><br><span class="line">            payConfig.setAppID(<span class="string">"自行申请"</span>); <span class="comment">// 公众账号ID</span></span><br><span class="line">            payConfig.setMchID(<span class="string">"自行申请"</span>);<span class="comment">// 商户号</span></span><br><span class="line">            payConfig.setKey(<span class="string">"自行申请"</span>);<span class="comment">// 生成签名的密钥</span></span><br><span class="line">            wxPay = <span class="keyword">new</span> WXPay(payConfig);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// e.printStackTrace();</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成微信订单支付 url</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">createOrder</span><span class="params">(String orderId, Integer totalPay)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; data = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">// 商品描述</span></span><br><span class="line">        data.put(<span class="string">"body"</span>, <span class="string">"支付中心-商品支付"</span>);</span><br><span class="line">        <span class="comment">// 订单号</span></span><br><span class="line">        data.put(<span class="string">"out_trade_no"</span>, orderId);</span><br><span class="line">        <span class="comment">//金额，单位是分</span></span><br><span class="line">        data.put(<span class="string">"total_fee"</span>, totalPay.toString());</span><br><span class="line">        <span class="comment">//调用微信支付的终端IP</span></span><br><span class="line">        data.put(<span class="string">"spbill_create_ip"</span>, <span class="string">"127.0.0.1"</span>);</span><br><span class="line">        <span class="comment">//回调地址</span></span><br><span class="line">        data.put(<span class="string">"notify_url"</span>, notifyUrl);</span><br><span class="line">        <span class="comment">// 支付有效时间10分钟</span></span><br><span class="line">        Date now = <span class="keyword">new</span> Date();</span><br><span class="line">        Date now_10 = <span class="keyword">new</span> Date(now.getTime() + <span class="number">600000</span>); <span class="comment">//10分钟后的时间</span></span><br><span class="line">        SimpleDateFormat dateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMddHHmmss"</span>);<span class="comment">//可以方便地修改日期格式</span></span><br><span class="line">        String nowTime_10 = dateFormat.format(now_10);</span><br><span class="line">        data.put(<span class="string">"time_expire"</span>, nowTime_10);</span><br><span class="line">        <span class="comment">// 交易类型为扫码支付</span></span><br><span class="line">        data.put(<span class="string">"trade_type"</span>, <span class="string">"NATIVE"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 利用wxPay工具,完成下单</span></span><br><span class="line">        Map&lt;String, String&gt; result = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = wxPay.unifiedOrder(data);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"微信下单失败"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 校验业务状态</span></span><br><span class="line">        checkResultCode(result);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 下单成功，获取支付链接</span></span><br><span class="line">        String url = result.get(<span class="string">"code_url"</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(url)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"微信下单失败，支付链接为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查业务状态</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkResultCode</span><span class="params">(Map&lt;String, String&gt; result)</span> </span>&#123;</span><br><span class="line">        String resultCode = result.get(<span class="string">"result_code"</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"FAIL"</span>.equals(resultCode)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"【微信支付】微信支付业务失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-统一下单实现"><a href="#三-统一下单实现" class="headerlink" title="三.统一下单实现"></a>三.统一下单实现</h1><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><table><thead><tr><th>用户</th><th></th><th>Servet</th><th></th><th>微信平台</th></tr></thead><tbody><tr><td></td><td>提交订单➡</td><td>OrderServlet<br>将订单和订单项保存到数据库<br>重定向到微信支付的Servlet</td><td></td><td></td></tr><tr><td></td><td></td><td>PayServlet<br/>接收参数:订单号和支付金额<br/>调用支付工具类，发送请求，生成预交易url<br/>将数据设置到request域<br/>转发到pay.jsp页面</td><td>➡发送xml数据<br/>⬅返回xml数据</td><td></td></tr><tr><td></td><td>⬅响应</td><td>Pay.jsp<br/>二维码å</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li><p>OrderServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">createOrder</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  Date orderDate = <span class="keyword">new</span> Date();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1.接收请求参数</span></span><br><span class="line">  String addressId = req.getParameter(<span class="string">"addressId"</span>);</span><br><span class="line">  <span class="comment">// 前端数据分割，分别为：收货人，收货地址，收货电话</span></span><br><span class="line">  String[] addressArray = addressId.split(<span class="string">","</span>);</span><br><span class="line">  <span class="comment">// 2.获取session中的user</span></span><br><span class="line">  User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">  <span class="comment">// 3.获取redis中cart</span></span><br><span class="line">  Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">  <span class="comment">// 4.创建订单，设置基础数据</span></span><br><span class="line">  Order order = <span class="keyword">new</span> Order();</span><br><span class="line">  <span class="comment">// 订单号</span></span><br><span class="line">  order.setOid(IdUtil.simpleUUID());</span><br><span class="line">  <span class="comment">// 下单时间</span></span><br><span class="line">  order.setOrdertime(orderDate);</span><br><span class="line">  <span class="comment">// 订单总金额</span></span><br><span class="line">  order.setTotal(cart.getCartTotal());</span><br><span class="line">  <span class="comment">// 未支付订单</span></span><br><span class="line">  order.setState(<span class="number">0</span>);</span><br><span class="line">  <span class="comment">// 收货人</span></span><br><span class="line">  order.setContact(addressArray[<span class="number">0</span>]);</span><br><span class="line">  <span class="comment">// 收货地址</span></span><br><span class="line">  order.setAddress(addressArray[<span class="number">1</span>]);</span><br><span class="line">  <span class="comment">// 收货电话</span></span><br><span class="line">  order.setTelephone(addressArray[<span class="number">2</span>]);</span><br><span class="line">  <span class="comment">// 为了简化所属用户操作，我们可以直接设置uid</span></span><br><span class="line">  order.setUid(currentUser.getUid());</span><br><span class="line">  <span class="comment">// 5.遍历购物项，创建订单项</span></span><br><span class="line">  List&lt;OrderItem&gt; orderItemList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">  OrderItem orderItem = <span class="keyword">null</span>;</span><br><span class="line">  <span class="comment">// 遍历购物项</span></span><br><span class="line">  <span class="keyword">for</span> (CartItem cartItem : cart.getCartItemMap().values()) &#123;</span><br><span class="line">    <span class="comment">// 创建订单项</span></span><br><span class="line">    orderItem = <span class="keyword">new</span> OrderItem();</span><br><span class="line">    <span class="comment">// 下单时间</span></span><br><span class="line">    orderItem.setItemtime(orderDate);</span><br><span class="line">    <span class="comment">// 未支付</span></span><br><span class="line">    orderItem.setState(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">// 数量</span></span><br><span class="line">    orderItem.setNum(cartItem.getNum());</span><br><span class="line">    <span class="comment">// 商品小计</span></span><br><span class="line">    orderItem.setSubtotal(cartItem.getSubTotal());</span><br><span class="line">    <span class="comment">// 商品rid ，简化数据库操作</span></span><br><span class="line">    orderItem.setRid(cartItem.getRoute().getRid());</span><br><span class="line">    <span class="comment">// 订单oid，简化数据操作</span></span><br><span class="line">    orderItem.setOid(order.getOid());</span><br><span class="line">    <span class="comment">// 添加到订单项集合中</span></span><br><span class="line">    orderItemList.add(orderItem);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 将订单项集合关联到订单实体中</span></span><br><span class="line">  order.setOrderItemList(orderItemList);</span><br><span class="line">  <span class="comment">// 6.调用service，保存到数据库</span></span><br><span class="line">  orderService.save(order);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 7.清空购物车</span></span><br><span class="line">  Jedis jedis = JedisUtils.getJedis();</span><br><span class="line">  jedis.del(<span class="string">"cart_"</span>+currentUser.getUsername());</span><br><span class="line">  jedis.close();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 8.重定向支付页面</span></span><br><span class="line">  <span class="comment">//        resp.sendRedirect(req.getContextPath()+"/pay.jsp");</span></span><br><span class="line">  resp.sendRedirect(req.getContextPath()+<span class="string">"/PayServlet?action=createUrl&amp;oid="</span>+order.getOid()+<span class="string">"&amp;price="</span>+order.getTotal());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>PayServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/PayServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xx</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用微信平台，生成预交易链接</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">createUrl</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String oid = req.getParameter(<span class="string">"oid"</span>);</span><br><span class="line">        String price = req.getParameter(<span class="string">"price"</span>);</span><br><span class="line">        <span class="comment">// 2.调用微信平台，生成预交易链接</span></span><br><span class="line">        String pay_url = PayUtils.createOrder(oid, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.将数据设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"oid"</span>,oid);</span><br><span class="line">        req.setAttribute(<span class="string">"price"</span>,price);</span><br><span class="line">        req.setAttribute(<span class="string">"pay_url"</span>,pay_url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.转发到支付页面</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/pay.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>pay.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/webbase.css"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/pages-weixinpay.css"</span>&gt;</span><br><span class="line">    &lt;title&gt;微信支付&lt;/title&gt;</span><br><span class="line">    &lt;script src="$&#123;pageContext.request.contextPath&#125;/js/qrcode.min.js"&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"header.jsp"</span>%&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container-fluid"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"cart py-container"</span>&gt;</span><br><span class="line">        &lt;!--主内容--&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout py-container  pay"</span>&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-tit"</span>&gt;</span><br><span class="line">            &lt;h4 class="fl tit-txt"&gt;&lt;span class="success-icon"&gt;&lt;/span&gt;&lt;span  class="success-info"&gt;订单提交成功，请您及时付款！订单号：$&#123;oid&#125;&lt;/span&gt;&lt;/h4&gt;</span><br><span class="line">            &lt;span class="fr"&gt;&lt;em class="sui-lead"&gt;应付金额：&lt;/em&gt;&lt;em  class="orange money"&gt;￥$&#123;price&#125;&lt;/em&gt;元&lt;/span&gt;</span><br><span class="line">            &lt;div class="clearfix"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-steps"</span>&gt;</span><br><span class="line">            &lt;div class="fl weixin"&gt;微信支付&lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl sao"</span>&gt;</span><br><span class="line">              &lt;p class="red" style="padding-bottom: 40px"&gt;二维码已过期，刷新页面重新获取二维码。&lt;/p&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl code"</span>&gt;</span><br><span class="line">                &lt;div id="qrCode"&gt;&lt;/div&gt;</span><br><span class="line">                &lt;script&gt;</span><br><span class="line">                  let qrCode=<span class="keyword">new</span> QRCode(<span class="string">'qrCode'</span>,<span class="string">'$&#123;pay_url&#125;'</span>)</span><br><span class="line">                &lt;/script&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"saosao"</span>&gt;</span><br><span class="line">                  &lt;p&gt;请使用微信扫一扫&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;扫描二维码支付&lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl"</span> style=<span class="string">"background:url(./img/phone-bg.png) no-repeat;width:350px;height:400px;margin-left:40px"</span>&gt;</span><br><span class="line"></span><br><span class="line">              &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="clearfix"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--引入尾部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"footer.jsp"</span>%&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-支付结果通知实现"><a href="#四-支付结果通知实现" class="headerlink" title="四.支付结果通知实现"></a>四.支付结果通知实现</h1><h4 id="4-1-notify-url"><a href="#4-1-notify-url" class="headerlink" title="4.1 notify_url"></a>4.1 notify_url</h4><table><thead><tr><th>通知地址</th><th>notify_url</th><th>是</th><th>String(256)</th><th><a href="http://www.weixin.qq.com/wxpay/pay.php">http://www.weixin.qq.com/wxpay/pay.php</a></th><th>异步接收微信支付结果通知的回调地址，通知url必须为外网可访问的url，不能携带参数。</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>这个地址是在支付成功后的异步结果通知。</p><p>官网介绍如下: 支付完成后，微信会把相关支付结果和用户信息发送给商户，商户需要接收处理，并返回应答。 </p><p>所以，此处的地址必须是一个外网可访问地址，而且我们要定义好回调的处理接口。</p><p> <a href="http://localhost:8080/travel/pay/notify">http://localhost:8080/travel/pay/notify</a> </p><p><strong>注意</strong>:通知url必须为直接可访问的url，不能携带参数</p><h4 id="4-2-内网穿透"><a href="#4-2-内网穿透" class="headerlink" title="4.2 内网穿透"></a>4.2 内网穿透</h4><ul><li><p>内网穿透:</p><p>让外网能访问你本地的应用，例如在外网打开你本地<a href="http://127.0.0.1的指向Web站点">http://127.0.0.1的指向Web站点</a></p></li><li><p>配置url回调地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> WXPay wxPay;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支付成功回调地址</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String notifyUrl = <span class="string">"http://xxxxxxxx.xxxxx.xxx/travel/PayNotifyServlet"</span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-需求分析"><a href="#4-3-需求分析" class="headerlink" title="4.3 需求分析"></a>4.3 需求分析</h4><table><thead><tr><th>用户</th><th>➡</th><th>微信平台</th><th>➡</th><th><a href="http://xxxxxxxx.xxxxx.xxx/travel/PayNotifyServlet">http://xxxxxxxx.xxxxx.xxx/travel/PayNotifyServlet</a></th></tr></thead><tbody><tr><td></td><td></td><td>微信平台受到钱后，根据发送时指定的回调地址，返回支付成功信息</td><td></td><td>@WebServlet(“/PayNotifyServlet”)<br>接受请求xml，转为map<br/>调用service，修改订单状态<br/>返回接受成功ok消息</td></tr><tr><td></td><td></td><td></td><td></td><td>OrderServlet<br>根据oid修改state(OrderDao)<br>根据oid修改state(OrderItemDao)</td></tr></tbody></table><h4 id="4-4-代码实现"><a href="#4-4-代码实现" class="headerlink" title="4.4 代码实现"></a>4.4 代码实现</h4><ul><li><p>PayNotifyServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/PayNotifyServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayNotifyServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xxx</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  OrderService orderService= (OrderService) BeanFactory.getBean(<span class="string">"orderService"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.接收请求参数(xml)</span></span><br><span class="line">    ServletInputStream in = request.getInputStream();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.将xml转为java对象</span></span><br><span class="line">    XmlMapper xmlMapper = <span class="keyword">new</span> XmlMapper();</span><br><span class="line">    Map param = xmlMapper.readValue(in, Map<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.调用orderService，修改订单状态</span></span><br><span class="line">    orderService.updateState(param);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.返回微信平台，接收成功</span></span><br><span class="line">    Map&lt;String , String &gt; result = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    result.put(<span class="string">"return_code"</span>,<span class="string">"SUCESS"</span>);</span><br><span class="line">    result.put(<span class="string">"return_msg"</span>,<span class="string">"OK"</span>);</span><br><span class="line"></span><br><span class="line">    String xml = xmlMapper.writeValueAsString(result);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将map转为xml</span></span><br><span class="line">    response.setContentType(<span class="string">"application/xml;charset=utf-8"</span>);</span><br><span class="line">    response.getWriter().write(xml);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(Map&lt;String, String&gt; param)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateState</span><span class="params">(Map&lt;String, String&gt; param)</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 1.获取订单号</span></span><br><span class="line">    String oid = param.get(<span class="string">"out_trade_no"</span>);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 2.修改订单状态</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    OrderDao orderDao = sqlSession.getMapper(OrderDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    OrderItemDao orderItemDao = sqlSession.getMapper(OrderItemDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 修改订单</span></span><br><span class="line">    orderDao.updateState(oid);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 修改订单项</span></span><br><span class="line">    orderItemDao.updateState(oid);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(String oid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">        INSERT INTO tab_order(oid,ordertime,total,state,address,contact,telephone,uid)</span><br><span class="line">        VALUES (#&#123;oid&#125;,#&#123;ordertime&#125;,#&#123;total&#125;,#&#123;state&#125;,#&#123;address&#125;,#&#123;contact&#125;,#&#123;telephone&#125;,#&#123;uid&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateState"</span>&gt;</span></span><br><span class="line">        UPDATE tab_order SET state=1 WHERE oid=#&#123;oid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderItemDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderItemDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(OrderItem orderItem)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(String oid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderItemDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderItemDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">        INSERT INTO tab_orderitem(itemtime,state,num,subtotal,rid,oid)</span><br><span class="line">        VALUES (#&#123;itemtime&#125;,#&#123;state&#125;,#&#123;num&#125;,#&#123;subtotal&#125;,#&#123;rid&#125;,#&#123;oid&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateState"</span>&gt;</span></span><br><span class="line">        UPDATE tab_orderitem SET state=1 WHERE oid =#&#123;oid&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="五-支付状态查询"><a href="#五-支付状态查询" class="headerlink" title="五.支付状态查询"></a>五.支付状态查询</h1><h4 id="5-1-需求分析"><a href="#5-1-需求分析" class="headerlink" title="5.1 需求分析"></a>5.1 需求分析</h4><p><img src="image-20200524114657431.png" alt=""></p><h4 id="5-2-代码实现"><a href="#5-2-代码实现" class="headerlink" title="5.2 代码实现"></a>5.2 代码实现</h4><ul><li><p>pay.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/webbase.css"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/pages-weixinpay.css"</span>&gt;</span><br><span class="line">    &lt;title&gt;微信支付&lt;/title&gt;</span><br><span class="line">    &lt;script src="$&#123;pageContext.request.contextPath&#125;/js/qrcode.min.js"&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"header.jsp"</span>%&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container-fluid"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"cart py-container"</span>&gt;</span><br><span class="line">        &lt;!--主内容--&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout py-container  pay"</span>&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-tit"</span>&gt;</span><br><span class="line">            &lt;h4 class="fl tit-txt"&gt;&lt;span class="success-icon"&gt;&lt;/span&gt;&lt;span  class="success-info"&gt;订单提交成功，请您及时付款！订单号：$&#123;oid&#125;&lt;/span&gt;&lt;/h4&gt;</span><br><span class="line">            &lt;span class="fr"&gt;&lt;em class="sui-lead"&gt;应付金额：&lt;/em&gt;&lt;em  class="orange money"&gt;￥$&#123;price&#125;&lt;/em&gt;元&lt;/span&gt;</span><br><span class="line">            &lt;div class="clearfix"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-steps"</span>&gt;</span><br><span class="line">            &lt;div class="fl weixin"&gt;微信支付&lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl sao"</span>&gt;</span><br><span class="line">              &lt;p class="red" style="padding-bottom: 40px"&gt;二维码已过期，刷新页面重新获取二维码。&lt;/p&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl code"</span>&gt;</span><br><span class="line">                &lt;div id="qrCode"&gt;&lt;/div&gt;</span><br><span class="line">                &lt;script&gt;</span><br><span class="line">                  let qrCode=<span class="keyword">new</span> QRCode(<span class="string">'qrCode'</span>,<span class="string">'$&#123;pay_url&#125;'</span>)</span><br><span class="line">                &lt;/script&gt;</span><br><span class="line">                &lt;%--                        &lt;img src=<span class="string">"img/erweima.png"</span> alt=<span class="string">""</span>&gt;--%&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"saosao"</span>&gt;</span><br><span class="line">                  &lt;p&gt;请使用微信扫一扫&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;扫描二维码支付&lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl"</span> style=<span class="string">"background:url(./img/phone-bg.png) no-repeat;width:350px;height:400px;margin-left:40px"</span>&gt;</span><br><span class="line"></span><br><span class="line">              &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="clearfix"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      <span class="comment">// 每间隔五秒查询支付状态</span></span><br><span class="line">      setInterval(function () &#123;</span><br><span class="line">        <span class="comment">// 发送ajax请求</span></span><br><span class="line">        let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/OrderServlet'</span>;</span><br><span class="line">        let data = <span class="string">'action=findState&amp;oid=$&#123;oid&#125;'</span></span><br><span class="line">        $.post(url,data,function (resp) &#123;</span><br><span class="line">          <span class="keyword">if</span>(resp.success)&#123;</span><br><span class="line">            <span class="comment">// 支付成功</span></span><br><span class="line">            location.href=<span class="string">'$&#123;pageContext.request.contextPath&#125;/pay_success.jsp'</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,<span class="number">5000</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 如果用户10分钟内未支付，则跳转失败页面</span></span><br><span class="line">      setTimeout(function () &#123;</span><br><span class="line">        location.href=<span class="string">'$&#123;pageContext.request.contextPath&#125;/pay_fail.jsp'</span>;</span><br><span class="line">      &#125;,<span class="number">1000</span>*<span class="number">10</span>*<span class="number">60</span>)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;!--引入尾部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"footer.jsp"</span>%&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>OrderSerlvet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询订单支付状态</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findState</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 1.接收请求参数 oid</span></span><br><span class="line">  String oid = req.getParameter(<span class="string">"oid"</span>);</span><br><span class="line">  <span class="comment">// 2.调用service查询</span></span><br><span class="line">  ResultInfo resultInfo = orderService.findState(oid);</span><br><span class="line">  <span class="comment">// 3.转为json响应到客户的</span></span><br><span class="line">  javaToJsonWriteClient(resultInfo,resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(Map&lt;String, String&gt; param)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">ResultInfo <span class="title">findState</span><span class="params">(String oid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ResultInfo <span class="title">findState</span><span class="params">(String oid)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    OrderDao orderDao = sqlSession.getMapper(OrderDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 查询dao</span></span><br><span class="line">    Order order = orderDao.findByOid(oid);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span>(order.getState() == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">// 未支付</span></span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 已支付</span></span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> resultInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(String oid)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">Order <span class="title">findByOid</span><span class="params">(String oid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByOid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Order"</span>&gt;</span></span><br><span class="line">  SELECT * FROM tab_order WHERE oid=#&#123;oid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="六-日志记录功能"><a href="#六-日志记录功能" class="headerlink" title="六.日志记录功能"></a>六.日志记录功能</h1><h4 id="6-1-介绍"><a href="#6-1-介绍" class="headerlink" title="6.1 介绍"></a>6.1 介绍</h4><h4 id="6-2-方法增强"><a href="#6-2-方法增强" class="headerlink" title="6.2 方法增强"></a>6.2 方法增强</h4><ul><li>继承</li><li>装饰器模式:必须手动编写装饰器实现类，进行增强</li><li>代理模式:不需要手动编写增强的实现类</li></ul><h4 id="6-3-动态代理"><a href="#6-3-动态代理" class="headerlink" title="6.3 动态代理"></a>6.3 动态代理</h4><ul><li><p>jdk动态代理:要求目标对象和代理对象实现同一个接口【基于接口来创建代理类】</p></li><li><p>cglib动态代理:可以对任意的普通类创建出代理对象【基于继承的思想】</p><p><img src="image-20200524141817661.png" alt=""></p></li></ul><p>sun公司提供了一套工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Object proxy =</span><br><span class="line">  Proxy.newProxyInstance(ClassLoader loader, 类&lt;?&gt;[] interfaces,</span><br><span class="line">                         InvocationHandler h);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">参数:</span></span><br><span class="line"><span class="comment">1.loader:使用目标对象的类加载器 2.interfaces:使用目标对象的实现接口数组 3.h:处理器接口(实现方法增强的业务逻辑细节)</span></span><br><span class="line"><span class="comment">匿名内部类、lambda表达式 返回值:代理对象</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li><p>回顾动态代理的实现思路</p><ul><li><p>定义接口规范</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TargetInterface</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>定义目标对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LiangLiang</span> <span class="keyword">implements</span> <span class="title">TargetInterface</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span> </span>&#123; System.out.println(<span class="string">"Singing...."</span>);</span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建代理对象并测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyTest</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 传统方式</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    TargetInterface liangLiang = <span class="keyword">new</span> LiangLiang();</span><br><span class="line">    liangLiang.sing(); &#125;</span><br><span class="line">  <span class="comment">// 动态代理</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 1.创建目标对象</span></span><br><span class="line">    TargetInterface liangLiang = <span class="keyword">new</span> LiangLiang(); <span class="comment">// 2.创建代理对象</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">1.loader:目标对象的类加载器 2.interfaces:目标对象实现接口数组 3.h:处理器接口(实现增强的方法细节)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    ClassLoader classLoader = liangLiang.getClass().getClassLoader(); Class&lt;?&gt;[] interfaces = liangLiang.getClass().getInterfaces(); TargetInterface xiaolu = (TargetInterface)</span><br><span class="line">      Proxy.newProxyInstance(classLoader, interfaces, <span class="keyword">new</span> InvocationHandler() &#123; <span class="comment">// 3.编写增强的实现逻辑(invoke是代理对象所有方法的入口)</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">参数:</span></span><br><span class="line"><span class="comment">1.proxy:工具类生产的代理对象(xiaolu) 2.method:当前用户执行的某个具体方法对象 3.args:当前用户执行某个具体方法传递的实际参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span></span></span><br><span class="line"><span class="function">          <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">// 实现方法的增强</span></span><br><span class="line">          <span class="keyword">if</span> (<span class="string">"sing"</span>.equals(method.getName())) &#123;</span><br><span class="line">            System.out.println(<span class="string">"小路晚上找你谈生意..."</span>); &#125;</span><br><span class="line">          <span class="comment">// 真正执行者还是目标哦对象</span></span><br><span class="line">          <span class="keyword">return</span> method.invoke(liangLiang, args); &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="comment">// 调用代理对象的方法(实现了对sing方法的增强)</span></span><br><span class="line">    xiaolu.sing(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="6-4-日志记录实现"><a href="#6-4-日志记录实现" class="headerlink" title="6.4 日志记录实现"></a>6.4 日志记录实现</h4><h5 id="6-4-1-分析"><a href="#6-4-1-分析" class="headerlink" title="6.4.1 分析"></a>6.4.1 分析</h5><p><img src="image-20200524145558471.png" alt=""></p><h5 id="6-4-2-实现"><a href="#6-4-2-实现" class="headerlink" title="6.4.2 实现"></a>6.4.2 实现</h5><ul><li><p>JdkProxyFactory</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdkProxyFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 提供一个生产日志记录的代理对象方法</span></span><br><span class="line">  <span class="comment">// target 目标对象</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">createProxy</span><span class="params">(Object target)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// proxy 代理对象</span></span><br><span class="line">    Object proxy = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据工具类，创建代理对象</span></span><br><span class="line">    ClassLoader classLoader = target.getClass().getClassLoader();</span><br><span class="line">    Class&lt;?&gt;[] interfaces = target.getClass().getInterfaces();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实现对方法的增强</span></span><br><span class="line">    Proxy.newProxyInstance(classLoader, interfaces, <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="comment">// 实现日志记录</span></span><br><span class="line">        StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        stringBuffer.append(<span class="string">"[Action Time]: "</span> + LocalDateTime.now());</span><br><span class="line"></span><br><span class="line">        stringBuffer.append(<span class="string">"[Implementation Target Class]"</span> + target.getClass().getName());</span><br><span class="line"></span><br><span class="line">        stringBuffer.append(<span class="string">"[Implementation Target Method]: "</span>+method.getName());</span><br><span class="line"></span><br><span class="line">        stringBuffer.append(<span class="string">"[Method Actual Args]: "</span>+ Arrays.toString(args));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 先调用目标对象原有的功能</span></span><br><span class="line">        Object invoke = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          invoke = method.invoke(target,args);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">          stringBuffer.append(<span class="string">"[Exception Information]: "</span>+ e.getCause().getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将本次日志信息保存到日志文件</span></span><br><span class="line">        LocalDate localDate = LocalDate.now();</span><br><span class="line"></span><br><span class="line">        String format = localDate.format(DateTimeFormatter.ofPattern(<span class="string">"yyyy-M-dd"</span>));</span><br><span class="line"></span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"/Users/swzxsyh/Program"</span> + format + <span class="string">".log"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用高效字符缓冲流 </span></span><br><span class="line">        BufferedWriter bufferedWriter = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(file, <span class="keyword">true</span>), <span class="string">"UTF-8"</span>));</span><br><span class="line"></span><br><span class="line">        bufferedWriter.write(stringBuffer.toString());</span><br><span class="line">        bufferedWriter.newLine();</span><br><span class="line">        bufferedWriter.close();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> invoke;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> proxy;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>BeanFacotry</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.Document;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.Element;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.io.SAXReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        UserService userService = (UserService) BeanFactory.getBean(<span class="string">"userService"</span>);</span><br><span class="line">        System.out.println(userService.findByUsername(<span class="string">"swzxsyh"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        Object result = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream in = BeanFactory.class.getClassLoader().getResourceAsStream("beans.xml");</span><br><span class="line"></span><br><span class="line">            SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line"></span><br><span class="line">            Document document = saxReader.read(in);</span><br><span class="line"></span><br><span class="line">            String xpath = <span class="string">"//bean[@id='"</span> + id + <span class="string">"']"</span>;</span><br><span class="line"></span><br><span class="line">            Element element = (Element) document.selectSingleNode(xpath);</span><br><span class="line"></span><br><span class="line">            String className = element.attributeValue(<span class="string">"class"</span>);</span><br><span class="line"></span><br><span class="line">            Class&lt;?&gt; clazz = Class.forName(className);</span><br><span class="line"></span><br><span class="line">            result = clazz.newInstance();</span><br><span class="line"></span><br><span class="line">            result = JdkProxyFactory.createLogProxy(result);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>观察日志文件路径</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong># 微信支付&amp;日志记录</strong></p><p><strong>## 二维码</strong></p><p><strong>### QRCode二维码生成插件</strong></p><p><strong>## 微信扫码支付简介</strong></p><p><strong>### 申请商户号（略）</strong></p><p><strong>### 开发文档</strong></p><p>- 1、生成订单</p><p>- 2、调用微信下单接口，生成链接。</p><p>- 3、根据链接生成二维码图片</p><p>- 4、支付成功后修改订单状态</p><p><strong>### API</strong></p><p>- 统一下单</p><p>- 支付结果通知</p><p><strong>### SDK</strong></p><p>- 需要手动下载，安装到本地仓库</p><p>​    - 个别同学使用自己仓库，必须操作</p><p><strong>## 统一下单实现</strong></p><p><strong>### 写死1分钱</strong></p><p><strong>## 支付结果通知实现</strong></p><p><strong>### 内网穿透</strong></p><p>- NATAPP</p><p>​    - 注意：生成的外网地址，可能会随机切换</p><p><strong>## 支付状态查询</strong></p><p><strong>### 前端使用定时器</strong></p><p>- 用户支付，跳转到成功页面</p><p>- 超过10分钟未支付，跳转到失败页面</p><p><strong>## 日志记录功能</strong></p><p><strong>### 使用动态代理，实现对所有业务层方法增强，实现日志记录</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;二维码&lt;/li&gt;
&lt;li&gt;微信开发平台——支付&lt;/li&gt;
&lt;li&gt;统一下单——生成预交易链接&lt;/li&gt;
&lt;li&gt;支付结果通知&lt;/li&gt;
&lt;li&gt;支付状态查询&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（六十）</title>
    <link href="http://yoursite.com/2020/05/22/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/22/就业班学习笔记（六十）/</id>
    <published>2020-05-21T17:05:31.000Z</published>
    <updated>2020-05-23T16:52:58.883Z</updated>
    
    <content type="html"><![CDATA[<ul><li>购物车</li><li>订单</li></ul><a id="more"></a><h1 id="一-购物车流程分析"><a href="#一-购物车流程分析" class="headerlink" title="一.购物车流程分析"></a>一.购物车流程分析</h1><ul><li>浏览商品</li><li>加入购物车(用户的购物车)</li><li>查看购物车</li><li>商品结算(收货地址、支付方式、商品清单) ——cart.jsp</li><li>生成订单(支付状态:未支付0、已支付:1)——order_info.jsp</li><li>支付(微信、支付宝)——pay.jsp</li><li>支付结果</li></ul><h1 id="二-设计购物车"><a href="#二-设计购物车" class="headerlink" title="二.设计购物车"></a>二.设计购物车</h1><h4 id="2-1-购物车功能分析"><a href="#2-1-购物车功能分析" class="headerlink" title="2.1 购物车功能分析"></a>2.1 购物车功能分析</h4><p><img src="image-20200522093646704.png" alt=""></p><h4 id="2-2-CartItem"><a href="#2-2-CartItem" class="headerlink" title="2.2 CartItem"></a>2.2 CartItem</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CartItem</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> Route route; <span class="comment">// 商品 private Integer num; // 数量 private Double subTotal; // 小计</span></span><br><span class="line">  <span class="comment">// 重写小计get方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Double <span class="title">getSubTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125; &#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-Cart"><a href="#2-3-Cart" class="headerlink" title="2.3 Cart"></a>2.3 Cart</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cart</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> Integer cartNum;</span><br><span class="line">  <span class="keyword">private</span> Double cartTotal;</span><br><span class="line">  <span class="keyword">private</span> LinkedHashMap&lt;String, CartItem&gt; cartItemMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Integer <span class="title">getCartNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cartNum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (CartItem cartItem : cartItemMap.values()) &#123;</span><br><span class="line">      cartNum += cartItem.getNum();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cartNum;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Double <span class="title">getCartTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    cartTotal = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (CartItem cartItem : cartItemMap.values()) &#123;</span><br><span class="line">      cartTotal += cartItem.getSubTotal();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cartTotal;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-购物车工具类"><a href="#2-4-购物车工具类" class="headerlink" title="2.4 购物车工具类"></a>2.4 购物车工具类</h4><p><img src="image-20200522095258837.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CartUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setCartToRedis</span><span class="params">(User user, Cart cart)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Jedis jedis = JedisUtils.getJedis();</span><br><span class="line"></span><br><span class="line">            String json = objectMapper.writeValueAsString(cart);</span><br><span class="line"></span><br><span class="line">            jedis.set(<span class="string">"cart_"</span> + user.getUsername(), json);</span><br><span class="line"></span><br><span class="line">            jedis.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Cart <span class="title">getCartForRedis</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        Cart cart = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        Jedis jedis = JedisUtils.getJedis();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (jedis.exists(<span class="string">"cart_"</span> + user.getUsername())) &#123;</span><br><span class="line">            String json = jedis.get(<span class="string">"cart_"</span> + user.getUsername());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                cart = objectMapper.readValue(json, Cart<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cart = <span class="keyword">new</span> Cart();</span><br><span class="line">        &#125;</span><br><span class="line">        jedis.close();</span><br><span class="line">        <span class="keyword">return</span> cart;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三-加入购物车"><a href="#三-加入购物车" class="headerlink" title="三.加入购物车"></a>三.加入购物车</h1><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><p><img src="image-20200522102212385.png" alt=""></p><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li><p>route_detail.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"collect"</span>&gt;</span><br><span class="line">    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn"</span> href=<span class="string">"javascript:void(0)"</span> id=<span class="string">"addCart"</span>&gt;</span><br><span class="line">&lt;i class="glyphicon glyphicon-heart-empty"&gt;&lt;/i&gt;加入购物车&lt;/a&gt; &lt;/span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(<span class="string">'#addCart'</span>).click(function () &#123;</span><br><span class="line"><span class="comment">// 判断用户是否登录</span></span><br><span class="line"><span class="keyword">if</span> ($&#123;empty currentUser&#125;) &#123; <span class="comment">// 未登录</span></span><br><span class="line"><span class="comment">// 以代码方式触发登录按钮的点击事件，弹出模态框</span></span><br><span class="line">$(<span class="string">'#loginBtn'</span>).click() &#125; <span class="keyword">else</span> &#123;<span class="comment">// 已登录</span></span><br><span class="line"><span class="comment">// 获取数量</span></span><br><span class="line">let num = $(<span class="string">'#qty_item_1'</span>).val();</span><br><span class="line"><span class="comment">// 添加购物车请求 location.href='$&#123;pageContext.request.contextPath&#125;/CartServlet?</span></span><br><span class="line">action=addCart&amp;rid=$&#123;route.rid&#125;&amp;num=<span class="string">'+num; &#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CartServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CartServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CartServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RouteService routeService= (RouteService) BeanFactory.getBean(<span class="string">"routeService"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xxx</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加购物车</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">addCart</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String num = req.getParameter(<span class="string">"num"</span>);</span><br><span class="line">        String rid = req.getParameter(<span class="string">"rid"</span>);</span><br><span class="line">        <span class="comment">// 2.从redis中获取购物车</span></span><br><span class="line">        User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line"></span><br><span class="line">        Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">        <span class="comment">// 3.判断当前商品的购物项是否存在</span></span><br><span class="line">        LinkedHashMap&lt;String, CartItem&gt; cartItemMap = cart.getCartItemMap();</span><br><span class="line">        CartItem cartItem = cartItemMap.get(rid);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cartItem !=<span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 数量累加</span></span><br><span class="line">            cartItem.setNum(cartItem.getNum()+Integer.parseInt(num));</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 根据rid查询route对象</span></span><br><span class="line">            Route route = routeService.findDetail(rid);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建购物项对象</span></span><br><span class="line">            cartItem  = <span class="keyword">new</span> CartItem();</span><br><span class="line">            cartItem.setNum(Integer.parseInt(num));</span><br><span class="line">            cartItem.setRoute(route);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置到购物车中</span></span><br><span class="line">            cartItemMap.put(rid,cartItem);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 4.将购物车更新到redis中</span></span><br><span class="line">        CartUtils.setCartToRedis(currentUser,cart);</span><br><span class="line">        <span class="comment">// 5.将购物项设置到request域，展示给用户</span></span><br><span class="line">        req.setAttribute(<span class="string">"cartItem"</span>,cartItem);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6.转发到添加成功页面</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/cart_success.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>cart_success.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;td width=<span class="string">"180"</span> width=<span class="string">"40%"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"id"</span> value=<span class="string">"22"</span>&gt;</span><br><span class="line">  &lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;cartItem.route.rimage&#125;"</span> width=<span class="string">"170"</span> height=<span class="string">"100"</span>&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td width=<span class="string">"30%"</span>&gt;</span><br><span class="line">  &lt;a target="_blank"&gt;$&#123;cartItem.route.rname&#125;&lt;/a&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td width=<span class="string">"10%"</span>&gt;</span><br><span class="line">  ￥$&#123;cartItem.route.price&#125;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td width=<span class="string">"14%"</span>&gt;</span><br><span class="line">  × $&#123;cartItem.num&#125;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td width=<span class="string">"15%"</span>&gt;</span><br><span class="line">  &lt;span class="subtotal"&gt;￥$&#123;cartItem.subTotal&#125;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr &gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-查看购物车"><a href="#四-查看购物车" class="headerlink" title="四.查看购物车"></a>四.查看购物车</h1><h4 id="4-1-需求分析"><a href="#4-1-需求分析" class="headerlink" title="4.1 需求分析"></a>4.1 需求分析</h4><p><img src="image-20200522105420824.png" alt=""></p><h4 id="4-2-代码实现"><a href="#4-2-代码实现" class="headerlink" title="4.2 代码实现"></a>4.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/CartServlet?action=findAll" class="collection"&gt;购物车&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>CartServlet </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查看购物车</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.从session中获取user</span></span><br><span class="line">    User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">    <span class="comment">// 2.从redis中获取cart</span></span><br><span class="line">    Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">    <span class="comment">// 3.设置到request域</span></span><br><span class="line">    req.setAttribute(<span class="string">"cart"</span>,cart);</span><br><span class="line">    <span class="comment">// 4.转发到cart.jsp</span></span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/cart.jsp"</span>).forward(req,resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>cart.jsp </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;empty cart.cartItemMap&#125;"</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span> style=<span class="string">"margin: 100px 200px;text-align: center"</span>&gt;</span><br><span class="line">    购物车内暂时没有商品，登录后将显示您之前加入的商品</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;not empty cart.cartItemMap&#125;"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=<span class="string">"margin:0 auto; margin-top:20px"</span>&gt;</span><br><span class="line">      &lt;div style="font-weight: bold;font-size: 15px;margin-bottom: 10px"&gt;商品数量：$&#123;cart.cartNum&#125;&lt;/div&gt;</span><br><span class="line">      &lt;table <span class="class"><span class="keyword">class</span></span>=<span class="string">"table"</span>&gt;</span><br><span class="line">        &lt;tbody&gt;</span><br><span class="line">          &lt;tr bgcolor=<span class="string">"#f5f5f5"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"table-bordered"</span>&gt;</span><br><span class="line">            &lt;th&gt;图片&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;商品&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;价格&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;数量&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;小计&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">          &lt;c:forEach items=<span class="string">"$&#123;cart.cartItemMap&#125;"</span> <span class="keyword">var</span>=<span class="string">"entry"</span>&gt;</span><br><span class="line">            &lt;tr <span class="class"><span class="keyword">class</span></span>=<span class="string">"table-bordered"</span>&gt;</span><br><span class="line">              &lt;td width=<span class="string">"180"</span> width=<span class="string">"40%"</span>&gt;</span><br><span class="line">                &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"id"</span> value=<span class="string">"22"</span>&gt;</span><br><span class="line">                &lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;entry.value.route.rimage&#125;"</span> width=<span class="string">"170"</span></span><br><span class="line">                     height=<span class="string">"100"</span>&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td width=<span class="string">"30%"</span>&gt;</span><br><span class="line">                &lt;a target="_blank"&gt;$&#123;entry.value.route.rname&#125;&lt;/a&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td width=<span class="string">"10%"</span>&gt;</span><br><span class="line">                ￥ $&#123;entry.value.route.price&#125;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td width=<span class="string">"14%"</span>&gt;</span><br><span class="line">                × $&#123;entry.value.num&#125;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td width=<span class="string">"15%"</span>&gt;</span><br><span class="line">                &lt;span class="subtotal"&gt;¥ $&#123;entry.value.subTotal&#125;&lt;/span&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td&gt;</span><br><span class="line">                &lt;a href="$&#123;pageContext.request.contextPath&#125;/CartServlet?action=delCartItem&amp;rid=$&#123;entry.value.route.rid&#125;" class="delete"&gt;删除&lt;/a&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">          &lt;/c:forEach&gt;</span><br><span class="line">        &lt;/tbody&gt;</span><br><span class="line">      &lt;/table&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div style=<span class="string">"text-align:right;"</span>&gt;</span><br><span class="line">      商品金额: &lt;strong style="color:#ff6600;"&gt;￥$&#123;cart.cartTotal&#125;&lt;/strong&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div style=<span class="string">"text-align:right;margin-top:10px;margin-bottom:10px;"</span>&gt;</span><br><span class="line">      &lt;a href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/OrderServlet?action=orderInfo"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"button"</span> width=<span class="string">"100"</span> value=<span class="string">"结算"</span> name=<span class="string">"submit"</span> border=<span class="string">"0"</span> style=<span class="string">"background-color: #ea4a36;</span></span><br><span class="line"><span class="string">                                                                                    height:45px;width:120px;color:white;font-size: 15px"</span>&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="五-删除购物车"><a href="#五-删除购物车" class="headerlink" title="五.删除购物车"></a>五.删除购物车</h1><h4 id="5-1-需求分析"><a href="#5-1-需求分析" class="headerlink" title="5.1 需求分析"></a>5.1 需求分析</h4><p><img src="image-20200522112515521.png" alt=""></p><h4 id="5-2-代码实现"><a href="#5-2-代码实现" class="headerlink" title="5.2 代码实现"></a>5.2 代码实现</h4><ul><li><p>cart.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/CartServlet?action=delCartItem&amp;rid=$&#123;entry.value.route.rid&#125;" class="delete"&gt;删除&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CartServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除购物项</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">delCartItem</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 1.获取请求参数</span></span><br><span class="line">  String rid = req.getParameter(<span class="string">"rid"</span>);</span><br><span class="line">  <span class="comment">// 2.获取session中user</span></span><br><span class="line">  User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3.获取redis中cart</span></span><br><span class="line">  Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.删除购物项</span></span><br><span class="line">  cart.getCartItemMap().remove(rid);</span><br><span class="line">  <span class="comment">// 5.将cart更新到redis中</span></span><br><span class="line">  CartUtils.setCartToRedis(currentUser,cart);</span><br><span class="line">  <span class="comment">// 6.重定向查看购物车</span></span><br><span class="line">  resp.sendRedirect(req.getContextPath()+<span class="string">"/CartServlet?action=findAll"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="六-商品结算"><a href="#六-商品结算" class="headerlink" title="六.商品结算"></a>六.商品结算</h1><h4 id="6-1-需求分析"><a href="#6-1-需求分析" class="headerlink" title="6.1  需求分析"></a>6.1  需求分析</h4><p><img src="image-20200522114313070.png" alt=""></p><h4 id="6-2-代码实现"><a href="#6-2-代码实现" class="headerlink" title="6.2 代码实现"></a>6.2 代码实现</h4><ul><li><p>cart.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/OrderServlet?action=orderInfo"</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/OrderServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    AddressService addressService = (AddressService) BeanFactory.getBean(<span class="string">"addressService"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">XXX</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 商品结算</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">orderInfo</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.获取session中user</span></span><br><span class="line">        User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">        <span class="comment">// 2.查询收货地址</span></span><br><span class="line">        List&lt;Address&gt; addressList = addressService.findByUid(currentUser.getUid());</span><br><span class="line">        <span class="comment">// 3.查询cart</span></span><br><span class="line">        Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">        <span class="comment">// 4.设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"addressList"</span>, addressList);</span><br><span class="line">        req.setAttribute(<span class="string">"cart"</span>, cart);</span><br><span class="line">        <span class="comment">// 5.转发到 order_info</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/order_info.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>order_info.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/webbase.css"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/pages-getOrderInfo.css"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;title&gt;结算页&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"header.jsp"</span> %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container-fluid"</span>&gt;</span><br><span class="line">      &lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/OrderServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"createOrder"</span>&gt;</span><br><span class="line">        &lt;!-- 头部 end --&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"cart py-container"</span>&gt;</span><br><span class="line">          &lt;!--主内容--&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout py-container"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-tit"</span>&gt;</span><br><span class="line"></span><br><span class="line">              &lt;h4 style="font-weight: bold"&gt;填写并核对订单信息&lt;/h4&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-steps"</span>&gt;</span><br><span class="line">              &lt;!--收件人信息--&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-tit"</span>&gt;</span><br><span class="line">                &lt;h5&gt;收件人信息&lt;/h5&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-cont"</span>&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"addressInfo"</span>&gt;</span><br><span class="line">                  &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"addr-detail"</span>&gt;</span><br><span class="line">                    &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"addr-item"</span>&gt;</span><br><span class="line"></span><br><span class="line">                      &lt;div&gt;</span><br><span class="line">                        &lt;c:forEach items=<span class="string">"$&#123;addressList&#125;"</span> <span class="keyword">var</span>=<span class="string">"address"</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"con address"</span>&gt;</span><br><span class="line">                            &lt;input type="radio" name="addressId" value="$&#123;address.contact&#125;,$&#123;address.address&#125;,$&#123;address.telephone&#125;" &lt;c:if test="$&#123;address.isdefault == 1&#125;"&gt;checked="checked"&lt;/c:if&gt;&gt; $&#123;address.contact&#125;</span><br><span class="line">                          $&#123;address.address&#125; &lt;span&gt;$&#123;address.telephone&#125;&lt;/span&gt;&lt;/div&gt;</span><br><span class="line">                        &lt;/c:forEach&gt;</span><br><span class="line">                      &lt;%--                                        &lt;a href=<span class="string">"home_address.jsp"</span> data-toggle=<span class="string">"modal"</span> name=<span class="string">"#addressModel"</span> data-keyboard=<span class="string">"false"</span>--%&gt;</span><br><span class="line">                      &lt;%--                                           class="sui-btn  btn-info add-new"&gt;添加新地址&lt;/a&gt;--%&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                  &lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="hr"&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class="hr"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;!--支付和送货--&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"payshipInfo"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-tit"</span>&gt;</span><br><span class="line">              &lt;h5&gt;支付方式&lt;/h5&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-cont"</span>&gt;</span><br><span class="line">              &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"payType"</span>&gt;</span><br><span class="line">                &lt;li class="selected"&gt;微信付款&lt;/li&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="hr"&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-tit"</span>&gt;</span><br><span class="line">              &lt;h5&gt;送货清单&lt;/h5&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-cont"</span>&gt;</span><br><span class="line">              &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"send-detail"</span>&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"sendGoods"</span>&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;c:forEach items=<span class="string">"$&#123;cart.cartItemMap&#125;"</span> <span class="keyword">var</span>=<span class="string">"entry"</span>&gt;</span><br><span class="line"></span><br><span class="line">                      &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-g"</span>&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-1-6"</span>&gt;</span><br><span class="line">                          &lt;span&gt;&lt;img src="$&#123;entry.value.route.rimage&#125;"/&gt;&lt;/span&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-7-12"</span>&gt;</span><br><span class="line">                          &lt;div class="desc"&gt;$&#123;entry.value.route.rname&#125;&lt;/div&gt;</span><br><span class="line">                          &lt;div class="seven"&gt;7天无理由退货&lt;/div&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-1-12"</span>&gt;</span><br><span class="line">                          &lt;div class="price"&gt;￥$&#123;entry.value.subTotal&#125;&lt;/div&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-1-12"</span>&gt;</span><br><span class="line">                          &lt;div class="num"&gt;X $&#123;entry.value.num&#125;&lt;/div&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-1-12"</span>&gt;</span><br><span class="line">                          &lt;div class="exit"&gt;有货&lt;/div&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                      &lt;/ul&gt;</span><br><span class="line">                    &lt;/c:forEach&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;/li&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="hr"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"clearfix trade"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fc-price"</span>&gt;</span><br><span class="line">          &lt;span class="number"&gt;$&#123;cart.cartNum&#125;&lt;/span&gt;件商品，应付金额:　&lt;span class="price"&gt;¥ $&#123;cart.cartTotal&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"submit"</span>&gt;</span><br><span class="line">        &lt;button class="sui-btn btn-danger btn-xlarge"&gt;提交订单&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;!-- 底部栏位 --&gt;</span><br><span class="line">&lt;!--引入尾部--&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">"footer.jsp"</span> %&gt;</span><br><span class="line">&lt;script src="js/getOrderInfo.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="七-生成订单"><a href="#七-生成订单" class="headerlink" title="七.生成订单"></a>七.生成订单</h1><h4 id="7-1-需求分析"><a href="#7-1-需求分析" class="headerlink" title="7.1 需求分析"></a>7.1 需求分析</h4><ul><li><p>数据关系</p><p><img src="image-20200522141400811.png" alt=""></p></li><li><p>流程图</p><p><img src="image-20200522142115937.png" alt=""></p></li></ul><h4 id="7-2-代码实现"><a href="#7-2-代码实现" class="headerlink" title="7.2 代码实现"></a>7.2 代码实现</h4><ul><li><p>order_info.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/OrderServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"createOrder"</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/OrderServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  AddressService addressService = (AddressService) BeanFactory.getBean(<span class="string">"addressService"</span>);</span><br><span class="line"></span><br><span class="line">  OrderService orderService = (OrderService) BeanFactory.getBean(<span class="string">"orderService"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">createOrder</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    Date orderDate = <span class="keyword">new</span> Date();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.接收请求参数</span></span><br><span class="line">    String addressId = req.getParameter(<span class="string">"addressId"</span>);</span><br><span class="line">    <span class="comment">// 前端数据分割，分别为：收货人，收货地址，收货电话</span></span><br><span class="line">    String[] addressArray = addressId.split(<span class="string">","</span>);</span><br><span class="line">    <span class="comment">// 2.获取session中的user</span></span><br><span class="line">    User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">    <span class="comment">// 3.获取redis中cart</span></span><br><span class="line">    Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">    <span class="comment">// 4.创建订单，设置基础数据</span></span><br><span class="line">    Order order = <span class="keyword">new</span> Order();</span><br><span class="line">    <span class="comment">// 订单号</span></span><br><span class="line">    order.setOid(IdUtil.simpleUUID());</span><br><span class="line">    <span class="comment">// 下单时间</span></span><br><span class="line">    order.setOrdertime(orderDate);</span><br><span class="line">    <span class="comment">// 订单总金额</span></span><br><span class="line">    order.setTotal(cart.getCartTotal());</span><br><span class="line">    <span class="comment">// 未支付订单</span></span><br><span class="line">    order.setState(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">// 收货人</span></span><br><span class="line">    order.setContact(addressArray[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">// 收货地址</span></span><br><span class="line">    order.setAddress(addressArray[<span class="number">1</span>]);</span><br><span class="line">    <span class="comment">// 收货电话</span></span><br><span class="line">    order.setTelephone(addressArray[<span class="number">2</span>]);</span><br><span class="line">    <span class="comment">// 为了简化所属用户操作，我们可以直接设置uid</span></span><br><span class="line">    order.setUid(currentUser.getUid());</span><br><span class="line">    <span class="comment">// 5.遍历购物项，创建订单项</span></span><br><span class="line">    List&lt;OrderItem&gt; orderItemList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    OrderItem orderItem = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 遍历购物项</span></span><br><span class="line">    <span class="keyword">for</span> (CartItem cartItem : cart.getCartItemMap().values()) &#123;</span><br><span class="line">      <span class="comment">// 创建订单项</span></span><br><span class="line">      orderItem = <span class="keyword">new</span> OrderItem();</span><br><span class="line">      <span class="comment">// 下单时间</span></span><br><span class="line">      orderItem.setItemtime(orderDate);</span><br><span class="line">      <span class="comment">// 未支付</span></span><br><span class="line">      orderItem.setState(<span class="number">0</span>);</span><br><span class="line">      <span class="comment">// 数量</span></span><br><span class="line">      orderItem.setNum(cartItem.getNum());</span><br><span class="line">      <span class="comment">// 商品小计</span></span><br><span class="line">      orderItem.setSubtotal(cartItem.getSubTotal());</span><br><span class="line">      <span class="comment">// 商品rid ，简化数据库操作</span></span><br><span class="line">      orderItem.setRid(cartItem.getRoute().getRid());</span><br><span class="line">      <span class="comment">// 订单oid，简化数据操作</span></span><br><span class="line">      orderItem.setOid(order.getOid());</span><br><span class="line">      <span class="comment">// 添加到订单项集合中</span></span><br><span class="line">      orderItemList.add(orderItem);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将订单项集合关联到订单实体中</span></span><br><span class="line">    order.setOrderItemList(orderItemList);</span><br><span class="line">    <span class="comment">// 6.调用service，保存到数据库</span></span><br><span class="line">    orderService.save(order);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 7.清空购物车</span></span><br><span class="line">    Jedis jedis = JedisUtils.getJedis();</span><br><span class="line">    jedis.del(<span class="string">"cart_"</span>+currentUser.getUsername());</span><br><span class="line">    jedis.close();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 8.重定向支付页面</span></span><br><span class="line">    resp.sendRedirect(req.getContextPath()+<span class="string">"/pay.jsp"</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServiceImpl</span> <span class="keyword">implements</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line"></span><br><span class="line">    OrderDao orderDao = sqlSession.getMapper(OrderDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    OrderItemDao orderItemDao = sqlSession.getMapper(OrderItemDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">// 保存订单</span></span><br><span class="line">    orderDao.save(order);</span><br><span class="line">    <span class="comment">// 保存订单项</span></span><br><span class="line">    <span class="keyword">for</span> (OrderItem orderItem : order.getOrderItemList()) &#123;</span><br><span class="line">      orderItemDao.save(orderItem);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">    INSERT INTO tab_order(oid,ordertime,total,state,address,contact,telephone,uid)</span><br><span class="line">    VALUES (#&#123;oid&#125;,#&#123;ordertime&#125;,#&#123;total&#125;,#&#123;state&#125;,#&#123;address&#125;,#&#123;contact&#125;,#&#123;telephone&#125;,#&#123;uid&#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderItemDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderItemDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(OrderItem orderItem)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderItemDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderItemDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">    INSERT INTO tab_orderitem(itemtime,state,num,subtotal,rid,oid)</span><br><span class="line">    VALUES (#&#123;itemtime&#125;,#&#123;state&#125;,#&#123;num&#125;,#&#123;subtotal&#125;,#&#123;rid&#125;,#&#123;oid&#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"orderService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.OrderServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 购物流程分析</strong></p><p><strong>### 1. 浏览商品</strong></p><p><strong>### 2. 加入购物车</strong></p><p><strong>### 3. 查看购物车</strong></p><p><strong>### 4. 商品结算（收货地址、支付方式、商品清单）</strong></p><p><strong>### 5. 生成订单（支付状态：未支付0、已支付1）</strong></p><p><strong>### 6. 支付（微信、支付宝）</strong></p><p><strong>### 7. 支付结果</strong></p><p><strong>## 二 购物车功能分析</strong></p><p><strong>### CartItem对象</strong></p><p><strong>### Cart对象</strong></p><p><strong>### 购物车工具类</strong></p><p><strong>## 三 加入购物车</strong></p><p><strong>### 前端</strong></p><p>- 判断用户是否登录</p><p>​    - 未登录，弹出登录模态框</p><p>​    - 已登录，发送添加购物车请求</p><p><strong>### 后端</strong></p><p>- 使用redis购物车判断是否有此购物项</p><p>​    - 已存在，追加数量</p><p>​    - 不存在，创建购物项对象</p><p><strong>## 四 查看购物车</strong></p><p><strong>## 五 删除购物车</strong></p><p><strong>## 六 商品结算</strong></p><p><strong>### 查询当前用户的收货地址列表</strong></p><p><strong>### 查询购物车</strong></p><p><strong>## 七 生成订单</strong></p><p><strong>### 前端</strong></p><p>- 提交收货地址信息</p><p><strong>### 后端</strong></p><p>- 封装订单</p><p>​    - 封装订单项集合</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;购物车&lt;/li&gt;
&lt;li&gt;订单&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>大话重构</title>
    <link href="http://yoursite.com/2020/05/21/%E5%A4%A7%E8%AF%9D%E9%87%8D%E6%9E%84/"/>
    <id>http://yoursite.com/2020/05/21/大话重构/</id>
    <published>2020-05-21T09:01:48.000Z</published>
    <updated>2020-05-21T09:19:40.084Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-重构：改变既有代码的一剂良药"><a href="#一-重构：改变既有代码的一剂良药" class="headerlink" title="一.重构：改变既有代码的一剂良药"></a>一.重构：改变既有代码的一剂良药</h1><ul><li><p>什么是系统重构</p><p>系统重构就是不改变外部行为的基础上，改变软件的内部结构，使其易于阅读、维护、变更。</p></li><li><p>修改软件的四种动机</p><ul><li>增加新功能，改bug</li><li>改善原有程序结构</li><li>优化原有系统性能</li></ul><p>要提高软件内部质量，动机就是改善原有程序结构。</p></li></ul><h1 id="二-重构方法工具箱"><a href="#二-重构方法工具箱" class="headerlink" title="二.重构方法工具箱"></a>二.重构方法工具箱</h1><p>2.1 重构是一系列登录变换——第一次HelloWorld重构</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;一-重构：改变既有代码的一剂良药&quot;&gt;&lt;a href=&quot;#一-重构：改变既有代码的一剂良药&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十九）</title>
    <link href="http://yoursite.com/2020/05/21/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B9%9D%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/21/就业班学习笔记（五十九）/</id>
    <published>2020-05-21T01:04:35.000Z</published>
    <updated>2020-05-21T17:04:38.041Z</updated>
    
    <content type="html"><![CDATA[<ul><li>线路模块分页查询</li><li>百度分页栏</li><li>搜索条件分页查询</li><li>线路详情提示</li></ul><a id="more"></a><h1 id="一-旅游线路分页功能"><a href="#一-旅游线路分页功能" class="headerlink" title="一.旅游线路分页功能"></a>一.旅游线路分页功能</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><p><img src="image-20200521092722911.png" alt=""></p><p><img src="image-20200521094346450.png" alt=""></p><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><ul><li><p>PageBean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页对象</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageBean</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">//总记录数</span></span><br><span class="line">    <span class="keyword">private</span> Integer totalCount;</span><br><span class="line">    <span class="comment">//总页数</span></span><br><span class="line">    <span class="keyword">private</span> Integer totalPage;</span><br><span class="line">    <span class="comment">//结果集</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;E&gt; list;</span><br><span class="line">    <span class="comment">//当前页</span></span><br><span class="line">    <span class="keyword">private</span> Integer currentPage;</span><br><span class="line">    <span class="comment">//每页个数</span></span><br><span class="line">    <span class="keyword">private</span> Integer pageSize;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 头部 end --&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  $(function () &#123;</span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/CategoryServlet?action=findAll'</span>;</span><br><span class="line">    $.get(url, function (resp) &#123;</span><br><span class="line">      <span class="keyword">for</span> (let c of resp) &#123;</span><br><span class="line">        $(<span class="string">'#categoryUI'</span>).append(<span class="string">'&lt;li&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid='</span> + c.cid + <span class="string">'&amp;currentPage=1&amp;pageSize=10"&gt;'</span> + c.cname + <span class="string">'&lt;/a&gt;&lt;/li&gt;'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>RouteServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RouteServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RouteService routeService = (RouteService) BeanFactory.getBean(<span class="string">"routeService"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPage</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String currentPageStr = req.getParameter(<span class="string">"currentPage"</span>);</span><br><span class="line">        String pageSizeStr = req.getParameter(<span class="string">"pageSize"</span>);</span><br><span class="line">        String cid = req.getParameter(<span class="string">"cid"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.类型转换</span></span><br><span class="line">        <span class="keyword">if</span> (currentPageStr == <span class="keyword">null</span> || currentPageStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            currentPageStr = <span class="string">"1"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> currentPage = Integer.parseInt(currentPageStr);</span><br><span class="line">        <span class="keyword">if</span> (pageSizeStr == <span class="keyword">null</span> || pageSizeStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            pageSizeStr = <span class="string">"10"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> pageSize = Integer.parseInt(pageSizeStr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.调用service分页查询</span></span><br><span class="line">        PageBean&lt;Route&gt; pb=routeService.findByPage(currentPage,pageSize,cid);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.将分页对象设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"pb"</span>,pb);</span><br><span class="line">        req.setAttribute(<span class="string">"cid"</span>,cid);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.转发到 route_list.jsp</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"route_list.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServiceImpl</span> <span class="keyword">implements</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    RouteDao routeDao = sqlSession.getMapper(RouteDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    PageBean&lt;Route&gt; pageBean = <span class="keyword">new</span> PageBean&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    pageBean.setCurrentPage(currentPage);</span><br><span class="line">    pageBean.setPageSize(pageSize);</span><br><span class="line"></span><br><span class="line">    Integer totalCount = routeDao.findCount(cid);</span><br><span class="line">    pageBean.setTotalCount(totalCount);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> totalPage = (<span class="keyword">int</span>) Math.ceil(totalCount * <span class="number">1.0</span> / pageSize);</span><br><span class="line">    pageBean.setTotalPage(totalPage);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> index = (currentPage - <span class="number">1</span>) * pageSize;</span><br><span class="line"></span><br><span class="line">    List&lt;Route&gt; routeList = routeDao.findList(index,pageSize,cid);</span><br><span class="line">    pageBean.setList(routeList);</span><br><span class="line"></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> pageBean;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteDao</span> </span>&#123;</span><br><span class="line">  <span class="function">Integer <span class="title">findCount</span><span class="params">(String cid)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">List&lt;Route&gt; <span class="title">findList</span><span class="params">(@Param(<span class="string">"index"</span>)</span> <span class="keyword">int</span> index, @<span class="title">Param</span><span class="params">(<span class="string">"pageSize"</span>)</span> <span class="keyword">int</span> pageSize, @<span class="title">Param</span><span class="params">(<span class="string">"cid"</span>)</span> String cid)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RouteDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findCount"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        SELECT COUNT(*) FROM tab_route WHERE cid = #&#123;cid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findList"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Route"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_route WHERE cid = #&#123;cid&#125; limit #&#123;index&#125;,#&#123;pageSize&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"routeService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.RouteServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>route_list.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;线路列表&lt;/title&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/search.css"</span>&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"header.jsp"</span> %&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page_one"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"contant"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"crumbs"</span>&gt;</span><br><span class="line">          &lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/search.png"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">          &lt;p&gt;黑马旅行&gt;&lt;span&gt;搜索结果&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"xinxi clearfix"</span>&gt;</span><br><span class="line">          &lt;%--线路列表 start--%&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"header"</span>&gt;</span><br><span class="line">              &lt;span&gt;商品信息&lt;/span&gt;</span><br><span class="line">              &lt;span class="jg"&gt;价格&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">              &lt;c:forEach items=<span class="string">"$&#123;pb.list&#125;"</span> <span class="keyword">var</span>=<span class="string">"route"</span>&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"img"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;route.rimage&#125;"</span></span><br><span class="line">                                        width="300px" alt=""&gt;&lt;/div&gt;</span><br><span class="line">                  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"text1"</span>&gt;</span><br><span class="line">                    &lt;p&gt;$&#123;route.rname&#125;&lt;/p&gt;</span><br><span class="line">                    &lt;br/&gt;</span><br><span class="line">                    &lt;p&gt;$&#123;route.routeIntroduce&#125;&lt;/p&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"price"</span>&gt;</span><br><span class="line">                    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"price_num"</span>&gt;</span><br><span class="line">                      &lt;span&gt;&amp;yen;&lt;/span&gt;</span><br><span class="line">                      &lt;span&gt;$&#123;route.price&#125;&lt;/span&gt;</span><br><span class="line">                      &lt;span&gt;起&lt;/span&gt;</span><br><span class="line">                    &lt;/p&gt;</span><br><span class="line">                    &lt;p&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/route_detail.jsp"&gt;查看详情&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">              &lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page_num_inf"</span>&gt;</span><br><span class="line">              &lt;i&gt;&lt;/i&gt; 共</span><br><span class="line">              &lt;span&gt;12&lt;/span&gt;页&lt;span&gt;132&lt;/span&gt;条</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"pageNum"</span>&gt;</span><br><span class="line">              &lt;ul&gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage&gt;1&#125;"</span>&gt;</span><br><span class="line">                  &lt;li&gt;</span><br><span class="line">                    &lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=1"&gt;首页&lt;/a&gt;</span><br><span class="line">                  &lt;/li&gt;</span><br><span class="line">                  &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"threeword"</span>&gt;&lt;a</span><br><span class="line">                                           href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.currentPage-1&#125;"&gt;上一页&lt;/a&gt;</span><br><span class="line">                  &lt;/li&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                &lt;c:forEach begin=<span class="string">"1"</span> end=<span class="string">"$&#123;pb.totalPage&#125;"</span> <span class="keyword">var</span>=<span class="string">"page"</span>&gt;</span><br><span class="line">                  &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page == pb.currentPage&#125;"</span>&gt;</span><br><span class="line">                    &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"curPage"</span>&gt;&lt;a</span><br><span class="line">                                           href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;page&#125;"&gt;$&#123;page&#125;&lt;/a&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                  &lt;/c:if&gt;</span><br><span class="line">                  &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page != pb.currentPage&#125;"</span>&gt;</span><br><span class="line">                    &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"curPage"</span>&gt;&lt;a</span><br><span class="line">                                           href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;page&#125;"&gt;$&#123;page&#125;&lt;/a&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                  &lt;/c:if&gt;</span><br><span class="line">                &lt;/c:forEach&gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage &lt; pb.totalPage&#125;"</span>&gt;</span><br><span class="line">                  &lt;li class="threeword"&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.currentPage+1&#125;"&gt;下一页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                  &lt;li class="threeword"&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.totalPage&#125;"&gt;末页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;%--线路列表--%&gt;</span><br><span class="line">          &lt;%--热门推荐 start--%&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"top"</span>&gt;</span><br><span class="line">              &lt;div class="hot"&gt;HOT&lt;/div&gt;</span><br><span class="line">              &lt;span&gt;热门推荐&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;%--热门推荐 end--%&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"footer.jsp"</span> %&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-百度分页栏"><a href="#1-3-百度分页栏" class="headerlink" title="1.3 百度分页栏"></a>1.3 百度分页栏</h4><ul><li><p>修改PageBean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageBean</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">  <span class="comment">//总记录数</span></span><br><span class="line">  <span class="keyword">private</span> Integer totalCount;</span><br><span class="line">  <span class="comment">//总页数</span></span><br><span class="line">  <span class="keyword">private</span> Integer totalPage;</span><br><span class="line">  <span class="comment">//结果集</span></span><br><span class="line">  <span class="keyword">private</span> List&lt;E&gt; list;</span><br><span class="line">  <span class="comment">//当前页</span></span><br><span class="line">  <span class="keyword">private</span> Integer currentPage;</span><br><span class="line">  <span class="comment">//每页个数</span></span><br><span class="line">  <span class="keyword">private</span> Integer pageSize;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//起始值</span></span><br><span class="line">  <span class="keyword">private</span> Integer begin;</span><br><span class="line">  <span class="comment">//结束值</span></span><br><span class="line">  <span class="keyword">private</span> Integer end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Integer <span class="title">getBegin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 先去调用计算的方法</span></span><br><span class="line">    calculateBeginToEnd();</span><br><span class="line">    <span class="keyword">return</span> begin;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBegin</span><span class="params">(Integer begin)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.begin = begin;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 计算方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">calculateBeginToEnd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 不足10个页码</span></span><br><span class="line">    <span class="keyword">if</span> (totalPage &lt; <span class="number">10</span>) &#123;</span><br><span class="line">      begin = <span class="number">1</span>;</span><br><span class="line">      end = totalPage;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 超过10个页码</span></span><br><span class="line">      <span class="comment">// 前五后四规则</span></span><br><span class="line">      begin = currentPage - <span class="number">5</span>;</span><br><span class="line">      end = currentPage + <span class="number">4</span>;</span><br><span class="line">      <span class="comment">// 修正当起始值小于1的情况</span></span><br><span class="line">      <span class="keyword">if</span> (begin &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        begin = <span class="number">1</span>;</span><br><span class="line">        end = begin + <span class="number">9</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 修正结束值大于总页数的情况</span></span><br><span class="line">      <span class="keyword">if</span> (end &gt; totalPage) &#123;</span><br><span class="line">        end = totalPage;</span><br><span class="line">        begin = end - <span class="number">9</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改route_list.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;c:forEach begin=<span class="string">"$&#123;pb.begin&#125;"</span> end=<span class="string">"$&#123;pb.end&#125;"</span> <span class="keyword">var</span>=<span class="string">"page"</span>&gt;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">  </span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-搜索旅游线路分页功能"><a href="#二-搜索旅游线路分页功能" class="headerlink" title="二.搜索旅游线路分页功能"></a>二.搜索旅游线路分页功能</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><p><img src="image-20200521113719151.png" alt=""></p><h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"search"</span>&gt;</span><br><span class="line">  &lt;input id=<span class="string">"rname"</span> name=<span class="string">"rname"</span> type=<span class="string">"text"</span> placeholder=<span class="string">"请输入路线名称"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"search_input"</span> value=<span class="string">"$&#123;rname&#125;"</span></span><br><span class="line">         autocomplete=<span class="string">"off"</span>&gt;</span><br><span class="line">  &lt;a href="javascript:void(0);" onclick="searchClick()" class="search-button"&gt;搜索&lt;/a&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="function">function <span class="title">searchClick</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">// 获取搜索框value的属性值</span></span><br><span class="line">      let rname = $(<span class="string">'#rname'</span>).val();</span><br><span class="line">      <span class="comment">// 使用js方式发送请求</span></span><br><span class="line">      location.href=<span class="string">'$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;rname='</span>+rname;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>RouteServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RouteServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> RouteService routeService = (RouteService) BeanFactory.getBean(<span class="string">"routeService"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 分页查询</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPage</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.接收请求参数</span></span><br><span class="line">    String currentPageStr = req.getParameter(<span class="string">"currentPage"</span>);</span><br><span class="line">    String pageSizeStr = req.getParameter(<span class="string">"pageSize"</span>);</span><br><span class="line">    <span class="comment">// 分类cid</span></span><br><span class="line">    String cid = req.getParameter(<span class="string">"cid"</span>);</span><br><span class="line">    <span class="comment">// 线路搜索关键字</span></span><br><span class="line">    String rname = req.getParameter(<span class="string">"rname"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.类型转换</span></span><br><span class="line">    <span class="keyword">if</span> (currentPageStr == <span class="keyword">null</span> || currentPageStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">      currentPageStr = <span class="string">"1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> currentPage = Integer.parseInt(currentPageStr);</span><br><span class="line">    <span class="keyword">if</span> (pageSizeStr == <span class="keyword">null</span> || pageSizeStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">      pageSizeStr = <span class="string">"10"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> pageSize = Integer.parseInt(pageSizeStr);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.调用service分页查询</span></span><br><span class="line">    PageBean&lt;Route&gt; pb=routeService.findByPage(currentPage,pageSize,cid,rname);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.将分页对象设置到request域</span></span><br><span class="line">    req.setAttribute(<span class="string">"pb"</span>,pb);</span><br><span class="line">    <span class="comment">// 回显分类id</span></span><br><span class="line">    req.setAttribute(<span class="string">"cid"</span>,cid);</span><br><span class="line">    <span class="comment">// 回显搜索关键字</span></span><br><span class="line">    req.setAttribute(<span class="string">"rname"</span>,rname);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5.转发到 route_list.jsp</span></span><br><span class="line">    req.getRequestDispatcher(<span class="string">"route_list.jsp"</span>).forward(req,resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 无搜索条件分页查询</span></span><br><span class="line">    <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有搜索条件分页查询</span></span><br><span class="line">    <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid, String rname)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServiceImpl</span> <span class="keyword">implements</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        RouteDao routeDao = sqlSession.getMapper(RouteDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        PageBean&lt;Route&gt; pageBean = <span class="keyword">new</span> PageBean&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pageBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid, String rname)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建dao代理对象</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        RouteDao routeDao = sqlSession.getMapper(RouteDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 1.创建PageBean</span></span><br><span class="line">        PageBean&lt;Route&gt; pageBean = <span class="keyword">new</span> PageBean&lt;&gt;();</span><br><span class="line">        <span class="comment">// 2.封装当前页和每页个数</span></span><br><span class="line">        pageBean.setCurrentPage(currentPage);</span><br><span class="line">        pageBean.setPageSize(pageSize);</span><br><span class="line">        <span class="comment">// 3.调用dao查询总记录数，封装</span></span><br><span class="line">        Integer totalCount = routeDao.findCount(cid,rname);</span><br><span class="line">        pageBean.setTotalCount(totalCount);</span><br><span class="line">        <span class="comment">// 4.计算总页数，封装</span></span><br><span class="line">        <span class="keyword">int</span> totalPage = (<span class="keyword">int</span>) Math.ceil(totalCount * <span class="number">1.0</span> / pageSize);</span><br><span class="line">        pageBean.setTotalPage(totalPage);</span><br><span class="line">        <span class="comment">// 5.计算开始索引</span></span><br><span class="line">        <span class="keyword">int</span> index = (currentPage - <span class="number">1</span>) * pageSize;</span><br><span class="line">        <span class="comment">// 6.调用dao查询结果集，封装</span></span><br><span class="line">        List&lt;Route&gt; routeList = routeDao.findList(index,pageSize,cid,rname);</span><br><span class="line">        pageBean.setList(routeList);</span><br><span class="line">        <span class="comment">// 释放资源</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="comment">// 7.返回分页对象</span></span><br><span class="line">        <span class="keyword">return</span> pageBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//MyBatis框架Dao层禁止使用方法重载，否则会导致数据查询不正确</span></span><br><span class="line"></span><br><span class="line">  <span class="function">Integer <span class="title">findCount</span><span class="params">(@Param(<span class="string">"cid"</span>)</span> String cid, @<span class="title">Param</span><span class="params">(<span class="string">"rname"</span>)</span> String rname)</span>;</span><br><span class="line">  <span class="comment">//    Integer findCount(String cid);</span></span><br><span class="line"></span><br><span class="line">  <span class="function">List&lt;Route&gt; <span class="title">findList</span><span class="params">(@Param(<span class="string">"index"</span>)</span> <span class="keyword">int</span> index, @<span class="title">Param</span><span class="params">(<span class="string">"pageSize"</span>)</span> <span class="keyword">int</span> pageSize, @<span class="title">Param</span><span class="params">(<span class="string">"cid"</span>)</span> String cid, @<span class="title">Param</span><span class="params">(<span class="string">"rname"</span>)</span> String rname)</span>;</span><br><span class="line">  <span class="comment">//    List&lt;Route&gt; findList(@Param("index") int index, @Param("pageSize") int pageSize, @Param("cid") String cid);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RouteDao"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findCount"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">    SELECT COUNT(*) FROM tab_route</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"cid != null and cid != ''"</span>&gt;</span></span><br><span class="line">        and cid=#&#123;cid&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"rname != null and rname != ''"</span>&gt;</span></span><br><span class="line">        and rname like concat(concat('%',#&#123;rname&#125;),'%')</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findList"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Route"</span>&gt;</span></span><br><span class="line">    SELECT * FROM tab_route</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"cid != null and cid != ''"</span>&gt;</span></span><br><span class="line">        and cid=#&#123;cid&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"rname != null and rname != ''"</span>&gt;</span></span><br><span class="line">        and rname like concat(concat('%',#&#123;rname&#125;),'%')</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    limit #&#123;index&#125;,#&#123;pageSize&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>route_list.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page_num_inf"</span>&gt;</span><br><span class="line">  &lt;i&gt;&lt;/i&gt; 共</span><br><span class="line">  &lt;span&gt;12&lt;/span&gt;页&lt;span&gt;132&lt;/span&gt;条</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"pageNum"</span>&gt;</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage&gt;1&#125;"</span>&gt;</span><br><span class="line">      &lt;li&gt;</span><br><span class="line">        &lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=1&amp;rname=$&#123;rname&#125;"&gt;首页&lt;/a&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"threeword"</span>&gt;&lt;a</span><br><span class="line">                               href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.currentPage-1&#125;&amp;rname=$&#123;rname&#125;"&gt;上一页&lt;/a&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/c:if&gt;</span><br><span class="line">    &lt;c:forEach begin=<span class="string">"$&#123;pb.begin&#125;"</span> end=<span class="string">"$&#123;pb.end&#125;"</span> <span class="keyword">var</span>=<span class="string">"page"</span>&gt;</span><br><span class="line">      &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page == pb.currentPage&#125;"</span>&gt;</span><br><span class="line">        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"curPage"</span>&gt;&lt;a</span><br><span class="line">                               href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;page&#125;&amp;rname=$&#123;rname&#125;"&gt;$&#123;page&#125;&lt;/a&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/c:if&gt;</span><br><span class="line">      &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page != pb.currentPage&#125;"</span>&gt;</span><br><span class="line">        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"curPage"</span>&gt;&lt;a</span><br><span class="line">                               href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;page&#125;&amp;rname=$&#123;rname&#125;"&gt;$&#123;page&#125;&lt;/a&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/c:if&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage &lt; pb.totalPage&#125;"</span>&gt;</span><br><span class="line">      &lt;li class="threeword"&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.currentPage+1&#125;&amp;rname=$&#123;rname&#125;"&gt;下一页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;li class="threeword"&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.totalPage&#125;&amp;rname=$&#123;rname&#125;"&gt;末页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/c:if&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-旅游线路详情展示功能"><a href="#三-旅游线路详情展示功能" class="headerlink" title="三.旅游线路详情展示功能"></a>三.旅游线路详情展示功能</h1><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><p><img src="image-20200521142426127.png" alt=""></p><h4 id="3-2-代码实现-使用mybatis的嵌套查询来实现"><a href="#3-2-代码实现-使用mybatis的嵌套查询来实现" class="headerlink" title="3.2 代码实现(使用mybatis的嵌套查询来实现)"></a>3.2 代码实现(使用mybatis的嵌套查询来实现)</h4><ul><li><p>Route_list.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=routeDetail&amp;rid=$&#123;route.rid&#125;"&gt;查看详情&lt;/a&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure></li><li><p>RouteServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RouteServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RouteService routeService = (RouteService) BeanFactory.getBean(<span class="string">"routeService"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">routeDetail</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.接收请求参数 rid</span></span><br><span class="line">        String rid = req.getParameter(<span class="string">"rid"</span>);</span><br><span class="line">        <span class="comment">// 2.调用sercie查询</span></span><br><span class="line">        Route route = routeService.findDetail(rid);</span><br><span class="line">        <span class="comment">// 3.设置到reuqest域</span></span><br><span class="line">        req.setAttribute(<span class="string">"route"</span>,route);</span><br><span class="line">        <span class="comment">// 4.转发到 route_detail.jsp</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/route_detail.jsp"</span>).forward(req,resp);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPage</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String currentPageStr = req.getParameter(<span class="string">"currentPage"</span>);</span><br><span class="line">        String pageSizeStr = req.getParameter(<span class="string">"pageSize"</span>);</span><br><span class="line">        <span class="comment">// 分类cid</span></span><br><span class="line">        String cid = req.getParameter(<span class="string">"cid"</span>);</span><br><span class="line">        <span class="comment">// 线路搜索关键字</span></span><br><span class="line">        String rname = req.getParameter(<span class="string">"rname"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.类型转换</span></span><br><span class="line">        <span class="keyword">if</span> (currentPageStr == <span class="keyword">null</span> || currentPageStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            currentPageStr = <span class="string">"1"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> currentPage = Integer.parseInt(currentPageStr);</span><br><span class="line">        <span class="keyword">if</span> (pageSizeStr == <span class="keyword">null</span> || pageSizeStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            pageSizeStr = <span class="string">"10"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> pageSize = Integer.parseInt(pageSizeStr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.调用service分页查询</span></span><br><span class="line">        PageBean&lt;Route&gt; pb=routeService.findByPage(currentPage,pageSize,cid,rname);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.将分页对象设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"pb"</span>,pb);</span><br><span class="line">        <span class="comment">// 回显分类id</span></span><br><span class="line">        req.setAttribute(<span class="string">"cid"</span>,cid);</span><br><span class="line">        <span class="comment">// 回显搜索关键字</span></span><br><span class="line">        req.setAttribute(<span class="string">"rname"</span>,rname);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.转发到 route_list.jsp</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/route_list.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 无搜索条件分页查询</span></span><br><span class="line">    <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有搜索条件分页查询</span></span><br><span class="line">    <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid, String rname)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Route <span class="title">findDetail</span><span class="params">(String rid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//MyBatis框架Dao层禁止使用方法重载，否则会导致数据查询不正确</span></span><br><span class="line"></span><br><span class="line">    <span class="function">Integer <span class="title">findCount</span><span class="params">(@Param(<span class="string">"cid"</span>)</span> String cid, @<span class="title">Param</span><span class="params">(<span class="string">"rname"</span>)</span> String rname)</span>;</span><br><span class="line"><span class="comment">//    Integer findCount(String cid);</span></span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Route&gt; <span class="title">findList</span><span class="params">(@Param(<span class="string">"index"</span>)</span> <span class="keyword">int</span> index, @<span class="title">Param</span><span class="params">(<span class="string">"pageSize"</span>)</span> <span class="keyword">int</span> pageSize, @<span class="title">Param</span><span class="params">(<span class="string">"cid"</span>)</span> String cid, @<span class="title">Param</span><span class="params">(<span class="string">"rname"</span>)</span> String rname)</span>;</span><br><span class="line"><span class="comment">//    List&lt;Route&gt; findList(@Param("index") int index, @Param("pageSize") int pageSize, @Param("cid") String cid);</span></span><br><span class="line"></span><br><span class="line">    <span class="function">Route <span class="title">findByRidWithAll</span><span class="params">(String rid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RouteDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findCount"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        SELECT COUNT(*) FROM tab_route</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"cid != null and cid != ''"</span>&gt;</span></span><br><span class="line">                and cid=#&#123;cid&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"rname != null and rname != ''"</span>&gt;</span></span><br><span class="line">                and rname like concat(concat('%',#&#123;rname&#125;),'%')</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findList"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Route"</span>&gt;</span></span><br><span class="line">            SELECT * FROM tab_route</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"cid != null and cid != ''"</span>&gt;</span></span><br><span class="line">                and cid=#&#123;cid&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"rname != null and rname != ''"</span>&gt;</span></span><br><span class="line">                and rname like concat(concat('%',#&#123;rname&#125;),'%')</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">        limit #&#123;index&#125;,#&#123;pageSize&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"routeWithAllMap"</span> <span class="attr">type</span>=<span class="string">"com.itheima.domain.Route"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"rid"</span> <span class="attr">property</span>=<span class="string">"rid"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"rname"</span> <span class="attr">property</span>=<span class="string">"rname"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"price"</span> <span class="attr">property</span>=<span class="string">"price"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"routeIntroduce"</span> <span class="attr">property</span>=<span class="string">"routeIntroduce"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"rflag"</span> <span class="attr">property</span>=<span class="string">"rflag"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"rdate"</span> <span class="attr">property</span>=<span class="string">"rdate"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"rimage"</span> <span class="attr">property</span>=<span class="string">"rimage"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一对一嵌套 分类--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"category"</span> <span class="attr">javaType</span>=<span class="string">"com.itheima.domain.Category"</span> <span class="attr">column</span>=<span class="string">"cid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.CategoryDao.findByCid"</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一对一嵌套 商家--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"seller"</span> <span class="attr">javaType</span>=<span class="string">"com.itheima.domain.Seller"</span> <span class="attr">column</span>=<span class="string">"sid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.SellerDao.findBySid"</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一对一嵌套 图册列表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"routeImgList"</span> <span class="attr">ofType</span>=<span class="string">"com.itheima.domain.RouteImg"</span> <span class="attr">column</span>=<span class="string">"rid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.RouteImgDao.findByRid"</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByRidWithAll"</span> <span class="attr">resultMap</span>=<span class="string">"routeWithAllMap"</span>&gt;</span></span><br><span class="line">        select * from tab_route where rid = #&#123;rid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CategoryDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Category&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">Category <span class="title">findByCid</span><span class="params">(Integer cid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.CategoryDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Category"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_category ORDER BY cid</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByCid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Category"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_category WHERE cid = #&#123;cid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteImgDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteImgDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;RouteImg&gt; <span class="title">findByRid</span><span class="params">(Integer rid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteImgDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RouteImgDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByRid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.RouteImg"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_route_img WHERE rid = #&#123;rid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>SellerDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SellerDao</span> </span>&#123;</span><br><span class="line">    <span class="function">Seller <span class="title">findBySid</span><span class="params">(Integer sid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>SellerDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.SellerDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findBySid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Seller"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_seller WHERE sid = #&#123;sid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>route_detail.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 详情 start --&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"wrap"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"bread_box"</span>&gt;</span><br><span class="line">    &lt;a href="index.jsp"&gt;首页&lt;/a&gt;</span><br><span class="line">    &lt;span&gt; &amp;gt;&lt;/span&gt;</span><br><span class="line">    &lt;a href="#"&gt;$&#123;route.category.cname&#125;&lt;/a&gt;&lt;span&gt; &amp;gt;&lt;/span&gt;</span><br><span class="line">    &lt;a href="#"&gt;$&#123;route.rname&#125;&lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"prosum_box"</span>&gt;</span><br><span class="line">    &lt;dl <span class="class"><span class="keyword">class</span></span>=<span class="string">"prosum_left"</span>&gt;</span><br><span class="line">      &lt;dt&gt;</span><br><span class="line">        &lt;img alt=<span class="string">""</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"big_img"</span> src=<span class="string">"$&#123;route.rimage&#125;"</span>&gt;</span><br><span class="line">      &lt;/dt&gt;</span><br><span class="line">      &lt;dd&gt;</span><br><span class="line">        &lt;a class="up_img up_img_disable"&gt;&lt;/a&gt;</span><br><span class="line">        &lt;c:forEach items=<span class="string">"$&#123;route.routeImgList&#125;"</span> <span class="keyword">var</span>=<span class="string">"routeImg"</span>&gt;</span><br><span class="line">          &lt;a title=<span class="string">""</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"little_img"</span> data-bigpic=<span class="string">"$&#123;routeImg.bigPic&#125;"</span>&gt;</span><br><span class="line">            &lt;img src=<span class="string">"$&#123;routeImg.smallPic&#125;"</span>&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">        &lt;/c:forEach&gt;</span><br><span class="line">        &lt;a class="down_img down_img_disable" style="margin-bottom: 0;"&gt;&lt;/a&gt;</span><br><span class="line">      &lt;/dd&gt;</span><br><span class="line">    &lt;/dl&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"prosum_right"</span>&gt;</span><br><span class="line">      &lt;p class="pros_title"&gt;$&#123;route.rname&#125;&lt;/p&gt;</span><br><span class="line">      &lt;p class="hot"&gt;$&#123;route.routeIntroduce&#125;&lt;/p&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"pros_other"</span>&gt;</span><br><span class="line">        &lt;p&gt;经营商家  ：$&#123;route.seller.sname&#125;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;咨询电话 : $&#123;route.seller.consphone&#125;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;地址 ： $&#123;route.seller.address&#125;&lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 旅游线路分页功能</strong></p><p><strong>### 需求分析</strong></p><p>- 表关系</p><p>- 整体流程</p><p>- 后端代码流程</p><p>- 前端EL表达式</p><p><strong>### 百度分页</strong></p><p><strong>## 二 搜索旅游线路分页功能</strong></p><p><strong>### 需求分析</strong></p><p><strong>## 三 旅游线路详情展示功能</strong></p><p><strong>### 需求分析</strong></p><p>- 表关系</p><p>- 实体类</p><p>- 嵌套查询</p><p>- 页面展示</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;线路模块分页查询&lt;/li&gt;
&lt;li&gt;百度分页栏&lt;/li&gt;
&lt;li&gt;搜索条件分页查询&lt;/li&gt;
&lt;li&gt;线路详情提示&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十八）</title>
    <link href="http://yoursite.com/2020/05/20/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E5%85%AB%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/20/就业班学习笔记（五十八）/</id>
    <published>2020-05-20T00:58:14.000Z</published>
    <updated>2020-05-20T15:26:43.308Z</updated>
    
    <content type="html"><![CDATA[<ul><li>NoSQL</li><li>Redis入门<ul><li>5种数据类型</li></ul></li><li>Jedis入门</li><li>优化黑马旅游网</li></ul><a id="more"></a><h1 id="一-NoSQL"><a href="#一-NoSQL" class="headerlink" title="一.NoSQL"></a>一.NoSQL</h1><h4 id="1-1-NoSQL介绍"><a href="#1-1-NoSQL介绍" class="headerlink" title="1.1 NoSQL介绍"></a>1.1 NoSQL介绍</h4><p>NoSQL(Not-Only SQL)，泛指非关系型的数据库，它可以作为关系型数据库的良好补充。</p><table><thead><tr><th></th><th>关系型数据库</th><th>非关系型数据库</th></tr></thead><tbody><tr><td>特点</td><td>数据直接存在关联关系</td><td>数据之间没有关联关系</td></tr><tr><td></td><td>所有数据都在磁盘中</td><td>所有数据都在内存中</td></tr><tr><td></td><td></td><td></td></tr><tr><td>总结</td><td>存储复杂关系模型，硬盘io速度较慢</td><td>只能存储简单数据模型，内存io查询速度快</td></tr></tbody></table><ul><li><p>为什么学习NoSQL</p><blockquote><p>高并发、高可用、高性能、海量数据</p></blockquote><p>传统的关系型数据库出现了性能和扩展的瓶颈，所以非关系型数据库应时而生，解决了互联网产品的三 高和海量数据的问题</p><p>NoSQL和关系型的数据库是互补关系，在各自的应用场景中都有自己的特点，一般情况下我们使用关系 型数据库持久化数据(处理复杂的业务场景)，对一些热点数据通过NoSQL来作为缓存提高效率</p></li><li><p>使用后</p><ul><li>先查找缓存</li><li>没有数据再查找数据库</li></ul></li></ul><h4 id="1-2-NoSQL的主流产品"><a href="#1-2-NoSQL的主流产品" class="headerlink" title="1.2 NoSQL的主流产品"></a>1.2 NoSQL的主流产品</h4><table><thead><tr><th>分类</th><th>特点</th><th>代表产品</th></tr></thead><tbody><tr><td>键值存储</td><td>数据一般存在内存中，读写速度快(10w/s)，适合作为缓存服务</td><td>redis</td></tr><tr><td>文档型数据库</td><td>数据结构要求不严格，适合存储结构不确定或者价值较低的数据</td><td>mongodb</td></tr><tr><td>列存储数据库</td><td>查找速度快，更容易进行分布式扩展，适合作为文件存储服务</td><td>Hbase</td></tr><tr><td>图形数据库</td><td>使用“图结构”进行存储，适合做社交网络计算等等</td><td>Neo4j</td></tr></tbody></table><ul><li><p>图形数据库介绍</p><p><a href="https://blog.csdn.net/xlgen157387/article/details/79085901">https://blog.csdn.net/xlgen157387/article/details/79085901</a></p></li></ul><h1 id="二-Redis"><a href="#二-Redis" class="headerlink" title="二.Redis"></a>二.Redis</h1><h4 id="2-1-Redis介绍"><a href="#2-1-Redis介绍" class="headerlink" title="2.1 Redis介绍"></a>2.1 Redis介绍</h4><p>Redis(Remote Dictionary Server)是用C语言开发的一个开源的高性能键值对数据库。它的所有数据 都是保存在内存中的,这也就决定了其读写速度之快,是其它硬盘保存数据的系统所无法匹敌的。</p><p>官方曾经给出过一组测试数据，50个并发执行100000个请求: 读的速度是110000次/s,写的速度是 81000次/s</p><h4 id="2-2-Redis安装和使用"><a href="#2-2-Redis安装和使用" class="headerlink" title="2.2 Redis安装和使用"></a>2.2 Redis安装和使用</h4><ul><li><p>下载</p><p>Reids官网地址:<a href="http://redis.io">http://redis.io</a> </p><p>中文网地址:<a href="https://www.redis.net.cn/">https://www.redis.net.cn/</a></p><p>docker</p><ul><li><p>docker pull redis</p></li><li><p>Linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://download.redis.io/releases/redis-6.0.3.tar.gz</span><br><span class="line">$ tar xzf redis-6.0.3.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> redis-6.0.3</span><br><span class="line">$ make</span><br><span class="line"></span><br><span class="line">$ src/redis-server</span><br><span class="line"></span><br><span class="line">$ src/redis-cli</span><br><span class="line">redis&gt; <span class="built_in">set</span> foo bar</span><br><span class="line">OK</span><br><span class="line">redis&gt; get foo</span><br><span class="line"><span class="string">"bar"</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>目录</p><p>redis.conf:配置文件 </p></li></ul><h4 id="2-3-Redis客户端图形化工具"><a href="#2-3-Redis客户端图形化工具" class="headerlink" title="2.3 Redis客户端图形化工具"></a>2.3 Redis客户端图形化工具</h4><p>Redis Client 、Redis Desktop Manager 、Redis Studio.</p><h4 id="2-4-Redis数据结构"><a href="#2-4-Redis数据结构" class="headerlink" title="2.4 Redis数据结构"></a>2.4 Redis数据结构</h4><p>Redis采用的键值对存储数据，键(key)的类型只能为字符串，值(value)支持五种数据类型:</p><table><thead><tr><th>K-V类型</th><th>key(字符串)</th><th>value(支持5种类型)</th></tr></thead><tbody><tr><td>字符串：String</td><td>mystr</td><td>stringcode</td></tr><tr><td>哈希：HashMap</td><td>myhash</td><td>map集合(key:0),(value:100)</td></tr><tr><td>双向链表：LinkedList</td><td>mylist</td><td>左压栈—A-A–B–右压栈(有序且可重复)</td></tr><tr><td>无序集合：HashSet</td><td>myset</td><td>A|C|B|E|D        (无序但不可重复)</td></tr><tr><td>有序集合：LinkedHashSet</td><td>myzset</td><td>A|B|C|D|E        (有序但不可重复)</td></tr></tbody></table><h4 id="2-5-Redis命令操作"><a href="#2-5-Redis命令操作" class="headerlink" title="2.5 Redis命令操作"></a>2.5 Redis命令操作</h4><p>Redis命令是用来操作Redis数据库的, 就相当于操作MySql数据库时的SQL语句。</p><p>Redis的命令根据要操作的值(value)的数据结构的不同而不同, 每种数据类型都有自己的操作命令</p><h5 id="2-5-1-String字符串"><a href="#2-5-1-String字符串" class="headerlink" title="2.5.1 String字符串"></a>2.5.1 String字符串</h5><p>字符串类型是Redis中最为基础的数据存储类型。 </p><p>在Redis中字符串类型的Value最多可以容纳的数据长度是512MB。</p><table><thead><tr><th></th><th>用法</th></tr></thead><tbody><tr><td>新增</td><td>set key value [EX seconds | PX milliseconds] [NX | XX] [KEEPTTL]</td></tr><tr><td>查询</td><td>get key</td></tr><tr><td>删除</td><td>del key [key …]</td></tr><tr><td>新增并指定存活时间</td><td>setex key seconds value</td></tr><tr><td></td><td>ttl key       查看存活时间</td></tr><tr><td>主键自增器</td><td>incr key     (value默认加1)</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> mystr stringcode</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get mystr</span><br><span class="line"><span class="string">"stringcode"</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> mystr new_stringcode</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get mystr</span><br><span class="line"><span class="string">"new_stringcode"</span></span><br><span class="line">127.0.0.1:6379&gt; setex testcount 10 test10seconds</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; ttl testcount</span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br><span class="line">127.0.0.1:6379&gt; get testcount</span><br><span class="line"><span class="string">"test10seconds"</span></span><br><span class="line">127.0.0.1:6379&gt; ttl testcount</span><br><span class="line">(<span class="built_in">integer</span>) -2</span><br><span class="line">127.0.0.1:6379&gt; get testcount</span><br><span class="line">(nil)</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-2-Hash哈希"><a href="#2-5-2-Hash哈希" class="headerlink" title="2.5.2 Hash哈希"></a>2.5.2 Hash哈希</h5><p>Hash类型极其类似于java中的Map,值里面可以存放一组组的键值对 </p><p>该类型非常适合于存储java中对象的信息</p><table><thead><tr><th></th><th>用法</th></tr></thead><tbody><tr><td>新增</td><td>hset key field value [field value …]</td></tr><tr><td>查询</td><td>hget key field</td></tr><tr><td></td><td>hgetall key</td></tr><tr><td>删除</td><td>hdel key field [field …]</td></tr><tr><td></td><td>del key [key …]</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hset user_1 name Jack</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; hset user_1 age 18</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; hget user_1 name</span><br><span class="line"><span class="string">"Jack"</span></span><br><span class="line">127.0.0.1:6379&gt; hgetall user_1</span><br><span class="line">1) <span class="string">"name"</span></span><br><span class="line">2) <span class="string">"Jack"</span></span><br><span class="line">3) <span class="string">"age"</span></span><br><span class="line">4) <span class="string">"18"</span></span><br><span class="line">127.0.0.1:6379&gt; hdel user_1 age</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; hgetall user_1</span><br><span class="line">1) <span class="string">"name"</span></span><br><span class="line">2) <span class="string">"Jack"</span></span><br><span class="line">127.0.0.1:6379&gt; del user_1</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">"mystr"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-3-List列表"><a href="#2-5-3-List列表" class="headerlink" title="2.5.3 List列表"></a>2.5.3 List列表</h5><p>List类型底层是一个双向字符串链表。里面的元素是有序的，可重复的</p><p>我们可以从链表的任何一端进行元素的增删</p><table><thead><tr><th align="right"></th><th align="center"><div align="center">redis的list是一个双向列表</th><th align="left"></th></tr></thead><tbody><tr><td align="right"></td><td align="center"><div align="center"> ===========================</td><td align="left"></td></tr><tr><td align="right">b</td><td align="center"><div align="center">  a</td><td align="left">c</td></tr><tr><td align="right"></td><td align="center"><div align="center">  ===========================</td><td align="left"></td></tr></tbody></table><table><thead><tr><th></th><th>用法</th><th></th></tr></thead><tbody><tr><td>新增</td><td>lpush key element [element …]</td><td>将元素压入左侧顶端</td></tr><tr><td></td><td>rpush key element [element …]</td><td>将元素压入右侧顶端</td></tr><tr><td>查询</td><td>lrange key start stop</td><td>从左向右查询<br />0 -1 查看所有</td></tr><tr><td>删除</td><td>lpop key</td><td>将左侧顶端元素弹出</td></tr><tr><td></td><td>rpop key</td><td>将右侧顶端元素弹出</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; lpush mylist a</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; lpush mylist b</span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379&gt; lpush mylist c</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">127.0.0.1:6379&gt; lrange mylist 0 -1</span><br><span class="line">1) <span class="string">"c"</span></span><br><span class="line">2) <span class="string">"b"</span></span><br><span class="line">3) <span class="string">"a"</span></span><br><span class="line">127.0.0.1:6379&gt; rpush mylist a</span><br><span class="line">(<span class="built_in">integer</span>) 4</span><br><span class="line">127.0.0.1:6379&gt; lrange mylist 0 -1</span><br><span class="line">1) <span class="string">"c"</span></span><br><span class="line">2) <span class="string">"b"</span></span><br><span class="line">3) <span class="string">"a"</span></span><br><span class="line">4) <span class="string">"a"</span></span><br><span class="line">127.0.0.1:6379&gt; lpop mylist</span><br><span class="line"><span class="string">"c"</span></span><br><span class="line">127.0.0.1:6379&gt; rpop mylist</span><br><span class="line"><span class="string">"a"</span></span><br><span class="line">127.0.0.1:6379&gt; lrange mylist 0 -1</span><br><span class="line">1) <span class="string">"b"</span></span><br><span class="line">2) <span class="string">"a"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-4-Set集合（无序）"><a href="#2-5-4-Set集合（无序）" class="headerlink" title="2.5.4 Set集合（无序）"></a>2.5.4 Set集合（无序）</h5><p>Set类型底层是一张hash表。里面的元素是无序的，不可重复的</p><table><thead><tr><th></th><th>用法</th><th></th></tr></thead><tbody><tr><td>新增</td><td>sadd key member [member …]</td><td>新增指定key元素</td></tr><tr><td>查询</td><td>smembers key</td><td>查询指定key元素</td></tr><tr><td>删除</td><td>srem key member [member …]</td><td>删除指定元素</td></tr><tr><td></td><td>del key [key …]</td><td>删除整个set集合</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sadd myset a</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset b</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset c</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset f</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset e</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset d</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset a</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; smembers myset</span><br><span class="line">1) <span class="string">"c"</span></span><br><span class="line">2) <span class="string">"f"</span></span><br><span class="line">3) <span class="string">"b"</span></span><br><span class="line">4) <span class="string">"e"</span></span><br><span class="line">5) <span class="string">"a"</span></span><br><span class="line">6) <span class="string">"d"</span></span><br><span class="line">127.0.0.1:6379&gt; srem myset a</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; smembers myset</span><br><span class="line">1) <span class="string">"c"</span></span><br><span class="line">2) <span class="string">"f"</span></span><br><span class="line">3) <span class="string">"b"</span></span><br><span class="line">4) <span class="string">"e"</span></span><br><span class="line">5) <span class="string">"d"</span></span><br><span class="line">127.0.0.1:6379&gt; del myset</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; smembers myset</span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-5-ZSet集合（有序）"><a href="#2-5-5-ZSet集合（有序）" class="headerlink" title="2.5.5 ZSet集合（有序）"></a>2.5.5 ZSet集合（有序）</h5><p>Zset,也称sortedSet, 在Set的基础上，加入了有序功能，在添加元素的时候，允许指定一个分数，它会 按照这个分数排序</p><table><thead><tr><th></th><th>用法</th><th></th></tr></thead><tbody><tr><td>新增</td><td>zadd key [NX | XX] [CH] [INCR] score member [score member …]</td><td>新增指定key元素</td></tr><tr><td>查询</td><td>zrange key start stop [WITHSCORES]</td><td>升序</td></tr><tr><td></td><td>zrevrange key start stop [WITHSCORES]</td><td>降序</td></tr><tr><td>删除</td><td>zrem key member [member …]</td><td>删除指定元素</td></tr><tr><td></td><td>del key [key …]</td><td>删除整个zset集合</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zadd myzset 10 aaaaa</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zadd myzset 30 bbbbb</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zadd myzset 20 ccccc</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zrange myzset 0 100</span><br><span class="line">1) <span class="string">"aaaaa"</span></span><br><span class="line">2) <span class="string">"ccccc"</span></span><br><span class="line">3) <span class="string">"bbbbb"</span></span><br><span class="line">127.0.0.1:6379&gt; zrange myzset 0 100 withscores</span><br><span class="line">1) <span class="string">"aaaaa"</span></span><br><span class="line">2) <span class="string">"10"</span></span><br><span class="line">3) <span class="string">"ccccc"</span></span><br><span class="line">4) <span class="string">"20"</span></span><br><span class="line">5) <span class="string">"bbbbb"</span></span><br><span class="line">6) <span class="string">"30"</span></span><br><span class="line">127.0.0.1:6379&gt; zrevrange myzset 0 100</span><br><span class="line">1) <span class="string">"bbbbb"</span></span><br><span class="line">2) <span class="string">"ccccc"</span></span><br><span class="line">3) <span class="string">"aaaaa"</span></span><br><span class="line">127.0.0.1:6379&gt; zrevrange myzset 0 100 withscores</span><br><span class="line">1) <span class="string">"bbbbb"</span></span><br><span class="line">2) <span class="string">"30"</span></span><br><span class="line">3) <span class="string">"ccccc"</span></span><br><span class="line">4) <span class="string">"20"</span></span><br><span class="line">5) <span class="string">"aaaaa"</span></span><br><span class="line">6) <span class="string">"10"</span></span><br><span class="line">127.0.0.1:6379&gt; zrem myzset aaaaa</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zrevrange myzset 0 100</span><br><span class="line">1) <span class="string">"bbbbb"</span></span><br><span class="line">2) <span class="string">"ccccc"</span></span><br><span class="line">127.0.0.1:6379&gt; del myzset</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zrevrange myzset 0 100</span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-6-通用命令"><a href="#2-5-6-通用命令" class="headerlink" title="2.5.6 通用命令"></a>2.5.6 通用命令</h5><table><thead><tr><th></th><th>命令</th></tr></thead><tbody><tr><td>模糊查询键</td><td>keys *</td></tr><tr><td>删除多个键</td><td>del key [key …]</td></tr><tr><td>根据键判断记录是否存在</td><td>exists key[key …]</td></tr><tr><td>根据键判断值类型</td><td>type key</td></tr><tr><td>选择数据库</td><td>select index (0~15)</td></tr><tr><td>清空当前数据库</td><td>flushdb [ASYNC]</td></tr><tr><td>清空所有数据库</td><td>flushall [ASYNC]</td></tr></tbody></table><h4 id="2-6-Redis持久化"><a href="#2-6-Redis持久化" class="headerlink" title="2.6 Redis持久化"></a>2.6 Redis持久化</h4><p>Redis的数据都是存在在内存之中的，那么这样一旦出现宕机，势必会导致数据的丢失，这就需要持久化操作，也就是要将redis在内存中的数据写到硬盘上保存。 </p><p>注意，redis虽然有持久化操作，但是其全部数据依旧都在内存中存在,也就是说硬盘上的只是为了安全和备份。</p><p>Redis提供了两种数据持久化的方式，分别是 RDB 和 AOF</p><ul><li><p>RDB:默认开启</p><p>在redis运行期间，根据指定时间节点对内存的数据进行快照拍摄，持久化到磁盘文件(dump.rdb文件) 指定时间规则拍摄快照</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">cat redis.conf | tail -n +265 | head -n 25    </span><br><span class="line"></span><br><span class="line"><span class="comment">################################ SNAPSHOTTING  ################################</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Save the DB on disk:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   save &lt;seconds&gt; &lt;changes&gt;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   Will save the DB if both the given number of seconds and the given</span></span><br><span class="line"><span class="comment">#   number of write operations against the DB occurred.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   In the example below the behaviour will be to save:</span></span><br><span class="line"><span class="comment">#   after 900 sec (15 min) if at least 1 key changed</span></span><br><span class="line"><span class="comment">#   after 300 sec (5 min) if at least 10 keys changed</span></span><br><span class="line"><span class="comment">#   after 60 sec if at least 10000 keys changed</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   Note: you can disable saving completely by commenting out all "save" lines.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   It is also possible to remove all the previously configured save</span></span><br><span class="line"><span class="comment">#   points by adding a save directive with a single empty string argument</span></span><br><span class="line"><span class="comment">#   like in the following example:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   save ""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1个key修改，15min后拍摄一次快照</span></span><br><span class="line">save 900 1</span><br><span class="line"><span class="comment">#10个key修改，5min后拍摄一次快照</span></span><br><span class="line">save 300 10</span><br><span class="line"><span class="comment">#10000个key修改，1min后拍摄一次快照</span></span><br><span class="line">save 60 10000</span><br></pre></td></tr></table></figure></li><li><p>AOF:默认关闭，需要手动开启</p><p>在redis运行期间，以日志记录的方式监听set操作，持久化到磁盘文件(appendonly.aof) </p><p>开启AOF:修改 redis.conf配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">cat redis.conf | tail -n +1018 | head -n 53          </span><br><span class="line"></span><br><span class="line"><span class="comment">############################## APPEND ONLY MODE ###############################</span></span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="comment"># Please check http://redis.io/topics/persistence for more information.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#若开启设置为yes</span></span><br><span class="line">appendonly no</span><br><span class="line"></span><br><span class="line"><span class="comment"># The name of the append only file (default: "appendonly.aof")</span></span><br><span class="line"></span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The fsync() call tells the Operating System to actually write data on disk</span></span><br><span class="line"><span class="comment"># instead of waiting for more data in the output buffer. Some OS will really flush</span></span><br><span class="line"><span class="comment"># data on disk, some other OS will just try to do it ASAP.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="comment">#日志持久化机制</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#每次执行set操作时都会持久化一次</span></span><br><span class="line"><span class="comment"># appendfsync always</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#每秒持久化一次</span></span><br><span class="line">appendfsync everysec</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据服务器，cpu处于idle情况，持久化一次</span></span><br><span class="line"><span class="comment"># appendfsync no</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="2-6-1-知识小结"><a href="#2-6-1-知识小结" class="headerlink" title="2.6.1 知识小结"></a>2.6.1 知识小结</h5><p>这二种持久化机制可以共存</p><table><thead><tr><th></th><th>RDB:把redis作为缓存来用</th><th>AOF:把redis作为独立数据库</th></tr></thead><tbody><tr><td>优点</td><td>性能高</td><td>几乎不会丢失数据</td></tr><tr><td>缺点</td><td>可能会丢失部分数据</td><td>性能较差</td></tr></tbody></table><h4 id="2-7-应用场景"><a href="#2-7-应用场景" class="headerlink" title="2.7 应用场景"></a>2.7 应用场景</h4><h5 id="2-7-1-缓存"><a href="#2-7-1-缓存" class="headerlink" title="2.7.1 缓存"></a>2.7.1 缓存</h5><p>将一些经常访问但又不会经常修改的数据，进行缓存，提高查询效率</p><h5 id="2-7-2-秒杀"><a href="#2-7-2-秒杀" class="headerlink" title="2.7.2 秒杀"></a>2.7.2 秒杀</h5><table><thead><tr><th>浏览器</th><th>➡秒杀</th><th>redis服务器</th><th>➡同步</th><th>MySQL</th></tr></thead><tbody><tr><td>商品</td><td></td><td>扣库存</td><td></td><td>同步数据</td></tr><tr><td></td><td></td><td>生成订单</td><td></td><td></td></tr><tr><td></td><td></td><td>支付发货</td><td></td><td></td></tr></tbody></table><h5 id="2-7-3-微博热搜"><a href="#2-7-3-微博热搜" class="headerlink" title="2.7.3 微博热搜"></a>2.7.3 微博热搜</h5><table><thead><tr><th>微博app</th><th>➡</th><th>redis</th></tr></thead><tbody><tr><td>微博热搜</td><td></td><td>ZSet评分有序集合</td></tr></tbody></table><h5 id="2-7-4-分布式session"><a href="#2-7-4-分布式session" class="headerlink" title="2.7.4 分布式session"></a>2.7.4 分布式session</h5><table><thead><tr><th>User</th><th>➡</th><th>Tomcat服务器</th><th>➡</th><th>redis</th></tr></thead><tbody><tr><td></td><td>第一次访问</td><td>Server_1</td><td>设置</td><td></td></tr><tr><td>User</td><td></td><td></td><td></td><td>User</td></tr><tr><td></td><td>第二次访问</td><td>Server_2</td><td>查询</td><td></td></tr></tbody></table><h5 id="2-7-5-验证码存储"><a href="#2-7-5-验证码存储" class="headerlink" title="2.7.5 验证码存储"></a>2.7.5 验证码存储</h5><table><thead><tr><th>网站</th><th>➡</th><th>redis</th></tr></thead><tbody><tr><td>发送短信</td><td></td><td>手机号:6位随机验证码</td></tr><tr><td></td><td></td><td>精准控制session只有5min</td></tr></tbody></table><h1 id="三-Jedis"><a href="#三-Jedis" class="headerlink" title="三.Jedis"></a>三.Jedis</h1><h4 id="3-1-Jedis使用"><a href="#3-1-Jedis使用" class="headerlink" title="3.1 Jedis使用"></a>3.1 Jedis使用</h4><p>Redis作为一款优秀的缓存服务器存在，大多数语言都提供了连接Redis的驱动包，在java中，比较出名</p><p>的是Jedis和Redisson，我们今天以Jedis为例学习，看看如何是用程序操作redis。</p><ul><li><p>常用API</p><table><thead><tr><th>方法</th><th>解释</th></tr></thead><tbody><tr><td>new Jedis(host, port)</td><td>创建jedis对象，参数host是redis服务器地址，参数port是redis服务端口</td></tr><tr><td>set(key,value)</td><td>设置字符串类型的数据</td></tr><tr><td>get(key)</td><td>获得字符串类型的数据</td></tr><tr><td>hset(key,field,value)</td><td>设置哈希类型的数据</td></tr><tr><td>hget(key,field)</td><td>获得哈希类型的数据</td></tr><tr><td>lpush(key,values)</td><td>设置列表类型的数据</td></tr><tr><td>lpop(key)</td><td>列表左面弹栈</td></tr><tr><td>rpop(key)</td><td>列表右面弹栈</td></tr><tr><td>del(key)</td><td>删除指定的key</td></tr></tbody></table></li></ul><ul><li><p>快速入门</p><ul><li><p>导入相关坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--jedis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>编写代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 快速入门之，向redis设置string类型的数据</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">// 1.创建连接对象</span></span><br><span class="line">    <span class="comment">// 默认连接 127.0.0.1 主机 和 6379 端口</span></span><br><span class="line">    Jedis jedis = <span class="keyword">new</span> Jedis();</span><br><span class="line">    <span class="comment">// 2.调用set方法设置数据</span></span><br><span class="line">    jedis.set(<span class="string">"Java"</span>, <span class="string">"Hello,World"</span>);</span><br><span class="line">    <span class="comment">// 3.释放资源</span></span><br><span class="line">    jedis.close();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 快速入门之，查询string类型数据</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQuery</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">// 1.创建连接对象</span></span><br><span class="line">    Jedis jedis = <span class="keyword">new</span> Jedis();</span><br><span class="line">    <span class="comment">// 2.调用get方法获取</span></span><br><span class="line">    String java = jedis.get(<span class="string">"Java"</span>);</span><br><span class="line">    System.out.println(java);</span><br><span class="line">    <span class="comment">// 3.释放资源</span></span><br><span class="line">    jedis.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-2-Jedis连接池"><a href="#3-2-Jedis连接池" class="headerlink" title="3.2 Jedis连接池"></a>3.2 Jedis连接池</h4><p>jedis连接资源的创建与销毁是非常消耗性能的，所以我们不希望频繁的创建和销毁它.基于这样的需求,就有了JedisPool技术。</p><ul><li><p>快速入门</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisPoolTest</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 测试jedis内置的连接池</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJedisPool</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 0.连接池配置对象</span></span><br><span class="line">    JedisPoolConfig jedisPoolConfig = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">    <span class="comment">// 最大连接数</span></span><br><span class="line">    jedisPoolConfig.setMaxTotal(<span class="number">100</span>);</span><br><span class="line">    <span class="comment">// 最大等待时间，单位是毫秒</span></span><br><span class="line">    jedisPoolConfig.setMaxWaitMillis(<span class="number">3000</span>);</span><br><span class="line">    <span class="comment">// 最大空闲连接数</span></span><br><span class="line">    jedisPoolConfig.setMaxIdle(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.创建连接池对象</span></span><br><span class="line">    JedisPool jedisPool = <span class="keyword">new</span> JedisPool();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.从池中获取连接</span></span><br><span class="line">    Jedis jedis = jedisPool.getResource();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.操作api</span></span><br><span class="line">    jedis.hset(<span class="string">"myhash"</span>, <span class="string">"id"</span>, <span class="string">"1"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.归还到连接池</span></span><br><span class="line">    jedis.close();</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>抽取为连接池工具类</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">jedis.host</span>=<span class="string">localhost</span></span><br><span class="line"><span class="meta">jedis.port</span>=<span class="string">6379</span></span><br><span class="line"><span class="meta">jedis.maxTotal</span>=<span class="string">20</span></span><br><span class="line"><span class="meta">jedis.maxIdle</span>=<span class="string">10</span></span><br></pre></td></tr></table></figure></li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> JedisPool jedisPool;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> String host;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Integer port;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Integer maxTotal;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Integer maxIdle;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始化连接池</span></span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">      ResourceBundle jedis = ResourceBundle.getBundle(<span class="string">"jedis"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 读取配置文件给变量赋值</span></span><br><span class="line">      <span class="comment">// 获取类加载读取 jedis.properties 获取io流</span></span><br><span class="line">      InputStream is = JedisUtils.class.getClassLoader().getResourceAsStream("jedis.properties");</span><br><span class="line">      <span class="comment">// 创建properties对象 加载io流</span></span><br><span class="line">      Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">      properties.load(is);</span><br><span class="line">      <span class="comment">// 给变量赋值</span></span><br><span class="line">      host = properties.getProperty(<span class="string">"jedis.host"</span>);</span><br><span class="line">      port = Integer.parseInt(properties.getProperty(<span class="string">"jedis.port"</span>));</span><br><span class="line">      maxTotal = Integer.parseInt(properties.getProperty(<span class="string">"jedis.maxTotal"</span>));</span><br><span class="line">      maxIdle = Integer.parseInt(properties.getProperty(<span class="string">"jedis.maxIdle"</span>));</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 创建连接池配置对象</span></span><br><span class="line">      JedisPoolConfig jedisPoolConfig = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">      jedisPoolConfig.setMaxTotal(maxTotal);</span><br><span class="line">      jedisPoolConfig.setMaxIdle(maxIdle);</span><br><span class="line">      <span class="comment">// 创建连接池对象</span></span><br><span class="line">      jedisPool = <span class="keyword">new</span> JedisPool(jedisPoolConfig, host, port);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 提供获取jedis连接的方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Jedis <span class="title">getJedis</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> jedisPool.getResource();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四-黑马旅游网"><a href="#四-黑马旅游网" class="headerlink" title="四.黑马旅游网"></a>四.黑马旅游网</h1><h4 id="4-1-缓存：导航条分类"><a href="#4-1-缓存：导航条分类" class="headerlink" title="4.1 缓存：导航条分类"></a>4.1 缓存：导航条分类</h4><h5 id="4-1-1-需求分析"><a href="#4-1-1-需求分析" class="headerlink" title="4.1.1 需求分析"></a>4.1.1 需求分析</h5><table><thead><tr><th>前端页面</th><th>➡</th><th>JavaServer</th><th>➡</th><th>SQL</th></tr></thead><tbody><tr><td>首页 门票 周边游</td><td></td><td>CategroyService</td><td>➡</td><td>NoSQL</td></tr><tr><td></td><td></td><td>先查询缓存(redis)，有就直接返回</td><td></td><td>redis</td></tr><tr><td></td><td></td><td>没有，再查MySQL，先同步到redis再返回</td><td>➡</td><td>MySQL</td></tr><tr><td></td><td></td><td>List&lt;Categroy&gt; list;<br>将list转为json数组字符串返回</td><td></td><td></td></tr></tbody></table><h5 id="4-1-2-代码实现"><a href="#4-1-2-代码实现" class="headerlink" title="4.1.2 代码实现"></a>4.1.2 代码实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoryServiceImpl</span> <span class="keyword">implements</span> <span class="title">CategoryService</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Category&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//        SqlSession sqlSession = MyBatisUtils.openSession();</span></span><br><span class="line">    <span class="comment">//        CategoryDao categoryDao = sqlSession.getMapper(CategoryDao.class);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//        List&lt;Category&gt; categoryList = categoryDao.findAll();</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//        MyBatisUtils.close(sqlSession);</span></span><br><span class="line"></span><br><span class="line">    List&lt;Category&gt; categoryList = <span class="keyword">null</span>;</span><br><span class="line">    ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">    Jedis jedis = JedisUtils.getJedis();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (jedis.exists(<span class="string">"travel_category"</span>)) &#123;</span><br><span class="line">      String json = jedis.get(<span class="string">"travel_category"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        categoryList = objectMapper.readValue(json, List<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(<span class="string">"Find In Redis"</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">      CategoryDao categoryDao = sqlSession.getMapper(CategoryDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">      categoryList = categoryDao.findAll();</span><br><span class="line"></span><br><span class="line">      MyBatisUtils.close(sqlSession);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        String json = objectMapper.writeValueAsString(categoryList);</span><br><span class="line">        jedis.set(<span class="string">"travel_category"</span>, json);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    jedis.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> categoryList;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-短信验证码存活时间5分钟"><a href="#4-2-短信验证码存活时间5分钟" class="headerlink" title="4.2 短信验证码存活时间5分钟"></a>4.2 短信验证码存活时间5分钟</h4><h4 id="4-2-1-需求分析"><a href="#4-2-1-需求分析" class="headerlink" title="4.2.1 需求分析"></a>4.2.1 需求分析</h4><p><img src="image-20200520150018632.png" alt=""></p><h4 id="4-2-2-代码实现"><a href="#4-2-2-代码实现" class="headerlink" title="4.2.2 代码实现"></a>4.2.2 代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendSms</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">  <span class="comment">// 1.获取请求参数</span></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">  <span class="comment">// 2.生成6位随机数(apache提供的)</span></span><br><span class="line">  String smsCode = RandomStringUtils.randomNumeric(<span class="number">6</span>);</span><br><span class="line">  <span class="comment">// 3.调用service完成短信发送，返回resultInfo</span></span><br><span class="line">  ResultInfo resultInfo = userService.sendSms(telephone, smsCode);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.如果发送成功，将验证码写入到session中</span></span><br><span class="line">  <span class="comment">//        if (resultInfo.getSuccess()) &#123;</span></span><br><span class="line">  <span class="comment">//            req.getSession().setAttribute("smsCode_" + telephone, smsCode);</span></span><br><span class="line">  <span class="comment">//            System.out.println("smsCode: " + smsCode);</span></span><br><span class="line">  <span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.如果发送成功，将验证码写入到session中</span></span><br><span class="line">  <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// a.获取jedis连接</span></span><br><span class="line">    Jedis jedis = JedisUtils.getJedis();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// b.将验证码设置到jedis中，存活1分钟</span></span><br><span class="line">    jedis.setex(<span class="string">"smsCode_"</span> + telephone, <span class="number">60</span>, smsCode);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// c.释放资源</span></span><br><span class="line">    jedis.close();</span><br><span class="line">    System.out.println(<span class="string">"smsCode: "</span> + smsCode);</span><br><span class="line">  &#125;</span><br><span class="line">  javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// a.获取请求参数</span></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">  String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// b.获取session中验证码</span></span><br><span class="line">  <span class="comment">//        String sessionCode = (String) req.getSession().getAttribute("smsCode_" + telephone);</span></span><br><span class="line"></span><br><span class="line">  Jedis jedis = JedisUtils.getJedis();</span><br><span class="line">  String sessionCode = jedis.get(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// c.进行校验</span></span><br><span class="line">  <span class="keyword">if</span> (sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode))) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证码不正确</span></span><br><span class="line">    req.setAttribute(<span class="string">"resultInfo"</span>, <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"SMS Code not correct"</span>));</span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//获取请求参数</span></span><br><span class="line">  Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//封装User中</span></span><br><span class="line">  User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//调用service，实现注册</span></span><br><span class="line">  ResultInfo resultInfo = userService.register(param);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">    resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">    <span class="comment">//            req.getSession().removeAttribute("smsCode_" + telephone);</span></span><br><span class="line">    <span class="comment">// d.升级为，清除redis</span></span><br><span class="line">    jedis.del(<span class="string">"smsCode"</span> + telephone);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">  jedis.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">telLogin</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 1.接收请求参数telephone</span></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2.调用service查询</span></span><br><span class="line">  User currentUser = userService.findByTelephone(telephone);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3.校验手机号</span></span><br><span class="line">  ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.3 校验</span></span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number not Registered"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//成功</span></span><br><span class="line">    String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//            String sessionCode = (String) req.getSession().getAttribute("smsCode_" + telephone);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 升级为从redis中获取</span></span><br><span class="line">    Jedis jedis = JedisUtils.getJedis();</span><br><span class="line">    String sessionCode = jedis.get(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode))) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Wrong SMS Code"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"currentUser"</span>, currentUser);</span><br><span class="line">      <span class="comment">// 清除session中验证码</span></span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Login Success"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//req.getSession().removeAttribute("smsCode_" + telephone);</span></span><br><span class="line">      <span class="comment">// 清除redis中验证码</span></span><br><span class="line">      jedis.del(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 释放资源</span></span><br><span class="line">    jedis.close();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//将resultInfo转为Json响应到客户端</span></span><br><span class="line">  javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 NoSQL</strong></p><p><strong>### 非关系型数据库，not only sql，弥补关系型数据库一些不足</strong></p><p><strong>### 特点：</strong></p><p>- 关系性</p><p>​    - 1）数据之间存在关联关系</p><p>​    - 2）数据存储在硬盘</p><p>- 非关系型</p><p>​    - 1）数据之间不存在关联关系</p><p>​    - 2）数据存储在内存</p><p><strong>### 解决：互联和行业特点</strong></p><p>- 高并发</p><p>- 高性能</p><p>- 高可用</p><p>- 海量数据</p><p><strong>### nosql分类</strong></p><p>- 键值对</p><p>​    - redis</p><p>- 文档类型（json）</p><p>​    - mongoDB</p><p>- 列存储</p><p>​    - hbase</p><p>- 图形（关系结构）</p><p><strong>## 二 Redis</strong></p><p><strong>### 介绍</strong></p><p>- C语言编写高性能键值对数据库</p><p><strong>### 数据类型</strong></p><p>- string</p><p>- hash</p><p>- linkedList</p><p>- hashset</p><p>- linkedHashSet</p><p><strong>### 命令</strong></p><p>- 字符串</p><p>​    - set key value</p><p>​    - get key</p><p>​    - del key</p><p>​    - setex key 存活时间 value</p><p>​    - incr key</p><p>​        - value+1</p><p>- 哈希</p><p>​    - hset key hkey hvalue</p><p>​    - hget key hkey</p><p>​    - hgetall key</p><p>​    - hrem key hkey</p><p>​    - del key</p><p>- 列表</p><p>​    - lpush key value</p><p>​    - rpush key value</p><p>​    - lrange key 0 -1</p><p>​    - lpop key</p><p>​    - rpop key</p><p>​    - del key</p><p>- 集合</p><p>​    - sadd key value</p><p>​    - smembers key</p><p>​    - srem key value</p><p>- 有序集合</p><p>​    - zadd key score value</p><p>​    - zrange key 0 -1 withscores</p><p>​    - zrevrange key 0 -1 withscores</p><p>​    - zrem key value</p><p>- 通用命令</p><p>​    - keys *</p><p>​    - del key1 key2 key3</p><p>​    - exists key</p><p>​    - type key</p><p>​    - select 0~15</p><p>​    - flushdb</p><p>​    - flushal</p><p><strong>### 持久化</strong></p><p>- RDB</p><p>​    - 默认开启，在指定间隔时间将内存的数据拍摄快照，持久化到磁盘</p><p>​        - 1）优点：性能高</p><p>​        - 2）缺点：丢失数据</p><p>- AOF</p><p>​    - 手动开启，根据日志记录方式监听redis的写（set）操作，持久化到磁盘</p><p>​        - 1）优点：保证数据的安全</p><p>​        - 2）缺点：性能稍差</p><p><strong>### 应用场景</strong></p><p>- 1）缓存</p><p>- 2）秒杀</p><p>- 3）微博热搜</p><p>- 4）验证码存储</p><p>- 5）分布式session</p><p><strong>## 三 Jedis</strong></p><p><strong>### 通过java语言操作redis，api与redis命令相似</strong></p><p><strong>### 快速入门</strong></p><p>- 1）导入jar坐标</p><p>- 2）编写代码</p><p>​    - //1.创建连接对象</p><p>​    - //2.操作api</p><p>​    - //3.关闭连接</p><p><strong>### Jedis连接池</strong></p><p><strong>## 四 优化：黑马旅游网</strong></p><p><strong>### 4.1 缓存：导航条分类</strong></p><p><strong>### 4.2 短信验证码存活时间5分钟</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;NoSQL&lt;/li&gt;
&lt;li&gt;Redis入门&lt;ul&gt;
&lt;li&gt;5种数据类型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Jedis入门&lt;/li&gt;
&lt;li&gt;优化黑马旅游网&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十七）</title>
    <link href="http://yoursite.com/2020/05/18/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B8%83%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/18/就业班学习笔记（五十七）/</id>
    <published>2020-05-18T01:12:02.000Z</published>
    <updated>2020-05-19T15:39:02.892Z</updated>
    
    <content type="html"><![CDATA[<ul><li>用户中心</li><li>面向接口编程和工厂模式</li><li>收货地址</li><li>导航条</li></ul><a id="more"></a><h1 id="一-个人信息回显"><a href="#一-个人信息回显" class="headerlink" title="一.个人信息回显"></a>一.个人信息回显</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><p><img src="image-20200518092504789.png" alt=""></p><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/UserServlet?action=userInfo" class="collection"&gt;个人中心&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户中心回显</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">userInfo</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 校验session</span></span><br><span class="line">  Object currentUser = request.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    response.sendRedirect(request.getContextPath() + <span class="string">"/index.jsp"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 转发到 home_index.jsp</span></span><br><span class="line">  request.getRequestDispatcher(<span class="string">"/home_index.jsp"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>home_left.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;currentUser.pic&#125;"</span> width=<span class="string">"160px"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"img-circle"</span> alt=<span class="string">""</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>home_index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/UserServlet"</span> method=<span class="string">"post"</span> enctype=<span class="string">"application/x-www-form-urlencoded"</span>&gt;</span><br><span class="line">  &lt;%--回显id到隐藏域--%&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"uid"</span> value=<span class="string">"$&#123;currentUser.uid&#125;"</span>&gt;</span><br><span class="line">  &lt;%--方法隐藏域--%&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"updateInfo"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-content "</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">"one"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-pane active"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"sui-form form-horizontal"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line">          &lt;label for="inputName" class="control-label"&gt;昵称：&lt;/label&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> id=<span class="string">"inputName"</span> name=<span class="string">"nickname"</span> placeholder=<span class="string">"昵称"</span> value=<span class="string">"$&#123;currentUser.nickname&#125;"</span>&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line">          &lt;label class="control-label"&gt;性别：&lt;/label&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;input type="radio" name="sex" value="1" &lt;c:if test="$&#123;currentUser.sex == 1&#125;"&gt;checked="checked"&lt;/c:if&gt;&gt;&lt;b&gt;男&lt;/b&gt;</span><br><span class="line"></span><br><span class="line">          &amp;nbsp;&amp;nbsp;</span><br><span class="line">          &lt;input type="radio" name="sex" value="0" &lt;c:if test="$&#123;currentUser.sex == 0&#125;"&gt;checked="checked"&lt;/c:if&gt;&gt;&lt;b&gt;女&lt;/b&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line">      &lt;label class="control-label"&gt;生日：&lt;/label&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"text"</span> name=<span class="string">"birthday"</span> placeholder=<span class="string">"生日"</span> value=<span class="string">"$&#123;currentUser.birthday&#125;"</span>&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line">      &lt;label class="control-label"&gt;邮箱：&lt;/label&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"text"</span> name=<span class="string">"email"</span> placeholder=<span class="string">"邮箱"</span> value=<span class="string">"$&#123;currentUser.email&#125;"</span>&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line">        &lt;button type="submit" class="sui-btn btn-primary"&gt;更新&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;div id=<span class="string">"two"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-pane"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"new-photo"</span>&gt;</span><br><span class="line">    &lt;p&gt;当前头像：&lt;/p&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"upload"</span>&gt;</span><br><span class="line">      &lt;img id=<span class="string">"imgShow_WU_FILE_0"</span> width=<span class="string">"100"</span> height=<span class="string">"100"</span></span><br><span class="line">           src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;currentUser.pic&#125;"</span></span><br><span class="line">           alt=<span class="string">""</span>&gt;</span><br><span class="line">      &lt;input type=<span class="string">"file"</span> id=<span class="string">"up_img_WU_FILE_0"</span> name=<span class="string">"pic"</span>/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-个人信息修改"><a href="#二-个人信息修改" class="headerlink" title="二.个人信息修改"></a>二.个人信息修改</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><p><img src="image-20200518094419285.png" alt=""></p><h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><ul><li><p>home_index.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/UserServlet"</span> method=<span class="string">"post"</span></span><br><span class="line">      enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">  &lt;%--回显id到隐藏域--%&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"uid"</span> value=<span class="string">"$&#123;currentUser.uid&#125;"</span>&gt;</span><br><span class="line">  &lt;%--方法隐藏域--%&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 个人信息修改</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">updateInfo</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 1.接收请求参数map</span></span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">    <span class="comment">// 2.封装user实体</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">    <span class="comment">// 3.调用service更新</span></span><br><span class="line">    userService.updateInfo(param);</span><br><span class="line">    <span class="comment">// 4.根据uid查询service，重置到session中</span></span><br><span class="line">    User currentUser = userService.findByUid(param.getUid());</span><br><span class="line">    request.getSession().setAttribute(<span class="string">"currentUser"</span>, currentUser);</span><br><span class="line">    <span class="comment">//5.重定向到 用户中心回显</span></span><br><span class="line">    response.sendRedirect(request.getContextPath()+<span class="string">"/UserServlet?action=userInfo"</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServiceI</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateInfo</span><span class="params">(User param)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 获取 UserDao代理对象</span></span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调用dao</span></span><br><span class="line">  userDao.update(param);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 关闭sqlSession</span></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据uid查询</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByUid</span><span class="params">(<span class="keyword">int</span> uid)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 获取 UserDao代理对象</span></span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调用dao</span></span><br><span class="line">  User user = userDao.findByUid(uid);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 关闭sqlSession</span></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line">  <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserDao(接口+映射)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 动态更新</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(User param)</span></span>;</span><br><span class="line"><span class="comment">// uid查询</span></span><br><span class="line"><span class="function">User <span class="title">findByUid</span><span class="params">(<span class="keyword">int</span> uid)</span></span>;</span><br></pre></td></tr></table></figure></li></ul>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">  update tab_user</span><br><span class="line">  <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 字符串类型：除了非空判断，再添加非空串判断 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"nickname != null and nickname !=''"</span>&gt;</span></span><br><span class="line">      nickname = #&#123;nickname&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null and sex !=''"</span>&gt;</span></span><br><span class="line">      sex = #&#123;sex&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"birthday != null and birthday !=''"</span>&gt;</span></span><br><span class="line">      birthday = #&#123;birthday&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email != null and email !=''"</span>&gt;</span></span><br><span class="line">      email = #&#123;email&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"pic != null and pic !=''"</span>&gt;</span></span><br><span class="line">      pic = #&#123;pic&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">  where uid = #&#123;uid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">  select * from tab_user where uid = #&#123;uid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-3-文件上传"><a href="#2-3-文件上传" class="headerlink" title="2.3 文件上传"></a>2.3 文件上传</h4><h5 id="2-3-1-技术分析"><a href="#2-3-1-技术分析" class="headerlink" title="2.3.1 技术分析"></a>2.3.1 技术分析</h5><ul><li><p>文件上传前端三要素</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt; </span><br><span class="line">  头像:&lt;input type=<span class="string">"file"</span> name=<span class="string">"pic"</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>文件上传后端使用servlet3.0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="meta">@MultipartConfig</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"><span class="comment">// 文件对象</span></span><br><span class="line">Part part = request.getPart(<span class="string">"pic"</span>);</span><br><span class="line"><span class="comment">// 获取文件名</span></span><br><span class="line">String filename = part.getSubmittedFileName(); <span class="comment">// 文件保存(指定保存路径)</span></span><br><span class="line">part.write(realPath);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-3-2-代码实现"><a href="#2-3-2-代码实现" class="headerlink" title="2.3.2 代码实现"></a>2.3.2 代码实现</h5><ul><li><p>home_index.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/UserServlet"</span> method=<span class="string">"post"</span></span><br><span class="line">      enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServlet(完善刚才个人修改)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="meta">@MultipartConfig</span> <span class="comment">// 文件上传注解....</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 个人信息修改</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">updateInfo</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 1.接收请求参数map</span></span><br><span class="line">      Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">      <span class="comment">// 2.封装user实体</span></span><br><span class="line">      User param = <span class="keyword">new</span> User();</span><br><span class="line">      BeanUtils.populate(param, parameterMap);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// -----文件上传 start</span></span><br><span class="line">      <span class="comment">// a.获取文件对象</span></span><br><span class="line">      Part part = request.getPart(<span class="string">"pic"</span>);</span><br><span class="line">      <span class="comment">// b.获取文件名</span></span><br><span class="line">      String filename = part.getSubmittedFileName();</span><br><span class="line">      <span class="comment">// c.判断用户是否提交文件</span></span><br><span class="line">      <span class="keyword">if</span> (filename.length()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// d.指定文件路径</span></span><br><span class="line">        String path = <span class="string">"/pic/"</span>+IdUtil.simpleUUID()+filename;</span><br><span class="line">        <span class="comment">// e.获取服务器真实路径 （d:sadfsadf/asdfasdf/saf/asdf.jpg）</span></span><br><span class="line">        String realPath = request.getServletContext().getRealPath(path);</span><br><span class="line">        <span class="comment">// f.保存文件</span></span><br><span class="line">        part.write(realPath);</span><br><span class="line">        <span class="comment">// g.给user设置图片访问地址</span></span><br><span class="line">        param.setPic(path);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// -----文件上传 end</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 3.调用service更新</span></span><br><span class="line">      userService.updateInfo(param);</span><br><span class="line">      <span class="comment">// 4.根据uid查询service，重置到session中</span></span><br><span class="line">      User currentUser = userService.findByUid(param.getUid());</span><br><span class="line">      request.getSession().setAttribute(<span class="string">"currentUser"</span>, currentUser);</span><br><span class="line">      <span class="comment">//5.重定向到 用户中心回显</span></span><br><span class="line">      response.sendRedirect(request.getContextPath() + <span class="string">"/UserServlet?action=userInfo"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-面向接口编程"><a href="#三-面向接口编程" class="headerlink" title="三.面向接口编程"></a>三.面向接口编程</h1><h4 id="3-1-使用传统开发遇到的问题"><a href="#3-1-使用传统开发遇到的问题" class="headerlink" title="3.1 使用传统开发遇到的问题"></a>3.1 使用传统开发遇到的问题</h4><p><img src="image-20200518105504923.png" alt=""></p><h4 id="3-2-面向接口编程解决的问题"><a href="#3-2-面向接口编程解决的问题" class="headerlink" title="3.2 面向接口编程解决的问题"></a>3.2 面向接口编程解决的问题</h4><p><img src="image-20200518110515225.png" alt=""></p><h1 id="四-对象管理"><a href="#四-对象管理" class="headerlink" title="四.对象管理"></a>四.对象管理</h1><h4 id="4-1-工厂模式"><a href="#4-1-工厂模式" class="headerlink" title="4.1 工厂模式"></a>4.1 工厂模式</h4><p>在java的世界中</p><blockquote><p>之前的方式需要一个对象，需要自己 new 关键字来创建 </p><p>从今天开始，我们需要一个对象(各层之间)，可以通过一个工厂来帮你创建(“类名”)</p></blockquote><p>进入企业开发，我们不再手动new对象，而是通过一个Factory工厂对象帮你创建(spring的设计思想)</p><p><img src="image-20200518113613291.png" alt=""></p><h4 id="4-2-工厂实现"><a href="#4-2-工厂实现" class="headerlink" title="4.2 工厂实现"></a>4.2 工厂实现</h4><ul><li><p>导入依赖坐标:dom4j+xpath</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--dom4j--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>编写beans.xml 配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.UserServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"addressService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AddressServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"categoryService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.CategoryServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写BeanFactory工厂</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 根据指定对象id创建对应对象实例</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 声明返回对象</span></span><br><span class="line">    Object result = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 1.通过类加载器加载beans.xml配置文件，获取io流</span></span><br><span class="line">      InputStream in = BeanFactory.class.getClassLoader().getResourceAsStream("beans.xml");</span><br><span class="line">      <span class="comment">// 2.创建dom4j核心解析器对象</span></span><br><span class="line">      SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">      <span class="comment">// 3.读取io流，解析xml，创建document对象</span></span><br><span class="line">      Document document = saxReader.read(in);</span><br><span class="line">      <span class="comment">// 4.编写xpath表达式</span></span><br><span class="line">      <span class="comment">// String xpath = "//bean[@id='userService']";</span></span><br><span class="line">      String xpath = <span class="string">"//bean[@id='"</span> + id + <span class="string">"']"</span>;</span><br><span class="line">      <span class="comment">// 5.查找对应bean标签 element对象</span></span><br><span class="line">      Element element = (Element) document.selectSingleNode(xpath);</span><br><span class="line">      <span class="comment">// 6.获取该标签的，class属性值，全限定类名</span></span><br><span class="line">      String className = element.attributeValue(<span class="string">"class"</span>);</span><br><span class="line">      <span class="comment">// 7.通过反射机制，加载到jvm虚拟机</span></span><br><span class="line">      Class&lt;?&gt; clazz = Class.forName(className);</span><br><span class="line">      <span class="comment">// 8.创建对象实例</span></span><br><span class="line">      result = clazz.newInstance();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// UserService userService = new UserServiceImpl();</span></span><br><span class="line">    UserService userService = (UserService) BeanFactory.getBean(<span class="string">"userService"</span>);</span><br><span class="line">    System.out.println(userService.findByUsername(<span class="string">"tom"</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>修改UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UserService userService = (UserService) BeanFactory.getBean(<span class="string">"userService"</span>);</span><br><span class="line"><span class="comment">//    UserService userService = new UserServiceImpl();</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="image-20200518115916980.png" alt=""></p><h1 id="五-查询收货人地址列表"><a href="#五-查询收货人地址列表" class="headerlink" title="五.查询收货人地址列表"></a>五.查询收货人地址列表</h1><h4 id="5-1-需求分析"><a href="#5-1-需求分析" class="headerlink" title="5.1 需求分析"></a>5.1 需求分析</h4><p><img src="image-20200518141220320.png" alt=""></p><h4 id="5-2-代码实现"><a href="#5-2-代码实现" class="headerlink" title="5.2 代码实现"></a>5.2 代码实现</h4><ul><li><p>home_left.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;dd&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/AddressServlet?action=findByUid"&gt;地址管理&lt;/a&gt;&lt;/dd&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/AddressServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddressServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  AddressService addressService = (AddressService) BeanFactory.getBean(<span class="string">"addressService"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 模板，方便我们去复制</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xxx</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 根据uid查询地址列表</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByUid</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.校验session总是否有user</span></span><br><span class="line">    User currentUser = (User) request.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">    <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">      response.sendRedirect(request.getContextPath() + <span class="string">"/index.jsp"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2.根据uid查询地址列表</span></span><br><span class="line">    List&lt;Address&gt; addressList = addressService.findByUid(currentUser.getUid());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.设置到request域</span></span><br><span class="line">    request.setAttribute(<span class="string">"addressList"</span>, addressList);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.转发到 地址页面</span></span><br><span class="line">    request.getRequestDispatcher(<span class="string">"/home_address.jsp"</span>).forward(request, response);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddressServiceImpl</span> <span class="keyword">implements</span> <span class="title">AddressService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Address&gt; <span class="title">findByUid</span><span class="params">(<span class="keyword">int</span> uid)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 创建代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    AddressDao addressDao = sqlSession.getMapper(AddressDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用dao</span></span><br><span class="line">    List&lt;Address&gt; addressList = addressDao.findByUid(uid);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> addressList;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressDao(接口+映射)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AddressDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Address&gt; <span class="title">findByUid</span><span class="params">(<span class="keyword">int</span> uid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.AddressDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Address"</span>&gt;</span></span><br><span class="line">    select * from tab_address where uid = #&#123;uid&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"addressService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AddressServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>home_address.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:forEach items=<span class="string">"$&#123;addressList&#125;"</span> <span class="keyword">var</span>=<span class="string">"address"</span>&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">    &lt;td&gt;$&#123;address.contact&#125;&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;$&#123;address.address&#125;&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;$&#123;address.telephone&#125;&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;</span><br><span class="line">      &lt;a href="$&#123;pageContext.request.contextPath&#125;/AddressServlet?action=updateAddress&amp;aid=$&#123;address.aid&#125;"&gt;编辑&lt;/a&gt;</span><br><span class="line">      &lt;a href="$&#123;pageContext.request.contextPath&#125;/AddressServlet?action=deleteAddress&amp;aid=$&#123;address.aid&#125;"&gt;删除&lt;/a&gt;</span><br><span class="line">      &lt;a href="$&#123;pageContext.request.contextPath&#125;/AddressServlet?action=setDefaultAddress&amp;aid=$&#123;address.aid&#125;"&gt;设为默认&lt;/a&gt;</span><br><span class="line">    &lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">  &lt;td&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="六-添加收货人地址"><a href="#六-添加收货人地址" class="headerlink" title="六.添加收货人地址"></a>六.添加收货人地址</h1><h4 id="6-1-需求分析"><a href="#6-1-需求分析" class="headerlink" title="6.1 需求分析"></a>6.1 需求分析</h4><p><img src="image-20200518143549931.png" alt=""></p><h4 id="6-2-代码实现"><a href="#6-2-代码实现" class="headerlink" title="6.2 代码实现"></a>6.2 代码实现</h4><ul><li><p>home_address.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=<span class="string">"xxxx"</span> action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/AddressServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"save"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input type=<span class="string">"submit"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary"</span> value=<span class="string">"保存"</span>/&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存收货地址</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 0.校验session总是否有user</span></span><br><span class="line">  User currentUser = (User) request.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    response.sendRedirect(request.getContextPath() + <span class="string">"/index.jsp"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 1.接收请求参数 map</span></span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">    <span class="comment">// 2.封装到 address实体中</span></span><br><span class="line">    Address param = <span class="keyword">new</span> Address();</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">    <span class="comment">// 指定非默认地址</span></span><br><span class="line">    param.setIsdefault(<span class="string">"0"</span>);</span><br><span class="line">    <span class="comment">// 指定用户</span></span><br><span class="line">    param.setUser(currentUser);</span><br><span class="line">    <span class="comment">// 3.调用service保存</span></span><br><span class="line">    addressService.save(param);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.重定向</span></span><br><span class="line">    response.sendRedirect(request.getContextPath() + <span class="string">"/AddressServlet?action=findByUid"</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Address param)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 创建代理对象</span></span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  AddressDao addressDao = sqlSession.getMapper(AddressDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调用dao保存</span></span><br><span class="line">  addressDao.save(param);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 关闭会话</span></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Address param)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">  insert into tab_address(uid,contact,address,telephone,isdefault)</span><br><span class="line">  values(#&#123;user.uid&#125;,#&#123;contact&#125;,#&#123;address&#125;,#&#123;telephone&#125;,#&#123;isdefault&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="七-导航分类"><a href="#七-导航分类" class="headerlink" title="七.导航分类"></a>七.导航分类</h1><h4 id="7-1-需求分析"><a href="#7-1-需求分析" class="headerlink" title="7.1 需求分析"></a>7.1 需求分析</h4><p><img src="image-20200518150252445.png" alt=""></p><h4 id="7-1-代码实现"><a href="#7-1-代码实现" class="headerlink" title="7.1 代码实现"></a>7.1 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  $(function () &#123;</span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/CategoryServlet?action=findAll'</span>;</span><br><span class="line">    $.get(url,function (resp) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoryServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  CategoryService categoryService = (CategoryService) BeanFactory.getBean(<span class="string">"categoryService"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 模板，方便我们去复制</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xxx</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ajax查询所有</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.调用service查询</span></span><br><span class="line">    List&lt;Category&gt; categoryList = categoryService.findAll();</span><br><span class="line">    <span class="comment">// 2.转为json，响应到客户端</span></span><br><span class="line">    javaToJsonWriteClient(categoryList, response);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoryServiceImpl</span> <span class="keyword">implements</span> <span class="title">CategoryService</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Category&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    CategoryDao categoryDao = sqlSession.getMapper(CategoryDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Category&gt; categoryList= categoryDao.findAll();</span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> categoryList;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CategoryDao</span> </span>&#123;</span><br><span class="line">  <span class="function">List&lt;Category&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.CategoryDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Category"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_category ORDER BY cid</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"categoryService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.CategoryServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>header.jsp</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  $(function () &#123;</span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/CategoryServlet?action=findAll'</span>;</span><br><span class="line">    $.get(url,function (resp) &#123;</span><br><span class="line">      <span class="keyword">for</span>(let c of resp)&#123;</span><br><span class="line">        $(<span class="string">'#categoryUI'</span>).append(<span class="string">'&lt;li&gt;&lt;a href="route_list.jsp"&gt;'</span>+c.cname+<span class="string">'&lt;/a&gt;&lt;/li&gt;'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 个人信息回显</strong></p><p><strong>### 校验session中user存在，放行</strong></p><p><strong>## 二 个人信息修改</strong></p><p><strong>### 基本字段</strong></p><p><strong>### 文件上传</strong></p><p>- 前端三要素</p><p>- 后端</p><p>​    - servlet3.0</p><p>​        - @MultipartConfig</p><p><strong>## 三 面向接口编程</strong></p><p><strong>### 三层架构：高内聚、低耦合</strong></p><p><strong>## 四 对象管理</strong></p><p><strong>### 工厂模式</strong></p><p>- 之前各层之间需要对象， new来创建</p><p>​    - 耦合</p><p>- 现在各层之间需要对象，通过工厂创建</p><p>​    - 松耦合</p><p><strong>### 课下抄一遍工厂类</strong></p><p>- 模拟spring雏形</p><p><strong>## 五 查询收货人地址列表</strong></p><p><strong>## 六 添加收货人地址</strong></p><p><strong>### 修改</strong></p><p><strong>### 删除</strong></p><p><strong>### 指定默认</strong></p><p><strong>## 七 导航分类</strong></p><p><strong>### ajax技术查询分类表</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;用户中心&lt;/li&gt;
&lt;li&gt;面向接口编程和工厂模式&lt;/li&gt;
&lt;li&gt;收货地址&lt;/li&gt;
&lt;li&gt;导航条&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十六）</title>
    <link href="http://yoursite.com/2020/05/17/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E5%85%AD%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/17/就业班学习笔记（五十六）/</id>
    <published>2020-05-17T01:03:54.000Z</published>
    <updated>2020-05-17T16:45:19.768Z</updated>
    
    <content type="html"><![CDATA[<ul><li>密码登录</li><li>短信登录</li><li>用户退出</li><li>SVN多人协作开发文本控制工具</li></ul><a id="more"></a><h1 id="一-用户名密码登录"><a href="#一-用户名密码登录" class="headerlink" title="一.用户名密码登录"></a>一.用户名密码登录</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><p><img src="image-20200517092917290.png" alt=""></p><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"button"</span> id=<span class="string">"pwdLogin"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary"</span> value=<span class="string">"登录"</span>/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">//给按钮绑定点击事件</span></span><br><span class="line">  $(<span class="string">'#pwdLogin'</span>).click(function () &#123;</span><br><span class="line">    <span class="comment">//使用表单序列化函数(name=value&amp;name=value)</span></span><br><span class="line">    let data = $(<span class="string">'#pwdLoginForm'</span>).serialize();</span><br><span class="line">    <span class="comment">//发送ajax</span></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      <span class="comment">// 返回的是resultInfo对象，判断</span></span><br><span class="line">      <span class="keyword">if</span> (resp.success) &#123;</span><br><span class="line">        <span class="comment">// 成功，刷新页面</span></span><br><span class="line">        location.reload();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 失败，友情提示</span></span><br><span class="line">        $(<span class="string">'pwdLoginSpan'</span>).html(resp.message);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ajax密码登录</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">pwdLogin</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//接收请求参数</span></span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line">    <span class="comment">//封装user实体</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">    <span class="comment">//调用service登录，返回resultInfo</span></span><br><span class="line">    ResultInfo resultInfo = userService.pwdLogin(param);</span><br><span class="line">    <span class="comment">//如果登录成功，将user写入session中</span></span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      <span class="comment">//resultInfo.getData() 获取service返回的user对象</span></span><br><span class="line">      req.getSession().setAttribute(<span class="string">"currentUser"</span>, resultInfo.getData());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将resultInfo转为Json响应到客户端</span></span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ResultInfo <span class="title">pwdLogin</span><span class="params">(User param)</span> </span>&#123;</span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//根据用户名查询并校验</span></span><br><span class="line">  User currentUser = userDao.findByUsername(param.getUsername());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Doesn't Exist"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//校验密码</span></span><br><span class="line">  <span class="comment">//将用户输入的密码进行加密</span></span><br><span class="line">  String md5 = SecureUtil.md5(param.getPassword());</span><br><span class="line">  <span class="comment">//对比数据库</span></span><br><span class="line">  <span class="keyword">if</span> (!currentUser.getPassword().equals(md5)) &#123;</span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Password not correct"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//登录成功</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>,<span class="string">"Login Success"</span>,currentUser);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--广告--%&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"top_banner"</span>&gt;</span><br><span class="line">  &lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/top_banner.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;%--右侧按钮--%&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"shortcut"</span>&gt;</span><br><span class="line">  &lt;!-- 未登录状态 --&gt;</span><br><span class="line">  &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;empty currentUser&#125;"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"login_out"</span>&gt;</span><br><span class="line">      &lt;a id="loginBtn" data-toggle="modal" data-target="#loginModel" style="cursor: pointer;"&gt;登录&lt;/a&gt;</span><br><span class="line">      &lt;a href="register.jsp" style="cursor: pointer;"&gt;注册&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/c:if&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-手机短信登录"><a href="#二-手机短信登录" class="headerlink" title="二.手机短信登录"></a>二.手机短信登录</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><p><img src="image-20200517101427534.png" alt=""></p><h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"button"</span> id=<span class="string">"login_sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  $(<span class="string">'#login_sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">    let telephone = $(<span class="string">'#login_telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    let data = <span class="string">'action=sendSms&amp;telephone='</span> + telephone;</span><br><span class="line"></span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      alert(resp.message);</span><br><span class="line">    &#125;)</span><br><span class="line">    countDownLogin(<span class="keyword">this</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  let num_header = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">function <span class="title">countDownLogin</span><span class="params">(obj)</span> </span>&#123;</span><br><span class="line">    num_header--;</span><br><span class="line">    <span class="keyword">if</span> (num_header == <span class="number">0</span>) &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">false</span>);</span><br><span class="line">      $(obj).val(<span class="string">'Resend SMS Code'</span>);</span><br><span class="line">      num_header = <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">true</span>);</span><br><span class="line">      $(obj).val(num_header + <span class="string">'seconds latter ,Could Resend SMS Code'</span>);</span><br><span class="line">      setTimeout(function () &#123;</span><br><span class="line">        countDownLogin(obj);</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">telLogin</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">  User currentUser = userService.findByTelephone(telephone);</span><br><span class="line"></span><br><span class="line">  ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number not Registered"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">    String sessionCode = (String) req.getSession().getAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode))) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Wrong SMS Code"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"currentUser"</span>, currentUser);</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Login Success"</span>);</span><br><span class="line"></span><br><span class="line">      req.getSession().removeAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//将resultInfo转为Json响应到客户端</span></span><br><span class="line">  javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByTelephone</span><span class="params">(String phoneNumber)</span> </span>&#123;</span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  User currentUser  = userDao.findByTelephone(phoneNumber);</span><br><span class="line"></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line">  <span class="keyword">return</span> currentUser;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- &lt;a href="javaScript:void(0)" id="login_sendSmsCode"&gt;发送手机验证码&lt;/a&gt;--%&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> id=<span class="string">"login_sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  $(<span class="string">'#login_sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">    let telephone = $(<span class="string">'#login_telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    let data = <span class="string">'action=sendSms&amp;telephone='</span> + telephone;</span><br><span class="line"></span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      alert(resp.message);</span><br><span class="line">    &#125;)</span><br><span class="line">    countDownLogin(<span class="keyword">this</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  let num_header = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">function <span class="title">countDownLogin</span><span class="params">(obj)</span> </span>&#123;</span><br><span class="line">    num_header--;</span><br><span class="line">    <span class="keyword">if</span> (num_header == <span class="number">0</span>) &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">false</span>);</span><br><span class="line">      $(obj).val(<span class="string">'Resend SMS Code'</span>);</span><br><span class="line">      num_header = <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">true</span>);</span><br><span class="line">      $(obj).val(num_header + <span class="string">'seconds latter ,Could Resend SMS Code'</span>);</span><br><span class="line">      setTimeout(function () &#123;</span><br><span class="line">        countDownLogin(obj);</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-用户退出功能"><a href="#三-用户退出功能" class="headerlink" title="三.用户退出功能"></a>三.用户退出功能</h1><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><p><img src="image-20200517104140292.png" alt=""></p><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/UserServlet?action=logout"&gt;退出&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">logout</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  req.getSession().invalidate();</span><br><span class="line">  resp.sendRedirect(req.getContextPath() + <span class="string">"/index.jsp"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-SVN"><a href="#四-SVN" class="headerlink" title="四.SVN"></a>四.SVN</h1><h4 id="4-1-开发中遇到的问题"><a href="#4-1-开发中遇到的问题" class="headerlink" title="4.1 开发中遇到的问题"></a>4.1 开发中遇到的问题</h4><p>多人协作，解决冲突</p><blockquote><p>代码版本控制工具:svn、git</p></blockquote><h4 id="4-2-SVN工作流程"><a href="#4-2-SVN工作流程" class="headerlink" title="4.2 SVN工作流程"></a>4.2 SVN工作流程</h4><p><img src="image-20200517111105210.png" alt=""></p><h4 id="4-3-SVN服务器安装和使用"><a href="#4-3-SVN服务器安装和使用" class="headerlink" title="4.3 SVN服务器安装和使用"></a>4.3 SVN服务器安装和使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment">#yum install subversion</span></span><br><span class="line">[root@localhost /]<span class="comment"># cd /home</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建目录</span></span><br><span class="line">[root@localhost home]<span class="comment"># mkdir -p svn/repository</span></span><br><span class="line"><span class="comment">#使用该目录作为仓库</span></span><br><span class="line">[root@localhost svn]<span class="comment"># svnadmin create /home/svn/repositories  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改配置文件，将下面三行注释去除，顶格写，否则报错误19</span></span><br><span class="line">[root@localhost svn]<span class="comment"># vi conf/svnserve.conf </span></span><br><span class="line">anon-access = none</span><br><span class="line">auth-access = write</span><br><span class="line">password-db = passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户，用户组，并设定权限</span></span><br><span class="line">[root@localhost svn]<span class="comment"># vi conf/authz</span></span><br><span class="line">[aliases]</span><br><span class="line"><span class="comment"># joe = /C=XZ/ST=Dessert/L=Snake City/O=Snake Oil, Ltd./OU=Research Institute/CN=Joe Average</span></span><br><span class="line"></span><br><span class="line">[groups]</span><br><span class="line">topgroup=swzxsyh</span><br><span class="line"></span><br><span class="line">[/]</span><br><span class="line">swzxsyh=rw</span><br><span class="line">@topgroup = rw</span><br><span class="line"></span><br><span class="line">[/trunk]</span><br><span class="line">@topgroup = rw</span><br><span class="line">swzxsyh=rw</span><br><span class="line"></span><br><span class="line">[/foo/bar]</span><br><span class="line">swzxsyh=rw</span><br><span class="line">@topgroup = rw</span><br><span class="line"></span><br><span class="line">[repository:/baz/fuz]</span><br><span class="line">swzxsyh=rw</span><br><span class="line">@topgroup = rw</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户账号密码</span></span><br><span class="line">[root@localhost svn]<span class="comment"># vi conf/passwd</span></span><br><span class="line">[users]</span><br><span class="line">swzxsyh = 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动服务器</span></span><br><span class="line">[root@localhost svn]<span class="comment">#svnserve -d --listen-port=3690</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#可以添加至rc.local自启动</span></span><br></pre></td></tr></table></figure><h4 id="4-4-SVN客户端安装和使用"><a href="#4-4-SVN客户端安装和使用" class="headerlink" title="4.4 SVN客户端安装和使用"></a>4.4 SVN客户端安装和使用</h4><p>macOS自带svn，也可使用Cornerstone等软件</p><ul><li><p>测试连接svn服务器</p><p>svn://swzxsyh@192.168.xx.xx:3690/share/之前创建的目录/svn/repos1</p></li><li><p><strong>使用介绍</strong></p><ul><li>检出项目 checkout</li></ul></li></ul><h4 id="4-5-IDEA集成SVN客户端插件"><a href="#4-5-IDEA集成SVN客户端插件" class="headerlink" title="4.5 IDEA集成SVN客户端插件"></a>4.5 IDEA集成SVN客户端插件</h4><p>Settings==&gt;Subversion==&gt;设置svn</p><h4 id="4-6-SVN分支操作"><a href="#4-6-SVN分支操作" class="headerlink" title="4.6 SVN分支操作"></a>4.6 SVN分支操作</h4><ul><li>在主干中检出分支代码(时间+功能)</li><li>在idea切换到分支，编辑代码，提交</li><li>在idea中操作主干将分支的代码进行合并</li></ul><h4 id="4-7-上传黑马旅游网到SVN"><a href="#4-7-上传黑马旅游网到SVN" class="headerlink" title="4.7 上传黑马旅游网到SVN"></a>4.7 上传黑马旅游网到SVN</h4><p>使用Cornerstone连接，import项目即可</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 用户名密码登录</strong></p><p><strong>### ajax方式</strong></p><p><strong>## 二 手机短信登录</strong></p><p><strong>### ajax方式</strong></p><p><strong>## 三 用户退出功能</strong></p><p><strong>### 清除session</strong></p><p><strong>## 四 SVN</strong></p><p><strong>### 源代码版本控制工具</strong></p><p>- 安装svn服务器端</p><p>​    - 创建仓库</p><p>​    - 创建用户</p><p>​    - 创建组</p><p>​    - 仓库授权</p><p>- 安装svn客户端</p><p>​    - 检出</p><p>​    - 提交</p><p>​    - 更新</p><p>​    - 代码冲突解决</p><p>​    - 删除</p><p>​    - 代码回溯</p><p>- idea配置svn插件</p><p>- svn标准仓库</p><p>​    - branchs</p><p>​    - tags</p><p>​    - trunck</p><p>- idea操作svn</p><p>​    - 分享</p><p>​    - 检出</p><p>​    - 提交</p><p>​    - 更新</p><p>​    - 代码冲突解决</p><p>- 分支</p><p>​    - 从主干中检出一个分支</p><p>​    - 将分支合并到主干</p><p>- 将黑马旅游网上传到svn服务器</p><p>​    - idea 实现share project</p><p>​    - 小乌龟 实现commit</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;密码登录&lt;/li&gt;
&lt;li&gt;短信登录&lt;/li&gt;
&lt;li&gt;用户退出&lt;/li&gt;
&lt;li&gt;SVN多人协作开发文本控制工具&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十五）</title>
    <link href="http://yoursite.com/2020/05/16/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%BA%94%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/16/就业班学习笔记（五十五）/</id>
    <published>2020-05-16T01:02:16.000Z</published>
    <updated>2020-05-17T16:08:21.624Z</updated>
    
    <content type="html"><![CDATA[<ul><li>用户模块之注册<ul><li>基本注册功能</li><li>ajax异步校验</li><li>阿里云短信服务</li><li>手机验证码校验</li><li>BaseServlet</li></ul></li></ul><a id="more"></a><h1 id="一-用户注册基本功能"><a href="#一-用户注册基本功能" class="headerlink" title="一.用户注册基本功能"></a>一.用户注册基本功能</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><ul><li><p>页面和实体以及表关系介绍</p><table><thead><tr><th>页面</th><th>➡</th><th>实体类</th><th>➡</th><th>数据库</th></tr></thead><tbody><tr><td>register.jsp</td><td></td><td>public class User implements Serializable</td><td></td><td>tab_user</td></tr></tbody></table></li><li><p>代码流程图</p><p><img src="image-20200516093105857.png" alt=""></p></li></ul><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><ul><li><p>register.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--注册表单--&gt;</span><br><span class="line">&lt;form id=<span class="string">"registerForm"</span> action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/UserServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">  </span><br><span class="line">&lt;!-- 省略 --&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"submit"</span> value=<span class="string">"注册"</span>&gt;</span><br><span class="line">&lt;span id="msg" style="color: red;"&gt;$&#123;resultInfo.message&#125;&lt;/span&gt;</span><br></pre></td></tr></table></figure></li><li><p>ResutInfo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResultInfo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个参数构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResultInfo</span><span class="params">(Boolean success)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.success = success;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二个参数构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResultInfo</span><span class="params">(Boolean success, String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.success = success;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 三个参数构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResultInfo</span><span class="params">(Boolean success, String message, Object data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.success = success;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取请求action</span></span><br><span class="line">        String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取请求参数</span></span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//封装User中</span></span><br><span class="line">        User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BeanUtils.populate(param, parameterMap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调用service，实现注册</span></span><br><span class="line">        ResultInfo resultInfo = userService.register(param);</span><br><span class="line">        <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">            resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">            req.getSession().removeAttribute(<span class="string">"smsCode_"</span>+telephone);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function">ResultInfo <span class="title">register</span><span class="params">(User param)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//注册</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultInfo <span class="title">register</span><span class="params">(User param)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取UserDao代理对象</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据username查询dao，校验</span></span><br><span class="line">        User u1 = userDao.findByUsername(param.getUsername());</span><br><span class="line">        <span class="keyword">if</span> (u1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//关闭sqlSession</span></span><br><span class="line">            MyBatisUtils.close(sqlSession);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Already Exists"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//根据telephone查询dao，校验</span></span><br><span class="line">        User u2 = userDao.findByTelephone(param.getTelephone());</span><br><span class="line">        <span class="keyword">if</span> (u2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//关闭sqlSession</span></span><br><span class="line">            MyBatisUtils.close(sqlSession);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number Already Registered"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对密码进行加密(Hutool工具包提供SecureUtil)</span></span><br><span class="line">        String md5Pwd = SecureUtil.md5(param.getPassword());</span><br><span class="line">        param.setPassword(md5Pwd);</span><br><span class="line">        <span class="comment">//保存User，完成注册</span></span><br><span class="line">        userDao.save(param);</span><br><span class="line">        <span class="comment">//关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserDao(接口+映射)</p><p>resources新建”com/itheima/dao”文件夹，然后将UserDao.xml创建在此</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123; <span class="comment">// 根据用户名查询</span></span><br><span class="line">    <span class="function">User <span class="title">findByUsername</span><span class="params">(String username)</span></span>;</span><br><span class="line"><span class="comment">// 根据手机号查询</span></span><br><span class="line"><span class="function">User <span class="title">findByTelephone</span><span class="params">(String telephone)</span></span>;</span><br><span class="line"><span class="comment">// 注册</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(User param)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_user WHERE username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByTelephone"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_user WHERE telephone = #&#123;telephone&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        INSERT INTO tab_user(username,password,telephone) VALUES (#&#123;username&#125;,#&#123;password&#125;,#&#123;telephone&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>register_ok.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">"text-align:center;height: 290px;margin-top: 50px"</span>&gt;</span><br><span class="line">    &lt;span style="font-size: 30px"&gt;恭喜您，注册成功！&lt;/span&gt;</span><br><span class="line">    &lt;div&gt;&lt;span style="color: red"&gt;5&lt;/span&gt;秒后，跳转到 &lt;a href="$&#123;pageContext.request.contextPath&#125;/index.jsp"&gt;首页&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        let num = <span class="number">5</span>;</span><br><span class="line">        setInterval(function () &#123;</span><br><span class="line">            num--;</span><br><span class="line">            $(<span class="string">'resultSpan'</span>).html(num);</span><br><span class="line">            <span class="keyword">if</span> (num == <span class="number">1</span>) &#123;</span><br><span class="line">                location.href = <span class="string">"$&#123;pageContext.request.contextPath&#125;/index.jsp"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-校验用户名是否存在"><a href="#二-校验用户名是否存在" class="headerlink" title="二.校验用户名是否存在"></a>二.校验用户名是否存在</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><p><img src="image-20200516104659881.png" alt=""></p><h4 id="2-2-技术分析"><a href="#2-2-技术分析" class="headerlink" title="2.2 技术分析"></a>2.2 技术分析</h4><ul><li>使用jquery的ajax $.post(url,data,function(resp){});</li><li>使用jackson的 ObjectMapper对象，实现转换</li></ul><h4 id="2-3-代码实现"><a href="#2-3-代码实现" class="headerlink" title="2.3 代码实现"></a>2.3 代码实现</h4><ul><li><p>register.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">  &lt;label for="username"&gt;用户名&lt;/label&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> id=<span class="string">"username"</span> name=<span class="string">"username"</span> placeholder=<span class="string">"请输入账号"</span>&gt;</span><br><span class="line">  &lt;span id="userInfo" style="font-size:10px"&gt;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">//用户名绑定失去焦点事件</span></span><br><span class="line">  $(<span class="string">'#username'</span>).blur(function () &#123;</span><br><span class="line">    <span class="comment">//获取用户输入的value值</span></span><br><span class="line">    let username = $(<span class="keyword">this</span>).val();</span><br><span class="line">    <span class="comment">//ajax请求</span></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    let data = <span class="string">'action=fundByUsername&amp;username='</span> + username;</span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      <span class="comment">//resp就是返回的json对象(对应java类就是 ResultInfo)</span></span><br><span class="line">      <span class="keyword">if</span> (resp.success) &#123;</span><br><span class="line">        $(<span class="string">'userInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'green'</span>).html(<span class="string">'Username OK'</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">'userInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'red'</span>).html(<span class="string">'Username Already Registered'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求action</span></span><br><span class="line">    String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">    <span class="comment">//判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByUsername"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByUserName(req, resp);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//ajax校验用户名</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByUserName</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 1.接收请求参数</span></span><br><span class="line">      String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2.调用service查询</span></span><br><span class="line">      User user = userService.findByUsername(username);</span><br><span class="line"></span><br><span class="line">      ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 3.判断</span></span><br><span class="line">      <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Already Exists"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Can Be Registered"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 4.将resultInfo转为json</span></span><br><span class="line">      ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">      String json = objectMapper.writeValueAsString(resultInfo);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 5.通过response响应</span></span><br><span class="line">      resp.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">      resp.getWriter().write(json);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据用户名查询</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取 UserDao代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    User user = userDao.findByUsername(username);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 关闭sqlSession</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-课下作业-–-实现手机号的异步校验"><a href="#2-4-课下作业-–-实现手机号的异步校验" class="headerlink" title="2.4 课下作业 – 实现手机号的异步校验"></a>2.4 课下作业 – 实现手机号的异步校验</h4><ul><li>register.jsp</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;tr&gt;</span><br><span class="line">  &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">    &lt;label for="telephone"&gt;手机号&lt;/label&gt;</span><br><span class="line">  &lt;/td&gt;</span><br><span class="line">  &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> id=<span class="string">"telephone"</span> name=<span class="string">"telephone"</span> placeholder=<span class="string">"请输入您的手机号"</span>&gt;</span><br><span class="line">    &lt;span id="phoneInfo" style="font-size: 50px"&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/td&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">//用户名绑定失去焦点事件</span></span><br><span class="line">    $(<span class="string">'#telephone'</span>).blur(function () &#123;</span><br><span class="line">      <span class="comment">//获取用户输入的value值</span></span><br><span class="line">      let phoneNumber = $(<span class="keyword">this</span>).val();</span><br><span class="line">      <span class="comment">//ajax请求</span></span><br><span class="line">      let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">      let data = <span class="string">'action=fundByPhoneNumber&amp;PhoneNumber='</span> + phoneNumber;</span><br><span class="line">      $.post(url, data, function (resp) &#123;</span><br><span class="line">        <span class="comment">//resp就是返回的json对象(对应java类就是 ResultInfo)</span></span><br><span class="line">        <span class="keyword">if</span> (resp.success) &#123;</span><br><span class="line">          $(<span class="string">'phoneInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'green'</span>).html(<span class="string">'Phone Number OK'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          $(<span class="string">'phoneInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'red'</span>).html(<span class="string">'Phone Number Already Registered'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求action</span></span><br><span class="line">    String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">    <span class="comment">//判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByUsername"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByUserName(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByPhoneNumber"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByPhoneNumber(req, resp);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPhoneNumber</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">      String username = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">      User telephone = userService.findByTelephone(username);</span><br><span class="line"></span><br><span class="line">      ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (telephone != <span class="keyword">null</span>) &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number Already Registered"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Phone OK"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">      String json = objectMapper.writeValueAsString(resultInfo);</span><br><span class="line"></span><br><span class="line">      resp.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">      resp.getWriter().write(json);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByTelephone</span><span class="params">(String phoneNumber)</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    User telephone = userDao.findByTelephone(phoneNumber);</span><br><span class="line">    </span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> telephone;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="三-阿里云-手机服务"><a href="#三-阿里云-手机服务" class="headerlink" title="三.阿里云 手机服务"></a>三.阿里云 手机服务</h1><h4 id="3-1-发送短信流程"><a href="#3-1-发送短信流程" class="headerlink" title="3.1 发送短信流程"></a>3.1 发送短信流程</h4><p>register.jsp==&gt;黑马旅游网==&gt;远程调用阿里云平台接口==&gt;三大运营商==&gt;用户==&gt;返回到注册页面</p><h4 id="3-2-阿里云使用"><a href="#3-2-阿里云使用" class="headerlink" title="3.2 阿里云使用"></a>3.2 阿里云使用</h4><p>访问阿里云平台-登录-管理控制台，短信服务-国内消息-申请签名和模板，申请accessKey密钥对-充钱</p><h4 id="3-3-SDK使用"><a href="#3-3-SDK使用" class="headerlink" title="3.3 SDK使用"></a>3.3 SDK使用</h4><p>软件开发工具包(Software Development Kit )包含 jar包、API文档、工具类的集合都可以叫做 SDK</p><ul><li><p>请求参数</p><table><thead><tr><th>参数名称</th><th>参数类型</th><th>是否必须</th><th>样例取值</th></tr></thead><tbody><tr><td>phoneNumbers 手机号</td><td>String</td><td>必须</td><td>15000000000</td></tr><tr><td>signName     签名</td><td>String</td><td>必须</td><td>云通信</td></tr><tr><td>templateCode 模板</td><td>String</td><td>必须</td><td>SMS_0000</td></tr><tr><td>TemplateParam</td><td>String</td><td>可选</td><td>{“code”:”1234”,<br>“product”:”ytx”}</td></tr></tbody></table></li></ul><ul><li><p>响应参数</p><table><thead><tr><th>参数名称</th><th>出参类型</th><th>样例取值</th><th>参数说明</th></tr></thead><tbody><tr><td>RequestID</td><td>String</td><td>8906582E-6722</td><td>请求ID</td></tr><tr><td>Code</td><td>String</td><td>OK</td><td>状态码-返回OK代表请求成功，嵌套错误代码详见错误码列表</td></tr><tr><td>Message</td><td>String</td><td>请求成功</td><td>状态码的描述</td></tr><tr><td>Bizld</td><td>String</td><td>134534^4351232</td><td>发送回执ID，可根据ID查询具体的发送状态</td></tr></tbody></table></li><li><p>放入SDK工具</p><p>SmsUtils.java放入Utils</p></li><li><p>引入依赖包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="comment">&lt;!-- 注：如提示报错，先升级基础包版，无法解决可联系技术支持 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-dysmsapi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">  SendSmsResponse sendSmsResponse = sendSms(<span class="string">"15814076346"</span>, <span class="string">"黑马旅游网"</span>, <span class="string">"SMS_166778713"</span>, <span class="string">"&#123;\"code\":\"123456\"&#125;"</span>);</span><br><span class="line">  System.out.println(sendSmsResponse);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="四-手机验证码校验功能"><a href="#四-手机验证码校验功能" class="headerlink" title="四.手机验证码校验功能"></a>四.手机验证码校验功能</h1><h4 id="4-1-实现发送短信功能"><a href="#4-1-实现发送短信功能" class="headerlink" title="4.1 实现发送短信功能"></a>4.1 实现发送短信功能</h4><h5 id="4-1-1-需求分析"><a href="#4-1-1-需求分析" class="headerlink" title="4.1.1 需求分析"></a>4.1.1 需求分析</h5><p><img src="image-20200516140947552.png" alt=""></p><h5 id="4-1-3-代码实现"><a href="#4-1-3-代码实现" class="headerlink" title="4.1.3 代码实现"></a>4.1.3 代码实现</h5><ul><li><p>register.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">  &lt;label for="smsCode"&gt;验证码&lt;/label&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right check"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> id=<span class="string">"smsCode"</span> name=<span class="string">"smsCode"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"check"</span> placeholder=<span class="string">"请输入验证码"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input id=<span class="string">"sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>/&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">//给按钮绑定点击事件</span></span><br><span class="line">    $(<span class="string">'#sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">      let telephone = $(<span class="string">'#telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">      let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">      let data = <span class="string">'action=sendSms&amp;telephone='</span> + telephone;</span><br><span class="line"></span><br><span class="line">      $.post(url, data, function (resp) &#123;</span><br><span class="line">        alert(resp.message);</span><br><span class="line">      &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求action</span></span><br><span class="line">    String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">    <span class="comment">//判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByUsername"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByUserName(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByPhoneNumber"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByPhoneNumber(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"sendSms"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.sendSms(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendSms</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">    String smsCode = RandomStringUtils.randomNumeric(<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    ResultInfo resultInfo = userService.sendSms(telephone, smsCode);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"smsCode_"</span> + telephone, smsCode);</span><br><span class="line">      System.out.println(<span class="string">"smsCode: "</span> + smsCode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    String json = <span class="keyword">new</span> ObjectMapper().writeValueAsString(resultInfo);</span><br><span class="line"></span><br><span class="line">    resp.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">    resp.getWriter().write(json);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 发送短信</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultInfo <span class="title">sendSms</span><span class="params">(String telephone, String smsCode)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 定义签名</span></span><br><span class="line">        String signName = <span class="string">"黑马旅游网"</span>;</span><br><span class="line">        <span class="comment">// 定义模板</span></span><br><span class="line">        String templateCode = <span class="string">"SMS_123123123"</span>;</span><br><span class="line">        <span class="comment">// 拼接验证码(json)</span></span><br><span class="line">        String param = <span class="string">"&#123;\"code\":\""</span> + smsCode + <span class="string">"\"&#125;"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用工具类发送短信</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SendSmsResponse sendSmsResponse = SmsUtils.sendSms(telephone, signName, templateCode, param);</span><br><span class="line">            <span class="keyword">if</span> (sendSmsResponse.getCode().equals(<span class="string">"OK"</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Message Send Successful"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClientException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Message Send Failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-2-完善注册代码"><a href="#4-2-完善注册代码" class="headerlink" title="4.2 完善注册代码"></a>4.2 完善注册代码</h4><h5 id="4-2-1-需求分析"><a href="#4-2-1-需求分析" class="headerlink" title="4.2.1 需求分析"></a>4.2.1 需求分析</h5><h5 id="4-2-3-代码实现"><a href="#4-2-3-代码实现" class="headerlink" title="4.2.3 代码实现"></a>4.2.3 代码实现</h5><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//注册</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// a.获取请求参数</span></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">  String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// b.获取session中验证码</span></span><br><span class="line">  String sessionCode = (String) req.getSession().getAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// c.进行校验</span></span><br><span class="line">  <span class="keyword">if</span>(sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode)))&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证码不正确</span></span><br><span class="line">    req.setAttribute(<span class="string">"resultInfo"</span>,<span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>,<span class="string">"SMS Code not correct"</span>));</span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req,resp);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//获取请求参数</span></span><br><span class="line">  Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//封装User中</span></span><br><span class="line">  User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//调用service，实现注册</span></span><br><span class="line">  ResultInfo resultInfo = userService.register(param);</span><br><span class="line">  <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">    resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">    req.getSession().removeAttribute(<span class="string">"smsCode_"</span>+telephone);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-60秒倒计时"><a href="#4-3-60秒倒计时" class="headerlink" title="4.3 60秒倒计时"></a>4.3 60秒倒计时</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">  &lt;label for="smsCode"&gt;验证码&lt;/label&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right check"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> id=<span class="string">"smsCode"</span> name=<span class="string">"smsCode"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"check"</span> placeholder=<span class="string">"请输入验证码"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input id=<span class="string">"sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>/&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">//给按钮绑定点击事件</span></span><br><span class="line">    $(<span class="string">'#sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">      let telephone = $(<span class="string">'#telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">      let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">      let data = <span class="string">'action=sendSms&amp;telephone'</span> + telephone;</span><br><span class="line"></span><br><span class="line">      $.post(url, data, function (resp) &#123;</span><br><span class="line">        alert(resp.message);</span><br><span class="line">      &#125;);</span><br><span class="line">      countDown(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    let num = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">function <span class="title">countDown</span><span class="params">(obj)</span> </span>&#123;</span><br><span class="line">      num--;</span><br><span class="line">      <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">        $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">false</span>);</span><br><span class="line">        $(obj).val(<span class="string">'Resend SMS Code'</span>);</span><br><span class="line">        num = <span class="number">10</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">true</span>);</span><br><span class="line">        $(obj).val(<span class="string">'Resend SMS Code After'</span> + num + <span class="string">'Seconds'</span>);</span><br><span class="line">        setTimeout(function () &#123;</span><br><span class="line">          countDown(obj);</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure><h1 id="五-BaseServlet"><a href="#五-BaseServlet" class="headerlink" title="五.BaseServlet"></a>五.BaseServlet</h1><ul><li><p>抽取返回ajax数据的公共方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取请求action(获取的就是方法名)</span></span><br><span class="line">    String action = request.getParameter(<span class="string">"action"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取字节码对象</span></span><br><span class="line">    Class clazz = <span class="keyword">this</span>.getClass();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 获取指定名称的方法对象(method对象)</span></span><br><span class="line">      Method declaredMethod = clazz.getDeclaredMethod(action, HttpServletRequest<span class="class">.<span class="keyword">class</span>, <span class="title">HttpServletResponse</span>.<span class="title">class</span>)</span>;</span><br><span class="line">      <span class="comment">// (private修饰的方法，需要暴力反射..)</span></span><br><span class="line">      <span class="comment">// 通过反射调用指定名称的方法</span></span><br><span class="line">      declaredMethod.invoke(<span class="keyword">this</span>, request, response);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Server Busy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">javaToJsonWriteClient</span><span class="params">(Object object, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    String json = <span class="keyword">new</span> ObjectMapper().writeValueAsString(object);</span><br><span class="line"></span><br><span class="line">    response.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">    response.getWriter().write(json);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//注册</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// a.获取请求参数</span></span><br><span class="line">    String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">    String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// b.获取session中验证码</span></span><br><span class="line">    String sessionCode = (String) req.getSession().getAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// c.进行校验</span></span><br><span class="line">    <span class="keyword">if</span> (sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode))) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 验证码不正确</span></span><br><span class="line">      req.setAttribute(<span class="string">"resultInfo"</span>, <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"SMS Code not correct"</span>));</span><br><span class="line">      req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取请求参数</span></span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//封装User中</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      BeanUtils.populate(param, parameterMap);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//调用service，实现注册</span></span><br><span class="line">    ResultInfo resultInfo = userService.register(param);</span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">      req.getSession().removeAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">      req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//ajax校验用户名</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByUserName</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.接收请求参数</span></span><br><span class="line">    String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.调用service查询</span></span><br><span class="line">    User user = userService.findByUsername(username);</span><br><span class="line"></span><br><span class="line">    ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.判断</span></span><br><span class="line">    <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Already Exists"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Can Be Registered"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPhoneNumber</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    String username = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">    User telephone = userService.findByTelephone(username);</span><br><span class="line"></span><br><span class="line">    ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (telephone != <span class="keyword">null</span>) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number Already Registered"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Phone OK"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendSms</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.获取请求参数</span></span><br><span class="line">    String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">    <span class="comment">// 2.生成6位随机数(apache提供的)</span></span><br><span class="line">    String smsCode = RandomStringUtils.randomNumeric(<span class="number">6</span>);</span><br><span class="line">    <span class="comment">// 3.调用service完成短信发送，返回resultInfo</span></span><br><span class="line">    ResultInfo resultInfo = userService.sendSms(telephone, smsCode);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.如果发送成功，将验证码写入到session中</span></span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"smsCode_"</span> + telephone, smsCode);</span><br><span class="line">      System.out.println(<span class="string">"smsCode: "</span> + smsCode);</span><br><span class="line">    &#125;</span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="# 总结"></a># 总结</h1><h2 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h2><h3 id="用户基本注册功能"><a href="#用户基本注册功能" class="headerlink" title="用户基本注册功能"></a>用户基本注册功能</h3><p>- 根据需求图编写代码</p><h3 id="校验用户名是否存在"><a href="#校验用户名是否存在" class="headerlink" title="校验用户名是否存在"></a>校验用户名是否存在</h3><p>- ajax异步校验</p><h3 id="阿里云-短信服务"><a href="#阿里云-短信服务" class="headerlink" title="阿里云-短信服务"></a>阿里云-短信服务</h3><p>- 注册短信服务</p><p>​    - 1. 访问短信服务官网（<a href="https://www.aliyun.com/product/sms）">https://www.aliyun.com/product/sms）</a></p><p>​    - 2. 申请用户（使用支付宝账户）</p><p>​    - 3. 选的短信服务 管理控制台</p><p>​    - 4. 选择国内消息</p><p>​    - 5. 申请签名和模板，预计时间15分钟</p><p>​    - 6. 申请accessKey秘钥</p><p>​    - 7. 充值1元块钱</p><h3 id="手机验证码校验功能"><a href="#手机验证码校验功能" class="headerlink" title="手机验证码校验功能"></a>手机验证码校验功能</h3><p>- ajax发送短信</p><p>- 完善用户注册功能</p><p>- 实现60秒倒计时</p><h3 id="BaseServlet"><a href="#BaseServlet" class="headerlink" title="BaseServlet"></a>BaseServlet</h3><p>- 抄一遍</p><p>​    - 通过反射找出同名的方法，调用</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;用户模块之注册&lt;ul&gt;
&lt;li&gt;基本注册功能&lt;/li&gt;
&lt;li&gt;ajax异步校验&lt;/li&gt;
&lt;li&gt;阿里云短信服务&lt;/li&gt;
&lt;li&gt;手机验证码校验&lt;/li&gt;
&lt;li&gt;BaseServlet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十四）</title>
    <link href="http://yoursite.com/2020/05/14/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E5%9B%9B%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/14/就业班学习笔记（五十四）/</id>
    <published>2020-05-14T01:02:03.000Z</published>
    <updated>2020-05-15T18:45:42.546Z</updated>
    
    <content type="html"><![CDATA[<ul><li>maven基础与环境搭建</li></ul><a id="more"></a><h1 id="一-Maven简介"><a href="#一-Maven简介" class="headerlink" title="一.Maven简介"></a>一.Maven简介</h1><h4 id="1-1-Maven是什么"><a href="#1-1-Maven是什么" class="headerlink" title="1.1 Maven是什么"></a>1.1 Maven是什么</h4><p>Maven 是一个项目管理工具，它包含了一个项目对象模型 (POM:Project Object Model)，一组标准集合，一个项 目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在生命周 期阶段(phase)中插件(plugin)目标(goal)的逻辑。</p><h4 id="1-2-Maven能解决什么问题"><a href="#1-2-Maven能解决什么问题" class="headerlink" title="1.2 Maven能解决什么问题"></a>1.2 Maven能解决什么问题</h4><p>一种工具，可以构建工程，管理 jar包，编译代码，还 能帮你自动运行单元测试，打包，生成报表，部署项目，生成 Web 站点。</p><h4 id="1-3-Maven的两个核心功能"><a href="#1-3-Maven的两个核心功能" class="headerlink" title="1.3 Maven的两个核心功能"></a>1.3 Maven的两个核心功能</h4><h5 id="1-3-1-依赖管理"><a href="#1-3-1-依赖管理" class="headerlink" title="1.3.1 依赖管理"></a>1.3.1 依赖管理</h5><p>Maven的一个核心特性就是依赖管理。MVN依赖管理，就是一个管理jar包的过程</p><table><thead><tr><th>CRM项目<br>使用mvn工程实现</th><th>➡项目中给定坐标，去仓库拉取jar包➡<br>索引的存在，使拉取jar包过程，可以认为是自己项目中有的</th><th>MVN仓库<br>jar的仓库</th></tr></thead><tbody><tr><td></td><td>坐标:将来要找某个jar包，就是要确定这个jar包的坐标</td><td></td></tr><tr><td></td><td>jar包如何给出坐标:公司/组织名+项目名+版本号一起确定</td><td></td></tr></tbody></table><p>maven工程中不直接将jar包导入到工程中，而是通过在pom.xml文件中添加所需jar包的坐标，避免了jar直接引入进来，在需要用到jar包的时候，只要查找pom.xml文件，再通过pom.xml文件中的坐标，到一个专门用于”存放jar包的仓库”(maven仓库)中根据坐标从而找到这些jar包，再把这些jar包拿去运行。 </p><ul><li><p>通过读取pom.xml 文件中的坐标，再到仓库中找到jar包，会不会很慢</p><blockquote><p>通过pom.xml文件配置要引入的jar包的坐标，再读取坐标并到仓库中加载jar包，这样我们就可以直接使用jar包，为了解决这个过程中速度慢的问题，maven中也有索引的概念，通过建立索引，可以大大提高加载jar包的速度，使得我们认为jar包基本跟放在本地的工程文件中再读取出来的速度是一样的。</p></blockquote></li></ul><h5 id="1-3-2-项目构建"><a href="#1-3-2-项目构建" class="headerlink" title="1.3.2 项目构建"></a>1.3.2 项目构建</h5><ul><li><p>什么是项目构建</p><p>项目从编译、测试、运行、打包、安装 ，部署整个过程都交给maven进行管理，这个过程称为构建。 </p><p>一键构建 指的是整个构建过程，使用maven一个命令可以轻松完成整个工作。</p></li><li><p>Maven规范化构建流程</p><table><thead><tr><th>清理</th><th>➡</th><th>编译</th><th>➡</th><th>测试</th><th>➡</th><th>报告</th><th>➡</th><th>打包</th><th>➡</th><th>部署</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table></li></ul><h1 id="二-Maven安装和使用"><a href="#二-Maven安装和使用" class="headerlink" title="二 Maven安装和使用"></a>二 Maven安装和使用</h1><h4 id="2-1-Maven下载和安装"><a href="#2-1-Maven下载和安装" class="headerlink" title="2.1 Maven下载和安装"></a>2.1 Maven下载和安装</h4><h5 id="2-1-1-Maven下载"><a href="#2-1-1-Maven下载" class="headerlink" title="2.1.1 Maven下载"></a>2.1.1 Maven下载</h5><p>Maven官网下载地址:<a href="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi</a></p><p>目前使用@3.5版本</p><h5 id="2-1-2-Maven安装"><a href="#2-1-2-Maven安装" class="headerlink" title="2.1.2 Maven安装"></a>2.1.2 Maven安装</h5><p>将apache-maven-3.5.2-bin.zip解压并添加至path</p><ul><li><p>maven目录结构</p><table><thead><tr><th>目录</th><th>介绍</th></tr></thead><tbody><tr><td>bin</td><td>存放了 maven 的命令</td></tr><tr><td>boot</td><td>存放了一些 maven 本身的引导程序，如类加载器等</td></tr><tr><td>conf</td><td>存放了 maven 的一些配置文件，如 setting.xml 文件</td></tr><tr><td>lib</td><td>存放了 maven 本身运行所需的一些 jar 包</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">apache-maven-3.5.2</span><br><span class="line">├── LICENSE</span><br><span class="line">├── NOTICE</span><br><span class="line">├── README.txt</span><br><span class="line">├── bin</span><br><span class="line">│   ├── m2.conf</span><br><span class="line">│   ├── mvn</span><br><span class="line">│   ├── mvn.cmd</span><br><span class="line">│   ├── mvnDebug</span><br><span class="line">│   ├── mvnDebug.cmd</span><br><span class="line">│   └── mvnyjp</span><br><span class="line">├── boot</span><br><span class="line">│   └── plexus-classworlds-2.5.2.jar</span><br><span class="line">├── conf</span><br><span class="line">│   ├── logging</span><br><span class="line">│   ├── settings.xml</span><br><span class="line">│   └── toolchains.xml</span><br><span class="line">└── lib</span><br><span class="line">    ├── aopalliance-1.0.jar</span><br><span class="line">├── ...省略</span><br><span class="line">    └── wagon-provider-api.license</span><br><span class="line"></span><br><span class="line">7 directories, 91 files</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-1-3-Maven及JDK配置"><a href="#2-1-3-Maven及JDK配置" class="headerlink" title="2.1.3 Maven及JDK配置"></a>2.1.3 Maven及JDK配置</h5><p>  Maven 3.3+ require JDK 1.7 or above to execute - they still allow you to build against 1.3 and other JDK versions <a href="https://maven.apache.org/guides/mini/guide-using-toolchains.html">by Using Toolchains</a></p><ul><li><p>配置PATH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi .zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment">#MAVEN_HOME</span></span><br><span class="line"><span class="built_in">export</span> MAVEN_HOME=/Users/swzxsyh/Program/apache-maven-3.5.2</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$MAVEN_HOME</span>/bin</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-1-4-Maven软件版本测试"><a href="#2-1-4-Maven软件版本测试" class="headerlink" title="2.1.4 Maven软件版本测试"></a>2.1.4 Maven软件版本测试</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> ~ <span class="comment">#mvn -v</span></span><br><span class="line">Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T15:58:13+08:00)</span><br><span class="line">Maven home: /Users/swzxsyh/Program/apache-maven-3.5.2</span><br><span class="line">Java version: 1.8.0_221, vendor: Oracle Corporation</span><br><span class="line">Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre</span><br><span class="line">Default locale: en_CN, platform encoding: UTF-8</span><br><span class="line">OS name: <span class="string">"mac os x"</span>, version: <span class="string">"10.15.4"</span>, arch: <span class="string">"x86_64"</span>, family: <span class="string">"mac"</span></span><br></pre></td></tr></table></figure><h4 id="2-3-Maven仓库"><a href="#2-3-Maven仓库" class="headerlink" title="2.3 Maven仓库"></a>2.3 Maven仓库</h4><h5 id="2-3-1-Maven仓库的分类"><a href="#2-3-1-Maven仓库的分类" class="headerlink" title="2.3.1 Maven仓库的分类"></a>2.3.1 Maven仓库的分类</h5><p>Maven仓库分为本地仓库和远程仓库二大类。而远程仓库又可分成中央仓库，私服，第三方仓库。</p><table><thead><tr><th></th><th>Maven仓库</th><th align="center"></th></tr></thead><tbody><tr><td><b/>本地仓库</td><td></td><td align="center"><b/>远程仓库</td></tr><tr><td></td><td></td><td align="center">⬇</td></tr><tr><td></td><td></td><td align="center">中央仓库</td></tr><tr><td></td><td></td><td align="center">私服</td></tr><tr><td></td><td></td><td align="center">第三方公共库</td></tr></tbody></table><ul><li><p>依赖寻找流程</p><ul><li><p>在本地仓库中，根据Maven坐标系寻找指定依赖，如果存在，直接返回。</p></li><li><p>如果Maven仓库中不存在，或者需要检查依赖的版本时，maven则会去远程仓库中寻找，下载到本地仓库中再使 用。</p></li></ul></li><li><p>本地仓库</p><p>用来存储从远程仓库下载的插件和jar包，项目使用一些插件或jar包，优先从本地仓库查找。</p></li><li><p>中央仓库</p><p>在maven软件中内置一个远程仓库地址<a href="http://repo1.maven.org/maven2">http://repo1.maven.org/maven2</a> ，它是中央仓库，服务于整个互联网，它是由Maven团队自己维护，里面存储了非常全的jar包，它包含了世界上大部分流行的开源项目构件。</p></li><li><p>第三方公共库</p><p>Maven 仓库默认中央仓库在国外且只有一个， 国内使用难免很慢，我们可以更换为第三方公共库，例如:阿里云镜 像。</p></li><li><p>私服</p><p>私服是一种特殊的远程仓库，其内容是来自于其他的远程仓库，一般架设在局域网内，提供给一个组织的人员使用。 当Maven需要下载依赖时，从私服请求，如果私服上不存在该依赖，则从其他远程仓库下载，同时缓存在私服上，提 供给其他人使用。如果项目中的一些内部模块，无法发布到外部远程仓库中，也可发布在私服上，提供给项目中的其 他人员使用。</p></li></ul><h5 id="2-3-2-Maven本地仓库的配置"><a href="#2-3-2-Maven本地仓库的配置" class="headerlink" title="2.3.2 Maven本地仓库的配置"></a>2.3.2 Maven本地仓库的配置</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cd  $MAVEN_HOME/conf </span><br><span class="line">vi settings.xml</span><br><span class="line"># 找到</span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment">   | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: $&#123;user.home&#125;/.m2/repository</span></span><br><span class="line"><span class="comment">  &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  将<span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/path/to/local/repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span>改为本地仓库路径添加到注释后</span><br></pre></td></tr></table></figure><h5 id="2-3-4-Maven仓库国内镜像配置"><a href="#2-3-4-Maven仓库国内镜像配置" class="headerlink" title="2.3.4 Maven仓库国内镜像配置"></a>2.3.4 Maven仓库国内镜像配置</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- mirror</span></span><br><span class="line"><span class="comment">   | Specifies a repository mirror site to use instead of a given repository. The repository that</span></span><br><span class="line"><span class="comment">   | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</span></span><br><span class="line"><span class="comment">   | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">  &lt;mirror&gt;</span></span><br><span class="line"><span class="comment">    &lt;id&gt;mirrorId&lt;/id&gt;</span></span><br><span class="line"><span class="comment">    &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="comment">    &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class="line"><span class="comment">    &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</span></span><br><span class="line"><span class="comment">  &lt;/mirror&gt;</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 添加阿里云镜像 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-3-4-全局setting与用户setting"><a href="#2-3-4-全局setting与用户setting" class="headerlink" title="2.3.4 全局setting与用户setting"></a>2.3.4 全局setting与用户setting</h5><p>maven仓库地址、私服等配置信息需要在setting.xml文件中配置，分为全局配置和用户配置。 </p><p>在maven安装目录下 的有 conf/setting.xml文件，此setting.xml文件用于maven的所有project项目，它作为maven的全局配置。 如需要 个性配置则需要在用户配置中设置，用户配置的setting.xml文件默认的位置在:${user.dir} /.m2/settings.xml目录 中,${user.dir} 指windows 中的用户目录。</p><p> maven会先找用户配置，如果找到则以用户配置文件为准，否则使用全 局配置文件。</p><h4 id="2-3-Maven坐标和依赖"><a href="#2-3-Maven坐标和依赖" class="headerlink" title="2.3 Maven坐标和依赖"></a>2.3 Maven坐标和依赖</h4><p>Maven的一个核心的作用就是管理项目的依赖，引入我们所需的各种jar包等。为了能自动化的解析任何一个Java构 件，Maven必须将这些Jar包或者其他资源进行唯一标识，这是管理项目的依赖的基础，也就是我们要说的坐标。包 括我们自己开发的项目，也是要通过坐标进行唯一标识的，这样才能才其它项目中进行依赖引用。</p><ul><li><p>坐标的定义元素如下</p><table><thead><tr><th>元素</th><th>作用</th></tr></thead><tbody><tr><td>groupId</td><td>定义当前Maven项目名称</td></tr><tr><td>artifactId</td><td>定义项目模块</td></tr><tr><td>version</td><td>定义当前项目的当前版本</td></tr></tbody></table></li><li><p>例如</p><p>创建一个Maven的web项目，在pom.xml文件中生成坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--当前项目坐标--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itheima<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven_helloword<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要引入junit的测试jar，只需要在pom.xml配置文件中配置引入junit的坐标依赖即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 依赖关系 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 此项目运行使用junit，所以此项目依赖junit --&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的项目名称 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的模块名称 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="comment">&lt;!-- junit版本 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 依赖范围:单元测试时使用junit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-Maven工程的认识"><a href="#2-4-Maven工程的认识" class="headerlink" title="2.4 Maven工程的认识"></a>2.4 Maven工程的认识</h4><h5 id="2-4-1-Maven工程的目录结构"><a href="#2-4-1-Maven工程的目录结构" class="headerlink" title="2.4.1 Maven工程的目录结构"></a>2.4.1 Maven工程的目录结构</h5><p>作为一个maven工程，它的src目录和pom.xml是必备的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">├── maven_java.iml</span><br><span class="line">├── pom.xml</span><br><span class="line">├── src</span><br><span class="line">└── target</span><br></pre></td></tr></table></figure><p>进入src目录后，我们发现它里面的目录结构如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">├── main</span><br><span class="line">│   ├── java<span class="comment">#项目代码</span></span><br><span class="line">│   ├── resources<span class="comment">#配置文件</span></span><br><span class="line">│   └── webapp<span class="comment">#页面资源</span></span><br><span class="line">└── <span class="built_in">test</span></span><br><span class="line">├── java<span class="comment">#测试代码</span></span><br><span class="line">    └──resources </span><br><span class="line"></span><br><span class="line">6 directories, 0 files</span><br></pre></td></tr></table></figure><table><thead><tr><th>文件</th><th>说明</th></tr></thead><tbody><tr><td>src/main/java</td><td>存放项目的.java文件</td></tr><tr><td>src/main/resources</td><td>存放项目资源文件，如spring, mybatis配置文件</td></tr><tr><td>src/test/java</td><td>存放所有单元测试.java文件，如junit测试类</td></tr><tr><td>src/test/resources</td><td>测试资源文件</td></tr><tr><td>target</td><td>项目输出位置，编译后的class文件会输出到此目录</td></tr><tr><td>pom.xml</td><td>maven项目核心配置文</td></tr></tbody></table><ul><li>注意:如果是普通的java项目，那么就没有webapp目录。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">完整java项目</span><br><span class="line">java工程名（项目名）</span><br><span class="line">|-- src目录</span><br><span class="line">|-- main目录（主干代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- <span class="built_in">test</span>目录（测试代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- pom.xml（maven工程核心配置文件）</span><br><span class="line">|-- target目录（存放编译后的class文件.....）</span><br><span class="line"></span><br><span class="line">* web项目【重点】</span><br><span class="line">web工程名（项目名）</span><br><span class="line">|-- src目录</span><br><span class="line">|-- main目录（主干代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- webapp目录（页面资源）</span><br><span class="line">|-- WEB-INF</span><br><span class="line">|-- web.xml(web工程核心配置文件)</span><br><span class="line">|-- index.jsp</span><br><span class="line">|-- css、js、img..</span><br><span class="line">|-- <span class="built_in">test</span>目录（测试代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- pom.xml（maven工程核心配置文件）</span><br><span class="line">|-- target目录（存放编译后的class文件.....）</span><br></pre></td></tr></table></figure><h5 id="2-4-2-Maven工程的运行"><a href="#2-4-2-Maven工程的运行" class="headerlink" title="2.4.2 Maven工程的运行"></a>2.4.2 Maven工程的运行</h5><p>进入maven工程目录(当前目录有pom.xml文件)，运行tomcat7:run命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">~ mvn tomcat7:run</span><br><span class="line"></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] &gt;&gt;&gt; tomcat7-maven-plugin:2.2:run (default-cli) &gt; process-classes @ maven_web &gt;&gt;&gt;</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Changes detected - recompiling the module!</span><br><span class="line">[INFO] Compiling 1 <span class="built_in">source</span> file to /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/classes</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] &lt;&lt;&lt; tomcat7-maven-plugin:2.2:run (default-cli) &lt; process-classes @ maven_web &lt;&lt;&lt;</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- tomcat7-maven-plugin:2.2:run (default-cli) @ maven_web ---</span><br><span class="line">[INFO] Running war on http://localhost:8080/</span><br><span class="line">[INFO] Creating Tomcat server configuration at /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/tomcat</span><br><span class="line">[INFO] create webapp with contextPath: </span><br><span class="line">May 15, 2020 10:29:37 PM org.apache.coyote.AbstractProtocol init</span><br><span class="line">INFO: Initializing ProtocolHandler [<span class="string">"http-bio-8080"</span>]</span><br><span class="line">May 15, 2020 10:29:37 PM org.apache.catalina.core.StandardService startInternal</span><br><span class="line">INFO: Starting service Tomcat</span><br><span class="line">May 15, 2020 10:29:37 PM org.apache.catalina.core.StandardEngine startInternal</span><br><span class="line">INFO: Starting Servlet Engine: Apache Tomcat/7.0.47</span><br><span class="line">May 15, 2020 10:29:38 PM org.apache.coyote.AbstractProtocol start</span><br><span class="line">INFO: Starting ProtocolHandler [<span class="string">"http-bio-8080"</span>]</span><br></pre></td></tr></table></figure><p>根据上边的提示信息,访问<a href="http://localhost:8080/">http://localhost:8080/</a>  即可</p><h1 id="三-Maven生命周期和插件"><a href="#三-Maven生命周期和插件" class="headerlink" title="三.Maven生命周期和插件"></a>三.Maven生命周期和插件</h1><h4 id="3-1-Maven常用命令和插件"><a href="#3-1-Maven常用命令和插件" class="headerlink" title="3.1 Maven常用命令和插件"></a>3.1 Maven常用命令和插件</h4><h5 id="3-1-1-clean"><a href="#3-1-1-clean" class="headerlink" title="3.1.1 clean"></a>3.1.1 clean</h5><p>clean是maven工程的清理命令，执行 clean会删除target目录及内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">~ mvn clean</span><br><span class="line"> </span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ maven_web ---</span><br><span class="line">[INFO] Deleting /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 0.228 s</span><br><span class="line">[INFO] Finished at: 2020-05-15T23:52:52+08:00</span><br><span class="line">[INFO] Final Memory: 9M/309M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h5 id="3-1-2-compile"><a href="#3-1-2-compile" class="headerlink" title="3.1.2 compile"></a>3.1.2 compile</h5><p>compile是maven工程的编译命令，作用是将src/main/java下的文件编译为class文件输出到target目录下。</p><p>将src中main目录下java代码进行编译，将src中main目录下配置抽取，输出到target目录: classes目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">~ mvn compile</span><br><span class="line"></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Changes detected - recompiling the module!</span><br><span class="line">[INFO] Compiling 1 <span class="built_in">source</span> file to /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/classes</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 0.952 s</span><br><span class="line">[INFO] Finished at: 2020-05-15T23:56:28+08:00</span><br><span class="line">[INFO] Final Memory: 13M/209M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">～ ll  ./target/classes/cn/itcast/web/servlet/</span><br><span class="line"> </span><br><span class="line">total 8</span><br><span class="line">-rw-r--r--  1 swzxsyh  staff   1.1K May 15 23:56 HelloServlet.class</span><br></pre></td></tr></table></figure><h5 id="3-1-3-test"><a href="#3-1-3-test" class="headerlink" title="3.1.3 test"></a>3.1.3 test</h5><p>test是maven工程的测试命令 mvn test，会执行src/test/java下的单元测试类，并编译为class文件。</p><p>mvn test=&gt;target编译main代码=&gt;编译test代码=&gt;执行所有测试代码，类名xxxTest结尾，必须有@Test注解的方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">~ mvn <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line"></span><br><span class="line"><span class="comment">#清理target目录</span></span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line"><span class="comment">#编译src/main主干</span></span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line"><span class="comment">#编译src/test测试目录</span></span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ maven_web ---</span><br><span class="line">[INFO] Changes detected - recompiling the module!</span><br><span class="line">[INFO] Compiling 1 <span class="built_in">source</span> file to /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/<span class="built_in">test</span>-classes</span><br><span class="line">[INFO] </span><br><span class="line"><span class="comment"># 针对test目录下的测试代码，逐一测试</span></span><br><span class="line">[INFO] --- maven-surefire-plugin:2.12.4:<span class="built_in">test</span> (default-test) @ maven_web ---</span><br><span class="line">[INFO] Surefire report directory: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/surefire-reports</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------</span><br><span class="line"> T E S T S</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Running cn.itcast.test.HelloTest</span><br><span class="line">仅在测试期有效</span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 sec</span><br><span class="line"></span><br><span class="line">Results :</span><br><span class="line"></span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line"></span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 1.509 s</span><br><span class="line">[INFO] Finished at: 2020-05-16T00:00:02+08:00</span><br><span class="line">[INFO] Final Memory: 15M/212M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h5 id="3-1-4-package"><a href="#3-1-4-package" class="headerlink" title="3.1.4 package"></a>3.1.4 package</h5><p>package是maven工程的打包命令，对于java工程执行package打成jar包，对于web工程打成war包。</p><p>mvn package=&gt;编译main代码=&gt;编译test代码=&gt;执行测试=&gt;将项目打成war包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">~ mvn package</span><br><span class="line"> </span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-surefire-plugin:2.12.4:<span class="built_in">test</span> (default-test) @ maven_web ---</span><br><span class="line">[INFO] Surefire report directory: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/surefire-reports</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------</span><br><span class="line"> T E S T S</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Running cn.itcast.test.HelloTest</span><br><span class="line">仅在测试期有效</span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec</span><br><span class="line"></span><br><span class="line">Results :</span><br><span class="line"></span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line"></span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-war-plugin:2.2:war (default-war) @ maven_web ---</span><br><span class="line">[INFO] Packaging webapp</span><br><span class="line">[INFO] Assembling webapp [maven_web] <span class="keyword">in</span> [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT]</span><br><span class="line">[INFO] Processing war project</span><br><span class="line">[INFO] Copying webapp resources [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/src/main/webapp]</span><br><span class="line">[INFO] Webapp assembled <span class="keyword">in</span> [49 msecs]</span><br><span class="line">[INFO] Building war: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT.war</span><br><span class="line">[INFO] WEB-INF/web.xml already added, skipping</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 1.528 s</span><br><span class="line">[INFO] Finished at: 2020-05-16T00:05:14+08:00</span><br><span class="line">[INFO] Final Memory: 12M/294M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">~ find . -name <span class="string">'*war'</span>  </span><br><span class="line">./target/maven_web-1.0-SNAPSHOT.war</span><br><span class="line"><span class="comment">#此包可以直接放在tomcat的webapp下执行</span></span><br></pre></td></tr></table></figure><ul><li><p>注意：为什么maven_hello是war包而不是jar包呢？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat pom.xml| grep -ri <span class="string">'packaging'</span> </span><br><span class="line">(standard input):    &lt;packaging&gt;war&lt;/packaging&gt;</span><br><span class="line"><span class="comment">#导包方式：jar默认，手动指定war</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="3-1-5-install"><a href="#3-1-5-install" class="headerlink" title="3.1.5 install"></a>3.1.5 install</h5><p>install是maven工程的安装命令，执行install将maven打成jar包或war包发布到本地仓库。</p><p>mvn install=&gt;编译main代码=&gt;编译test代码=&gt;执行测试=&gt;将项目打成war包=&gt;安装到本地库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">~ mvn install</span><br><span class="line"> </span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-surefire-plugin:2.12.4:<span class="built_in">test</span> (default-test) @ maven_web ---</span><br><span class="line">[INFO] Surefire report directory: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/surefire-reports</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------</span><br><span class="line"> T E S T S</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Running cn.itcast.test.HelloTest</span><br><span class="line">仅在测试期有效</span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.053 sec</span><br><span class="line"></span><br><span class="line">Results :</span><br><span class="line"></span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line"></span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-war-plugin:2.2:war (default-war) @ maven_web ---</span><br><span class="line">[INFO] Packaging webapp</span><br><span class="line">[INFO] Assembling webapp [maven_web] <span class="keyword">in</span> [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT]</span><br><span class="line">[INFO] Processing war project</span><br><span class="line">[INFO] Copying webapp resources [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/src/main/webapp]</span><br><span class="line">[INFO] Webapp assembled <span class="keyword">in</span> [32 msecs]</span><br><span class="line">[INFO] Building war: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT.war</span><br><span class="line">[INFO] WEB-INF/web.xml already added, skipping</span><br><span class="line">[INFO] </span><br><span class="line"></span><br><span class="line"><span class="comment"># 将自己的代码，编译到本地仓库，之后可以上传到远程仓库，服务器自动下载部署</span></span><br><span class="line">[INFO] --- maven-install-plugin:2.4:install (default-install) @ maven_web ---</span><br><span class="line">[INFO] Installing /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT.war to /Users/swzxsyh/Program/repository/cn/itcast/maven_web/1.0-SNAPSHOT/maven_web-1.0-SNAPSHOT.war</span><br><span class="line">[INFO] Installing /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/pom.xml to /Users/swzxsyh/Program/repository/cn/itcast/maven_web/1.0-SNAPSHOT/maven_web-1.0-SNAPSHOT.pom</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 1.522 s</span><br><span class="line">[INFO] Finished at: 2020-05-16T00:08:09+08:00</span><br><span class="line">[INFO] Final Memory: 12M/297M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p><strong>从运行结果中，可以看出: 当后面的命令执行时，前面的操作过程也都会自动执行</strong></p><h5 id="3-1-6-deploy"><a href="#3-1-6-deploy" class="headerlink" title="3.1.6 deploy"></a>3.1.6 deploy</h5><p>maven工程部署命令，将jar或war包部署（上传）到私服中。</p><h4 id="3-2-Maven生命周期"><a href="#3-2-Maven生命周期" class="headerlink" title="3.2 Maven生命周期"></a>3.2 Maven生命周期</h4><p>maven对项目构建过程分为三套相互独立的生命周期，请注意这里说的是“三套”，而且“相互独立”。</p><p>在同一个生命周期中的命令,执行后面的命令,前面的命令自动执行</p><table><thead><tr><th>三套名称</th><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>Clean Lifecycle</td><td>在进行真正的构建之前进行一些清理工作。</td><td>clean</td></tr><tr><td>Default Lifecycle</td><td>构建的核心部分，编译，测试，打包，部署等等。</td><td>compile,test,package,install,deploy</td></tr><tr><td>Site Lifecycle</td><td>生成项目报告，站点，发布站点。</td><td>site</td></tr></tbody></table><h5 id="3-2-1-clean生命周期-clean生命周期的目的是清理项目"><a href="#3-2-1-clean生命周期-clean生命周期的目的是清理项目" class="headerlink" title="3.2.1 clean生命周期 clean生命周期的目的是清理项目"></a>3.2.1 clean生命周期 clean生命周期的目的是清理项目</h5><table><thead><tr><th>阶段</th><th>描述</th></tr></thead><tbody><tr><td>pre-clean</td><td>执行一些需要在clean之前完成的工作</td></tr><tr><td>clean</td><td>移除所有上一次构建生成的文件</td></tr><tr><td>post-clean</td><td>执行一些需要在clean之后立刻完成的工作</td></tr></tbody></table><h5 id="3-2-2-default生命周期"><a href="#3-2-2-default生命周期" class="headerlink" title="3.2.2 default生命周期"></a>3.2.2 default生命周期</h5><p>default生命周期定义了真正构件时所需要执行的所有步骤，它是生命周期中最核心的部分</p><table><thead><tr><th>生命周期阶段</th><th>描述</th></tr></thead><tbody><tr><td>validate(校验)</td><td>校验项目是否正确并且所有必要的信息可以完成项目的构建过程。</td></tr><tr><td>initialize(初始化)</td><td>初始化构建状态，比如设置属性值。</td></tr><tr><td>generate-sources(生成源代码)</td><td>生成包含在编译阶段中的任何源代码。</td></tr><tr><td>process-sources(处理源代码)</td><td>处理源代码，比如说，过滤任意值。</td></tr><tr><td>generate-resources(生成资源文件)</td><td>生成将会包含在项目包中的资源文件。</td></tr><tr><td>process-resources (处理资源文件)</td><td>复制和处理资源到目标目录，为打包阶段最好准备。</td></tr><tr><td>compile(编译)</td><td>编译项目的源代码。</td></tr><tr><td>process-classes(处理类文件)</td><td>处理编译生成的文件，比如说对Java class文件做字节码改善优化。</td></tr><tr><td>generate-test-sources(生成测试源代 码)</td><td>生成包含在编译阶段中的任何测试源代码。</td></tr><tr><td>process-test-sources(处理测试源代 码)</td><td>处理测试源代码，比如说，过滤任意值。</td></tr><tr><td>generate-test-resources(生成测试资源 文件)</td><td>为测试创建资源文件。</td></tr><tr><td>process-test-resources(处理测试资源 文件)</td><td>复制和处理测试资源到目标目录。</td></tr><tr><td>test-compile(编译测试源码)</td><td>编译测试源代码到测试目标目录.</td></tr><tr><td>process-test-classes(处理测试类文件)</td><td>处理测试源码编译生成的文件。</td></tr><tr><td>test(测试)</td><td>使用合适的单元测试框架运行测试(Juint是其中之一)。</td></tr><tr><td>prepare-package(准备打包)</td><td>在实际打包之前，执行任何的必要的操作为打包做准备。</td></tr><tr><td>package(打包)</td><td>将编译后的代码打包成可分发格式的文件，比如JAR、WAR或者 EAR文件。</td></tr><tr><td>pre-integration-test(集成测试前)</td><td>在执行集成测试前进行必要的动作。比如说，搭建需要的环境。</td></tr><tr><td>integration-test(集成测试)</td><td>处理和部署项目到可以运行集成测试环境中。</td></tr><tr><td>post-integration-test(集成测试后)</td><td>在执行集成测试完成后进行必要的动作。比如说，清理集成测试 环境。</td></tr><tr><td>verify (验证)</td><td>运行任意的检查来验证项目包有效且达到质量标准。</td></tr><tr><td>install(安装)</td><td>安装项目包到本地仓库，这样项目包可以用作其他本地项目的依赖。</td></tr><tr><td>deploy(部署)</td><td>将最终的项目包复制到远程仓库中与其他开发者和项目共享。</td></tr></tbody></table><h5 id="3-2-3-site生命周期"><a href="#3-2-3-site生命周期" class="headerlink" title="3.2.3 site生命周期"></a>3.2.3 site生命周期</h5><p>site生命周期的目的是建立和发布项目站点，Maven能够基于POM所包含的信息，自动生成一个友好的站点，方便团 队交流和发布项目信息。</p><table><thead><tr><th>阶段</th><th>描述</th></tr></thead><tbody><tr><td>pre-site</td><td>执行一些需要在生成站点文档之前完成的工作</td></tr><tr><td>site</td><td>生成项目的站点文档</td></tr><tr><td>post-site</td><td>执行一些需要在生成站点文档之后完成的工作，并且为部署做准备</td></tr><tr><td>site-deploy</td><td>将生成的站点文档部署到特定的服务器上</td></tr></tbody></table><h4 id="3-3-Maven概念模型"><a href="#3-3-Maven概念模型" class="headerlink" title="3.3 Maven概念模型"></a>3.3 Maven概念模型</h4><p>Maven 包含了一个项目对象模型 (POM:Project Object Model)，一组标准集合，一个项目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在生命周期阶段(phase)中插 件(plugin)目标(goal)的逻辑。</p><p><img src="1589427711479.png" alt=""></p><ul><li><p>项目对象模型 (Project Object Model)</p><p>一个maven工程都有一个pom.xml文件，通过pom.xml文件定义项目的坐标、项目依赖、项目信息、插件目标等。</p></li><li><p>依赖管理系统(Dependency Management System)</p><p>通过maven的依赖管理对项目所依赖的jar 包进行统一管理。比如:项目依赖junit4.12，通过在pom.xml中定义 junit4.12的依赖即使用junit4.12，如下所示是junit4.12的依赖定义:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 依赖关系 --&gt;</span> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 此项目运行使用junit，所以此项目依赖junit --&gt;</span> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的项目名称 --&gt;</span> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的模块名称 --&gt;</span> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="comment">&lt;!-- junit版本 --&gt;</span> <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 依赖范围:单元测试时使用junit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>一个项目生命周期(Project Lifecycle)</p><p>使用maven完成项目的构建，项目构建包括:清理、编译、测试、部署等过程，maven将这些过程规范为一个生命</p><p>周期</p><table><thead><tr><th>清理</th><th>➡</th><th>编译</th><th>➡</th><th>测试</th><th>➡</th><th>报告</th><th>➡</th><th>打包</th><th>➡</th><th>部署</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table></li><li><p>一组标准集合</p><p>maven将整个项目管理过程定义一组标准。</p><p>比如:通过maven构建工程有标准的目录结构，有标准的生命周期阶 段、依赖管理有标准的坐标定义等。</p></li><li><p>插件(plugin)目标(goal)</p><p>maven 管理项目生命周期过程都是基于插件完成的。</p></li></ul><h1 id="四-IDEA创建Maven工程"><a href="#四-IDEA创建Maven工程" class="headerlink" title="四.IDEA创建Maven工程"></a>四.IDEA创建Maven工程</h1><h4 id="4-1-IDEA配置本地Maven"><a href="#4-1-IDEA配置本地Maven" class="headerlink" title="4.1 IDEA配置本地Maven"></a>4.1 IDEA配置本地Maven</h4><p>进入configure–&gt;settings–&gt;build–&gt;build tools–&gt;Maven中，设置maven工具和本地仓库</p><p>进入configure–&gt;settings–&gt;build–&gt;build tools–&gt;Maven–&gt;Runner中，设置VM Options:-DarchetypeCatalog=internal -Dfile.encoding=GB2312</p><h4 id="4-2-IDEA创建工程"><a href="#4-2-IDEA创建工程" class="headerlink" title="4.2 IDEA创建工程"></a>4.2 IDEA创建工程</h4><ul><li><p>Java工程</p><p>选择Maven，下一步，设置GroupID域名倒写，ArtifactID项目名，Version版本号</p></li><li><p>手动创建test测试配置文件目录</p><p>test目录右击创建resources目录，然后Mark Directory AS选Resources Root</p></li><li><p>指定maven环境的jdk版本和字符集</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- pom.xml --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置编译版本为1.8 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>maven工程命令操作</p><p>打开右侧maven栏，双击命令即可</p></li><li><p>如何导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- pom.xml --&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>安装一个插件JBLJavaToWeb</p><p>点击项目，选择插件功能JBLJavaToWeb即可将Java项目转换为Web项目</p></li></ul><h4 id="4-3-发布web工程"><a href="#4-3-发布web工程" class="headerlink" title="4.3 发布web工程"></a>4.3 发布web工程</h4><ul><li><p>idea使用外置tomcat运行</p><p>Add Configurations–&gt;ADD=&gt;Tomcat(Local)，设置名称Tomcat，其他跟之前项目一样</p></li><li><p>idea使用maven内置tomcat插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置编译版本为1.8 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">uriEncoding</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">uriEncoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-4-依赖管理"><a href="#4-4-依赖管理" class="headerlink" title="4.4 依赖管理"></a>4.4 依赖管理</h4><p>我们不考虑依赖范围引起的问题</p><table><thead><tr><th>依赖范围</th><th>对于编译classpath有效</th><th>对于测试classpath有效</th><th>对于运行时classpath有效</th><th>例子</th></tr></thead><tbody><tr><td>compile（默认）</td><td>Y</td><td>Y</td><td>Y</td><td>mybatis</td></tr><tr><td>test</td><td>-</td><td>Y</td><td>-</td><td>junit</td></tr><tr><td><strong>provided</strong></td><td>Y</td><td>Y</td><td>-</td><td>servlet-api</td></tr><tr><td>runtime</td><td>-</td><td>Y</td><td>Y</td><td>JDBC驱动</td></tr><tr><td>system</td><td>Y</td><td>Y</td><td>-</td><td>本地，maven仓库之外的库</td></tr></tbody></table><table><thead><tr><th>依赖范围</th><th>描述</th></tr></thead><tbody><tr><td>compile</td><td>默认依赖范围，作用域在编译、测试、运行时都有效。</td></tr><tr><td>test</td><td>作用域在测试时有效。编译和运行时不需要，比如：Junit。</td></tr><tr><td>provided</td><td>作用域在编译、测试时有效。运行时不需要，比如： servlet api 被 tomcat 容器提供。</td></tr><tr><td>runtime</td><td>作用域在测试、运行时有效。编译时不需要，比如：jdbc的驱动包。</td></tr><tr><td>system</td><td>system范围依赖与provided类似，jar包在本地磁盘而不是maven仓库</td></tr></tbody></table><ul><li><p>在maven_web工程中测试scope:</p><ul><li><p>默认引入 的jar包 </p><p>compile 【默认范围 可以不写】(编译、测试、运行 都有效 ) </p></li><li><p>servlet-api 、jsp-api</p><p>provided (编译、测试 有效， 运行时无效 防止和tomcat下jar冲突) </p></li><li><p>jdbc驱动jar包 </p><p>runtime (测试、运行 有效 )</p></li><li><p>junit </p><p>test (测试有效)</p></li></ul></li></ul><p>依赖范围由强到弱的顺序是:compile&gt;provided&gt;runtime&gt;test</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 介绍</strong></p><p><strong>### 项目管理工具</strong></p><p>- 依赖管理</p><p>​    - 通过maven管理jar包的整个过程</p><p>- 一键构建</p><p>​    - 通过一个maven的一个命令就可以完成工程整个构建的过程</p><p><strong>## 安装和使用</strong></p><p><strong>### 下载和安装</strong></p><p>- 下载 3.5.2 版本</p><p>- 安装解压到非中文路径</p><p>- 配置MAVEN_HOME环境变量</p><p>​    - 依赖java环境</p><p><strong>## 仓库分类</strong></p><p><strong>### 本地仓库</strong></p><p><strong>### 远程仓库</strong></p><p>- 1.中央仓库</p><p>- 2.第三方远程仓库</p><p>​    - 阿里云镜像</p><p>- 3.私服</p><p><strong>### 配置指定本地仓库</strong></p><p>- 帅哥提供5G</p><p>​    - 不建议覆盖</p><p><strong>### 配置阿里云镜像</strong></p><p>- 提高下载速度</p><p><strong>## 命令和插件</strong></p><p><strong>### 1）clean</strong></p><p>- 清理target目录</p><p><strong>### 2）compile</strong></p><p>- 编译 src/main/java</p><p><strong>### 3）test</strong></p><p>- 测试 src/test/java</p><p><strong>### 4）package</strong></p><p>- 将工程进行打包</p><p>​    - jar</p><p>​    - war</p><p><strong>### 5）install</strong></p><p>- 将打包后的工程安装到本地仓库</p><p><strong>### 6）deploy</strong></p><p>- 将本地仓库的jar包或war包上传到私服</p><p><strong>## 生命周期</strong></p><p><strong>### 清理生命周期</strong></p><p>- clean</p><p><strong>### 默认生命周期</strong></p><p>- compile</p><p>​    - test</p><p>​        - package</p><p>​            - install</p><p>​                - deploy</p><p><strong>### 站点生命周期</strong></p><p>- site</p><p><strong>## IDEA配置maven工具</strong></p><p><strong>### 全局settings配置</strong></p><p>- 指定maven工具路径</p><p>- 指定maven工具配置文件路径</p><p>- 指定maven工具本地仓库的路径</p><p><strong>### 指定本地创建maven时，使用本地骨架</strong></p><p>- -DarchetypeCatalog=internal -Dfile.encoding=GB2312</p><p><strong>## IDEA创建maven工程</strong></p><p><strong>### 1)创建java工程</strong></p><p><strong>### 2）创建web工程</strong></p><p>- 下载JBLJavaToWeb插件</p><p><strong>## IDEA发布web工程</strong></p><p><strong>### 1）使用本地tomcat</strong></p><p><strong>### 2）使用tomcat插件</strong></p><p>- pom.xml</p><p><strong>## 依赖范围</strong></p><p><strong>### 1）我们编写的web工程需要手动导入servlet-api 坐标</strong></p><p><strong>### 2）在打成 war包的时候将servlet-api 设置到 /WEB-INF/lib目录下</strong></p><p><strong>### 3）如果与tomcat软件内置的版本不一致，可能会启动报错</strong></p><p><strong>### 4）需要指定jar包的作用范围（provided）</strong></p><p><strong>### 有哪些依赖范围呢？</strong></p><p>- compile</p><p>​    - 默认，在编译、测试、运行期有效</p><p>- test</p><p>​    - 仅在测试期有效</p><p>- provided</p><p>​    - 在编译、测试期有效</p><p>- runtime</p><p>​    - 在测试、运行期有效</p><p>- system</p><p>​    - 从本地中导入jar包</p><p><strong>## 大作业</strong></p><p><strong>### 1）数据库表设计画图（8张表）</strong></p><p><strong>### 2）搭建黑马旅游网</strong></p><p><strong>### 3）安装lombok插件</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;maven基础与环境搭建&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
