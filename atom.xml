<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Swzxsyh</title>
  
  <subtitle>--学习笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-28T16:00:00.089Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>就业班学习笔记（六十四）</title>
    <link href="http://yoursite.com/2020/05/28/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E5%9B%9B%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/28/就业班学习笔记（六十四）/</id>
    <published>2020-05-28T01:03:54.000Z</published>
    <updated>2020-05-28T16:00:00.089Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Spring介绍</li><li>ioc介绍</li><li>Spring快速入门</li><li>相关API</li><li>Spring配置文件</li></ul><a id="more"></a><h1 id="一-Spring概述"><a href="#一-Spring概述" class="headerlink" title="一.Spring概述"></a>一.Spring概述</h1><h4 id="1-1-Spring是什么"><a href="#1-1-Spring是什么" class="headerlink" title="1.1 Spring是什么"></a>1.1 Spring是什么</h4><p>Spring是分层的 Java SE/EE应用 full-stack(全栈) 轻量级开源框架。<br> Spring的核心是 IOC(Inverse Of Control:控制反转)和 AOP(Aspect Oriented Programming:面向切面编程)</p><p>Spring一个全栈应用框架, 提供了表现层 Spring MVC 和持久层 Spring JDBC 以及业务层事务管理等众 多应用技术</p><p>Spring还能整合开源世界众多著名的第三方框架和类库，逐渐成为使用最多的 Java EE 企业应用开源框 架</p><p>Spring官网:<a href="https://spring.io/">https://spring.io/</a></p><h4 id="1-2-Spring发展历程"><a href="#1-2-Spring发展历程" class="headerlink" title="1.2 Spring发展历程"></a>1.2 Spring发展历程</h4><ul><li><p>EJB</p><p>1997  年，IBM提出了EJB 的思想</p><p>1998  年，SUN制定开发标准规范 EJB1.0</p><p>1999  年，EJB1.1 发布</p><p>2001 年，EJB2.0 发布 </p><p>2003 年，EJB2.1 发布 </p><p>2006 年，EJB3.0 发布</p></li><li><p>Spring<br> Rod Johnson 2002年编著《Expert one on one J2EE design and development》指出了JavaEE和EJB组件框架中的存在的一些主要缺陷;提出普通java类依赖注入更为简单的解决方案。</p><p>2004年编著《Expert one-on-one J2EE Development without EJB》 阐述了JavaEE开发时不使用EJB的解决方式(Spring 雏形) 同年4月spring1.0诞生</p><p>2006年10月，发布 Spring2.0 </p><p>2009年12月，发布 Spring3.0 </p><p>2013年12月，发布 Spring4.0</p><p>2017年9月， 发布最新 Spring5.0 通用版(GA)</p></li></ul><h4 id="1-3-Spring优势"><a href="#1-3-Spring优势" class="headerlink" title="1.3 Spring优势"></a>1.3 Spring优势</h4><ul><li><p>方便解耦，简化开发<br>通过Spring提供的 IOC 容器，可以将对象间的依赖关系交由 Spring 进行控制，避免硬编码所造成的过度耦合。 </p></li><li><p>AOP编程的支持</p><p>通过Spring的AOP功能，方便进行面向切面编程，可以方便的实现对程序进行权限拦截、运行监控等功能。</p></li><li><p>声明式事务的支持</p><p>只需要通过配置就可以完成对事务的管理，而无需手动编程。</p></li><li><p>方便程序的测试</p><p>Spring对Junit4支持，可以通过注解方便的测试Spring程序。</p></li><li><p>方便集成各种优秀框架</p><p>Spring对各种优秀框架(Struts、Hibernate、Hessian、Quartz等)的支持。</p></li><li><p>降低JavaEE API的使用难度</p><p>Spring对JavaEEAPI(如JDBC、JavaMail、RPC等)进行了薄薄的封装层，使这些 API 的使用难度大为降低。</p></li></ul><h4 id="1-4-Spring体系结构"><a href="#1-4-Spring体系结构" class="headerlink" title="1.4 Spring体系结构"></a>1.4 Spring体系结构</h4><ul><li>核心容器（Core Container）</li><li>数据访问/集成（Data Access/Integration）层</li><li>Web层</li><li>AOP（Aspect Oriented Programming）模块</li><li>植入（Instrumentation）模块</li><li>消息传输（Messaging）</li><li>测试（Test）模块</li></ul><p><img src="image-20200528093016354.png" alt=""></p><h1 id="二-初识IOC"><a href="#二-初识IOC" class="headerlink" title="二.初识IOC"></a>二.初识IOC</h1><h4 id="2-1-介绍"><a href="#2-1-介绍" class="headerlink" title="2.1 介绍"></a>2.1 介绍</h4><p>控制反转(Inverse Of Control) 是一种设计思想。它的目的是指导我们设计出更加松耦合的程序。</p><blockquote><p>控制:在java中指的是对象的控制权限(创建、销毁)</p><p>反转:指的是对象控制权由原来  由开发者在类中手动控制 反转到 由Spring容器控制</p></blockquote><h4 id="2-2-环境搭建"><a href="#2-2-环境搭建" class="headerlink" title="2.2 环境搭建"></a>2.2 环境搭建</h4><p>IDEA new empty project ==&gt;设置Project Name、JDK Version、Encodings==&gt;添加maven module==&gt;导入Jar包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--dom4j--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--xpath--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-3-版本一-原始版本"><a href="#2-3-版本一-原始版本" class="headerlink" title="2.3 版本一:原始版本"></a>2.3 版本一:原始版本</h4><ul><li><p>编写UserDao接口和实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserDao Saved!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写UserService接口和实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        UserDaoImpl userDao = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line">        userDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写UserTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserTest</span></span>&#123;</span><br><span class="line">  <span class="comment">//调用Service实现保存</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUser01</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserServiceImpl userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">    userService.save();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>问题</p><ul><li>Service层和dao层代码产生耦合——松耦原则：编译期解耦，运行期可以耦合</li><li>每次调用save方法时，都会创建一个新的dao对象</li></ul></li></ul><h4 id="2-4-版本二-工厂解耦"><a href="#2-4-版本二-工厂解耦" class="headerlink" title="2.4 版本二:工厂解耦"></a>2.4 版本二:工厂解耦</h4><ul><li><p>编写beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.UserDaoImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写BeanFactory</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        Object object = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.通过类加载器读取 beans.xml</span></span><br><span class="line">            InputStream in = BeanFactory.class.getClassLoader().getResourceAsStream("beans.xml");</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.创建dom4j核心解析器对象</span></span><br><span class="line">            SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">            Document document = saxReader.read(in);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3.编写xpath表达式</span></span><br><span class="line">            String xpath = <span class="string">"//bean[@id='"</span> + id + <span class="string">"']"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 4.获取指定id的标签对象</span></span><br><span class="line">            Element element = (Element) document.selectSingleNode(xpath);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 5.获取全限定名</span></span><br><span class="line">            String className = element.attributeValue(<span class="string">"class"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 6.通过反射创建对象实例</span></span><br><span class="line">            object = Class.forName(className).newInstance();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 7.返回对象实例</span></span><br><span class="line">        <span class="keyword">return</span> object;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>修改UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//        UserDaoImpl userDao = new UserDaoImpl();</span></span><br><span class="line">        UserDao userDao = (UserDao) BeanFactory.getBean(<span class="string">"userDao"</span>);</span><br><span class="line">        userDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>问题</p><p>每次调用save方法，都会创建一个新的dao对象，工厂每次调用getBean方法都会创建一个新的对象实例，浪费内存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//        UserDaoImpl userDao = new UserDaoImpl();</span></span><br><span class="line">        UserDao userDao = (UserDao) BeanFactory.getBean(<span class="string">"userDao"</span>);</span><br><span class="line">        UserDao userDao1 = (UserDao) BeanFactory.getBean(<span class="string">"userDao"</span>);</span><br><span class="line">        userDao.save();</span><br><span class="line">        userDao1.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">com.itheima.dao.impl.UserDaoImpl@516be40f</span></span><br><span class="line"><span class="comment">com.itheima.dao.impl.UserDaoImpl@3c0a50da</span></span><br><span class="line"><span class="comment">UserDao Saved!</span></span><br><span class="line"><span class="comment">UserDao Saved!</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-5-版本三-工厂优化"><a href="#2-5-版本三-工厂优化" class="headerlink" title="2.5 版本三:工厂优化"></a>2.5 版本三:工厂优化</h4><ul><li><p>修改BeanFactory</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明存储对象的容器(map集合)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String, Object&gt; ioc = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态代码块，初始化ioc容器</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        String id = <span class="keyword">null</span>;</span><br><span class="line">        String className = <span class="keyword">null</span>;</span><br><span class="line">        Object object = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.通过类加载器读取 beans.xml</span></span><br><span class="line">            InputStream in = BeanFactory.class.getClassLoader().getResourceAsStream("beans.xml");</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.创建dom4j核心解析器对象</span></span><br><span class="line">            SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">            Document document = saxReader.read(in);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3.编写xpath表达式</span></span><br><span class="line">            String xpath = <span class="string">"//bean"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 4.获取所有bean标签对象</span></span><br><span class="line">            List&lt;Element&gt; list = document.selectNodes(xpath);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 5.遍历集合，创建对象实例，设置到ioc容器中</span></span><br><span class="line">            <span class="keyword">for</span> (Element element : list) &#123;</span><br><span class="line">                id = element.attributeValue(<span class="string">"id"</span>);</span><br><span class="line">                className = element.attributeValue(<span class="string">"class"</span>);</span><br><span class="line">                object = Class.forName(className).newInstance();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 设置到map集合</span></span><br><span class="line">                ioc.put(id, object);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (</span><br><span class="line">                Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 7.从ioc容器获取指定id的对象实例</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ioc.get(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">com.itheima.dao.impl.UserDaoImpl@4ba2ca36</span></span><br><span class="line"><span class="comment">com.itheima.dao.impl.UserDaoImpl@4ba2ca36</span></span><br><span class="line"><span class="comment">UserDao Saved!</span></span><br><span class="line"><span class="comment">UserDao Saved!</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-6-小结"><a href="#2-6-小结" class="headerlink" title="2.6 小结"></a>2.6 小结</h4><p>对象的创建由原来的 使用 new关键字 在类中主动创建 变成了 从工厂中获取, 而对象的创建过程由工厂 内部来实现, 而这个工厂就是 Spring的IOC容器。</p><p>也就是以后我们的对象不再自己创建,而是直接向 Spring要, 这种思想就是IOC</p><blockquote><p>目的：松耦合</p></blockquote><h1 id="三-Spring快速入门"><a href="#三-Spring快速入门" class="headerlink" title="三.Spring快速入门"></a>三.Spring快速入门</h1><h4 id="3-1-需求"><a href="#3-1-需求" class="headerlink" title="3.1 需求"></a>3.1 需求</h4><table><thead><tr><th>UserServiceImpl</th><th></th><th>UserDaoImpl</th></tr></thead><tbody><tr><td>UserDao userDao = Spring客户端.getBean(id标识)</td><td></td><td>CURD方法</td></tr><tr><td>⬆⬇Spring框架</td><td></td><td>⬆⬇</td></tr><tr><td>读取xml配置文件<br/>根据id标识获得Bean权限定名<br/>通过反射创建Bean对象<br/>返回对象</td><td>➡<br/>⬅</td><td>xml配置文件<br/>id标识=com.itheima.dao.UserDaoImpl</td></tr></tbody></table><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li><p>创建maven的java模块</p><p>IDEA new moudle==&gt;MVN==&gt;导入依赖管理Spring、Junit坐标，JDK1.8插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Spring_online_Day01_ioc_xml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring的核心坐标--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写UserDao接口和实现类(同上)</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserDao Saved!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建spring的核心配置文件，导入约束</p><blockquote><p>官方推荐名称:applicationContext.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>写bean标签(id、class)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    将userDao的对象创建权交给ioc容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.UserDaoImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试(模拟service层)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">// spring的快速入门</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 1.通过spring的api读取配置文件</span></span><br><span class="line">        ClassPathXmlApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">        <span class="comment">// 2.获取指定id的对象实例</span></span><br><span class="line">        UserDao userDao = (UserDao) app.getBean(<span class="string">"userDao"</span>);</span><br><span class="line">        userDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-Spring相关API"><a href="#四-Spring相关API" class="headerlink" title="四.Spring相关API"></a>四.Spring相关API</h1><h4 id="4-1-二个接口-创建的对象均为单例"><a href="#4-1-二个接口-创建的对象均为单例" class="headerlink" title="4.1 二个接口(创建的对象均为单例)"></a>4.1 二个接口(创建的对象均为单例)</h4><ul><li><p>BeanFactory</p><ul><li><p>介绍</p><p>IOC容器的顶级接口，定义了IOC的最基础的功能, 但功能比较简单,一般面向Spring自身使用</p></li><li><p>特点(懒汉设计)</p><p>在第一次使用到某个Bean时(调用getBean())，才对该Bean进行加载实例化[用的时候再创建] </p></li></ul></li><li><p>ApplicationContext</p><ul><li><p>介绍</p><p>这是在BeanFactory基础上衍生出的接口,它扩展了BeanFactory的功能,一般面向程序员使用</p></li><li><p>特点(恶汉设计)</p><p>在容器启动时，一次性创建并加载了所有的Bean [初始化的时候全创建好] </p></li></ul></li></ul><h4 id="4-2-三个实现类"><a href="#4-2-三个实现类" class="headerlink" title="4.2 三个实现类"></a>4.2 三个实现类</h4><ul><li><p>ClassPathXmlApplicationContext</p><ul><li><blockquote><p>功能：读取类路径(classpath)下的xml配置文件</p></blockquote></li></ul></li><li><p>FileSystemXmlApplicationContext</p><ul><li><blockquote><p>功能：读取本地磁盘下的xml配置文件</p></blockquote></li></ul></li><li><p>AnnotationConfigApplicationContext</p><ul><li><blockquote><p>功能：读取java配置类加载配置</p></blockquote></li></ul></li></ul><h4 id="4-3-一个方法"><a href="#4-3-一个方法" class="headerlink" title="4.3 一个方法"></a>4.3 一个方法</h4><ul><li><p>public Object getBean(String name) throws BeansException;</p><ul><li><blockquote><p>功能：通过指定id获取对象的实例，需要手动强转</p></blockquote></li></ul></li><li><p>public &lt;T&gt; T getBean(Class&lt;T&gt; requiredType);</p><ul><li><blockquote><p>功能：通过指定类型获取对象的实例，不需要强转</p></blockquote></li></ul></li><li><p>public &lt;T&gt; T getBean(String name, Class&lt;T&gt; requiredType);</p><ul><li><blockquote><p>功能：通过指定id和类型获取对象的实例</p></blockquote></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// getBean方法介绍</span></span><br><span class="line"><span class="comment">// 方式一: 通过指定id获取对象的实例，需要手动强转</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUserByID</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">  <span class="comment">// 1.通过spring的api读取配置文件</span></span><br><span class="line">  ApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">  <span class="comment">// 2.获取指定id的对象实例</span></span><br><span class="line">  UserDao userDao = (UserDao) app.getBean(<span class="string">"userDao"</span>);</span><br><span class="line">  userDao.save();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// getBean方法介绍</span></span><br><span class="line"><span class="comment">// 方式二:通过指定(接口)类型获取对象的实例，不需要强转</span></span><br><span class="line"><span class="comment">//缺点:如果同一个接口类型下有多个对象实例，会报错</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUserByInstance</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">  <span class="comment">// 1.通过spring的api读取配置文件</span></span><br><span class="line">  ApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line"></span><br><span class="line">  UserDao userDao = app.getBean(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  userDao.save();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// getBean方法介绍</span></span><br><span class="line"><span class="comment">// 方式三:通过指定id和类型获取对象的实例</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUserBySpecifyIdOfType</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">  <span class="comment">// 1.通过spring的api读取配置文件</span></span><br><span class="line">  ApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line"></span><br><span class="line">  UserDao userDao = app.getBean(<span class="string">"userDao"</span>, UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  userDao.save();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-4-知识小结"><a href="#4-4-知识小结" class="headerlink" title="4.4 知识小结"></a>4.4 知识小结</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext app = <span class="keyword">new</span> ClasspathXmlApplicationContext(<span class="string">"xml文件"</span>); </span><br><span class="line">app.getBean(<span class="string">"id"</span>);</span><br><span class="line">app.getBean(Class);</span><br></pre></td></tr></table></figure><h1 id="五-Spring配置文件"><a href="#五-Spring配置文件" class="headerlink" title="五.Spring配置文件"></a>五.Spring配置文件</h1><h4 id="5-1-Bean标签基本配置"><a href="#5-1-Bean标签基本配置" class="headerlink" title="5.1 Bean标签基本配置"></a>5.1 Bean标签基本配置</h4><ul><li><p>基本配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"cn.itcast.dao.impl.UserDaoImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>基本属性</th><th></th></tr></thead><tbody><tr><td>id</td><td>在ioc容器的唯一标识</td></tr><tr><td>class</td><td>创建对象实例的全限定名</td></tr></tbody></table></li></ul><ul><li><p>作用范围</p><table><thead><tr><th>scope属性:声明此对象的作用范围</th><th>何时创建</th><th>对象运行</th><th>何时销毁</th></tr></thead><tbody><tr><td>singleton(单例对象)</td><td>ioc容器初始化时，创建对象</td><td>ioc容器在,对象在</td><td>ioc容器关闭时，销毁对象</td></tr><tr><td>prototype(多例对象)</td><td>在调用getBean()方法时，创建</td><td>一直使用就一直活着</td><td>当对象不再使用后，根据JVM GC机制垃圾回收</td></tr></tbody></table></li><li><p>生命周期</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    将userDao的对象创建权交给ioc容器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.UserDaoImpl"</span> <span class="attr">scope</span>=<span class="string">"singleton"</span> <span class="attr">init-method</span>=<span class="string">"MethodInit"</span> <span class="attr">destroy-method</span>=<span class="string">"MethodDestory"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserDao Saved!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//当创建时，init-method="MethodInit"</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MethodInit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Method Init Now"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//当销毁时，destroy-method="MethodDestory"</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MethodDestory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Method Die Now"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUserDestory</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">  <span class="comment">// 1.通过spring的api读取配置文件</span></span><br><span class="line">  ApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">  <span class="comment">// 2.获取指定id的对象实例</span></span><br><span class="line">  UserDao userDao = (UserDao) app.getBean(<span class="string">"userDao"</span>);</span><br><span class="line">  UserDao userDao1 = (UserDao) app.getBean(<span class="string">"userDao"</span>);</span><br><span class="line"></span><br><span class="line">  System.out.println(userDao);</span><br><span class="line">  System.out.println(userDao1);</span><br><span class="line"></span><br><span class="line">  ((ClassPathXmlApplicationContext) app).close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Method Init Now</span></span><br><span class="line"><span class="comment">com.itheima.dao.impl.UserDaoImpl@78e67e0a</span></span><br><span class="line"><span class="comment">com.itheima.dao.impl.UserDaoImpl@78e67e0a</span></span><br><span class="line"><span class="comment">Method Die Now</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="5-2-spring创建对象实例三种方式"><a href="#5-2-spring创建对象实例三种方式" class="headerlink" title="5.2 spring创建对象实例三种方式"></a>5.2 spring创建对象实例三种方式</h4><ul><li><p>无参构造方法实例化</p><blockquote><p>在企业开发时，所有的类必须提供无参构造方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UserDaoImpl</span><span class="params">(String a)</span></span></span><br><span class="line"><span class="function">  <span class="comment">//若未提供无参构造，则xml中class="com.itheima.dao.impl.UserDaoImpl" 会报错</span></span></span><br></pre></td></tr></table></figure></li><li><p>工厂静态方法实例化</p><blockquote><p>依赖的jar包中有个A类，A类中有个静态方法m1，m1方法的返回值是一个B对象。如果我们频繁 使用B对象，此时我们可以将B对象的创建权交给spring的IOC容器，以后我们在使用B对象时，无 需调用A类中的m1方法，直接从IOC容器获得。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//工厂静态方法实例化对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticFactoryBean</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> UserDao <span class="title">createUserDao</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 传统方式，自己通过工厂获取对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        UserDao userDao = StaticFactoryBean.createUserDao();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--工厂静态方法实例化对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.factory.StaticFactoryBean"</span> <span class="attr">factory-method</span>=<span class="string">"createUserDao"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>工厂普通方法实例化</p><blockquote><p>依赖的jar包中有个A类，A类中有个普通方法m1，m1方法的返回值是一个B对象。如果我们频繁 使用B对象，此时我们可以将B对象的创建权交给spring的IOC容器，以后我们在使用B对象时，无 需调用A类中的m1方法，直接从IOC容器获得。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//工厂普通方法实例化对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicFactoryBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> UserDao <span class="title">createUserDao</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 传统方式，自己通过工厂获取对象</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 1.创建工厂对象</span></span><br><span class="line">    DynamicFactoryBean dynamicFactoryBean = <span class="keyword">new</span> DynamicFactoryBean();</span><br><span class="line">    <span class="comment">// 2.创建UserDao对象</span></span><br><span class="line">    UserDao userDao = dynamicFactoryBean.createUserDao();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--工厂普通方法实例化对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dynamicFactoryBean"</span> <span class="attr">class</span>=<span class="string">"com.itheima.factory.DynamicFactoryBean"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">factory-bean</span>=<span class="string">"dynamicFactoryBean"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="5-3-Bean依赖注入"><a href="#5-3-Bean依赖注入" class="headerlink" title="5.3 Bean依赖注入"></a>5.3 Bean依赖注入</h4><h5 id="5-3-1-概述"><a href="#5-3-1-概述" class="headerlink" title="5.3.1 概述"></a>5.3.1 概述</h5><p>依赖注入(Dependency Injection, DI) 它是 Spring 框架核心 IOC 的具体实现 </p><p>其实就是给对象中的属性赋值的过程，通过spring完成依赖注入</p><table><thead><tr><th>UserServiceImpl</th><th>➡依赖</th><th>UserDaoImpl</th></tr></thead><tbody><tr><td>private UserDao userDao<br/>userDao.save()</td><td></td><td></td></tr><tr><td>⬆service层需要调用dao层对象的实例，就要从Spring的ioc容器注入此实例， <br/>⬆这个过程称为依赖注入</td><td></td><td></td></tr><tr><td><b>Spring的配置文件</td><td></td><td></td></tr><tr><td>&lt;bean id=”userDao” class=”xxx”&gt;<br/>&lt;bean id=”userService” class=”xxx”&gt;</td><td></td><td></td></tr></tbody></table><h5 id="5-3-2-环境搭建"><a href="#5-3-2-环境搭建" class="headerlink" title="5.3.2 环境搭建"></a>5.3.2 环境搭建</h5><p>IDEA new moudle==&gt;MVN==&gt;导入依赖管理Spring、Junit坐标，JDK1.8插件==&gt;复制UserDao,UserService==&gt;编写spring的核心配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring的核心坐标--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    将userDao的对象创建权交给ioc容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.UserDaoImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    将userService交给ioc容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.UserServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-4-Bean依赖注入方式"><a href="#5-4-Bean依赖注入方式" class="headerlink" title="5.4 Bean依赖注入方式"></a><h4 id="1"/>5.4 Bean依赖注入方式</h4><ul><li><p>构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserServiceImpl</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">构造方法注入: &lt;constructor-arg&gt; 子标签</span></span><br><span class="line"><span class="comment">版本一:</span></span><br><span class="line"><span class="comment">name:构造方法参数名称 </span></span><br><span class="line"><span class="comment">value:简单数据类型(String、int、double...)</span></span><br><span class="line"><span class="comment">ref:引用数据类型(从ioc容器中获取的对象) </span></span><br><span class="line"><span class="comment">版本二:</span></span><br><span class="line"><span class="comment">index:构造方法参数索引 </span></span><br><span class="line"><span class="comment">type:该索引对应的java类型(全限定名) </span></span><br><span class="line"><span class="comment">value:简单数据类型(String、int、double...) </span></span><br><span class="line"><span class="comment">ref:引用数据类型(从ioc容器中获取的对象)</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    将userService交给ioc容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.UserServiceImpl"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"userDao"</span> <span class="attr">ref</span>=<span class="string">"userDao"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>set方法(推荐使用 )</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public UserServiceImpl(UserDao userDao) &#123;</span></span><br><span class="line"><span class="comment">//        this.userDao = userDao;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserDao</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    将userDao的对象创建权交给ioc容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.UserDaoImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    set方法注入:&lt;property&gt; 子标签</span></span><br><span class="line"><span class="comment">        name:set方法的属性名 setUserDao() -&gt; UserDao -&gt; userDao</span></span><br><span class="line"><span class="comment">        value:简单数据类型(String、int、double...)</span></span><br><span class="line"><span class="comment">        ref:引用数据类型(从ioc容器中获取的对象)</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.UserServiceImpl"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"userDao"</span> <span class="attr">ref</span>=<span class="string">"userDao"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>P命名空间注入</p><blockquote><p>P命名空间注入底层(本质)使用的也是set方法注入，只是在上着的基础上进行简化</p></blockquote><ul><li><p>导入P命名空间约束</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用P命名空间注完成注入(单一属性来简洁，但是若变量多，则不如第二种规范)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.UserServiceImpl"</span> <span class="attr">p:userDao-ref</span>=<span class="string">"userDao"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="5-5-Bean依赖注入的数据类型"><a href="#5-5-Bean依赖注入的数据类型" class="headerlink" title="5.5 Bean依赖注入的数据类型"></a>5.5 Bean依赖注入的数据类型</h4><ul><li><p>简单数据类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注入简单数据类型 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user"</span> <span class="attr">class</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"jack"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>引用数据类型</p><p>参考<a href="#1">5.4 Bean依赖注入方式</a></p></li><li><p>集合数据类型</p><ul><li><p>单列集合(list、set、array)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; list;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Object&gt; set;</span><br><span class="line">    <span class="keyword">private</span> Object[] array;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setList</span><span class="params">(List&lt;Object&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSet</span><span class="params">(Set&lt;Object&gt; set)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.set = set;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setArray</span><span class="params">(Object[] array)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.array = array;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserDao Saved!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    di 注入单列集合类型</span></span><br><span class="line"><span class="comment">        需要在 &lt;property&gt;标签中</span></span><br><span class="line"><span class="comment">    list集合 使用子标签 &lt;list&gt;</span></span><br><span class="line"><span class="comment">            &lt;value&gt; 简单数据类型</span></span><br><span class="line"><span class="comment">            &lt;ref&gt; 引用数据类型(对象在ioc容器中)</span></span><br><span class="line"><span class="comment">    set集合 使用子标签 &lt;set&gt;</span></span><br><span class="line"><span class="comment">        &lt;value&gt; 简单数据类型</span></span><br><span class="line"><span class="comment">        &lt;ref&gt; 引用数据类型(对象在ioc容器中)</span></span><br><span class="line"><span class="comment">    array数组 使用子标签&lt;array&gt;</span></span><br><span class="line"><span class="comment">        &lt;value&gt; 简单数据类型</span></span><br><span class="line"><span class="comment">        &lt;ref&gt; 引用数据类型(对象在ioc容器中)</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.UserDaoImpl"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>A<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>B<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"set"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>C<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>D<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"array"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>E<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>F<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>双列集合(map、properties)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.dao.impl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.dao.UserDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    private List&lt;Object&gt; list;</span></span><br><span class="line"><span class="comment">//    private Set&lt;Object&gt; set;</span></span><br><span class="line"><span class="comment">//    private Object[] array;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    public void setList(List&lt;Object&gt; list) &#123;</span></span><br><span class="line"><span class="comment">//        this.list = list;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    public void setSet(Set&lt;Object&gt; set) &#123;</span></span><br><span class="line"><span class="comment">//        this.set = set;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    public void setArray(Object[] array) &#123;</span></span><br><span class="line"><span class="comment">//        this.array = array;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String ,Object&gt; map;</span><br><span class="line">    <span class="keyword">private</span> Properties properties;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMap</span><span class="params">(Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.map = map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProperties</span><span class="params">(Properties properties)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.properties = properties;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserDao Saved!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">di 注入双列集合类型</span></span><br><span class="line"><span class="comment">    需要在 &lt;property&gt;标签中</span></span><br><span class="line"><span class="comment">map集合 使用子标签&lt;map&gt;</span></span><br><span class="line"><span class="comment">    &lt;entry key="" value="简单数据类型" | value-ref="引用数据类型(对象ioc中)" &gt;&lt;/entry&gt;</span></span><br><span class="line"><span class="comment">properties集合 使用子标签 &lt;props&gt;</span></span><br><span class="line"><span class="comment">     &lt;prop key="" &gt;value&lt;/prop&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.impl.UserDaoImpl"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"k1"</span> <span class="attr">value</span>=<span class="string">"v1"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"k2"</span> <span class="attr">value</span>=<span class="string">"v2"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"u1"</span> <span class="attr">value-ref</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"properties"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"k1"</span>&gt;</span>v1<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"k3"</span>&gt;</span>v2<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"k3"</span>&gt;</span>v3<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="5-6-配置文件模块化"><a href="#5-6-配置文件模块化" class="headerlink" title="5.6 配置文件模块化"></a>5.6 配置文件模块化</h4><p>实际开发中，Spring的配置内容非常多，这就导致Spring配置很繁杂且体积很大，所以，可以将部分配置拆解到其他配置文件中，也就是所谓的配置文件模块化。</p><ul><li><p>并列加载</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//并列加载</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testParallels</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    ApplicationContext app = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext_dao.xml"</span>,<span class="string">"applicationContext_service.xml"</span>);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>主从配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tree   </span><br><span class="line">.</span><br><span class="line">├── applicationContext-dao.xml</span><br><span class="line">├── applicationContext-service.xml</span><br><span class="line">└── applicationContext.xml</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- applicationContext.xml--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:applicationContext-dao.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">import</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:applicationContext-service.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">import</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>注意：</strong>不论是否同一个xml，都不得出现相同id，否则触发报错或覆盖问题</p><h4 id="5-7-知识小结"><a href="#5-7-知识小结" class="headerlink" title="5.7 知识小结"></a>5.7 知识小结</h4><ul><li><p>&lt;bean&gt;标签:创建对象并放到spring的IOC容器 </p><p>id属性:在容器中Bean实例的唯一标识，不允许重复 </p><p>class属性:要实例化的Bean的全限定名 </p><p>scope属性:Bean的作用范围，常用是Singleton(默认)和prototype</p></li><li><p>&lt;constructor-arg&gt;标签:属性注入 </p><p>name属性:属性名称</p><p>value属性:注入的简单属性值 </p><p>ref属性:注入的对象引用值</p></li><li><p>&lt;property&gt;标签:属性注入 </p><p>name属性:属性名称</p><p>value属性:注入的简单属性值 </p><p>ref属性:注入的对象引用值 </p></li></ul><p>&lt;list&gt;<br>&lt;set&gt;<br>&lt;array&gt;<br>&lt;map&gt;<br>&lt;props&gt;</p><p>&lt;import&gt;标签:导入其他的Spring的分文件</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong># spring01</strong></p><p><strong>## 一 Spring概述</strong></p><p><strong>### spring是一款 full-stack 轻量级开源框架</strong></p><p>- IOC</p><p>​    - 控制反转</p><p>- AOP</p><p>​    - 面向切面编程</p><p><strong>## 二 初识IOC</strong></p><p><strong>### 控制反转（Inverse Of Control）是一种设计思想。它的目的是指导我们设计出更加松耦合的程序。</strong></p><p><strong>### 自定义IOC容器</strong> </p><p>- BeanFactory</p><p><strong>## 三 Spring快速入门</strong></p><p><strong>### 1. 创建java项目，导入spring开发基本坐标</strong></p><p><strong>### 2. 编写Dao接口和实现类</strong></p><p><strong>### 3. 创建spring核心配置文件</strong></p><p><strong>### 4. 在spring配置文件中配置 UserDaoImpl</strong></p><p><strong>### 5. 使用spring相关API获得Bean实例</strong></p><p><strong>## 四 Spring相关API</strong></p><p><strong>### BeanFactory</strong></p><p>- 是 IOC 容器的核心接口，它定义了IOC的基本功能。</p><p><strong>### ApplicationContext</strong></p><p>- 代表应用上下文对象，可以获得spring中IOC容器的Bean对象。</p><p>- 常用实现类</p><p>​    - 1. ClassPathXmlApplicationContext </p><p>​    - 2. FileSystemXmlApplicationContext </p><p>​    - 3. AnnotationConfigApplicationContext</p><p>- 常用方法</p><p>​    - 1. Object getBean(String name);</p><p>​    - 2. &lt;T&gt; T getBean(Class&lt;T&gt; requiredType);</p><p>​    - 3. &lt;T&gt; T getBean(String name,Class&lt;T&gt; requiredType);</p><p><strong>## 五 Spring配置文件</strong></p><p><strong>### 5.1 Bean标签基本配置</strong></p><p>- id：Bean实例在Spring容器中的唯一标识</p><p>- class：Bean的全限定名</p><p><strong>### 5.2 Bean标签范围配置</strong></p><p>- scope</p><p>​    - singleton</p><p>​    - prototype</p><p><strong>### 5.3 Bean生命周期配置</strong></p><p>- init-method</p><p>- destroy-method</p><p><strong>### 5.4 Bean实例化三种方式</strong></p><ul><li><p>无参构造方法</p></li><li><p>工厂静态方法</p></li><li><p>工厂实例方法</p></li></ul><p><strong>### 5.5 Bean依赖注入概述</strong></p><ul><li>通过框架把持久层对象传入业务层，而不用我们自己去获取。</li></ul><p><strong>### 5.6 Bean依赖注入方式</strong></p><ul><li>构造方法</li></ul><ul><li>&lt;constructor-arg name=”userDao” ref=”userDao”/&gt;</li></ul><ul><li>set方法</li></ul><ul><li>&lt;property name=”userDao” ref=”userDao”/&gt;</li></ul><ul><li>p命名空间</li></ul><ul><li>&lt;bean id=”userService” class=”com.itheima.service.impl.UserServiceImpl”   p:userDao-ref=”userDao”/&gt;</li></ul><p><strong>### 5.7 Bean依赖注入的数据类型</strong></p><p>- 简单数据类型</p><p>- 引用数据类型</p><p>- 集合数据类型</p><p>​    - list</p><p>​    - set</p><p>​    - array</p><p>​    - map</p><p>​    - properties</p><p><strong>### 5.8 配置文件模块化</strong></p><p>- 主从配置</p><ul><li>&lt;import resource=”applicationContext-xxx.xml”/&gt;</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Spring介绍&lt;/li&gt;
&lt;li&gt;ioc介绍&lt;/li&gt;
&lt;li&gt;Spring快速入门&lt;/li&gt;
&lt;li&gt;相关API&lt;/li&gt;
&lt;li&gt;Spring配置文件&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（六十三）</title>
    <link href="http://yoursite.com/2020/05/27/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E4%B8%89%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/27/就业班学习笔记（六十三）/</id>
    <published>2020-05-27T14:58:52.000Z</published>
    <updated>2020-05-27T15:15:27.469Z</updated>
    
    <content type="html"><![CDATA[<ul><li>jdk</li><li>tomcat    </li><li>mysql</li><li>redis</li><li>nginx</li><li>反向代理+负载均衡</li><li><!-- mroe --></li></ul><h1 id="一-软件部署的设计"><a href="#一-软件部署的设计" class="headerlink" title="一 软件部署的设计"></a>一 软件部署的设计</h1><table><thead><tr><th>User</th><th></th><th>Server</th><th></th><th></th><th></th><th>环境</th></tr></thead><tbody><tr><td></td><td>➡</td><td></td><td></td><td>Tomcat1</td><td></td><td>JDK</td></tr><tr><td></td><td></td><td>Nginx</td><td>➡</td><td></td><td></td><td>MySQL</td></tr><tr><td></td><td></td><td>反向代理</td><td></td><td>Tomcat2</td><td></td><td>Redis</td></tr><tr><td></td><td></td><td>负载均衡</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td>端口：80</td><td></td><td></td><td></td><td></td></tr></tbody></table><h1 id="二-软件安装"><a href="#二-软件安装" class="headerlink" title="二 软件安装"></a>二 软件安装</h1><h2 id="2-1-软件安装介绍"><a href="#2-1-软件安装介绍" class="headerlink" title="2.1 软件安装介绍"></a>2.1 软件安装介绍</h2><h3 id="2-1-1-常见的安装方式"><a href="#2-1-1-常见的安装方式" class="headerlink" title="2.1.1 常见的安装方式"></a>2.1.1 常见的安装方式</h3><h4 id="1）-二进制发布包（绿色免安装）"><a href="#1）-二进制发布包（绿色免安装）" class="headerlink" title="1） 二进制发布包（绿色免安装）"></a>1） 二进制发布包（绿色免安装）</h4><p>软件已经针对具体平台编译打包发布开发人员拿到安装包之后只要解压，修改配置即可使用。</p><h4 id="2）RPM安装包"><a href="#2）RPM安装包" class="headerlink" title="2）RPM安装包"></a>2）RPM安装包</h4><p>​    软件已经按照redhat的包管理工具规范RPM进行打包发布，需要获取到相应的软件RPM发布包，然后用RPM命令进行安装。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>rpm命令安装</span><br><span class="line"><span class="code">语法:  rpm 参数  安装包</span></span><br><span class="line"><span class="code">参数:</span></span><br><span class="line"><span class="code">        -v 显示指令执行过程</span></span><br><span class="line"><span class="code">        -h 表示显示进度</span></span><br><span class="line"><span class="code">        -q 查询包是否已经安装</span></span><br><span class="line"><span class="code">        -a 查看所有安装的软件</span></span><br><span class="line"><span class="code">        -i 安装软件</span></span><br><span class="line"><span class="code">        -U 更新升级</span></span><br><span class="line"><span class="code">        -e 卸载软件</span></span><br><span class="line"><span class="code">        --nodeps 不验证软件的相互关联性 </span></span><br><span class="line"><span class="bullet">* </span>常用命令:</span><br><span class="line"><span class="code">    安装：rpm  -ivh  rpm文件</span></span><br><span class="line"><span class="code">    升级：rpm  -Uvh  rpm文件</span></span><br><span class="line"><span class="code">    卸载：rpm  -e --nodeps 软件名</span></span><br><span class="line"><span class="code">    查看所有安装的软件：rpm -qa | grep 具体名</span></span><br></pre></td></tr></table></figure><h4 id="3）YUM在线安装"><a href="#3）YUM在线安装" class="headerlink" title="3）YUM在线安装"></a>3）YUM在线安装</h4><p>​    软件已经以RPM规范打包，但发布在了网络上的一些服务器上，可用yum在线安装服务器上的rpm软件，并且会自动解决软件安装过程中的库依赖问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install 软件名</span><br><span class="line">yum localinstall rpm包  使用yum安装本地rpm包[此过程会自动解决依赖]</span><br></pre></td></tr></table></figure><h4 id="4）源码包"><a href="#4）源码包" class="headerlink" title="4）源码包"></a>4）源码包</h4><p>此种安装包软件以源码工程的形式发布,需要程序员自行编译安装</p><blockquote><p>它一般包含四个步骤:<br>        解压——&gt;配置——-&gt;编译——–&gt;安装</p></blockquote><h3 id="2-1-2-上传与下载工具"><a href="#2-1-2-上传与下载工具" class="headerlink" title="2.1.2 上传与下载工具"></a>2.1.2 上传与下载工具</h3><p><strong>FTP（File Transfer Protocol，文件传输协议）</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>sftp（实现了ssh加密）</span><br><span class="line"><span class="code">使用alt + p 组合键打开sftp窗口</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">get:  将远程主机（linux）中文件下载到本地主机（windows）</span></span><br><span class="line"><span class="code">        put:  将本地主机（windows）中文件上传到远程主机（linux）</span></span><br><span class="line"><span class="code">        quit: 断开FTP连接</span></span><br><span class="line"><span class="code">pwd:  查询linux主机所在目录</span></span><br><span class="line"><span class="code">        lpwd: 查询windows主机所在目录</span></span><br><span class="line"><span class="code">        ls:   查询连接到当前linux主机所在目录有哪些文件</span></span><br><span class="line"><span class="code">        lls:  查询当前本地上传目录有哪些文件</span></span><br><span class="line"><span class="code">        lcd:  改变本地上传目录的路径</span></span><br><span class="line"><span class="code">        cd:   改变远程上传目录      </span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>lrzsz</span><br><span class="line"><span class="code">        我们可以使用yum安装方式安装： yum install lrzsz</span></span><br><span class="line"><span class="code">    注意：必须有网络</span></span><br><span class="line"><span class="code">    rz 上传</span></span><br><span class="line"><span class="code">    sz 下载</span></span><br></pre></td></tr></table></figure><h2 id="2-2-JDK安装"><a href="#2-2-JDK安装" class="headerlink" title="2.2 JDK安装"></a>2.2 JDK安装</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>查看当前Linux系统是否已经安装java</span><br><span class="line"><span class="code">rpm -qa | grep -i java</span></span><br><span class="line"><span class="code">rpm -e --nodeps xxxxxx</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>解压已上传的JDK压缩包，并移动到/usr/local目录下</span><br><span class="line"><span class="code">tar -zxvf /root/jdk-8u201-linux-x64.tar.gz -C/usr/local/</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>测试jdk</span><br><span class="line"><span class="code">/usr/local/jdk1.8.0_201/bin/java -version</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4. </span>配置环境变量</span><br><span class="line"><span class="code">vim /etc/profile</span></span><br><span class="line"><span class="code">   G 跳转到最后一行</span></span><br><span class="line"><span class="code">   i 进入插入模式</span></span><br><span class="line"><span class="code">        export JAVA_HOME=/usr/local/jdk1.8.0_201</span></span><br><span class="line"><span class="code">        export PATH=$PATH:$JAVA_HOME/bin</span></span><br><span class="line"><span class="code">   esc 进入命令行模式</span></span><br><span class="line"><span class="code">   :wq! 保存</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5. </span>更新环境变量</span><br><span class="line"><span class="code">source /etc/profile</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6. </span>测试</span><br><span class="line"><span class="code">java -version</span></span><br></pre></td></tr></table></figure><h2 id="2-3-Tomcat安装"><a href="#2-3-Tomcat安装" class="headerlink" title="2.3 Tomcat安装"></a>2.3 Tomcat安装</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>解压已上传的Tomcat压缩包，到/user/local目录下</span><br><span class="line"><span class="code">tar -zxvf /root/apache-tomcat-8.5.27.tar.gz -C /root</span></span><br><span class="line"><span class="code">cp -r /root/apache-tomcat-8.5.27 /usr/local/tomcat1</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>启动tomcat</span><br><span class="line"><span class="code">/usr/local/tomcat1/bin/startup.sh </span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>动态查看日志</span><br><span class="line"><span class="code">tail -f /usr/local/tomcat1/logs/catalina.out </span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4. </span>防火墙放行端口</span><br><span class="line"><span class="code">firewall-cmd --zone=public --add-port=8080/tcp --permanent</span></span><br><span class="line"><span class="code">firewall-cmd --reload</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5. </span>关闭tomcat</span><br><span class="line"><span class="code">/usr/local/tomcat1/bin/shutdown.sh</span></span><br></pre></td></tr></table></figure><h2 id="2-4-Nginx安装"><a href="#2-4-Nginx安装" class="headerlink" title="2.4 Nginx安装"></a>2.4 Nginx安装</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>安装必须库</span><br><span class="line"><span class="code">yum  install  gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel -y</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>解压文件</span><br><span class="line"><span class="code">tar -zxvf /root/nginx-1.13.9.tar.gz  -C /root</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>配置</span><br><span class="line"><span class="code">cd /root/nginx-1.13.9</span></span><br><span class="line"><span class="code">./configure --prefix=/usr/local/nginx</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4. </span>编译</span><br><span class="line"><span class="code">make</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5. </span>安装</span><br><span class="line"><span class="code">make install</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6. </span>启动</span><br><span class="line"><span class="code">/usr/local/nginx/sbin/nginx</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">7. </span>防火墙放行端口</span><br><span class="line"><span class="code">firewall-cmd  --zone=public  --add-port=80/tcp  --permanent</span></span><br><span class="line"><span class="code">firewall-cmd --reload</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">8. </span>停止nginx</span><br><span class="line"><span class="code">/usr/local/nginx/sbin/nginx -s stop   #停止服务</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">9. </span>修改后，执行</span><br><span class="line"><span class="code">/usr/local/nginx/sbin/nginx -s reload  #重新加载配置</span></span><br></pre></td></tr></table></figure><h2 id="2-5-MySQL安装"><a href="#2-5-MySQL安装" class="headerlink" title="2.5 MySQL安装"></a>2.5 MySQL安装</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>查看CentOS是否自带的MySQL环境</span><br><span class="line"><span class="code">rpm -qa | grep -i mysql</span></span><br><span class="line"><span class="code">rpm -qa | grep -i mariadb</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>卸载mariadb</span><br><span class="line"><span class="code">rpm -e --nodeps mariadb-libs-5.5.56-2.el7.x86_64</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>解压文件</span><br><span class="line"><span class="code">mkdir -p /usr/local/mysql</span></span><br><span class="line"><span class="code">tar -zxvf /root/mysql-5.7.25-1.el7.x86_64.rpm-bundle.tar.gz -C/usr/local/mysql</span></span><br><span class="line"><span class="code">cd /usr/local/mysql/</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4. </span>安装libaio环境（已经存在不需要）</span><br><span class="line"><span class="code">yum install libaio</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5. </span>安装MySQL（按顺序）</span><br><span class="line"><span class="code">        rpm -ivh /usr/local/mysql/mysql-community-common-5.7.25-1.el7.x86_64.rpm</span></span><br><span class="line"><span class="code">        rpm -ivh /usr/local/mysql/mysql-community-libs-5.7.25-1.el7.x86_64.rpm</span></span><br><span class="line"><span class="code">        rpm -ivh /usr/local/mysql/mysql-community-devel-5.7.25-1.el7.x86_64.rpm</span></span><br><span class="line"><span class="code">        rpm -ivh /usr/local/mysql/mysql-community-libs-compat-5.7.25-1.el7.x86_64.rpm</span></span><br><span class="line"><span class="code">        rpm -ivh /usr/local/mysql/mysql-community-client-5.7.25-1.el7.x86_64.rpm</span></span><br><span class="line"><span class="code">        rpm -ivh /usr/local/mysql/mysql-community-server-5.7.25-1.el7.x86_64.rpm</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6. </span>启动mysql服务</span><br><span class="line"><span class="code">systemctl start mysqld</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">7. </span>查看随机生成的密码</span><br><span class="line"><span class="code">grep 'temporary password' /var/log/mysqld.log</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">8. </span>修改root用户密码</span><br><span class="line"><span class="code">        mysql -u root -p</span></span><br><span class="line"><span class="code">        Enter password:输入刚才查询到的随机密码</span></span><br><span class="line"><span class="code">        &gt;set global validate_password_length=4;</span></span><br><span class="line"><span class="code">        &gt;set global validate_password_policy=LOW; </span></span><br><span class="line"><span class="code">        &gt;set password = password('root');</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">9. </span>防火墙放行端口</span><br><span class="line"><span class="code">        firewall-cmd --zone=public --add-port=3306/tcp --permanent</span></span><br><span class="line"><span class="code">        firewall-cmd --reload</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">10. </span>开启mysql的远程登录权限</span><br><span class="line"><span class="code">        mysql -uroot -proot</span></span><br><span class="line"><span class="code">        &gt; CREATE USER 'root'@'%' IDENTIFIED BY 'root';</span></span><br><span class="line"><span class="code">        &gt; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' ;</span></span><br><span class="line"><span class="code">        &gt; FLUSH PRIVILEGES;</span></span><br><span class="line"><span class="code">        &gt; exit;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">11. </span>MySQL编码问题（默认安装完毕为 ISO-8859-1）</span><br><span class="line"><span class="bullet">1. </span>编辑/etc/my.cnf,在[mysqld]选项下添加字符集的设置</span><br><span class="line"><span class="code">vim /etc/my.cnf</span></span><br><span class="line"><span class="code">          [mysqld]</span></span><br><span class="line"><span class="code">        character-set-server=utf8</span></span><br><span class="line"><span class="bullet">2. </span>重新启动mysql的服务</span><br><span class="line"><span class="code">systemctl restart mysqld</span></span><br></pre></td></tr></table></figure><h2 id="2-6-Redis安装"><a href="#2-6-Redis安装" class="headerlink" title="2.6 Redis安装"></a>2.6 Redis安装</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>解压文件</span><br><span class="line"><span class="code">tar -zxvf /root/redis-3.0.7.tar.gz -C /root</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">2. </span>编译</span><br><span class="line"><span class="code">cd /root/redis-3.0.7</span></span><br><span class="line"><span class="code">make</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>安装</span><br><span class="line"><span class="code">make PREFIX=/usr/local/redis install</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4. </span>复制配置文件到/usr/local/redis/bin</span><br><span class="line"><span class="code">cp /root/redis-3.0.7/redis.conf /usr/local/redis/bin/</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5. </span>设置后台启动</span><br><span class="line"><span class="code">vim /usr/local/redis/bin/redis.conf</span></span><br><span class="line"><span class="code">daemonize yes</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6. </span>启动redis</span><br><span class="line"><span class="code">/usr/local/redis/bin/redis-server /usr/local/redis/bin/redis.conf</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">7. </span>防火墙放行端口</span><br><span class="line"><span class="code">firewall-cmd --zone=public --add-port=6379/tcp --permanent</span></span><br><span class="line"><span class="code">firewall-cmd --reload</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">8. </span>关闭redis</span><br><span class="line"><span class="code">/usr/local/redis/bin/redis-cli shutdown</span></span><br></pre></td></tr></table></figure><h1 id="三-项目部署"><a href="#三-项目部署" class="headerlink" title="三 项目部署"></a>三 项目部署</h1><h2 id="3-1-环境确认"><a href="#3-1-环境确认" class="headerlink" title="3.1 环境确认"></a>3.1 环境确认</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>语法</span><br><span class="line"><span class="code">netstat -antup</span></span><br><span class="line"><span class="code">netstat -antup | grep 端口号</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">* </span>参数解释</span><br><span class="line"><span class="code">-antup查看当前正在使用的udp和tcp协议的端口号和进程号</span></span><br></pre></td></tr></table></figure><h2 id="3-2-数据库迁移"><a href="#3-2-数据库迁移" class="headerlink" title="3.2 数据库迁移"></a>3.2 数据库迁移</h2><h4 id="1）将windows的数据库进行备份"><a href="#1）将windows的数据库进行备份" class="headerlink" title="1）将windows的数据库进行备份"></a>1）将windows的数据库进行备份</h4><h4 id="2）还原到linux的数据库中"><a href="#2）还原到linux的数据库中" class="headerlink" title="2）还原到linux的数据库中"></a>2）还原到linux的数据库中</h4><h2 id="3-3-Tomcat部署项目"><a href="#3-3-Tomcat部署项目" class="headerlink" title="3.3 Tomcat部署项目"></a>3.3 Tomcat部署项目</h2><h4 id="1）打开idea，对maven进行package打包"><a href="#1）打开idea，对maven进行package打包" class="headerlink" title="1）打开idea，对maven进行package打包"></a>1）打开idea，对maven进行package打包</h4><blockquote><p>注意：我们之前编写了日志，日志文件路径是D盘</p><p>我们需要吧日志代码注释掉，linux环境是没有D盘</p></blockquote><h4 id="2）进入target目录，对war包改名"><a href="#2）进入target目录，对war包改名" class="headerlink" title="2）进入target目录，对war包改名"></a>2）进入target目录，对war包改名</h4><h4 id="3）使用FTP上传到linux服务器"><a href="#3）使用FTP上传到linux服务器" class="headerlink" title="3）使用FTP上传到linux服务器"></a>3）使用FTP上传到linux服务器</h4><h4 id="4）部署到tomcat中的webapps目录"><a href="#4）部署到tomcat中的webapps目录" class="headerlink" title="4）部署到tomcat中的webapps目录"></a>4）部署到tomcat中的webapps目录</h4><h4 id="5）浏览器访问测试"><a href="#5）浏览器访问测试" class="headerlink" title="5）浏览器访问测试"></a>5）浏览器访问测试</h4><h2 id="3-4-nginx配置反向代理"><a href="#3-4-nginx配置反向代理" class="headerlink" title="3.4 nginx配置反向代理"></a>3.4 nginx配置反向代理</h2><p><strong>需要在修改 nginx.cnf 配置文件</strong></p><blockquote><p>修改完毕后，需要重写加载配置文件</p><p>/usr/local/nginx/sbin/nginx -s reload</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定你要代理的tomcat服务器列表</span></span><br><span class="line"><span class="attribute">upstream</span> tomcat_server &#123;</span><br><span class="line"><span class="attribute">server</span> localhost:<span class="number">8080</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span>   html;</span><br><span class="line">    <span class="comment"># 现在我们nginx不在是访问html路径，改成反向代理</span></span><br><span class="line">            <span class="attribute">proxy_pass</span>  http://tomcat_server; </span><br><span class="line">            <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>反向代理执行流程图</strong></p><table><thead><tr><th>User</th><th></th><th>Nginx</th><th></th><th></th><th></th><th>Tomcat</th></tr></thead><tbody><tr><td></td><td>➡</td><td>proxy_pass  <a href="http://tomcat_server">http://tomcat_server</a>;</td><td>➡</td><td>upstream tomcat_server</td><td>➡</td><td>tomcat_server</td></tr></tbody></table><h2 id="3-5-nginx配置负载均衡"><a href="#3-5-nginx配置负载均衡" class="headerlink" title="3.5 nginx配置负载均衡"></a>3.5 nginx配置负载均衡</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>将当前tomcat1停止运行</span><br><span class="line">  /usr/local/tomcat1/bin/shutdown.sh</span><br><span class="line">  </span><br><span class="line"><span class="bullet">2. </span>复制tomcat1为tomcat2</span><br><span class="line"><span class="code">cp -r /usr/local/tomcat1 /usr/local/tomcat2</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">3. </span>修改tomcat2的3个端口</span><br><span class="line"><span class="code">vim /usr/local/tomcat2/conf/server.xml</span></span><br><span class="line"><span class="code">    8005--&gt;8015   8009--&gt;8019  8080--&gt;8081</span></span><br><span class="line"><span class="code">    </span></span><br><span class="line"><span class="bullet">4. </span>放行8081端口</span><br><span class="line">  firewall-cmd --zone=public --add-port=8081/tcp --permanent</span><br><span class="line"><span class="code">firewall-cmd --reload  </span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">5. </span>启动两个tomcat</span><br><span class="line"><span class="code">/usr/local/tomcat1/bin/startup.sh</span></span><br><span class="line"><span class="code">/usr/local/tomcat2/bin/startup.sh</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">6. </span>在nginx中配置负载均衡策略</span><br><span class="line"><span class="code">       vim /usr/local/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="code">            upstream tomcat_server&#123;</span></span><br><span class="line"><span class="code">               ip_hash;</span></span><br><span class="line"><span class="code">               server localhost:8080 weight=2;</span></span><br><span class="line"><span class="code">               server localhost:8081 weight=1;</span></span><br><span class="line"><span class="code">            &#125;</span></span><br><span class="line"><span class="code">    </span></span><br><span class="line"><span class="bullet">7. </span>重新加载nginx配置</span><br><span class="line"><span class="code">/usr/local/nginx/sbin/nginx -s reload</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">8. </span>同时开启两个窗口,通过动态查看tomcat日志可见结果</span><br><span class="line"><span class="code">tail -f /usr/local/tomcat1/logs/catalina.out</span></span><br><span class="line"><span class="code">tail -f /usr/local/tomcat2/logs/catalina.out</span></span><br></pre></td></tr></table></figure><h2 id="3-6-我们可以欺骗自己的电脑"><a href="#3-6-我们可以欺骗自己的电脑" class="headerlink" title="3.6 我们可以欺骗自己的电脑"></a>3.6 我们可以欺骗自己的电脑</h2><blockquote><p>伪 DNS映射</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"192.168.1.200 travel.com"</span> &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;jdk&lt;/li&gt;
&lt;li&gt;tomcat    &lt;/li&gt;
&lt;li&gt;mysql&lt;/li&gt;
&lt;li&gt;redis&lt;/li&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;li&gt;反向代理+负载均衡&lt;/li&gt;
&lt;li&gt;&lt;!-- mroe --&gt;



&lt;/li&gt;
&lt;/ul&gt;
&lt;h1
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（六十二）</title>
    <link href="http://yoursite.com/2020/05/25/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/25/就业班学习笔记（六十二）/</id>
    <published>2020-05-25T01:01:19.000Z</published>
    <updated>2020-05-25T14:06:32.128Z</updated>
    
    <content type="html"><![CDATA[<ul><li>linux基础</li><li>Linux网络</li><li>Nginx</li></ul><a id="more"></a><h1 id="一-linux基础"><a href="#一-linux基础" class="headerlink" title="一.linux基础"></a>一.linux基础</h1><h4 id="1-1-远程连接工具使用"><a href="#1-1-远程连接工具使用" class="headerlink" title="1.1 远程连接工具使用"></a>1.1 远程连接工具使用</h4><p>在实际开发中，Linux服务器都在其他的地方，我们要通过windows客户端工具远程去连接Linux并操作 它，连接Linux的windows客户端工具有很多，企业中常用的有secureCRT、Putty、xshell、SSH Secure等。</p><h4 id="1-2-Linux目录结构"><a href="#1-2-Linux目录结构" class="headerlink" title="1.2 Linux目录结构"></a>1.2 Linux目录结构</h4><p>root目录:超级管理员所在的目录，用~表示<br>home目录:普通用户所在的目录<br>usr目录:安装用户文件所在的目录<br>etc目录:Linux系统管理和配置文件所在的目录</p><h4 id="1-3-文件夹-目录-操作命令"><a href="#1-3-文件夹-目录-操作命令" class="headerlink" title="1.3 文件夹(目录)操作命令"></a>1.3 文件夹(目录)操作命令</h4><ul><li><p>查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line"></span><br><span class="line">List directory contents.</span><br><span class="line"></span><br><span class="line">- List files one per line:</span><br><span class="line">    ls -1</span><br><span class="line"></span><br><span class="line">- List all files, including hidden files:</span><br><span class="line">    ls -a</span><br><span class="line"></span><br><span class="line">- Long format list (permissions, ownership, size and modification date) of all files:</span><br><span class="line">    ls -la</span><br><span class="line"></span><br><span class="line">- Long format list with size displayed using human readable units (KB, MB, GB):</span><br><span class="line">    ls -lh</span><br><span class="line"></span><br><span class="line">- Long format list sorted by size (descending):</span><br><span class="line">    ls -lS</span><br><span class="line"></span><br><span class="line">- Long format list of all files, sorted by modification date (oldest first):</span><br><span class="line">    ls -ltr</span><br></pre></td></tr></table></figure></li><li><p>跳转</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span></span><br><span class="line"></span><br><span class="line">Change the current working directory.</span><br><span class="line"></span><br><span class="line">- Go to the given directory:</span><br><span class="line">    <span class="built_in">cd</span> path/to/directory</span><br><span class="line"></span><br><span class="line">- Go to home directory of current user:</span><br><span class="line">    <span class="built_in">cd</span></span><br><span class="line"></span><br><span class="line">- Go up to the parent of the current directory:</span><br><span class="line">    <span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line">- Go to the previously chosen directory:</span><br><span class="line">    <span class="built_in">cd</span> -</span><br></pre></td></tr></table></figure></li><li><p>创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir</span><br><span class="line"></span><br><span class="line">Creates a directory.</span><br><span class="line"></span><br><span class="line">- Create a directory <span class="keyword">in</span> current directory or given path:</span><br><span class="line">    mkdir directory</span><br><span class="line"></span><br><span class="line">- Create directories recursively (useful <span class="keyword">for</span> creating nested <span class="built_in">dirs</span>):</span><br><span class="line">    mkdir -p path/to/directory</span><br></pre></td></tr></table></figure></li><li><p>搜索</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">find</span><br><span class="line"></span><br><span class="line">Find files or directories under the given directory tree, recursively.</span><br><span class="line"></span><br><span class="line">- Find files by extension:</span><br><span class="line">    find root_path -name <span class="string">'*.ext'</span></span><br><span class="line"></span><br><span class="line">- Find files by matching multiple patterns:</span><br><span class="line">    find root_path -name <span class="string">'*pattern_1*'</span> -or -name <span class="string">'*pattern_2*'</span></span><br><span class="line"></span><br><span class="line">- Find directories matching a given name, <span class="keyword">in</span> <span class="keyword">case</span>-insensitive mode:</span><br><span class="line">    find root_path -<span class="built_in">type</span> d -iname <span class="string">'*lib*'</span></span><br><span class="line"></span><br><span class="line">- Find files matching a path pattern:</span><br><span class="line">    find root_path -path <span class="string">'**/lib/**/*.ext'</span></span><br><span class="line"></span><br><span class="line">- Find files matching a given pattern, excluding specific paths:</span><br><span class="line">    find root_path -name <span class="string">'*.py'</span> -not -path <span class="string">'*/site-packages/*'</span></span><br><span class="line"></span><br><span class="line">- Find files matching a given size range:</span><br><span class="line">    find root_path -size +500k -size -10M</span><br><span class="line"></span><br><span class="line">- Run a <span class="built_in">command</span> <span class="keyword">for</span> each file (use `&#123;&#125;` within the <span class="built_in">command</span> to access the filename):</span><br><span class="line">    find root_path -name <span class="string">'*.ext'</span> -<span class="built_in">exec</span> wc -l &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">- Find files modified <span class="keyword">in</span> the last 7 days, and delete them:</span><br><span class="line">    find root_path -mtime -7 -delete</span><br></pre></td></tr></table></figure></li><li><p>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mv</span><br><span class="line"></span><br><span class="line">Move or rename files and directories.</span><br><span class="line"></span><br><span class="line">- Move files <span class="keyword">in</span> arbitrary locations:</span><br><span class="line">    mv <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Do not prompt <span class="keyword">for</span> confirmation before overwriting existing files:</span><br><span class="line">    mv -f <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Prompt <span class="keyword">for</span> confirmation before overwriting existing files, regardless of file permissions:</span><br><span class="line">    mv -i <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Do not overwrite existing files at the target:</span><br><span class="line">    mv -n <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Move files <span class="keyword">in</span> verbose mode, showing files after they are moved:</span><br><span class="line">    mv -v <span class="built_in">source</span> target</span><br></pre></td></tr></table></figure></li><li><p>剪切</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mv</span><br><span class="line"></span><br><span class="line">Move or rename files and directories.</span><br><span class="line"></span><br><span class="line">- Move files <span class="keyword">in</span> arbitrary locations:</span><br><span class="line">    mv <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Do not prompt <span class="keyword">for</span> confirmation before overwriting existing files:</span><br><span class="line">    mv -f <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Prompt <span class="keyword">for</span> confirmation before overwriting existing files, regardless of file permissions:</span><br><span class="line">    mv -i <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Do not overwrite existing files at the target:</span><br><span class="line">    mv -n <span class="built_in">source</span> target</span><br><span class="line"></span><br><span class="line">- Move files <span class="keyword">in</span> verbose mode, showing files after they are moved:</span><br><span class="line">    mv -v <span class="built_in">source</span> target</span><br></pre></td></tr></table></figure></li><li><p>复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cp</span><br><span class="line"></span><br><span class="line">Copy files and directories.</span><br><span class="line"></span><br><span class="line">- Copy a file to another location:</span><br><span class="line">    cp path/to/file.ext path/to/copy.ext</span><br><span class="line"></span><br><span class="line">- Copy a file into another directory, keeping the filename:</span><br><span class="line">    cp path/to/file.ext path/to/target_parent_directory</span><br><span class="line"></span><br><span class="line">- Recursively copy a directory<span class="string">'s contents to another location (if the destination exists, the directory is copied inside it):</span></span><br><span class="line"><span class="string">    cp -r path/to/directory path/to/copy</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Copy a directory recursively, in verbose mode (shows files as they are copied):</span></span><br><span class="line"><span class="string">    cp -vr path/to/directory path/to/copy</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Copy text files to another location, in interactive mode (prompts user before overwriting):</span></span><br><span class="line"><span class="string">    cp -i *.txt path/to/target_directory</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Dereference symbolic links before copying:</span></span><br><span class="line"><span class="string">    cp -L link path/to/copy</span></span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rmdir</span><br><span class="line"></span><br><span class="line">Removes a directory.</span><br><span class="line"></span><br><span class="line">- Remove directory, provided it is empty. Use `rm` to remove not empty directories:</span><br><span class="line">    rmdir path/to/directory</span><br><span class="line"></span><br><span class="line">- Remove directories recursively (useful <span class="keyword">for</span> nested <span class="built_in">dirs</span>):</span><br><span class="line">    rmdir -p path/to/directory</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-文件操作命令"><a href="#1-4-文件操作命令" class="headerlink" title="1.4 文件操作命令"></a>1.4 文件操作命令</h4><ul><li><p>创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">touch</span><br><span class="line"></span><br><span class="line">Change a file access and modification <span class="built_in">times</span> (atime, mtime).</span><br><span class="line"></span><br><span class="line">- Create a new empty file(s) or change the <span class="built_in">times</span> <span class="keyword">for</span> existing file(s) to current time:</span><br><span class="line">    touch filename</span><br><span class="line"></span><br><span class="line">- Set the <span class="built_in">times</span> on a file to a specific date and time:</span><br><span class="line">    touch -t YYYYMMDDHHMM.SS filename</span><br><span class="line"></span><br><span class="line">- Use the <span class="built_in">times</span> from a file to <span class="built_in">set</span> the <span class="built_in">times</span> on a second file:</span><br><span class="line">    touch -r filename filename2</span><br></pre></td></tr></table></figure></li><li><p>查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">cat</span><br><span class="line"></span><br><span class="line">Print and concatenate files.</span><br><span class="line"></span><br><span class="line">- Print the contents of a file to the standard output:</span><br><span class="line">    cat file</span><br><span class="line"></span><br><span class="line">- Concatenate several files into the target file:</span><br><span class="line">    cat file1 file2 &gt; target_file</span><br><span class="line"></span><br><span class="line">- Append several files into the target file:</span><br><span class="line">    cat file1 file2 &gt;&gt; target_file</span><br><span class="line"></span><br><span class="line">- Number all output lines:</span><br><span class="line">    cat -n file</span><br><span class="line"></span><br><span class="line">- Display non-printable and whitespace characters (with `M-` prefix <span class="keyword">if</span> non-ASCII):</span><br><span class="line">    cat -v -t -e file</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">tail</span><br><span class="line"></span><br><span class="line">Display the last part of a file.</span><br><span class="line"></span><br><span class="line">- Show last <span class="string">'num'</span> lines <span class="keyword">in</span> file:</span><br><span class="line">    tail -n num file</span><br><span class="line"></span><br><span class="line">- Show all file since line <span class="string">'num'</span>:</span><br><span class="line">    tail -n +num file</span><br><span class="line"></span><br><span class="line">- Show last <span class="string">'num'</span> bytes <span class="keyword">in</span> file:</span><br><span class="line">    tail -c num file</span><br><span class="line"></span><br><span class="line">- Keep reading file until `Ctrl + C`:</span><br><span class="line">    tail -f file</span><br><span class="line"></span><br><span class="line">- Keep reading file until `Ctrl + C`, even <span class="keyword">if</span> the file is rotated:</span><br><span class="line">    tail -F file</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">head</span><br><span class="line"></span><br><span class="line">Output the first part of files.</span><br><span class="line"></span><br><span class="line">- Output the first few lines of a file:</span><br><span class="line">    head -n count_of_lines filename</span><br><span class="line"></span><br><span class="line">- Output the first few bytes of a file:</span><br><span class="line">    head -c number_in_bytes filename</span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">rm</span><br><span class="line"></span><br><span class="line">Remove files or directories.</span><br><span class="line"></span><br><span class="line">- Remove files from arbitrary locations:</span><br><span class="line">    rm path/to/file path/to/another/file</span><br><span class="line"></span><br><span class="line">- Recursively remove a directory and all its subdirectories:</span><br><span class="line">    rm -r path/to/directory</span><br><span class="line"></span><br><span class="line">- Forcibly remove a directory, without prompting <span class="keyword">for</span> confirmation or showing error messages:</span><br><span class="line">    rm -rf path/to/directory</span><br><span class="line"></span><br><span class="line">- Interactively remove multiple files, with a prompt before every removal:</span><br><span class="line">    rm -i file(s)</span><br><span class="line"></span><br><span class="line">- Remove files <span class="keyword">in</span> verbose mode, printing a message <span class="keyword">for</span> each removed file:</span><br><span class="line">    rm -v path/to/directory/*</span><br></pre></td></tr></table></figure></li><li><p>编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">vim</span><br><span class="line"></span><br><span class="line">Vim (Vi IMproved), a <span class="built_in">command</span>-line text editor, provides several modes <span class="keyword">for</span> different kinds of text manipulation.</span><br><span class="line">Pressing `i` enters edit mode. `&lt;Esc&gt;` goes back to normal mode, <span class="built_in">which</span> doesn<span class="string">'t allow regular text insertion.</span></span><br><span class="line"><span class="string">More information: &lt;https://www.vim.org&gt;.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Open a file:</span></span><br><span class="line"><span class="string">    vim path/to/file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- View Vim'</span>s <span class="built_in">help</span> manual:</span><br><span class="line">    :<span class="built_in">help</span>&lt;Enter&gt;</span><br><span class="line"></span><br><span class="line">- Save a file:</span><br><span class="line">    :write&lt;Enter&gt;</span><br><span class="line"></span><br><span class="line">- Quit without saving:</span><br><span class="line">    :quit!&lt;Enter&gt;</span><br><span class="line"></span><br><span class="line">- Open a file at a specified line number:</span><br><span class="line">    vim +line_number path/to/file</span><br><span class="line"></span><br><span class="line">- Undo the last operation:</span><br><span class="line">    u</span><br><span class="line"></span><br><span class="line">- Search <span class="keyword">for</span> a pattern <span class="keyword">in</span> the file (press `n`/`N` to go to next/previous match):</span><br><span class="line">    /search_pattern&lt;Enter&gt;</span><br><span class="line"></span><br><span class="line">- Perform a regex substitution <span class="keyword">in</span> the whole file:</span><br><span class="line">    :%s/pattern/replacement/g&lt;Enter&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-5-文件压缩命令"><a href="#1-5-文件压缩命令" class="headerlink" title="1.5 文件压缩命令"></a>1.5 文件压缩命令</h4><ul><li><p>将文件打成压缩包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">tar</span><br><span class="line"></span><br><span class="line">Archiving utility.</span><br><span class="line">Often combined with a compression method, such as gzip or bzip.</span><br><span class="line">More information: &lt;https://www.gnu.org/software/tar&gt;.</span><br><span class="line"></span><br><span class="line">- Create an archive from files:</span><br><span class="line">    tar cf target.tar file1 file2 file3</span><br><span class="line"></span><br><span class="line">- Create a gzipped archive:</span><br><span class="line">    tar czf target.tar.gz file1 file2 file3</span><br><span class="line"></span><br><span class="line">- Create a gzipped archive from a directory using relative paths:</span><br><span class="line">    tar czf target.tar.gz -C path/to/directory .</span><br><span class="line"></span><br><span class="line">- Extract a (compressed) archive into the current directory:</span><br><span class="line">    tar xf source.tar[.gz|.bz2|.xz]</span><br><span class="line"></span><br><span class="line">- Extract an archive into a target directory:</span><br><span class="line">    tar xf source.tar -C directory</span><br><span class="line"></span><br><span class="line">- Create a compressed archive, using archive suffix to determine the compression program:</span><br><span class="line">    tar caf target.tar.xz file1 file2 file3</span><br><span class="line"></span><br><span class="line">- List the contents of a tar file:</span><br><span class="line">    tar tvf source.tar</span><br><span class="line"></span><br><span class="line">- Extract files matching a pattern:</span><br><span class="line">    tar xf source.tar --wildcards <span class="string">"*.html"</span></span><br><span class="line"></span><br><span class="line">- Extract a specific file without preserving the folder structure:</span><br><span class="line">    tar xf source.tar source.tar/path/to/extract --strip-components=depth_to_strip</span><br></pre></td></tr></table></figure></li><li><p>解压缩包获得文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">tar</span><br><span class="line"></span><br><span class="line">Archiving utility.</span><br><span class="line">Often combined with a compression method, such as gzip or bzip.</span><br><span class="line">More information: &lt;https://www.gnu.org/software/tar&gt;.</span><br><span class="line"></span><br><span class="line">- Create an archive from files:</span><br><span class="line">    tar cf target.tar file1 file2 file3</span><br><span class="line"></span><br><span class="line">- Create a gzipped archive:</span><br><span class="line">    tar czf target.tar.gz file1 file2 file3</span><br><span class="line"></span><br><span class="line">- Create a gzipped archive from a directory using relative paths:</span><br><span class="line">    tar czf target.tar.gz -C path/to/directory .</span><br><span class="line"></span><br><span class="line">- Extract a (compressed) archive into the current directory:</span><br><span class="line">    tar xf source.tar[.gz|.bz2|.xz]</span><br><span class="line"></span><br><span class="line">- Extract an archive into a target directory:</span><br><span class="line">    tar xf source.tar -C directory</span><br><span class="line"></span><br><span class="line">- Create a compressed archive, using archive suffix to determine the compression program:</span><br><span class="line">    tar caf target.tar.xz file1 file2 file3</span><br><span class="line"></span><br><span class="line">- List the contents of a tar file:</span><br><span class="line">    tar tvf source.tar</span><br><span class="line"></span><br><span class="line">- Extract files matching a pattern:</span><br><span class="line">    tar xf source.tar --wildcards <span class="string">"*.html"</span></span><br><span class="line"></span><br><span class="line">- Extract a specific file without preserving the folder structure:</span><br><span class="line">    tar xf source.tar source.tar/path/to/extract --strip-components=depth_to_strip</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-6-文件权限命令"><a href="#1-6-文件权限命令" class="headerlink" title="1.6 文件权限命令"></a>1.6 文件权限命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">chmod</span><br><span class="line"></span><br><span class="line">Change the access permissions of a file or directory.</span><br><span class="line"></span><br><span class="line">- Give the [u]ser who owns a file the right to e[x]ecute it:</span><br><span class="line">    chmod u+x file</span><br><span class="line"></span><br><span class="line">- Give the [u]ser rights to [r]ead and [w]rite to a file/directory:</span><br><span class="line">    chmod u+rw file_or_directory</span><br><span class="line"></span><br><span class="line">- Remove e[x]ecutable rights from the [g]roup:</span><br><span class="line">    chmod g-x file</span><br><span class="line"></span><br><span class="line">- Give [a]ll users rights to [r]ead and e[x]ecute:</span><br><span class="line">    chmod a+rx file</span><br><span class="line"></span><br><span class="line">- Give [o]thers (not <span class="keyword">in</span> the file owner<span class="string">'s group) the same rights as the [g]roup:</span></span><br><span class="line"><span class="string">    chmod o=g file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Remove all rights from [o]thers:</span></span><br><span class="line"><span class="string">    chmod o= file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- Change permissions recursively giving [g]roup and [o]thers the abililty to [w]rite:</span></span><br><span class="line"><span class="string">    chmod -R g+w,o+w directory</span></span><br></pre></td></tr></table></figure><h4 id="1-7-其他命令"><a href="#1-7-其他命令" class="headerlink" title="1.7 其他命令"></a>1.7 其他命令</h4><ul><li><p>显示工作目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">Print name of current/working directory.</span><br><span class="line"></span><br><span class="line">- Print the current directory:</span><br><span class="line">    <span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line">- Print the current directory, and resolve all symlinks (i.e. show the <span class="string">"physical"</span> path):</span><br><span class="line">    <span class="built_in">pwd</span> -P</span><br></pre></td></tr></table></figure></li><li><p>查看进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ps</span><br><span class="line"></span><br><span class="line">Information about running processes.</span><br><span class="line"></span><br><span class="line">- List all running processes:</span><br><span class="line">    ps aux</span><br><span class="line"></span><br><span class="line">- List all running processes including the full <span class="built_in">command</span> string:</span><br><span class="line">    ps auxww</span><br><span class="line"></span><br><span class="line">- Search <span class="keyword">for</span> a process that matches a string:</span><br><span class="line">    ps aux | grep string</span><br><span class="line"></span><br><span class="line">- List all processes of the current user <span class="keyword">in</span> extra full format:</span><br><span class="line">    ps --user $(id -u) -F</span><br><span class="line"></span><br><span class="line">- List all processes of the current user as a tree:</span><br><span class="line">    ps --user $(id -u) f</span><br><span class="line"></span><br><span class="line">- Get the parent pid of a process:</span><br><span class="line">    ps -o ppid= -p pid</span><br></pre></td></tr></table></figure></li><li><p>杀死进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span></span><br><span class="line"></span><br><span class="line">Sends a signal to a process, usually related to stopping the process.</span><br><span class="line">All signals except <span class="keyword">for</span> SIGKILL and SIGSTOP can be intercepted by the process to perform a clean <span class="built_in">exit</span>.</span><br><span class="line"></span><br><span class="line">- Terminate a program using the default SIGTERM (terminate) signal:</span><br><span class="line">    <span class="built_in">kill</span> process_id</span><br><span class="line"></span><br><span class="line">- List available signal names (to be used without the `SIG` prefix):</span><br><span class="line">    <span class="built_in">kill</span> -l</span><br><span class="line"></span><br><span class="line">- Terminate a background job:</span><br><span class="line">    <span class="built_in">kill</span> %job_id</span><br><span class="line"></span><br><span class="line">- Terminate a program using the SIGHUP (hang up) signal. Many daemons will reload instead of terminating:</span><br><span class="line">    <span class="built_in">kill</span> -1|HUP process_id</span><br><span class="line"></span><br><span class="line">- Terminate a program using the SIGINT (interrupt) signal. This is typically initiated by the user pressing `Ctrl + C`:</span><br><span class="line">    <span class="built_in">kill</span> -2|INT process_id</span><br><span class="line"></span><br><span class="line">- Signal the operating system to immediately terminate a program (<span class="built_in">which</span> gets no chance to capture the signal):</span><br><span class="line">    <span class="built_in">kill</span> -9|KILL process_id</span><br><span class="line"></span><br><span class="line">- Signal the operating system to pause a program until a SIGCONT (<span class="string">"continue"</span>) signal is received:</span><br><span class="line">    <span class="built_in">kill</span> -17|STOP process_id</span><br><span class="line"></span><br><span class="line">- Send a `SIGUSR1` signal to all processes with the given GID (group id):</span><br><span class="line">    <span class="built_in">kill</span> -SIGUSR1 -group_id</span><br></pre></td></tr></table></figure></li><li><p>搜索</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">grep</span><br><span class="line"></span><br><span class="line">Matches patterns <span class="keyword">in</span> input text.</span><br><span class="line">Supports simple patterns and regular expressions.</span><br><span class="line"></span><br><span class="line">- Search <span class="keyword">for</span> an exact string:</span><br><span class="line">    grep search_string path/to/file</span><br><span class="line"></span><br><span class="line">- Search <span class="keyword">in</span> <span class="keyword">case</span>-insensitive mode:</span><br><span class="line">    grep -i search_string path/to/file</span><br><span class="line"></span><br><span class="line">- Search recursively (ignoring non-text files) <span class="keyword">in</span> current directory <span class="keyword">for</span> an exact string:</span><br><span class="line">    grep -RI search_string .</span><br><span class="line"></span><br><span class="line">- Use extended regular expressions (supporting `?`, `+`, `&#123;&#125;`, `()` and `|`):</span><br><span class="line">    grep -E ^regex$ path/to/file</span><br><span class="line"></span><br><span class="line">- Print 3 lines of [C]ontext around, [B]efore, or [A]fter each match:</span><br><span class="line">    grep -C|B|A 3 search_string path/to/file</span><br><span class="line"></span><br><span class="line">- Print file name with the corresponding line number <span class="keyword">for</span> each match:</span><br><span class="line">    grep -Hn search_string path/to/file</span><br><span class="line"></span><br><span class="line">- Use the standard input instead of a file:</span><br><span class="line">    cat path/to/file | grep search_string</span><br><span class="line"></span><br><span class="line">- Invert match <span class="keyword">for</span> excluding specific strings:</span><br><span class="line">    grep -v search_string</span><br></pre></td></tr></table></figure></li><li><p>管道</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|      ##管道符</span><br><span class="line">管道只允许正确输出通过</span><br><span class="line"> tee         ####复制一份输出</span><br><span class="line">2&gt;&amp;1 |       ####转换错误输出为正确再通过管道</span><br></pre></td></tr></table></figure></li><li><p>关机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poweroff</span><br></pre></td></tr></table></figure></li><li><p>重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br><span class="line"></span><br><span class="line">Reboot the system.</span><br><span class="line"></span><br><span class="line">- Reboot immediately:</span><br><span class="line">    sudo reboot</span><br><span class="line"></span><br><span class="line">- Reboot immediately without gracefully shutting down:</span><br><span class="line">    sudo reboot -q</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-Linux网络"><a href="#二-Linux网络" class="headerlink" title="二.Linux网络"></a>二.Linux网络</h1><h4 id="2-1-网络服务"><a href="#2-1-网络服务" class="headerlink" title="2.1 网络服务"></a>2.1 网络服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br><span class="line"></span><br><span class="line">Network Interface Configurator.</span><br><span class="line"></span><br><span class="line">- View network settings of an ethernet adapter:</span><br><span class="line">    ifconfig eth0</span><br><span class="line"></span><br><span class="line">- Display details of all interfaces, including disabled interfaces:</span><br><span class="line">    ifconfig -a</span><br><span class="line"></span><br><span class="line">- Disable eth0 interface:</span><br><span class="line">    ifconfig eth0 down</span><br><span class="line"></span><br><span class="line">- Enable eth0 interface:</span><br><span class="line">    ifconfig eth0 up</span><br><span class="line"></span><br><span class="line">- Assign IP address to eth0 interface:</span><br><span class="line">    ifconfig eth0 ip_address</span><br><span class="line">    </span><br><span class="line">ip addr :CentOS7版本</span><br><span class="line">修改网卡ip</span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><table><thead><tr><th>概要信息</th><th></th></tr></thead><tbody><tr><td>DEVICE=ens33</td><td>网卡名称</td></tr><tr><td>TYPE=Ethernet</td><td>网卡类型 以太网</td></tr><tr><td>ONBOOT=yes</td><td>是否开机就使用此网卡</td></tr><tr><td>BOOTPROTO=dhcp</td><td>启动网卡时指定获取IP地址的方式</td></tr><tr><td>IPADDR=</td><td>ip地址</td></tr><tr><td>GATEWAY=</td><td>网关</td></tr><tr><td>NETMASK=255.255.255.0</td><td>子网掩码</td></tr><tr><td>DNS1=</td><td>DNS服务器</td></tr></tbody></table><table><thead><tr><th>重启网卡服务</th><th></th></tr></thead><tbody><tr><td>systemctl status network</td><td>查看指定服务的状态</td></tr><tr><td>systemctl stop network</td><td>停止指定服务</td></tr><tr><td>systemctl start network</td><td>启动指定服务</td></tr><tr><td>systemctl restart network</td><td>重启指定服务</td></tr></tbody></table><h4 id="2-2-防火墙服务"><a href="#2-2-防火墙服务" class="headerlink" title="2.2 防火墙服务"></a>2.2 防火墙服务</h4><h5 id="2-2-1-防火墙设置"><a href="#2-2-1-防火墙设置" class="headerlink" title="2.2.1 防火墙设置"></a>2.2.1 防火墙设置</h5><table><thead><tr><th>防火墙设置</th><th></th></tr></thead><tbody><tr><td>开启防火墙</td><td>systemctl start firewalld</td></tr><tr><td>重启防火墙</td><td>systemctl restart firewalld</td></tr><tr><td>关闭防火墙</td><td>systemctl stop firewalld</td></tr><tr><td>设置开机启动</td><td>systemctl enable firewalld</td></tr><tr><td>停止并关闭开机启动</td><td>systemctl disable firewalld</td></tr><tr><td>查看防火墙状态</td><td>systemctl status firewalld 或者 firewall-cmd –state</td></tr><tr><td>查看防火墙开机时是否启动</td><td>systemctl list-unit-files | grep firewalld</td></tr></tbody></table><h5 id="2-2-2-端口设置"><a href="#2-2-2-端口设置" class="headerlink" title="2.2.2 端口设置"></a>2.2.2 端口设置</h5><table><thead><tr><th>端口设置</th><th></th></tr></thead><tbody><tr><td>添加</td><td>firewall-cmd –zone=public –add-port=80/tcp –permanent</td></tr><tr><td>更新防火墙规则</td><td>firewall-cmd –reload</td></tr><tr><td>查看</td><td>firewall-cmd –zone=public –query-port=80/tcp<br>firewall-cmd –zone=public –list-ports</td></tr><tr><td>删除</td><td>firewall-cmd –zone=public –remove-port=80/tcp –permanent</td></tr><tr><td>常用端口</td><td>8080 tomcat<br>80 http协议<br>443 https协议<br/>22 ssh远程连接<br/>3306 mysql<br/>6379 redis</td></tr></tbody></table><h1 id="三-Nginx"><a href="#三-Nginx" class="headerlink" title="三.Nginx"></a>三.Nginx</h1><h4 id="3-1-介绍"><a href="#3-1-介绍" class="headerlink" title="3.1 介绍"></a>3.1 介绍</h4><p>Nginx是一款轻量级的 Web 服务器,由俄罗斯的程序设计师伊戈尔·西索夫所开发。 Nginx性能非常优秀, 官方测试能够支撑5万并发链接，并且 cpu、内存等资源消耗却非常低，运行非常稳定。</p><p>Nginx的功能有很多，我们主要使用它来做静态资源服务器、负载均衡服务器和反向代理服务器。</p><h4 id="3-2-应用场景"><a href="#3-2-应用场景" class="headerlink" title="3.2 应用场景"></a>3.2 应用场景</h4><h5 id="3-2-1-静态资源服务器"><a href="#3-2-1-静态资源服务器" class="headerlink" title="3.2.1 静态资源服务器"></a>3.2.1 静态资源服务器</h5><p>部署网站的静态资源(html、css、js),可与Tomcat等实现动静分离</p><h4 id="3-2-2-反向代理服务器"><a href="#3-2-2-反向代理服务器" class="headerlink" title="3.2.2 反向代理服务器"></a>3.2.2 反向代理服务器</h4><ul><li><p>代理</p><p>给某个对象提供一个代理对象，并由代理对象控制原对象的引用</p></li><li><p>正向代理</p><p>对客户端进行代理(例如VPN)</p></li><li><p>反向代理</p><p>对服务端进行代理</p><p>反向代理，就是对服务端进行代理，作为客户端,只需要将请求发送到反向代理服务器，由反向代理服务 器去选择目标服务器获取数据后，再响应给客户端，此时反向代理服务器和目标服务器对外就是一个服 务器，暴露的是代理服务器地址，隐藏了真实服务器IP地址。</p></li></ul><h5 id="3-2-3-负载均衡服务器"><a href="#3-2-3-负载均衡服务器" class="headerlink" title="3.2.3 负载均衡服务器"></a>3.2.3 负载均衡服务器</h5><p>负载均衡 <em>Load Balance</em> 意思就是将一份负载分摊到多个操作单元上进行执行</p><h4 id="3-3-配置文件介绍-nginx-1-13-9-conf-nginx-conf"><a href="#3-3-配置文件介绍-nginx-1-13-9-conf-nginx-conf" class="headerlink" title="3.3 配置文件介绍(nginx-1.13.9/conf/nginx.conf)"></a>3.3 配置文件介绍(nginx-1.13.9/conf/nginx.conf)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80; <span class="comment">#port</span></span><br><span class="line">    server_name  localhost; <span class="comment">#Server</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   html; <span class="comment">#Static resource directory</span></span><br><span class="line">        index  index.html index.htm; <span class="comment">#Default visit page</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="3-5-nginx与tomcat区别"><a href="#3-5-nginx与tomcat区别" class="headerlink" title="3.5 nginx与tomcat区别"></a>3.5 nginx与tomcat区别</h5><ul><li><p>存放的文件(资源)形式<br> Nginx是http服务器,只能解析静态文件 </p><p>Tomcat是web中间件(本质上是一个servlet),能解析jsp和静态文件</p></li><li><p>用途 </p><p>nginx可以作为反向代理服务器,负责均衡服务器,静态资源存放服务器 </p><p>tomcat能作为jsp容器使用,静态资源存放服务器</p></li><li><p>性能 </p><p>nginx支持5W+并发,tomcat的并发只能在200-400之间</p></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong># linux基础</strong></p><p><strong>## Linux基本命令</strong></p><p><strong>### 目录结构</strong></p><p>- root</p><p>​    - 超级管理员所在的目录</p><p>- home</p><p>​    - 普通用户所在的目录</p><p>- usr</p><p>​    - 安装用户文件所在的目录</p><p>- etc</p><p>​    - Linux系统管理和配置文件所在的目录</p><p><strong>### 目录操作</strong></p><p>- 查看</p><p>​    - ll</p><p>​    - ls</p><p>- 切换</p><p>​    - cd</p><p>​        - 绝对路径</p><p>​        - 相对路径</p><p>- 创建</p><p>​    - mkdir -p</p><p>- 修改/剪切</p><p>​    - mv</p><p>- 复制</p><p>​    - cp -r</p><p>- 删除</p><p>​    - rmdir -p</p><p><strong>### 文件操作</strong></p><p>- 创建</p><p>​    - touch</p><p>- 查看</p><p>​    - cat/more/less/head/tail</p><p>- 删除</p><p>​    - rm -rf</p><p>- 编辑</p><p>​    - vim</p><p>​        - 插入模式</p><p>​            - i</p><p>​        - 命令行模式 </p><p>​            - esc</p><p>​        - 底行模式</p><p>​            - :</p><p>​                - wq!</p><p>​                - q!</p><p><strong>### 压缩命令</strong></p><p>- 打包</p><p>​    - tar -zcvf</p><p>​        - xxxx.tar.gz</p><p>- 解压缩</p><p>​    - tar -zxvf</p><p>​        - xxxx.tar.gz</p><p><strong>### 文件权限</strong></p><p>- chmod -R 777</p><p><strong>### 其他命令</strong></p><p>- 查看进程</p><p>​    - ps -ef</p><p>- 杀死进程</p><p>​    - kill -9 PID</p><p>- 文本搜索</p><p>​    - grep -in</p><p>- 管道</p><p>​    - 一个命令的输出作为另一个命令的输入</p><p><strong>## Linux网络</strong></p><p><strong>### 网络</strong></p><p>- 查看ip</p><p>​    - ifconfig</p><p>​    - ip addr</p><p><strong>### 防火墙</strong></p><p>- 防火墙设置</p><p>​    - 关闭</p><p>​        - systemctl stop firewalld</p><p>​    - 关闭开机自启动</p><p>​        - systemctl disable firewalld</p><p>- 端口设置</p><p>​    - 放行端口</p><p>​        - firewall-cmd –zone=public –add-port=80/tcp –permanent</p><p>​    - 更新规则</p><p>​        - firewall-cmd –reload</p><p><strong>## Nginx</strong></p><p><strong>### 由战斗民族开发的一款高性能的 http 服务器/反向代理服务器</strong></p><p>- http服务器</p><p>- 反向代理（负载均衡）</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;linux基础&lt;/li&gt;
&lt;li&gt;Linux网络&lt;/li&gt;
&lt;li&gt;Nginx&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（六十一）</title>
    <link href="http://yoursite.com/2020/05/24/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/24/就业班学习笔记（六十一）/</id>
    <published>2020-05-24T01:02:20.000Z</published>
    <updated>2020-05-24T16:16:40.110Z</updated>
    
    <content type="html"><![CDATA[<ul><li>二维码</li><li>微信开发平台——支付</li><li>统一下单——生成预交易链接</li><li>支付结果通知</li><li>支付状态查询</li></ul><a id="more"></a><h1 id="一-二维码"><a href="#一-二维码" class="headerlink" title="一.二维码"></a>一.二维码</h1><h4 id="1-1-什么是二维码"><a href="#1-1-什么是二维码" class="headerlink" title="1.1 什么是二维码"></a>1.1 什么是二维码</h4><p>二维码又称QR Code，QR全称Quick Response，是一个近几年来移动设备上超流行的一种编码方式， 它比传统的Bar Code条形码能存更多的信息，也能表示更多的数据类型。</p><h4 id="1-2-二维码优势"><a href="#1-2-二维码优势" class="headerlink" title="1.2 二维码优势"></a>1.2 二维码优势</h4><ul><li><p>信息容量大, 可以容纳多达1850个大写字母或2710个数字或500多个汉字 </p></li><li><p>应用范围广, 支持文字,声音,图片,指纹等等</p></li><li><p>容错能力强, 即使图片出现部分破损也能使用</p></li><li><p>成本低, 容易制作</p></li></ul><h4 id="1-3-二维码容错级别"><a href="#1-3-二维码容错级别" class="headerlink" title="1.3 二维码容错级别"></a>1.3 二维码容错级别</h4><ul><li>L级(低) 7%的码字可以被恢复。 </li><li>M级(中) 15%的码字可以被恢复。 </li><li>Q级(四分)25%的码字可以被恢复。 </li><li>H级(高)30% 的码字可以被恢复。</li></ul><h4 id="1-4-二维码生成插件QR-Code"><a href="#1-4-二维码生成插件QR-Code" class="headerlink" title="1.4 二维码生成插件QR Code"></a>1.4 二维码生成插件QR Code</h4><p>就与jquery开发的一个插件，QRCode是一款基于HTML5 Canvas的纯JS二维码生成插件 下载地址:<a href="https://github.com/davidshimjs/qrcodejs">https://github.com/davidshimjs/qrcodejs</a></p><p>QRCode.js二维码插件的可用配置参数如下:</p><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>text</td><td>String</td><td>“<a href="https://www.baidu.com&quot;">https://www.baidu.com&quot;</a></td><td>需要编码为二维码的值</td></tr><tr><td>width</td><td>Number</td><td>256</td><td>二维码的宽度，单位像素。</td></tr><tr><td>height</td><td>Number</td><td>256</td><td>二维码的高度，单位像素。</td></tr><tr><td>colorLight</td><td>String</td><td>“white”</td><td>二维码的背景颜色。</td></tr><tr><td>colorDark</td><td>String</td><td>“black”</td><td>二维码的前景颜色。</td></tr><tr><td>correctLevel</td><td>String</td><td>QRCode.CorrectLevel.L</td><td>二维码的误差校正级别(L, M, Q, H)。</td></tr></tbody></table><ul><li><p>快速入门</p><ul><li><p>从资料中将js文件复制到项目中</p></li><li><p>QRCodeTest.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../../src/main/webapp/js/jquery-3.3.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../../src/main/webapp/js/qrcode.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"qrcode"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        // 参数一 div的id ， 参数二 将xxxx生成二维码</span><br><span class="line">        // let qrCode = new QRCode('qrCode','https://www.baidu.com');</span><br><span class="line">    </span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> qrcode = <span class="keyword">new</span> QRCode(<span class="built_in">document</span>.getElementById(<span class="string">"qrcode"</span>), &#123;</span></span><br><span class="line"><span class="actionscript">            text: <span class="string">"http://jindo.dev.naver.com/collie"</span>,</span></span><br><span class="line">            width: 128,</span><br><span class="line">            height: 128,</span><br><span class="line"><span class="actionscript">            colorDark : <span class="string">"#000000"</span>,</span></span><br><span class="line"><span class="actionscript">            colorLight : <span class="string">"#ffffff"</span>,</span></span><br><span class="line">            correctLevel : QRCode.CorrectLevel.H</span><br><span class="line">          &#125;);</span><br><span class="line">      <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="二-微信扫描支付简介"><a href="#二-微信扫描支付简介" class="headerlink" title="二.微信扫描支付简介"></a>二.微信扫描支付简介</h1><h4 id="2-1-微信扫码支付申请"><a href="#2-1-微信扫码支付申请" class="headerlink" title="2.1 微信扫码支付申请"></a>2.1 微信扫码支付申请</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">微信扫码支付是商户系统按微信支付协议生成支付二维码，用户再用微信“扫一扫”完成支付的模式。</span><br><span class="line">该模式适用于PC网站支付、实体店单品或订单支付、媒体广告支付等场景。</span><br><span class="line"></span><br><span class="line">申请步骤:</span><br><span class="line"></span><br><span class="line">- 第一步:注册公众号(类型须为:服务号)</span><br><span class="line"></span><br><span class="line">请根据营业执照类型选择以下主体注册:个体工商户| 企业&#x2F;公司| 政府| 媒体| 其他类型。</span><br><span class="line"></span><br><span class="line">- 第二步:认证公众号</span><br><span class="line"></span><br><span class="line">公众号认证后才可申请微信支付，认证费:300元&#x2F;次。</span><br><span class="line"></span><br><span class="line">- 第三步:提交资料申请微信支付</span><br><span class="line"></span><br><span class="line">登录公众平台，点击左侧菜单【微信支付】，开始填写资料等待审核，审核时间为1-5个工作日内。</span><br><span class="line"></span><br><span class="line">- 第四步:开户成功，登录商户平台进行验证</span><br><span class="line"></span><br><span class="line">资料审核通过后，请登录联系人邮箱查收商户号和密码，并登录商户平台填写财付通备付金打的小额资 金数额，完成账户验证。</span><br><span class="line"></span><br><span class="line">- 第五步:在线签署协议</span><br><span class="line"></span><br><span class="line">本协议为线上电子协议，签署后方可进行交易及资金结算，签署完立即生效。</span><br></pre></td></tr></table></figure><h4 id="2-2-开发文档"><a href="#2-2-开发文档" class="headerlink" title="2.2 开发文档"></a>2.2 开发文档</h4><ul><li><p>在线微信支付开发文档:</p><p><a href="https://pay.weixin.qq.com/wiki/doc/api/index.html">https://pay.weixin.qq.com/wiki/doc/api/index.html</a></p><img src="https://pay.weixin.qq.com/wiki/doc/api/img/chapter6_5_1.png"/></li><li><p>微信支付接口调用的整体思路:</p><ul><li><p>1、商户生成订单</p></li><li><p>2、商户调用微信下单接口，获取预交易的链接 </p></li><li><p>3、商户将链接生成二维码图片，展示给用户;</p></li><li><p>4、支付结果通知:</p><p>微信异步通知商户支付结果，商户告知微信支付接收情况</p><p>商户如果没有收到通知，可以调用接口，查询支付状态 </p></li><li><p>5、如果支付成功，发货，修改订单状态</p></li></ul></li></ul><h4 id="2-3-API"><a href="#2-3-API" class="headerlink" title="2.3 API"></a>2.3 API</h4><h5 id="2-3-1-统一下单"><a href="#2-3-1-统一下单" class="headerlink" title="2.3.1 统一下单"></a>2.3.1 统一下单</h5><ul><li><p>请求路径</p><p>POST , URL地址:<a href="https://api.mch.weixin.qq.com/pay/unifiedorder">https://api.mch.weixin.qq.com/pay/unifiedorder</a></p></li><li><p>请求参数</p><p><a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=9_1</a></p><table><thead><tr><th align="left">字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td align="left">公众账号ID</td><td>appid</td><td>是</td><td>String(32)</td><td>wxd678efh56</td><td>微信支付分配的公众账号ID</td></tr><tr><td align="left">商户号</td><td>mch_id</td><td>是</td><td>String(32)</td><td>1230000109</td><td>微信支付分配的商户号</td></tr><tr><td align="left">随机字符串</td><td>nonce_str</td><td>是</td><td>String(32)</td><td>5K8264ILT</td><td>随机字符串，长度要求在32位以内</td></tr><tr><td align="left">签名</td><td>sign</td><td>是</td><td>String(32)</td><td>C380BEC2B</td><td>通过签名算法计算得出的签名值</td></tr><tr><td align="left">商品描述</td><td>body</td><td>是</td><td>String(128)</td><td>华为手机</td><td>商品简单描述</td></tr><tr><td align="left">商户订单号</td><td>out_trade_no</td><td>是</td><td>String(32)</td><td>20150806125</td><td>商户系统内部订单号</td></tr><tr><td align="left">标价金额</td><td>total_fee</td><td>是</td><td>Int</td><td>88</td><td>订单总金额，单位为分</td></tr><tr><td align="left">终端IP</td><td>spbill_create_ip</td><td>是</td><td>String(16)</td><td>123.12.12.123</td><td>APP和网页支付提交用户端ip，Native支付填调用微信支付API的机器IP。</td></tr><tr><td align="left">通知地址</td><td>notify_url</td><td>是</td><td>String(256)</td><td><a href="http://www.weixin.qq.com/wxpay/pay.php">http://www.weixin.qq.com/wxpay/pay.php</a></td><td>异步接收微信支付结果通知的回调地址，通知url必须为外网可访问的url，不能携带参数。</td></tr><tr><td align="left">交易类型</td><td>trade_type</td><td>是</td><td>String(16)</td><td>JSAPI</td><td>JSAPI 公众号支付；NATIVE 扫码支付</td></tr></tbody></table></li><li><p>这些参数大致分成3类</p><ul><li>appid、mch_id、spbill_create_ip、notify_url、trade_type:是商家自己的信息或固定数据，可以提前配置，因此无需每次请求单独配置，而是统一设置好即可。</li><li>nonce_str、sign:是为了保证数据安全而添加的验证数据，根据算法去生成，每次请求自动生成 即可。</li><li>body、out_trade_no、total_fee:订单相关信息，需要我们自己填写。</li></ul></li></ul><h5 id="2-3-2-支付结果通知"><a href="#2-3-2-支付结果通知" class="headerlink" title="2.3.2 支付结果通知"></a>2.3.2 支付结果通知</h5><p>支付完成后，微信会把相关支付结果和用户信息发送给商户，商户需要接收处理，并返回应答。 </p><p>微信服务会自动向 notify_url 地址发起POST请求:</p><ul><li><p>通知参数</p><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>返回状态码</td><td>return_code</td><td>是</td><td>String(16)</td><td>SUCCESS</td><td>SUCCESS/FAIL此字段是通信标识，非交易标识，交易是否成功需要查看trade_state来判断</td></tr><tr><td>返回信息</td><td>return_msg</td><td>是</td><td>String(128)</td><td>OK</td><td>当return_code为FAIL时返回信息为错误原因 ，例如签名失败参数格式校验错误</td></tr></tbody></table><p>通信成功，会返回下面信息：</p><table><thead><tr><th align="left">字段名</th><th align="left">变量名</th><th align="left">必填</th><th align="left">类型</th><th align="left">示例值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">商户订单号</td><td align="left">out_trade_no</td><td align="left">是</td><td align="left">String(32)</td><td align="left">1212321</td><td align="left">商户系统内部订单号，要求32个字符内</td></tr><tr><td align="left">业务结果</td><td align="left">result_code</td><td align="left">是</td><td align="left">String(16)</td><td align="left">SUCCESS</td><td align="left">SUCCESS/FAIL</td></tr></tbody></table></li><li><p>我们需要返回给微信的参数</p><table><thead><tr><th align="left">字段名</th><th align="left">变量名</th><th align="left">必填</th><th align="left">类型</th><th align="left">示例值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">返回状态码</td><td align="left">return_code</td><td align="left">是</td><td align="left">String(16)</td><td align="left">SUCCESS</td><td align="left">请按示例值填写</td></tr><tr><td align="left">返回信息</td><td align="left">return_msg</td><td align="left">是</td><td align="left">String(128)</td><td align="left">OK</td><td align="left">请按示例值填写</td></tr></tbody></table><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">return_code</span>&gt;</span>&lt;![CDATA[SUCCESS]]&gt;<span class="tag">&lt;/<span class="name">return_code</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">return_msg</span>&gt;</span>&lt;![CDATA[OK]]&gt;<span class="tag">&lt;/<span class="name">return_msg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-SDK"><a href="#2-4-SDK" class="headerlink" title="2.4 SDK"></a>2.4 SDK</h4><ul><li><p>官方已经提供了SDK，供我们使用</p><p><a href="https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=11_1">https://pay.weixin.qq.com/wiki/doc/api/micropay.php?chapter=11_1</a></p></li><li><p>但是微信没有提供maven仓库坐标，因此我们必须下载使用</p><p>自定义PayConfig实现，定义:公众号id、商户号、账户签名，打包</p></li><li><p>打包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn <span class="built_in">source</span>:jar install -Dmaven.test.skip=<span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>在travel中引入坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.wxpay<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>wxpay-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>简化API参数的Util</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 微信支付工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> WXPay wxPay;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支付成功回调地址</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String notifyUrl = <span class="string">"自行定义"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化微信支付</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            PayConfig payConfig = <span class="keyword">new</span> PayConfig();</span><br><span class="line">            payConfig.setAppID(<span class="string">"自行申请"</span>); <span class="comment">// 公众账号ID</span></span><br><span class="line">            payConfig.setMchID(<span class="string">"自行申请"</span>);<span class="comment">// 商户号</span></span><br><span class="line">            payConfig.setKey(<span class="string">"自行申请"</span>);<span class="comment">// 生成签名的密钥</span></span><br><span class="line">            wxPay = <span class="keyword">new</span> WXPay(payConfig);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// e.printStackTrace();</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成微信订单支付 url</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">createOrder</span><span class="params">(String orderId, Integer totalPay)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; data = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">// 商品描述</span></span><br><span class="line">        data.put(<span class="string">"body"</span>, <span class="string">"支付中心-商品支付"</span>);</span><br><span class="line">        <span class="comment">// 订单号</span></span><br><span class="line">        data.put(<span class="string">"out_trade_no"</span>, orderId);</span><br><span class="line">        <span class="comment">//金额，单位是分</span></span><br><span class="line">        data.put(<span class="string">"total_fee"</span>, totalPay.toString());</span><br><span class="line">        <span class="comment">//调用微信支付的终端IP</span></span><br><span class="line">        data.put(<span class="string">"spbill_create_ip"</span>, <span class="string">"127.0.0.1"</span>);</span><br><span class="line">        <span class="comment">//回调地址</span></span><br><span class="line">        data.put(<span class="string">"notify_url"</span>, notifyUrl);</span><br><span class="line">        <span class="comment">// 支付有效时间10分钟</span></span><br><span class="line">        Date now = <span class="keyword">new</span> Date();</span><br><span class="line">        Date now_10 = <span class="keyword">new</span> Date(now.getTime() + <span class="number">600000</span>); <span class="comment">//10分钟后的时间</span></span><br><span class="line">        SimpleDateFormat dateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMddHHmmss"</span>);<span class="comment">//可以方便地修改日期格式</span></span><br><span class="line">        String nowTime_10 = dateFormat.format(now_10);</span><br><span class="line">        data.put(<span class="string">"time_expire"</span>, nowTime_10);</span><br><span class="line">        <span class="comment">// 交易类型为扫码支付</span></span><br><span class="line">        data.put(<span class="string">"trade_type"</span>, <span class="string">"NATIVE"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 利用wxPay工具,完成下单</span></span><br><span class="line">        Map&lt;String, String&gt; result = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = wxPay.unifiedOrder(data);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"微信下单失败"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 校验业务状态</span></span><br><span class="line">        checkResultCode(result);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 下单成功，获取支付链接</span></span><br><span class="line">        String url = result.get(<span class="string">"code_url"</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(url)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"微信下单失败，支付链接为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查业务状态</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkResultCode</span><span class="params">(Map&lt;String, String&gt; result)</span> </span>&#123;</span><br><span class="line">        String resultCode = result.get(<span class="string">"result_code"</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"FAIL"</span>.equals(resultCode)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"【微信支付】微信支付业务失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-统一下单实现"><a href="#三-统一下单实现" class="headerlink" title="三.统一下单实现"></a>三.统一下单实现</h1><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><table><thead><tr><th>用户</th><th></th><th>Servet</th><th></th><th>微信平台</th></tr></thead><tbody><tr><td></td><td>提交订单➡</td><td>OrderServlet<br>将订单和订单项保存到数据库<br>重定向到微信支付的Servlet</td><td></td><td></td></tr><tr><td></td><td></td><td>PayServlet<br/>接收参数:订单号和支付金额<br/>调用支付工具类，发送请求，生成预交易url<br/>将数据设置到request域<br/>转发到pay.jsp页面</td><td>➡发送xml数据<br/>⬅返回xml数据</td><td></td></tr><tr><td></td><td>⬅响应</td><td>Pay.jsp<br/>二维码å</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li><p>OrderServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">createOrder</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  Date orderDate = <span class="keyword">new</span> Date();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1.接收请求参数</span></span><br><span class="line">  String addressId = req.getParameter(<span class="string">"addressId"</span>);</span><br><span class="line">  <span class="comment">// 前端数据分割，分别为：收货人，收货地址，收货电话</span></span><br><span class="line">  String[] addressArray = addressId.split(<span class="string">","</span>);</span><br><span class="line">  <span class="comment">// 2.获取session中的user</span></span><br><span class="line">  User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">  <span class="comment">// 3.获取redis中cart</span></span><br><span class="line">  Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">  <span class="comment">// 4.创建订单，设置基础数据</span></span><br><span class="line">  Order order = <span class="keyword">new</span> Order();</span><br><span class="line">  <span class="comment">// 订单号</span></span><br><span class="line">  order.setOid(IdUtil.simpleUUID());</span><br><span class="line">  <span class="comment">// 下单时间</span></span><br><span class="line">  order.setOrdertime(orderDate);</span><br><span class="line">  <span class="comment">// 订单总金额</span></span><br><span class="line">  order.setTotal(cart.getCartTotal());</span><br><span class="line">  <span class="comment">// 未支付订单</span></span><br><span class="line">  order.setState(<span class="number">0</span>);</span><br><span class="line">  <span class="comment">// 收货人</span></span><br><span class="line">  order.setContact(addressArray[<span class="number">0</span>]);</span><br><span class="line">  <span class="comment">// 收货地址</span></span><br><span class="line">  order.setAddress(addressArray[<span class="number">1</span>]);</span><br><span class="line">  <span class="comment">// 收货电话</span></span><br><span class="line">  order.setTelephone(addressArray[<span class="number">2</span>]);</span><br><span class="line">  <span class="comment">// 为了简化所属用户操作，我们可以直接设置uid</span></span><br><span class="line">  order.setUid(currentUser.getUid());</span><br><span class="line">  <span class="comment">// 5.遍历购物项，创建订单项</span></span><br><span class="line">  List&lt;OrderItem&gt; orderItemList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">  OrderItem orderItem = <span class="keyword">null</span>;</span><br><span class="line">  <span class="comment">// 遍历购物项</span></span><br><span class="line">  <span class="keyword">for</span> (CartItem cartItem : cart.getCartItemMap().values()) &#123;</span><br><span class="line">    <span class="comment">// 创建订单项</span></span><br><span class="line">    orderItem = <span class="keyword">new</span> OrderItem();</span><br><span class="line">    <span class="comment">// 下单时间</span></span><br><span class="line">    orderItem.setItemtime(orderDate);</span><br><span class="line">    <span class="comment">// 未支付</span></span><br><span class="line">    orderItem.setState(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">// 数量</span></span><br><span class="line">    orderItem.setNum(cartItem.getNum());</span><br><span class="line">    <span class="comment">// 商品小计</span></span><br><span class="line">    orderItem.setSubtotal(cartItem.getSubTotal());</span><br><span class="line">    <span class="comment">// 商品rid ，简化数据库操作</span></span><br><span class="line">    orderItem.setRid(cartItem.getRoute().getRid());</span><br><span class="line">    <span class="comment">// 订单oid，简化数据操作</span></span><br><span class="line">    orderItem.setOid(order.getOid());</span><br><span class="line">    <span class="comment">// 添加到订单项集合中</span></span><br><span class="line">    orderItemList.add(orderItem);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 将订单项集合关联到订单实体中</span></span><br><span class="line">  order.setOrderItemList(orderItemList);</span><br><span class="line">  <span class="comment">// 6.调用service，保存到数据库</span></span><br><span class="line">  orderService.save(order);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 7.清空购物车</span></span><br><span class="line">  Jedis jedis = JedisUtils.getJedis();</span><br><span class="line">  jedis.del(<span class="string">"cart_"</span>+currentUser.getUsername());</span><br><span class="line">  jedis.close();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 8.重定向支付页面</span></span><br><span class="line">  <span class="comment">//        resp.sendRedirect(req.getContextPath()+"/pay.jsp");</span></span><br><span class="line">  resp.sendRedirect(req.getContextPath()+<span class="string">"/PayServlet?action=createUrl&amp;oid="</span>+order.getOid()+<span class="string">"&amp;price="</span>+order.getTotal());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>PayServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/PayServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xx</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用微信平台，生成预交易链接</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">createUrl</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String oid = req.getParameter(<span class="string">"oid"</span>);</span><br><span class="line">        String price = req.getParameter(<span class="string">"price"</span>);</span><br><span class="line">        <span class="comment">// 2.调用微信平台，生成预交易链接</span></span><br><span class="line">        String pay_url = PayUtils.createOrder(oid, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.将数据设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"oid"</span>,oid);</span><br><span class="line">        req.setAttribute(<span class="string">"price"</span>,price);</span><br><span class="line">        req.setAttribute(<span class="string">"pay_url"</span>,pay_url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.转发到支付页面</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/pay.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>pay.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/webbase.css"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/pages-weixinpay.css"</span>&gt;</span><br><span class="line">    &lt;title&gt;微信支付&lt;/title&gt;</span><br><span class="line">    &lt;script src="$&#123;pageContext.request.contextPath&#125;/js/qrcode.min.js"&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"header.jsp"</span>%&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container-fluid"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"cart py-container"</span>&gt;</span><br><span class="line">        &lt;!--主内容--&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout py-container  pay"</span>&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-tit"</span>&gt;</span><br><span class="line">            &lt;h4 class="fl tit-txt"&gt;&lt;span class="success-icon"&gt;&lt;/span&gt;&lt;span  class="success-info"&gt;订单提交成功，请您及时付款！订单号：$&#123;oid&#125;&lt;/span&gt;&lt;/h4&gt;</span><br><span class="line">            &lt;span class="fr"&gt;&lt;em class="sui-lead"&gt;应付金额：&lt;/em&gt;&lt;em  class="orange money"&gt;￥$&#123;price&#125;&lt;/em&gt;元&lt;/span&gt;</span><br><span class="line">            &lt;div class="clearfix"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-steps"</span>&gt;</span><br><span class="line">            &lt;div class="fl weixin"&gt;微信支付&lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl sao"</span>&gt;</span><br><span class="line">              &lt;p class="red" style="padding-bottom: 40px"&gt;二维码已过期，刷新页面重新获取二维码。&lt;/p&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl code"</span>&gt;</span><br><span class="line">                &lt;div id="qrCode"&gt;&lt;/div&gt;</span><br><span class="line">                &lt;script&gt;</span><br><span class="line">                  let qrCode=<span class="keyword">new</span> QRCode(<span class="string">'qrCode'</span>,<span class="string">'$&#123;pay_url&#125;'</span>)</span><br><span class="line">                &lt;/script&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"saosao"</span>&gt;</span><br><span class="line">                  &lt;p&gt;请使用微信扫一扫&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;扫描二维码支付&lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl"</span> style=<span class="string">"background:url(./img/phone-bg.png) no-repeat;width:350px;height:400px;margin-left:40px"</span>&gt;</span><br><span class="line"></span><br><span class="line">              &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="clearfix"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--引入尾部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"footer.jsp"</span>%&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-支付结果通知实现"><a href="#四-支付结果通知实现" class="headerlink" title="四.支付结果通知实现"></a>四.支付结果通知实现</h1><h4 id="4-1-notify-url"><a href="#4-1-notify-url" class="headerlink" title="4.1 notify_url"></a>4.1 notify_url</h4><table><thead><tr><th>通知地址</th><th>notify_url</th><th>是</th><th>String(256)</th><th><a href="http://www.weixin.qq.com/wxpay/pay.php">http://www.weixin.qq.com/wxpay/pay.php</a></th><th>异步接收微信支付结果通知的回调地址，通知url必须为外网可访问的url，不能携带参数。</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>这个地址是在支付成功后的异步结果通知。</p><p>官网介绍如下: 支付完成后，微信会把相关支付结果和用户信息发送给商户，商户需要接收处理，并返回应答。 </p><p>所以，此处的地址必须是一个外网可访问地址，而且我们要定义好回调的处理接口。</p><p> <a href="http://localhost:8080/travel/pay/notify">http://localhost:8080/travel/pay/notify</a> </p><p><strong>注意</strong>:通知url必须为直接可访问的url，不能携带参数</p><h4 id="4-2-内网穿透"><a href="#4-2-内网穿透" class="headerlink" title="4.2 内网穿透"></a>4.2 内网穿透</h4><ul><li><p>内网穿透:</p><p>让外网能访问你本地的应用，例如在外网打开你本地<a href="http://127.0.0.1的指向Web站点">http://127.0.0.1的指向Web站点</a></p></li><li><p>配置url回调地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> WXPay wxPay;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支付成功回调地址</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String notifyUrl = <span class="string">"http://xxxxxxxx.xxxxx.xxx/travel/PayNotifyServlet"</span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-需求分析"><a href="#4-3-需求分析" class="headerlink" title="4.3 需求分析"></a>4.3 需求分析</h4><table><thead><tr><th>用户</th><th>➡</th><th>微信平台</th><th>➡</th><th><a href="http://xxxxxxxx.xxxxx.xxx/travel/PayNotifyServlet">http://xxxxxxxx.xxxxx.xxx/travel/PayNotifyServlet</a></th></tr></thead><tbody><tr><td></td><td></td><td>微信平台受到钱后，根据发送时指定的回调地址，返回支付成功信息</td><td></td><td>@WebServlet(“/PayNotifyServlet”)<br>接受请求xml，转为map<br/>调用service，修改订单状态<br/>返回接受成功ok消息</td></tr><tr><td></td><td></td><td></td><td></td><td>OrderServlet<br>根据oid修改state(OrderDao)<br>根据oid修改state(OrderItemDao)</td></tr></tbody></table><h4 id="4-4-代码实现"><a href="#4-4-代码实现" class="headerlink" title="4.4 代码实现"></a>4.4 代码实现</h4><ul><li><p>PayNotifyServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/PayNotifyServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PayNotifyServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xxx</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  OrderService orderService= (OrderService) BeanFactory.getBean(<span class="string">"orderService"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.接收请求参数(xml)</span></span><br><span class="line">    ServletInputStream in = request.getInputStream();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.将xml转为java对象</span></span><br><span class="line">    XmlMapper xmlMapper = <span class="keyword">new</span> XmlMapper();</span><br><span class="line">    Map param = xmlMapper.readValue(in, Map<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.调用orderService，修改订单状态</span></span><br><span class="line">    orderService.updateState(param);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.返回微信平台，接收成功</span></span><br><span class="line">    Map&lt;String , String &gt; result = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    result.put(<span class="string">"return_code"</span>,<span class="string">"SUCESS"</span>);</span><br><span class="line">    result.put(<span class="string">"return_msg"</span>,<span class="string">"OK"</span>);</span><br><span class="line"></span><br><span class="line">    String xml = xmlMapper.writeValueAsString(result);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将map转为xml</span></span><br><span class="line">    response.setContentType(<span class="string">"application/xml;charset=utf-8"</span>);</span><br><span class="line">    response.getWriter().write(xml);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(Map&lt;String, String&gt; param)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateState</span><span class="params">(Map&lt;String, String&gt; param)</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 1.获取订单号</span></span><br><span class="line">    String oid = param.get(<span class="string">"out_trade_no"</span>);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 2.修改订单状态</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    OrderDao orderDao = sqlSession.getMapper(OrderDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    OrderItemDao orderItemDao = sqlSession.getMapper(OrderItemDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 修改订单</span></span><br><span class="line">    orderDao.updateState(oid);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 修改订单项</span></span><br><span class="line">    orderItemDao.updateState(oid);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(String oid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">        INSERT INTO tab_order(oid,ordertime,total,state,address,contact,telephone,uid)</span><br><span class="line">        VALUES (#&#123;oid&#125;,#&#123;ordertime&#125;,#&#123;total&#125;,#&#123;state&#125;,#&#123;address&#125;,#&#123;contact&#125;,#&#123;telephone&#125;,#&#123;uid&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateState"</span>&gt;</span></span><br><span class="line">        UPDATE tab_order SET state=1 WHERE oid=#&#123;oid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderItemDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderItemDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(OrderItem orderItem)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(String oid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderItemDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderItemDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">        INSERT INTO tab_orderitem(itemtime,state,num,subtotal,rid,oid)</span><br><span class="line">        VALUES (#&#123;itemtime&#125;,#&#123;state&#125;,#&#123;num&#125;,#&#123;subtotal&#125;,#&#123;rid&#125;,#&#123;oid&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateState"</span>&gt;</span></span><br><span class="line">        UPDATE tab_orderitem SET state=1 WHERE oid =#&#123;oid&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="五-支付状态查询"><a href="#五-支付状态查询" class="headerlink" title="五.支付状态查询"></a>五.支付状态查询</h1><h4 id="5-1-需求分析"><a href="#5-1-需求分析" class="headerlink" title="5.1 需求分析"></a>5.1 需求分析</h4><p><img src="image-20200524114657431.png" alt=""></p><h4 id="5-2-代码实现"><a href="#5-2-代码实现" class="headerlink" title="5.2 代码实现"></a>5.2 代码实现</h4><ul><li><p>pay.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/webbase.css"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/pages-weixinpay.css"</span>&gt;</span><br><span class="line">    &lt;title&gt;微信支付&lt;/title&gt;</span><br><span class="line">    &lt;script src="$&#123;pageContext.request.contextPath&#125;/js/qrcode.min.js"&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"header.jsp"</span>%&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container-fluid"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"cart py-container"</span>&gt;</span><br><span class="line">        &lt;!--主内容--&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout py-container  pay"</span>&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-tit"</span>&gt;</span><br><span class="line">            &lt;h4 class="fl tit-txt"&gt;&lt;span class="success-icon"&gt;&lt;/span&gt;&lt;span  class="success-info"&gt;订单提交成功，请您及时付款！订单号：$&#123;oid&#125;&lt;/span&gt;&lt;/h4&gt;</span><br><span class="line">            &lt;span class="fr"&gt;&lt;em class="sui-lead"&gt;应付金额：&lt;/em&gt;&lt;em  class="orange money"&gt;￥$&#123;price&#125;&lt;/em&gt;元&lt;/span&gt;</span><br><span class="line">            &lt;div class="clearfix"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-steps"</span>&gt;</span><br><span class="line">            &lt;div class="fl weixin"&gt;微信支付&lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl sao"</span>&gt;</span><br><span class="line">              &lt;p class="red" style="padding-bottom: 40px"&gt;二维码已过期，刷新页面重新获取二维码。&lt;/p&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl code"</span>&gt;</span><br><span class="line">                &lt;div id="qrCode"&gt;&lt;/div&gt;</span><br><span class="line">                &lt;script&gt;</span><br><span class="line">                  let qrCode=<span class="keyword">new</span> QRCode(<span class="string">'qrCode'</span>,<span class="string">'$&#123;pay_url&#125;'</span>)</span><br><span class="line">                &lt;/script&gt;</span><br><span class="line">                &lt;%--                        &lt;img src=<span class="string">"img/erweima.png"</span> alt=<span class="string">""</span>&gt;--%&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"saosao"</span>&gt;</span><br><span class="line">                  &lt;p&gt;请使用微信扫一扫&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;扫描二维码支付&lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fl"</span> style=<span class="string">"background:url(./img/phone-bg.png) no-repeat;width:350px;height:400px;margin-left:40px"</span>&gt;</span><br><span class="line"></span><br><span class="line">              &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="clearfix"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">      <span class="comment">// 每间隔五秒查询支付状态</span></span><br><span class="line">      setInterval(function () &#123;</span><br><span class="line">        <span class="comment">// 发送ajax请求</span></span><br><span class="line">        let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/OrderServlet'</span>;</span><br><span class="line">        let data = <span class="string">'action=findState&amp;oid=$&#123;oid&#125;'</span></span><br><span class="line">        $.post(url,data,function (resp) &#123;</span><br><span class="line">          <span class="keyword">if</span>(resp.success)&#123;</span><br><span class="line">            <span class="comment">// 支付成功</span></span><br><span class="line">            location.href=<span class="string">'$&#123;pageContext.request.contextPath&#125;/pay_success.jsp'</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,<span class="number">5000</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 如果用户10分钟内未支付，则跳转失败页面</span></span><br><span class="line">      setTimeout(function () &#123;</span><br><span class="line">        location.href=<span class="string">'$&#123;pageContext.request.contextPath&#125;/pay_fail.jsp'</span>;</span><br><span class="line">      &#125;,<span class="number">1000</span>*<span class="number">10</span>*<span class="number">60</span>)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;!--引入尾部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"footer.jsp"</span>%&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>OrderSerlvet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询订单支付状态</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findState</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 1.接收请求参数 oid</span></span><br><span class="line">  String oid = req.getParameter(<span class="string">"oid"</span>);</span><br><span class="line">  <span class="comment">// 2.调用service查询</span></span><br><span class="line">  ResultInfo resultInfo = orderService.findState(oid);</span><br><span class="line">  <span class="comment">// 3.转为json响应到客户的</span></span><br><span class="line">  javaToJsonWriteClient(resultInfo,resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(Map&lt;String, String&gt; param)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">ResultInfo <span class="title">findState</span><span class="params">(String oid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ResultInfo <span class="title">findState</span><span class="params">(String oid)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    OrderDao orderDao = sqlSession.getMapper(OrderDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 查询dao</span></span><br><span class="line">    Order order = orderDao.findByOid(oid);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span>(order.getState() == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">// 未支付</span></span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 已支付</span></span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> resultInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">updateState</span><span class="params">(String oid)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">Order <span class="title">findByOid</span><span class="params">(String oid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByOid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Order"</span>&gt;</span></span><br><span class="line">  SELECT * FROM tab_order WHERE oid=#&#123;oid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="六-日志记录功能"><a href="#六-日志记录功能" class="headerlink" title="六.日志记录功能"></a>六.日志记录功能</h1><h4 id="6-1-介绍"><a href="#6-1-介绍" class="headerlink" title="6.1 介绍"></a>6.1 介绍</h4><h4 id="6-2-方法增强"><a href="#6-2-方法增强" class="headerlink" title="6.2 方法增强"></a>6.2 方法增强</h4><ul><li>继承</li><li>装饰器模式:必须手动编写装饰器实现类，进行增强</li><li>代理模式:不需要手动编写增强的实现类</li></ul><h4 id="6-3-动态代理"><a href="#6-3-动态代理" class="headerlink" title="6.3 动态代理"></a>6.3 动态代理</h4><ul><li><p>jdk动态代理:要求目标对象和代理对象实现同一个接口【基于接口来创建代理类】</p></li><li><p>cglib动态代理:可以对任意的普通类创建出代理对象【基于继承的思想】</p><p><img src="image-20200524141817661.png" alt=""></p></li></ul><p>sun公司提供了一套工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Object proxy =</span><br><span class="line">  Proxy.newProxyInstance(ClassLoader loader, 类&lt;?&gt;[] interfaces,</span><br><span class="line">                         InvocationHandler h);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">参数:</span></span><br><span class="line"><span class="comment">1.loader:使用目标对象的类加载器 2.interfaces:使用目标对象的实现接口数组 3.h:处理器接口(实现方法增强的业务逻辑细节)</span></span><br><span class="line"><span class="comment">匿名内部类、lambda表达式 返回值:代理对象</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li><p>回顾动态代理的实现思路</p><ul><li><p>定义接口规范</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TargetInterface</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>定义目标对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LiangLiang</span> <span class="keyword">implements</span> <span class="title">TargetInterface</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span> </span>&#123; System.out.println(<span class="string">"Singing...."</span>);</span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建代理对象并测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyTest</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 传统方式</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    TargetInterface liangLiang = <span class="keyword">new</span> LiangLiang();</span><br><span class="line">    liangLiang.sing(); &#125;</span><br><span class="line">  <span class="comment">// 动态代理</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 1.创建目标对象</span></span><br><span class="line">    TargetInterface liangLiang = <span class="keyword">new</span> LiangLiang(); <span class="comment">// 2.创建代理对象</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">1.loader:目标对象的类加载器 2.interfaces:目标对象实现接口数组 3.h:处理器接口(实现增强的方法细节)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    ClassLoader classLoader = liangLiang.getClass().getClassLoader(); Class&lt;?&gt;[] interfaces = liangLiang.getClass().getInterfaces(); TargetInterface xiaolu = (TargetInterface)</span><br><span class="line">      Proxy.newProxyInstance(classLoader, interfaces, <span class="keyword">new</span> InvocationHandler() &#123; <span class="comment">// 3.编写增强的实现逻辑(invoke是代理对象所有方法的入口)</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">参数:</span></span><br><span class="line"><span class="comment">1.proxy:工具类生产的代理对象(xiaolu) 2.method:当前用户执行的某个具体方法对象 3.args:当前用户执行某个具体方法传递的实际参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span></span></span><br><span class="line"><span class="function">          <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">// 实现方法的增强</span></span><br><span class="line">          <span class="keyword">if</span> (<span class="string">"sing"</span>.equals(method.getName())) &#123;</span><br><span class="line">            System.out.println(<span class="string">"小路晚上找你谈生意..."</span>); &#125;</span><br><span class="line">          <span class="comment">// 真正执行者还是目标哦对象</span></span><br><span class="line">          <span class="keyword">return</span> method.invoke(liangLiang, args); &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="comment">// 调用代理对象的方法(实现了对sing方法的增强)</span></span><br><span class="line">    xiaolu.sing(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="6-4-日志记录实现"><a href="#6-4-日志记录实现" class="headerlink" title="6.4 日志记录实现"></a>6.4 日志记录实现</h4><h5 id="6-4-1-分析"><a href="#6-4-1-分析" class="headerlink" title="6.4.1 分析"></a>6.4.1 分析</h5><p><img src="image-20200524145558471.png" alt=""></p><h5 id="6-4-2-实现"><a href="#6-4-2-实现" class="headerlink" title="6.4.2 实现"></a>6.4.2 实现</h5><ul><li><p>JdkProxyFactory</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdkProxyFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 提供一个生产日志记录的代理对象方法</span></span><br><span class="line">  <span class="comment">// target 目标对象</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">createProxy</span><span class="params">(Object target)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// proxy 代理对象</span></span><br><span class="line">    Object proxy = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据工具类，创建代理对象</span></span><br><span class="line">    ClassLoader classLoader = target.getClass().getClassLoader();</span><br><span class="line">    Class&lt;?&gt;[] interfaces = target.getClass().getInterfaces();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实现对方法的增强</span></span><br><span class="line">    Proxy.newProxyInstance(classLoader, interfaces, <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="comment">// 实现日志记录</span></span><br><span class="line">        StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        stringBuffer.append(<span class="string">"[Action Time]: "</span> + LocalDateTime.now());</span><br><span class="line"></span><br><span class="line">        stringBuffer.append(<span class="string">"[Implementation Target Class]"</span> + target.getClass().getName());</span><br><span class="line"></span><br><span class="line">        stringBuffer.append(<span class="string">"[Implementation Target Method]: "</span>+method.getName());</span><br><span class="line"></span><br><span class="line">        stringBuffer.append(<span class="string">"[Method Actual Args]: "</span>+ Arrays.toString(args));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 先调用目标对象原有的功能</span></span><br><span class="line">        Object invoke = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          invoke = method.invoke(target,args);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">          stringBuffer.append(<span class="string">"[Exception Information]: "</span>+ e.getCause().getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将本次日志信息保存到日志文件</span></span><br><span class="line">        LocalDate localDate = LocalDate.now();</span><br><span class="line"></span><br><span class="line">        String format = localDate.format(DateTimeFormatter.ofPattern(<span class="string">"yyyy-M-dd"</span>));</span><br><span class="line"></span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"/Users/swzxsyh/Program"</span> + format + <span class="string">".log"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用高效字符缓冲流 </span></span><br><span class="line">        BufferedWriter bufferedWriter = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(file, <span class="keyword">true</span>), <span class="string">"UTF-8"</span>));</span><br><span class="line"></span><br><span class="line">        bufferedWriter.write(stringBuffer.toString());</span><br><span class="line">        bufferedWriter.newLine();</span><br><span class="line">        bufferedWriter.close();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> invoke;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> proxy;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>BeanFacotry</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.Document;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.Element;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.io.SAXReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        UserService userService = (UserService) BeanFactory.getBean(<span class="string">"userService"</span>);</span><br><span class="line">        System.out.println(userService.findByUsername(<span class="string">"swzxsyh"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        Object result = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream in = BeanFactory.class.getClassLoader().getResourceAsStream("beans.xml");</span><br><span class="line"></span><br><span class="line">            SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line"></span><br><span class="line">            Document document = saxReader.read(in);</span><br><span class="line"></span><br><span class="line">            String xpath = <span class="string">"//bean[@id='"</span> + id + <span class="string">"']"</span>;</span><br><span class="line"></span><br><span class="line">            Element element = (Element) document.selectSingleNode(xpath);</span><br><span class="line"></span><br><span class="line">            String className = element.attributeValue(<span class="string">"class"</span>);</span><br><span class="line"></span><br><span class="line">            Class&lt;?&gt; clazz = Class.forName(className);</span><br><span class="line"></span><br><span class="line">            result = clazz.newInstance();</span><br><span class="line"></span><br><span class="line">            result = JdkProxyFactory.createLogProxy(result);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>观察日志文件路径</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong># 微信支付&amp;日志记录</strong></p><p><strong>## 二维码</strong></p><p><strong>### QRCode二维码生成插件</strong></p><p><strong>## 微信扫码支付简介</strong></p><p><strong>### 申请商户号（略）</strong></p><p><strong>### 开发文档</strong></p><p>- 1、生成订单</p><p>- 2、调用微信下单接口，生成链接。</p><p>- 3、根据链接生成二维码图片</p><p>- 4、支付成功后修改订单状态</p><p><strong>### API</strong></p><p>- 统一下单</p><p>- 支付结果通知</p><p><strong>### SDK</strong></p><p>- 需要手动下载，安装到本地仓库</p><p>​    - 个别同学使用自己仓库，必须操作</p><p><strong>## 统一下单实现</strong></p><p><strong>### 写死1分钱</strong></p><p><strong>## 支付结果通知实现</strong></p><p><strong>### 内网穿透</strong></p><p>- NATAPP</p><p>​    - 注意：生成的外网地址，可能会随机切换</p><p><strong>## 支付状态查询</strong></p><p><strong>### 前端使用定时器</strong></p><p>- 用户支付，跳转到成功页面</p><p>- 超过10分钟未支付，跳转到失败页面</p><p><strong>## 日志记录功能</strong></p><p><strong>### 使用动态代理，实现对所有业务层方法增强，实现日志记录</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;二维码&lt;/li&gt;
&lt;li&gt;微信开发平台——支付&lt;/li&gt;
&lt;li&gt;统一下单——生成预交易链接&lt;/li&gt;
&lt;li&gt;支付结果通知&lt;/li&gt;
&lt;li&gt;支付状态查询&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（六十）</title>
    <link href="http://yoursite.com/2020/05/22/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%E5%8D%81%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/22/就业班学习笔记（六十）/</id>
    <published>2020-05-21T17:05:31.000Z</published>
    <updated>2020-05-23T16:52:58.883Z</updated>
    
    <content type="html"><![CDATA[<ul><li>购物车</li><li>订单</li></ul><a id="more"></a><h1 id="一-购物车流程分析"><a href="#一-购物车流程分析" class="headerlink" title="一.购物车流程分析"></a>一.购物车流程分析</h1><ul><li>浏览商品</li><li>加入购物车(用户的购物车)</li><li>查看购物车</li><li>商品结算(收货地址、支付方式、商品清单) ——cart.jsp</li><li>生成订单(支付状态:未支付0、已支付:1)——order_info.jsp</li><li>支付(微信、支付宝)——pay.jsp</li><li>支付结果</li></ul><h1 id="二-设计购物车"><a href="#二-设计购物车" class="headerlink" title="二.设计购物车"></a>二.设计购物车</h1><h4 id="2-1-购物车功能分析"><a href="#2-1-购物车功能分析" class="headerlink" title="2.1 购物车功能分析"></a>2.1 购物车功能分析</h4><p><img src="image-20200522093646704.png" alt=""></p><h4 id="2-2-CartItem"><a href="#2-2-CartItem" class="headerlink" title="2.2 CartItem"></a>2.2 CartItem</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CartItem</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> Route route; <span class="comment">// 商品 private Integer num; // 数量 private Double subTotal; // 小计</span></span><br><span class="line">  <span class="comment">// 重写小计get方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Double <span class="title">getSubTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125; &#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-Cart"><a href="#2-3-Cart" class="headerlink" title="2.3 Cart"></a>2.3 Cart</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cart</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> Integer cartNum;</span><br><span class="line">  <span class="keyword">private</span> Double cartTotal;</span><br><span class="line">  <span class="keyword">private</span> LinkedHashMap&lt;String, CartItem&gt; cartItemMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Integer <span class="title">getCartNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cartNum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (CartItem cartItem : cartItemMap.values()) &#123;</span><br><span class="line">      cartNum += cartItem.getNum();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cartNum;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Double <span class="title">getCartTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    cartTotal = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (CartItem cartItem : cartItemMap.values()) &#123;</span><br><span class="line">      cartTotal += cartItem.getSubTotal();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cartTotal;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-购物车工具类"><a href="#2-4-购物车工具类" class="headerlink" title="2.4 购物车工具类"></a>2.4 购物车工具类</h4><p><img src="image-20200522095258837.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CartUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setCartToRedis</span><span class="params">(User user, Cart cart)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Jedis jedis = JedisUtils.getJedis();</span><br><span class="line"></span><br><span class="line">            String json = objectMapper.writeValueAsString(cart);</span><br><span class="line"></span><br><span class="line">            jedis.set(<span class="string">"cart_"</span> + user.getUsername(), json);</span><br><span class="line"></span><br><span class="line">            jedis.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Cart <span class="title">getCartForRedis</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        Cart cart = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        Jedis jedis = JedisUtils.getJedis();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (jedis.exists(<span class="string">"cart_"</span> + user.getUsername())) &#123;</span><br><span class="line">            String json = jedis.get(<span class="string">"cart_"</span> + user.getUsername());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                cart = objectMapper.readValue(json, Cart<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cart = <span class="keyword">new</span> Cart();</span><br><span class="line">        &#125;</span><br><span class="line">        jedis.close();</span><br><span class="line">        <span class="keyword">return</span> cart;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三-加入购物车"><a href="#三-加入购物车" class="headerlink" title="三.加入购物车"></a>三.加入购物车</h1><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><p><img src="image-20200522102212385.png" alt=""></p><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li><p>route_detail.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"collect"</span>&gt;</span><br><span class="line">    &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn"</span> href=<span class="string">"javascript:void(0)"</span> id=<span class="string">"addCart"</span>&gt;</span><br><span class="line">&lt;i class="glyphicon glyphicon-heart-empty"&gt;&lt;/i&gt;加入购物车&lt;/a&gt; &lt;/span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">$(<span class="string">'#addCart'</span>).click(function () &#123;</span><br><span class="line"><span class="comment">// 判断用户是否登录</span></span><br><span class="line"><span class="keyword">if</span> ($&#123;empty currentUser&#125;) &#123; <span class="comment">// 未登录</span></span><br><span class="line"><span class="comment">// 以代码方式触发登录按钮的点击事件，弹出模态框</span></span><br><span class="line">$(<span class="string">'#loginBtn'</span>).click() &#125; <span class="keyword">else</span> &#123;<span class="comment">// 已登录</span></span><br><span class="line"><span class="comment">// 获取数量</span></span><br><span class="line">let num = $(<span class="string">'#qty_item_1'</span>).val();</span><br><span class="line"><span class="comment">// 添加购物车请求 location.href='$&#123;pageContext.request.contextPath&#125;/CartServlet?</span></span><br><span class="line">action=addCart&amp;rid=$&#123;route.rid&#125;&amp;num=<span class="string">'+num; &#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CartServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CartServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CartServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RouteService routeService= (RouteService) BeanFactory.getBean(<span class="string">"routeService"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xxx</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加购物车</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">addCart</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String num = req.getParameter(<span class="string">"num"</span>);</span><br><span class="line">        String rid = req.getParameter(<span class="string">"rid"</span>);</span><br><span class="line">        <span class="comment">// 2.从redis中获取购物车</span></span><br><span class="line">        User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line"></span><br><span class="line">        Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">        <span class="comment">// 3.判断当前商品的购物项是否存在</span></span><br><span class="line">        LinkedHashMap&lt;String, CartItem&gt; cartItemMap = cart.getCartItemMap();</span><br><span class="line">        CartItem cartItem = cartItemMap.get(rid);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cartItem !=<span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 数量累加</span></span><br><span class="line">            cartItem.setNum(cartItem.getNum()+Integer.parseInt(num));</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 根据rid查询route对象</span></span><br><span class="line">            Route route = routeService.findDetail(rid);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建购物项对象</span></span><br><span class="line">            cartItem  = <span class="keyword">new</span> CartItem();</span><br><span class="line">            cartItem.setNum(Integer.parseInt(num));</span><br><span class="line">            cartItem.setRoute(route);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置到购物车中</span></span><br><span class="line">            cartItemMap.put(rid,cartItem);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 4.将购物车更新到redis中</span></span><br><span class="line">        CartUtils.setCartToRedis(currentUser,cart);</span><br><span class="line">        <span class="comment">// 5.将购物项设置到request域，展示给用户</span></span><br><span class="line">        req.setAttribute(<span class="string">"cartItem"</span>,cartItem);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6.转发到添加成功页面</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/cart_success.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>cart_success.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;td width=<span class="string">"180"</span> width=<span class="string">"40%"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"id"</span> value=<span class="string">"22"</span>&gt;</span><br><span class="line">  &lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;cartItem.route.rimage&#125;"</span> width=<span class="string">"170"</span> height=<span class="string">"100"</span>&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td width=<span class="string">"30%"</span>&gt;</span><br><span class="line">  &lt;a target="_blank"&gt;$&#123;cartItem.route.rname&#125;&lt;/a&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td width=<span class="string">"10%"</span>&gt;</span><br><span class="line">  ￥$&#123;cartItem.route.price&#125;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td width=<span class="string">"14%"</span>&gt;</span><br><span class="line">  × $&#123;cartItem.num&#125;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td width=<span class="string">"15%"</span>&gt;</span><br><span class="line">  &lt;span class="subtotal"&gt;￥$&#123;cartItem.subTotal&#125;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr &gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-查看购物车"><a href="#四-查看购物车" class="headerlink" title="四.查看购物车"></a>四.查看购物车</h1><h4 id="4-1-需求分析"><a href="#4-1-需求分析" class="headerlink" title="4.1 需求分析"></a>4.1 需求分析</h4><p><img src="image-20200522105420824.png" alt=""></p><h4 id="4-2-代码实现"><a href="#4-2-代码实现" class="headerlink" title="4.2 代码实现"></a>4.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/CartServlet?action=findAll" class="collection"&gt;购物车&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>CartServlet </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查看购物车</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.从session中获取user</span></span><br><span class="line">    User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">    <span class="comment">// 2.从redis中获取cart</span></span><br><span class="line">    Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">    <span class="comment">// 3.设置到request域</span></span><br><span class="line">    req.setAttribute(<span class="string">"cart"</span>,cart);</span><br><span class="line">    <span class="comment">// 4.转发到cart.jsp</span></span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/cart.jsp"</span>).forward(req,resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>cart.jsp </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;empty cart.cartItemMap&#125;"</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span> style=<span class="string">"margin: 100px 200px;text-align: center"</span>&gt;</span><br><span class="line">    购物车内暂时没有商品，登录后将显示您之前加入的商品</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;not empty cart.cartItemMap&#125;"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=<span class="string">"margin:0 auto; margin-top:20px"</span>&gt;</span><br><span class="line">      &lt;div style="font-weight: bold;font-size: 15px;margin-bottom: 10px"&gt;商品数量：$&#123;cart.cartNum&#125;&lt;/div&gt;</span><br><span class="line">      &lt;table <span class="class"><span class="keyword">class</span></span>=<span class="string">"table"</span>&gt;</span><br><span class="line">        &lt;tbody&gt;</span><br><span class="line">          &lt;tr bgcolor=<span class="string">"#f5f5f5"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"table-bordered"</span>&gt;</span><br><span class="line">            &lt;th&gt;图片&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;商品&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;价格&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;数量&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;小计&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">          &lt;c:forEach items=<span class="string">"$&#123;cart.cartItemMap&#125;"</span> <span class="keyword">var</span>=<span class="string">"entry"</span>&gt;</span><br><span class="line">            &lt;tr <span class="class"><span class="keyword">class</span></span>=<span class="string">"table-bordered"</span>&gt;</span><br><span class="line">              &lt;td width=<span class="string">"180"</span> width=<span class="string">"40%"</span>&gt;</span><br><span class="line">                &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"id"</span> value=<span class="string">"22"</span>&gt;</span><br><span class="line">                &lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;entry.value.route.rimage&#125;"</span> width=<span class="string">"170"</span></span><br><span class="line">                     height=<span class="string">"100"</span>&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td width=<span class="string">"30%"</span>&gt;</span><br><span class="line">                &lt;a target="_blank"&gt;$&#123;entry.value.route.rname&#125;&lt;/a&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td width=<span class="string">"10%"</span>&gt;</span><br><span class="line">                ￥ $&#123;entry.value.route.price&#125;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td width=<span class="string">"14%"</span>&gt;</span><br><span class="line">                × $&#123;entry.value.num&#125;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td width=<span class="string">"15%"</span>&gt;</span><br><span class="line">                &lt;span class="subtotal"&gt;¥ $&#123;entry.value.subTotal&#125;&lt;/span&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td&gt;</span><br><span class="line">                &lt;a href="$&#123;pageContext.request.contextPath&#125;/CartServlet?action=delCartItem&amp;rid=$&#123;entry.value.route.rid&#125;" class="delete"&gt;删除&lt;/a&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">          &lt;/c:forEach&gt;</span><br><span class="line">        &lt;/tbody&gt;</span><br><span class="line">      &lt;/table&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div style=<span class="string">"text-align:right;"</span>&gt;</span><br><span class="line">      商品金额: &lt;strong style="color:#ff6600;"&gt;￥$&#123;cart.cartTotal&#125;&lt;/strong&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div style=<span class="string">"text-align:right;margin-top:10px;margin-bottom:10px;"</span>&gt;</span><br><span class="line">      &lt;a href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/OrderServlet?action=orderInfo"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"button"</span> width=<span class="string">"100"</span> value=<span class="string">"结算"</span> name=<span class="string">"submit"</span> border=<span class="string">"0"</span> style=<span class="string">"background-color: #ea4a36;</span></span><br><span class="line"><span class="string">                                                                                    height:45px;width:120px;color:white;font-size: 15px"</span>&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="五-删除购物车"><a href="#五-删除购物车" class="headerlink" title="五.删除购物车"></a>五.删除购物车</h1><h4 id="5-1-需求分析"><a href="#5-1-需求分析" class="headerlink" title="5.1 需求分析"></a>5.1 需求分析</h4><p><img src="image-20200522112515521.png" alt=""></p><h4 id="5-2-代码实现"><a href="#5-2-代码实现" class="headerlink" title="5.2 代码实现"></a>5.2 代码实现</h4><ul><li><p>cart.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/CartServlet?action=delCartItem&amp;rid=$&#123;entry.value.route.rid&#125;" class="delete"&gt;删除&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CartServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除购物项</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">delCartItem</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 1.获取请求参数</span></span><br><span class="line">  String rid = req.getParameter(<span class="string">"rid"</span>);</span><br><span class="line">  <span class="comment">// 2.获取session中user</span></span><br><span class="line">  User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3.获取redis中cart</span></span><br><span class="line">  Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.删除购物项</span></span><br><span class="line">  cart.getCartItemMap().remove(rid);</span><br><span class="line">  <span class="comment">// 5.将cart更新到redis中</span></span><br><span class="line">  CartUtils.setCartToRedis(currentUser,cart);</span><br><span class="line">  <span class="comment">// 6.重定向查看购物车</span></span><br><span class="line">  resp.sendRedirect(req.getContextPath()+<span class="string">"/CartServlet?action=findAll"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="六-商品结算"><a href="#六-商品结算" class="headerlink" title="六.商品结算"></a>六.商品结算</h1><h4 id="6-1-需求分析"><a href="#6-1-需求分析" class="headerlink" title="6.1  需求分析"></a>6.1  需求分析</h4><p><img src="image-20200522114313070.png" alt=""></p><h4 id="6-2-代码实现"><a href="#6-2-代码实现" class="headerlink" title="6.2 代码实现"></a>6.2 代码实现</h4><ul><li><p>cart.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/OrderServlet?action=orderInfo"</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/OrderServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    AddressService addressService = (AddressService) BeanFactory.getBean(<span class="string">"addressService"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">XXX</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 商品结算</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">orderInfo</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.获取session中user</span></span><br><span class="line">        User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">        <span class="comment">// 2.查询收货地址</span></span><br><span class="line">        List&lt;Address&gt; addressList = addressService.findByUid(currentUser.getUid());</span><br><span class="line">        <span class="comment">// 3.查询cart</span></span><br><span class="line">        Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">        <span class="comment">// 4.设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"addressList"</span>, addressList);</span><br><span class="line">        req.setAttribute(<span class="string">"cart"</span>, cart);</span><br><span class="line">        <span class="comment">// 5.转发到 order_info</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/order_info.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>order_info.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/webbase.css"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/pages-getOrderInfo.css"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;title&gt;结算页&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"header.jsp"</span> %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container-fluid"</span>&gt;</span><br><span class="line">      &lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/OrderServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"createOrder"</span>&gt;</span><br><span class="line">        &lt;!-- 头部 end --&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"cart py-container"</span>&gt;</span><br><span class="line">          &lt;!--主内容--&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout py-container"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-tit"</span>&gt;</span><br><span class="line"></span><br><span class="line">              &lt;h4 style="font-weight: bold"&gt;填写并核对订单信息&lt;/h4&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkout-steps"</span>&gt;</span><br><span class="line">              &lt;!--收件人信息--&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-tit"</span>&gt;</span><br><span class="line">                &lt;h5&gt;收件人信息&lt;/h5&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-cont"</span>&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"addressInfo"</span>&gt;</span><br><span class="line">                  &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"addr-detail"</span>&gt;</span><br><span class="line">                    &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"addr-item"</span>&gt;</span><br><span class="line"></span><br><span class="line">                      &lt;div&gt;</span><br><span class="line">                        &lt;c:forEach items=<span class="string">"$&#123;addressList&#125;"</span> <span class="keyword">var</span>=<span class="string">"address"</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"con address"</span>&gt;</span><br><span class="line">                            &lt;input type="radio" name="addressId" value="$&#123;address.contact&#125;,$&#123;address.address&#125;,$&#123;address.telephone&#125;" &lt;c:if test="$&#123;address.isdefault == 1&#125;"&gt;checked="checked"&lt;/c:if&gt;&gt; $&#123;address.contact&#125;</span><br><span class="line">                          $&#123;address.address&#125; &lt;span&gt;$&#123;address.telephone&#125;&lt;/span&gt;&lt;/div&gt;</span><br><span class="line">                        &lt;/c:forEach&gt;</span><br><span class="line">                      &lt;%--                                        &lt;a href=<span class="string">"home_address.jsp"</span> data-toggle=<span class="string">"modal"</span> name=<span class="string">"#addressModel"</span> data-keyboard=<span class="string">"false"</span>--%&gt;</span><br><span class="line">                      &lt;%--                                           class="sui-btn  btn-info add-new"&gt;添加新地址&lt;/a&gt;--%&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                  &lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="hr"&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class="hr"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;!--支付和送货--&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"payshipInfo"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-tit"</span>&gt;</span><br><span class="line">              &lt;h5&gt;支付方式&lt;/h5&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-cont"</span>&gt;</span><br><span class="line">              &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"payType"</span>&gt;</span><br><span class="line">                &lt;li class="selected"&gt;微信付款&lt;/li&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="hr"&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-tit"</span>&gt;</span><br><span class="line">              &lt;h5&gt;送货清单&lt;/h5&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"step-cont"</span>&gt;</span><br><span class="line">              &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"send-detail"</span>&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"sendGoods"</span>&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;c:forEach items=<span class="string">"$&#123;cart.cartItemMap&#125;"</span> <span class="keyword">var</span>=<span class="string">"entry"</span>&gt;</span><br><span class="line"></span><br><span class="line">                      &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-g"</span>&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-1-6"</span>&gt;</span><br><span class="line">                          &lt;span&gt;&lt;img src="$&#123;entry.value.route.rimage&#125;"/&gt;&lt;/span&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-7-12"</span>&gt;</span><br><span class="line">                          &lt;div class="desc"&gt;$&#123;entry.value.route.rname&#125;&lt;/div&gt;</span><br><span class="line">                          &lt;div class="seven"&gt;7天无理由退货&lt;/div&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-1-12"</span>&gt;</span><br><span class="line">                          &lt;div class="price"&gt;￥$&#123;entry.value.subTotal&#125;&lt;/div&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-1-12"</span>&gt;</span><br><span class="line">                          &lt;div class="num"&gt;X $&#123;entry.value.num&#125;&lt;/div&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"yui3-u-1-12"</span>&gt;</span><br><span class="line">                          &lt;div class="exit"&gt;有货&lt;/div&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                      &lt;/ul&gt;</span><br><span class="line">                    &lt;/c:forEach&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;/li&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class="hr"&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"clearfix trade"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"fc-price"</span>&gt;</span><br><span class="line">          &lt;span class="number"&gt;$&#123;cart.cartNum&#125;&lt;/span&gt;件商品，应付金额:　&lt;span class="price"&gt;¥ $&#123;cart.cartTotal&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"submit"</span>&gt;</span><br><span class="line">        &lt;button class="sui-btn btn-danger btn-xlarge"&gt;提交订单&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;!-- 底部栏位 --&gt;</span><br><span class="line">&lt;!--引入尾部--&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">"footer.jsp"</span> %&gt;</span><br><span class="line">&lt;script src="js/getOrderInfo.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="七-生成订单"><a href="#七-生成订单" class="headerlink" title="七.生成订单"></a>七.生成订单</h1><h4 id="7-1-需求分析"><a href="#7-1-需求分析" class="headerlink" title="7.1 需求分析"></a>7.1 需求分析</h4><ul><li><p>数据关系</p><p><img src="image-20200522141400811.png" alt=""></p></li><li><p>流程图</p><p><img src="image-20200522142115937.png" alt=""></p></li></ul><h4 id="7-2-代码实现"><a href="#7-2-代码实现" class="headerlink" title="7.2 代码实现"></a>7.2 代码实现</h4><ul><li><p>order_info.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/OrderServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"createOrder"</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/OrderServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  AddressService addressService = (AddressService) BeanFactory.getBean(<span class="string">"addressService"</span>);</span><br><span class="line"></span><br><span class="line">  OrderService orderService = (OrderService) BeanFactory.getBean(<span class="string">"orderService"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">createOrder</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    Date orderDate = <span class="keyword">new</span> Date();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.接收请求参数</span></span><br><span class="line">    String addressId = req.getParameter(<span class="string">"addressId"</span>);</span><br><span class="line">    <span class="comment">// 前端数据分割，分别为：收货人，收货地址，收货电话</span></span><br><span class="line">    String[] addressArray = addressId.split(<span class="string">","</span>);</span><br><span class="line">    <span class="comment">// 2.获取session中的user</span></span><br><span class="line">    User currentUser = (User) req.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">    <span class="comment">// 3.获取redis中cart</span></span><br><span class="line">    Cart cart = CartUtils.getCartForRedis(currentUser);</span><br><span class="line">    <span class="comment">// 4.创建订单，设置基础数据</span></span><br><span class="line">    Order order = <span class="keyword">new</span> Order();</span><br><span class="line">    <span class="comment">// 订单号</span></span><br><span class="line">    order.setOid(IdUtil.simpleUUID());</span><br><span class="line">    <span class="comment">// 下单时间</span></span><br><span class="line">    order.setOrdertime(orderDate);</span><br><span class="line">    <span class="comment">// 订单总金额</span></span><br><span class="line">    order.setTotal(cart.getCartTotal());</span><br><span class="line">    <span class="comment">// 未支付订单</span></span><br><span class="line">    order.setState(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">// 收货人</span></span><br><span class="line">    order.setContact(addressArray[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">// 收货地址</span></span><br><span class="line">    order.setAddress(addressArray[<span class="number">1</span>]);</span><br><span class="line">    <span class="comment">// 收货电话</span></span><br><span class="line">    order.setTelephone(addressArray[<span class="number">2</span>]);</span><br><span class="line">    <span class="comment">// 为了简化所属用户操作，我们可以直接设置uid</span></span><br><span class="line">    order.setUid(currentUser.getUid());</span><br><span class="line">    <span class="comment">// 5.遍历购物项，创建订单项</span></span><br><span class="line">    List&lt;OrderItem&gt; orderItemList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    OrderItem orderItem = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 遍历购物项</span></span><br><span class="line">    <span class="keyword">for</span> (CartItem cartItem : cart.getCartItemMap().values()) &#123;</span><br><span class="line">      <span class="comment">// 创建订单项</span></span><br><span class="line">      orderItem = <span class="keyword">new</span> OrderItem();</span><br><span class="line">      <span class="comment">// 下单时间</span></span><br><span class="line">      orderItem.setItemtime(orderDate);</span><br><span class="line">      <span class="comment">// 未支付</span></span><br><span class="line">      orderItem.setState(<span class="number">0</span>);</span><br><span class="line">      <span class="comment">// 数量</span></span><br><span class="line">      orderItem.setNum(cartItem.getNum());</span><br><span class="line">      <span class="comment">// 商品小计</span></span><br><span class="line">      orderItem.setSubtotal(cartItem.getSubTotal());</span><br><span class="line">      <span class="comment">// 商品rid ，简化数据库操作</span></span><br><span class="line">      orderItem.setRid(cartItem.getRoute().getRid());</span><br><span class="line">      <span class="comment">// 订单oid，简化数据操作</span></span><br><span class="line">      orderItem.setOid(order.getOid());</span><br><span class="line">      <span class="comment">// 添加到订单项集合中</span></span><br><span class="line">      orderItemList.add(orderItem);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将订单项集合关联到订单实体中</span></span><br><span class="line">    order.setOrderItemList(orderItemList);</span><br><span class="line">    <span class="comment">// 6.调用service，保存到数据库</span></span><br><span class="line">    orderService.save(order);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 7.清空购物车</span></span><br><span class="line">    Jedis jedis = JedisUtils.getJedis();</span><br><span class="line">    jedis.del(<span class="string">"cart_"</span>+currentUser.getUsername());</span><br><span class="line">    jedis.close();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 8.重定向支付页面</span></span><br><span class="line">    resp.sendRedirect(req.getContextPath()+<span class="string">"/pay.jsp"</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderServiceImpl</span> <span class="keyword">implements</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line"></span><br><span class="line">    OrderDao orderDao = sqlSession.getMapper(OrderDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    OrderItemDao orderItemDao = sqlSession.getMapper(OrderItemDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">// 保存订单</span></span><br><span class="line">    orderDao.save(order);</span><br><span class="line">    <span class="comment">// 保存订单项</span></span><br><span class="line">    <span class="keyword">for</span> (OrderItem orderItem : order.getOrderItemList()) &#123;</span><br><span class="line">      orderItemDao.save(orderItem);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Order order)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">    INSERT INTO tab_order(oid,ordertime,total,state,address,contact,telephone,uid)</span><br><span class="line">    VALUES (#&#123;oid&#125;,#&#123;ordertime&#125;,#&#123;total&#125;,#&#123;state&#125;,#&#123;address&#125;,#&#123;contact&#125;,#&#123;telephone&#125;,#&#123;uid&#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>OrderItemDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderItemDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(OrderItem orderItem)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderItemDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderItemDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">    INSERT INTO tab_orderitem(itemtime,state,num,subtotal,rid,oid)</span><br><span class="line">    VALUES (#&#123;itemtime&#125;,#&#123;state&#125;,#&#123;num&#125;,#&#123;subtotal&#125;,#&#123;rid&#125;,#&#123;oid&#125;)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"orderService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.OrderServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 购物流程分析</strong></p><p><strong>### 1. 浏览商品</strong></p><p><strong>### 2. 加入购物车</strong></p><p><strong>### 3. 查看购物车</strong></p><p><strong>### 4. 商品结算（收货地址、支付方式、商品清单）</strong></p><p><strong>### 5. 生成订单（支付状态：未支付0、已支付1）</strong></p><p><strong>### 6. 支付（微信、支付宝）</strong></p><p><strong>### 7. 支付结果</strong></p><p><strong>## 二 购物车功能分析</strong></p><p><strong>### CartItem对象</strong></p><p><strong>### Cart对象</strong></p><p><strong>### 购物车工具类</strong></p><p><strong>## 三 加入购物车</strong></p><p><strong>### 前端</strong></p><p>- 判断用户是否登录</p><p>​    - 未登录，弹出登录模态框</p><p>​    - 已登录，发送添加购物车请求</p><p><strong>### 后端</strong></p><p>- 使用redis购物车判断是否有此购物项</p><p>​    - 已存在，追加数量</p><p>​    - 不存在，创建购物项对象</p><p><strong>## 四 查看购物车</strong></p><p><strong>## 五 删除购物车</strong></p><p><strong>## 六 商品结算</strong></p><p><strong>### 查询当前用户的收货地址列表</strong></p><p><strong>### 查询购物车</strong></p><p><strong>## 七 生成订单</strong></p><p><strong>### 前端</strong></p><p>- 提交收货地址信息</p><p><strong>### 后端</strong></p><p>- 封装订单</p><p>​    - 封装订单项集合</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;购物车&lt;/li&gt;
&lt;li&gt;订单&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>大话重构</title>
    <link href="http://yoursite.com/2020/05/21/%E5%A4%A7%E8%AF%9D%E9%87%8D%E6%9E%84/"/>
    <id>http://yoursite.com/2020/05/21/大话重构/</id>
    <published>2020-05-21T09:01:48.000Z</published>
    <updated>2020-05-21T09:19:40.084Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-重构：改变既有代码的一剂良药"><a href="#一-重构：改变既有代码的一剂良药" class="headerlink" title="一.重构：改变既有代码的一剂良药"></a>一.重构：改变既有代码的一剂良药</h1><ul><li><p>什么是系统重构</p><p>系统重构就是不改变外部行为的基础上，改变软件的内部结构，使其易于阅读、维护、变更。</p></li><li><p>修改软件的四种动机</p><ul><li>增加新功能，改bug</li><li>改善原有程序结构</li><li>优化原有系统性能</li></ul><p>要提高软件内部质量，动机就是改善原有程序结构。</p></li></ul><h1 id="二-重构方法工具箱"><a href="#二-重构方法工具箱" class="headerlink" title="二.重构方法工具箱"></a>二.重构方法工具箱</h1><p>2.1 重构是一系列登录变换——第一次HelloWorld重构</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;一-重构：改变既有代码的一剂良药&quot;&gt;&lt;a href=&quot;#一-重构：改变既有代码的一剂良药&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十九）</title>
    <link href="http://yoursite.com/2020/05/21/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B9%9D%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/21/就业班学习笔记（五十九）/</id>
    <published>2020-05-21T01:04:35.000Z</published>
    <updated>2020-05-21T17:04:38.041Z</updated>
    
    <content type="html"><![CDATA[<ul><li>线路模块分页查询</li><li>百度分页栏</li><li>搜索条件分页查询</li><li>线路详情提示</li></ul><a id="more"></a><h1 id="一-旅游线路分页功能"><a href="#一-旅游线路分页功能" class="headerlink" title="一.旅游线路分页功能"></a>一.旅游线路分页功能</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><p><img src="image-20200521092722911.png" alt=""></p><p><img src="image-20200521094346450.png" alt=""></p><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><ul><li><p>PageBean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页对象</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageBean</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">//总记录数</span></span><br><span class="line">    <span class="keyword">private</span> Integer totalCount;</span><br><span class="line">    <span class="comment">//总页数</span></span><br><span class="line">    <span class="keyword">private</span> Integer totalPage;</span><br><span class="line">    <span class="comment">//结果集</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;E&gt; list;</span><br><span class="line">    <span class="comment">//当前页</span></span><br><span class="line">    <span class="keyword">private</span> Integer currentPage;</span><br><span class="line">    <span class="comment">//每页个数</span></span><br><span class="line">    <span class="keyword">private</span> Integer pageSize;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 头部 end --&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  $(function () &#123;</span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/CategoryServlet?action=findAll'</span>;</span><br><span class="line">    $.get(url, function (resp) &#123;</span><br><span class="line">      <span class="keyword">for</span> (let c of resp) &#123;</span><br><span class="line">        $(<span class="string">'#categoryUI'</span>).append(<span class="string">'&lt;li&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid='</span> + c.cid + <span class="string">'&amp;currentPage=1&amp;pageSize=10"&gt;'</span> + c.cname + <span class="string">'&lt;/a&gt;&lt;/li&gt;'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>RouteServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RouteServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RouteService routeService = (RouteService) BeanFactory.getBean(<span class="string">"routeService"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPage</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String currentPageStr = req.getParameter(<span class="string">"currentPage"</span>);</span><br><span class="line">        String pageSizeStr = req.getParameter(<span class="string">"pageSize"</span>);</span><br><span class="line">        String cid = req.getParameter(<span class="string">"cid"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.类型转换</span></span><br><span class="line">        <span class="keyword">if</span> (currentPageStr == <span class="keyword">null</span> || currentPageStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            currentPageStr = <span class="string">"1"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> currentPage = Integer.parseInt(currentPageStr);</span><br><span class="line">        <span class="keyword">if</span> (pageSizeStr == <span class="keyword">null</span> || pageSizeStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            pageSizeStr = <span class="string">"10"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> pageSize = Integer.parseInt(pageSizeStr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.调用service分页查询</span></span><br><span class="line">        PageBean&lt;Route&gt; pb=routeService.findByPage(currentPage,pageSize,cid);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.将分页对象设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"pb"</span>,pb);</span><br><span class="line">        req.setAttribute(<span class="string">"cid"</span>,cid);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.转发到 route_list.jsp</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"route_list.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServiceImpl</span> <span class="keyword">implements</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    RouteDao routeDao = sqlSession.getMapper(RouteDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    PageBean&lt;Route&gt; pageBean = <span class="keyword">new</span> PageBean&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    pageBean.setCurrentPage(currentPage);</span><br><span class="line">    pageBean.setPageSize(pageSize);</span><br><span class="line"></span><br><span class="line">    Integer totalCount = routeDao.findCount(cid);</span><br><span class="line">    pageBean.setTotalCount(totalCount);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> totalPage = (<span class="keyword">int</span>) Math.ceil(totalCount * <span class="number">1.0</span> / pageSize);</span><br><span class="line">    pageBean.setTotalPage(totalPage);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> index = (currentPage - <span class="number">1</span>) * pageSize;</span><br><span class="line"></span><br><span class="line">    List&lt;Route&gt; routeList = routeDao.findList(index,pageSize,cid);</span><br><span class="line">    pageBean.setList(routeList);</span><br><span class="line"></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> pageBean;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteDao</span> </span>&#123;</span><br><span class="line">  <span class="function">Integer <span class="title">findCount</span><span class="params">(String cid)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">List&lt;Route&gt; <span class="title">findList</span><span class="params">(@Param(<span class="string">"index"</span>)</span> <span class="keyword">int</span> index, @<span class="title">Param</span><span class="params">(<span class="string">"pageSize"</span>)</span> <span class="keyword">int</span> pageSize, @<span class="title">Param</span><span class="params">(<span class="string">"cid"</span>)</span> String cid)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RouteDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findCount"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        SELECT COUNT(*) FROM tab_route WHERE cid = #&#123;cid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findList"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Route"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_route WHERE cid = #&#123;cid&#125; limit #&#123;index&#125;,#&#123;pageSize&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"routeService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.RouteServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>route_list.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;线路列表&lt;/title&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/css/search.css"</span>&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"header.jsp"</span> %&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page_one"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"contant"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"crumbs"</span>&gt;</span><br><span class="line">          &lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/search.png"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">          &lt;p&gt;黑马旅行&gt;&lt;span&gt;搜索结果&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"xinxi clearfix"</span>&gt;</span><br><span class="line">          &lt;%--线路列表 start--%&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"header"</span>&gt;</span><br><span class="line">              &lt;span&gt;商品信息&lt;/span&gt;</span><br><span class="line">              &lt;span class="jg"&gt;价格&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">              &lt;c:forEach items=<span class="string">"$&#123;pb.list&#125;"</span> <span class="keyword">var</span>=<span class="string">"route"</span>&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"img"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;route.rimage&#125;"</span></span><br><span class="line">                                        width="300px" alt=""&gt;&lt;/div&gt;</span><br><span class="line">                  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"text1"</span>&gt;</span><br><span class="line">                    &lt;p&gt;$&#123;route.rname&#125;&lt;/p&gt;</span><br><span class="line">                    &lt;br/&gt;</span><br><span class="line">                    &lt;p&gt;$&#123;route.routeIntroduce&#125;&lt;/p&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"price"</span>&gt;</span><br><span class="line">                    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"price_num"</span>&gt;</span><br><span class="line">                      &lt;span&gt;&amp;yen;&lt;/span&gt;</span><br><span class="line">                      &lt;span&gt;$&#123;route.price&#125;&lt;/span&gt;</span><br><span class="line">                      &lt;span&gt;起&lt;/span&gt;</span><br><span class="line">                    &lt;/p&gt;</span><br><span class="line">                    &lt;p&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/route_detail.jsp"&gt;查看详情&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">              &lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page_num_inf"</span>&gt;</span><br><span class="line">              &lt;i&gt;&lt;/i&gt; 共</span><br><span class="line">              &lt;span&gt;12&lt;/span&gt;页&lt;span&gt;132&lt;/span&gt;条</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"pageNum"</span>&gt;</span><br><span class="line">              &lt;ul&gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage&gt;1&#125;"</span>&gt;</span><br><span class="line">                  &lt;li&gt;</span><br><span class="line">                    &lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=1"&gt;首页&lt;/a&gt;</span><br><span class="line">                  &lt;/li&gt;</span><br><span class="line">                  &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"threeword"</span>&gt;&lt;a</span><br><span class="line">                                           href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.currentPage-1&#125;"&gt;上一页&lt;/a&gt;</span><br><span class="line">                  &lt;/li&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                &lt;c:forEach begin=<span class="string">"1"</span> end=<span class="string">"$&#123;pb.totalPage&#125;"</span> <span class="keyword">var</span>=<span class="string">"page"</span>&gt;</span><br><span class="line">                  &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page == pb.currentPage&#125;"</span>&gt;</span><br><span class="line">                    &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"curPage"</span>&gt;&lt;a</span><br><span class="line">                                           href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;page&#125;"&gt;$&#123;page&#125;&lt;/a&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                  &lt;/c:if&gt;</span><br><span class="line">                  &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page != pb.currentPage&#125;"</span>&gt;</span><br><span class="line">                    &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"curPage"</span>&gt;&lt;a</span><br><span class="line">                                           href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;page&#125;"&gt;$&#123;page&#125;&lt;/a&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                  &lt;/c:if&gt;</span><br><span class="line">                &lt;/c:forEach&gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage &lt; pb.totalPage&#125;"</span>&gt;</span><br><span class="line">                  &lt;li class="threeword"&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.currentPage+1&#125;"&gt;下一页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                  &lt;li class="threeword"&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.totalPage&#125;"&gt;末页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;%--线路列表--%&gt;</span><br><span class="line">          &lt;%--热门推荐 start--%&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"top"</span>&gt;</span><br><span class="line">              &lt;div class="hot"&gt;HOT&lt;/div&gt;</span><br><span class="line">              &lt;span&gt;热门推荐&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"left"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/04-search_09.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"right"</span>&gt;</span><br><span class="line">                  &lt;p&gt;清远新银盏温泉度假村酒店/自由行套...&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;网付价&lt;span&gt;&amp;yen;&lt;span&gt;899&lt;/span&gt;起&lt;/span&gt;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;%--热门推荐 end--%&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--引入头部--&gt;</span><br><span class="line">    &lt;%<span class="meta">@include</span> file=<span class="string">"footer.jsp"</span> %&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-百度分页栏"><a href="#1-3-百度分页栏" class="headerlink" title="1.3 百度分页栏"></a>1.3 百度分页栏</h4><ul><li><p>修改PageBean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageBean</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">  <span class="comment">//总记录数</span></span><br><span class="line">  <span class="keyword">private</span> Integer totalCount;</span><br><span class="line">  <span class="comment">//总页数</span></span><br><span class="line">  <span class="keyword">private</span> Integer totalPage;</span><br><span class="line">  <span class="comment">//结果集</span></span><br><span class="line">  <span class="keyword">private</span> List&lt;E&gt; list;</span><br><span class="line">  <span class="comment">//当前页</span></span><br><span class="line">  <span class="keyword">private</span> Integer currentPage;</span><br><span class="line">  <span class="comment">//每页个数</span></span><br><span class="line">  <span class="keyword">private</span> Integer pageSize;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//起始值</span></span><br><span class="line">  <span class="keyword">private</span> Integer begin;</span><br><span class="line">  <span class="comment">//结束值</span></span><br><span class="line">  <span class="keyword">private</span> Integer end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Integer <span class="title">getBegin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 先去调用计算的方法</span></span><br><span class="line">    calculateBeginToEnd();</span><br><span class="line">    <span class="keyword">return</span> begin;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBegin</span><span class="params">(Integer begin)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.begin = begin;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 计算方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">calculateBeginToEnd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 不足10个页码</span></span><br><span class="line">    <span class="keyword">if</span> (totalPage &lt; <span class="number">10</span>) &#123;</span><br><span class="line">      begin = <span class="number">1</span>;</span><br><span class="line">      end = totalPage;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 超过10个页码</span></span><br><span class="line">      <span class="comment">// 前五后四规则</span></span><br><span class="line">      begin = currentPage - <span class="number">5</span>;</span><br><span class="line">      end = currentPage + <span class="number">4</span>;</span><br><span class="line">      <span class="comment">// 修正当起始值小于1的情况</span></span><br><span class="line">      <span class="keyword">if</span> (begin &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        begin = <span class="number">1</span>;</span><br><span class="line">        end = begin + <span class="number">9</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 修正结束值大于总页数的情况</span></span><br><span class="line">      <span class="keyword">if</span> (end &gt; totalPage) &#123;</span><br><span class="line">        end = totalPage;</span><br><span class="line">        begin = end - <span class="number">9</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改route_list.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;c:forEach begin=<span class="string">"$&#123;pb.begin&#125;"</span> end=<span class="string">"$&#123;pb.end&#125;"</span> <span class="keyword">var</span>=<span class="string">"page"</span>&gt;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">  </span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-搜索旅游线路分页功能"><a href="#二-搜索旅游线路分页功能" class="headerlink" title="二.搜索旅游线路分页功能"></a>二.搜索旅游线路分页功能</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><p><img src="image-20200521113719151.png" alt=""></p><h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"search"</span>&gt;</span><br><span class="line">  &lt;input id=<span class="string">"rname"</span> name=<span class="string">"rname"</span> type=<span class="string">"text"</span> placeholder=<span class="string">"请输入路线名称"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"search_input"</span> value=<span class="string">"$&#123;rname&#125;"</span></span><br><span class="line">         autocomplete=<span class="string">"off"</span>&gt;</span><br><span class="line">  &lt;a href="javascript:void(0);" onclick="searchClick()" class="search-button"&gt;搜索&lt;/a&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="function">function <span class="title">searchClick</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">// 获取搜索框value的属性值</span></span><br><span class="line">      let rname = $(<span class="string">'#rname'</span>).val();</span><br><span class="line">      <span class="comment">// 使用js方式发送请求</span></span><br><span class="line">      location.href=<span class="string">'$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;rname='</span>+rname;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>RouteServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RouteServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> RouteService routeService = (RouteService) BeanFactory.getBean(<span class="string">"routeService"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 分页查询</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPage</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.接收请求参数</span></span><br><span class="line">    String currentPageStr = req.getParameter(<span class="string">"currentPage"</span>);</span><br><span class="line">    String pageSizeStr = req.getParameter(<span class="string">"pageSize"</span>);</span><br><span class="line">    <span class="comment">// 分类cid</span></span><br><span class="line">    String cid = req.getParameter(<span class="string">"cid"</span>);</span><br><span class="line">    <span class="comment">// 线路搜索关键字</span></span><br><span class="line">    String rname = req.getParameter(<span class="string">"rname"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.类型转换</span></span><br><span class="line">    <span class="keyword">if</span> (currentPageStr == <span class="keyword">null</span> || currentPageStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">      currentPageStr = <span class="string">"1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> currentPage = Integer.parseInt(currentPageStr);</span><br><span class="line">    <span class="keyword">if</span> (pageSizeStr == <span class="keyword">null</span> || pageSizeStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">      pageSizeStr = <span class="string">"10"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> pageSize = Integer.parseInt(pageSizeStr);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.调用service分页查询</span></span><br><span class="line">    PageBean&lt;Route&gt; pb=routeService.findByPage(currentPage,pageSize,cid,rname);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.将分页对象设置到request域</span></span><br><span class="line">    req.setAttribute(<span class="string">"pb"</span>,pb);</span><br><span class="line">    <span class="comment">// 回显分类id</span></span><br><span class="line">    req.setAttribute(<span class="string">"cid"</span>,cid);</span><br><span class="line">    <span class="comment">// 回显搜索关键字</span></span><br><span class="line">    req.setAttribute(<span class="string">"rname"</span>,rname);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5.转发到 route_list.jsp</span></span><br><span class="line">    req.getRequestDispatcher(<span class="string">"route_list.jsp"</span>).forward(req,resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 无搜索条件分页查询</span></span><br><span class="line">    <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有搜索条件分页查询</span></span><br><span class="line">    <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid, String rname)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServiceImpl</span> <span class="keyword">implements</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        RouteDao routeDao = sqlSession.getMapper(RouteDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        PageBean&lt;Route&gt; pageBean = <span class="keyword">new</span> PageBean&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pageBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid, String rname)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建dao代理对象</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        RouteDao routeDao = sqlSession.getMapper(RouteDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 1.创建PageBean</span></span><br><span class="line">        PageBean&lt;Route&gt; pageBean = <span class="keyword">new</span> PageBean&lt;&gt;();</span><br><span class="line">        <span class="comment">// 2.封装当前页和每页个数</span></span><br><span class="line">        pageBean.setCurrentPage(currentPage);</span><br><span class="line">        pageBean.setPageSize(pageSize);</span><br><span class="line">        <span class="comment">// 3.调用dao查询总记录数，封装</span></span><br><span class="line">        Integer totalCount = routeDao.findCount(cid,rname);</span><br><span class="line">        pageBean.setTotalCount(totalCount);</span><br><span class="line">        <span class="comment">// 4.计算总页数，封装</span></span><br><span class="line">        <span class="keyword">int</span> totalPage = (<span class="keyword">int</span>) Math.ceil(totalCount * <span class="number">1.0</span> / pageSize);</span><br><span class="line">        pageBean.setTotalPage(totalPage);</span><br><span class="line">        <span class="comment">// 5.计算开始索引</span></span><br><span class="line">        <span class="keyword">int</span> index = (currentPage - <span class="number">1</span>) * pageSize;</span><br><span class="line">        <span class="comment">// 6.调用dao查询结果集，封装</span></span><br><span class="line">        List&lt;Route&gt; routeList = routeDao.findList(index,pageSize,cid,rname);</span><br><span class="line">        pageBean.setList(routeList);</span><br><span class="line">        <span class="comment">// 释放资源</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="comment">// 7.返回分页对象</span></span><br><span class="line">        <span class="keyword">return</span> pageBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//MyBatis框架Dao层禁止使用方法重载，否则会导致数据查询不正确</span></span><br><span class="line"></span><br><span class="line">  <span class="function">Integer <span class="title">findCount</span><span class="params">(@Param(<span class="string">"cid"</span>)</span> String cid, @<span class="title">Param</span><span class="params">(<span class="string">"rname"</span>)</span> String rname)</span>;</span><br><span class="line">  <span class="comment">//    Integer findCount(String cid);</span></span><br><span class="line"></span><br><span class="line">  <span class="function">List&lt;Route&gt; <span class="title">findList</span><span class="params">(@Param(<span class="string">"index"</span>)</span> <span class="keyword">int</span> index, @<span class="title">Param</span><span class="params">(<span class="string">"pageSize"</span>)</span> <span class="keyword">int</span> pageSize, @<span class="title">Param</span><span class="params">(<span class="string">"cid"</span>)</span> String cid, @<span class="title">Param</span><span class="params">(<span class="string">"rname"</span>)</span> String rname)</span>;</span><br><span class="line">  <span class="comment">//    List&lt;Route&gt; findList(@Param("index") int index, @Param("pageSize") int pageSize, @Param("cid") String cid);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RouteDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RouteDao"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findCount"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">    SELECT COUNT(*) FROM tab_route</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"cid != null and cid != ''"</span>&gt;</span></span><br><span class="line">        and cid=#&#123;cid&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"rname != null and rname != ''"</span>&gt;</span></span><br><span class="line">        and rname like concat(concat('%',#&#123;rname&#125;),'%')</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findList"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Route"</span>&gt;</span></span><br><span class="line">    SELECT * FROM tab_route</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"cid != null and cid != ''"</span>&gt;</span></span><br><span class="line">        and cid=#&#123;cid&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"rname != null and rname != ''"</span>&gt;</span></span><br><span class="line">        and rname like concat(concat('%',#&#123;rname&#125;),'%')</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    limit #&#123;index&#125;,#&#123;pageSize&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>route_list.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"page_num_inf"</span>&gt;</span><br><span class="line">  &lt;i&gt;&lt;/i&gt; 共</span><br><span class="line">  &lt;span&gt;12&lt;/span&gt;页&lt;span&gt;132&lt;/span&gt;条</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"pageNum"</span>&gt;</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage&gt;1&#125;"</span>&gt;</span><br><span class="line">      &lt;li&gt;</span><br><span class="line">        &lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=1&amp;rname=$&#123;rname&#125;"&gt;首页&lt;/a&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"threeword"</span>&gt;&lt;a</span><br><span class="line">                               href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.currentPage-1&#125;&amp;rname=$&#123;rname&#125;"&gt;上一页&lt;/a&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/c:if&gt;</span><br><span class="line">    &lt;c:forEach begin=<span class="string">"$&#123;pb.begin&#125;"</span> end=<span class="string">"$&#123;pb.end&#125;"</span> <span class="keyword">var</span>=<span class="string">"page"</span>&gt;</span><br><span class="line">      &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page == pb.currentPage&#125;"</span>&gt;</span><br><span class="line">        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"curPage"</span>&gt;&lt;a</span><br><span class="line">                               href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;page&#125;&amp;rname=$&#123;rname&#125;"&gt;$&#123;page&#125;&lt;/a&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/c:if&gt;</span><br><span class="line">      &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page != pb.currentPage&#125;"</span>&gt;</span><br><span class="line">        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"curPage"</span>&gt;&lt;a</span><br><span class="line">                               href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;page&#125;&amp;rname=$&#123;rname&#125;"&gt;$&#123;page&#125;&lt;/a&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/c:if&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage &lt; pb.totalPage&#125;"</span>&gt;</span><br><span class="line">      &lt;li class="threeword"&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.currentPage+1&#125;&amp;rname=$&#123;rname&#125;"&gt;下一页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;li class="threeword"&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=findByPage&amp;cid=$&#123;cid&#125;&amp;currentPage=$&#123;pb.totalPage&#125;&amp;rname=$&#123;rname&#125;"&gt;末页&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/c:if&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-旅游线路详情展示功能"><a href="#三-旅游线路详情展示功能" class="headerlink" title="三.旅游线路详情展示功能"></a>三.旅游线路详情展示功能</h1><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><p><img src="image-20200521142426127.png" alt=""></p><h4 id="3-2-代码实现-使用mybatis的嵌套查询来实现"><a href="#3-2-代码实现-使用mybatis的嵌套查询来实现" class="headerlink" title="3.2 代码实现(使用mybatis的嵌套查询来实现)"></a>3.2 代码实现(使用mybatis的嵌套查询来实现)</h4><ul><li><p>Route_list.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/RouteServlet?action=routeDetail&amp;rid=$&#123;route.rid&#125;"&gt;查看详情&lt;/a&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure></li><li><p>RouteServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/RouteServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouteServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RouteService routeService = (RouteService) BeanFactory.getBean(<span class="string">"routeService"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">routeDetail</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.接收请求参数 rid</span></span><br><span class="line">        String rid = req.getParameter(<span class="string">"rid"</span>);</span><br><span class="line">        <span class="comment">// 2.调用sercie查询</span></span><br><span class="line">        Route route = routeService.findDetail(rid);</span><br><span class="line">        <span class="comment">// 3.设置到reuqest域</span></span><br><span class="line">        req.setAttribute(<span class="string">"route"</span>,route);</span><br><span class="line">        <span class="comment">// 4.转发到 route_detail.jsp</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/route_detail.jsp"</span>).forward(req,resp);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPage</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String currentPageStr = req.getParameter(<span class="string">"currentPage"</span>);</span><br><span class="line">        String pageSizeStr = req.getParameter(<span class="string">"pageSize"</span>);</span><br><span class="line">        <span class="comment">// 分类cid</span></span><br><span class="line">        String cid = req.getParameter(<span class="string">"cid"</span>);</span><br><span class="line">        <span class="comment">// 线路搜索关键字</span></span><br><span class="line">        String rname = req.getParameter(<span class="string">"rname"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.类型转换</span></span><br><span class="line">        <span class="keyword">if</span> (currentPageStr == <span class="keyword">null</span> || currentPageStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            currentPageStr = <span class="string">"1"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> currentPage = Integer.parseInt(currentPageStr);</span><br><span class="line">        <span class="keyword">if</span> (pageSizeStr == <span class="keyword">null</span> || pageSizeStr.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            pageSizeStr = <span class="string">"10"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> pageSize = Integer.parseInt(pageSizeStr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.调用service分页查询</span></span><br><span class="line">        PageBean&lt;Route&gt; pb=routeService.findByPage(currentPage,pageSize,cid,rname);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.将分页对象设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"pb"</span>,pb);</span><br><span class="line">        <span class="comment">// 回显分类id</span></span><br><span class="line">        req.setAttribute(<span class="string">"cid"</span>,cid);</span><br><span class="line">        <span class="comment">// 回显搜索关键字</span></span><br><span class="line">        req.setAttribute(<span class="string">"rname"</span>,rname);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.转发到 route_list.jsp</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/route_list.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteService</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 无搜索条件分页查询</span></span><br><span class="line">    <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有搜索条件分页查询</span></span><br><span class="line">    <span class="function">PageBean&lt;Route&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage, <span class="keyword">int</span> pageSize, String cid, String rname)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Route <span class="title">findDetail</span><span class="params">(String rid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//MyBatis框架Dao层禁止使用方法重载，否则会导致数据查询不正确</span></span><br><span class="line"></span><br><span class="line">    <span class="function">Integer <span class="title">findCount</span><span class="params">(@Param(<span class="string">"cid"</span>)</span> String cid, @<span class="title">Param</span><span class="params">(<span class="string">"rname"</span>)</span> String rname)</span>;</span><br><span class="line"><span class="comment">//    Integer findCount(String cid);</span></span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Route&gt; <span class="title">findList</span><span class="params">(@Param(<span class="string">"index"</span>)</span> <span class="keyword">int</span> index, @<span class="title">Param</span><span class="params">(<span class="string">"pageSize"</span>)</span> <span class="keyword">int</span> pageSize, @<span class="title">Param</span><span class="params">(<span class="string">"cid"</span>)</span> String cid, @<span class="title">Param</span><span class="params">(<span class="string">"rname"</span>)</span> String rname)</span>;</span><br><span class="line"><span class="comment">//    List&lt;Route&gt; findList(@Param("index") int index, @Param("pageSize") int pageSize, @Param("cid") String cid);</span></span><br><span class="line"></span><br><span class="line">    <span class="function">Route <span class="title">findByRidWithAll</span><span class="params">(String rid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RouteDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findCount"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        SELECT COUNT(*) FROM tab_route</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"cid != null and cid != ''"</span>&gt;</span></span><br><span class="line">                and cid=#&#123;cid&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"rname != null and rname != ''"</span>&gt;</span></span><br><span class="line">                and rname like concat(concat('%',#&#123;rname&#125;),'%')</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findList"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Route"</span>&gt;</span></span><br><span class="line">            SELECT * FROM tab_route</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"cid != null and cid != ''"</span>&gt;</span></span><br><span class="line">                and cid=#&#123;cid&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"rname != null and rname != ''"</span>&gt;</span></span><br><span class="line">                and rname like concat(concat('%',#&#123;rname&#125;),'%')</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">        limit #&#123;index&#125;,#&#123;pageSize&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"routeWithAllMap"</span> <span class="attr">type</span>=<span class="string">"com.itheima.domain.Route"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"rid"</span> <span class="attr">property</span>=<span class="string">"rid"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"rname"</span> <span class="attr">property</span>=<span class="string">"rname"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"price"</span> <span class="attr">property</span>=<span class="string">"price"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"routeIntroduce"</span> <span class="attr">property</span>=<span class="string">"routeIntroduce"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"rflag"</span> <span class="attr">property</span>=<span class="string">"rflag"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"rdate"</span> <span class="attr">property</span>=<span class="string">"rdate"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"rimage"</span> <span class="attr">property</span>=<span class="string">"rimage"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一对一嵌套 分类--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"category"</span> <span class="attr">javaType</span>=<span class="string">"com.itheima.domain.Category"</span> <span class="attr">column</span>=<span class="string">"cid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.CategoryDao.findByCid"</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一对一嵌套 商家--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"seller"</span> <span class="attr">javaType</span>=<span class="string">"com.itheima.domain.Seller"</span> <span class="attr">column</span>=<span class="string">"sid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.SellerDao.findBySid"</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一对一嵌套 图册列表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"routeImgList"</span> <span class="attr">ofType</span>=<span class="string">"com.itheima.domain.RouteImg"</span> <span class="attr">column</span>=<span class="string">"rid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.RouteImgDao.findByRid"</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByRidWithAll"</span> <span class="attr">resultMap</span>=<span class="string">"routeWithAllMap"</span>&gt;</span></span><br><span class="line">        select * from tab_route where rid = #&#123;rid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CategoryDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Category&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">Category <span class="title">findByCid</span><span class="params">(Integer cid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.CategoryDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Category"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_category ORDER BY cid</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByCid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Category"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_category WHERE cid = #&#123;cid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteImgDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RouteImgDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;RouteImg&gt; <span class="title">findByRid</span><span class="params">(Integer rid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RouteImgDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RouteImgDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByRid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.RouteImg"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_route_img WHERE rid = #&#123;rid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>SellerDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SellerDao</span> </span>&#123;</span><br><span class="line">    <span class="function">Seller <span class="title">findBySid</span><span class="params">(Integer sid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>SellerDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.SellerDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findBySid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Seller"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_seller WHERE sid = #&#123;sid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>route_detail.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 详情 start --&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"wrap"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"bread_box"</span>&gt;</span><br><span class="line">    &lt;a href="index.jsp"&gt;首页&lt;/a&gt;</span><br><span class="line">    &lt;span&gt; &amp;gt;&lt;/span&gt;</span><br><span class="line">    &lt;a href="#"&gt;$&#123;route.category.cname&#125;&lt;/a&gt;&lt;span&gt; &amp;gt;&lt;/span&gt;</span><br><span class="line">    &lt;a href="#"&gt;$&#123;route.rname&#125;&lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"prosum_box"</span>&gt;</span><br><span class="line">    &lt;dl <span class="class"><span class="keyword">class</span></span>=<span class="string">"prosum_left"</span>&gt;</span><br><span class="line">      &lt;dt&gt;</span><br><span class="line">        &lt;img alt=<span class="string">""</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"big_img"</span> src=<span class="string">"$&#123;route.rimage&#125;"</span>&gt;</span><br><span class="line">      &lt;/dt&gt;</span><br><span class="line">      &lt;dd&gt;</span><br><span class="line">        &lt;a class="up_img up_img_disable"&gt;&lt;/a&gt;</span><br><span class="line">        &lt;c:forEach items=<span class="string">"$&#123;route.routeImgList&#125;"</span> <span class="keyword">var</span>=<span class="string">"routeImg"</span>&gt;</span><br><span class="line">          &lt;a title=<span class="string">""</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"little_img"</span> data-bigpic=<span class="string">"$&#123;routeImg.bigPic&#125;"</span>&gt;</span><br><span class="line">            &lt;img src=<span class="string">"$&#123;routeImg.smallPic&#125;"</span>&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">        &lt;/c:forEach&gt;</span><br><span class="line">        &lt;a class="down_img down_img_disable" style="margin-bottom: 0;"&gt;&lt;/a&gt;</span><br><span class="line">      &lt;/dd&gt;</span><br><span class="line">    &lt;/dl&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"prosum_right"</span>&gt;</span><br><span class="line">      &lt;p class="pros_title"&gt;$&#123;route.rname&#125;&lt;/p&gt;</span><br><span class="line">      &lt;p class="hot"&gt;$&#123;route.routeIntroduce&#125;&lt;/p&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"pros_other"</span>&gt;</span><br><span class="line">        &lt;p&gt;经营商家  ：$&#123;route.seller.sname&#125;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;咨询电话 : $&#123;route.seller.consphone&#125;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;地址 ： $&#123;route.seller.address&#125;&lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 旅游线路分页功能</strong></p><p><strong>### 需求分析</strong></p><p>- 表关系</p><p>- 整体流程</p><p>- 后端代码流程</p><p>- 前端EL表达式</p><p><strong>### 百度分页</strong></p><p><strong>## 二 搜索旅游线路分页功能</strong></p><p><strong>### 需求分析</strong></p><p><strong>## 三 旅游线路详情展示功能</strong></p><p><strong>### 需求分析</strong></p><p>- 表关系</p><p>- 实体类</p><p>- 嵌套查询</p><p>- 页面展示</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;线路模块分页查询&lt;/li&gt;
&lt;li&gt;百度分页栏&lt;/li&gt;
&lt;li&gt;搜索条件分页查询&lt;/li&gt;
&lt;li&gt;线路详情提示&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十八）</title>
    <link href="http://yoursite.com/2020/05/20/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E5%85%AB%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/20/就业班学习笔记（五十八）/</id>
    <published>2020-05-20T00:58:14.000Z</published>
    <updated>2020-05-20T15:26:43.308Z</updated>
    
    <content type="html"><![CDATA[<ul><li>NoSQL</li><li>Redis入门<ul><li>5种数据类型</li></ul></li><li>Jedis入门</li><li>优化黑马旅游网</li></ul><a id="more"></a><h1 id="一-NoSQL"><a href="#一-NoSQL" class="headerlink" title="一.NoSQL"></a>一.NoSQL</h1><h4 id="1-1-NoSQL介绍"><a href="#1-1-NoSQL介绍" class="headerlink" title="1.1 NoSQL介绍"></a>1.1 NoSQL介绍</h4><p>NoSQL(Not-Only SQL)，泛指非关系型的数据库，它可以作为关系型数据库的良好补充。</p><table><thead><tr><th></th><th>关系型数据库</th><th>非关系型数据库</th></tr></thead><tbody><tr><td>特点</td><td>数据直接存在关联关系</td><td>数据之间没有关联关系</td></tr><tr><td></td><td>所有数据都在磁盘中</td><td>所有数据都在内存中</td></tr><tr><td></td><td></td><td></td></tr><tr><td>总结</td><td>存储复杂关系模型，硬盘io速度较慢</td><td>只能存储简单数据模型，内存io查询速度快</td></tr></tbody></table><ul><li><p>为什么学习NoSQL</p><blockquote><p>高并发、高可用、高性能、海量数据</p></blockquote><p>传统的关系型数据库出现了性能和扩展的瓶颈，所以非关系型数据库应时而生，解决了互联网产品的三 高和海量数据的问题</p><p>NoSQL和关系型的数据库是互补关系，在各自的应用场景中都有自己的特点，一般情况下我们使用关系 型数据库持久化数据(处理复杂的业务场景)，对一些热点数据通过NoSQL来作为缓存提高效率</p></li><li><p>使用后</p><ul><li>先查找缓存</li><li>没有数据再查找数据库</li></ul></li></ul><h4 id="1-2-NoSQL的主流产品"><a href="#1-2-NoSQL的主流产品" class="headerlink" title="1.2 NoSQL的主流产品"></a>1.2 NoSQL的主流产品</h4><table><thead><tr><th>分类</th><th>特点</th><th>代表产品</th></tr></thead><tbody><tr><td>键值存储</td><td>数据一般存在内存中，读写速度快(10w/s)，适合作为缓存服务</td><td>redis</td></tr><tr><td>文档型数据库</td><td>数据结构要求不严格，适合存储结构不确定或者价值较低的数据</td><td>mongodb</td></tr><tr><td>列存储数据库</td><td>查找速度快，更容易进行分布式扩展，适合作为文件存储服务</td><td>Hbase</td></tr><tr><td>图形数据库</td><td>使用“图结构”进行存储，适合做社交网络计算等等</td><td>Neo4j</td></tr></tbody></table><ul><li><p>图形数据库介绍</p><p><a href="https://blog.csdn.net/xlgen157387/article/details/79085901">https://blog.csdn.net/xlgen157387/article/details/79085901</a></p></li></ul><h1 id="二-Redis"><a href="#二-Redis" class="headerlink" title="二.Redis"></a>二.Redis</h1><h4 id="2-1-Redis介绍"><a href="#2-1-Redis介绍" class="headerlink" title="2.1 Redis介绍"></a>2.1 Redis介绍</h4><p>Redis(Remote Dictionary Server)是用C语言开发的一个开源的高性能键值对数据库。它的所有数据 都是保存在内存中的,这也就决定了其读写速度之快,是其它硬盘保存数据的系统所无法匹敌的。</p><p>官方曾经给出过一组测试数据，50个并发执行100000个请求: 读的速度是110000次/s,写的速度是 81000次/s</p><h4 id="2-2-Redis安装和使用"><a href="#2-2-Redis安装和使用" class="headerlink" title="2.2 Redis安装和使用"></a>2.2 Redis安装和使用</h4><ul><li><p>下载</p><p>Reids官网地址:<a href="http://redis.io">http://redis.io</a> </p><p>中文网地址:<a href="https://www.redis.net.cn/">https://www.redis.net.cn/</a></p><p>docker</p><ul><li><p>docker pull redis</p></li><li><p>Linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://download.redis.io/releases/redis-6.0.3.tar.gz</span><br><span class="line">$ tar xzf redis-6.0.3.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> redis-6.0.3</span><br><span class="line">$ make</span><br><span class="line"></span><br><span class="line">$ src/redis-server</span><br><span class="line"></span><br><span class="line">$ src/redis-cli</span><br><span class="line">redis&gt; <span class="built_in">set</span> foo bar</span><br><span class="line">OK</span><br><span class="line">redis&gt; get foo</span><br><span class="line"><span class="string">"bar"</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>目录</p><p>redis.conf:配置文件 </p></li></ul><h4 id="2-3-Redis客户端图形化工具"><a href="#2-3-Redis客户端图形化工具" class="headerlink" title="2.3 Redis客户端图形化工具"></a>2.3 Redis客户端图形化工具</h4><p>Redis Client 、Redis Desktop Manager 、Redis Studio.</p><h4 id="2-4-Redis数据结构"><a href="#2-4-Redis数据结构" class="headerlink" title="2.4 Redis数据结构"></a>2.4 Redis数据结构</h4><p>Redis采用的键值对存储数据，键(key)的类型只能为字符串，值(value)支持五种数据类型:</p><table><thead><tr><th>K-V类型</th><th>key(字符串)</th><th>value(支持5种类型)</th></tr></thead><tbody><tr><td>字符串：String</td><td>mystr</td><td>stringcode</td></tr><tr><td>哈希：HashMap</td><td>myhash</td><td>map集合(key:0),(value:100)</td></tr><tr><td>双向链表：LinkedList</td><td>mylist</td><td>左压栈—A-A–B–右压栈(有序且可重复)</td></tr><tr><td>无序集合：HashSet</td><td>myset</td><td>A|C|B|E|D        (无序但不可重复)</td></tr><tr><td>有序集合：LinkedHashSet</td><td>myzset</td><td>A|B|C|D|E        (有序但不可重复)</td></tr></tbody></table><h4 id="2-5-Redis命令操作"><a href="#2-5-Redis命令操作" class="headerlink" title="2.5 Redis命令操作"></a>2.5 Redis命令操作</h4><p>Redis命令是用来操作Redis数据库的, 就相当于操作MySql数据库时的SQL语句。</p><p>Redis的命令根据要操作的值(value)的数据结构的不同而不同, 每种数据类型都有自己的操作命令</p><h5 id="2-5-1-String字符串"><a href="#2-5-1-String字符串" class="headerlink" title="2.5.1 String字符串"></a>2.5.1 String字符串</h5><p>字符串类型是Redis中最为基础的数据存储类型。 </p><p>在Redis中字符串类型的Value最多可以容纳的数据长度是512MB。</p><table><thead><tr><th></th><th>用法</th></tr></thead><tbody><tr><td>新增</td><td>set key value [EX seconds | PX milliseconds] [NX | XX] [KEEPTTL]</td></tr><tr><td>查询</td><td>get key</td></tr><tr><td>删除</td><td>del key [key …]</td></tr><tr><td>新增并指定存活时间</td><td>setex key seconds value</td></tr><tr><td></td><td>ttl key       查看存活时间</td></tr><tr><td>主键自增器</td><td>incr key     (value默认加1)</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> mystr stringcode</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get mystr</span><br><span class="line"><span class="string">"stringcode"</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> mystr new_stringcode</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get mystr</span><br><span class="line"><span class="string">"new_stringcode"</span></span><br><span class="line">127.0.0.1:6379&gt; setex testcount 10 test10seconds</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; ttl testcount</span><br><span class="line">(<span class="built_in">integer</span>) 5</span><br><span class="line">127.0.0.1:6379&gt; get testcount</span><br><span class="line"><span class="string">"test10seconds"</span></span><br><span class="line">127.0.0.1:6379&gt; ttl testcount</span><br><span class="line">(<span class="built_in">integer</span>) -2</span><br><span class="line">127.0.0.1:6379&gt; get testcount</span><br><span class="line">(nil)</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-2-Hash哈希"><a href="#2-5-2-Hash哈希" class="headerlink" title="2.5.2 Hash哈希"></a>2.5.2 Hash哈希</h5><p>Hash类型极其类似于java中的Map,值里面可以存放一组组的键值对 </p><p>该类型非常适合于存储java中对象的信息</p><table><thead><tr><th></th><th>用法</th></tr></thead><tbody><tr><td>新增</td><td>hset key field value [field value …]</td></tr><tr><td>查询</td><td>hget key field</td></tr><tr><td></td><td>hgetall key</td></tr><tr><td>删除</td><td>hdel key field [field …]</td></tr><tr><td></td><td>del key [key …]</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hset user_1 name Jack</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; hset user_1 age 18</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; hget user_1 name</span><br><span class="line"><span class="string">"Jack"</span></span><br><span class="line">127.0.0.1:6379&gt; hgetall user_1</span><br><span class="line">1) <span class="string">"name"</span></span><br><span class="line">2) <span class="string">"Jack"</span></span><br><span class="line">3) <span class="string">"age"</span></span><br><span class="line">4) <span class="string">"18"</span></span><br><span class="line">127.0.0.1:6379&gt; hdel user_1 age</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; hgetall user_1</span><br><span class="line">1) <span class="string">"name"</span></span><br><span class="line">2) <span class="string">"Jack"</span></span><br><span class="line">127.0.0.1:6379&gt; del user_1</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">"mystr"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-3-List列表"><a href="#2-5-3-List列表" class="headerlink" title="2.5.3 List列表"></a>2.5.3 List列表</h5><p>List类型底层是一个双向字符串链表。里面的元素是有序的，可重复的</p><p>我们可以从链表的任何一端进行元素的增删</p><table><thead><tr><th align="right"></th><th align="center"><div align="center">redis的list是一个双向列表</th><th align="left"></th></tr></thead><tbody><tr><td align="right"></td><td align="center"><div align="center"> ===========================</td><td align="left"></td></tr><tr><td align="right">b</td><td align="center"><div align="center">  a</td><td align="left">c</td></tr><tr><td align="right"></td><td align="center"><div align="center">  ===========================</td><td align="left"></td></tr></tbody></table><table><thead><tr><th></th><th>用法</th><th></th></tr></thead><tbody><tr><td>新增</td><td>lpush key element [element …]</td><td>将元素压入左侧顶端</td></tr><tr><td></td><td>rpush key element [element …]</td><td>将元素压入右侧顶端</td></tr><tr><td>查询</td><td>lrange key start stop</td><td>从左向右查询<br />0 -1 查看所有</td></tr><tr><td>删除</td><td>lpop key</td><td>将左侧顶端元素弹出</td></tr><tr><td></td><td>rpop key</td><td>将右侧顶端元素弹出</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; lpush mylist a</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; lpush mylist b</span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379&gt; lpush mylist c</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">127.0.0.1:6379&gt; lrange mylist 0 -1</span><br><span class="line">1) <span class="string">"c"</span></span><br><span class="line">2) <span class="string">"b"</span></span><br><span class="line">3) <span class="string">"a"</span></span><br><span class="line">127.0.0.1:6379&gt; rpush mylist a</span><br><span class="line">(<span class="built_in">integer</span>) 4</span><br><span class="line">127.0.0.1:6379&gt; lrange mylist 0 -1</span><br><span class="line">1) <span class="string">"c"</span></span><br><span class="line">2) <span class="string">"b"</span></span><br><span class="line">3) <span class="string">"a"</span></span><br><span class="line">4) <span class="string">"a"</span></span><br><span class="line">127.0.0.1:6379&gt; lpop mylist</span><br><span class="line"><span class="string">"c"</span></span><br><span class="line">127.0.0.1:6379&gt; rpop mylist</span><br><span class="line"><span class="string">"a"</span></span><br><span class="line">127.0.0.1:6379&gt; lrange mylist 0 -1</span><br><span class="line">1) <span class="string">"b"</span></span><br><span class="line">2) <span class="string">"a"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-4-Set集合（无序）"><a href="#2-5-4-Set集合（无序）" class="headerlink" title="2.5.4 Set集合（无序）"></a>2.5.4 Set集合（无序）</h5><p>Set类型底层是一张hash表。里面的元素是无序的，不可重复的</p><table><thead><tr><th></th><th>用法</th><th></th></tr></thead><tbody><tr><td>新增</td><td>sadd key member [member …]</td><td>新增指定key元素</td></tr><tr><td>查询</td><td>smembers key</td><td>查询指定key元素</td></tr><tr><td>删除</td><td>srem key member [member …]</td><td>删除指定元素</td></tr><tr><td></td><td>del key [key …]</td><td>删除整个set集合</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sadd myset a</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset b</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset c</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset f</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset e</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset d</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset a</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; smembers myset</span><br><span class="line">1) <span class="string">"c"</span></span><br><span class="line">2) <span class="string">"f"</span></span><br><span class="line">3) <span class="string">"b"</span></span><br><span class="line">4) <span class="string">"e"</span></span><br><span class="line">5) <span class="string">"a"</span></span><br><span class="line">6) <span class="string">"d"</span></span><br><span class="line">127.0.0.1:6379&gt; srem myset a</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; smembers myset</span><br><span class="line">1) <span class="string">"c"</span></span><br><span class="line">2) <span class="string">"f"</span></span><br><span class="line">3) <span class="string">"b"</span></span><br><span class="line">4) <span class="string">"e"</span></span><br><span class="line">5) <span class="string">"d"</span></span><br><span class="line">127.0.0.1:6379&gt; del myset</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; smembers myset</span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-5-ZSet集合（有序）"><a href="#2-5-5-ZSet集合（有序）" class="headerlink" title="2.5.5 ZSet集合（有序）"></a>2.5.5 ZSet集合（有序）</h5><p>Zset,也称sortedSet, 在Set的基础上，加入了有序功能，在添加元素的时候，允许指定一个分数，它会 按照这个分数排序</p><table><thead><tr><th></th><th>用法</th><th></th></tr></thead><tbody><tr><td>新增</td><td>zadd key [NX | XX] [CH] [INCR] score member [score member …]</td><td>新增指定key元素</td></tr><tr><td>查询</td><td>zrange key start stop [WITHSCORES]</td><td>升序</td></tr><tr><td></td><td>zrevrange key start stop [WITHSCORES]</td><td>降序</td></tr><tr><td>删除</td><td>zrem key member [member …]</td><td>删除指定元素</td></tr><tr><td></td><td>del key [key …]</td><td>删除整个zset集合</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zadd myzset 10 aaaaa</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zadd myzset 30 bbbbb</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zadd myzset 20 ccccc</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zrange myzset 0 100</span><br><span class="line">1) <span class="string">"aaaaa"</span></span><br><span class="line">2) <span class="string">"ccccc"</span></span><br><span class="line">3) <span class="string">"bbbbb"</span></span><br><span class="line">127.0.0.1:6379&gt; zrange myzset 0 100 withscores</span><br><span class="line">1) <span class="string">"aaaaa"</span></span><br><span class="line">2) <span class="string">"10"</span></span><br><span class="line">3) <span class="string">"ccccc"</span></span><br><span class="line">4) <span class="string">"20"</span></span><br><span class="line">5) <span class="string">"bbbbb"</span></span><br><span class="line">6) <span class="string">"30"</span></span><br><span class="line">127.0.0.1:6379&gt; zrevrange myzset 0 100</span><br><span class="line">1) <span class="string">"bbbbb"</span></span><br><span class="line">2) <span class="string">"ccccc"</span></span><br><span class="line">3) <span class="string">"aaaaa"</span></span><br><span class="line">127.0.0.1:6379&gt; zrevrange myzset 0 100 withscores</span><br><span class="line">1) <span class="string">"bbbbb"</span></span><br><span class="line">2) <span class="string">"30"</span></span><br><span class="line">3) <span class="string">"ccccc"</span></span><br><span class="line">4) <span class="string">"20"</span></span><br><span class="line">5) <span class="string">"aaaaa"</span></span><br><span class="line">6) <span class="string">"10"</span></span><br><span class="line">127.0.0.1:6379&gt; zrem myzset aaaaa</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zrevrange myzset 0 100</span><br><span class="line">1) <span class="string">"bbbbb"</span></span><br><span class="line">2) <span class="string">"ccccc"</span></span><br><span class="line">127.0.0.1:6379&gt; del myzset</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zrevrange myzset 0 100</span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h5 id="2-5-6-通用命令"><a href="#2-5-6-通用命令" class="headerlink" title="2.5.6 通用命令"></a>2.5.6 通用命令</h5><table><thead><tr><th></th><th>命令</th></tr></thead><tbody><tr><td>模糊查询键</td><td>keys *</td></tr><tr><td>删除多个键</td><td>del key [key …]</td></tr><tr><td>根据键判断记录是否存在</td><td>exists key[key …]</td></tr><tr><td>根据键判断值类型</td><td>type key</td></tr><tr><td>选择数据库</td><td>select index (0~15)</td></tr><tr><td>清空当前数据库</td><td>flushdb [ASYNC]</td></tr><tr><td>清空所有数据库</td><td>flushall [ASYNC]</td></tr></tbody></table><h4 id="2-6-Redis持久化"><a href="#2-6-Redis持久化" class="headerlink" title="2.6 Redis持久化"></a>2.6 Redis持久化</h4><p>Redis的数据都是存在在内存之中的，那么这样一旦出现宕机，势必会导致数据的丢失，这就需要持久化操作，也就是要将redis在内存中的数据写到硬盘上保存。 </p><p>注意，redis虽然有持久化操作，但是其全部数据依旧都在内存中存在,也就是说硬盘上的只是为了安全和备份。</p><p>Redis提供了两种数据持久化的方式，分别是 RDB 和 AOF</p><ul><li><p>RDB:默认开启</p><p>在redis运行期间，根据指定时间节点对内存的数据进行快照拍摄，持久化到磁盘文件(dump.rdb文件) 指定时间规则拍摄快照</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">cat redis.conf | tail -n +265 | head -n 25    </span><br><span class="line"></span><br><span class="line"><span class="comment">################################ SNAPSHOTTING  ################################</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Save the DB on disk:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   save &lt;seconds&gt; &lt;changes&gt;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   Will save the DB if both the given number of seconds and the given</span></span><br><span class="line"><span class="comment">#   number of write operations against the DB occurred.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   In the example below the behaviour will be to save:</span></span><br><span class="line"><span class="comment">#   after 900 sec (15 min) if at least 1 key changed</span></span><br><span class="line"><span class="comment">#   after 300 sec (5 min) if at least 10 keys changed</span></span><br><span class="line"><span class="comment">#   after 60 sec if at least 10000 keys changed</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   Note: you can disable saving completely by commenting out all "save" lines.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   It is also possible to remove all the previously configured save</span></span><br><span class="line"><span class="comment">#   points by adding a save directive with a single empty string argument</span></span><br><span class="line"><span class="comment">#   like in the following example:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   save ""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1个key修改，15min后拍摄一次快照</span></span><br><span class="line">save 900 1</span><br><span class="line"><span class="comment">#10个key修改，5min后拍摄一次快照</span></span><br><span class="line">save 300 10</span><br><span class="line"><span class="comment">#10000个key修改，1min后拍摄一次快照</span></span><br><span class="line">save 60 10000</span><br></pre></td></tr></table></figure></li><li><p>AOF:默认关闭，需要手动开启</p><p>在redis运行期间，以日志记录的方式监听set操作，持久化到磁盘文件(appendonly.aof) </p><p>开启AOF:修改 redis.conf配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">cat redis.conf | tail -n +1018 | head -n 53          </span><br><span class="line"></span><br><span class="line"><span class="comment">############################## APPEND ONLY MODE ###############################</span></span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="comment"># Please check http://redis.io/topics/persistence for more information.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#若开启设置为yes</span></span><br><span class="line">appendonly no</span><br><span class="line"></span><br><span class="line"><span class="comment"># The name of the append only file (default: "appendonly.aof")</span></span><br><span class="line"></span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The fsync() call tells the Operating System to actually write data on disk</span></span><br><span class="line"><span class="comment"># instead of waiting for more data in the output buffer. Some OS will really flush</span></span><br><span class="line"><span class="comment"># data on disk, some other OS will just try to do it ASAP.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line"><span class="comment">#日志持久化机制</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#每次执行set操作时都会持久化一次</span></span><br><span class="line"><span class="comment"># appendfsync always</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#每秒持久化一次</span></span><br><span class="line">appendfsync everysec</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据服务器，cpu处于idle情况，持久化一次</span></span><br><span class="line"><span class="comment"># appendfsync no</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="2-6-1-知识小结"><a href="#2-6-1-知识小结" class="headerlink" title="2.6.1 知识小结"></a>2.6.1 知识小结</h5><p>这二种持久化机制可以共存</p><table><thead><tr><th></th><th>RDB:把redis作为缓存来用</th><th>AOF:把redis作为独立数据库</th></tr></thead><tbody><tr><td>优点</td><td>性能高</td><td>几乎不会丢失数据</td></tr><tr><td>缺点</td><td>可能会丢失部分数据</td><td>性能较差</td></tr></tbody></table><h4 id="2-7-应用场景"><a href="#2-7-应用场景" class="headerlink" title="2.7 应用场景"></a>2.7 应用场景</h4><h5 id="2-7-1-缓存"><a href="#2-7-1-缓存" class="headerlink" title="2.7.1 缓存"></a>2.7.1 缓存</h5><p>将一些经常访问但又不会经常修改的数据，进行缓存，提高查询效率</p><h5 id="2-7-2-秒杀"><a href="#2-7-2-秒杀" class="headerlink" title="2.7.2 秒杀"></a>2.7.2 秒杀</h5><table><thead><tr><th>浏览器</th><th>➡秒杀</th><th>redis服务器</th><th>➡同步</th><th>MySQL</th></tr></thead><tbody><tr><td>商品</td><td></td><td>扣库存</td><td></td><td>同步数据</td></tr><tr><td></td><td></td><td>生成订单</td><td></td><td></td></tr><tr><td></td><td></td><td>支付发货</td><td></td><td></td></tr></tbody></table><h5 id="2-7-3-微博热搜"><a href="#2-7-3-微博热搜" class="headerlink" title="2.7.3 微博热搜"></a>2.7.3 微博热搜</h5><table><thead><tr><th>微博app</th><th>➡</th><th>redis</th></tr></thead><tbody><tr><td>微博热搜</td><td></td><td>ZSet评分有序集合</td></tr></tbody></table><h5 id="2-7-4-分布式session"><a href="#2-7-4-分布式session" class="headerlink" title="2.7.4 分布式session"></a>2.7.4 分布式session</h5><table><thead><tr><th>User</th><th>➡</th><th>Tomcat服务器</th><th>➡</th><th>redis</th></tr></thead><tbody><tr><td></td><td>第一次访问</td><td>Server_1</td><td>设置</td><td></td></tr><tr><td>User</td><td></td><td></td><td></td><td>User</td></tr><tr><td></td><td>第二次访问</td><td>Server_2</td><td>查询</td><td></td></tr></tbody></table><h5 id="2-7-5-验证码存储"><a href="#2-7-5-验证码存储" class="headerlink" title="2.7.5 验证码存储"></a>2.7.5 验证码存储</h5><table><thead><tr><th>网站</th><th>➡</th><th>redis</th></tr></thead><tbody><tr><td>发送短信</td><td></td><td>手机号:6位随机验证码</td></tr><tr><td></td><td></td><td>精准控制session只有5min</td></tr></tbody></table><h1 id="三-Jedis"><a href="#三-Jedis" class="headerlink" title="三.Jedis"></a>三.Jedis</h1><h4 id="3-1-Jedis使用"><a href="#3-1-Jedis使用" class="headerlink" title="3.1 Jedis使用"></a>3.1 Jedis使用</h4><p>Redis作为一款优秀的缓存服务器存在，大多数语言都提供了连接Redis的驱动包，在java中，比较出名</p><p>的是Jedis和Redisson，我们今天以Jedis为例学习，看看如何是用程序操作redis。</p><ul><li><p>常用API</p><table><thead><tr><th>方法</th><th>解释</th></tr></thead><tbody><tr><td>new Jedis(host, port)</td><td>创建jedis对象，参数host是redis服务器地址，参数port是redis服务端口</td></tr><tr><td>set(key,value)</td><td>设置字符串类型的数据</td></tr><tr><td>get(key)</td><td>获得字符串类型的数据</td></tr><tr><td>hset(key,field,value)</td><td>设置哈希类型的数据</td></tr><tr><td>hget(key,field)</td><td>获得哈希类型的数据</td></tr><tr><td>lpush(key,values)</td><td>设置列表类型的数据</td></tr><tr><td>lpop(key)</td><td>列表左面弹栈</td></tr><tr><td>rpop(key)</td><td>列表右面弹栈</td></tr><tr><td>del(key)</td><td>删除指定的key</td></tr></tbody></table></li></ul><ul><li><p>快速入门</p><ul><li><p>导入相关坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--jedis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>编写代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 快速入门之，向redis设置string类型的数据</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">// 1.创建连接对象</span></span><br><span class="line">    <span class="comment">// 默认连接 127.0.0.1 主机 和 6379 端口</span></span><br><span class="line">    Jedis jedis = <span class="keyword">new</span> Jedis();</span><br><span class="line">    <span class="comment">// 2.调用set方法设置数据</span></span><br><span class="line">    jedis.set(<span class="string">"Java"</span>, <span class="string">"Hello,World"</span>);</span><br><span class="line">    <span class="comment">// 3.释放资源</span></span><br><span class="line">    jedis.close();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 快速入门之，查询string类型数据</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testQuery</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">// 1.创建连接对象</span></span><br><span class="line">    Jedis jedis = <span class="keyword">new</span> Jedis();</span><br><span class="line">    <span class="comment">// 2.调用get方法获取</span></span><br><span class="line">    String java = jedis.get(<span class="string">"Java"</span>);</span><br><span class="line">    System.out.println(java);</span><br><span class="line">    <span class="comment">// 3.释放资源</span></span><br><span class="line">    jedis.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-2-Jedis连接池"><a href="#3-2-Jedis连接池" class="headerlink" title="3.2 Jedis连接池"></a>3.2 Jedis连接池</h4><p>jedis连接资源的创建与销毁是非常消耗性能的，所以我们不希望频繁的创建和销毁它.基于这样的需求,就有了JedisPool技术。</p><ul><li><p>快速入门</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisPoolTest</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 测试jedis内置的连接池</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJedisPool</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 0.连接池配置对象</span></span><br><span class="line">    JedisPoolConfig jedisPoolConfig = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">    <span class="comment">// 最大连接数</span></span><br><span class="line">    jedisPoolConfig.setMaxTotal(<span class="number">100</span>);</span><br><span class="line">    <span class="comment">// 最大等待时间，单位是毫秒</span></span><br><span class="line">    jedisPoolConfig.setMaxWaitMillis(<span class="number">3000</span>);</span><br><span class="line">    <span class="comment">// 最大空闲连接数</span></span><br><span class="line">    jedisPoolConfig.setMaxIdle(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.创建连接池对象</span></span><br><span class="line">    JedisPool jedisPool = <span class="keyword">new</span> JedisPool();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.从池中获取连接</span></span><br><span class="line">    Jedis jedis = jedisPool.getResource();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.操作api</span></span><br><span class="line">    jedis.hset(<span class="string">"myhash"</span>, <span class="string">"id"</span>, <span class="string">"1"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.归还到连接池</span></span><br><span class="line">    jedis.close();</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>抽取为连接池工具类</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">jedis.host</span>=<span class="string">localhost</span></span><br><span class="line"><span class="meta">jedis.port</span>=<span class="string">6379</span></span><br><span class="line"><span class="meta">jedis.maxTotal</span>=<span class="string">20</span></span><br><span class="line"><span class="meta">jedis.maxIdle</span>=<span class="string">10</span></span><br></pre></td></tr></table></figure></li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> JedisPool jedisPool;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> String host;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Integer port;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Integer maxTotal;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Integer maxIdle;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始化连接池</span></span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">      ResourceBundle jedis = ResourceBundle.getBundle(<span class="string">"jedis"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 读取配置文件给变量赋值</span></span><br><span class="line">      <span class="comment">// 获取类加载读取 jedis.properties 获取io流</span></span><br><span class="line">      InputStream is = JedisUtils.class.getClassLoader().getResourceAsStream("jedis.properties");</span><br><span class="line">      <span class="comment">// 创建properties对象 加载io流</span></span><br><span class="line">      Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">      properties.load(is);</span><br><span class="line">      <span class="comment">// 给变量赋值</span></span><br><span class="line">      host = properties.getProperty(<span class="string">"jedis.host"</span>);</span><br><span class="line">      port = Integer.parseInt(properties.getProperty(<span class="string">"jedis.port"</span>));</span><br><span class="line">      maxTotal = Integer.parseInt(properties.getProperty(<span class="string">"jedis.maxTotal"</span>));</span><br><span class="line">      maxIdle = Integer.parseInt(properties.getProperty(<span class="string">"jedis.maxIdle"</span>));</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 创建连接池配置对象</span></span><br><span class="line">      JedisPoolConfig jedisPoolConfig = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">      jedisPoolConfig.setMaxTotal(maxTotal);</span><br><span class="line">      jedisPoolConfig.setMaxIdle(maxIdle);</span><br><span class="line">      <span class="comment">// 创建连接池对象</span></span><br><span class="line">      jedisPool = <span class="keyword">new</span> JedisPool(jedisPoolConfig, host, port);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 提供获取jedis连接的方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Jedis <span class="title">getJedis</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> jedisPool.getResource();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四-黑马旅游网"><a href="#四-黑马旅游网" class="headerlink" title="四.黑马旅游网"></a>四.黑马旅游网</h1><h4 id="4-1-缓存：导航条分类"><a href="#4-1-缓存：导航条分类" class="headerlink" title="4.1 缓存：导航条分类"></a>4.1 缓存：导航条分类</h4><h5 id="4-1-1-需求分析"><a href="#4-1-1-需求分析" class="headerlink" title="4.1.1 需求分析"></a>4.1.1 需求分析</h5><table><thead><tr><th>前端页面</th><th>➡</th><th>JavaServer</th><th>➡</th><th>SQL</th></tr></thead><tbody><tr><td>首页 门票 周边游</td><td></td><td>CategroyService</td><td>➡</td><td>NoSQL</td></tr><tr><td></td><td></td><td>先查询缓存(redis)，有就直接返回</td><td></td><td>redis</td></tr><tr><td></td><td></td><td>没有，再查MySQL，先同步到redis再返回</td><td>➡</td><td>MySQL</td></tr><tr><td></td><td></td><td>List&lt;Categroy&gt; list;<br>将list转为json数组字符串返回</td><td></td><td></td></tr></tbody></table><h5 id="4-1-2-代码实现"><a href="#4-1-2-代码实现" class="headerlink" title="4.1.2 代码实现"></a>4.1.2 代码实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoryServiceImpl</span> <span class="keyword">implements</span> <span class="title">CategoryService</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Category&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//        SqlSession sqlSession = MyBatisUtils.openSession();</span></span><br><span class="line">    <span class="comment">//        CategoryDao categoryDao = sqlSession.getMapper(CategoryDao.class);</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//        List&lt;Category&gt; categoryList = categoryDao.findAll();</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//        MyBatisUtils.close(sqlSession);</span></span><br><span class="line"></span><br><span class="line">    List&lt;Category&gt; categoryList = <span class="keyword">null</span>;</span><br><span class="line">    ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">    Jedis jedis = JedisUtils.getJedis();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (jedis.exists(<span class="string">"travel_category"</span>)) &#123;</span><br><span class="line">      String json = jedis.get(<span class="string">"travel_category"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        categoryList = objectMapper.readValue(json, List<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(<span class="string">"Find In Redis"</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">      CategoryDao categoryDao = sqlSession.getMapper(CategoryDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">      categoryList = categoryDao.findAll();</span><br><span class="line"></span><br><span class="line">      MyBatisUtils.close(sqlSession);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        String json = objectMapper.writeValueAsString(categoryList);</span><br><span class="line">        jedis.set(<span class="string">"travel_category"</span>, json);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    jedis.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> categoryList;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-短信验证码存活时间5分钟"><a href="#4-2-短信验证码存活时间5分钟" class="headerlink" title="4.2 短信验证码存活时间5分钟"></a>4.2 短信验证码存活时间5分钟</h4><h4 id="4-2-1-需求分析"><a href="#4-2-1-需求分析" class="headerlink" title="4.2.1 需求分析"></a>4.2.1 需求分析</h4><p><img src="image-20200520150018632.png" alt=""></p><h4 id="4-2-2-代码实现"><a href="#4-2-2-代码实现" class="headerlink" title="4.2.2 代码实现"></a>4.2.2 代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendSms</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">  <span class="comment">// 1.获取请求参数</span></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">  <span class="comment">// 2.生成6位随机数(apache提供的)</span></span><br><span class="line">  String smsCode = RandomStringUtils.randomNumeric(<span class="number">6</span>);</span><br><span class="line">  <span class="comment">// 3.调用service完成短信发送，返回resultInfo</span></span><br><span class="line">  ResultInfo resultInfo = userService.sendSms(telephone, smsCode);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.如果发送成功，将验证码写入到session中</span></span><br><span class="line">  <span class="comment">//        if (resultInfo.getSuccess()) &#123;</span></span><br><span class="line">  <span class="comment">//            req.getSession().setAttribute("smsCode_" + telephone, smsCode);</span></span><br><span class="line">  <span class="comment">//            System.out.println("smsCode: " + smsCode);</span></span><br><span class="line">  <span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.如果发送成功，将验证码写入到session中</span></span><br><span class="line">  <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// a.获取jedis连接</span></span><br><span class="line">    Jedis jedis = JedisUtils.getJedis();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// b.将验证码设置到jedis中，存活1分钟</span></span><br><span class="line">    jedis.setex(<span class="string">"smsCode_"</span> + telephone, <span class="number">60</span>, smsCode);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// c.释放资源</span></span><br><span class="line">    jedis.close();</span><br><span class="line">    System.out.println(<span class="string">"smsCode: "</span> + smsCode);</span><br><span class="line">  &#125;</span><br><span class="line">  javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// a.获取请求参数</span></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">  String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// b.获取session中验证码</span></span><br><span class="line">  <span class="comment">//        String sessionCode = (String) req.getSession().getAttribute("smsCode_" + telephone);</span></span><br><span class="line"></span><br><span class="line">  Jedis jedis = JedisUtils.getJedis();</span><br><span class="line">  String sessionCode = jedis.get(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// c.进行校验</span></span><br><span class="line">  <span class="keyword">if</span> (sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode))) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证码不正确</span></span><br><span class="line">    req.setAttribute(<span class="string">"resultInfo"</span>, <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"SMS Code not correct"</span>));</span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//获取请求参数</span></span><br><span class="line">  Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//封装User中</span></span><br><span class="line">  User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//调用service，实现注册</span></span><br><span class="line">  ResultInfo resultInfo = userService.register(param);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">    resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">    <span class="comment">//            req.getSession().removeAttribute("smsCode_" + telephone);</span></span><br><span class="line">    <span class="comment">// d.升级为，清除redis</span></span><br><span class="line">    jedis.del(<span class="string">"smsCode"</span> + telephone);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">  jedis.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">telLogin</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 1.接收请求参数telephone</span></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2.调用service查询</span></span><br><span class="line">  User currentUser = userService.findByTelephone(telephone);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3.校验手机号</span></span><br><span class="line">  ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.3 校验</span></span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number not Registered"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//成功</span></span><br><span class="line">    String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//            String sessionCode = (String) req.getSession().getAttribute("smsCode_" + telephone);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 升级为从redis中获取</span></span><br><span class="line">    Jedis jedis = JedisUtils.getJedis();</span><br><span class="line">    String sessionCode = jedis.get(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode))) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Wrong SMS Code"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"currentUser"</span>, currentUser);</span><br><span class="line">      <span class="comment">// 清除session中验证码</span></span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Login Success"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//req.getSession().removeAttribute("smsCode_" + telephone);</span></span><br><span class="line">      <span class="comment">// 清除redis中验证码</span></span><br><span class="line">      jedis.del(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 释放资源</span></span><br><span class="line">    jedis.close();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//将resultInfo转为Json响应到客户端</span></span><br><span class="line">  javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 NoSQL</strong></p><p><strong>### 非关系型数据库，not only sql，弥补关系型数据库一些不足</strong></p><p><strong>### 特点：</strong></p><p>- 关系性</p><p>​    - 1）数据之间存在关联关系</p><p>​    - 2）数据存储在硬盘</p><p>- 非关系型</p><p>​    - 1）数据之间不存在关联关系</p><p>​    - 2）数据存储在内存</p><p><strong>### 解决：互联和行业特点</strong></p><p>- 高并发</p><p>- 高性能</p><p>- 高可用</p><p>- 海量数据</p><p><strong>### nosql分类</strong></p><p>- 键值对</p><p>​    - redis</p><p>- 文档类型（json）</p><p>​    - mongoDB</p><p>- 列存储</p><p>​    - hbase</p><p>- 图形（关系结构）</p><p><strong>## 二 Redis</strong></p><p><strong>### 介绍</strong></p><p>- C语言编写高性能键值对数据库</p><p><strong>### 数据类型</strong></p><p>- string</p><p>- hash</p><p>- linkedList</p><p>- hashset</p><p>- linkedHashSet</p><p><strong>### 命令</strong></p><p>- 字符串</p><p>​    - set key value</p><p>​    - get key</p><p>​    - del key</p><p>​    - setex key 存活时间 value</p><p>​    - incr key</p><p>​        - value+1</p><p>- 哈希</p><p>​    - hset key hkey hvalue</p><p>​    - hget key hkey</p><p>​    - hgetall key</p><p>​    - hrem key hkey</p><p>​    - del key</p><p>- 列表</p><p>​    - lpush key value</p><p>​    - rpush key value</p><p>​    - lrange key 0 -1</p><p>​    - lpop key</p><p>​    - rpop key</p><p>​    - del key</p><p>- 集合</p><p>​    - sadd key value</p><p>​    - smembers key</p><p>​    - srem key value</p><p>- 有序集合</p><p>​    - zadd key score value</p><p>​    - zrange key 0 -1 withscores</p><p>​    - zrevrange key 0 -1 withscores</p><p>​    - zrem key value</p><p>- 通用命令</p><p>​    - keys *</p><p>​    - del key1 key2 key3</p><p>​    - exists key</p><p>​    - type key</p><p>​    - select 0~15</p><p>​    - flushdb</p><p>​    - flushal</p><p><strong>### 持久化</strong></p><p>- RDB</p><p>​    - 默认开启，在指定间隔时间将内存的数据拍摄快照，持久化到磁盘</p><p>​        - 1）优点：性能高</p><p>​        - 2）缺点：丢失数据</p><p>- AOF</p><p>​    - 手动开启，根据日志记录方式监听redis的写（set）操作，持久化到磁盘</p><p>​        - 1）优点：保证数据的安全</p><p>​        - 2）缺点：性能稍差</p><p><strong>### 应用场景</strong></p><p>- 1）缓存</p><p>- 2）秒杀</p><p>- 3）微博热搜</p><p>- 4）验证码存储</p><p>- 5）分布式session</p><p><strong>## 三 Jedis</strong></p><p><strong>### 通过java语言操作redis，api与redis命令相似</strong></p><p><strong>### 快速入门</strong></p><p>- 1）导入jar坐标</p><p>- 2）编写代码</p><p>​    - //1.创建连接对象</p><p>​    - //2.操作api</p><p>​    - //3.关闭连接</p><p><strong>### Jedis连接池</strong></p><p><strong>## 四 优化：黑马旅游网</strong></p><p><strong>### 4.1 缓存：导航条分类</strong></p><p><strong>### 4.2 短信验证码存活时间5分钟</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;NoSQL&lt;/li&gt;
&lt;li&gt;Redis入门&lt;ul&gt;
&lt;li&gt;5种数据类型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Jedis入门&lt;/li&gt;
&lt;li&gt;优化黑马旅游网&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十七）</title>
    <link href="http://yoursite.com/2020/05/18/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B8%83%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/18/就业班学习笔记（五十七）/</id>
    <published>2020-05-18T01:12:02.000Z</published>
    <updated>2020-05-19T15:39:02.892Z</updated>
    
    <content type="html"><![CDATA[<ul><li>用户中心</li><li>面向接口编程和工厂模式</li><li>收货地址</li><li>导航条</li></ul><a id="more"></a><h1 id="一-个人信息回显"><a href="#一-个人信息回显" class="headerlink" title="一.个人信息回显"></a>一.个人信息回显</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><p><img src="image-20200518092504789.png" alt=""></p><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/UserServlet?action=userInfo" class="collection"&gt;个人中心&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户中心回显</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">userInfo</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 校验session</span></span><br><span class="line">  Object currentUser = request.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    response.sendRedirect(request.getContextPath() + <span class="string">"/index.jsp"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 转发到 home_index.jsp</span></span><br><span class="line">  request.getRequestDispatcher(<span class="string">"/home_index.jsp"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>home_left.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;currentUser.pic&#125;"</span> width=<span class="string">"160px"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"img-circle"</span> alt=<span class="string">""</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>home_index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/UserServlet"</span> method=<span class="string">"post"</span> enctype=<span class="string">"application/x-www-form-urlencoded"</span>&gt;</span><br><span class="line">  &lt;%--回显id到隐藏域--%&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"uid"</span> value=<span class="string">"$&#123;currentUser.uid&#125;"</span>&gt;</span><br><span class="line">  &lt;%--方法隐藏域--%&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"updateInfo"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-content "</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">"one"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-pane active"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"sui-form form-horizontal"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line">          &lt;label for="inputName" class="control-label"&gt;昵称：&lt;/label&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> id=<span class="string">"inputName"</span> name=<span class="string">"nickname"</span> placeholder=<span class="string">"昵称"</span> value=<span class="string">"$&#123;currentUser.nickname&#125;"</span>&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line">          &lt;label class="control-label"&gt;性别：&lt;/label&gt;</span><br><span class="line">          &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;input type="radio" name="sex" value="1" &lt;c:if test="$&#123;currentUser.sex == 1&#125;"&gt;checked="checked"&lt;/c:if&gt;&gt;&lt;b&gt;男&lt;/b&gt;</span><br><span class="line"></span><br><span class="line">          &amp;nbsp;&amp;nbsp;</span><br><span class="line">          &lt;input type="radio" name="sex" value="0" &lt;c:if test="$&#123;currentUser.sex == 0&#125;"&gt;checked="checked"&lt;/c:if&gt;&gt;&lt;b&gt;女&lt;/b&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line">      &lt;label class="control-label"&gt;生日：&lt;/label&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"text"</span> name=<span class="string">"birthday"</span> placeholder=<span class="string">"生日"</span> value=<span class="string">"$&#123;currentUser.birthday&#125;"</span>&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line">      &lt;label class="control-label"&gt;邮箱：&lt;/label&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">"text"</span> name=<span class="string">"email"</span> placeholder=<span class="string">"邮箱"</span> value=<span class="string">"$&#123;currentUser.email&#125;"</span>&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-group"</span>&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"controls"</span>&gt;</span><br><span class="line">        &lt;button type="submit" class="sui-btn btn-primary"&gt;更新&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;div id=<span class="string">"two"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-pane"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"new-photo"</span>&gt;</span><br><span class="line">    &lt;p&gt;当前头像：&lt;/p&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"upload"</span>&gt;</span><br><span class="line">      &lt;img id=<span class="string">"imgShow_WU_FILE_0"</span> width=<span class="string">"100"</span> height=<span class="string">"100"</span></span><br><span class="line">           src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/$&#123;currentUser.pic&#125;"</span></span><br><span class="line">           alt=<span class="string">""</span>&gt;</span><br><span class="line">      &lt;input type=<span class="string">"file"</span> id=<span class="string">"up_img_WU_FILE_0"</span> name=<span class="string">"pic"</span>/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-个人信息修改"><a href="#二-个人信息修改" class="headerlink" title="二.个人信息修改"></a>二.个人信息修改</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><p><img src="image-20200518094419285.png" alt=""></p><h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><ul><li><p>home_index.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/UserServlet"</span> method=<span class="string">"post"</span></span><br><span class="line">      enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">  &lt;%--回显id到隐藏域--%&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"uid"</span> value=<span class="string">"$&#123;currentUser.uid&#125;"</span>&gt;</span><br><span class="line">  &lt;%--方法隐藏域--%&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 个人信息修改</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">updateInfo</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 1.接收请求参数map</span></span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">    <span class="comment">// 2.封装user实体</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">    <span class="comment">// 3.调用service更新</span></span><br><span class="line">    userService.updateInfo(param);</span><br><span class="line">    <span class="comment">// 4.根据uid查询service，重置到session中</span></span><br><span class="line">    User currentUser = userService.findByUid(param.getUid());</span><br><span class="line">    request.getSession().setAttribute(<span class="string">"currentUser"</span>, currentUser);</span><br><span class="line">    <span class="comment">//5.重定向到 用户中心回显</span></span><br><span class="line">    response.sendRedirect(request.getContextPath()+<span class="string">"/UserServlet?action=userInfo"</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServiceI</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateInfo</span><span class="params">(User param)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 获取 UserDao代理对象</span></span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调用dao</span></span><br><span class="line">  userDao.update(param);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 关闭sqlSession</span></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据uid查询</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByUid</span><span class="params">(<span class="keyword">int</span> uid)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 获取 UserDao代理对象</span></span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调用dao</span></span><br><span class="line">  User user = userDao.findByUid(uid);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 关闭sqlSession</span></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line">  <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserDao(接口+映射)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 动态更新</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(User param)</span></span>;</span><br><span class="line"><span class="comment">// uid查询</span></span><br><span class="line"><span class="function">User <span class="title">findByUid</span><span class="params">(<span class="keyword">int</span> uid)</span></span>;</span><br></pre></td></tr></table></figure></li></ul>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">  update tab_user</span><br><span class="line">  <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 字符串类型：除了非空判断，再添加非空串判断 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"nickname != null and nickname !=''"</span>&gt;</span></span><br><span class="line">      nickname = #&#123;nickname&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null and sex !=''"</span>&gt;</span></span><br><span class="line">      sex = #&#123;sex&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"birthday != null and birthday !=''"</span>&gt;</span></span><br><span class="line">      birthday = #&#123;birthday&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email != null and email !=''"</span>&gt;</span></span><br><span class="line">      email = #&#123;email&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"pic != null and pic !=''"</span>&gt;</span></span><br><span class="line">      pic = #&#123;pic&#125;,</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">  where uid = #&#123;uid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">  select * from tab_user where uid = #&#123;uid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-3-文件上传"><a href="#2-3-文件上传" class="headerlink" title="2.3 文件上传"></a>2.3 文件上传</h4><h5 id="2-3-1-技术分析"><a href="#2-3-1-技术分析" class="headerlink" title="2.3.1 技术分析"></a>2.3.1 技术分析</h5><ul><li><p>文件上传前端三要素</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt; </span><br><span class="line">  头像:&lt;input type=<span class="string">"file"</span> name=<span class="string">"pic"</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>文件上传后端使用servlet3.0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="meta">@MultipartConfig</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"><span class="comment">// 文件对象</span></span><br><span class="line">Part part = request.getPart(<span class="string">"pic"</span>);</span><br><span class="line"><span class="comment">// 获取文件名</span></span><br><span class="line">String filename = part.getSubmittedFileName(); <span class="comment">// 文件保存(指定保存路径)</span></span><br><span class="line">part.write(realPath);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-3-2-代码实现"><a href="#2-3-2-代码实现" class="headerlink" title="2.3.2 代码实现"></a>2.3.2 代码实现</h5><ul><li><p>home_index.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/UserServlet"</span> method=<span class="string">"post"</span></span><br><span class="line">      enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServlet(完善刚才个人修改)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="meta">@MultipartConfig</span> <span class="comment">// 文件上传注解....</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 个人信息修改</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">updateInfo</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 1.接收请求参数map</span></span><br><span class="line">      Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">      <span class="comment">// 2.封装user实体</span></span><br><span class="line">      User param = <span class="keyword">new</span> User();</span><br><span class="line">      BeanUtils.populate(param, parameterMap);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// -----文件上传 start</span></span><br><span class="line">      <span class="comment">// a.获取文件对象</span></span><br><span class="line">      Part part = request.getPart(<span class="string">"pic"</span>);</span><br><span class="line">      <span class="comment">// b.获取文件名</span></span><br><span class="line">      String filename = part.getSubmittedFileName();</span><br><span class="line">      <span class="comment">// c.判断用户是否提交文件</span></span><br><span class="line">      <span class="keyword">if</span> (filename.length()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// d.指定文件路径</span></span><br><span class="line">        String path = <span class="string">"/pic/"</span>+IdUtil.simpleUUID()+filename;</span><br><span class="line">        <span class="comment">// e.获取服务器真实路径 （d:sadfsadf/asdfasdf/saf/asdf.jpg）</span></span><br><span class="line">        String realPath = request.getServletContext().getRealPath(path);</span><br><span class="line">        <span class="comment">// f.保存文件</span></span><br><span class="line">        part.write(realPath);</span><br><span class="line">        <span class="comment">// g.给user设置图片访问地址</span></span><br><span class="line">        param.setPic(path);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// -----文件上传 end</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 3.调用service更新</span></span><br><span class="line">      userService.updateInfo(param);</span><br><span class="line">      <span class="comment">// 4.根据uid查询service，重置到session中</span></span><br><span class="line">      User currentUser = userService.findByUid(param.getUid());</span><br><span class="line">      request.getSession().setAttribute(<span class="string">"currentUser"</span>, currentUser);</span><br><span class="line">      <span class="comment">//5.重定向到 用户中心回显</span></span><br><span class="line">      response.sendRedirect(request.getContextPath() + <span class="string">"/UserServlet?action=userInfo"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-面向接口编程"><a href="#三-面向接口编程" class="headerlink" title="三.面向接口编程"></a>三.面向接口编程</h1><h4 id="3-1-使用传统开发遇到的问题"><a href="#3-1-使用传统开发遇到的问题" class="headerlink" title="3.1 使用传统开发遇到的问题"></a>3.1 使用传统开发遇到的问题</h4><p><img src="image-20200518105504923.png" alt=""></p><h4 id="3-2-面向接口编程解决的问题"><a href="#3-2-面向接口编程解决的问题" class="headerlink" title="3.2 面向接口编程解决的问题"></a>3.2 面向接口编程解决的问题</h4><p><img src="image-20200518110515225.png" alt=""></p><h1 id="四-对象管理"><a href="#四-对象管理" class="headerlink" title="四.对象管理"></a>四.对象管理</h1><h4 id="4-1-工厂模式"><a href="#4-1-工厂模式" class="headerlink" title="4.1 工厂模式"></a>4.1 工厂模式</h4><p>在java的世界中</p><blockquote><p>之前的方式需要一个对象，需要自己 new 关键字来创建 </p><p>从今天开始，我们需要一个对象(各层之间)，可以通过一个工厂来帮你创建(“类名”)</p></blockquote><p>进入企业开发，我们不再手动new对象，而是通过一个Factory工厂对象帮你创建(spring的设计思想)</p><p><img src="image-20200518113613291.png" alt=""></p><h4 id="4-2-工厂实现"><a href="#4-2-工厂实现" class="headerlink" title="4.2 工厂实现"></a>4.2 工厂实现</h4><ul><li><p>导入依赖坐标:dom4j+xpath</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--dom4j--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>编写beans.xml 配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.UserServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"addressService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AddressServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"categoryService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.CategoryServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写BeanFactory工厂</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 根据指定对象id创建对应对象实例</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 声明返回对象</span></span><br><span class="line">    Object result = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 1.通过类加载器加载beans.xml配置文件，获取io流</span></span><br><span class="line">      InputStream in = BeanFactory.class.getClassLoader().getResourceAsStream("beans.xml");</span><br><span class="line">      <span class="comment">// 2.创建dom4j核心解析器对象</span></span><br><span class="line">      SAXReader saxReader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">      <span class="comment">// 3.读取io流，解析xml，创建document对象</span></span><br><span class="line">      Document document = saxReader.read(in);</span><br><span class="line">      <span class="comment">// 4.编写xpath表达式</span></span><br><span class="line">      <span class="comment">// String xpath = "//bean[@id='userService']";</span></span><br><span class="line">      String xpath = <span class="string">"//bean[@id='"</span> + id + <span class="string">"']"</span>;</span><br><span class="line">      <span class="comment">// 5.查找对应bean标签 element对象</span></span><br><span class="line">      Element element = (Element) document.selectSingleNode(xpath);</span><br><span class="line">      <span class="comment">// 6.获取该标签的，class属性值，全限定类名</span></span><br><span class="line">      String className = element.attributeValue(<span class="string">"class"</span>);</span><br><span class="line">      <span class="comment">// 7.通过反射机制，加载到jvm虚拟机</span></span><br><span class="line">      Class&lt;?&gt; clazz = Class.forName(className);</span><br><span class="line">      <span class="comment">// 8.创建对象实例</span></span><br><span class="line">      result = clazz.newInstance();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// UserService userService = new UserServiceImpl();</span></span><br><span class="line">    UserService userService = (UserService) BeanFactory.getBean(<span class="string">"userService"</span>);</span><br><span class="line">    System.out.println(userService.findByUsername(<span class="string">"tom"</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>修改UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UserService userService = (UserService) BeanFactory.getBean(<span class="string">"userService"</span>);</span><br><span class="line"><span class="comment">//    UserService userService = new UserServiceImpl();</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="image-20200518115916980.png" alt=""></p><h1 id="五-查询收货人地址列表"><a href="#五-查询收货人地址列表" class="headerlink" title="五.查询收货人地址列表"></a>五.查询收货人地址列表</h1><h4 id="5-1-需求分析"><a href="#5-1-需求分析" class="headerlink" title="5.1 需求分析"></a>5.1 需求分析</h4><p><img src="image-20200518141220320.png" alt=""></p><h4 id="5-2-代码实现"><a href="#5-2-代码实现" class="headerlink" title="5.2 代码实现"></a>5.2 代码实现</h4><ul><li><p>home_left.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;dd&gt;&lt;a href="$&#123;pageContext.request.contextPath&#125;/AddressServlet?action=findByUid"&gt;地址管理&lt;/a&gt;&lt;/dd&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/AddressServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddressServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  AddressService addressService = (AddressService) BeanFactory.getBean(<span class="string">"addressService"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 模板，方便我们去复制</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xxx</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 根据uid查询地址列表</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByUid</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.校验session总是否有user</span></span><br><span class="line">    User currentUser = (User) request.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">    <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">      response.sendRedirect(request.getContextPath() + <span class="string">"/index.jsp"</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2.根据uid查询地址列表</span></span><br><span class="line">    List&lt;Address&gt; addressList = addressService.findByUid(currentUser.getUid());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.设置到request域</span></span><br><span class="line">    request.setAttribute(<span class="string">"addressList"</span>, addressList);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.转发到 地址页面</span></span><br><span class="line">    request.getRequestDispatcher(<span class="string">"/home_address.jsp"</span>).forward(request, response);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddressServiceImpl</span> <span class="keyword">implements</span> <span class="title">AddressService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Address&gt; <span class="title">findByUid</span><span class="params">(<span class="keyword">int</span> uid)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 创建代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    AddressDao addressDao = sqlSession.getMapper(AddressDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用dao</span></span><br><span class="line">    List&lt;Address&gt; addressList = addressDao.findByUid(uid);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> addressList;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressDao(接口+映射)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AddressDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Address&gt; <span class="title">findByUid</span><span class="params">(<span class="keyword">int</span> uid)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.AddressDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUid"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Address"</span>&gt;</span></span><br><span class="line">    select * from tab_address where uid = #&#123;uid&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"addressService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.AddressServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>home_address.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:forEach items=<span class="string">"$&#123;addressList&#125;"</span> <span class="keyword">var</span>=<span class="string">"address"</span>&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">    &lt;td&gt;$&#123;address.contact&#125;&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;$&#123;address.address&#125;&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;$&#123;address.telephone&#125;&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;</span><br><span class="line">      &lt;a href="$&#123;pageContext.request.contextPath&#125;/AddressServlet?action=updateAddress&amp;aid=$&#123;address.aid&#125;"&gt;编辑&lt;/a&gt;</span><br><span class="line">      &lt;a href="$&#123;pageContext.request.contextPath&#125;/AddressServlet?action=deleteAddress&amp;aid=$&#123;address.aid&#125;"&gt;删除&lt;/a&gt;</span><br><span class="line">      &lt;a href="$&#123;pageContext.request.contextPath&#125;/AddressServlet?action=setDefaultAddress&amp;aid=$&#123;address.aid&#125;"&gt;设为默认&lt;/a&gt;</span><br><span class="line">    &lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">  &lt;td&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="六-添加收货人地址"><a href="#六-添加收货人地址" class="headerlink" title="六.添加收货人地址"></a>六.添加收货人地址</h1><h4 id="6-1-需求分析"><a href="#6-1-需求分析" class="headerlink" title="6.1 需求分析"></a>6.1 需求分析</h4><p><img src="image-20200518143549931.png" alt=""></p><h4 id="6-2-代码实现"><a href="#6-2-代码实现" class="headerlink" title="6.2 代码实现"></a>6.2 代码实现</h4><ul><li><p>home_address.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=<span class="string">"xxxx"</span> action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/AddressServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"action"</span> value=<span class="string">"save"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input type=<span class="string">"submit"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary"</span> value=<span class="string">"保存"</span>/&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存收货地址</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  <span class="comment">// 0.校验session总是否有user</span></span><br><span class="line">  User currentUser = (User) request.getSession().getAttribute(<span class="string">"currentUser"</span>);</span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    response.sendRedirect(request.getContextPath() + <span class="string">"/index.jsp"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 1.接收请求参数 map</span></span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">    <span class="comment">// 2.封装到 address实体中</span></span><br><span class="line">    Address param = <span class="keyword">new</span> Address();</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">    <span class="comment">// 指定非默认地址</span></span><br><span class="line">    param.setIsdefault(<span class="string">"0"</span>);</span><br><span class="line">    <span class="comment">// 指定用户</span></span><br><span class="line">    param.setUser(currentUser);</span><br><span class="line">    <span class="comment">// 3.调用service保存</span></span><br><span class="line">    addressService.save(param);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.重定向</span></span><br><span class="line">    response.sendRedirect(request.getContextPath() + <span class="string">"/AddressServlet?action=findByUid"</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Address param)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 创建代理对象</span></span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  AddressDao addressDao = sqlSession.getMapper(AddressDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调用dao保存</span></span><br><span class="line">  addressDao.save(param);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 关闭会话</span></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>AddressDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Address param)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span>&gt;</span></span><br><span class="line">  insert into tab_address(uid,contact,address,telephone,isdefault)</span><br><span class="line">  values(#&#123;user.uid&#125;,#&#123;contact&#125;,#&#123;address&#125;,#&#123;telephone&#125;,#&#123;isdefault&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="七-导航分类"><a href="#七-导航分类" class="headerlink" title="七.导航分类"></a>七.导航分类</h1><h4 id="7-1-需求分析"><a href="#7-1-需求分析" class="headerlink" title="7.1 需求分析"></a>7.1 需求分析</h4><p><img src="image-20200518150252445.png" alt=""></p><h4 id="7-1-代码实现"><a href="#7-1-代码实现" class="headerlink" title="7.1 代码实现"></a>7.1 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  $(function () &#123;</span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/CategoryServlet?action=findAll'</span>;</span><br><span class="line">    $.get(url,function (resp) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoryServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  CategoryService categoryService = (CategoryService) BeanFactory.getBean(<span class="string">"categoryService"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 模板，方便我们去复制</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">xxx</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ajax查询所有</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.调用service查询</span></span><br><span class="line">    List&lt;Category&gt; categoryList = categoryService.findAll();</span><br><span class="line">    <span class="comment">// 2.转为json，响应到客户端</span></span><br><span class="line">    javaToJsonWriteClient(categoryList, response);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CategoryServiceImpl</span> <span class="keyword">implements</span> <span class="title">CategoryService</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> List&lt;Category&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    CategoryDao categoryDao = sqlSession.getMapper(CategoryDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Category&gt; categoryList= categoryDao.findAll();</span><br><span class="line">    <span class="comment">// 关闭会话</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> categoryList;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>CategoryDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CategoryDao</span> </span>&#123;</span><br><span class="line">  <span class="function">List&lt;Category&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.CategoryDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Category"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_category ORDER BY cid</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"categoryService"</span> <span class="attr">class</span>=<span class="string">"com.itheima.service.impl.CategoryServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>header.jsp</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  $(function () &#123;</span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/CategoryServlet?action=findAll'</span>;</span><br><span class="line">    $.get(url,function (resp) &#123;</span><br><span class="line">      <span class="keyword">for</span>(let c of resp)&#123;</span><br><span class="line">        $(<span class="string">'#categoryUI'</span>).append(<span class="string">'&lt;li&gt;&lt;a href="route_list.jsp"&gt;'</span>+c.cname+<span class="string">'&lt;/a&gt;&lt;/li&gt;'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 个人信息回显</strong></p><p><strong>### 校验session中user存在，放行</strong></p><p><strong>## 二 个人信息修改</strong></p><p><strong>### 基本字段</strong></p><p><strong>### 文件上传</strong></p><p>- 前端三要素</p><p>- 后端</p><p>​    - servlet3.0</p><p>​        - @MultipartConfig</p><p><strong>## 三 面向接口编程</strong></p><p><strong>### 三层架构：高内聚、低耦合</strong></p><p><strong>## 四 对象管理</strong></p><p><strong>### 工厂模式</strong></p><p>- 之前各层之间需要对象， new来创建</p><p>​    - 耦合</p><p>- 现在各层之间需要对象，通过工厂创建</p><p>​    - 松耦合</p><p><strong>### 课下抄一遍工厂类</strong></p><p>- 模拟spring雏形</p><p><strong>## 五 查询收货人地址列表</strong></p><p><strong>## 六 添加收货人地址</strong></p><p><strong>### 修改</strong></p><p><strong>### 删除</strong></p><p><strong>### 指定默认</strong></p><p><strong>## 七 导航分类</strong></p><p><strong>### ajax技术查询分类表</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;用户中心&lt;/li&gt;
&lt;li&gt;面向接口编程和工厂模式&lt;/li&gt;
&lt;li&gt;收货地址&lt;/li&gt;
&lt;li&gt;导航条&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十六）</title>
    <link href="http://yoursite.com/2020/05/17/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E5%85%AD%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/17/就业班学习笔记（五十六）/</id>
    <published>2020-05-17T01:03:54.000Z</published>
    <updated>2020-05-17T16:45:19.768Z</updated>
    
    <content type="html"><![CDATA[<ul><li>密码登录</li><li>短信登录</li><li>用户退出</li><li>SVN多人协作开发文本控制工具</li></ul><a id="more"></a><h1 id="一-用户名密码登录"><a href="#一-用户名密码登录" class="headerlink" title="一.用户名密码登录"></a>一.用户名密码登录</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><p><img src="image-20200517092917290.png" alt=""></p><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"button"</span> id=<span class="string">"pwdLogin"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary"</span> value=<span class="string">"登录"</span>/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">//给按钮绑定点击事件</span></span><br><span class="line">  $(<span class="string">'#pwdLogin'</span>).click(function () &#123;</span><br><span class="line">    <span class="comment">//使用表单序列化函数(name=value&amp;name=value)</span></span><br><span class="line">    let data = $(<span class="string">'#pwdLoginForm'</span>).serialize();</span><br><span class="line">    <span class="comment">//发送ajax</span></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      <span class="comment">// 返回的是resultInfo对象，判断</span></span><br><span class="line">      <span class="keyword">if</span> (resp.success) &#123;</span><br><span class="line">        <span class="comment">// 成功，刷新页面</span></span><br><span class="line">        location.reload();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 失败，友情提示</span></span><br><span class="line">        $(<span class="string">'pwdLoginSpan'</span>).html(resp.message);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ajax密码登录</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">pwdLogin</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//接收请求参数</span></span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line">    <span class="comment">//封装user实体</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">    <span class="comment">//调用service登录，返回resultInfo</span></span><br><span class="line">    ResultInfo resultInfo = userService.pwdLogin(param);</span><br><span class="line">    <span class="comment">//如果登录成功，将user写入session中</span></span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      <span class="comment">//resultInfo.getData() 获取service返回的user对象</span></span><br><span class="line">      req.getSession().setAttribute(<span class="string">"currentUser"</span>, resultInfo.getData());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将resultInfo转为Json响应到客户端</span></span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ResultInfo <span class="title">pwdLogin</span><span class="params">(User param)</span> </span>&#123;</span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//根据用户名查询并校验</span></span><br><span class="line">  User currentUser = userDao.findByUsername(param.getUsername());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Doesn't Exist"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//校验密码</span></span><br><span class="line">  <span class="comment">//将用户输入的密码进行加密</span></span><br><span class="line">  String md5 = SecureUtil.md5(param.getPassword());</span><br><span class="line">  <span class="comment">//对比数据库</span></span><br><span class="line">  <span class="keyword">if</span> (!currentUser.getPassword().equals(md5)) &#123;</span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Password not correct"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//登录成功</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>,<span class="string">"Login Success"</span>,currentUser);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--广告--%&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"top_banner"</span>&gt;</span><br><span class="line">  &lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/top_banner.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;%--右侧按钮--%&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"shortcut"</span>&gt;</span><br><span class="line">  &lt;!-- 未登录状态 --&gt;</span><br><span class="line">  &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;empty currentUser&#125;"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"login_out"</span>&gt;</span><br><span class="line">      &lt;a id="loginBtn" data-toggle="modal" data-target="#loginModel" style="cursor: pointer;"&gt;登录&lt;/a&gt;</span><br><span class="line">      &lt;a href="register.jsp" style="cursor: pointer;"&gt;注册&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/c:if&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-手机短信登录"><a href="#二-手机短信登录" class="headerlink" title="二.手机短信登录"></a>二.手机短信登录</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><p><img src="image-20200517101427534.png" alt=""></p><h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"button"</span> id=<span class="string">"login_sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  $(<span class="string">'#login_sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">    let telephone = $(<span class="string">'#login_telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    let data = <span class="string">'action=sendSms&amp;telephone='</span> + telephone;</span><br><span class="line"></span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      alert(resp.message);</span><br><span class="line">    &#125;)</span><br><span class="line">    countDownLogin(<span class="keyword">this</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  let num_header = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">function <span class="title">countDownLogin</span><span class="params">(obj)</span> </span>&#123;</span><br><span class="line">    num_header--;</span><br><span class="line">    <span class="keyword">if</span> (num_header == <span class="number">0</span>) &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">false</span>);</span><br><span class="line">      $(obj).val(<span class="string">'Resend SMS Code'</span>);</span><br><span class="line">      num_header = <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">true</span>);</span><br><span class="line">      $(obj).val(num_header + <span class="string">'seconds latter ,Could Resend SMS Code'</span>);</span><br><span class="line">      setTimeout(function () &#123;</span><br><span class="line">        countDownLogin(obj);</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">telLogin</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">  User currentUser = userService.findByTelephone(telephone);</span><br><span class="line"></span><br><span class="line">  ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number not Registered"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">    String sessionCode = (String) req.getSession().getAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode))) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Wrong SMS Code"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"currentUser"</span>, currentUser);</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Login Success"</span>);</span><br><span class="line"></span><br><span class="line">      req.getSession().removeAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//将resultInfo转为Json响应到客户端</span></span><br><span class="line">  javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByTelephone</span><span class="params">(String phoneNumber)</span> </span>&#123;</span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  User currentUser  = userDao.findByTelephone(phoneNumber);</span><br><span class="line"></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line">  <span class="keyword">return</span> currentUser;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- &lt;a href="javaScript:void(0)" id="login_sendSmsCode"&gt;发送手机验证码&lt;/a&gt;--%&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> id=<span class="string">"login_sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  $(<span class="string">'#login_sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">    let telephone = $(<span class="string">'#login_telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    let data = <span class="string">'action=sendSms&amp;telephone='</span> + telephone;</span><br><span class="line"></span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      alert(resp.message);</span><br><span class="line">    &#125;)</span><br><span class="line">    countDownLogin(<span class="keyword">this</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  let num_header = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">function <span class="title">countDownLogin</span><span class="params">(obj)</span> </span>&#123;</span><br><span class="line">    num_header--;</span><br><span class="line">    <span class="keyword">if</span> (num_header == <span class="number">0</span>) &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">false</span>);</span><br><span class="line">      $(obj).val(<span class="string">'Resend SMS Code'</span>);</span><br><span class="line">      num_header = <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">true</span>);</span><br><span class="line">      $(obj).val(num_header + <span class="string">'seconds latter ,Could Resend SMS Code'</span>);</span><br><span class="line">      setTimeout(function () &#123;</span><br><span class="line">        countDownLogin(obj);</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-用户退出功能"><a href="#三-用户退出功能" class="headerlink" title="三.用户退出功能"></a>三.用户退出功能</h1><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><p><img src="image-20200517104140292.png" alt=""></p><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/UserServlet?action=logout"&gt;退出&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">logout</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  req.getSession().invalidate();</span><br><span class="line">  resp.sendRedirect(req.getContextPath() + <span class="string">"/index.jsp"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-SVN"><a href="#四-SVN" class="headerlink" title="四.SVN"></a>四.SVN</h1><h4 id="4-1-开发中遇到的问题"><a href="#4-1-开发中遇到的问题" class="headerlink" title="4.1 开发中遇到的问题"></a>4.1 开发中遇到的问题</h4><p>多人协作，解决冲突</p><blockquote><p>代码版本控制工具:svn、git</p></blockquote><h4 id="4-2-SVN工作流程"><a href="#4-2-SVN工作流程" class="headerlink" title="4.2 SVN工作流程"></a>4.2 SVN工作流程</h4><p><img src="image-20200517111105210.png" alt=""></p><h4 id="4-3-SVN服务器安装和使用"><a href="#4-3-SVN服务器安装和使用" class="headerlink" title="4.3 SVN服务器安装和使用"></a>4.3 SVN服务器安装和使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment">#yum install subversion</span></span><br><span class="line">[root@localhost /]<span class="comment"># cd /home</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建目录</span></span><br><span class="line">[root@localhost home]<span class="comment"># mkdir -p svn/repository</span></span><br><span class="line"><span class="comment">#使用该目录作为仓库</span></span><br><span class="line">[root@localhost svn]<span class="comment"># svnadmin create /home/svn/repositories  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改配置文件，将下面三行注释去除，顶格写，否则报错误19</span></span><br><span class="line">[root@localhost svn]<span class="comment"># vi conf/svnserve.conf </span></span><br><span class="line">anon-access = none</span><br><span class="line">auth-access = write</span><br><span class="line">password-db = passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户，用户组，并设定权限</span></span><br><span class="line">[root@localhost svn]<span class="comment"># vi conf/authz</span></span><br><span class="line">[aliases]</span><br><span class="line"><span class="comment"># joe = /C=XZ/ST=Dessert/L=Snake City/O=Snake Oil, Ltd./OU=Research Institute/CN=Joe Average</span></span><br><span class="line"></span><br><span class="line">[groups]</span><br><span class="line">topgroup=swzxsyh</span><br><span class="line"></span><br><span class="line">[/]</span><br><span class="line">swzxsyh=rw</span><br><span class="line">@topgroup = rw</span><br><span class="line"></span><br><span class="line">[/trunk]</span><br><span class="line">@topgroup = rw</span><br><span class="line">swzxsyh=rw</span><br><span class="line"></span><br><span class="line">[/foo/bar]</span><br><span class="line">swzxsyh=rw</span><br><span class="line">@topgroup = rw</span><br><span class="line"></span><br><span class="line">[repository:/baz/fuz]</span><br><span class="line">swzxsyh=rw</span><br><span class="line">@topgroup = rw</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户账号密码</span></span><br><span class="line">[root@localhost svn]<span class="comment"># vi conf/passwd</span></span><br><span class="line">[users]</span><br><span class="line">swzxsyh = 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动服务器</span></span><br><span class="line">[root@localhost svn]<span class="comment">#svnserve -d --listen-port=3690</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#可以添加至rc.local自启动</span></span><br></pre></td></tr></table></figure><h4 id="4-4-SVN客户端安装和使用"><a href="#4-4-SVN客户端安装和使用" class="headerlink" title="4.4 SVN客户端安装和使用"></a>4.4 SVN客户端安装和使用</h4><p>macOS自带svn，也可使用Cornerstone等软件</p><ul><li><p>测试连接svn服务器</p><p>svn://swzxsyh@192.168.xx.xx:3690/share/之前创建的目录/svn/repos1</p></li><li><p><strong>使用介绍</strong></p><ul><li>检出项目 checkout</li></ul></li></ul><h4 id="4-5-IDEA集成SVN客户端插件"><a href="#4-5-IDEA集成SVN客户端插件" class="headerlink" title="4.5 IDEA集成SVN客户端插件"></a>4.5 IDEA集成SVN客户端插件</h4><p>Settings==&gt;Subversion==&gt;设置svn</p><h4 id="4-6-SVN分支操作"><a href="#4-6-SVN分支操作" class="headerlink" title="4.6 SVN分支操作"></a>4.6 SVN分支操作</h4><ul><li>在主干中检出分支代码(时间+功能)</li><li>在idea切换到分支，编辑代码，提交</li><li>在idea中操作主干将分支的代码进行合并</li></ul><h4 id="4-7-上传黑马旅游网到SVN"><a href="#4-7-上传黑马旅游网到SVN" class="headerlink" title="4.7 上传黑马旅游网到SVN"></a>4.7 上传黑马旅游网到SVN</h4><p>使用Cornerstone连接，import项目即可</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 用户名密码登录</strong></p><p><strong>### ajax方式</strong></p><p><strong>## 二 手机短信登录</strong></p><p><strong>### ajax方式</strong></p><p><strong>## 三 用户退出功能</strong></p><p><strong>### 清除session</strong></p><p><strong>## 四 SVN</strong></p><p><strong>### 源代码版本控制工具</strong></p><p>- 安装svn服务器端</p><p>​    - 创建仓库</p><p>​    - 创建用户</p><p>​    - 创建组</p><p>​    - 仓库授权</p><p>- 安装svn客户端</p><p>​    - 检出</p><p>​    - 提交</p><p>​    - 更新</p><p>​    - 代码冲突解决</p><p>​    - 删除</p><p>​    - 代码回溯</p><p>- idea配置svn插件</p><p>- svn标准仓库</p><p>​    - branchs</p><p>​    - tags</p><p>​    - trunck</p><p>- idea操作svn</p><p>​    - 分享</p><p>​    - 检出</p><p>​    - 提交</p><p>​    - 更新</p><p>​    - 代码冲突解决</p><p>- 分支</p><p>​    - 从主干中检出一个分支</p><p>​    - 将分支合并到主干</p><p>- 将黑马旅游网上传到svn服务器</p><p>​    - idea 实现share project</p><p>​    - 小乌龟 实现commit</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;密码登录&lt;/li&gt;
&lt;li&gt;短信登录&lt;/li&gt;
&lt;li&gt;用户退出&lt;/li&gt;
&lt;li&gt;SVN多人协作开发文本控制工具&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十五）</title>
    <link href="http://yoursite.com/2020/05/16/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%BA%94%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/16/就业班学习笔记（五十五）/</id>
    <published>2020-05-16T01:02:16.000Z</published>
    <updated>2020-05-17T16:08:21.624Z</updated>
    
    <content type="html"><![CDATA[<ul><li>用户模块之注册<ul><li>基本注册功能</li><li>ajax异步校验</li><li>阿里云短信服务</li><li>手机验证码校验</li><li>BaseServlet</li></ul></li></ul><a id="more"></a><h1 id="一-用户注册基本功能"><a href="#一-用户注册基本功能" class="headerlink" title="一.用户注册基本功能"></a>一.用户注册基本功能</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><ul><li><p>页面和实体以及表关系介绍</p><table><thead><tr><th>页面</th><th>➡</th><th>实体类</th><th>➡</th><th>数据库</th></tr></thead><tbody><tr><td>register.jsp</td><td></td><td>public class User implements Serializable</td><td></td><td>tab_user</td></tr></tbody></table></li><li><p>代码流程图</p><p><img src="image-20200516093105857.png" alt=""></p></li></ul><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><ul><li><p>register.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--注册表单--&gt;</span><br><span class="line">&lt;form id=<span class="string">"registerForm"</span> action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/UserServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">  </span><br><span class="line">&lt;!-- 省略 --&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"submit"</span> value=<span class="string">"注册"</span>&gt;</span><br><span class="line">&lt;span id="msg" style="color: red;"&gt;$&#123;resultInfo.message&#125;&lt;/span&gt;</span><br></pre></td></tr></table></figure></li><li><p>ResutInfo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResultInfo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个参数构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResultInfo</span><span class="params">(Boolean success)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.success = success;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二个参数构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResultInfo</span><span class="params">(Boolean success, String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.success = success;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 三个参数构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResultInfo</span><span class="params">(Boolean success, String message, Object data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.success = success;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取请求action</span></span><br><span class="line">        String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取请求参数</span></span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//封装User中</span></span><br><span class="line">        User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BeanUtils.populate(param, parameterMap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调用service，实现注册</span></span><br><span class="line">        ResultInfo resultInfo = userService.register(param);</span><br><span class="line">        <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">            resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">            req.getSession().removeAttribute(<span class="string">"smsCode_"</span>+telephone);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function">ResultInfo <span class="title">register</span><span class="params">(User param)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//注册</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultInfo <span class="title">register</span><span class="params">(User param)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取UserDao代理对象</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据username查询dao，校验</span></span><br><span class="line">        User u1 = userDao.findByUsername(param.getUsername());</span><br><span class="line">        <span class="keyword">if</span> (u1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//关闭sqlSession</span></span><br><span class="line">            MyBatisUtils.close(sqlSession);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Already Exists"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//根据telephone查询dao，校验</span></span><br><span class="line">        User u2 = userDao.findByTelephone(param.getTelephone());</span><br><span class="line">        <span class="keyword">if</span> (u2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//关闭sqlSession</span></span><br><span class="line">            MyBatisUtils.close(sqlSession);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number Already Registered"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对密码进行加密(Hutool工具包提供SecureUtil)</span></span><br><span class="line">        String md5Pwd = SecureUtil.md5(param.getPassword());</span><br><span class="line">        param.setPassword(md5Pwd);</span><br><span class="line">        <span class="comment">//保存User，完成注册</span></span><br><span class="line">        userDao.save(param);</span><br><span class="line">        <span class="comment">//关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserDao(接口+映射)</p><p>resources新建”com/itheima/dao”文件夹，然后将UserDao.xml创建在此</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123; <span class="comment">// 根据用户名查询</span></span><br><span class="line">    <span class="function">User <span class="title">findByUsername</span><span class="params">(String username)</span></span>;</span><br><span class="line"><span class="comment">// 根据手机号查询</span></span><br><span class="line"><span class="function">User <span class="title">findByTelephone</span><span class="params">(String telephone)</span></span>;</span><br><span class="line"><span class="comment">// 注册</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(User param)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_user WHERE username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByTelephone"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_user WHERE telephone = #&#123;telephone&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        INSERT INTO tab_user(username,password,telephone) VALUES (#&#123;username&#125;,#&#123;password&#125;,#&#123;telephone&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>register_ok.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">"text-align:center;height: 290px;margin-top: 50px"</span>&gt;</span><br><span class="line">    &lt;span style="font-size: 30px"&gt;恭喜您，注册成功！&lt;/span&gt;</span><br><span class="line">    &lt;div&gt;&lt;span style="color: red"&gt;5&lt;/span&gt;秒后，跳转到 &lt;a href="$&#123;pageContext.request.contextPath&#125;/index.jsp"&gt;首页&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        let num = <span class="number">5</span>;</span><br><span class="line">        setInterval(function () &#123;</span><br><span class="line">            num--;</span><br><span class="line">            $(<span class="string">'resultSpan'</span>).html(num);</span><br><span class="line">            <span class="keyword">if</span> (num == <span class="number">1</span>) &#123;</span><br><span class="line">                location.href = <span class="string">"$&#123;pageContext.request.contextPath&#125;/index.jsp"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-校验用户名是否存在"><a href="#二-校验用户名是否存在" class="headerlink" title="二.校验用户名是否存在"></a>二.校验用户名是否存在</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><p><img src="image-20200516104659881.png" alt=""></p><h4 id="2-2-技术分析"><a href="#2-2-技术分析" class="headerlink" title="2.2 技术分析"></a>2.2 技术分析</h4><ul><li>使用jquery的ajax $.post(url,data,function(resp){});</li><li>使用jackson的 ObjectMapper对象，实现转换</li></ul><h4 id="2-3-代码实现"><a href="#2-3-代码实现" class="headerlink" title="2.3 代码实现"></a>2.3 代码实现</h4><ul><li><p>register.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">  &lt;label for="username"&gt;用户名&lt;/label&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> id=<span class="string">"username"</span> name=<span class="string">"username"</span> placeholder=<span class="string">"请输入账号"</span>&gt;</span><br><span class="line">  &lt;span id="userInfo" style="font-size:10px"&gt;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">//用户名绑定失去焦点事件</span></span><br><span class="line">  $(<span class="string">'#username'</span>).blur(function () &#123;</span><br><span class="line">    <span class="comment">//获取用户输入的value值</span></span><br><span class="line">    let username = $(<span class="keyword">this</span>).val();</span><br><span class="line">    <span class="comment">//ajax请求</span></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    let data = <span class="string">'action=fundByUsername&amp;username='</span> + username;</span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      <span class="comment">//resp就是返回的json对象(对应java类就是 ResultInfo)</span></span><br><span class="line">      <span class="keyword">if</span> (resp.success) &#123;</span><br><span class="line">        $(<span class="string">'userInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'green'</span>).html(<span class="string">'Username OK'</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">'userInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'red'</span>).html(<span class="string">'Username Already Registered'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求action</span></span><br><span class="line">    String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">    <span class="comment">//判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByUsername"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByUserName(req, resp);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//ajax校验用户名</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByUserName</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 1.接收请求参数</span></span><br><span class="line">      String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2.调用service查询</span></span><br><span class="line">      User user = userService.findByUsername(username);</span><br><span class="line"></span><br><span class="line">      ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 3.判断</span></span><br><span class="line">      <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Already Exists"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Can Be Registered"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 4.将resultInfo转为json</span></span><br><span class="line">      ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">      String json = objectMapper.writeValueAsString(resultInfo);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 5.通过response响应</span></span><br><span class="line">      resp.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">      resp.getWriter().write(json);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据用户名查询</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取 UserDao代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    User user = userDao.findByUsername(username);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 关闭sqlSession</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-课下作业-–-实现手机号的异步校验"><a href="#2-4-课下作业-–-实现手机号的异步校验" class="headerlink" title="2.4 课下作业 – 实现手机号的异步校验"></a>2.4 课下作业 – 实现手机号的异步校验</h4><ul><li>register.jsp</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;tr&gt;</span><br><span class="line">  &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">    &lt;label for="telephone"&gt;手机号&lt;/label&gt;</span><br><span class="line">  &lt;/td&gt;</span><br><span class="line">  &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> id=<span class="string">"telephone"</span> name=<span class="string">"telephone"</span> placeholder=<span class="string">"请输入您的手机号"</span>&gt;</span><br><span class="line">    &lt;span id="phoneInfo" style="font-size: 50px"&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/td&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">//用户名绑定失去焦点事件</span></span><br><span class="line">    $(<span class="string">'#telephone'</span>).blur(function () &#123;</span><br><span class="line">      <span class="comment">//获取用户输入的value值</span></span><br><span class="line">      let phoneNumber = $(<span class="keyword">this</span>).val();</span><br><span class="line">      <span class="comment">//ajax请求</span></span><br><span class="line">      let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">      let data = <span class="string">'action=fundByPhoneNumber&amp;PhoneNumber='</span> + phoneNumber;</span><br><span class="line">      $.post(url, data, function (resp) &#123;</span><br><span class="line">        <span class="comment">//resp就是返回的json对象(对应java类就是 ResultInfo)</span></span><br><span class="line">        <span class="keyword">if</span> (resp.success) &#123;</span><br><span class="line">          $(<span class="string">'phoneInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'green'</span>).html(<span class="string">'Phone Number OK'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          $(<span class="string">'phoneInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'red'</span>).html(<span class="string">'Phone Number Already Registered'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求action</span></span><br><span class="line">    String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">    <span class="comment">//判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByUsername"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByUserName(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByPhoneNumber"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByPhoneNumber(req, resp);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPhoneNumber</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">      String username = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">      User telephone = userService.findByTelephone(username);</span><br><span class="line"></span><br><span class="line">      ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (telephone != <span class="keyword">null</span>) &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number Already Registered"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Phone OK"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">      String json = objectMapper.writeValueAsString(resultInfo);</span><br><span class="line"></span><br><span class="line">      resp.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">      resp.getWriter().write(json);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByTelephone</span><span class="params">(String phoneNumber)</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    User telephone = userDao.findByTelephone(phoneNumber);</span><br><span class="line">    </span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> telephone;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="三-阿里云-手机服务"><a href="#三-阿里云-手机服务" class="headerlink" title="三.阿里云 手机服务"></a>三.阿里云 手机服务</h1><h4 id="3-1-发送短信流程"><a href="#3-1-发送短信流程" class="headerlink" title="3.1 发送短信流程"></a>3.1 发送短信流程</h4><p>register.jsp==&gt;黑马旅游网==&gt;远程调用阿里云平台接口==&gt;三大运营商==&gt;用户==&gt;返回到注册页面</p><h4 id="3-2-阿里云使用"><a href="#3-2-阿里云使用" class="headerlink" title="3.2 阿里云使用"></a>3.2 阿里云使用</h4><p>访问阿里云平台-登录-管理控制台，短信服务-国内消息-申请签名和模板，申请accessKey密钥对-充钱</p><h4 id="3-3-SDK使用"><a href="#3-3-SDK使用" class="headerlink" title="3.3 SDK使用"></a>3.3 SDK使用</h4><p>软件开发工具包(Software Development Kit )包含 jar包、API文档、工具类的集合都可以叫做 SDK</p><ul><li><p>请求参数</p><table><thead><tr><th>参数名称</th><th>参数类型</th><th>是否必须</th><th>样例取值</th></tr></thead><tbody><tr><td>phoneNumbers 手机号</td><td>String</td><td>必须</td><td>15000000000</td></tr><tr><td>signName     签名</td><td>String</td><td>必须</td><td>云通信</td></tr><tr><td>templateCode 模板</td><td>String</td><td>必须</td><td>SMS_0000</td></tr><tr><td>TemplateParam</td><td>String</td><td>可选</td><td>{“code”:”1234”,<br>“product”:”ytx”}</td></tr></tbody></table></li></ul><ul><li><p>响应参数</p><table><thead><tr><th>参数名称</th><th>出参类型</th><th>样例取值</th><th>参数说明</th></tr></thead><tbody><tr><td>RequestID</td><td>String</td><td>8906582E-6722</td><td>请求ID</td></tr><tr><td>Code</td><td>String</td><td>OK</td><td>状态码-返回OK代表请求成功，嵌套错误代码详见错误码列表</td></tr><tr><td>Message</td><td>String</td><td>请求成功</td><td>状态码的描述</td></tr><tr><td>Bizld</td><td>String</td><td>134534^4351232</td><td>发送回执ID，可根据ID查询具体的发送状态</td></tr></tbody></table></li><li><p>放入SDK工具</p><p>SmsUtils.java放入Utils</p></li><li><p>引入依赖包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="comment">&lt;!-- 注：如提示报错，先升级基础包版，无法解决可联系技术支持 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-dysmsapi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">  SendSmsResponse sendSmsResponse = sendSms(<span class="string">"15814076346"</span>, <span class="string">"黑马旅游网"</span>, <span class="string">"SMS_166778713"</span>, <span class="string">"&#123;\"code\":\"123456\"&#125;"</span>);</span><br><span class="line">  System.out.println(sendSmsResponse);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="四-手机验证码校验功能"><a href="#四-手机验证码校验功能" class="headerlink" title="四.手机验证码校验功能"></a>四.手机验证码校验功能</h1><h4 id="4-1-实现发送短信功能"><a href="#4-1-实现发送短信功能" class="headerlink" title="4.1 实现发送短信功能"></a>4.1 实现发送短信功能</h4><h5 id="4-1-1-需求分析"><a href="#4-1-1-需求分析" class="headerlink" title="4.1.1 需求分析"></a>4.1.1 需求分析</h5><p><img src="image-20200516140947552.png" alt=""></p><h5 id="4-1-3-代码实现"><a href="#4-1-3-代码实现" class="headerlink" title="4.1.3 代码实现"></a>4.1.3 代码实现</h5><ul><li><p>register.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">  &lt;label for="smsCode"&gt;验证码&lt;/label&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right check"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> id=<span class="string">"smsCode"</span> name=<span class="string">"smsCode"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"check"</span> placeholder=<span class="string">"请输入验证码"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input id=<span class="string">"sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>/&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">//给按钮绑定点击事件</span></span><br><span class="line">    $(<span class="string">'#sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">      let telephone = $(<span class="string">'#telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">      let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">      let data = <span class="string">'action=sendSms&amp;telephone='</span> + telephone;</span><br><span class="line"></span><br><span class="line">      $.post(url, data, function (resp) &#123;</span><br><span class="line">        alert(resp.message);</span><br><span class="line">      &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求action</span></span><br><span class="line">    String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">    <span class="comment">//判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByUsername"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByUserName(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByPhoneNumber"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByPhoneNumber(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"sendSms"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.sendSms(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendSms</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">    String smsCode = RandomStringUtils.randomNumeric(<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    ResultInfo resultInfo = userService.sendSms(telephone, smsCode);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"smsCode_"</span> + telephone, smsCode);</span><br><span class="line">      System.out.println(<span class="string">"smsCode: "</span> + smsCode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    String json = <span class="keyword">new</span> ObjectMapper().writeValueAsString(resultInfo);</span><br><span class="line"></span><br><span class="line">    resp.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">    resp.getWriter().write(json);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 发送短信</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultInfo <span class="title">sendSms</span><span class="params">(String telephone, String smsCode)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 定义签名</span></span><br><span class="line">        String signName = <span class="string">"黑马旅游网"</span>;</span><br><span class="line">        <span class="comment">// 定义模板</span></span><br><span class="line">        String templateCode = <span class="string">"SMS_123123123"</span>;</span><br><span class="line">        <span class="comment">// 拼接验证码(json)</span></span><br><span class="line">        String param = <span class="string">"&#123;\"code\":\""</span> + smsCode + <span class="string">"\"&#125;"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用工具类发送短信</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SendSmsResponse sendSmsResponse = SmsUtils.sendSms(telephone, signName, templateCode, param);</span><br><span class="line">            <span class="keyword">if</span> (sendSmsResponse.getCode().equals(<span class="string">"OK"</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Message Send Successful"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClientException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Message Send Failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-2-完善注册代码"><a href="#4-2-完善注册代码" class="headerlink" title="4.2 完善注册代码"></a>4.2 完善注册代码</h4><h5 id="4-2-1-需求分析"><a href="#4-2-1-需求分析" class="headerlink" title="4.2.1 需求分析"></a>4.2.1 需求分析</h5><h5 id="4-2-3-代码实现"><a href="#4-2-3-代码实现" class="headerlink" title="4.2.3 代码实现"></a>4.2.3 代码实现</h5><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//注册</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// a.获取请求参数</span></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">  String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// b.获取session中验证码</span></span><br><span class="line">  String sessionCode = (String) req.getSession().getAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// c.进行校验</span></span><br><span class="line">  <span class="keyword">if</span>(sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode)))&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证码不正确</span></span><br><span class="line">    req.setAttribute(<span class="string">"resultInfo"</span>,<span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>,<span class="string">"SMS Code not correct"</span>));</span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req,resp);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//获取请求参数</span></span><br><span class="line">  Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//封装User中</span></span><br><span class="line">  User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//调用service，实现注册</span></span><br><span class="line">  ResultInfo resultInfo = userService.register(param);</span><br><span class="line">  <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">    resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">    req.getSession().removeAttribute(<span class="string">"smsCode_"</span>+telephone);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-60秒倒计时"><a href="#4-3-60秒倒计时" class="headerlink" title="4.3 60秒倒计时"></a>4.3 60秒倒计时</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">  &lt;label for="smsCode"&gt;验证码&lt;/label&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right check"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> id=<span class="string">"smsCode"</span> name=<span class="string">"smsCode"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"check"</span> placeholder=<span class="string">"请输入验证码"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input id=<span class="string">"sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>/&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">//给按钮绑定点击事件</span></span><br><span class="line">    $(<span class="string">'#sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">      let telephone = $(<span class="string">'#telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">      let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">      let data = <span class="string">'action=sendSms&amp;telephone'</span> + telephone;</span><br><span class="line"></span><br><span class="line">      $.post(url, data, function (resp) &#123;</span><br><span class="line">        alert(resp.message);</span><br><span class="line">      &#125;);</span><br><span class="line">      countDown(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    let num = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">function <span class="title">countDown</span><span class="params">(obj)</span> </span>&#123;</span><br><span class="line">      num--;</span><br><span class="line">      <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">        $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">false</span>);</span><br><span class="line">        $(obj).val(<span class="string">'Resend SMS Code'</span>);</span><br><span class="line">        num = <span class="number">10</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">true</span>);</span><br><span class="line">        $(obj).val(<span class="string">'Resend SMS Code After'</span> + num + <span class="string">'Seconds'</span>);</span><br><span class="line">        setTimeout(function () &#123;</span><br><span class="line">          countDown(obj);</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure><h1 id="五-BaseServlet"><a href="#五-BaseServlet" class="headerlink" title="五.BaseServlet"></a>五.BaseServlet</h1><ul><li><p>抽取返回ajax数据的公共方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取请求action(获取的就是方法名)</span></span><br><span class="line">    String action = request.getParameter(<span class="string">"action"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取字节码对象</span></span><br><span class="line">    Class clazz = <span class="keyword">this</span>.getClass();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 获取指定名称的方法对象(method对象)</span></span><br><span class="line">      Method declaredMethod = clazz.getDeclaredMethod(action, HttpServletRequest<span class="class">.<span class="keyword">class</span>, <span class="title">HttpServletResponse</span>.<span class="title">class</span>)</span>;</span><br><span class="line">      <span class="comment">// (private修饰的方法，需要暴力反射..)</span></span><br><span class="line">      <span class="comment">// 通过反射调用指定名称的方法</span></span><br><span class="line">      declaredMethod.invoke(<span class="keyword">this</span>, request, response);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Server Busy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">javaToJsonWriteClient</span><span class="params">(Object object, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    String json = <span class="keyword">new</span> ObjectMapper().writeValueAsString(object);</span><br><span class="line"></span><br><span class="line">    response.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">    response.getWriter().write(json);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//注册</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// a.获取请求参数</span></span><br><span class="line">    String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">    String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// b.获取session中验证码</span></span><br><span class="line">    String sessionCode = (String) req.getSession().getAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// c.进行校验</span></span><br><span class="line">    <span class="keyword">if</span> (sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode))) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 验证码不正确</span></span><br><span class="line">      req.setAttribute(<span class="string">"resultInfo"</span>, <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"SMS Code not correct"</span>));</span><br><span class="line">      req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取请求参数</span></span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//封装User中</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      BeanUtils.populate(param, parameterMap);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//调用service，实现注册</span></span><br><span class="line">    ResultInfo resultInfo = userService.register(param);</span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">      req.getSession().removeAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">      req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//ajax校验用户名</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByUserName</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.接收请求参数</span></span><br><span class="line">    String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.调用service查询</span></span><br><span class="line">    User user = userService.findByUsername(username);</span><br><span class="line"></span><br><span class="line">    ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.判断</span></span><br><span class="line">    <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Already Exists"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Can Be Registered"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPhoneNumber</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    String username = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">    User telephone = userService.findByTelephone(username);</span><br><span class="line"></span><br><span class="line">    ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (telephone != <span class="keyword">null</span>) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number Already Registered"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Phone OK"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendSms</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.获取请求参数</span></span><br><span class="line">    String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">    <span class="comment">// 2.生成6位随机数(apache提供的)</span></span><br><span class="line">    String smsCode = RandomStringUtils.randomNumeric(<span class="number">6</span>);</span><br><span class="line">    <span class="comment">// 3.调用service完成短信发送，返回resultInfo</span></span><br><span class="line">    ResultInfo resultInfo = userService.sendSms(telephone, smsCode);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.如果发送成功，将验证码写入到session中</span></span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"smsCode_"</span> + telephone, smsCode);</span><br><span class="line">      System.out.println(<span class="string">"smsCode: "</span> + smsCode);</span><br><span class="line">    &#125;</span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="# 总结"></a># 总结</h1><h2 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h2><h3 id="用户基本注册功能"><a href="#用户基本注册功能" class="headerlink" title="用户基本注册功能"></a>用户基本注册功能</h3><p>- 根据需求图编写代码</p><h3 id="校验用户名是否存在"><a href="#校验用户名是否存在" class="headerlink" title="校验用户名是否存在"></a>校验用户名是否存在</h3><p>- ajax异步校验</p><h3 id="阿里云-短信服务"><a href="#阿里云-短信服务" class="headerlink" title="阿里云-短信服务"></a>阿里云-短信服务</h3><p>- 注册短信服务</p><p>​    - 1. 访问短信服务官网（<a href="https://www.aliyun.com/product/sms）">https://www.aliyun.com/product/sms）</a></p><p>​    - 2. 申请用户（使用支付宝账户）</p><p>​    - 3. 选的短信服务 管理控制台</p><p>​    - 4. 选择国内消息</p><p>​    - 5. 申请签名和模板，预计时间15分钟</p><p>​    - 6. 申请accessKey秘钥</p><p>​    - 7. 充值1元块钱</p><h3 id="手机验证码校验功能"><a href="#手机验证码校验功能" class="headerlink" title="手机验证码校验功能"></a>手机验证码校验功能</h3><p>- ajax发送短信</p><p>- 完善用户注册功能</p><p>- 实现60秒倒计时</p><h3 id="BaseServlet"><a href="#BaseServlet" class="headerlink" title="BaseServlet"></a>BaseServlet</h3><p>- 抄一遍</p><p>​    - 通过反射找出同名的方法，调用</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;用户模块之注册&lt;ul&gt;
&lt;li&gt;基本注册功能&lt;/li&gt;
&lt;li&gt;ajax异步校验&lt;/li&gt;
&lt;li&gt;阿里云短信服务&lt;/li&gt;
&lt;li&gt;手机验证码校验&lt;/li&gt;
&lt;li&gt;BaseServlet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十四）</title>
    <link href="http://yoursite.com/2020/05/14/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E5%9B%9B%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/14/就业班学习笔记（五十四）/</id>
    <published>2020-05-14T01:02:03.000Z</published>
    <updated>2020-05-15T18:45:42.546Z</updated>
    
    <content type="html"><![CDATA[<ul><li>maven基础与环境搭建</li></ul><a id="more"></a><h1 id="一-Maven简介"><a href="#一-Maven简介" class="headerlink" title="一.Maven简介"></a>一.Maven简介</h1><h4 id="1-1-Maven是什么"><a href="#1-1-Maven是什么" class="headerlink" title="1.1 Maven是什么"></a>1.1 Maven是什么</h4><p>Maven 是一个项目管理工具，它包含了一个项目对象模型 (POM:Project Object Model)，一组标准集合，一个项 目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在生命周 期阶段(phase)中插件(plugin)目标(goal)的逻辑。</p><h4 id="1-2-Maven能解决什么问题"><a href="#1-2-Maven能解决什么问题" class="headerlink" title="1.2 Maven能解决什么问题"></a>1.2 Maven能解决什么问题</h4><p>一种工具，可以构建工程，管理 jar包，编译代码，还 能帮你自动运行单元测试，打包，生成报表，部署项目，生成 Web 站点。</p><h4 id="1-3-Maven的两个核心功能"><a href="#1-3-Maven的两个核心功能" class="headerlink" title="1.3 Maven的两个核心功能"></a>1.3 Maven的两个核心功能</h4><h5 id="1-3-1-依赖管理"><a href="#1-3-1-依赖管理" class="headerlink" title="1.3.1 依赖管理"></a>1.3.1 依赖管理</h5><p>Maven的一个核心特性就是依赖管理。MVN依赖管理，就是一个管理jar包的过程</p><table><thead><tr><th>CRM项目<br>使用mvn工程实现</th><th>➡项目中给定坐标，去仓库拉取jar包➡<br>索引的存在，使拉取jar包过程，可以认为是自己项目中有的</th><th>MVN仓库<br>jar的仓库</th></tr></thead><tbody><tr><td></td><td>坐标:将来要找某个jar包，就是要确定这个jar包的坐标</td><td></td></tr><tr><td></td><td>jar包如何给出坐标:公司/组织名+项目名+版本号一起确定</td><td></td></tr></tbody></table><p>maven工程中不直接将jar包导入到工程中，而是通过在pom.xml文件中添加所需jar包的坐标，避免了jar直接引入进来，在需要用到jar包的时候，只要查找pom.xml文件，再通过pom.xml文件中的坐标，到一个专门用于”存放jar包的仓库”(maven仓库)中根据坐标从而找到这些jar包，再把这些jar包拿去运行。 </p><ul><li><p>通过读取pom.xml 文件中的坐标，再到仓库中找到jar包，会不会很慢</p><blockquote><p>通过pom.xml文件配置要引入的jar包的坐标，再读取坐标并到仓库中加载jar包，这样我们就可以直接使用jar包，为了解决这个过程中速度慢的问题，maven中也有索引的概念，通过建立索引，可以大大提高加载jar包的速度，使得我们认为jar包基本跟放在本地的工程文件中再读取出来的速度是一样的。</p></blockquote></li></ul><h5 id="1-3-2-项目构建"><a href="#1-3-2-项目构建" class="headerlink" title="1.3.2 项目构建"></a>1.3.2 项目构建</h5><ul><li><p>什么是项目构建</p><p>项目从编译、测试、运行、打包、安装 ，部署整个过程都交给maven进行管理，这个过程称为构建。 </p><p>一键构建 指的是整个构建过程，使用maven一个命令可以轻松完成整个工作。</p></li><li><p>Maven规范化构建流程</p><table><thead><tr><th>清理</th><th>➡</th><th>编译</th><th>➡</th><th>测试</th><th>➡</th><th>报告</th><th>➡</th><th>打包</th><th>➡</th><th>部署</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table></li></ul><h1 id="二-Maven安装和使用"><a href="#二-Maven安装和使用" class="headerlink" title="二 Maven安装和使用"></a>二 Maven安装和使用</h1><h4 id="2-1-Maven下载和安装"><a href="#2-1-Maven下载和安装" class="headerlink" title="2.1 Maven下载和安装"></a>2.1 Maven下载和安装</h4><h5 id="2-1-1-Maven下载"><a href="#2-1-1-Maven下载" class="headerlink" title="2.1.1 Maven下载"></a>2.1.1 Maven下载</h5><p>Maven官网下载地址:<a href="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi</a></p><p>目前使用@3.5版本</p><h5 id="2-1-2-Maven安装"><a href="#2-1-2-Maven安装" class="headerlink" title="2.1.2 Maven安装"></a>2.1.2 Maven安装</h5><p>将apache-maven-3.5.2-bin.zip解压并添加至path</p><ul><li><p>maven目录结构</p><table><thead><tr><th>目录</th><th>介绍</th></tr></thead><tbody><tr><td>bin</td><td>存放了 maven 的命令</td></tr><tr><td>boot</td><td>存放了一些 maven 本身的引导程序，如类加载器等</td></tr><tr><td>conf</td><td>存放了 maven 的一些配置文件，如 setting.xml 文件</td></tr><tr><td>lib</td><td>存放了 maven 本身运行所需的一些 jar 包</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">apache-maven-3.5.2</span><br><span class="line">├── LICENSE</span><br><span class="line">├── NOTICE</span><br><span class="line">├── README.txt</span><br><span class="line">├── bin</span><br><span class="line">│   ├── m2.conf</span><br><span class="line">│   ├── mvn</span><br><span class="line">│   ├── mvn.cmd</span><br><span class="line">│   ├── mvnDebug</span><br><span class="line">│   ├── mvnDebug.cmd</span><br><span class="line">│   └── mvnyjp</span><br><span class="line">├── boot</span><br><span class="line">│   └── plexus-classworlds-2.5.2.jar</span><br><span class="line">├── conf</span><br><span class="line">│   ├── logging</span><br><span class="line">│   ├── settings.xml</span><br><span class="line">│   └── toolchains.xml</span><br><span class="line">└── lib</span><br><span class="line">    ├── aopalliance-1.0.jar</span><br><span class="line">├── ...省略</span><br><span class="line">    └── wagon-provider-api.license</span><br><span class="line"></span><br><span class="line">7 directories, 91 files</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-1-3-Maven及JDK配置"><a href="#2-1-3-Maven及JDK配置" class="headerlink" title="2.1.3 Maven及JDK配置"></a>2.1.3 Maven及JDK配置</h5><p>  Maven 3.3+ require JDK 1.7 or above to execute - they still allow you to build against 1.3 and other JDK versions <a href="https://maven.apache.org/guides/mini/guide-using-toolchains.html">by Using Toolchains</a></p><ul><li><p>配置PATH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi .zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment">#MAVEN_HOME</span></span><br><span class="line"><span class="built_in">export</span> MAVEN_HOME=/Users/swzxsyh/Program/apache-maven-3.5.2</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$MAVEN_HOME</span>/bin</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-1-4-Maven软件版本测试"><a href="#2-1-4-Maven软件版本测试" class="headerlink" title="2.1.4 Maven软件版本测试"></a>2.1.4 Maven软件版本测试</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> ~ <span class="comment">#mvn -v</span></span><br><span class="line">Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T15:58:13+08:00)</span><br><span class="line">Maven home: /Users/swzxsyh/Program/apache-maven-3.5.2</span><br><span class="line">Java version: 1.8.0_221, vendor: Oracle Corporation</span><br><span class="line">Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre</span><br><span class="line">Default locale: en_CN, platform encoding: UTF-8</span><br><span class="line">OS name: <span class="string">"mac os x"</span>, version: <span class="string">"10.15.4"</span>, arch: <span class="string">"x86_64"</span>, family: <span class="string">"mac"</span></span><br></pre></td></tr></table></figure><h4 id="2-3-Maven仓库"><a href="#2-3-Maven仓库" class="headerlink" title="2.3 Maven仓库"></a>2.3 Maven仓库</h4><h5 id="2-3-1-Maven仓库的分类"><a href="#2-3-1-Maven仓库的分类" class="headerlink" title="2.3.1 Maven仓库的分类"></a>2.3.1 Maven仓库的分类</h5><p>Maven仓库分为本地仓库和远程仓库二大类。而远程仓库又可分成中央仓库，私服，第三方仓库。</p><table><thead><tr><th></th><th>Maven仓库</th><th align="center"></th></tr></thead><tbody><tr><td><b/>本地仓库</td><td></td><td align="center"><b/>远程仓库</td></tr><tr><td></td><td></td><td align="center">⬇</td></tr><tr><td></td><td></td><td align="center">中央仓库</td></tr><tr><td></td><td></td><td align="center">私服</td></tr><tr><td></td><td></td><td align="center">第三方公共库</td></tr></tbody></table><ul><li><p>依赖寻找流程</p><ul><li><p>在本地仓库中，根据Maven坐标系寻找指定依赖，如果存在，直接返回。</p></li><li><p>如果Maven仓库中不存在，或者需要检查依赖的版本时，maven则会去远程仓库中寻找，下载到本地仓库中再使 用。</p></li></ul></li><li><p>本地仓库</p><p>用来存储从远程仓库下载的插件和jar包，项目使用一些插件或jar包，优先从本地仓库查找。</p></li><li><p>中央仓库</p><p>在maven软件中内置一个远程仓库地址<a href="http://repo1.maven.org/maven2">http://repo1.maven.org/maven2</a> ，它是中央仓库，服务于整个互联网，它是由Maven团队自己维护，里面存储了非常全的jar包，它包含了世界上大部分流行的开源项目构件。</p></li><li><p>第三方公共库</p><p>Maven 仓库默认中央仓库在国外且只有一个， 国内使用难免很慢，我们可以更换为第三方公共库，例如:阿里云镜 像。</p></li><li><p>私服</p><p>私服是一种特殊的远程仓库，其内容是来自于其他的远程仓库，一般架设在局域网内，提供给一个组织的人员使用。 当Maven需要下载依赖时，从私服请求，如果私服上不存在该依赖，则从其他远程仓库下载，同时缓存在私服上，提 供给其他人使用。如果项目中的一些内部模块，无法发布到外部远程仓库中，也可发布在私服上，提供给项目中的其 他人员使用。</p></li></ul><h5 id="2-3-2-Maven本地仓库的配置"><a href="#2-3-2-Maven本地仓库的配置" class="headerlink" title="2.3.2 Maven本地仓库的配置"></a>2.3.2 Maven本地仓库的配置</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cd  $MAVEN_HOME/conf </span><br><span class="line">vi settings.xml</span><br><span class="line"># 找到</span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment">   | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: $&#123;user.home&#125;/.m2/repository</span></span><br><span class="line"><span class="comment">  &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  将<span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/path/to/local/repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span>改为本地仓库路径添加到注释后</span><br></pre></td></tr></table></figure><h5 id="2-3-4-Maven仓库国内镜像配置"><a href="#2-3-4-Maven仓库国内镜像配置" class="headerlink" title="2.3.4 Maven仓库国内镜像配置"></a>2.3.4 Maven仓库国内镜像配置</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- mirror</span></span><br><span class="line"><span class="comment">   | Specifies a repository mirror site to use instead of a given repository. The repository that</span></span><br><span class="line"><span class="comment">   | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</span></span><br><span class="line"><span class="comment">   | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">  &lt;mirror&gt;</span></span><br><span class="line"><span class="comment">    &lt;id&gt;mirrorId&lt;/id&gt;</span></span><br><span class="line"><span class="comment">    &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="comment">    &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class="line"><span class="comment">    &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</span></span><br><span class="line"><span class="comment">  &lt;/mirror&gt;</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 添加阿里云镜像 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-3-4-全局setting与用户setting"><a href="#2-3-4-全局setting与用户setting" class="headerlink" title="2.3.4 全局setting与用户setting"></a>2.3.4 全局setting与用户setting</h5><p>maven仓库地址、私服等配置信息需要在setting.xml文件中配置，分为全局配置和用户配置。 </p><p>在maven安装目录下 的有 conf/setting.xml文件，此setting.xml文件用于maven的所有project项目，它作为maven的全局配置。 如需要 个性配置则需要在用户配置中设置，用户配置的setting.xml文件默认的位置在:${user.dir} /.m2/settings.xml目录 中,${user.dir} 指windows 中的用户目录。</p><p> maven会先找用户配置，如果找到则以用户配置文件为准，否则使用全 局配置文件。</p><h4 id="2-3-Maven坐标和依赖"><a href="#2-3-Maven坐标和依赖" class="headerlink" title="2.3 Maven坐标和依赖"></a>2.3 Maven坐标和依赖</h4><p>Maven的一个核心的作用就是管理项目的依赖，引入我们所需的各种jar包等。为了能自动化的解析任何一个Java构 件，Maven必须将这些Jar包或者其他资源进行唯一标识，这是管理项目的依赖的基础，也就是我们要说的坐标。包 括我们自己开发的项目，也是要通过坐标进行唯一标识的，这样才能才其它项目中进行依赖引用。</p><ul><li><p>坐标的定义元素如下</p><table><thead><tr><th>元素</th><th>作用</th></tr></thead><tbody><tr><td>groupId</td><td>定义当前Maven项目名称</td></tr><tr><td>artifactId</td><td>定义项目模块</td></tr><tr><td>version</td><td>定义当前项目的当前版本</td></tr></tbody></table></li><li><p>例如</p><p>创建一个Maven的web项目，在pom.xml文件中生成坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--当前项目坐标--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itheima<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven_helloword<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要引入junit的测试jar，只需要在pom.xml配置文件中配置引入junit的坐标依赖即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 依赖关系 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 此项目运行使用junit，所以此项目依赖junit --&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的项目名称 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的模块名称 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="comment">&lt;!-- junit版本 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 依赖范围:单元测试时使用junit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-Maven工程的认识"><a href="#2-4-Maven工程的认识" class="headerlink" title="2.4 Maven工程的认识"></a>2.4 Maven工程的认识</h4><h5 id="2-4-1-Maven工程的目录结构"><a href="#2-4-1-Maven工程的目录结构" class="headerlink" title="2.4.1 Maven工程的目录结构"></a>2.4.1 Maven工程的目录结构</h5><p>作为一个maven工程，它的src目录和pom.xml是必备的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">├── maven_java.iml</span><br><span class="line">├── pom.xml</span><br><span class="line">├── src</span><br><span class="line">└── target</span><br></pre></td></tr></table></figure><p>进入src目录后，我们发现它里面的目录结构如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">├── main</span><br><span class="line">│   ├── java<span class="comment">#项目代码</span></span><br><span class="line">│   ├── resources<span class="comment">#配置文件</span></span><br><span class="line">│   └── webapp<span class="comment">#页面资源</span></span><br><span class="line">└── <span class="built_in">test</span></span><br><span class="line">├── java<span class="comment">#测试代码</span></span><br><span class="line">    └──resources </span><br><span class="line"></span><br><span class="line">6 directories, 0 files</span><br></pre></td></tr></table></figure><table><thead><tr><th>文件</th><th>说明</th></tr></thead><tbody><tr><td>src/main/java</td><td>存放项目的.java文件</td></tr><tr><td>src/main/resources</td><td>存放项目资源文件，如spring, mybatis配置文件</td></tr><tr><td>src/test/java</td><td>存放所有单元测试.java文件，如junit测试类</td></tr><tr><td>src/test/resources</td><td>测试资源文件</td></tr><tr><td>target</td><td>项目输出位置，编译后的class文件会输出到此目录</td></tr><tr><td>pom.xml</td><td>maven项目核心配置文</td></tr></tbody></table><ul><li>注意:如果是普通的java项目，那么就没有webapp目录。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">完整java项目</span><br><span class="line">java工程名（项目名）</span><br><span class="line">|-- src目录</span><br><span class="line">|-- main目录（主干代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- <span class="built_in">test</span>目录（测试代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- pom.xml（maven工程核心配置文件）</span><br><span class="line">|-- target目录（存放编译后的class文件.....）</span><br><span class="line"></span><br><span class="line">* web项目【重点】</span><br><span class="line">web工程名（项目名）</span><br><span class="line">|-- src目录</span><br><span class="line">|-- main目录（主干代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- webapp目录（页面资源）</span><br><span class="line">|-- WEB-INF</span><br><span class="line">|-- web.xml(web工程核心配置文件)</span><br><span class="line">|-- index.jsp</span><br><span class="line">|-- css、js、img..</span><br><span class="line">|-- <span class="built_in">test</span>目录（测试代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- pom.xml（maven工程核心配置文件）</span><br><span class="line">|-- target目录（存放编译后的class文件.....）</span><br></pre></td></tr></table></figure><h5 id="2-4-2-Maven工程的运行"><a href="#2-4-2-Maven工程的运行" class="headerlink" title="2.4.2 Maven工程的运行"></a>2.4.2 Maven工程的运行</h5><p>进入maven工程目录(当前目录有pom.xml文件)，运行tomcat7:run命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">~ mvn tomcat7:run</span><br><span class="line"></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] &gt;&gt;&gt; tomcat7-maven-plugin:2.2:run (default-cli) &gt; process-classes @ maven_web &gt;&gt;&gt;</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Changes detected - recompiling the module!</span><br><span class="line">[INFO] Compiling 1 <span class="built_in">source</span> file to /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/classes</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] &lt;&lt;&lt; tomcat7-maven-plugin:2.2:run (default-cli) &lt; process-classes @ maven_web &lt;&lt;&lt;</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- tomcat7-maven-plugin:2.2:run (default-cli) @ maven_web ---</span><br><span class="line">[INFO] Running war on http://localhost:8080/</span><br><span class="line">[INFO] Creating Tomcat server configuration at /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/tomcat</span><br><span class="line">[INFO] create webapp with contextPath: </span><br><span class="line">May 15, 2020 10:29:37 PM org.apache.coyote.AbstractProtocol init</span><br><span class="line">INFO: Initializing ProtocolHandler [<span class="string">"http-bio-8080"</span>]</span><br><span class="line">May 15, 2020 10:29:37 PM org.apache.catalina.core.StandardService startInternal</span><br><span class="line">INFO: Starting service Tomcat</span><br><span class="line">May 15, 2020 10:29:37 PM org.apache.catalina.core.StandardEngine startInternal</span><br><span class="line">INFO: Starting Servlet Engine: Apache Tomcat/7.0.47</span><br><span class="line">May 15, 2020 10:29:38 PM org.apache.coyote.AbstractProtocol start</span><br><span class="line">INFO: Starting ProtocolHandler [<span class="string">"http-bio-8080"</span>]</span><br></pre></td></tr></table></figure><p>根据上边的提示信息,访问<a href="http://localhost:8080/">http://localhost:8080/</a>  即可</p><h1 id="三-Maven生命周期和插件"><a href="#三-Maven生命周期和插件" class="headerlink" title="三.Maven生命周期和插件"></a>三.Maven生命周期和插件</h1><h4 id="3-1-Maven常用命令和插件"><a href="#3-1-Maven常用命令和插件" class="headerlink" title="3.1 Maven常用命令和插件"></a>3.1 Maven常用命令和插件</h4><h5 id="3-1-1-clean"><a href="#3-1-1-clean" class="headerlink" title="3.1.1 clean"></a>3.1.1 clean</h5><p>clean是maven工程的清理命令，执行 clean会删除target目录及内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">~ mvn clean</span><br><span class="line"> </span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ maven_web ---</span><br><span class="line">[INFO] Deleting /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 0.228 s</span><br><span class="line">[INFO] Finished at: 2020-05-15T23:52:52+08:00</span><br><span class="line">[INFO] Final Memory: 9M/309M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h5 id="3-1-2-compile"><a href="#3-1-2-compile" class="headerlink" title="3.1.2 compile"></a>3.1.2 compile</h5><p>compile是maven工程的编译命令，作用是将src/main/java下的文件编译为class文件输出到target目录下。</p><p>将src中main目录下java代码进行编译，将src中main目录下配置抽取，输出到target目录: classes目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">~ mvn compile</span><br><span class="line"></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Changes detected - recompiling the module!</span><br><span class="line">[INFO] Compiling 1 <span class="built_in">source</span> file to /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/classes</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 0.952 s</span><br><span class="line">[INFO] Finished at: 2020-05-15T23:56:28+08:00</span><br><span class="line">[INFO] Final Memory: 13M/209M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">～ ll  ./target/classes/cn/itcast/web/servlet/</span><br><span class="line"> </span><br><span class="line">total 8</span><br><span class="line">-rw-r--r--  1 swzxsyh  staff   1.1K May 15 23:56 HelloServlet.class</span><br></pre></td></tr></table></figure><h5 id="3-1-3-test"><a href="#3-1-3-test" class="headerlink" title="3.1.3 test"></a>3.1.3 test</h5><p>test是maven工程的测试命令 mvn test，会执行src/test/java下的单元测试类，并编译为class文件。</p><p>mvn test=&gt;target编译main代码=&gt;编译test代码=&gt;执行所有测试代码，类名xxxTest结尾，必须有@Test注解的方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">~ mvn <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line"></span><br><span class="line"><span class="comment">#清理target目录</span></span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line"><span class="comment">#编译src/main主干</span></span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line"><span class="comment">#编译src/test测试目录</span></span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ maven_web ---</span><br><span class="line">[INFO] Changes detected - recompiling the module!</span><br><span class="line">[INFO] Compiling 1 <span class="built_in">source</span> file to /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/<span class="built_in">test</span>-classes</span><br><span class="line">[INFO] </span><br><span class="line"><span class="comment"># 针对test目录下的测试代码，逐一测试</span></span><br><span class="line">[INFO] --- maven-surefire-plugin:2.12.4:<span class="built_in">test</span> (default-test) @ maven_web ---</span><br><span class="line">[INFO] Surefire report directory: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/surefire-reports</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------</span><br><span class="line"> T E S T S</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Running cn.itcast.test.HelloTest</span><br><span class="line">仅在测试期有效</span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 sec</span><br><span class="line"></span><br><span class="line">Results :</span><br><span class="line"></span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line"></span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 1.509 s</span><br><span class="line">[INFO] Finished at: 2020-05-16T00:00:02+08:00</span><br><span class="line">[INFO] Final Memory: 15M/212M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h5 id="3-1-4-package"><a href="#3-1-4-package" class="headerlink" title="3.1.4 package"></a>3.1.4 package</h5><p>package是maven工程的打包命令，对于java工程执行package打成jar包，对于web工程打成war包。</p><p>mvn package=&gt;编译main代码=&gt;编译test代码=&gt;执行测试=&gt;将项目打成war包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">~ mvn package</span><br><span class="line"> </span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-surefire-plugin:2.12.4:<span class="built_in">test</span> (default-test) @ maven_web ---</span><br><span class="line">[INFO] Surefire report directory: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/surefire-reports</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------</span><br><span class="line"> T E S T S</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Running cn.itcast.test.HelloTest</span><br><span class="line">仅在测试期有效</span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec</span><br><span class="line"></span><br><span class="line">Results :</span><br><span class="line"></span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line"></span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-war-plugin:2.2:war (default-war) @ maven_web ---</span><br><span class="line">[INFO] Packaging webapp</span><br><span class="line">[INFO] Assembling webapp [maven_web] <span class="keyword">in</span> [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT]</span><br><span class="line">[INFO] Processing war project</span><br><span class="line">[INFO] Copying webapp resources [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/src/main/webapp]</span><br><span class="line">[INFO] Webapp assembled <span class="keyword">in</span> [49 msecs]</span><br><span class="line">[INFO] Building war: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT.war</span><br><span class="line">[INFO] WEB-INF/web.xml already added, skipping</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 1.528 s</span><br><span class="line">[INFO] Finished at: 2020-05-16T00:05:14+08:00</span><br><span class="line">[INFO] Final Memory: 12M/294M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">~ find . -name <span class="string">'*war'</span>  </span><br><span class="line">./target/maven_web-1.0-SNAPSHOT.war</span><br><span class="line"><span class="comment">#此包可以直接放在tomcat的webapp下执行</span></span><br></pre></td></tr></table></figure><ul><li><p>注意：为什么maven_hello是war包而不是jar包呢？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat pom.xml| grep -ri <span class="string">'packaging'</span> </span><br><span class="line">(standard input):    &lt;packaging&gt;war&lt;/packaging&gt;</span><br><span class="line"><span class="comment">#导包方式：jar默认，手动指定war</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="3-1-5-install"><a href="#3-1-5-install" class="headerlink" title="3.1.5 install"></a>3.1.5 install</h5><p>install是maven工程的安装命令，执行install将maven打成jar包或war包发布到本地仓库。</p><p>mvn install=&gt;编译main代码=&gt;编译test代码=&gt;执行测试=&gt;将项目打成war包=&gt;安装到本地库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">~ mvn install</span><br><span class="line"> </span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-surefire-plugin:2.12.4:<span class="built_in">test</span> (default-test) @ maven_web ---</span><br><span class="line">[INFO] Surefire report directory: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/surefire-reports</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------</span><br><span class="line"> T E S T S</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Running cn.itcast.test.HelloTest</span><br><span class="line">仅在测试期有效</span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.053 sec</span><br><span class="line"></span><br><span class="line">Results :</span><br><span class="line"></span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line"></span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-war-plugin:2.2:war (default-war) @ maven_web ---</span><br><span class="line">[INFO] Packaging webapp</span><br><span class="line">[INFO] Assembling webapp [maven_web] <span class="keyword">in</span> [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT]</span><br><span class="line">[INFO] Processing war project</span><br><span class="line">[INFO] Copying webapp resources [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/src/main/webapp]</span><br><span class="line">[INFO] Webapp assembled <span class="keyword">in</span> [32 msecs]</span><br><span class="line">[INFO] Building war: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT.war</span><br><span class="line">[INFO] WEB-INF/web.xml already added, skipping</span><br><span class="line">[INFO] </span><br><span class="line"></span><br><span class="line"><span class="comment"># 将自己的代码，编译到本地仓库，之后可以上传到远程仓库，服务器自动下载部署</span></span><br><span class="line">[INFO] --- maven-install-plugin:2.4:install (default-install) @ maven_web ---</span><br><span class="line">[INFO] Installing /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT.war to /Users/swzxsyh/Program/repository/cn/itcast/maven_web/1.0-SNAPSHOT/maven_web-1.0-SNAPSHOT.war</span><br><span class="line">[INFO] Installing /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/pom.xml to /Users/swzxsyh/Program/repository/cn/itcast/maven_web/1.0-SNAPSHOT/maven_web-1.0-SNAPSHOT.pom</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 1.522 s</span><br><span class="line">[INFO] Finished at: 2020-05-16T00:08:09+08:00</span><br><span class="line">[INFO] Final Memory: 12M/297M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p><strong>从运行结果中，可以看出: 当后面的命令执行时，前面的操作过程也都会自动执行</strong></p><h5 id="3-1-6-deploy"><a href="#3-1-6-deploy" class="headerlink" title="3.1.6 deploy"></a>3.1.6 deploy</h5><p>maven工程部署命令，将jar或war包部署（上传）到私服中。</p><h4 id="3-2-Maven生命周期"><a href="#3-2-Maven生命周期" class="headerlink" title="3.2 Maven生命周期"></a>3.2 Maven生命周期</h4><p>maven对项目构建过程分为三套相互独立的生命周期，请注意这里说的是“三套”，而且“相互独立”。</p><p>在同一个生命周期中的命令,执行后面的命令,前面的命令自动执行</p><table><thead><tr><th>三套名称</th><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>Clean Lifecycle</td><td>在进行真正的构建之前进行一些清理工作。</td><td>clean</td></tr><tr><td>Default Lifecycle</td><td>构建的核心部分，编译，测试，打包，部署等等。</td><td>compile,test,package,install,deploy</td></tr><tr><td>Site Lifecycle</td><td>生成项目报告，站点，发布站点。</td><td>site</td></tr></tbody></table><h5 id="3-2-1-clean生命周期-clean生命周期的目的是清理项目"><a href="#3-2-1-clean生命周期-clean生命周期的目的是清理项目" class="headerlink" title="3.2.1 clean生命周期 clean生命周期的目的是清理项目"></a>3.2.1 clean生命周期 clean生命周期的目的是清理项目</h5><table><thead><tr><th>阶段</th><th>描述</th></tr></thead><tbody><tr><td>pre-clean</td><td>执行一些需要在clean之前完成的工作</td></tr><tr><td>clean</td><td>移除所有上一次构建生成的文件</td></tr><tr><td>post-clean</td><td>执行一些需要在clean之后立刻完成的工作</td></tr></tbody></table><h5 id="3-2-2-default生命周期"><a href="#3-2-2-default生命周期" class="headerlink" title="3.2.2 default生命周期"></a>3.2.2 default生命周期</h5><p>default生命周期定义了真正构件时所需要执行的所有步骤，它是生命周期中最核心的部分</p><table><thead><tr><th>生命周期阶段</th><th>描述</th></tr></thead><tbody><tr><td>validate(校验)</td><td>校验项目是否正确并且所有必要的信息可以完成项目的构建过程。</td></tr><tr><td>initialize(初始化)</td><td>初始化构建状态，比如设置属性值。</td></tr><tr><td>generate-sources(生成源代码)</td><td>生成包含在编译阶段中的任何源代码。</td></tr><tr><td>process-sources(处理源代码)</td><td>处理源代码，比如说，过滤任意值。</td></tr><tr><td>generate-resources(生成资源文件)</td><td>生成将会包含在项目包中的资源文件。</td></tr><tr><td>process-resources (处理资源文件)</td><td>复制和处理资源到目标目录，为打包阶段最好准备。</td></tr><tr><td>compile(编译)</td><td>编译项目的源代码。</td></tr><tr><td>process-classes(处理类文件)</td><td>处理编译生成的文件，比如说对Java class文件做字节码改善优化。</td></tr><tr><td>generate-test-sources(生成测试源代 码)</td><td>生成包含在编译阶段中的任何测试源代码。</td></tr><tr><td>process-test-sources(处理测试源代 码)</td><td>处理测试源代码，比如说，过滤任意值。</td></tr><tr><td>generate-test-resources(生成测试资源 文件)</td><td>为测试创建资源文件。</td></tr><tr><td>process-test-resources(处理测试资源 文件)</td><td>复制和处理测试资源到目标目录。</td></tr><tr><td>test-compile(编译测试源码)</td><td>编译测试源代码到测试目标目录.</td></tr><tr><td>process-test-classes(处理测试类文件)</td><td>处理测试源码编译生成的文件。</td></tr><tr><td>test(测试)</td><td>使用合适的单元测试框架运行测试(Juint是其中之一)。</td></tr><tr><td>prepare-package(准备打包)</td><td>在实际打包之前，执行任何的必要的操作为打包做准备。</td></tr><tr><td>package(打包)</td><td>将编译后的代码打包成可分发格式的文件，比如JAR、WAR或者 EAR文件。</td></tr><tr><td>pre-integration-test(集成测试前)</td><td>在执行集成测试前进行必要的动作。比如说，搭建需要的环境。</td></tr><tr><td>integration-test(集成测试)</td><td>处理和部署项目到可以运行集成测试环境中。</td></tr><tr><td>post-integration-test(集成测试后)</td><td>在执行集成测试完成后进行必要的动作。比如说，清理集成测试 环境。</td></tr><tr><td>verify (验证)</td><td>运行任意的检查来验证项目包有效且达到质量标准。</td></tr><tr><td>install(安装)</td><td>安装项目包到本地仓库，这样项目包可以用作其他本地项目的依赖。</td></tr><tr><td>deploy(部署)</td><td>将最终的项目包复制到远程仓库中与其他开发者和项目共享。</td></tr></tbody></table><h5 id="3-2-3-site生命周期"><a href="#3-2-3-site生命周期" class="headerlink" title="3.2.3 site生命周期"></a>3.2.3 site生命周期</h5><p>site生命周期的目的是建立和发布项目站点，Maven能够基于POM所包含的信息，自动生成一个友好的站点，方便团 队交流和发布项目信息。</p><table><thead><tr><th>阶段</th><th>描述</th></tr></thead><tbody><tr><td>pre-site</td><td>执行一些需要在生成站点文档之前完成的工作</td></tr><tr><td>site</td><td>生成项目的站点文档</td></tr><tr><td>post-site</td><td>执行一些需要在生成站点文档之后完成的工作，并且为部署做准备</td></tr><tr><td>site-deploy</td><td>将生成的站点文档部署到特定的服务器上</td></tr></tbody></table><h4 id="3-3-Maven概念模型"><a href="#3-3-Maven概念模型" class="headerlink" title="3.3 Maven概念模型"></a>3.3 Maven概念模型</h4><p>Maven 包含了一个项目对象模型 (POM:Project Object Model)，一组标准集合，一个项目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在生命周期阶段(phase)中插 件(plugin)目标(goal)的逻辑。</p><p><img src="1589427711479.png" alt=""></p><ul><li><p>项目对象模型 (Project Object Model)</p><p>一个maven工程都有一个pom.xml文件，通过pom.xml文件定义项目的坐标、项目依赖、项目信息、插件目标等。</p></li><li><p>依赖管理系统(Dependency Management System)</p><p>通过maven的依赖管理对项目所依赖的jar 包进行统一管理。比如:项目依赖junit4.12，通过在pom.xml中定义 junit4.12的依赖即使用junit4.12，如下所示是junit4.12的依赖定义:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 依赖关系 --&gt;</span> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 此项目运行使用junit，所以此项目依赖junit --&gt;</span> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的项目名称 --&gt;</span> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的模块名称 --&gt;</span> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="comment">&lt;!-- junit版本 --&gt;</span> <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 依赖范围:单元测试时使用junit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>一个项目生命周期(Project Lifecycle)</p><p>使用maven完成项目的构建，项目构建包括:清理、编译、测试、部署等过程，maven将这些过程规范为一个生命</p><p>周期</p><table><thead><tr><th>清理</th><th>➡</th><th>编译</th><th>➡</th><th>测试</th><th>➡</th><th>报告</th><th>➡</th><th>打包</th><th>➡</th><th>部署</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table></li><li><p>一组标准集合</p><p>maven将整个项目管理过程定义一组标准。</p><p>比如:通过maven构建工程有标准的目录结构，有标准的生命周期阶 段、依赖管理有标准的坐标定义等。</p></li><li><p>插件(plugin)目标(goal)</p><p>maven 管理项目生命周期过程都是基于插件完成的。</p></li></ul><h1 id="四-IDEA创建Maven工程"><a href="#四-IDEA创建Maven工程" class="headerlink" title="四.IDEA创建Maven工程"></a>四.IDEA创建Maven工程</h1><h4 id="4-1-IDEA配置本地Maven"><a href="#4-1-IDEA配置本地Maven" class="headerlink" title="4.1 IDEA配置本地Maven"></a>4.1 IDEA配置本地Maven</h4><p>进入configure–&gt;settings–&gt;build–&gt;build tools–&gt;Maven中，设置maven工具和本地仓库</p><p>进入configure–&gt;settings–&gt;build–&gt;build tools–&gt;Maven–&gt;Runner中，设置VM Options:-DarchetypeCatalog=internal -Dfile.encoding=GB2312</p><h4 id="4-2-IDEA创建工程"><a href="#4-2-IDEA创建工程" class="headerlink" title="4.2 IDEA创建工程"></a>4.2 IDEA创建工程</h4><ul><li><p>Java工程</p><p>选择Maven，下一步，设置GroupID域名倒写，ArtifactID项目名，Version版本号</p></li><li><p>手动创建test测试配置文件目录</p><p>test目录右击创建resources目录，然后Mark Directory AS选Resources Root</p></li><li><p>指定maven环境的jdk版本和字符集</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- pom.xml --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置编译版本为1.8 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>maven工程命令操作</p><p>打开右侧maven栏，双击命令即可</p></li><li><p>如何导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- pom.xml --&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>安装一个插件JBLJavaToWeb</p><p>点击项目，选择插件功能JBLJavaToWeb即可将Java项目转换为Web项目</p></li></ul><h4 id="4-3-发布web工程"><a href="#4-3-发布web工程" class="headerlink" title="4.3 发布web工程"></a>4.3 发布web工程</h4><ul><li><p>idea使用外置tomcat运行</p><p>Add Configurations–&gt;ADD=&gt;Tomcat(Local)，设置名称Tomcat，其他跟之前项目一样</p></li><li><p>idea使用maven内置tomcat插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置编译版本为1.8 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">uriEncoding</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">uriEncoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-4-依赖管理"><a href="#4-4-依赖管理" class="headerlink" title="4.4 依赖管理"></a>4.4 依赖管理</h4><p>我们不考虑依赖范围引起的问题</p><table><thead><tr><th>依赖范围</th><th>对于编译classpath有效</th><th>对于测试classpath有效</th><th>对于运行时classpath有效</th><th>例子</th></tr></thead><tbody><tr><td>compile（默认）</td><td>Y</td><td>Y</td><td>Y</td><td>mybatis</td></tr><tr><td>test</td><td>-</td><td>Y</td><td>-</td><td>junit</td></tr><tr><td><strong>provided</strong></td><td>Y</td><td>Y</td><td>-</td><td>servlet-api</td></tr><tr><td>runtime</td><td>-</td><td>Y</td><td>Y</td><td>JDBC驱动</td></tr><tr><td>system</td><td>Y</td><td>Y</td><td>-</td><td>本地，maven仓库之外的库</td></tr></tbody></table><table><thead><tr><th>依赖范围</th><th>描述</th></tr></thead><tbody><tr><td>compile</td><td>默认依赖范围，作用域在编译、测试、运行时都有效。</td></tr><tr><td>test</td><td>作用域在测试时有效。编译和运行时不需要，比如：Junit。</td></tr><tr><td>provided</td><td>作用域在编译、测试时有效。运行时不需要，比如： servlet api 被 tomcat 容器提供。</td></tr><tr><td>runtime</td><td>作用域在测试、运行时有效。编译时不需要，比如：jdbc的驱动包。</td></tr><tr><td>system</td><td>system范围依赖与provided类似，jar包在本地磁盘而不是maven仓库</td></tr></tbody></table><ul><li><p>在maven_web工程中测试scope:</p><ul><li><p>默认引入 的jar包 </p><p>compile 【默认范围 可以不写】(编译、测试、运行 都有效 ) </p></li><li><p>servlet-api 、jsp-api</p><p>provided (编译、测试 有效， 运行时无效 防止和tomcat下jar冲突) </p></li><li><p>jdbc驱动jar包 </p><p>runtime (测试、运行 有效 )</p></li><li><p>junit </p><p>test (测试有效)</p></li></ul></li></ul><p>依赖范围由强到弱的顺序是:compile&gt;provided&gt;runtime&gt;test</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 介绍</strong></p><p><strong>### 项目管理工具</strong></p><p>- 依赖管理</p><p>​    - 通过maven管理jar包的整个过程</p><p>- 一键构建</p><p>​    - 通过一个maven的一个命令就可以完成工程整个构建的过程</p><p><strong>## 安装和使用</strong></p><p><strong>### 下载和安装</strong></p><p>- 下载 3.5.2 版本</p><p>- 安装解压到非中文路径</p><p>- 配置MAVEN_HOME环境变量</p><p>​    - 依赖java环境</p><p><strong>## 仓库分类</strong></p><p><strong>### 本地仓库</strong></p><p><strong>### 远程仓库</strong></p><p>- 1.中央仓库</p><p>- 2.第三方远程仓库</p><p>​    - 阿里云镜像</p><p>- 3.私服</p><p><strong>### 配置指定本地仓库</strong></p><p>- 帅哥提供5G</p><p>​    - 不建议覆盖</p><p><strong>### 配置阿里云镜像</strong></p><p>- 提高下载速度</p><p><strong>## 命令和插件</strong></p><p><strong>### 1）clean</strong></p><p>- 清理target目录</p><p><strong>### 2）compile</strong></p><p>- 编译 src/main/java</p><p><strong>### 3）test</strong></p><p>- 测试 src/test/java</p><p><strong>### 4）package</strong></p><p>- 将工程进行打包</p><p>​    - jar</p><p>​    - war</p><p><strong>### 5）install</strong></p><p>- 将打包后的工程安装到本地仓库</p><p><strong>### 6）deploy</strong></p><p>- 将本地仓库的jar包或war包上传到私服</p><p><strong>## 生命周期</strong></p><p><strong>### 清理生命周期</strong></p><p>- clean</p><p><strong>### 默认生命周期</strong></p><p>- compile</p><p>​    - test</p><p>​        - package</p><p>​            - install</p><p>​                - deploy</p><p><strong>### 站点生命周期</strong></p><p>- site</p><p><strong>## IDEA配置maven工具</strong></p><p><strong>### 全局settings配置</strong></p><p>- 指定maven工具路径</p><p>- 指定maven工具配置文件路径</p><p>- 指定maven工具本地仓库的路径</p><p><strong>### 指定本地创建maven时，使用本地骨架</strong></p><p>- -DarchetypeCatalog=internal -Dfile.encoding=GB2312</p><p><strong>## IDEA创建maven工程</strong></p><p><strong>### 1)创建java工程</strong></p><p><strong>### 2）创建web工程</strong></p><p>- 下载JBLJavaToWeb插件</p><p><strong>## IDEA发布web工程</strong></p><p><strong>### 1）使用本地tomcat</strong></p><p><strong>### 2）使用tomcat插件</strong></p><p>- pom.xml</p><p><strong>## 依赖范围</strong></p><p><strong>### 1）我们编写的web工程需要手动导入servlet-api 坐标</strong></p><p><strong>### 2）在打成 war包的时候将servlet-api 设置到 /WEB-INF/lib目录下</strong></p><p><strong>### 3）如果与tomcat软件内置的版本不一致，可能会启动报错</strong></p><p><strong>### 4）需要指定jar包的作用范围（provided）</strong></p><p><strong>### 有哪些依赖范围呢？</strong></p><p>- compile</p><p>​    - 默认，在编译、测试、运行期有效</p><p>- test</p><p>​    - 仅在测试期有效</p><p>- provided</p><p>​    - 在编译、测试期有效</p><p>- runtime</p><p>​    - 在测试、运行期有效</p><p>- system</p><p>​    - 从本地中导入jar包</p><p><strong>## 大作业</strong></p><p><strong>### 1）数据库表设计画图（8张表）</strong></p><p><strong>### 2）搭建黑马旅游网</strong></p><p><strong>### 3）安装lombok插件</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;maven基础与环境搭建&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十三）</title>
    <link href="http://yoursite.com/2020/05/13/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B8%89%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/13/就业班学习笔记（五十三）/</id>
    <published>2020-05-13T00:58:41.000Z</published>
    <updated>2020-05-15T20:13:46.174Z</updated>
    
    <content type="html"><![CDATA[<ul><li>注解开发</li></ul><a id="more"></a><h1 id="一-MyBatis注解"><a href="#一-MyBatis注解" class="headerlink" title="一.MyBatis注解"></a>一.MyBatis注解</h1><h4 id="1-1-MyBatis常用注解"><a href="#1-1-MyBatis常用注解" class="headerlink" title="1.1 MyBatis常用注解"></a>1.1 MyBatis常用注解</h4><table><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td>@Insert</td><td>实现新增，代替了&lt;insert&gt;&lt;/insert&gt;</td></tr><tr><td>@Update</td><td>实现更新，代替了&lt;update&gt;&lt;/update&gt;</td></tr><tr><td>@Delete</td><td>实现删除，代替了&lt;delete&gt;&lt;/delete&gt;</td></tr><tr><td>@Select</td><td>实现查询，代替了&lt;select&gt;&lt;/select&gt;</td></tr><tr><td>@Result</td><td>实现结果集封装，代替了&lt;result&gt;&lt;/result&gt;</td></tr><tr><td>@Results</td><td>可以与@Result 一起使用，封装多个结果集，代替了&lt;resultMap&gt;&lt;/resultMap&gt;</td></tr><tr><td>@One</td><td>实现一对一结果集封装，代替了&lt;association&gt;&lt;/association&gt;</td></tr><tr><td>@Many</td><td>实现一对多结果集封装，代替了&lt;collection&gt;&lt;/collection&gt;</td></tr></tbody></table><h4 id="1-2-MyBatis-单表操作"><a href="#1-2-MyBatis-单表操作" class="headerlink" title="1.2 MyBatis 单表操作"></a>1.2 MyBatis 单表操作</h4><ul><li><p>需求</p><p>基于user模块通过注解实现，增删改查</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询所有</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT id AS uid,username AS uname,birthday AS bir,sex AS gender,address AS addr FROM user"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(value = &#123;</span><br><span class="line">            <span class="comment">//resultMap标签手动映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uid"</span>, property = <span class="string">"id"</span>, id = <span class="keyword">true</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uname"</span>, property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"bir"</span>, property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"gender"</span>, property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"addr"</span>, property = <span class="string">"address"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//id查询</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增</span></span><br><span class="line">    <span class="meta">@Insert</span>(<span class="string">"INSERT INTO user (username,birthday,sex,address) VALUES(#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改(动态sql推荐使用xml)</span></span><br><span class="line">    <span class="meta">@Update</span>(<span class="string">"UPDATE user SET username=#&#123;username&#125;,birthday=#&#123;birthday&#125;,sex=#&#123;sex&#125;,address=#&#123;address&#125; WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Delete</span>(<span class="string">"DELETE FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//单表测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//单表测试,查询一个</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = userMapper.findById(<span class="number">41</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"A"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setAddress(<span class="string">"GZ"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line">        userMapper.save(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="number">58</span>);</span><br><span class="line">        user.setUsername(<span class="string">"B"</span>);</span><br><span class="line">        userMapper.save(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        userMapper.delete(<span class="number">58</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-MyBatis多表操作"><a href="#1-3-MyBatis多表操作" class="headerlink" title="1.3 MyBatis多表操作"></a>1.3 MyBatis多表操作</h4><p>注解多表操作是基于嵌套查询来实现</p><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@Results</td><td>结果映射的列表，包含了一个特别结果列如何被映射到属性或字段的详情。属性有：value, id。value 属性是 Result 注解的数组。这个 id 的属性是结果映射的名称。</td></tr><tr><td>@Result</td><td>在列和属性或字段之间的单独结果映射。属性有：id, column, javaType, jdbcType, typeHandler, one, many。id 属性是一个布尔值，来标识应该被用于比较（和在 XML 映射中的<id>相似）的属性。one 属性是单独的联系，和 <association> 相似，而 many 属性是对集合而言的，和<collection>相似。它们这样命名是为了避免名称冲突。</td></tr><tr><td>@One</td><td>复杂类型的单独属性值映射。属性有：select，已映射语句（也就是映射器方法）的全限定名，它可以加载合适类型的实例。fetchType会覆盖全局的配置参数 lazyLoadingEnabled。注意 联合映射在注解 API中是不支持的。这是因为 Java 注解的限制,不允许循环引用。</td></tr><tr><td>@Many</td><td>映射到复杂类型的集合属性。属性有：select，已映射语句（也就是映射器方法）的全限定名，它可以加载合适类型的实例的集合，fetchType 会覆盖全局的配置参数 lazyLoadingEnabled。注意 联合映射在注解 API中是不支持的。这是因为 Java 注解的限制，不允许循环引用</td></tr></tbody></table><h5 id="1-3-1-一对一查询"><a href="#1-3-1-一对一查询" class="headerlink" title="1.3.1 一对一查询"></a>1.3.1 一对一查询</h5><ul><li><p>需求</p><p>查询一个订单，与此同时查询出该订单所属的用户</p></li><li><p>一对一查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders <span class="keyword">where</span> <span class="keyword">id</span> = <span class="comment">#&#123;id&#125;;</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="comment">#&#123;订单的uid&#125;;</span></span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一对一嵌套注解</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM orders WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(value = &#123;</span><br><span class="line">            <span class="comment">//resultMap标签手动映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uid"</span>, property = <span class="string">"id"</span>, id = <span class="keyword">true</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uname"</span>, property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"bir"</span>, property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"gender"</span>, property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"addr"</span>, property = <span class="string">"address"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(property = <span class="string">"user"</span>, javaType = User<span class="class">.<span class="keyword">class</span>, <span class="title">column</span> </span>= <span class="string">"uid"</span>, one = <span class="meta">@One</span>(select = <span class="string">"com.itheima.dao.UserMapper.findById"</span>,fetchType = FetchType.EAGER))</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">findByIdWithUsers</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//id查询</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>注解嵌套</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一对一嵌套注解</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM orders WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(value = &#123;</span><br><span class="line">            <span class="comment">//resultMap标签手动映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uid"</span>, property = <span class="string">"id"</span>, id = <span class="keyword">true</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uname"</span>, property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"bir"</span>, property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"gender"</span>, property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"addr"</span>, property = <span class="string">"address"</span>),</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//注解嵌套</span></span><br><span class="line">      <span class="meta">@Result</span>(property = <span class="string">"user"</span>, javaType = User<span class="class">.<span class="keyword">class</span>, <span class="title">column</span> </span>= <span class="string">"uid"</span>, one = <span class="meta">@One</span>(select = <span class="string">"com.itheima.dao.UserMapper.findById"</span>,fetchType = FetchType.EAGER))</span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">findByIdWithUsers</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一对一嵌套注解测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithUsers</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        OrderMapper orderMapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        Order order = orderMapper.findByIdWithUsers(<span class="number">1</span>);</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-3-2-一对多查询"><a href="#1-3-2-一对多查询" class="headerlink" title="1.3.2 一对多查询"></a>1.3.2 一对多查询</h5><ul><li><p>需求</p><p>查询一个用户，与此同时查询出该用户具有的订单</p></li><li><p>一对多查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="comment">#&#123;id&#125;;</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders <span class="keyword">where</span> uid = <span class="comment">#&#123;用户id&#125;;</span></span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一对多注解嵌套查询</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="meta">@Results</span>(&#123; <span class="comment">// resultMap标签手动映射</span></span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id=<span class="keyword">true</span>), <span class="comment">// result标签映射封装</span></span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"username"</span>,property = <span class="string">"username"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"birthday"</span>,property = <span class="string">"birthday"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"sex"</span>,property = <span class="string">"sex"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"address"</span>,property = <span class="string">"address"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(property = <span class="string">"orderList"</span>,javaType = List<span class="class">.<span class="keyword">class</span>,<span class="title">column</span> </span>= <span class="string">"id"</span>,many = <span class="meta">@Many</span>(select = <span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrders</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select</span>(<span class="string">"SELECT * FROM orders WHERE uid = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Order&gt; <span class="title">findByUid</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>注解嵌套</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">//一对多注解嵌套查询</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(&#123; <span class="comment">// resultMap标签手动映射</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id=<span class="keyword">true</span>), <span class="comment">// result标签映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"username"</span>,property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"birthday"</span>,property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"sex"</span>,property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"address"</span>,property = <span class="string">"address"</span>),</span><br><span class="line">            </span><br><span class="line"><span class="meta">@Result</span>(property = <span class="string">"orderList"</span>,javaType = List<span class="class">.<span class="keyword">class</span>,<span class="title">column</span> </span>= <span class="string">"id"</span>,many = <span class="meta">@Many</span>(select = <span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>))</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrders</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一对多注解测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithOrders</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user = userMapper.findByIdWithOrders(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    System.out.println(user.getOrderList());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-3-3-多对多查询"><a href="#1-3-3-多对多查询" class="headerlink" title="1.3.3 多对多查询"></a>1.3.3 多对多查询</h5><ul><li><p>需求</p><p>查询用户同时查询出该用户的所有角色</p></li><li><p>多对多查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="comment">#&#123;id&#125;;</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">role</span> r <span class="keyword">INNER</span> <span class="keyword">JOIN</span> user_role ur <span class="keyword">ON</span> r.<span class="string">`id`</span> = ur.<span class="string">`rid`</span> </span><br><span class="line"><span class="keyword">WHERE</span> ur.<span class="string">`uid`</span> = <span class="comment">#&#123;用户id&#125;;</span></span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多对多注解嵌套查询</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="meta">@Results</span>(&#123; <span class="comment">// resultMap标签手动映射</span></span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id=<span class="keyword">true</span>), <span class="comment">// result标签映射封装</span></span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"username"</span>,property = <span class="string">"username"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"birthday"</span>,property = <span class="string">"birthday"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"sex"</span>,property = <span class="string">"sex"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"address"</span>,property = <span class="string">"address"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(property = <span class="string">"roleList"</span>,javaType = List<span class="class">.<span class="keyword">class</span>,<span class="title">column</span> </span>= <span class="string">"id"</span>,many = <span class="meta">@Many</span>(select = <span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithRoles</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>RoleMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RoleMapper</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM role r INNER JOIN user_role ur ON ur.`rid = r.`id` WHERE ur.`uid`=#&#123;uid&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(value = &#123;</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id = <span class="keyword">true</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"role_name"</span>,property = <span class="string">"roleName"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"role_desc"</span>,property = <span class="string">"roleDesc"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Role&gt; <span class="title">findByUid</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>注解嵌套</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">//多对多注解嵌套查询</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(&#123; <span class="comment">// resultMap标签手动映射</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id=<span class="keyword">true</span>), <span class="comment">// result标签映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"username"</span>,property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"birthday"</span>,property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"sex"</span>,property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"address"</span>,property = <span class="string">"address"</span>),</span><br><span class="line">            </span><br><span class="line">      </span><br><span class="line"><span class="meta">@Result</span>(property = <span class="string">"roleList"</span>,javaType = List<span class="class">.<span class="keyword">class</span>,<span class="title">column</span> </span>= <span class="string">"id"</span>,many = <span class="meta">@Many</span>(select = <span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>))</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithRoles</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多对多注解测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithRoles</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    User user = userMapper.findByIdWithRoles(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    System.out.println(user.getOrderList());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-延迟加载"><a href="#1-4-延迟加载" class="headerlink" title="1.4 延迟加载"></a>1.4 延迟加载</h4><p>不管是一对多还是多对多 ，在注解配置中都有fetchType的属性</p><ul><li><p>fetchType = FetchType.LAZY    表示懒加载</p></li><li><p>fetchType = FetchType.EAGER   表示立即加载</p></li><li><p>fetchType = FetchType.DEFAULT 表示使用全局配置</p></li></ul><h4 id="1-5-二级缓存"><a href="#1-5-二级缓存" class="headerlink" title="1.5 二级缓存"></a>1.5 二级缓存</h4><p>配置SqlMapConfig.xml文件开启二级缓存的支持</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">因为cacheEnabled的取值默认就为true，所以这一步可以省略不配置。</span></span><br><span class="line"><span class="comment">为true代表开启二级缓存；为false代表不开启二级缓存。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"cacheEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>在Mapper接口中使用注解配置二级缓存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CacheNamespace</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;...&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-6-知识小结"><a href="#1-6-知识小结" class="headerlink" title="1.6 知识小结"></a>1.6 知识小结</h4><ul><li><p>注解开发和xml配置相比，从开发效率来说，注解编写更简单，效率更高。</p></li><li><p>从可维护性来说，注解如果要修改，必须修改源码，会导致维护成本增加。xml维护性更强。</p></li><li><p>经验：单表简单CRUD可以使用注解、多表及动态sql就用xml</p></li></ul><h1 id="二-MyBatis案例练习"><a href="#二-MyBatis案例练习" class="headerlink" title="二.MyBatis案例练习"></a>二.MyBatis案例练习</h1><h4 id="2-1-编程风格"><a href="#2-1-编程风格" class="headerlink" title="2.1 编程风格"></a>2.1 编程风格</h4><p>浏览器：Chrome、Firefox</p><p>包目录：cn(com).公司名.项目名（都是小写）</p><p>类：大驼峰式命名</p><p>方法名：小驼峰式命名</p><h4 id="2-2-环境搭建"><a href="#2-2-环境搭建" class="headerlink" title="2.2 环境搭建"></a>2.2 环境搭建</h4><ul><li><p>编写中文过滤器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        servletRequest.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-查询所有"><a href="#2-3-查询所有" class="headerlink" title="2.3 查询所有"></a>2.3 查询所有</h4><h5 id="2-3-1-需求和效果实现"><a href="#2-3-1-需求和效果实现" class="headerlink" title="2.3.1 需求和效果实现"></a>2.3.1 需求和效果实现</h5><p>通过三层架构+接口+mybatis，查询员工信息，在页面展示</p><h5 id="2-3-2需求分析"><a href="#2-3-2需求分析" class="headerlink" title="2.3.2需求分析"></a>2.3.2需求分析</h5><p>index.jsp–&gt;EmpServlet–&gt;EmpService接口EmpServiceImp实现类–&gt;EmpDao接口+EmpDao映射，最终返给list.jsp</p><h5 id="2-3-3-代码实现"><a href="#2-3-3-代码实现" class="headerlink" title="2.3.3 代码实现"></a>2.3.3 代码实现</h5><ul><li><p>index.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/emp?action=findAll"</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Emp实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Emp</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String joindate;</span><br><span class="line">    <span class="keyword">private</span> Double salary;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"><span class="comment">//此处省略getter/setter，toString</span></span><br></pre></td></tr></table></figure></li><li><p>EmpServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/EmpServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmpServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写service方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取action请求参数</span></span><br><span class="line">        String action = request.getParameter(<span class="string">"action"</span>);</span><br><span class="line">        <span class="comment">// 判断</span></span><br><span class="line">        <span class="keyword">if</span> (action.equals(<span class="string">"findAll"</span>)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.findAll(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询所有</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.调用service查询</span></span><br><span class="line">        EmpService empService = <span class="keyword">new</span> EmpServiceImpl();</span><br><span class="line">        List&lt;Emp&gt; list = empService.findAll();</span><br><span class="line">        <span class="comment">// 2.将list写入request域</span></span><br><span class="line">        request.setAttribute(<span class="string">"list"</span>, list);</span><br><span class="line">        <span class="comment">// 3.转发</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>EmpServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmpServiceImpl</span> <span class="keyword">implements</span> <span class="title">EmpService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Emp&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 通过mybatis工具类获取sqlSession</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        <span class="comment">// 创建EmpDao代理对象</span></span><br><span class="line">        EmpDao empDao = sqlSession.getMapper(EmpDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 查询</span></span><br><span class="line">        List&lt;Emp&gt; list= empDao.findAll();</span><br><span class="line">        <span class="comment">// 关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>EmpDao（接口+映射）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.EmpDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"Emp"</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>list.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$&#123;list&#125;"</span> <span class="attr">var</span>=<span class="string">"emp"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.id&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.ename&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.joindate&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.salary&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.address&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-分页查询"><a href="#2-4-分页查询" class="headerlink" title="2.4 分页查询"></a>2.4 分页查询</h4><h5 id="2-4-1-导入数据"><a href="#2-4-1-导入数据" class="headerlink" title="2.4.1 导入数据"></a>2.4.1 导入数据</h5><h5 id="2-4-2-分页介绍"><a href="#2-4-2-分页介绍" class="headerlink" title="2.4.2 分页介绍"></a>2.4.2 分页介绍</h5><p>在实际开发中，如果数据库数据太多，一般我们需要进行分页查询，提高效率</p><ul><li><p>分页技术实现</p><p>物理分页：数据库实现（MySQL、Oracle）</p><p>内存分页：查询全部，在通过java代码进行分页</p></li><li><p>使用MySQL操作物理分页</p><ul><li><p>语法：    select * from 表名 limit 开始索引,每页个数;    </p></li><li><p>模拟百度分页，一个显示5条，数据库共有16条记录  </p><ul><li><p>第一页    </p><p>select * from 表名 limit 0,5;  </p></li><li><p>第二页    </p><p>select * from 表名 limit 5,5;  </p></li><li><p>第三页    </p><p>select * from 表名 limit 10,5;  </p></li><li><p>第四页    </p><p>select * from 表名 limit 15,5;    </p></li><li><p>索引公式    </p><p>开始索引=(当前页-1) × 每页个数    </p></li><li><p>如何获得当前页和每页个数</p><p>前端页提供</p></li></ul></li></ul></li></ul><h5 id="2-4-3-需求和效果实现"><a href="#2-4-3-需求和效果实现" class="headerlink" title="2.4.3 需求和效果实现"></a>2.4.3 需求和效果实现</h5><p>通过mysql物理分页，一个显示5条，数据库共有16条记录</p><h5 id="2-4-3-需求分析"><a href="#2-4-3-需求分析" class="headerlink" title="2.4.3 需求分析"></a>2.4.3 需求分析</h5><p><img src="1589342693907.png" alt=""></p><ul><li><p>后端代码流程图</p><p><img src="1589350595261.png" alt=""></p></li></ul><h5 id="2-4-4-代码实现"><a href="#2-4-4-代码实现" class="headerlink" title="2.4.4 代码实现"></a>2.4.4 代码实现</h5><ul><li><p>index.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&lt;%--&lt;a href="$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findAll"&gt;员工列表&lt;/a&gt;--%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=1&amp;pageSize=5"</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>PageBean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageBean</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer totalCount; <span class="comment">// 总记录数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer totalPage;<span class="comment">// 总页数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;E&gt; list; <span class="comment">// 结果集</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer currentPage; <span class="comment">// 当前页</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer pageSize; <span class="comment">// 每页个数</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//此处省略getter/setter，toString</span></span><br></pre></td></tr></table></figure></li><li><p>EmpServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/EmpServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmpServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写service方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取action请求参数</span></span><br><span class="line">        String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">        <span class="comment">// 判断</span></span><br><span class="line">        <span class="keyword">if</span> (action.equals(<span class="string">"findAll"</span>)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.findAll(req, resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action.equals(<span class="string">"findByPage"</span>)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.findByPage(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    EmpService empService = <span class="keyword">new</span> EmpServiceImpl();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPage</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String currentPageStr = req.getParameter(<span class="string">"currentPage"</span>);</span><br><span class="line">        String pageSizeStr = req.getParameter(<span class="string">"pageSize"</span>);</span><br><span class="line">        <span class="comment">// 2.转为整型</span></span><br><span class="line">        <span class="keyword">int</span> currentPage = Integer.parseInt(currentPageStr);</span><br><span class="line">        <span class="keyword">int</span> pageSize = Integer.parseInt(pageSizeStr);</span><br><span class="line">        <span class="comment">// 3.调用service查询</span></span><br><span class="line">        PageBean&lt;Emp&gt; pb = empService.findByPage(currentPage, pageSize);</span><br><span class="line">        <span class="comment">// 4.设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"pb"</span>, pb);</span><br><span class="line">        <span class="comment">// 5.转发</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>EmpServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmpServiceImpl</span> <span class="keyword">implements</span> <span class="title">EmpService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Emp&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 通过mybatis工具类获取sqlSession</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        <span class="comment">// 创建EmpDao代理对象</span></span><br><span class="line">        EmpDao empDao = sqlSession.getMapper(EmpDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 查询</span></span><br><span class="line">        List&lt;Emp&gt; list = empDao.findAll();</span><br><span class="line">        <span class="comment">// 关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageBean&lt;Emp&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage,<span class="keyword">int</span> pageSize)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 通过mybatis工具类获取sqlSession</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建EmpDao代理对象</span></span><br><span class="line">        EmpDao empDao = sqlSession.getMapper(EmpDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建 PageBean</span></span><br><span class="line">        PageBean&lt;Emp&gt; pageBean = <span class="keyword">new</span> PageBean();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.封装当前页和每页个数</span></span><br><span class="line">        pageBean.setCurrentPage(currentPage);</span><br><span class="line">        pageBean.setPageSize(pageSize);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.调用dao查询总记录数并封装</span></span><br><span class="line">        Integer totalCount = empDao.findCount();</span><br><span class="line">        pageBean.setTotalCount(totalCount);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.计算并封装总页数</span></span><br><span class="line">        <span class="keyword">int</span> totalPage = (<span class="keyword">int</span>)Math.ceil(totalCount*<span class="number">1.0</span>/pageSize);</span><br><span class="line">        pageBean.setTotalPage(totalPage);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.计算开始索引</span></span><br><span class="line">        <span class="keyword">int</span> index = (currentPage - <span class="number">1</span>) * pageSize;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6.调用dao查询结果集并封装</span></span><br><span class="line">        List&lt;Emp&gt; list = empDao.findList(index,pageSize);</span><br><span class="line">        pageBean.setList(list);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="comment">// 7.返回pageBean对象</span></span><br><span class="line">        <span class="keyword">return</span> pageBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>EmpDao（接口+映射）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EmpDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Emp&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看总记录</span></span><br><span class="line">    <span class="function">Integer <span class="title">findCount</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//分页查询结果</span></span><br><span class="line">    <span class="function">List&lt;Emp&gt; <span class="title">findList</span><span class="params">(@Param(<span class="string">"index"</span>)</span> <span class="keyword">int</span> index,@<span class="title">Param</span><span class="params">(<span class="string">"pageSize"</span>)</span> <span class="keyword">int</span> pageSize)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.EmpDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"Emp"</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--  查看总记录数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findCount"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        SELECT count(*) FROM emp</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    查看结果集--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findList"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Emp"</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp limit #&#123;index&#125;,#&#123;pageSize&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>list.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"c"</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        table &#123;</span><br><span class="line">            margin: 30px auto;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#page</span> <span class="selector-tag">td</span> &#123;</span></span><br><span class="line">            width: 20px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"600px"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>入职日期<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>薪资<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>住址<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$&#123;emps&#125;"</span> <span class="attr">var</span>=<span class="string">"emp"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.sex&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.joindate&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.salary&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.address&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align: left"</span>&gt;</span>总共检索到$&#123;pb.totalCount&#125;条记录,共分$&#123;pb.totalPage&#125;页<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"page"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage&gt;1&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:50px"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration: none"</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=$&#123;pb.currentPage-1&#125;&amp;pageSize=5"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">begin</span>=<span class="string">"1"</span> <span class="attr">end</span>=<span class="string">"$&#123;pb.totalPage&#125;"</span> <span class="attr">var</span>=<span class="string">"page"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;page == pb.currentPage&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">"#ffd700"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration: none"</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=$&#123;page&#125;&amp;pageSize=5"</span>&gt;</span>$&#123;page&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;page != pb.currentPage&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration: none"</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=$&#123;page&#125;&amp;pageSize=5"</span>&gt;</span>$&#123;page&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage &lt; pb.totalPage&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:50px"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration: none"</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=$&#123;pb.currentPage+1&#125;&amp;pageSize=5"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> txt = <span class="built_in">document</span>.getElementById(<span class="string">"uname"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var txt = document.querySelector（"#uname"）;</span></span></span><br><span class="line"><span class="actionscript">    txt.innerText = <span class="string">"admin"</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;注解开发&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十二）</title>
    <link href="http://yoursite.com/2020/05/12/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/12/就业班学习笔记（五十二）/</id>
    <published>2020-05-12T01:06:58.000Z</published>
    <updated>2020-05-12T16:55:42.974Z</updated>
    
    <content type="html"><![CDATA[<ul><li>嵌套查询</li><li>加载策略</li><li>缓存</li></ul><a id="more"></a><h1 id="一-Mybatis嵌套查询"><a href="#一-Mybatis嵌套查询" class="headerlink" title="一.Mybatis嵌套查询"></a>一.Mybatis嵌套查询</h1><h4 id="1-1-什么事嵌套查询"><a href="#1-1-什么事嵌套查询" class="headerlink" title="1.1 什么事嵌套查询"></a>1.1 什么事嵌套查询</h4><p>嵌套查询就是将原来多表查询中的联合查询语句拆成多个单表的查询，再使用mybatis的语法嵌套在一起。</p><ul><li><p>例</p><ul><li><p>需求:查询一个订单，与此同时查询出该订单所属的用户</p></li><li><p>关联查询:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> orders o <span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">user</span> u <span class="keyword">on</span> o.uid = u.id <span class="keyword">where</span> o.id = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>缺点:<br> sql语句编写难度大</p><p>数据量过大，笛卡尔积数量倍增，可能造成内存溢出</p></li><li><p>嵌套查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--根据订单id查询订单表</span></span><br><span class="line">  <span class="keyword">select</span> * <span class="keyword">from</span> orders <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="comment">--再根据订单表中uid(外键)查询用户表</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = 订单表uid;</span><br><span class="line"><span class="comment">--最后由mybatis框架进行嵌套组合</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>优点</p><p>sql语句编写简单 </p><p>没有多表关联，不会产生笛卡尔积</p></li></ul><h4 id="1-2-一对一嵌套查询"><a href="#1-2-一对一嵌套查询" class="headerlink" title="1.2 一对一嵌套查询"></a>1.2 一对一嵌套查询</h4><ul><li><p>需求</p><p>查询一个订单，与此同时查询出该订单所属的用户</p></li><li><p>sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.根据订单id查询订单表</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> orders <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 2.再根据订单表中uid(外键)查询用户表 </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">41</span>;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一对一嵌套查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">findByIdWithUser</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"orderMap"</span> <span class="attr">type</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--通过mybatis嵌套查询user表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"user"</span> <span class="attr">javaType</span>=<span class="string">"User"</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.OrderMapper.findById"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    一对一嵌套查询--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    resultType:单表映射封装 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    resultMap:多表查询必须手动映射封装--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithUser"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"orderMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM orders WHERE id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 根据用户id查询user对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    根据用户id查询user对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>通过mybatis进行嵌套组合</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"orderMap"</span> <span class="attr">type</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">&lt;!--通过mybatis嵌套查询user表</span></span><br><span class="line"><span class="comment">    一对一association</span></span><br><span class="line"><span class="comment">    column="uid" 订单查询的用户外键字段，需要作为条件</span></span><br><span class="line"><span class="comment">    select="com.itheima.dao.OrderMapper.findById"查询用户表(用户接口+执行方法名)</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"user"</span> <span class="attr">javaType</span>=<span class="string">"User"</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.UserMapper.findById"</span>/&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对一嵌套测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        OrderMapper orderMapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据id查询</span></span><br><span class="line">        Order order = orderMapper.findByIdWithUser(<span class="number">1</span>);</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[2020-05-12 21:21:03,060] DEBUG o.OrderMapper.findByIdWithUser  - &#x3D;&#x3D;&gt;  Preparing: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;先查询订单</span><br><span class="line">SELECT * FROM orders WHERE id&#x3D;? </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[2020-05-12 21:21:03,111] DEBUG o.OrderMapper.findByIdWithUser  - &#x3D;&#x3D;&gt; Parameters: 1(Integer)</span><br><span class="line">[2020-05-12 21:21:03,159] DEBUG     com.itheima.dao.UserMapper  - Cache Hit Ratio [com.itheima.dao.UserMapper]: 0.0</span><br><span class="line">[2020-05-12 21:21:03,159] DEBUG theima.dao.UserMapper.findById  - &#x3D;&#x3D;&#x3D;&#x3D;&gt;  Preparing: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;再查询用户</span><br><span class="line">SELECT * FROM user WHERE id&#x3D;? </span><br><span class="line"></span><br><span class="line">[2020-05-12 21:21:03,159] DEBUG theima.dao.UserMapper.findById  - &#x3D;&#x3D;&#x3D;&#x3D;&gt; Parameters: 41(Integer)</span><br><span class="line">[2020-05-12 21:21:03,162] DEBUG theima.dao.UserMapper.findById  - &lt;&#x3D;&#x3D;&#x3D;&#x3D;      Total: 1</span><br><span class="line">[2020-05-12 21:21:03,165] DEBUG o.OrderMapper.findByIdWithUser  - &lt;&#x3D;&#x3D;      Total: 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;用mybatis嵌套组合在一起</span><br><span class="line">Order&#123;id&#x3D;1, ordertime&#x3D;Mon May 20 15:58:02 CST 2019, money&#x3D;999.5, user&#x3D;User&#123;id&#x3D;41, username&#x3D;&#39;老王&#39;, birthday&#x3D;Tue May 28 06:47:08 CST 2019, sex&#x3D;&#39;男&#39;, address&#x3D;&#39;北京&#39;, orderList&#x3D;null, roleList&#x3D;null&#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>嵌套关系</p><table><thead><tr><th>步骤</th><th></th></tr></thead><tbody><tr><td></td><td>//一对一嵌套查询<br> public Order findByIdWithUser(Integer id);</td></tr><tr><td></td><td>// 根据用户id查询user对象 <br>public User findById(Integer id);</td></tr><tr><td></td><td>用mybatis嵌套组合在一起&lt;br&gt;&lt;association property=”user” javaType=”User” column=”uid” select=”com.itheima.dao.UserMapper.findById” fetchType=”eager”/&gt;</td></tr></tbody></table></li></ul><h4 id="1-3-一对多嵌套查询"><a href="#1-3-一对多嵌套查询" class="headerlink" title="1.3 一对多嵌套查询"></a>1.3 一对多嵌套查询</h4><ul><li><p>需求</p><p>查询一个用户，与此同时查询出该用户具有的订单</p></li><li><p>sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 先根据用户id，查询用户表(一个) </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">41</span>;</span><br><span class="line"><span class="comment">-- 2. 再根据用户id，查询订单表(多个) </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders <span class="keyword">WHERE</span> uid = <span class="number">41</span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一对多嵌套查询</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrders</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithOrdersMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--一对多嵌套组合--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">ofType</span>=<span class="string">"Order"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!--一对多嵌套查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithOrders"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithOrdersMap"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据用户id，查询订单列表</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Order&gt; <span class="title">findByUid</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUid"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">    SELECT * FROM orders WHERE uid=#&#123;uid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>通过mybatis进行嵌套组合</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithOrdersMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--一对多嵌套组合</span></span><br><span class="line"><span class="comment">    collection</span></span><br><span class="line"><span class="comment">    column="id" 根据用户查询的结果，id作为条件</span></span><br><span class="line"><span class="comment">    select="com.itheima.dao.OrderMapper.findByUid" 去查询订单表(映射接口+执行方法)</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">ofType</span>=<span class="string">"Order"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithOrders</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = userMapper.findByIdWithOrders(<span class="number">41</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先查询用户</span></span><br><span class="line">SELECT * FROM USER WHERE id = <span class="number">41</span>;</span><br><span class="line"><span class="comment">//再查询订单</span></span><br><span class="line">SELECT * FROM orders WHERE uid = <span class="number">41</span>;</span><br><span class="line"><span class="comment">//用mybatis嵌套组合在一起</span></span><br></pre></td></tr></table></figure></li><li><p>嵌套关系</p><table><thead><tr><th>步骤</th><th></th></tr></thead><tbody><tr><td></td><td>//先查询用户<br> public User findByIdWithOrders(Integer id);</td></tr><tr><td></td><td>// 再查询订单 <br>public List&lt;Order&gt; findByUid(Integer id);</td></tr><tr><td></td><td>用mybatis嵌套组合在一起&lt;br&gt;&lt;collection property=”orderList” ofType=”Order” column=”id” select=”com.itheima.dao.OrderMapper.findByUid”/&gt;</td></tr></tbody></table></li></ul><h4 id="1-4-多对多嵌套查询"><a href="#1-4-多对多嵌套查询" class="headerlink" title="1.4 多对多嵌套查询"></a>1.4 多对多嵌套查询</h4><ul><li><p>需求</p><p>查询用户同时查询出该用户的所有角色</p><p>mybatis的实现方案就是(一对多)，区别在于sql语句不同</p></li><li><p>sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 先根据用户id，查询用户表(一个)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">41</span>;</span><br><span class="line"><span class="comment">-- 2. 再根据用户id，查询角色表(多个)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">role</span> r <span class="keyword">INNER</span> <span class="keyword">JOIN</span> user_role ur <span class="keyword">ON</span> ur.<span class="string">`rid`</span> = r.<span class="string">`id`</span> <span class="keyword">WHERE</span> ur.<span class="string">`uid`</span> = <span class="number">41</span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多对多嵌套查询</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithRoles</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithRolesMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 多对多嵌套--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"roleList"</span> <span class="attr">ofType</span>=<span class="string">"Role"</span> <span class="attr">column</span>=<span class="string">"id"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">select</span>=<span class="string">"com.itheima.dao.RoleMapper.findByUid"</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithRoles"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithRolesMap"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>RoleMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RoleMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据用户id，查询角色列表</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Role&gt; <span class="title">findByUid</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RoleMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RoleMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"roleResultMap"</span> <span class="attr">type</span>=<span class="string">"Role"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_name"</span> <span class="attr">property</span>=<span class="string">"roleName"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_desc"</span> <span class="attr">property</span>=<span class="string">"roleDesc"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    根据用户id，查询角色列表--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUid"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"roleResultMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM role r INNER JOIN user_role ur ON ur.`rid`=r.`id` WHERE ur.`uid`=#&#123;uid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>通过mybatis进行嵌套组合</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span>&gt;</span><span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithOrdersMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一对多嵌套组合</span></span><br><span class="line"><span class="comment">        collection</span></span><br><span class="line"><span class="comment">        column="id" 根据用户查询的结果，id作为条件</span></span><br><span class="line"><span class="comment">        select="com.itheima.dao.OrderMapper.findByUid" 去查询订单表(映射接口+执行方法)</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">ofType</span>=<span class="string">"Order"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithRolesMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 多对多嵌套</span></span><br><span class="line"><span class="comment">        column="id" 用户id作为条件</span></span><br><span class="line"><span class="comment">        select="com.itheima.dao.RoleMapper.findByUid"查询角色表(角色映射接口+执行方法)</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"roleList"</span> <span class="attr">ofType</span>=<span class="string">"Role"</span> <span class="attr">column</span>=<span class="string">"id"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">select</span>=<span class="string">"com.itheima.dao.RoleMapper.findByUid"</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    根据用户id查询user对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--一对多嵌套查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithOrders"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithOrdersMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithRoles"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithRolesMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多对多测试(根据用户查询角色)</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithRoles</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    User user = userMapper.findByIdWithRoles(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>嵌套关系</p></li></ul><table><thead><tr><th>步骤</th><th></th></tr></thead><tbody><tr><td></td><td>//先查询用户<br> public User findByIdWithRoles(Integer id);</td></tr><tr><td></td><td>// 再查询角色列表 <br>public List&lt;Order&gt; findByUid(Integer id);</td></tr><tr><td></td><td>用mybatis嵌套组合在一起<br>&lt;collection property=”roleList” ofType=”Role” column=”id”             select=”com.itheima.dao.RoleMapper.findByUid”/&gt;</td></tr></tbody></table><h4 id="1-5-知识小结"><a href="#1-5-知识小结" class="headerlink" title="1.5 知识小结"></a>1.5 知识小结</h4><ul><li><p>步骤:一对多举例</p><p>先查询(一方)单表=&gt;再查询(多方)单表=&gt;最后由mybatis嵌套组合</p></li></ul><table><thead><tr><th>配置</th><th></th></tr></thead><tbody><tr><td>一对一配置</td><td>使用&lt;resultMap&gt;+&lt;association&gt;做配置，通过column条件，执行select查询</td></tr><tr><td>一对多配置</td><td>使用&lt;resultMap&gt;+&lt;collection&gt;做配置，通过column条件，执行select查询</td></tr><tr><td>多对多配置</td><td>使用&lt;resultMap&gt;+&lt;collection&gt;做配置，通过column条件，执行select查询</td></tr></tbody></table><table><thead><tr><th>优点:</th><th>缺点</th></tr></thead><tbody><tr><td>简化sql语句编写<br>不会产生笛卡尔积</td><td>麻烦</td></tr></tbody></table><ul><li><p>开发中到底使用哪一种</p><ul><li><p>传统开发，数据量小</p><p>使用关联查询</p></li><li><p>互联网开发，数据量大</p><p>使用嵌套查询</p></li></ul></li></ul><h1 id="二-Mybatis加载策略"><a href="#二-Mybatis加载策略" class="headerlink" title="二.Mybatis加载策略"></a>二.Mybatis加载策略</h1><h4 id="2-1-什么是加载策略"><a href="#2-1-什么是加载策略" class="headerlink" title="2.1 什么是加载策略"></a>2.1 什么是加载策略</h4><p>当多个模型(表)之间存在关联关系时, 加载一个模型(表)的同时, 是否要立即加载其关联的模型, 我们把这种决策 称为加载策略</p><p>如果加载一个模型(表)的时候, 需要立即加载出其关联的所有模型(表), 这种策略称为立即加载 </p><p>如果加载一个模型的时候, 不需要立即加载出其关联的所有模型, 等到真正需要的时候再加载, 这种策略称为延迟加载(懒加载)<br> Mybatis中的加载策略有两种:立即加载和延迟加载, 默认是立即加载</p><blockquote><p>注意:延迟加载是在嵌套查询基础上实现的</p></blockquote><ul><li><p>什么样的场景使用立即加载</p><p>一对一</p></li><li><p>什么样的场景使用延迟加载(什么时候用，什么时候查询，提高数据库性能)</p><p>一对多、多对多</p></li></ul><h4 id="2-2-配置延迟加载"><a href="#2-2-配置延迟加载" class="headerlink" title="2.2 配置延迟加载"></a>2.2 配置延迟加载</h4><h4 id="2-2-1-全局"><a href="#2-2-1-全局" class="headerlink" title="2.2.1 全局"></a>2.2.1 全局</h4><p>SqlMapConfig.xml,设置开启全局延迟加载</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启延迟(懒)加载 true 开始 false(默认值) 关闭--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-2-2-局部"><a href="#2-2-2-局部" class="headerlink" title="2.2.2 局部"></a>2.2.2 局部</h5><p>mapper映射文件，指定某一个select标签配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">association</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span> 标签 </span><br><span class="line"><span class="tag">&lt;<span class="name">collection</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span> 标签</span><br><span class="line">fetchType=""属性 </span><br><span class="line">eager 立即加载 </span><br><span class="line">lazy 延迟加载</span><br></pre></td></tr></table></figure><blockquote><p>注意:局部优先级高于全局，就近原则</p></blockquote><h4 id="2-3-触发加载"><a href="#2-3-触发加载" class="headerlink" title="2.3 触发加载"></a>2.3 触发加载</h4><p>有这样一个全局配置 lazyLoadTriggerMethods ,它定义的方法会触发立即加载</p><p>也就说当你调用它定义的方法时, 会执行数据加载, 它的默认值是 equals,clone,hashCode,toString</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启延迟(懒)加载 true 开始 false(默认值) 关闭--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--触发立即加载的配置</span></span><br><span class="line"><span class="comment">      默认值:equals,clone,hashCode,toString</span></span><br><span class="line"><span class="comment">      value="" 覆盖了默认值，表示在执行上述四个方法时，不会触发立即加载</span></span><br><span class="line"><span class="comment">      只有在执行get方法获取时，触发数据加载</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadTriggerMethods"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三-Mybatis缓存"><a href="#三-Mybatis缓存" class="headerlink" title="三.Mybatis缓存"></a>三.Mybatis缓存</h1><ul><li><p>什么是缓存</p><blockquote><p>服务器内存(硬盘)中的一块区域</p></blockquote></li><li><p>为什么使用缓存</p><blockquote><p>提高查询效率</p></blockquote></li><li><p>什么样的数据适合做缓存</p><blockquote><p>经常访问但又不经常修改的数据</p></blockquote><p>缓存是用来提高查询效率的，所有的持久层框架基本上都有缓存机制 Mybatis也提供了缓存策略，分为一级缓存，二 级缓存</p></li></ul><h4 id="3-1-一级缓存"><a href="#3-1-一级缓存" class="headerlink" title="3.1 一级缓存"></a>3.1 一级缓存</h4><h5 id="3-1-1-介绍"><a href="#3-1-1-介绍" class="headerlink" title="3.1.1 介绍"></a>3.1.1 介绍</h5><p>MyBatis一级缓存是:SqlSession级别的缓存，默认开启，不需要手动配置</p><p><img src="1589201319071.png" alt=""></p><h5 id="3-1-2-验证"><a href="#3-1-2-验证" class="headerlink" title="3.1.2 验证"></a>3.1.2 验证</h5><ul><li><p>需求</p><p>根据id查询用户</p></li><li><p>一级缓存测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一级缓存测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithBufferLevel1</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//需要用工具类开启/关闭session，否则会出现session错误</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    UserMapper userMapper1 = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">// 走数据库</span></span><br><span class="line">    User user1 = userMapper1.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user1);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 清除缓存(自己测试增、删、改)</span></span><br><span class="line">    sqlSession.clearCache();</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 获取第二个代理对象</span></span><br><span class="line">    UserMapper userMapper2 = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">// 走缓存(如果上面清除缓存，还是走数据库)</span></span><br><span class="line">    User user2 = userMapper2.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user2);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// sqlSession关闭(清除缓存)</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-1-3-分析"><a href="#3-1-3-分析" class="headerlink" title="3.1.3 分析"></a>3.1.3 分析</h5><p>一级缓存是SqlSession范围的缓存，不同的SqlSession之间的缓存区域是互相不影响的，执行SqlSession的C(增</p><p>加)U(更新)D(删除)操作，或者调用clearCache()、commit()、close()方法，都会清空缓存</p><table><thead><tr><th>SqlSession对象</th><th></th><th>LocalCache(Map集合)</th></tr></thead><tbody><tr><td>第一次查询</td><td>写入<br/>➡</td><td>LocalCache</td></tr><tr><td>如果中间发生了DML(增删改)事务操作，清除缓存</td><td>清除<br/>➡</td><td>LocalCache</td></tr><tr><td>第N次查询</td><td>读取<br>⬅</td><td>LocalCache</td></tr></tbody></table><ul><li><p>一级缓存源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.ibatis.cache.impl.PerpetualCache</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PerpetualCache</span> <span class="keyword">implements</span> <span class="title">Cache</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String id;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;Object, Object&gt; cache = <span class="keyword">new</span> HashMap();</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-2-二级缓存"><a href="#3-2-二级缓存" class="headerlink" title="3.2 二级缓存"></a>3.2 二级缓存</h4><h5 id="3-2-1-介绍"><a href="#3-2-1-介绍" class="headerlink" title="3.2.1 介绍"></a>3.2.1 介绍</h5><p>MyBatis的二级缓存虽然是默认开启的，但需要在映射文件中配置 &lt;cache/&gt; 标签才能使用，而且要求实体类的必须 实现序列化接口</p><p><img src="1589202614175.png" alt=""></p><h5 id="3-2-2-验证"><a href="#3-2-2-验证" class="headerlink" title="3.2.2 验证"></a>3.2.2 验证</h5><p>mybatis全局配置，默认值就是开启了二级缓存</p><ul><li><p>指定需要开启二级缓存的映射配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    当前映射文件，使用二级缓存--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span>&gt;</span><span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>指定User实现序列化接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span></span><br></pre></td></tr></table></figure></li><li><p>二级缓存测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 二级缓存测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithBufferLevel2</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//需要用工具类开启/关闭session，否则会出现session错误</span></span><br><span class="line">    <span class="comment">// 模拟第一个用户</span></span><br><span class="line">    SqlSession sqlSession1 = MyBatisUtils.openSession();</span><br><span class="line">    UserMapper userMapper1 = sqlSession1.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user1 = userMapper1.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user1);</span><br><span class="line">  </span><br><span class="line">    sqlSession1.close();</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 模拟第二个用户</span></span><br><span class="line">    SqlSession sqlSession2 = MyBatisUtils.openSession();</span><br><span class="line">    UserMapper userMapper2 = sqlSession2.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user2 = userMapper2.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user2);</span><br><span class="line">    sqlSession2.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-2-3-分析"><a href="#3-2-3-分析" class="headerlink" title="3.2.3 分析"></a>3.2.3 分析</h5><p>二级缓存是mapper映射级别的缓存，多个SqlSession去操作同一个Mapper映射的sql语句，多个SqlSession可以共</p><p>用二级缓存，二级缓存是跨SqlSession的。 </p><p>二级缓存相比一级缓存的范围更大(按namespace来划分)</p><p><img src="1589264629385.png" alt=""></p><h4 id="3-3-知识小结"><a href="#3-3-知识小结" class="headerlink" title="3.3 知识小结"></a>3.3 知识小结</h4><p><img src="1564842702588.png" alt=""></p><ul><li><p>mybatis的缓存，不需要手动存储和获取数据。mybatis自动维护的。</p></li><li><p>使用mybatis，如果是中小型项目，使用自带缓存的机制是可以满足需求的。如果是大型(分布式)项目，mybatis的 缓存灵活性不足，需要使用第三方的缓存技术解决问题。</p></li></ul><h1 id="四-核心配置文件回顾"><a href="#四-核心配置文件回顾" class="headerlink" title="四.核心配置文件回顾"></a>四.核心配置文件回顾</h1><h4 id="4-1-properties标签"><a href="#4-1-properties标签" class="headerlink" title="4.1 properties标签"></a>4.1 properties标签</h4><ul><li><p>加载外部的properties文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-2-settings标签"><a href="#4-2-settings标签" class="headerlink" title="4.2 settings标签"></a>4.2 settings标签</h4><ul><li><p>全局参数配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--开启懒加载--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定触发延迟加载的方法，只有get方法执行时才会触发立即加载 --&gt;</span> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadTriggerMethods"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span> <span class="comment">&lt;!--开启二级缓存 true开启(默认) false关闭--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"cacheEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-typeAliases标签"><a href="#4-3-typeAliases标签" class="headerlink" title="4.3 typeAliases标签"></a>4.3 typeAliases标签</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 单个定义别名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">"cn.itcast.domain.User"</span> <span class="attr">alias</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">typeAlias</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用包的形式批量定义别名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"cn.itcast.domain"</span>&gt;</span><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-4-mappers标签"><a href="#4-4-mappers标签" class="headerlink" title="4.4 mappers标签"></a>4.4 mappers标签</h4><ul><li><p>加载映射配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 加载指定的src目录下的映射文件，例如:</span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/itheima/mapper/UserMapper.xml"</span>/&gt;</span></span><br><span class="line">1. 加载并扫描指定包下所有的映射文件(接口)，例如: </span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.itheima.mapper"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="4-5-environments标签"><a href="#4-5-environments标签" class="headerlink" title="4.5 environments标签"></a>4.5 environments标签</h5><ul><li><p>数据源环境配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--数据库环境配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用MySQL环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--事务管理器,底层JDBC--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--连接池,内置POOLED--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.user&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 MyBatis嵌套查询</strong></p><p><strong>### 将原来多表查询中的联合查询语句，拆成多个单表的查询</strong></p><p><strong>### 实现</strong></p><p>- 一对一配置：使用&lt;resultMap&gt;+&lt;association&gt;做配置，通过column条件，执行select查询</p><p>- 一对多配置：使用&lt;resultMap&gt;+&lt;collection&gt;做配置，通过column条件，执行select查询</p><p>- 多对多配置：使用&lt;resultMap&gt;+&lt;collection&gt;做配置，通过column条件，执行select查询</p><p><strong>## 二 MyBatis加载策略</strong></p><p><strong>### 全局延迟加载</strong></p><p>- &lt;settings&gt;</p><p>​    &lt;!–开启全局延迟加载功能–&gt;</p><p>​    &lt;setting name=”lazyLoadingEnabled” value=”true”/&gt;</p><p>&lt;/settings&gt;</p><p><strong>### 局部延迟加载</strong></p><p>- &lt;association&gt; 和 &lt;collection&gt; 标签</p><p>​    - fetchType=”lazy | eager”</p><p>- 局部的加载策略优先级高于全局的加载策略。</p><p><strong>## 三 MyBatis缓存</strong></p><p><strong>### 一级缓存</strong></p><p>- 是SqlSession级别的缓存</p><p><strong>### 二级缓存</strong></p><p>- 是mapper映射级别的缓存，需要手动配置且实体类实现serializable接口</p><p><strong>## 四 核心配置文件回顾</strong></p><p><strong>### properties标签</strong></p><p>- 加载外部的properties文件</p><p><strong>### settings标签</strong></p><p>- 全局参数配置</p><p><strong>### typeAliases标签</strong></p><p>- 为 Java 类型设置一个别名</p><p><strong>### mappers标签</strong></p><p>- 加载映射配置</p><p><strong>### environments标签</strong></p><p>- 数据源环境配置</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;嵌套查询&lt;/li&gt;
&lt;li&gt;加载策略&lt;/li&gt;
&lt;li&gt;缓存&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十一）</title>
    <link href="http://yoursite.com/2020/05/10/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/10/就业班学习笔记（五十一）/</id>
    <published>2020-05-10T00:58:31.000Z</published>
    <updated>2020-05-11T12:14:10.558Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Mybatis表单查询</li><li>Mybatis映射文件深入 </li><li>表关系回顾 </li><li>Mybatis多表查询</li></ul><a id="more"></a><h1 id="一-Mybatis表单查询"><a href="#一-Mybatis表单查询" class="headerlink" title="一.Mybatis表单查询"></a>一.Mybatis表单查询</h1><h4 id="1-1-resultMap标签"><a href="#1-1-resultMap标签" class="headerlink" title="1.1 resultMap标签"></a>1.1 resultMap标签</h4><ul><li><p>如果数据库返回结果的列名和要封装的实体的属性名完全一致的话用 resultType 属性</p></li><li><p>如果数据库返回结果的列名和要封装的实体的属性名有不一致的情况用 resultMap 属性</p><ul><li><p>使用resultMap手动建立对象关系映射</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//ResultSet标签</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAllResultMap</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    resultMap手动建立映射</span></span><br><span class="line"><span class="comment">    id="userResultMap"</span></span><br><span class="line"><span class="comment">    type="com.itheima.domain.User"建立映射的java类型</span></span><br><span class="line"><span class="comment">    id 标签 主键</span></span><br><span class="line"><span class="comment">    id column="uid" 列名</span></span><br><span class="line"><span class="comment">    property="id"实体属性名</span></span><br><span class="line"><span class="comment">    result 标签 普通字段</span></span><br><span class="line"><span class="comment">    column="gender"  列名</span></span><br><span class="line"><span class="comment">    property="sex" 实体属性名</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userResultMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"bir"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"gender"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    模拟表与实体的属性名不一致情况--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAllResultMap"</span> <span class="attr">resultMap</span>=<span class="string">"userResultMap"</span>&gt;</span></span><br><span class="line">        SELECT id AS uid,username AS `name`,birthday AS bir,sex AS gender,address FROM `user`</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 此方法在测试方法执行之前，执行</span></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取sqlSession对象</span></span><br><span class="line">        <span class="comment">// 此方法必须线程内独享</span></span><br><span class="line">        sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 此方法在测试地方法执行之后，执行</span></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 需要通过mybatis帮你根据接口规范创建实现类</span></span><br><span class="line">        <span class="comment">// 创建代理对象(实现类)</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 执行sql</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//resultMap标签</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAllResultMap</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper sessionMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        List&lt;User&gt; list = sessionMapper.findAllResultMap();</span><br><span class="line">        <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="1-2-多条件查询"><a href="#1-2-多条件查询" class="headerlink" title="1.2 多条件查询"></a>1.2 多条件查询</h4><ul><li><p>需求</p><p>根据id和username查询user表</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多条件查询:方式一</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByIdAndUsernameV1</span><span class="params">(@Param(<span class="string">"id"</span>)</span> Integer id, @<span class="title">Param</span><span class="params">(<span class="string">"username"</span>)</span> String username)</span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">//多条件查询:方式二</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByIdAndUsernameV2</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    多条件查询方式</span></span><br><span class="line"><span class="comment">如果传递多个参数，属性省略不写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdAndUsernameV1"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE id=#&#123;id&#125; AND username=#&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdAndUsernameV2"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE id=#&#123;id&#125; AND username=#&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多条件查询</span></span><br><span class="line"><span class="comment">//V1</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByIdAndUsernameV1</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByIdAndUsernameV1(<span class="number">41</span>, <span class="string">"老王"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">//V2</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByIdAndUsernameV2</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper sessionMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">41</span>);</span><br><span class="line">    user.setUsername(<span class="string">"W"</span>);</span><br><span class="line">    List&lt;User&gt; list = sessionMapper.findByIdAndUsernameV2(user);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-模糊查询"><a href="#1-3-模糊查询" class="headerlink" title="1.3 模糊查询"></a>1.3 模糊查询</h4><ul><li><p>需求</p><p>根据username模糊查询user表</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模糊查询，方式一</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByUsername1</span><span class="params">(String username)</span></span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 模糊查询，方式二</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByUsername2</span><span class="params">(String username)</span></span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 模糊查询，方式三</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByUsername3</span><span class="params">(String username)</span></span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 模糊查询，方式四</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByUsername4</span><span class="params">(String username)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--    模糊查询，方式一</span></span><br><span class="line"><span class="comment">    java代码与sql语句有耦合--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername1"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE username like #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    模糊查询，方式二</span></span><br><span class="line"><span class="comment">    mysql5.5版本之前，此拼接不支持多个单引号</span></span><br><span class="line"><span class="comment">    oracle数据库，除了别名的位置，其余位置都不能使用双引号--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername2"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE username like "%" #&#123;username&#125; "%"</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    此方式，会出现sql注入</span></span><br><span class="line"><span class="comment">    $&#123;&#125; 字符串拼接，如果接收的简单数据类型，表达式名称必须是value</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername3"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE username like '%$&#123;value&#125;%'</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    模糊查询，方式四【掌握】--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    使用concat()函数拼接--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    注意:oracle数据库 concat()函数只能传递二个参数,可以使用函数嵌套来解决--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername4"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE username like concat(concat('%',#&#123;username&#125;),'%')</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByUsername1</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByUsername1(<span class="string">"%王%"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByUsername2</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByUsername2(<span class="string">"王"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByUsername3</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByUsername3(<span class="string">"王"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByUsername4</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByUsername4(<span class="string">"王"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-与-区别"><a href="#1-4-与-区别" class="headerlink" title="1.4 ${} 与 #{} 区别"></a>1.4 ${} 与 #{} 区别</h4><ul><li><p>${} :底层 Statement</p><ul><li>sql与参数拼接在一起，会出现sql注入问题 </li><li>每次执行sql语句都会编译一次</li><li>接收简单数据类型，命名:{value}</li><li>接收引用数据类型，命名: ${属性名}</li><li>字符串类型需要加 ‘${value}’</li></ul></li><li><p>#{}底层 PreparedStatement</p><ul><li>sql与参数分离，不会出现sql注入问题 </li><li>sql只需要编译一次</li><li>接收简单数据类型，命名:#{随便写} </li><li>接收引用数据类型，命名:#{属性名}</li></ul></li></ul><h1 id="二-Mybatis映射文件深入"><a href="#二-Mybatis映射文件深入" class="headerlink" title="二.Mybatis映射文件深入"></a>二.Mybatis映射文件深入</h1><h4 id="2-1-返回主键"><a href="#2-1-返回主键" class="headerlink" title="2.1 返回主键"></a>2.1 返回主键</h4><ul><li><p>应用场景</p><p>向数据库保存一个user对象后, 然后在控制台记录下此新增user的主键值(id)</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"><span class="comment">//    返回主键，方式一</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save1</span><span class="params">(User user)</span></span>;</span><br><span class="line"><span class="comment">//    返回主键，方式二</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save2</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    返回主键，方式一</span></span><br><span class="line"><span class="comment">    useGeneratedKeys属性</span></span><br><span class="line"><span class="comment">    useGeneratedKeys="true" 开启新增主键返回功能</span></span><br><span class="line"><span class="comment">    keyColumn="id" user表中主键列</span></span><br><span class="line"><span class="comment">    keyProperty="id" user实体主键属性</span></span><br><span class="line"><span class="comment">    注意:仅支持主键自增类型的数据库 MySQL 和 SqlServer ， oracle不支持--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save1"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span> <span class="attr">keyColumn</span>=<span class="string">"id"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">        INSERT INTO user (username,birthday,sex,address) VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save2"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">selectKey</span> <span class="attr">keyColumn</span>=<span class="string">"id"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span> <span class="attr">resultType</span>=<span class="string">"int"</span> <span class="attr">order</span>=<span class="string">"AFTER"</span>&gt;</span></span><br><span class="line">            SELECT LAST_INSERT_ID()</span><br><span class="line">        <span class="tag">&lt;/<span class="name">selectKey</span>&gt;</span></span><br><span class="line">        INSERT INTO user (username,birthday,sex,address) VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SqlSession sqlSession=<span class="keyword">null</span>;</span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span></span>&#123;</span><br><span class="line">        sqlSession= MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span></span>&#123;</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave1</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"Johe Eve"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setAddress(<span class="string">"SZ"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line"></span><br><span class="line">        userMapper.save1(user);</span><br><span class="line">        System.out.println(<span class="string">"When Insert,Primary Key Returns: "</span>+user.getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave2</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"Johe Eve"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setAddress(<span class="string">"SZ"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line"></span><br><span class="line">        userMapper.save2(user);</span><br><span class="line">        System.out.println(<span class="string">"When Insert,Primary Key Returns: "</span>+user.getId());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-2-动态SQL"><a href="#2-2-动态SQL" class="headerlink" title="2.2 动态SQL"></a>2.2 动态SQL</h4><h5 id="2-2-1-什么是动态SQL"><a href="#2-2-1-什么是动态SQL" class="headerlink" title="2.2.1 什么是动态SQL"></a>2.2.1 什么是动态SQL</h5><ul><li><p>需求</p><p>把id和username封装到user对象中，将user对象中不为空的属性作为查询条件</p><p>这个时候我们执行的sql就有多种可能</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 如果id和用户名不为空</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span>= <span class="comment">#&#123;id&#125; and username = #&#123;username&#125;</span></span><br><span class="line"><span class="comment">-- 如果只有id</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span>= <span class="comment">#&#123;id&#125;</span></span><br><span class="line"><span class="comment">-- 如果只有用户名</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username = <span class="comment">#&#123;username&#125;</span></span><br><span class="line"><span class="comment">-- 如果id和用户名都为空 </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span></span><br></pre></td></tr></table></figure><p>像上面这样, 根据传入的参数不同, 需要执行的SQL的结构就会不同，这就是动态SQL</p></li></ul><h5 id="2-2-2-if-条件判断"><a href="#2-2-2-if-条件判断" class="headerlink" title="2.2.2 if 条件判断"></a>2.2.2 if 条件判断</h5><ul><li><p>需求 </p><p>把id和username封装到user对象中，将user对象中不为空的属性作为查询条件</p><ul><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// if 条件判断</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByIdAndUsernameIf</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">if标签 条件判断</span></span><br><span class="line"><span class="comment">where标签 相当于 where 1=1 功能，如果没有条件情况下 where语句不在sql语句拼接</span></span><br><span class="line"><span class="comment">可以去掉第一个 and 或者 or</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdAndUsernameIf"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"id != null"</span>&gt;</span></span><br><span class="line">            AND id=#&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"username != null"</span>&gt;</span></span><br><span class="line">            AND username = #&#123;username&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// if判断</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByIdAndUsernameIf</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 拼接条件</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line">    param.setId(<span class="number">41</span>);</span><br><span class="line">    param.setUsername(<span class="string">"老王"</span>);</span><br><span class="line">    </span><br><span class="line">    List&lt;User&gt; list = userMapper.findByIdAndUsernameIf(param);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="2-2-3-set-用于update语句"><a href="#2-2-3-set-用于update语句" class="headerlink" title="2.2.3 set 用于update语句"></a>2.2.3 set 用于update语句</h5><ul><li><p>需求</p><p>动态更新user表数据，如果该属性有值就更新，没有值不做处理</p><ul><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// set 更新</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateIf</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    set标签 更新 ，将条件中的最后一个逗号抹除--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateIf"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    update user</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"username != null"</span>&gt;</span></span><br><span class="line">            username=#&#123;username&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"birthday != null"</span>&gt;</span></span><br><span class="line">            birthday=#&#123;birthday&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null"</span>&gt;</span></span><br><span class="line">            sex=#&#123;sex&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"address != null"</span>&gt;</span></span><br><span class="line">            address=#&#123;address&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//update</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateIf</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置更新内容</span></span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">57</span>);</span><br><span class="line">    user.setUsername(<span class="string">"Steve"</span>);</span><br><span class="line">    </span><br><span class="line">    userMapper.updateIf(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="2-2-4-foreach-用于循环遍历"><a href="#2-2-4-foreach-用于循环遍历" class="headerlink" title="2.2.4 foreach 用于循环遍历"></a>2.2.4 foreach 用于循环遍历</h5><ul><li><p>需求</p><p>根据多个id查询，user对象的集合</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">IN</span> (<span class="number">41</span>,<span class="number">43</span>,<span class="number">46</span>);</span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th>&lt;foreach&gt;标签用于遍历集合</th><th>属性</th></tr></thead><tbody><tr><td>collection</td><td>代表要遍历的集合元素</td></tr><tr><td>open</td><td>代表语句的开始部分</td></tr><tr><td>close</td><td>代表结束部分</td></tr><tr><td>item</td><td>代表遍历集合的每个元素，生成的变量名</td></tr><tr><td>sperator</td><td>代表分隔符</td></tr></tbody></table><ul><li><p>练习三个版本</p><table><thead><tr><th>普通list集合</th><th>普通array数组</th><th>实体属性list集合</th></tr></thead><tbody><tr><td></td><td></td><td></td></tr></tbody></table><ul><li><p>domain/QueryVo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    根据页面查询条件封装到实体中 View Object</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Integer&gt; ids;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">getIds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ids;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIds</span><span class="params">(List&lt;Integer&gt; ids)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ids = ids;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// foreach标签，普通list集合</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByList</span><span class="params">(List&lt;Integer&gt; ids)</span></span>;</span><br><span class="line"><span class="comment">// foreach标签，普通array数组</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByArray</span><span class="params">(Integer [] ids)</span></span>;</span><br><span class="line"><span class="comment">// foreach标签，实体属性list集合</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByQueryVo</span><span class="params">(QueryVo queryVo)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- foreach标签，普通list集合</span></span><br><span class="line"><span class="comment">    传递 普通类型list集合 collection="list"</span></span><br><span class="line"><span class="comment">    属性取值:collection、list</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByList"</span> <span class="attr">parameterType</span>=<span class="string">"list"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    foreach标签，普通array数组</span></span><br><span class="line"><span class="comment">     传统 普通类型array数组 collection="array"</span></span><br><span class="line"><span class="comment">     属性取值 array--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByArray"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"array"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    foreach标签，实体属性list集合</span></span><br><span class="line"><span class="comment">     传递 实体中list属性集合的话，collection="ids"</span></span><br><span class="line"><span class="comment">     取值，实体的属性名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByQueryVo"</span> <span class="attr">parameterType</span>=<span class="string">"QueryVo"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"ids"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// foreach标签，普通list集合</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByList</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    List ids = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    ids.add(<span class="number">41</span>);</span><br><span class="line">    ids.add(<span class="number">46</span>);</span><br><span class="line">    List list = userMapper.findByList(ids);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// foreach标签，普通array数组</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByArray</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    Integer[] ids = &#123;<span class="number">41</span>, <span class="number">46</span>, <span class="number">49</span>&#125;;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByArray(ids);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//    foreach标签，实体属性list集合</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByQueryVo</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    List ids= <span class="keyword">new</span> ArrayList();</span><br><span class="line">    ids.add(<span class="number">41</span>);</span><br><span class="line">    ids.add(<span class="number">46</span>);</span><br><span class="line">    QueryVo queryVo = <span class="keyword">new</span> QueryVo();</span><br><span class="line">    queryVo.setIds(ids);</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByQueryVo(queryVo);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="2-3-SQL片段"><a href="#2-3-SQL片段" class="headerlink" title="2.3 SQL片段"></a>2.3 SQL片段</h4><ul><li><p>应用场景</p><p>映射文件中可将重复的 sql 提取出来，使用时用 include 引用即可，最终达到 sql 重用的目的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!-- foreach标签，普通list集合</span></span><br><span class="line"><span class="comment">        传递 普通类型list集合 collection="list"</span></span><br><span class="line"><span class="comment">        属性取值:collection、list</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByList"</span> <span class="attr">parameterType</span>=<span class="string">"list"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"selectUser"</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        WHERE id in</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    foreach标签，普通array数组</span></span><br><span class="line"><span class="comment">         传统 普通类型array数组 collection="array"</span></span><br><span class="line"><span class="comment">         属性取值 array--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByArray"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"selectUser"</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        WHERE id in</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"array"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    foreach标签，实体属性list集合</span></span><br><span class="line"><span class="comment">         传递 实体中list属性集合的话，collection="ids"</span></span><br><span class="line"><span class="comment">         取值，实体的属性名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByQueryVo"</span> <span class="attr">parameterType</span>=<span class="string">"QueryVo"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"selectUser"</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        WHERE id in</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"ids"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 将当前映射文件的共同的sql代码抽取一个片段，实现sql的复用性...</span></span><br><span class="line"><span class="comment">id="selectUser" 当前sql片段的唯一标识 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"selectUser"</span>&gt;</span></span><br><span class="line">     select id,username,birthday,sex,address from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-知识小结"><a href="#2-4-知识小结" class="headerlink" title="2.4 知识小结"></a>2.4 知识小结</h4><ul><li><p>MyBatis映射文件配置</p><table><thead><tr><th>关键字</th><th>配置</th></tr></thead><tbody><tr><td>&lt;select&gt;</td><td>查询</td></tr><tr><td>&lt;insert&gt;</td><td>插入</td></tr><tr><td>&lt;update&gt;</td><td>修改</td></tr><tr><td>&lt;delete&gt;</td><td>删除</td></tr><tr><td>&lt;selectKey&gt;</td><td>返回主键</td></tr><tr><td>&lt;where&gt;</td><td>where条件</td></tr><tr><td>&lt;if&gt;</td><td>if判断</td></tr><tr><td>&lt;foreach&gt;</td><td>for循环</td></tr><tr><td>&lt;set&gt;</td><td>set设置</td></tr><tr><td>&lt;sql&gt;</td><td>sql片段抽取</td></tr></tbody></table></li></ul><h1 id="三-表关系回顾"><a href="#三-表关系回顾" class="headerlink" title="三.表关系回顾"></a>三.表关系回顾</h1><ul><li><p>在关系型数据库当中，表关系分为三种</p><table><thead><tr><th>关系</th><th>说明</th></tr></thead><tbody><tr><td>特殊情况</td><td>一个订单只能从属于一个用户，mybatis框架就把这个多对一看做成一对一来实现</td></tr><tr><td>数据建立表关系</td><td>通过主外键关联</td></tr><tr><td>实体建立关系</td><td>通过属性关联</td></tr></tbody></table></li></ul><p><img src="1589091271542.png" alt=""></p><h1 id="四-Mybatis多表查询"><a href="#四-Mybatis多表查询" class="headerlink" title="四.Mybatis多表查询"></a>四.Mybatis多表查询</h1><h4 id="4-1-一对一-多对一"><a href="#4-1-一对一-多对一" class="headerlink" title="4.1 一对一(多对一)"></a>4.1 一对一(多对一)</h4><ul><li><p>一对一查询模型 </p><p>用户表和订单表的关系为，一个用户有多个订单，一个订单只从属于一个用户 </p><p>一对一查询的需求:查询一个订单，与此同时查询出该订单所属的用户</p></li><li><p>实体和表映射关系</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders o <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`user`</span> u <span class="keyword">ON</span> o.<span class="string">`uid`</span> = u.<span class="string">`id`</span> <span class="keyword">WHERE</span> o.<span class="string">`id`</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>Order实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> Date ordertime;</span><br><span class="line">    <span class="keyword">private</span> Double money;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个订单从属于一个用户</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//此处省略getter/setter，toString，User实体类</span></span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 一对一关联查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">findByIdWithUser</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"orderMap"</span> <span class="attr">type</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        一对一多表关联 association标签</span></span><br><span class="line"><span class="comment">        property="user" 关联实体的属性名 javaType="cn.itheima.domain.User" 关联实体java类型</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"user"</span> <span class="attr">javaType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    一对一关联查询</span></span><br><span class="line"><span class="comment">        resultType:单表映射封装</span></span><br><span class="line"><span class="comment">        resultMap:多表查询必须手动映射封装--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithUser"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"orderMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM orders o INNER JOIN `user` u ON o.`uid`=u.`id` WHERE o.`id`=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对一关联测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        OrderMapper orderMapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        Order order = orderMapper.findByIdWithUser(<span class="number">1</span>);</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-2-一对多"><a href="#4-2-一对多" class="headerlink" title="4.2 一对多"></a>4.2 一对多</h4><ul><li><p>一对多查询模型 </p><p>用户表和订单表的关系为，一个用户有多个订单，一个订单只从属于一个用户 </p><p>一对多查询的需求：查询一个用户，与此同时查询出该用户具有的订单</p></li><li><p>实体和表关系</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *,o.id <span class="keyword">AS</span> <span class="keyword">oid</span> <span class="keyword">FROM</span> <span class="string">`user`</span> u <span class="keyword">INNER</span> <span class="keyword">JOIN</span> orders o <span class="keyword">ON</span> u.<span class="string">`id`</span> = o.<span class="string">`uid`</span> <span class="keyword">WHERE</span> u.<span class="string">`id`</span>=<span class="number">41</span></span><br></pre></td></tr></table></figure></li><li><p>User实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个用户具有多个订单</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Order&gt; orderList;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//此处省略getter/setter,toString</span></span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 一对多关联</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrders</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><ul><li>有多少记录，就创建多少order对象</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        一对多关联 collection标签</span></span><br><span class="line"><span class="comment">        property="orderList" 关联实体集合的属性名</span></span><br><span class="line"><span class="comment">        ofType="cn.itcast.domain.Order" 关联实体的java类型(集合泛型的类型)</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">ofType</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"oid"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--       一对多关联--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithOrders"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userMap"</span>&gt;</span></span><br><span class="line">        SELECT *,o.id AS oid FROM `user` u INNER JOIN orders `o` ON u.`id`=o.`uid` WHERE u.`id`=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><ul><li><p>test/BaseMapperTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>UserMapperTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对多测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithOrders</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = userMapper.findByIdWithOrders(<span class="number">41</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-多对多-由二个一对多组成"><a href="#4-3-多对多-由二个一对多组成" class="headerlink" title="4.3 多对多(由二个一对多组成)"></a>4.3 多对多(由二个一对多组成)</h4><ul><li><p>实体和表关系</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> u</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> user_role ur <span class="keyword">ON</span> u.<span class="string">`id`</span> = ur.<span class="string">`uid`</span> <span class="comment">-- 用户连接中间表 </span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">role</span> r <span class="keyword">ON</span> ur.<span class="string">`rid`</span> = r.<span class="string">`id`</span> <span class="comment">-- 再根据中间表连接角色 </span></span><br><span class="line"><span class="keyword">WHERE</span> u.id = <span class="number">41</span> <span class="comment">-- 用户id 作为条件</span></span><br></pre></td></tr></table></figure></li><li><p>User和Role实体</p><ul><li><p>Role</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String roleName;</span><br><span class="line">    <span class="keyword">private</span> String roleDesc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个用户具有多个订单</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Order&gt; orderList;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个用户具有多个角色</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Role&gt; roleList;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多对多关联</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithRoles</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithRoleMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">&lt;!--多对多实现步骤和一对多是一样的(区别在于sql语句)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"roleList"</span> <span class="attr">ofType</span>=<span class="string">"Role"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"rid"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_name"</span> <span class="attr">property</span>=<span class="string">"roleName"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_desc"</span> <span class="attr">property</span>=<span class="string">"roleDesc"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithRoles"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithRoleMap"</span>&gt;</span></span><br><span class="line">    SELECT * FROM `user` u INNER JOIN user_role ur</span><br><span class="line">    ON u.`id`=ur.`uid` INNER JOIN role r ON ur.`rid`=r.`id`</span><br><span class="line">    WHERE u.id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithRoles</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    User user = userMapper.findByIdWithRoles(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-4-知识小结"><a href="#4-4-知识小结" class="headerlink" title="4.4 知识小结"></a>4.4 知识小结</h4><table><thead><tr><th>一对一配置:使用&lt;resultMap&gt;+&lt;association&gt;做配置</th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>association:</td><td></td><td></td></tr><tr><td></td><td></td><td>property</td><td>关联的实体属性名</td></tr><tr><td></td><td></td><td>javaType</td><td>关联的实体类型(别名)</td></tr></tbody></table><table><thead><tr><th>一对多配置:使用&lt;resultMap&gt;+&lt;collection&gt;做配置</th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>collection:</td><td></td><td></td></tr><tr><td></td><td></td><td>property</td><td>关联的集合属性名</td></tr><tr><td></td><td></td><td>ofType</td><td>关联的集合泛型类型(别名)</td></tr></tbody></table><table><thead><tr><th>多对多配置:使用&lt;resultMap&gt;+&lt;collection&gt;做配置</th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>collection:</td><td></td><td></td></tr><tr><td></td><td></td><td>property</td><td>关联的集合属性名</td></tr><tr><td></td><td></td><td>ofType</td><td>关联的集合泛型类型(别名)</td></tr></tbody></table><p>多对多的配置跟一对多很相似，难度在于SQL语句的编写。</p><h4 id="4-5-优化测试"><a href="#4-5-优化测试" class="headerlink" title="4.5 优化测试"></a>4.5 优化测试</h4><ul><li><p>BaseMapperTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapperTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span></span>&#123;</span><br><span class="line">    <span class="comment">// 一对一关联测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        OrderMapper orderMapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        Order order = orderMapper.findByIdWithUser(<span class="number">1</span>);</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>  <strong>## 一 Mybatis单表查询</strong></p><p>  <strong>### resultMap标签</strong></p><p>  - 解决：如果实体的属性名与表的字段名不一致，需要使用ResultMap手动进行封装</p><p>  <strong>### 多条件查询</strong></p><p>  - 二个及以下参数，简单类型@Param</p><p>  - 二个及以上参数，封装实体中</p><p>  <strong>### 模糊查询</strong></p><p>  - concat() 函数拼接</p><p>  <strong>### ${}与#{}区别</strong></p><p>  - ${}  statement</p><p>  - #{} preparedStatement</p><p>  <strong>## 二 Mybatis映射文件深入</strong></p><p>  <strong>### 返回主键</strong></p><p>  - useGeneratedKeys</p><p>  ​    - 支持主键自增类型的数据库：MySQL、sqlServer</p><p>  - selectKey</p><p>  <strong>### 动态sql</strong></p><p>  - <if></p><p>  ​    - 条件判断</p><p>  - <where></p><p>  ​    - 去掉第一个条件的 前 and  | or</p><p>  - <set></p><p>  ​    - 去掉最后一个条件的 逗号</p><p>  - <foreach></p><p>  ​    - 普通类型 List，collection属性：list</p><p>  ​    - 普通类型 Array，collection属性：array</p><p>  ​    - 复杂类型pojo对象，collection属性：实体的属性名</p><p>  - <sql></p><p>  ​    - 将公共代码抽取，实现复用性</p><p>  <strong>## 三 表关系回顾</strong></p><p>  <strong>## 四 MyBatis多表查询</strong></p><p>  <strong>### 一对一（多对一）</strong></p><p>  - 使用<resultMap>+<association>做配置</p><p>  ​    - property</p><p>  ​        - 关联实体属性名</p><p>  ​    - javaType</p><p>  ​        - 关联实体属性类型（别名）</p><p>  <strong>### 一对多</strong></p><p>  - 使用<resultMap>+<collection>做配置</p><p>  ​    - property</p><p>  ​        - 关联集合属性名</p><p>  ​    - ofType</p><p>  ​        - 关联集合泛型类型（别名）</p><p>  <strong>### 多对多</strong></p><p>  - 使用<resultMap>+<collection>做配置</p><p>  ​    - property</p><p>  ​        - 关联集合属性名</p><p>  ​    - ofType</p><p>  ​        - 关联集合泛型类型（别名）</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Mybatis表单查询&lt;/li&gt;
&lt;li&gt;Mybatis映射文件深入 &lt;/li&gt;
&lt;li&gt;表关系回顾 &lt;/li&gt;
&lt;li&gt;Mybatis多表查询&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十）</title>
    <link href="http://yoursite.com/2020/05/09/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/09/就业班学习笔记（五十）/</id>
    <published>2020-05-09T00:58:06.000Z</published>
    <updated>2020-05-12T16:40:48.298Z</updated>
    
    <content type="html"><![CDATA[<ul><li>框架简介</li><li>Mybatis简介</li><li>Mybatis快速入门</li><li>Mybatis映射文件概述</li><li>Mybatis增删改查</li><li>抽取工具类</li><li>Mybatis核心文件概述</li><li>Mybatis的API概述</li><li>Mybatis实现Dao层</li><li>接口代理的增删改查</li></ul><a id="more"></a><h1 id="一-框架简介"><a href="#一-框架简介" class="headerlink" title="一.框架简介"></a>一.框架简介</h1><ul><li><p>之前的MVC三层架构</p><p>表现层:Java与浏览器交互</p><p>业务层:根据某个功能除了业务逻辑</p><p>持久层:Java与数据库交互</p><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>高内聚，低耦合</td><td>所有基础代码都需要手动编写，繁琐导致效率低</td></tr></tbody></table></li><li><p>框架</p><p>半成品软件</p></li><li><p>框架阶段三层代码</p><p>框架阶段实现了绝大部分基础代码，只需要开发一些特有代码即可，提高开发效率</p></li></ul><table><thead><tr><th>Broswer</th><th></th><th>Server</th><th></th><th>Server</th><th></th><th>Server</th><th></th><th>数据库</th></tr></thead><tbody><tr><td></td><td></td><td>web层</td><td></td><td>service层</td><td></td><td>dao层</td><td></td><td></td></tr><tr><td></td><td></td><td>Servlet控制器</td><td></td><td>将多个dao排序组合实现某个功能</td><td></td><td>提高jdbc操作数据库，实现最基本CURD</td><td>➡<br>⬅</td><td>SQL</td></tr><tr><td>user/passwd</td><td>➡</td><td>⬇</td><td>↘<br>↖</td><td>功能A<br>find()<br>save()</td><td>➡<br/>⬅</td><td>find()<br>save()<br>update()<br>delete()</td><td></td><td></td></tr><tr><td>Login.jsp</td><td>⬅</td><td>jsp视图</td><td>↘</td><td></td><td>↙</td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td>实体类domain,pojo</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td>常用框架:SpringMVC，Struts2</td><td></td><td>常用框架：Spring</td><td></td><td>常用框架：Mybatis,hibernate，jpa</td><td></td><td></td></tr></tbody></table><ul><li><p>目前国内主流框架</p><p>SSM(springMVC+Spring+mybatis)</p></li></ul><h1 id="二-Mybatis简介"><a href="#二-Mybatis简介" class="headerlink" title="二.Mybatis简介"></a>二.Mybatis简介</h1><h4 id="2-1-ORM概述"><a href="#2-1-ORM概述" class="headerlink" title="2.1 ORM概述"></a>2.1 ORM概述</h4><p>ORM(object Relational Mapping)对象关系映射</p><blockquote><p>常用ORM框架有:hibernate(全自动ORM映射)、mybatis(半自动ORM映射)、jpa</p></blockquote><ul><li><p>例</p><p>Object:User类</p><p>Relational:user表</p><p>Mapping:将User类中成员变量与user表中的字段产生映射关系</p><p>需求:操作user对象的CURD，就能实现对user表的字段修改，一个实体类对应一张表，一个对象对应一条记录</p><p>总结：以面向对象方式，实现对数据库的操作</p></li></ul><h4 id="2-2-Mybatis介绍"><a href="#2-2-Mybatis介绍" class="headerlink" title="2.2 Mybatis介绍"></a>2.2 Mybatis介绍</h4><ul><li><p>简介</p><p>MyBatis官网地址:<a href="http://www.mybatis.org/mybatis-3/">http://www.mybatis.org/mybatis-3/</a></p><ul><li>mybatis是一款优秀的持久层框架，他不需要项JDBC繁琐编写代码，只需要开发人员关注(接口+sql) </li><li>它采用了简单的xml配置+接口方式实现增删改查，开发时我们只需要关注SQL本身</li></ul></li></ul><h1 id="三-Mybatis快速入门"><a href="#三-Mybatis快速入门" class="headerlink" title="三.Mybatis快速入门*"></a>三.Mybatis快速入门*</h1><h4 id="3-1-步骤分析"><a href="#3-1-步骤分析" class="headerlink" title="3.1 步骤分析"></a>3.1 步骤分析</h4><ul><li>创建mybatis_db数据库和user表</li><li>创建java项目，导入jar包 (mysql驱动、mybatis、log4j日志) </li><li>创建User实体类</li><li>编写映射文件UserMapper.xml</li><li>编写核心文件SqlMapConfig.xml</li><li>编写测试代码</li></ul><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li>创建mybatis_db数据库和user表</li></ul><details><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*!40101 SET SQL_MODE = ''*/</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> <span class="string">`mybatis_db`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">USE</span> <span class="string">`mybatis_db`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40014 SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 */</span>;</span><br><span class="line"><span class="comment">/*!40101 SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO' */</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`orders`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`orders`</span></span><br><span class="line">(</span><br><span class="line">    <span class="string">`id`</span>        <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    <span class="string">`uid`</span>       <span class="built_in">int</span>(<span class="number">11</span>)  <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="string">`ordertime`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="string">`money`</span>     <span class="keyword">double</span>   <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">    <span class="keyword">KEY</span> <span class="string">`uid`</span> (<span class="string">`uid`</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> <span class="string">`orders_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`uid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`user`</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  AUTO_INCREMENT = <span class="number">4</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `orders` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="string">`orders`</span>(<span class="string">`id`</span>, <span class="string">`uid`</span>, <span class="string">`ordertime`</span>, <span class="string">`money`</span>)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">1</span>, <span class="number">41</span>, <span class="string">'2019-05-20 02:58:02'</span>, <span class="number">999.5</span>),</span><br><span class="line">       (<span class="number">2</span>, <span class="number">45</span>, <span class="string">'2019-02-14 07:58:00'</span>, <span class="number">1399</span>),</span><br><span class="line">       (<span class="number">3</span>, <span class="number">41</span>, <span class="string">'2019-06-01 21:00:02'</span>, <span class="number">1666</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `user` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span></span><br><span class="line">(</span><br><span class="line">    <span class="string">`id`</span>       <span class="built_in">int</span>(<span class="number">11</span>)     <span class="keyword">NOT</span> <span class="literal">NULL</span> auto_increment,</span><br><span class="line">    <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户名称'</span>,</span><br><span class="line">    <span class="string">`birthday`</span> datetime     <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'生日'</span>,</span><br><span class="line">    <span class="string">`sex`</span>      <span class="built_in">varchar</span>(<span class="number">10</span>)  <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'性别'</span>,</span><br><span class="line">    <span class="string">`address`</span>  <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'地址'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `user` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="string">`user`</span>(<span class="string">`id`</span>, <span class="string">`username`</span>, <span class="string">`birthday`</span>, <span class="string">`sex`</span>, <span class="string">`address`</span>)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">41</span>, <span class="string">'老王'</span>, <span class="string">'2019-05-27 17:47:08'</span>, <span class="string">'男'</span>, <span class="string">'北京'</span>),</span><br><span class="line">       (<span class="number">42</span>, <span class="string">'王小二'</span>, <span class="string">'2019-03-02 15:09:37'</span>, <span class="string">'女'</span>, <span class="string">'北京金燕龙'</span>),</span><br><span class="line">       (<span class="number">43</span>, <span class="string">'老李'</span>, <span class="string">'2019-03-04 11:34:34'</span>, <span class="string">'女'</span>, <span class="string">'北京修正'</span>),</span><br><span class="line">       (<span class="number">45</span>, <span class="string">'传播'</span>, <span class="string">'2019-03-04 12:04:06'</span>, <span class="string">'男'</span>, <span class="string">'北京金燕龙'</span>),</span><br><span class="line">       (<span class="number">46</span>, <span class="string">'王小二'</span>, <span class="string">'2018-09-07 17:37:26'</span>, <span class="string">'男'</span>, <span class="string">'北京TBD'</span>),</span><br><span class="line">       (<span class="number">48</span>, <span class="string">'小马宝莉'</span>, <span class="string">'2019-03-08 11:44:00'</span>, <span class="string">'女'</span>, <span class="string">'北京修正'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`role`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`role`</span></span><br><span class="line">(</span><br><span class="line">    <span class="string">`id`</span>        <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'编号'</span>,</span><br><span class="line">    <span class="string">`role_name`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色名称'</span>,</span><br><span class="line">    <span class="string">`role_desc`</span> <span class="built_in">varchar</span>(<span class="number">60</span>) <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色描述'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`ID`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `role` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="string">`role`</span>(<span class="string">`ID`</span>, <span class="string">`role_name`</span>, <span class="string">`role_desc`</span>)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">1</span>, <span class="string">'院长'</span>, <span class="string">'管理整个学院'</span>),</span><br><span class="line">       (<span class="number">2</span>, <span class="string">'总裁'</span>, <span class="string">'管理整个公司'</span>),</span><br><span class="line">       (<span class="number">3</span>, <span class="string">'校长'</span>, <span class="string">'管理整个学校'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `user_role` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user_role`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user_role`</span></span><br><span class="line">(</span><br><span class="line">    <span class="string">`uid`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户编号'</span>,</span><br><span class="line">    <span class="string">`rid`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色编号'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`uid`</span>, <span class="string">`rid`</span>),</span><br><span class="line">    <span class="keyword">KEY</span> <span class="string">`FK_Reference_10`</span> (<span class="string">`rid`</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> <span class="string">`FK_Reference_10`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`rid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`role`</span> (<span class="string">`id`</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> <span class="string">`FK_Reference_9`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`uid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`user`</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `user_role` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="string">`user_role`</span>(<span class="string">`uid`</span>, <span class="string">`rid`</span>)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">41</span>, <span class="number">1</span>),</span><br><span class="line">       (<span class="number">45</span>, <span class="number">1</span>),</span><br><span class="line">       (<span class="number">41</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40101 SET SQL_MODE = @OLD_SQL_MODE */</span>;</span><br><span class="line"><span class="comment">/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */</span>;</span><br></pre></td></tr></table></figure></details><ul><li><p>创建Java项目，导入jar包</p><p>log4j-1.2.17.jar<br>mybatis-3.5.1.jar<br>mysql-connector-java-5.1.37-bin.jar</p><p>log4j.properties</p></li><li><p>创建User实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"><span class="comment">//此处省略getter/setter,toString</span></span><br></pre></td></tr></table></figure></li><li><p>编写映射文件UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写核心文件SqlMapConfig.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--数据库环境配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使用MySQL环境--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器,底层JDBC--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--连接池,内置POOLED--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis_db"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/itheima/dao/UserMapper.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询所有值快速入门</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        参数一：命名空间+具体ID</span></span><br><span class="line"><span class="comment">        参数二：返回的Java类接收</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        List&lt;User&gt; list = sqlSession.selectList(<span class="string">"UserMapper.findAll"</span>);</span><br><span class="line">        <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-Mybatis映射文件概述"><a href="#四-Mybatis映射文件概述" class="headerlink" title="四.Mybatis映射文件概述"></a>四.Mybatis映射文件概述</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">映射文件DTD约束头</span></span><br><span class="line"><span class="comment">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>语句</th><th>作用</th></tr></thead><tbody><tr><td>&lt;!DOCTYPE mapper PUBLIC … s-3-mapper.dtd”&gt;</td><td>映射文件DTD约束头</td></tr><tr><td>mapper</td><td>根标签</td></tr><tr><td>namespace</td><td>命名空间，与下面语句的id一起组成查询的标识</td></tr><tr><td>select</td><td>查询操作，可选的还有insert,update,delete</td></tr><tr><td>id</td><td>语句的id标识，与上面的命名空间一起组成查询的标识</td></tr><tr><td>resultType</td><td>查询结果对应的实体类型</td></tr><tr><td>SELECT * FROM user</td><td>要执行的SQL语</td></tr></tbody></table><h1 id="五-Mybatis增删改查"><a href="#五-Mybatis增删改查" class="headerlink" title="五.Mybatis增删改查*"></a>五.Mybatis增删改查*</h1><ul><li><p>编写映射文件UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--新增--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"sava"</span> <span class="attr">parameterType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        INSERT INTO</span><br><span class="line">        user(username,birthday,sex,address)</span><br><span class="line">        VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--修改--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        UPDATE user set username=$&#123;&#125;,birthday=#&#123;birthday&#125;,sex=#&#123;sex&#125;,addrress=#&#123;address&#125; WHERE id =#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--删除--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"delete"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        DELETE FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询所有值快速入门</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        参数一：命名空间+具体ID</span></span><br><span class="line"><span class="comment">        参数二：返回的Java类接收</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        List&lt;User&gt; list = sqlSession.selectList(<span class="string">"UserMapper.findAll"</span>);</span><br><span class="line">        <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"Jack"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"GZ"</span>);</span><br><span class="line">        <span class="keyword">int</span> i = sqlSession.insert(<span class="string">"UserMapper.save"</span>, user);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Ass Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//注意:Mybatis默认不提交，需要手动提交事务(DML)</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">tetUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="number">50</span>);</span><br><span class="line">        user.setUsername(<span class="string">"lucy"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setSex(<span class="string">"Female"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"PK"</span>);</span><br><span class="line">        sqlSession.update(<span class="string">"UserMapper.update"</span>,user);</span><br><span class="line">        <span class="comment">//注意:Mybatis默认不提交，需要手动提交事务(DML)</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        sqlSession.delete(<span class="string">"UserMapper.delete"</span>, <span class="number">50</span>);</span><br><span class="line">        <span class="comment">//注意:Mybatis默认不提交，需要手动提交事务(DML)</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-4-知识小结"><a href="#5-4-知识小结" class="headerlink" title="5.4 知识小结"></a>5.4 知识小结</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">- 插入语句<span class="keyword">insert</span>标签</span><br><span class="line">- 在映射文件中使用parameterType属性指定插入数据类型</span><br><span class="line">- <span class="keyword">sql</span>语句<span class="comment">#&#123;实体属性名&#125; 表示?占位符</span></span><br><span class="line">- 我们插入操作API是 sqlSession.insert(<span class="string">"命名空间.id"</span>, 实体对象); </span><br><span class="line">- DML类型语句mybatis需要手动提交事务 sqlSession.commit();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 修改操作使用<span class="keyword">update</span>标签</span><br><span class="line">- 修改操作的API使用的 sqlSession.update(<span class="string">"命名空间.id"</span>, 实体对象);</span><br><span class="line"></span><br><span class="line">- 删除语句使用<span class="keyword">delete</span>标签</span><br><span class="line">- 如果parameterType是引用数据类型 <span class="comment">#&#123;实体属性名&#125;</span></span><br><span class="line">- 如果parameterType是简单数据类型 <span class="comment">#&#123;键名知意&#125;</span></span><br><span class="line">- 删除操作API sqlSession.delete(<span class="string">"命名空间.id"</span>, <span class="keyword">Object</span>);</span><br></pre></td></tr></table></figure></li></ul><h1 id="六-抽取工具类"><a href="#六-抽取工具类" class="headerlink" title="六.抽取工具类"></a>六.抽取工具类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在静态代码块中(加载核心配置文件，构建工程对象)</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供获取sqlSession的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">openSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供提交事务和释放资源方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(SqlSession sqlSession)</span></span>&#123;</span><br><span class="line">        <span class="comment">//提交事务</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>需求 </p><p>根据指定id，查询User对象</p></li><li><p>编写映射文件UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Integer"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>编写测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询一个</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 1.获取sqlSession(根据工具类)</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    <span class="comment">// 2.执行sql</span></span><br><span class="line">    User user = sqlSession.selectOne(<span class="string">"UserMapper.findById"</span>, <span class="number">50</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    <span class="comment">// 3.关闭sqlSession</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="七-Mybatis核心文件概述"><a href="#七-Mybatis核心文件概述" class="headerlink" title="七.Mybatis核心文件概述"></a>七.Mybatis核心文件概述</h1><h4 id="7-1-核心配置文件层级关系"><a href="#7-1-核心配置文件层级关系" class="headerlink" title="7.1 核心配置文件层级关系"></a>7.1 核心配置文件层级关系</h4><p>MyBatis 的配置文件包含了会深深影响 MyBatis 行为的设置和属性信息。 配置文档的顶层结构如下：</p><ul><li>configuration（配置）<ul><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#properties">properties（属性）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#settings">settings（设置）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#typeAliases">typeAliases（类型别名）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#typeHandlers">typeHandlers（类型处理器）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#objectFactory">objectFactory（对象工厂）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#plugins">plugins（插件）</a></li><li>environments（环境配置）<ul><li>environment（环境变量）<ul><li>transactionManager（事务管理器）</li><li>dataSource（数据源）</li></ul></li></ul></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#databaseIdProvider">databaseIdProvider（数据库厂商标识）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#mappers">mappers（映射器）</a></li></ul></li></ul><h4 id="7-2-常用配置标签解析"><a href="#7-2-常用配置标签解析" class="headerlink" title="7.2 常用配置标签解析"></a>7.2 常用配置标签解析</h4><ul><li><p>environments标签</p><ul><li><p>数据库环境的配置，支持多环境配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--数据库环境配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用MySQL环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--事务管理器,底层JDBC--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--连接池,内置POOLED--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis_db"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>语句</th><th>作用</th></tr></thead><tbody><tr><td>&lt;environments default=”mysql”&gt;</td><td>使用默认数据库环境</td></tr><tr><td>&lt;environment&gt;</td><td>连接某个数据库的具体环境配置</td></tr><tr><td>id=”mysql”</td><td>当前环境名称</td></tr><tr><td>transactionManager type=”JDBC”</td><td>事务管理类型JDBC</td></tr><tr><td>dataSource type=”POOLED”</td><td>使用数据库连接池:mybatis内置</td></tr><tr><td>property</td><td>数据库连接基本配置</td></tr></tbody></table></li><li><p>其中，事务管理器(transactionManager)类型有两种:</p><table><thead><tr><th>transactionManager</th><th>作用</th></tr></thead><tbody><tr><td>JDBC</td><td>这个配置就是直接使用了JDBC 的提交和回滚设置，它依赖于从数据源得到的连接来管理事务作用域。</td></tr><tr><td>MANAGED</td><td>这个配置几乎没做什么。它从来不提交或回滚一个连接，而是让容器来管理事务的整个生命周期。</td></tr></tbody></table></li><li><p>其中，数据源(dataSource)常用类型有二种</p><table><thead><tr><th>dataSource</th><th>作用</th></tr></thead><tbody><tr><td>UNPOOLED</td><td>这个数据源的实现只是每次被请求时打开和关闭连接。</td></tr><tr><td>POOLED</td><td>这种数据源的实现利用“池”的概念将 JDBC 连接对象组织起来。</td></tr></tbody></table></li></ul></li><li><p>properties标签</p><ul><li><p>加载外置的properties配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#jdbc.properties</span><br><span class="line"></span><br><span class="line">jdbc.driver&#x3D;com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;Day48</span><br><span class="line">jdbc.user&#x3D;root</span><br><span class="line">jdbc.password&#x3D;root</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--加载外部properties文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name="driver" value="com.mysql.jdbc.Driver"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name="url" value="jdbc:mysql://localhost:3306/mybatis_db"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name="username" value="root"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name="password" value="root"/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--改为EL表达式 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.user&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>typeAliases标签</p><ul><li><p>为 Java 类型设置一个短的名字(类型别名)</p><p>mybatis框架内置了一些java类型的别名</p><table><thead><tr><th>别名Alias</th><th>映射的类型Mapped Type</th></tr></thead><tbody><tr><td>_byte</td><td>byte</td></tr><tr><td>_long</td><td>long</td></tr><tr><td>_short</td><td>short</td></tr><tr><td>_int</td><td>int</td></tr><tr><td>_integer</td><td>int</td></tr><tr><td>_double</td><td>double</td></tr><tr><td>_float</td><td>float</td></tr><tr><td>_boolean</td><td>boolean</td></tr><tr><td>string</td><td>String</td></tr><tr><td>byte</td><td>Byte</td></tr><tr><td>long</td><td>Long</td></tr><tr><td>short</td><td>Short</td></tr><tr><td>int</td><td>Integer</td></tr><tr><td>integer</td><td>Integer</td></tr><tr><td>double</td><td>Double</td></tr><tr><td>float</td><td>Float</td></tr><tr><td>boolean</td><td>Boolean</td></tr><tr><td>date</td><td>Date</td></tr><tr><td>decimal</td><td>BigDecimal</td></tr><tr><td>bigdecimal</td><td>BigDecimal</td></tr><tr><td>object</td><td>Object</td></tr><tr><td>map</td><td>Map</td></tr><tr><td>hashmap</td><td>HashMap</td></tr><tr><td>list</td><td>List</td></tr><tr><td>arraylist</td><td>ArrayList</td></tr><tr><td>collection</td><td>Collection</td></tr><tr><td>iterator</td><td>Iterator</td></tr></tbody></table></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">&lt;!--mybatis核心配置文件--&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!--设置java类型别名--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--设置一个java类型的别名</span></span><br><span class="line"><span class="comment">      &lt;typeAlias type="com.itheima.domain.User" alias="User"&gt;&lt;/typeAlias&gt;</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--将整个包下所有的类名设置了别名，别名（小名）：类名--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.itheima.domain"</span>&gt;</span><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>mappers标签</p><ul><li><p>用于加载映射文件，加载方式有如下几种</p><table><thead><tr><th>作用</th><th>语句</th></tr></thead><tbody><tr><td>加载指定的src目录下的映射文件</td><td>&lt;mapper resource=”com/itheima/dao/UserMapper.xml”/&gt;</td></tr><tr><td>加载指定接口的全限定名(注解开发时使用)</td><td>&lt;mapper class=”com.itheima.mapper.UserMapper”/&gt;</td></tr><tr><td>加载并扫描指定包下所有的接口(基于接口扫描方式加载)</td><td>&lt;package name=”com.itheima.mapper”/&gt;</td></tr></tbody></table></li></ul></li><li><p>mybatis文件的关系介绍</p><table><thead><tr><th>User实体类</th><th>⬅</th><th>UserMapper.xml</th><th>➡</th><th>User表</th></tr></thead><tbody><tr><td></td><td></td><td>建立orm关系</td><td></td><td></td></tr></tbody></table></li></ul><h4 id="7-3-核心配置文件标签顺序"><a href="#7-3-核心配置文件标签顺序" class="headerlink" title="7.3 核心配置文件标签顺序"></a>7.3 核心配置文件标签顺序</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMENT configuration (properties?, settings?, typeAliases?, typeHandlers?, objectFactory?, objectWrapperFactory?, reflectorFactory?, plugins?, environments?, databaseIdProvider?, mappers?)&gt;</span><br></pre></td></tr></table></figure><h4 id="7-4-知识小结"><a href="#7-4-知识小结" class="headerlink" title="7.4 知识小结"></a>7.4 知识小结</h4><ul><li><p>properties标签:该标签可以加载外部的properties文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>typeAliases标签:设置类型别名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">"com.itheima.domain.User"</span> <span class="attr">alias</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">typeAlias</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>environments标签:数据源环境配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--数据库环境配置--&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使用MySQL环境--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器,底层JDBC--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--连接池,内置POOLED--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.user&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>mappers标签:加载映射配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/itheima/dao/UserMapper.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="八-Mybatis的API概述"><a href="#八-Mybatis的API概述" class="headerlink" title="八.Mybatis的API概述"></a>八.Mybatis的API概述</h1><h4 id="8-1-API介绍"><a href="#8-1-API介绍" class="headerlink" title="8.1 API介绍"></a>8.1 API介绍</h4><ul><li><p>Resources</p><ul><li><p>加载mybatis的核心配置文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载mybatis的核心配置文件，获取io流</span></span><br><span class="line">InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>SqlSessionFactoryBuilder</p><ul><li><p>根据mybatis的核心配置文件构建出SqlSessionFactory工厂对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>SqlSessionFactory</p><ul><li><p>用于创建SqlSession会话对象(相当于Connection对象)</p></li><li><p>这是一个工厂对象，对于这种创建和销毁都非常耗费资源，一个项目中只需要存在一个即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DML类型语句，需要手动提交事务 </span></span><br><span class="line"><span class="function">SqlSession <span class="title">openSession</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">// 设置是否开启自动提交事务的会话对象，如果设置true，自动提交 </span></span><br><span class="line"><span class="function">SqlSession <span class="title">openSession</span><span class="params">(<span class="keyword">boolean</span> autoCommit)</span></span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>SqlSession</p><ul><li>这是Mybatis的一个核心对象。我们基于这个对象可以实现对数据的CRUD操作</li><li>对于这个对象应做到每个线程独有，每次用时打开，用完关闭</li></ul></li><li><p>执行语句的方法主要有</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;T&gt; <span class="function">T <span class="title">selectOne</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line">&lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">selectList</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(String statement, Object parameter)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>操作事务的方法主要有</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">roolback</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="8-2-工作原理"><a href="#8-2-工作原理" class="headerlink" title="8.2 工作原理"></a>8.2 工作原理</h4><p><img src="MyBatis%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E5%9B%BE.png" alt=""></p><h1 id="九-Mybatis实现Dao层"><a href="#九-Mybatis实现Dao层" class="headerlink" title="九.Mybatis实现Dao层"></a>九.Mybatis实现Dao层</h1><h4 id="9-1-传统开发方式"><a href="#9-1-传统开发方式" class="headerlink" title="9.1 传统开发方式"></a>9.1 传统开发方式</h4><ul><li><p>编写UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询所有</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByID</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>编写UserMapper实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperImpl</span> <span class="keyword">implements</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            List&lt;User&gt; list = sqlSession.selectList(<span class="string">"UserMapper.findAll"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">save</span><span class="params">( )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            user.setUsername(<span class="string">"SAVE"</span>);</span><br><span class="line">            user.setSex(<span class="string">"Male"</span>);</span><br><span class="line">            user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">            user.setAddress(<span class="string">"HK"</span>);</span><br><span class="line">            <span class="keyword">int</span> insert = sqlSession.insert(<span class="string">"UserMapper.save"</span>, user);</span><br><span class="line"></span><br><span class="line">            sqlSession.commit();</span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> insert;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">update</span><span class="params">( )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            user.setId(<span class="number">53</span>);</span><br><span class="line">            user.setUsername(<span class="string">"UPDATE"</span>);</span><br><span class="line">            user.setSex(<span class="string">"Female"</span>);</span><br><span class="line">            user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">            user.setAddress(<span class="string">"HK"</span>);</span><br><span class="line">            <span class="keyword">int</span> update = sqlSession.update(<span class="string">"UserMapper.update"</span>, user);</span><br><span class="line">            sqlSession.commit();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> update;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">( )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            <span class="keyword">int</span> delete = sqlSession.delete(<span class="string">"UserMapper.delete"</span>, <span class="number">50</span>);</span><br><span class="line">            sqlSession.commit();</span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> delete;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByID</span><span class="params">( )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            User user = sqlSession.selectOne(<span class="string">"UserMapper.findById"</span>, <span class="number">53</span>);</span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> user;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>编写UserMapper.xml映射文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--新增--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        INSERT INTO</span><br><span class="line">        user(username,birthday,sex,address)</span><br><span class="line">        VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--修改--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        UPDATE user set username=#&#123;username&#125;,birthday=#&#123;birthday&#125;,sex=#&#123;sex&#125;,address=#&#123;address&#125; WHERE id =#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--删除--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"delete"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">        DELETE FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>模拟service测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findall</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        Integer save = userMapper.save();</span><br><span class="line">        System.out.println(save);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        Integer update = userMapper.update();</span><br><span class="line">        System.out.println(update);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        <span class="keyword">int</span> delete = userMapper.delete();</span><br><span class="line">        System.out.println(delete);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findOne</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        User byID = userMapper.findByID();</span><br><span class="line">        System.out.println(byID);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>知识小结</p><ul><li>编写UserMapper接口 </li><li>编写UserMapperImpl实现类 </li><li>编写UserMapper.xml映射</li></ul></li></ul><h4 id="9-2-接口代理开发方式"><a href="#9-2-接口代理开发方式" class="headerlink" title="9.2 接口代理开发方式"></a>9.2 接口代理开发方式</h4><p>基于接口代理方式的开发只需要:编写接口和映射文件，Mybatis 框架会为我们动态生成实现类的对象。</p><ul><li><p>接口开发规范</p><ul><li><p>Mapper映射文件的namespace与Mapper接口全限定名一致 </p></li><li><p>Mapper接口的方法名与id的属性名一致</p></li><li><p>方法的参数类型与parameterType属性类型一致</p></li><li><p>方法的返回值类型与resultType属性类型一致</p></li><li><p>映射文件需要与接口在同一个包下，文件名和接口名相同:扫描包，加载所有的映射文件 </p><p>&lt;package name=”cn.itcast.dao”&gt;</package></p></li></ul></li><li><p>编写UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"><span class="comment">// 查询所有</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写UserMapper.xml映射文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"cn.itcast.dao.UserMapper"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>模拟service测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 需要通过mybatis帮你根据接口规范创建实现类</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        <span class="comment">// 创建代理对象(实现类)</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 执行sql</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">        <span class="comment">// 关闭会话</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>基于接口代理方式的内部执行原理</p><p>使用了JDK动态代理技术，帮我们创建了接口的实现类，底层还是执行SqlSession.insert() | update()</p></li></ul><h1 id="十-接口代理的增删改查"><a href="#十-接口代理的增删改查" class="headerlink" title="十.接口代理的增删改查"></a>十.接口代理的增删改查</h1><h4 id="10-1-UserMapper接口"><a href="#10-1-UserMapper接口" class="headerlink" title="10.1 UserMapper接口"></a>10.1 UserMapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-2-UserMapper-xml-映射文件"><a href="#10-2-UserMapper-xml-映射文件" class="headerlink" title="10.2 UserMapper.xml 映射文件"></a>10.2 UserMapper.xml 映射文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--新增--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        INSERT INTO</span><br><span class="line">        user(username,birthday,sex,address)</span><br><span class="line">        VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--修改--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        UPDATE user set username=#&#123;username&#125;,birthday=#&#123;birthday&#125;,sex=#&#123;sex&#125;,address=#&#123;address&#125; WHERE id =#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--删除--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"delete"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">        DELETE FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="10-3-测试代码"><a href="#10-3-测试代码" class="headerlink" title="10.3 测试代码"></a>10.3 测试代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 需要通过mybatis帮你根据接口规范创建实现类</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        <span class="comment">// 创建代理对象(实现类)</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 执行sql</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">        <span class="comment">// 关闭会话</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"testSAVE_Interface"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"HK"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        userMapper.save(user);</span><br><span class="line"></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="number">54</span>);</span><br><span class="line">        user.setUsername(<span class="string">"testUpdate_Interface"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Female"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"HK"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        userMapper.update(user);</span><br><span class="line"></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        userMapper.delete(<span class="number">53</span>);</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = userMapper.findById(<span class="number">52</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line"></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 框架简介</strong></p><p><strong>### MVC模式</strong></p><p>- model模型</p><p>- view视图</p><p>- controller控制器</p><p><strong>### 三层架构</strong></p><p>- web层</p><p>- service层</p><p>- dao层</p><p><strong>### 什么是框架？</strong></p><p>- 半成品软件 </p><p><strong>### 常见框架</strong></p><p>- 持久层</p><p>​    - mybatis</p><p>​    - hibernate</p><p>​    - spring jdbc</p><p>- 表现层</p><p>​    - struts2</p><p>​    - spring mvc</p><p>- 全栈（业务层）</p><p>​    - spring</p><p><strong>## 二 Mybatis简介</strong></p><p><strong>### mybatis是一款优秀的持久层框架，封装了jdbc实现细节，让开发者只关注      sql本身。</strong></p><p><strong>### mybatis是ORM映射框架</strong></p><p><strong>## 三 Mybatis快速入门</strong></p><p><strong>### 1. 创建mybatis_db数据库和user表</strong></p><p><strong>### 2. 创建java项目，引入MyBatis相关jar包</strong></p><p><strong>### 3. 创建User实体类</strong></p><p><strong>### 4. 编写映射文件UserMapper.xml</strong></p><p><strong>### 5. 编写核心文件SqlMapConfig.xml</strong></p><p><strong>### 6. 编写测试类</strong></p><p><strong>## 四 Mybatis映射文件概述</strong></p><p><strong>## 五 Mybatis增删改查</strong></p><p><strong>### 了解</strong></p><p><strong>## 六 抽取工具类</strong></p><p><strong>## 七 Mybatis核心文件概述</strong></p><p><strong>### environments标签</strong></p><p>- 数据库环境配置</p><p><strong>### properties标签</strong></p><p>- 引入第三方配置</p><p><strong>### typeAliases标签</strong></p><p>- 实体别名配置</p><p><strong>### mappers标签</strong></p><p>- 加载映射配置</p><p><strong>## 八 Mybatis的API概述</strong></p><p><strong>### Resources</strong></p><p>- 加载核心配置文件</p><p><strong>### SqlSessionFactoryBuilder</strong></p><p>- 构建工厂</p><p><strong>### SqlSessionFactory</strong></p><p>- 生产会话对象</p><p><strong>### SqlSession</strong></p><p>- 实现与数据库CRUD操作</p><p><strong>## 九 Mybatis实现Dao层的二种方式</strong></p><p><strong>### 传统方式</strong></p><p><strong>### 接口代理方式</strong></p><p>- 1。映射文件的命名空间必须是接口的全限定类名</p><p>- 2。接口方法的名称必须与statement标签id一致</p><p>- 3。接口方法参数类型必须与statement标签的parameterType类型一致</p><p>- 4。接口方法返回值类型必须与statement标签的ResultType类型一致</p><p>- 5。接口和映射文件同名，同包</p><p><strong>## 十 接口代理的增删改查</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;框架简介&lt;/li&gt;
&lt;li&gt;Mybatis简介&lt;/li&gt;
&lt;li&gt;Mybatis快速入门&lt;/li&gt;
&lt;li&gt;Mybatis映射文件概述&lt;/li&gt;
&lt;li&gt;Mybatis增删改查&lt;/li&gt;
&lt;li&gt;抽取工具类&lt;/li&gt;
&lt;li&gt;Mybatis核心文件概述&lt;/li&gt;
&lt;li&gt;Mybatis的API概述&lt;/li&gt;
&lt;li&gt;Mybatis实现Dao层&lt;/li&gt;
&lt;li&gt;接口代理的增删改查&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（四十九）</title>
    <link href="http://yoursite.com/2020/05/08/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%B9%9D%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/08/就业班学习笔记（四十九）/</id>
    <published>2020-05-08T01:02:16.000Z</published>
    <updated>2020-05-08T16:01:20.603Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>PreparedStatement</p></li><li><p>连接池</p></li></ul><a id="more"></a><h1 id="一-PreparedStatement"><a href="#一-PreparedStatement" class="headerlink" title="一.PreparedStatement"></a>一.PreparedStatement</h1><h4 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h4><ul><li><p>SQL注入问题</p><p>我们让用户输入的信息和SQL语句进行字符串拼接。用户输入的内容作为了SQL语句语法的一部分，改变了原有SQL</p><p>真正的意义，以上问题称为SQL注入。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 这条sql语句原有的含义是根据用户名和密码查询</span></span><br><span class="line"><span class="comment">-- 现在用户输入了一些特殊字符，改变了sql原有的含义，这种行为成为sql注入 </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> username =<span class="string">'admin'</span><span class="comment"># ' and password =''</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>解决SQL注入问题</p><p>我们就不能让用户输入的信息和SQL语句进行字符串拼接。需要使用PreparedSatement对象解决SQL注入。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在java语言中修复sql注入问题，通过占位符代替实际参数</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> username = ? <span class="keyword">AND</span> <span class="keyword">password</span> = ?</span><br><span class="line"><span class="comment">-- 仅仅模拟sql解决思想，非真实解决方案</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> username = <span class="string">"admin'#"</span> <span class="keyword">AND</span> <span class="keyword">PASSWORD</span> = <span class="string">""</span></span><br></pre></td></tr></table></figure></li><li><p>PreparedSatement基础语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 1.获取连接</span><br><span class="line">// 2.编写sql【占位符代替实际参数】</span><br><span class="line">String sql = "<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> username = ? <span class="keyword">AND</span> <span class="keyword">password</span> = ?<span class="string">";</span></span><br><span class="line"><span class="string">// 3.获取sql预编译执行对象，先发送给数据库进行预编译 </span></span><br><span class="line"><span class="string">PreparedStatement pstmt = connection.prepareStatement(sql);</span></span><br><span class="line"><span class="string">// 4.设置占位符实际参数 </span></span><br><span class="line"><span class="string">pstmt.setString(1,"</span><span class="keyword">admin</span><span class="string">'#"); </span></span><br><span class="line"><span class="string">pstmt.setString(2,"");</span></span><br><span class="line"><span class="string">// 5.执行sql语句，并返回结果【注意，不需要传递sql参数】 </span></span><br><span class="line"><span class="string">ResultSet resultSet = pstmt.executeQuery();</span></span><br><span class="line"><span class="string">// 6.处理结果 // 7.释放资源</span></span><br></pre></td></tr></table></figure></li><li><p>优点</p><p> 防止sql注入，提高安全性</p><p>参数与sql分离，提高代码可读性 </p><p>减少编译次数，提高性能</p></li></ul><h4 id="1-2-操作"><a href="#1-2-操作" class="headerlink" title="1.2 操作"></a>1.2 操作</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CRUD_DEMO</span> </span>&#123;</span><br><span class="line">    <span class="comment">//新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//获取连接</span></span><br><span class="line">        Connection connection = JdbcUtils.getConnection();</span><br><span class="line">        <span class="comment">//编写sql</span></span><br><span class="line">        String sql = <span class="string">"INSERT INTO user VALUES (NULL ,?,?);"</span>;</span><br><span class="line">        <span class="comment">//获取sql预编译执行对象</span></span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        <span class="comment">//设计实际参数</span></span><br><span class="line">        preparedStatement.setString(<span class="number">1</span>, <span class="string">"Jerry"</span>);</span><br><span class="line">        preparedStatement.setString(<span class="number">2</span>, <span class="string">"999"</span>);</span><br><span class="line">        <span class="comment">//执行sql并返回结果</span></span><br><span class="line">        <span class="keyword">int</span> i = preparedStatement.executeUpdate();</span><br><span class="line">        <span class="comment">//处理结果</span></span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"First Recording Add Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        preparedStatement.setString(<span class="number">1</span>, <span class="string">"Ming"</span>);</span><br><span class="line">        preparedStatement.setString(<span class="number">2</span>, <span class="string">"999"</span>);</span><br><span class="line">        i = preparedStatement.executeUpdate();</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Second Recording Add Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        JdbcUtils.close(preparedStatement, connection);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//获取连接</span></span><br><span class="line">        Connection connection = JdbcUtils.getConnection();</span><br><span class="line">        <span class="comment">//编写sql</span></span><br><span class="line">        String sql = <span class="string">"UPDATE user SET username = ? where id = ?;"</span>;</span><br><span class="line">        <span class="comment">//获取预编译sql执行对</span></span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        <span class="comment">//设计实际参数</span></span><br><span class="line">        preparedStatement.setString(<span class="number">1</span>, <span class="string">"RRR"</span>);</span><br><span class="line">        preparedStatement.setInt(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">        <span class="comment">//执行sql,并返回结果</span></span><br><span class="line">        <span class="keyword">int</span> i = preparedStatement.executeUpdate();</span><br><span class="line">        <span class="comment">//处理结果</span></span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Update Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        JdbcUtils.close(preparedStatement, connection);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Connection connection = JdbcUtils.getConnection();</span><br><span class="line">        String sql = <span class="string">"DELETE FROM user WHERE id=?"</span>;</span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        preparedStatement.setInt(<span class="number">1</span>, <span class="number">6</span>);</span><br><span class="line">        <span class="keyword">int</span> i = preparedStatement.executeUpdate();</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Delete Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        JdbcUtils.close(preparedStatement, connection);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Connection connection = JdbcUtils.getConnection();</span><br><span class="line">        String sql = <span class="string">"SELECT * FROM user;"</span>;</span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        ResultSet resultSet = preparedStatement.executeQuery();</span><br><span class="line">        <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">            <span class="keyword">int</span> id = resultSet.getInt(<span class="string">"id"</span>);</span><br><span class="line">            String username = resultSet.getString(<span class="string">"username"</span>);</span><br><span class="line">            String password = resultSet.getString(<span class="string">"password"</span>);</span><br><span class="line">            System.out.println(<span class="string">"\tID:"</span> + id + <span class="string">"\tUSERNAME:"</span> + username + <span class="string">"\tPASSWORD:"</span> + password);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        JdbcUtils.close(preparedStatement, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二-连接池"><a href="#二-连接池" class="headerlink" title="二.连接池"></a>二.连接池</h1><h4 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h4><p>连接池其实就是一个容器(集合)，存放数据库连接的容器。</p><p>当系统初始化好后，容器被创建，容器中会申请一些连接对象，当用户来访问数据库时，从容器中获取连接对象，用 户访问完之后，会将连接对象归还给容器。</p><ul><li><p>优点</p><p>节约资源，减轻服务器压力 </p><p>提高连接复用性，用户访问高效</p></li><li><p>常见连接池</p><table><thead><tr><th>DBCP</th><th>Apache提供的数据库连接池技术。</th></tr></thead><tbody><tr><td>C3P0</td><td>数据库连接池技术，目前使用它的开源项目有Hibernate、Spring等。</td></tr><tr><td>HikariCP</td><td>日本开发的连接池技术，性能之王,目前使用它的开源项目有SpringBoot等。</td></tr><tr><td>Druid(德鲁伊)</td><td>阿里巴巴提供的数据库连接池技术</td></tr></tbody></table></li><li><p>实现</p><p>Java为数据库连接池提供了公共的接口: DataSource ，各个连接池厂商去实现这套接口，提供jar包。</p><table><thead><tr><th>功能</th><th></th></tr></thead><tbody><tr><td>获取连接</td><td>Connection getConnection()</td></tr><tr><td>归还连接</td><td>connection.close()</td></tr><tr><td></td><td>若连接对象通过连接池获取，执行 connection.close() 方法时，是归还到连接池，非销毁对象</td></tr><tr><td></td><td>底层通过动态代理技术对close()方法进行了增强</td></tr></tbody></table></li></ul><h4 id="2-2-Druid连接池"><a href="#2-2-Druid连接池" class="headerlink" title="2.2 Druid连接池"></a>2.2 Druid连接池</h4><h5 id="2-2-1-快速入门"><a href="#2-2-1-快速入门" class="headerlink" title="2.2.1 快速入门"></a>2.2.1 快速入门</h5><ul><li><p>导入jar包</p><p>druid-1.1.10.jar</p><p>mysql-connector-java-8.0.16.jar</p></li><li><p>编写测试代码(耦合版本)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建druid连接池对象</span></span><br><span class="line">        DruidDataSource dataSource = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.与mysql建立连接(初始化一些连接个数)，设置数据库基本四项</span></span><br><span class="line">        dataSource.setDriverClassName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        dataSource.setUrl(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>);</span><br><span class="line">        dataSource.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        dataSource.setPassword(<span class="string">"root"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.从连接池中获取连接</span></span><br><span class="line">        Connection connection = dataSource.getConnection();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.处理业务</span></span><br><span class="line">        System.out.println(connection);</span><br><span class="line">        <span class="comment">// 5.归还连接,注意，非销毁</span></span><br><span class="line">        connection.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-2-2-配置文件"><a href="#2-2-2-配置文件" class="headerlink" title="2.2.2 配置文件"></a>2.2.2 配置文件</h5><table><thead><tr><th>参数设置</th><th>作用</th></tr></thead><tbody><tr><td>initialSize</td><td>初始化建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时</td></tr><tr><td>maxActivve</td><td>最大连接池数量</td></tr><tr><td>MinIdle</td><td>最小连接池数量</td></tr><tr><td>maxWait</td><td>获取连接时最大等待时间，ms</td></tr></tbody></table><ul><li><p>定义配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#druid.properties</span><br><span class="line">#基本4项，必须有，左边名称限定</span><br><span class="line">driverClassName&#x3D;com.mysql.jdbc.Driver</span><br><span class="line">url&#x3D;jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;Day48</span><br><span class="line">username&#x3D;root</span><br><span class="line">password&#x3D;root</span><br><span class="line"></span><br><span class="line"># 初始化个数</span><br><span class="line">initialSize&#x3D;5</span><br><span class="line">#最大连接个数</span><br><span class="line">maxActivve&#x3D;10</span><br><span class="line">#等待时间，ms</span><br><span class="line">maxWait&#x3D;3000</span><br></pre></td></tr></table></figure></li><li><p>编写代码(解耦合版)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidDemo2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 通过类加载器读取src目录下配置文件，获取io流</span></span><br><span class="line">        InputStream is = DruidDemo2.class.getClassLoader().getResourceAsStream("druid.properties");</span><br><span class="line">        <span class="comment">// 创建 Properties对象</span></span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        properties.load(is);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// druid连接池工厂对象，初始化连接池</span></span><br><span class="line">        DataSource dataSource = DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取连接</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">11</span>; i++) &#123;</span><br><span class="line">            Connection connection = dataSource.getConnection();</span><br><span class="line">            System.out.println(connection);</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">10</span>) &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="comment">// 归还连接</span></span><br><span class="line">            <span class="comment">//connection.close();</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-连接工具类"><a href="#2-3-连接工具类" class="headerlink" title="2.3 连接工具类"></a>2.3 连接工具类</h4><p>我们每次操作数据库都需要创建连接池，获取连接，关闭资源，都是重复的代码。我们可以将创建连接池和获取连接</p><p>池的代码放到一个工具类中。</p><blockquote><p>保证连接池对象，只创建一次</p></blockquote><p>目的:简化书写，提高效率</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span></span>&#123;</span><br><span class="line"><span class="comment">// 1.初始化连接池对象(druid)，一个项目只有一个 static&#123;&#125; // 2.提供获取连接池对象静态方法</span></span><br><span class="line"><span class="comment">// 3.提供连接对象的静态方法</span></span><br><span class="line"><span class="comment">// 4.提供释放资源的静态方法(connection是归还)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.初始化连接池对象(druid)，一个项目只有一个 static&#123;&#125;</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 通过类加载器读取src目录下配置文件，获取io流</span></span><br><span class="line">            InputStream is = JdbcUtils.class.getClassLoader().getResourceAsStream("druid.properties");</span><br><span class="line">            <span class="comment">// 创建 Properties对象</span></span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(is);</span><br><span class="line">            <span class="comment">// druid连接池工厂对象，初始化连接池</span></span><br><span class="line">            dataSource = DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.提供获取连接池对象静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.提供连接对象的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.提供释放资源的静态方法(connection是归还)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet resultSet, Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重载关闭方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        close(<span class="keyword">null</span>, statement, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三-案例-用户登录"><a href="#三-案例-用户登录" class="headerlink" title="三.案例:用户登录"></a>三.案例:用户登录</h1><ul><li><p>需求 </p><p>使用三层架构+JDBC连接池技术(面向接口编程)，实现用户登录案例</p></li></ul><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><table><thead><tr><th>Login.jsp</th><th></th><th></th><th>Server</th><th></th><th></th><th>数据库</th></tr></thead><tbody><tr><td></td><td></td><td>web层</td><td>service层</td><td>dao层</td><td></td><td></td></tr><tr><td>UserName<br>Password</td><td>➡<br>⬅</td><td>Servlet接口</td><td>UserService接口</td><td>UserDao接口</td><td>➡<br/>⬅</td><td>SQL</td></tr><tr><td>Login</td><td></td><td>⬆</td><td>⬆</td><td>⬆</td><td></td><td></td></tr><tr><td></td><td></td><td>LoginServlet<br>1.接收请求<br/>2.调用service<br/>3.判断转发/重定向</td><td>UserServiceImpl实现类</td><td>UserDaoImpl实现类</td><td></td><td></td></tr></tbody></table><table><thead><tr><th>Login.jsp</th><th></th><th></th><th>Server</th><th></th><th></th><th>数据库</th></tr></thead><tbody><tr><td></td><td></td><td>LoginServlet</td><td>UserServiceImpl</td><td>UserDaoImpl</td><td></td><td></td></tr><tr><td>UserName<br>Password</td><td>➡<br>⬅</td><td>实现了Servlet接口</td><td>实现了UserService接口</td><td>实现了UserDao接口</td><td>➡<br/>⬅</td><td>SQL</td></tr><tr><td>Login</td><td></td><td>1.接收请求参数<br/>username<br/>password<br/>2.调用service，返回User对象<br/>3.判断User对象<br/>转发，提示用户名/密码错误<br/>重定向list.jsp</td><td>public User login(user,  pwd) {   <br>  调用dao，返回user对象<br/> }</td><td>public User login(user,  pwd) {   <br/>  使用JDBC连接池获取连接<br/>查询数据库<br>将结果封装到user对象中 }</td><td></td><td></td></tr></tbody></table><h4 id="3-2-环境搭建"><a href="#3-2-环境搭建" class="headerlink" title="3.2 环境搭建"></a>3.2 环境搭建</h4><ul><li><p>使用昨天的数据库和user表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">id</span>       <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">    username <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">    <span class="keyword">password</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">USER</span> (username, <span class="keyword">password</span>)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'admin'</span>, <span class="string">'123'</span>),</span><br><span class="line">       (<span class="string">'tom'</span>, <span class="string">'123'</span>),</span><br><span class="line">       (<span class="string">'jack'</span>, <span class="string">'123'</span>);</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建web工程，导入相关jar包</p><p>commons-beanutils-1.8.3.jar</p><p>commons-logging-1.1.1.jar</p><p>druid-1.1.10.jar</p><p>javax.servlet.jsp.jstl.jar</p><p>jstl-impl.jar</p><p>mysql-connector-java-8.0.16.jar</p></li><li><p>导入页面资源</p></li><li><p>创建三层包目录结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">├── com</span><br><span class="line">│   └── <span class="keyword">case</span></span><br><span class="line">│       ├── dao</span><br><span class="line">│       │   ├── UserDao.java</span><br><span class="line">│       │   └── UserDaoImpl.java</span><br><span class="line">│       ├── domain</span><br><span class="line">│       │   └── User.java</span><br><span class="line">│       ├── service</span><br><span class="line">│       │   ├── UserService.java</span><br><span class="line">│       │   └── UserServiceImpl.java</span><br><span class="line">│       ├── util</span><br><span class="line">│       │   └── JdbcUtils.java</span><br><span class="line">│       └── web</span><br><span class="line">│           ├── filter</span><br><span class="line">│           │   └── EncodeFilter.java</span><br><span class="line">│           └── servlet</span><br><span class="line">│               └── LoginServlet.java</span><br><span class="line">└── druid.properties</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">9 directories, 9 files</span><br></pre></td></tr></table></figure></li><li><p>导入JbdcUtils工具类</p></li><li><p>编写User实体类</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//省略getter/setter，toString，全参构造</span></span><br></pre></td></tr></table></figure><h4 id="3-3-代码实现"><a href="#3-3-代码实现" class="headerlink" title="3.3 代码实现"></a>3.3 代码实现</h4><ul><li>LoginServlet</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 处理编码</span></span><br><span class="line"><span class="comment">//        req.setCharacterEncoding("utf-8");</span></span><br><span class="line"><span class="comment">//        resp.setContentType("text/html;charset=utf-8");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.调用service</span></span><br><span class="line">        UserServiceImpl userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        User user = userService.login(username, password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.判断</span></span><br><span class="line">        <span class="keyword">if</span>(user==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">// 登录失败，友情提示</span></span><br><span class="line">            req.setAttribute(<span class="string">"error"</span>,<span class="string">"Username/Password Wrong"</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 登录成功</span></span><br><span class="line">            req.getSession().setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">            resp.sendRedirect(req.getContextPath()+<span class="string">"/list.jsp"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>UserService 接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//根据用户名密码查询User对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String username, String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>UserServiceImpl 实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        UserDaoImpl userDao = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line">        <span class="keyword">return</span> userDao.login(username,password);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>UserDao 接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">//根据用户名密码查询User对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String username, String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>UserDaoImpl 实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement preparedStatement = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.获取连接【从连接池】</span></span><br><span class="line">            connection = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">// 2.编写sql</span></span><br><span class="line">            String sql = <span class="string">"SELECT * FROM user WHERE username= ? AND password = ?;"</span>;</span><br><span class="line">            <span class="comment">// 3.获取sql预编译执行对象</span></span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            <span class="comment">// 4.设置实际参数</span></span><br><span class="line">            preparedStatement.setString(<span class="number">1</span>, username);</span><br><span class="line">            preparedStatement.setString(<span class="number">2</span>, password);</span><br><span class="line">            <span class="comment">// 5.执行sql并返回结果</span></span><br><span class="line">            resultSet = preparedStatement.executeQuery();</span><br><span class="line">            <span class="comment">// 6.处理结果</span></span><br><span class="line">            User user = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (resultSet.next()) &#123;</span><br><span class="line">                <span class="comment">// 获取 id 用户名、密码</span></span><br><span class="line">                <span class="keyword">int</span> id = resultSet.getInt(<span class="string">"id"</span>);</span><br><span class="line">                username = resultSet.getString(<span class="string">"username"</span>);</span><br><span class="line">                password = resultSet.getString(<span class="string">"password"</span>);</span><br><span class="line">                user = <span class="keyword">new</span> User();</span><br><span class="line">                user.setId(id);</span><br><span class="line">                user.setUsername(username);</span><br><span class="line">                user.setPassword(password);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> user;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 7.释放资源</span></span><br><span class="line">            JdbcUtils.close(resultSet, preparedStatement, connection);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## PreparedStatement</strong></p><p><strong>### 介绍</strong></p><p>- 预编译sql执行对象</p><p><strong>### 优点</strong></p><p>- 1）防止sql注入，提高安全性</p><p>- 2）减少编译次数，提高效率</p><p>- 3）参数与sql语句分离，提高可读性</p><p><strong>### 步骤</strong></p><p>- 1）注册驱动</p><p>- 2）建立连接</p><p>- 3）编写sql ?占位符代替参数</p><p>- 4）获取sql预编译执行对象 先将sql发送到数据库</p><p>- 5）设置实际参数</p><p>- 6）执行sql并返回结果</p><p>- 7）处理结果</p><p>- 8）释放资源</p><p><strong>### 作业</strong></p><p>- 重写登录案例</p><p>- CRUD练习</p><p><strong>## datasource</strong></p><p><strong>### 介绍：</strong></p><p>- 在系统初始化时，创建一个连接池生成一些连接对象，用户访问数据库时，从连接池获取连接，使用完毕归还到连接池</p><p><strong>### 优点</strong></p><p>- 1）减轻服务器压力</p><p>- 2）提高连接复用性</p><p><strong>### dataSource</strong></p><p>- 是sun公司提供连接池规范（接口），连接池厂商根据接口编写实现类</p><p>​    - c3p0</p><p>​    - hikariCP</p><p>​    - Druid</p><p><strong>### 作业</strong></p><p>- druid快速入门</p><p>​    - 1）导入jar包</p><p>​    - 2）定义配置文件</p><p>​    - 3）编写代码</p><p>- druid连接池工具类</p><p><strong>## 案例：用户登录</strong></p><p><strong>### 面向接口编程</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;PreparedStatement&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;连接池&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（四十八）</title>
    <link href="http://yoursite.com/2020/05/06/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E5%85%AB%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/06/就业班学习笔记（四十八）/</id>
    <published>2020-05-06T01:01:41.000Z</published>
    <updated>2020-05-08T16:01:57.646Z</updated>
    
    <content type="html"><![CDATA[<ul><li>JDBC基础</li></ul><a id="more"></a><h1 id="一-JDBC基础"><a href="#一-JDBC基础" class="headerlink" title="一.JDBC基础"></a>一.JDBC基础</h1><h4 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h4><p>Java 数据库连接(Java DataBase Connectivity)</p><ul><li><p>作用:通过Java语言操作数据库</p></li><li><p>本质:是官方(sun公司)定义的一套操作所有关系型数据库的规则(接口)。各个数据库厂商去实现这套接口，提 供数据库驱动jar包。我们可以使用这套接口(JDBC)编程，运行时的代码其实是驱动jar包中的实现类。</p></li></ul><h4 id="1-2-快速入门"><a href="#1-2-快速入门" class="headerlink" title="1.2 快速入门"></a>1.2 快速入门</h4><ul><li><p>需求</p><p>通过java代码向数据库user表插入一条记录</p></li><li><p>准备数据库和表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> Day48;</span><br><span class="line"><span class="keyword">USE</span> Day48;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">id</span>       <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">    username <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">    <span class="keyword">password</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">USER</span> (username, <span class="keyword">password</span>)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'admin'</span>, <span class="string">'123'</span>),</span><br><span class="line">       (<span class="string">'tom'</span>, <span class="string">'123'</span>),</span><br><span class="line">       (<span class="string">'jack'</span>, <span class="string">'123'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span>;</span><br></pre></td></tr></table></figure></li><li><p>创建java工程，导入MySQL驱动jar包</p><p>mysql-connector-java-5.1.45-bin.jar</p></li><li><p>编写插入代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDEMO</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1.注册驱动</span></span><br><span class="line"><span class="comment">//        DriverManager.registerDriver(new Driver());</span></span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        <span class="comment">//2.建立连接</span></span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        <span class="comment">//3.编写sql</span></span><br><span class="line">        String sql = <span class="string">"insert into user values(4,'lucy',666)"</span>;</span><br><span class="line">        <span class="comment">//4.获取sql执行对象</span></span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="comment">//5.执行sql并返回结果</span></span><br><span class="line">        <span class="keyword">int</span> i = statement.executeUpdate(sql);</span><br><span class="line">        <span class="comment">//6.处理结果</span></span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Success"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//7.释放资源</span></span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-API介绍"><a href="#1-3-API介绍" class="headerlink" title="1.3 API介绍"></a>1.3 API介绍</h4><p>sun公司提供的:java.sql包下</p><ul><li><p>DriverManager:驱动管理对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.注册驱动</span><br><span class="line">        <span class="number">1</span>)<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">registerDriver</span><span class="params">(Driver driver)</span></span></span><br><span class="line"><span class="function">        我们通过翻看MySQL Driver实现类的源码发现内部的静态代码已经提供了注册驱动功能</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">        DriverManager.registerDriver(<span class="keyword">new</span> Driver());</span><br><span class="line">        &#125;<span class="keyword">catch</span>(SQLException var1)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Can't register driver!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="number">2</span>)反射 </span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        <span class="number">3</span>)SPI 服务提供接口 【Service Provider Interface】</span><br><span class="line"><span class="number">2</span>.建立连接</span><br><span class="line"><span class="function"><span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">(String url,String user,String password)</span></span></span><br><span class="line"><span class="function">参数说明:</span></span><br><span class="line"><span class="function">        url:连接指定数据库地址【固定格式】 </span></span><br><span class="line"><span class="function">        格式:jdbc:mysql:<span class="comment">//ip地址+端口/数据库名 </span></span></span><br><span class="line"><span class="function">        实例:</span></span><br><span class="line"><span class="function">        jdbc:mysql:<span class="comment">//localhost:3306/day23</span></span></span><br><span class="line"><span class="function">        jdbc:mysql:<span class="comment">///day23 </span></span></span><br><span class="line"><span class="function">      user:用户名</span></span><br><span class="line"><span class="function">      password:密码</span></span><br></pre></td></tr></table></figure></li><li><p>Connection:数据库连接对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 获取sql执行对象【小货车】</span><br><span class="line">  <span class="function">Statement <span class="title">createStatement</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">  PreparedStatement <span class="title">prepareStatement</span><span class="params">(String sql)</span>  </span></span><br><span class="line"><span class="function">2. 事务管理 </span></span><br><span class="line"><span class="function">    1)关闭自动提交<span class="params">(开启事务)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">void</span> <span class="title">setAutoCommit</span><span class="params">(<span class="keyword">boolean</span> autoCommit)</span></span></span><br><span class="line"><span class="function">      参数: </span></span><br><span class="line"><span class="function">          <span class="keyword">true</span>:自动提交【默认值】 </span></span><br><span class="line"><span class="function">          <span class="keyword">false</span>:手动提交</span></span><br><span class="line"><span class="function">    2)提交事务</span></span><br><span class="line"><span class="function">        <span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    3)回滚事务</span></span><br><span class="line"><span class="function">        <span class="keyword">void</span> <span class="title">rollback</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>Statement:执行sql的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 执行所有类型sql语句【了解】</span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">execute</span><span class="params">(String sql)</span></span></span><br><span class="line"><span class="function">2. 仅执行DML类型sql语句</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">executeUpdate</span><span class="params">(String sql)</span></span></span><br><span class="line"><span class="function">      参数:dml类型<span class="title">sql</span><span class="params">(insert、update、delete)</span> </span></span><br><span class="line"><span class="function">      返回值:影响行数</span></span><br><span class="line"><span class="function">3. 仅执行DQL类型sql语句</span></span><br><span class="line"><span class="function">ResultSet <span class="title">executeQuery</span><span class="params">(String sql)</span></span></span><br><span class="line"><span class="function">    参数:dql类型<span class="title">sql</span><span class="params">(select)</span> </span></span><br><span class="line"><span class="function">    返回值:结果集</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>ResultSet:结果集对象,封装查询结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 指针下移</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">next</span><span class="params">()</span></span></span><br><span class="line"><span class="function">返回值: </span></span><br><span class="line"><span class="function">          <span class="keyword">true</span>:表示此行有数据 </span></span><br><span class="line"><span class="function">          <span class="keyword">false</span>:表示此行没有数据</span></span><br><span class="line"><span class="function">    <span class="title">while</span><span class="params">(resultSet.next)</span></span>&#123;</span><br><span class="line">    <span class="comment">//获取一行数据</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="number">2</span>. 获取数据</span><br><span class="line">  根据制定列编号和数据类型获取</span><br><span class="line">    <span class="function">T <span class="title">getXxx</span><span class="params">(<span class="keyword">int</span> 列编号)</span></span></span><br><span class="line"><span class="function">  根据指定列名和数据类型获取</span></span><br><span class="line"><span class="function">    T <span class="title">getXxx</span><span class="params">(String 列名)</span></span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">    补充:获取所有类型</span></span><br><span class="line"><span class="function">        Object <span class="title">getObject</span><span class="params">(String 列名)</span> </span></span><br><span class="line"><span class="function">        String <span class="title">getString</span><span class="params">(String 列名)</span></span></span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-CRUD操作"><a href="#1-4-CRUD操作" class="headerlink" title="1.4 CRUD操作"></a>1.4 CRUD操作</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.注册驱动</span></span><br><span class="line"><span class="comment">// 2.建立连接</span></span><br><span class="line"><span class="comment">// 3.编写sql</span></span><br><span class="line"><span class="comment">// 4.获取sql执行对象 // 5.执行sql并返回结果 // 6.处理结果</span></span><br><span class="line"><span class="comment">// 7.释放资源</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CRUDDEMO</span> </span>&#123;</span><br><span class="line">    <span class="comment">//新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        String sql = <span class="string">"insert into user values(NULL,'testInsert',666)"</span>;</span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="keyword">int</span> i = statement.executeUpdate(sql);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Successful"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        String sql = <span class="string">"UPDATE user SET username='testUpdate' WHERE id = 4"</span>;</span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="keyword">int</span> i = statement.executeUpdate(sql);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Successful"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAlter</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        String sql = <span class="string">"delete from user WHERE id = 2"</span>;</span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="keyword">int</span> i = statement.executeUpdate(sql);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Successful"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        String sql = <span class="string">"SELECT * FROM user"</span>;</span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">            <span class="keyword">int</span> id = resultSet.getInt(<span class="string">"id"</span>);</span><br><span class="line">            String username = resultSet.getString(<span class="string">"username"</span>);</span><br><span class="line">            String password = resultSet.getString(<span class="string">"password"</span>);</span><br><span class="line">            System.out.println(<span class="string">"\tID:"</span> + id + <span class="string">"\tUSERNAME:"</span> + username + <span class="string">"\tPASSWORD:"</span> + password);</span><br><span class="line">        &#125;</span><br><span class="line">        resultSet.close();</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-5-工具类"><a href="#1-5-工具类" class="headerlink" title="1.5 工具类"></a>1.5 工具类</h4><p>通过上面案例需求我们会发现每次去执行SQL语句都需要注册驱动，获取连接，得到Statement，以及释放资源。发</p><p>现很多重复的劳动，我们可以将重复的代码定义到一个工具类中。 </p><ul><li><p>目的:简化书写，一劳永逸</p></li><li><p>步骤分析</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span></span>&#123;</span><br><span class="line"><span class="comment">// 1.注册驱动【保证一次】</span></span><br><span class="line"><span class="keyword">static</span>&#123; &#125;</span><br><span class="line"><span class="comment">// 2.提供获取连接的静态方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 3.提供释放资源的方法 </span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-5-1-版本一"><a href="#1-5-1-版本一" class="headerlink" title="1.5.1 版本一"></a>1.5.1 版本一</h5><ul><li>该版本具有耦合性</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils1</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 1.注册驱动【保证一次】</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Load JDBC Driver Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.提供获取连接的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.提供释放资源的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet resultSet, Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重载关闭方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        close(statement, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-5-2-版本二"><a href="#1-5-2-版本二" class="headerlink" title="1.5.2 版本二"></a>1.5.2 版本二</h5><ul><li><p>解耦合版本</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#K-V</span></span><br><span class="line"><span class="meta">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/Day48</span></span><br><span class="line"><span class="meta">jdbc.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUitls</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明变量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String user = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载jdbc.properties配置文件，初始化变量</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        ResourceBundle jdbc = ResourceBundle.getBundle(<span class="string">"jdbc"</span>);</span><br><span class="line">        driver = jdbc.getString(<span class="string">"jdbc.driver"</span>);</span><br><span class="line">        url = jdbc.getString(<span class="string">"jdbc.url"</span>);</span><br><span class="line">        user = jdbc.getString(<span class="string">"jdbc.user"</span>);</span><br><span class="line">        password = jdbc.getString(<span class="string">"jdbc.password"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.注册驱动【保证一次】</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(driver);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Load Driver Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.提供获取连接的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url, user, password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.提供释放资源的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet resultSet, Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重载关闭方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        close(<span class="keyword">null</span>, statement, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-6-事务操作"><a href="#1-6-事务操作" class="headerlink" title="1.6 事务操作"></a>1.6 事务操作</h4><ul><li><p>事务</p><p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败</p></li><li><p>MySQL事务操作</p><table><thead><tr><th>事务</th><th></th></tr></thead><tbody><tr><td>开启事务</td><td>begin | start transaction;</td></tr><tr><td>提交事务</td><td>commit;</td></tr><tr><td>回顾事务</td><td>rollback;</td></tr></tbody></table></li><li><p>Java操作(使用Connection对象)</p><table><thead><tr><th>事务</th><th></th></tr></thead><tbody><tr><td>关闭自动提交(开启事务)</td><td>void setAutoCommit(false);</td></tr><tr><td>提交事务</td><td>void commit();</td></tr><tr><td>回顾事务</td><td>void rollback();</td></tr></tbody></table></li><li><p>需求:</p><p>通过Java代码实现转账案例</p></li><li><p>导入账户表</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">account</span>(</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">  money <span class="keyword">DOUBLE</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">account</span>(<span class="string">`name`</span>,money) <span class="keyword">VALUES</span> (<span class="string">'UserA'</span>,<span class="number">1000</span>),(<span class="string">'UserB'</span>,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><ul><li><p>编写转账代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TXDemo</span></span>&#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTX</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">          <span class="comment">// 1.获取连接【JdbcUtils工具类】 </span></span><br><span class="line">          <span class="comment">// 2.开启事务</span></span><br><span class="line"><span class="comment">// 3.UserA扣钱</span></span><br><span class="line"><span class="comment">// 机器故障</span></span><br><span class="line"><span class="comment">// 4.UserB加钱</span></span><br><span class="line"><span class="comment">// 5.提交事务 </span></span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123; </span><br><span class="line">          <span class="comment">// 6.回滚事务</span></span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line"><span class="comment">// 7.释放资源</span></span><br><span class="line">&#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TXDemo</span> </span>&#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTX</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Statement statement = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="comment">// 1.获取连接【JdbcUtils工具类】</span></span><br><span class="line">connection = JdbcUitls.getConnection(); </span><br><span class="line">          <span class="comment">// 2.开启事务 </span></span><br><span class="line">          connection.setAutoCommit(<span class="keyword">false</span>); </span><br><span class="line">          tatement = connection.createStatement(); </span><br><span class="line">          <span class="comment">// 3.UserA扣钱</span></span><br><span class="line">          <span class="comment">// 机器故障</span></span><br><span class="line">          <span class="comment">// 4.UserB加钱</span></span><br><span class="line">          <span class="comment">// 5.提交事务 </span></span><br><span class="line">          connection.commit();</span><br><span class="line">          &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 6.回滚事务</span></span><br><span class="line">connection.rollback(); </span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">e1.printStackTrace(); </span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="comment">// 7.释放资源</span></span><br><span class="line">JdbcUitls.close(statement, connection); </span><br><span class="line">        &#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TXDemo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTX</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Statement statement = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.获取连接【JdbcUtils工具类】</span></span><br><span class="line">            connection = JdbcUitls.getConnection();</span><br><span class="line">            <span class="comment">// 2.开启事务</span></span><br><span class="line">            connection.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3.UserA扣钱</span></span><br><span class="line">            String ASql = <span class="string">"update account set money = money-100 where id=2;"</span>;</span><br><span class="line">            <span class="keyword">int</span> AResult = statement.executeUpdate(ASql);</span><br><span class="line">            <span class="keyword">if</span> (AResult &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"User A Payment Successful"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 机器故障</span></span><br><span class="line">            <span class="keyword">int</span> a = <span class="number">1</span> / <span class="number">0</span>;</span><br><span class="line">            String BSql = <span class="string">"update account set money = money +100 where id =1;"</span>;</span><br><span class="line">            <span class="comment">// 4.UserB收到钱</span></span><br><span class="line">            <span class="keyword">int</span> BResult = statement.executeUpdate(BSql);</span><br><span class="line">            <span class="keyword">if</span> (BResult &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"User B Get the Payment"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 5.提交事务</span></span><br><span class="line">            connection.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 6.回滚事务</span></span><br><span class="line">                connection.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 7.释放资源</span></span><br><span class="line">            JdbcUitls.close(statement, connection);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-案例-用户登陆"><a href="#二-案例-用户登陆" class="headerlink" title="二.案例:用户登陆"></a>二.案例:用户登陆</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><table><thead><tr><th align="center">浏览器登录</th><th align="center"></th><th align="left"></th></tr></thead><tbody><tr><td align="center">⬇</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">服务器LoginServlet</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">接收用户请求<br>用户名，密码</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">⬇</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">操作JDBC<br>根据用户名和密码查询数据库</td><td align="center">➡<br>⬅</td><td align="left">Server</td></tr><tr><td align="center">⬇</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">判断用户是否登录成功</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">⬇正确</td><td align="center">➡错误</td><td align="left">转发登录页面提示</td></tr><tr><td align="center">重定向至list.jsp</td><td align="center"></td><td align="left"></td></tr></tbody></table><h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.web;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.util.JdbcUitls;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//统一编码</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//接收请求</span></span><br><span class="line">        String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 2.操作JDBC</span></span><br><span class="line">            <span class="comment">// 2.1 获取连接</span></span><br><span class="line">            Connection connection = JdbcUitls.getConnection();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.2 编写sql</span></span><br><span class="line">            <span class="comment">// String sql = "select * from user where username ='admin' and password='123'";</span></span><br><span class="line">            String sql = <span class="string">"SELECT * FROM user WHERE username='"</span> + username + <span class="string">"'AND password ='"</span> + password + <span class="string">"'"</span>;</span><br><span class="line">            System.out.println(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.3 获取sql执行对象</span></span><br><span class="line">            Statement statement = connection.createStatement();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.4 执行sql并返回结果</span></span><br><span class="line">            ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3.判断是否登录成功</span></span><br><span class="line">            <span class="keyword">if</span> (resultSet.next()) &#123;<span class="comment">// 成功</span></span><br><span class="line">                String loginUsername = resultSet.getString(<span class="string">"username"</span>);</span><br><span class="line">                req.getSession().setAttribute(<span class="string">"loginUsername"</span>, loginUsername);</span><br><span class="line">                resp.sendRedirect(req.getContextPath() + <span class="string">"/list.jsp"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;<span class="comment">// 失败</span></span><br><span class="line">                req.setAttribute(<span class="string">"error"</span>, <span class="string">"Username/Password Wrong"</span>);</span><br><span class="line">                req.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(req, resp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="# 总结"></a># 总结</h1><p><strong>## jdbc</strong></p><p><strong>### 概述</strong></p><p>- 通过java语言操作数据库</p><p><strong>### 本质</strong></p><p>- 面向接口编程思想</p><p>- sun公司通过操作关系型数据库的一套规范（接口），所有的数据库厂商都需要实现这套接口，对于开发者只需要学习这套接口的API就可以操作所有类型的关系型数据库，真正的执行者是实现类（jar包驱动）</p><p><strong>### 快速入门</strong></p><p>- 1.注册驱动</p><p>- 2.建立连接</p><p>- 3.编写sql</p><p>- 4.获取sql执行对象</p><p>- 5.执行sql并返回结果</p><p>- 6.处理结果</p><p>- 7.释放资源</p><p><strong>### API详解</strong></p><p>- DriverManager</p><p>​    - 1.注册驱动</p><p>​        - Class.forName()</p><p>​    - 2.建立连接</p><p>- Connection</p><p>​    - 1.获取sql执行对象</p><p>​        - Statement</p><p>​        - PreparedStatement</p><p>​    - 2.事务安全</p><p>- Statement</p><p>​    - 1.仅执行DML类型sql语句</p><p>​        - int executeUpdate(String sql)</p><p>​    - 2.仅执行DQL类型sql语句</p><p>​        - ResultSet executeQuery(String sql)</p><p>- ResultSet</p><p>​    - 1.指针下移</p><p>​        - boolean next()</p><p>​    - 2.获取数据</p><p>​        - T getXxx(String 列名)</p><p><strong>### crud练习</strong></p><p>- 新增</p><p>- 修改</p><p>- 删除</p><p>- 查询所有 </p><p><strong>### JdbcUtils</strong></p><p>- 版本一</p><p>- 版本二</p><p><strong>### 事务安全</strong></p><p>- 模拟转账</p><p><strong>## 案例：用户登录</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;JDBC基础&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（四十七）</title>
    <link href="http://yoursite.com/2020/05/05/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%B8%83%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/05/就业班学习笔记（四十七）/</id>
    <published>2020-05-04T18:07:02.000Z</published>
    <updated>2020-05-05T14:31:05.249Z</updated>
    
    <content type="html"><![CDATA[<ul><li>MySQL性能</li><li>MySQL索引</li></ul><a id="more"></a><h1 id="一-MySQL性能"><a href="#一-MySQL性能" class="headerlink" title="一.MySQL性能"></a>一.MySQL性能</h1><h4 id="1-1-分析-数据库查询效率低下"><a href="#1-1-分析-数据库查询效率低下" class="headerlink" title="1.1 分析-数据库查询效率低下"></a>1.1 分析-数据库查询效率低下</h4><p>随着项目运行的时间增加，数据量也就增加 了，这时会影响到我们数据库的查询性能</p><h4 id="1-2-分析-执行次数比较多的语句"><a href="#1-2-分析-执行次数比较多的语句" class="headerlink" title="1.2 分析-执行次数比较多的语句"></a>1.2 分析-执行次数比较多的语句</h4><ul><li><p>查询密集型 我们使用查询频率较高，8:2 左右<br>   我们就可以使用索引来进行优化</p></li><li><p>修改密集型 </p><p>   ES</p>   <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询累计插入和返回数据条数</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> <span class="keyword">status</span> <span class="keyword">like</span> <span class="string">'Innodb_rows%'</span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-查看-sql语句的执行效率"><a href="#1-3-查看-sql语句的执行效率" class="headerlink" title="1.3 查看-sql语句的执行效率"></a>1.3 查看-sql语句的执行效率</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> Day47_Index;</span><br><span class="line"><span class="keyword">use</span> Day47_Index;</span><br><span class="line"><span class="comment">-- 1. 准备表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">id</span>         <span class="built_in">INT</span>,</span><br><span class="line">    username   <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">    <span class="string">`password`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">    sex        <span class="built_in">VARCHAR</span>(<span class="number">6</span>),</span><br><span class="line">    email      <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 2. 创建存储过程，实现批量插入记录</span></span><br><span class="line">DELIMITER $$ <span class="comment">-- 声明存储过程的结束符号为$$</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> auto_insert()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> i <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">START</span> <span class="keyword">TRANSACTION</span>; <span class="comment">-- 开启事务</span></span><br><span class="line">    WHILE(i &lt;= 10000000)</span><br><span class="line">        <span class="keyword">DO</span></span><br><span class="line">            <span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span></span><br><span class="line">            <span class="keyword">VALUES</span> (i, <span class="keyword">CONCAT</span>(<span class="string">'jack'</span>, i), <span class="keyword">MD5</span>(i), <span class="string">'male'</span>, <span class="keyword">CONCAT</span>(<span class="string">'jack'</span>, i, <span class="string">'@itcast.cn'</span>));</span><br><span class="line">            <span class="keyword">SET</span> i = i + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line">    <span class="keyword">COMMIT</span>; <span class="comment">-- 提交</span></span><br><span class="line"><span class="keyword">END</span>$$ <span class="comment">-- 声明结束</span></span><br><span class="line">DELIMITER ; <span class="comment">-- 重新声明分号为结束符号</span></span><br><span class="line"><span class="comment">-- 3. 查看存储过程</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> auto_insert;</span><br><span class="line"><span class="comment">-- 4. 调用存储过程</span></span><br><span class="line"><span class="keyword">CALL</span> auto_insert();</span><br></pre></td></tr></table></figure><ul><li>慢查询日志</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看慢查询日志开启情况</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%slow_query_log%'</span>;</span><br><span class="line"><span class="comment">-- 查看慢查询时间配置</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%long_query_time%'</span>;</span><br></pre></td></tr></table></figure><ul><li>开启慢查询日志</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> slow_query_log = <span class="keyword">on</span>;</span><br></pre></td></tr></table></figure><ul><li><p>设置慢查询sql的时间阈值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 全局配置(下次生效...)</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> long_query_time=<span class="number">3</span>;</span><br><span class="line"><span class="comment">-- 临时(会话)配置(本次会话窗口生效) set session long_query_time=3;</span></span><br></pre></td></tr></table></figure></li><li><p>测试慢查询日志</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;swzxsyh-MBP-slow.log</span><br></pre></td></tr></table></figure><h1 id="二-MySQL索引"><a href="#二-MySQL索引" class="headerlink" title="二.MySQL索引"></a>二.MySQL索引</h1><h4 id="2-1-什么是索引"><a href="#2-1-什么是索引" class="headerlink" title="2.1 什么是索引"></a>2.1 什么是索引</h4><p>将数据进行排序整理的过程就称为索引。 我们根据索引去查，提高效率</p><h4 id="2-2-MySQL索引分类"><a href="#2-2-MySQL索引分类" class="headerlink" title="2.2 MySQL索引分类"></a>2.2 MySQL索引分类</h4><table><thead><tr><th>索引</th><th>作用</th></tr></thead><tbody><tr><td>主键(约束)索引</td><td>主键约束+提高查询效率</td></tr><tr><td>唯一(约束)索引</td><td>唯一约束+提高查询效率</td></tr><tr><td>普通索引</td><td>仅提高查询效率</td></tr><tr><td>组合(联合)索引</td><td>多个字段组成索引</td></tr><tr><td>全文索引</td><td>solr、es</td></tr><tr><td>hash索引</td><td>根据key-value 效率非常高</td></tr></tbody></table><h4 id="2-3-MySQL索引语法"><a href="#2-3-MySQL索引语法" class="headerlink" title="2.3 MySQL索引语法"></a>2.3 MySQL索引语法</h4><h5 id="2-3-1-创建索引"><a href="#2-3-1-创建索引" class="headerlink" title="2.3.1 创建索引"></a>2.3.1 创建索引</h5><ul><li><p>直接创建</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建普通索引</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名(字段);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建唯一索引</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名(字段);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建普通组合索引</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名(字段<span class="number">1</span>,字段<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建唯一组合索引</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名(字段<span class="number">1</span>,字段<span class="number">2</span>);</span><br><span class="line"> <span class="comment">-- 创建学生表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span>,</span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>), telephone <span class="built_in">VARCHAR</span>(<span class="number">11</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- name字段适合设置什么索引?</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> name_idx <span class="keyword">ON</span> student(<span class="string">`name`</span>);</span><br><span class="line"><span class="comment">-- telephone适合设置什么索引?</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> telephone_uni_idx <span class="keyword">ON</span> student(telephone);</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>修改表时指定</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加一个主键，这意味着索引值必须是唯一的，且不能为NULL</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> primary <span class="keyword">key</span>(字段); <span class="comment">--默认索引名:primary</span></span><br><span class="line"><span class="comment">-- 添加唯一索引(除了NULL外，NULL可能会出现多次)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">unique</span>(字段); <span class="comment">-- 默认索引名:字段名</span></span><br><span class="line"><span class="comment">-- 添加普通索引，索引值可以出现多次。</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">index</span>(字段); <span class="comment">-- 默认索引名:字段名</span></span><br><span class="line"><span class="comment">-- 指定id为主键索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>); <span class="comment">-- 指定name为普通索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">INDEX</span>(<span class="string">`name`</span>);</span><br><span class="line"><span class="comment">-- 指定telephone为唯一索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span>(telephone);</span><br></pre></td></tr></table></figure></li><li><p>创建表时指定【重点】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建教师表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> teacher(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, <span class="comment">-- 主键索引 `name` VARCHAR(32),</span></span><br><span class="line">telephone <span class="built_in">VARCHAR</span>(<span class="number">11</span>) <span class="keyword">UNIQUE</span>, <span class="comment">-- 唯一索引</span></span><br><span class="line">sex <span class="built_in">VARCHAR</span>(<span class="number">5</span>),</span><br><span class="line"> birthday <span class="built_in">DATE</span>,</span><br><span class="line"><span class="keyword">INDEX</span>(<span class="string">`name`</span>) <span class="comment">-- 普通索引 );</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="2-3-2-删除索引"><a href="#2-3-2-删除索引" class="headerlink" title="2.3.2 删除索引"></a>2.3.2 删除索引</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 直接删除</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名;</span><br><span class="line"><span class="comment">-- 修改表时删除 【掌握】</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">index</span> 索引名;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除name普通索引</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> name_idx <span class="keyword">ON</span> student;</span><br><span class="line"><span class="comment">-- 删除telephone唯一索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">DROP</span> <span class="keyword">INDEX</span> telephone_uni_idx;</span><br></pre></td></tr></table></figure><h4 id="2-4-索引效果演示"><a href="#2-4-索引效果演示" class="headerlink" title="2.4 索引效果演示"></a>2.4 索引效果演示</h4><ul><li>先来测试没有索引情况下查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.指定id查询</span></span><br><span class="line">day47_index&gt; select * from user where id = 8888888</span><br><span class="line">[2020-05-05 21:55:00] 1 row retrieved starting from 1 in 4 s 744 ms (execution: 4 s 727 ms, fetching: 17 ms)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.指定username精准查询</span></span><br><span class="line">day47_index&gt; select * from user where username = 'jack1234567'</span><br><span class="line">[2020-05-05 21:56:46] 1 row retrieved starting from 1 in 3 s 688 ms (execution: 3 s 673 ms, fetching: 15 ms)</span><br><span class="line"><span class="comment">-- 3.指定email模糊查询</span></span><br><span class="line">day47_index&gt; select * from user where email like 'jack1234567%'</span><br><span class="line">[2020-05-05 21:57:03] 1 row retrieved starting from 1 in 3 s 530 ms (execution: 3 s 515 ms, fetching: 15 ms)</span><br></pre></td></tr></table></figure><ul><li><p>给这三个字段添加索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 指定id为主键索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span> <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>); </span><br><span class="line"><span class="comment">-- 指定username为普通索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span> <span class="keyword">ADD</span> <span class="keyword">INDEX</span>(username); </span><br><span class="line"><span class="comment">-- 指定email为唯一索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span> <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span>(email);</span><br></pre></td></tr></table></figure><ul><li>再测试有索引情况下查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.指定id查询</span></span><br><span class="line">day47_index&gt; select * from user where id = 8888888</span><br><span class="line">[2020-05-05 22:00:32] 1 row retrieved starting from 1 in 21 ms (execution: 5 ms, fetching: 16 ms)</span><br><span class="line"><span class="comment">-- 2.指定username精准查询</span></span><br><span class="line">day47_index&gt; select * from user where username = 'jack1234567'</span><br><span class="line">[2020-05-05 22:00:32] 1 row retrieved starting from 1 in 88 ms (execution: 4 ms, fetching: 84 ms)</span><br><span class="line"><span class="comment">-- 3.指定email模糊查询</span></span><br><span class="line">day47_index&gt; select * from user where email like 'jack1234567%'</span><br><span class="line">[2020-05-05 22:00:33] 1 row retrieved starting from 1 in 110 ms (execution: 3 ms, fetching: 107 ms)</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-5-索引的优缺点"><a href="#2-5-索引的优缺点" class="headerlink" title="2.5 索引的优缺点"></a>2.5 索引的优缺点</h4><table><thead><tr><th>优点</th><th>减少磁盘IO，提高查询效率</th></tr></thead><tbody><tr><td><strong>缺点</strong></td><td>索引占用磁盘空间<br>我们在进行增删改时，索引的维护会增加成本，可能会降低服务器性能</td></tr></tbody></table><h4 id="2-6-索引创建原则"><a href="#2-6-索引创建原则" class="headerlink" title="2.6 索引创建原则"></a>2.6 索引创建原则</h4><ul><li>字段内容可识别度不能低于70%</li><li>经常使用where条件搜索的字段</li><li>经常使用表连接的字段(内连接、外连接)</li><li>经常排序的字段 order by</li></ul><p><strong>注意</strong>:索引本身会占用磁盘空间，不是所有的字段都适合增加索引</p><h4 id="2-7-常见索引失效情况"><a href="#2-7-常见索引失效情况" class="headerlink" title="2.7 常见索引失效情况"></a>2.7 常见索引失效情况</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.使用like模糊匹配，%通配符在最左侧使用时</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> email <span class="keyword">like</span> <span class="string">'%jack1234567%'</span>;</span><br><span class="line"><span class="comment">-- 2.尽量避免使用or，如果条件有一个没有索引，那么会进行全表扫描 </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">88</span> <span class="keyword">or</span> sex = <span class="string">'male'</span>;</span><br><span class="line"><span class="comment">-- 3.在索引列上进行计算</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span>+<span class="number">1</span> = <span class="number">88</span>;</span><br><span class="line"><span class="comment">-- 4.使用 !=、 not in、is not null时</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username != <span class="string">'jack12'</span>;</span><br></pre></td></tr></table></figure><h4 id="2-8-索引的数据结构"><a href="#2-8-索引的数据结构" class="headerlink" title="2.8 索引的数据结构"></a>2.8 索引的数据结构</h4><h5 id="2-8-1-概述"><a href="#2-8-1-概述" class="headerlink" title="2.8.1 概述"></a>2.8.1 概述</h5><p>我们知道索引是帮助MySQL高效获取排好序的数据结构。</p><p>在没有索引的情况下我们执行一条sql语句，那么是表进行全局遍历，磁盘寻址(注意逻辑上相邻的记录在磁盘上也 并不是一定物理相邻的)。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> col1=<span class="number">6</span>;</span><br></pre></td></tr></table></figure><p><img src="1566372154562.png" alt=""></p><p>为了加快的查找效率，可以维护一个右边所示的二叉查找树，每个节点分别包含索引键值和一个指向对应数据记录物 理地址的指针，这样就可以运用二叉查找快速获取到相应数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> col2=<span class="number">89</span>;</span><br></pre></td></tr></table></figure><h5 id="2-8-2-索引的数据结构"><a href="#2-8-2-索引的数据结构" class="headerlink" title="2.8.2 索引的数据结构"></a>2.8.2 索引的数据结构</h5><ul><li><p>二叉树:左边的子节点比父节点小，右边的子节点比父节点大</p><p><img src="1588649871508.png" alt=""></p></li><li><p>红黑树:平衡二叉树(左旋、右旋)</p><p><img src="1588650208409.png" alt=""></p></li><li><p>BTree:多路平衡搜索树</p><p><img src="1588650730396.png" alt=""></p></li><li><p>B+Tree:优化BTree(非叶子节点:索引+指针、叶子节点:索引+数据【地址】)</p><p><img src="1588651284679.png" alt=""></p></li><li><p>Hash:通过散列算法，不支持范围查询</p></li></ul><p><strong>数据结构学习网站</strong></p><p><a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a></p><h5 id="2-8-3-MySQL中的B-Tree"><a href="#2-8-3-MySQL中的B-Tree" class="headerlink" title="2.8.3 MySQL中的B+Tree"></a>2.8.3 MySQL中的B+Tree</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看mysql索引节点大小</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> <span class="keyword">status</span> <span class="keyword">like</span> <span class="string">'innodb_page_size'</span>;</span><br></pre></td></tr></table></figure><p><img src="1566372947007.png" alt=""></p><h4 id="2-9-数据库的存储引擎"><a href="#2-9-数据库的存储引擎" class="headerlink" title="2.9 数据库的存储引擎"></a>2.9 数据库的存储引擎</h4><p>MySQL存储引擎的不同，那么索引文件保存的方式也有所不同，常见的有二种存储引擎MyISAM和InnoDB。</p><h5 id="2-9-1-MyISAM-非聚集索引"><a href="#2-9-1-MyISAM-非聚集索引" class="headerlink" title="2.9.1 MyISAM(非聚集索引)"></a>2.9.1 MyISAM(非聚集索引)</h5><p>MySQL5.5版本之前默认存储引擎</p><blockquote><p>特点:不支持事务、不支持外键约束</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> day47_pro;</span><br><span class="line"><span class="keyword">USE</span> day47_pro;</span><br><span class="line"><span class="comment">-- 创建 myisam存储引擎表 CREATE TABLE tab_myisam(</span></span><br><span class="line">id INT,</span><br><span class="line">`name` VARCHAR(32)</span><br><span class="line">)ENGINE=MYISAM;</span><br></pre></td></tr></table></figure><p><img src="1588659294559.png" alt=""></p><h5 id="2-9-2-InnoDB-聚集索引"><a href="#2-9-2-InnoDB-聚集索引" class="headerlink" title="2.9.2 InnoDB(聚集索引)"></a>2.9.2 InnoDB(聚集索引)</h5><p>MySQL5.5版本之后默认存储引擎 </p><blockquote><p>特点:支持事务、支持外键约束</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建 innodb存储引擎表 CREATE TABLE tab_innodb(</span></span><br><span class="line">id INT,</span><br><span class="line">`name` VARCHAR(32)</span><br><span class="line">)ENGINE = INNODB;</span><br></pre></td></tr></table></figure><p><strong>innodb存储引擎必须要设置主键(整型)，且自增类型</strong></p><p><img src="1588659700008.png" alt=""></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h1><h2 id="MySQL性能"><a href="#MySQL性能" class="headerlink" title="MySQL性能"></a>MySQL性能</h2><h3 id="数据库类型"><a href="#数据库类型" class="headerlink" title="数据库类型"></a>数据库类型</h3><ul><li>查询密集型</li><li>修改密集型</li></ul><h3 id="查看数据库分类命令"><a href="#查看数据库分类命令" class="headerlink" title="查看数据库分类命令"></a>查看数据库分类命令</h3><ul><li>show global status like ‘’innodb_rows%;</li></ul><h3 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h3><ul><li>show variables like ‘%query%’;</li></ul><h3 id="插入千万级别记录"><a href="#插入千万级别记录" class="headerlink" title="插入千万级别记录"></a>插入千万级别记录</h3><ul><li>我的电脑3分钟左右</li></ul><h2 id="MySQL索引"><a href="#MySQL索引" class="headerlink" title="MySQL索引"></a>MySQL索引</h2><h3 id="索引-排好序的数据结构"><a href="#索引-排好序的数据结构" class="headerlink" title="索引=排好序的数据结构"></a>索引=排好序的数据结构</h3><h3 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h3><p>create table teacher(</p><p>   id int,</p><p>   name varchar(32),</p><p>   telephone varchar(11),</p><p>   primary key(id), – 索引名 primary</p><p>   index(name) , – 索引名 name</p><p>   unique(telephone) – 索引名 telephone</p><p>);</p><h3 id="索引的创建原则"><a href="#索引的创建原则" class="headerlink" title="索引的创建原则"></a>索引的创建原则</h3><ul><li><p>1)存储内容的可识别度70%</p></li><li><p>2)经常查询的字段，可以设置索引</p></li><li><p>3)经常多表连接的字段，可以设置索引</p><ul><li>主键（primary key）</li><li>外键（index）</li></ul></li><li><p>4)经常排序的字段，可以设置索引</p></li></ul><h3 id="索引失效问题"><a href="#索引失效问题" class="headerlink" title="索引失效问题"></a>索引失效问题</h3><ul><li>1）like使用左模糊查询</li><li>2）or拼接</li><li>3）索引列计算</li><li>4）not in 、 != 、  is not null</li></ul><h3 id="索引的数据结构"><a href="#索引的数据结构" class="headerlink" title="索引的数据结构"></a>索引的数据结构</h3><ul><li><p>二叉树</p><ul><li>左边子节点比父节点小，右边的子节点比父节点大</li></ul></li><li><p>红黑树</p><ul><li><p>平衡二叉树</p><ul><li>左旋和右旋</li></ul></li></ul></li><li><p>BTree</p><ul><li><p>多路平衡搜索树</p><ul><li><p>有效控制树的高度</p><ul><li><p>每一个节点可以设置多个元素</p><ul><li>索引</li><li>指针</li><li>数据</li></ul></li></ul></li></ul></li></ul></li><li><p>B+Tree</p><ul><li><p>MySQL使用数据结构</p><ul><li>非叶子节点只存储索引和指针，叶子节点存储索引和数据（从左到右，从小达到依次排序，底层是一个双向链表）</li></ul></li></ul></li><li><p>Hash散列</p></li></ul><h3 id="数据库存储引擎"><a href="#数据库存储引擎" class="headerlink" title="数据库存储引擎"></a>数据库存储引擎</h3><ul><li><p>存储引擎</p><ul><li><p>MyIsam</p><ul><li><p>非聚集索引</p><ul><li>特点：不支持事务和外键约束</li></ul></li></ul></li><li><p>Innodb</p><ul><li><p>聚集索引</p><ul><li>特点：支持事务和外键约束</li></ul></li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;MySQL性能&lt;/li&gt;
&lt;li&gt;MySQL索引&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（四十六）</title>
    <link href="http://yoursite.com/2020/05/04/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E5%85%AD%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/04/就业班学习笔记（四十六）/</id>
    <published>2020-05-04T01:09:15.000Z</published>
    <updated>2020-05-04T17:55:58.644Z</updated>
    
    <content type="html"><![CDATA[<ul><li>MySQL函数</li><li>MySQL综合练习</li><li>事务安全TCL<a id="more"></a></li></ul><h1 id="一-MySQL函数"><a href="#一-MySQL函数" class="headerlink" title="一.MySQL函数"></a>一.MySQL函数</h1><h4 id="1-1-字符串函数"><a href="#1-1-字符串函数" class="headerlink" title="1.1 字符串函数"></a>1.1 字符串函数</h4><table><thead><tr><th>函数</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>CONCAT(s1,s2…sn)</td><td>字符串 s1,s2 等多个字符串合并为一个字符串</td><td>select concat(‘A’,’-‘,’B’);</td></tr><tr><td>CHAR_LENGTH(str)</td><td>返回字符串 str 的字符数</td><td>select char_length(‘Hello，World’);</td></tr><tr><td>LENGTH(str)</td><td>返回字符串 s 的字节数</td><td>select length(‘你好,World’);</td></tr><tr><td>UCASE(s) | UPPER(s)</td><td>将字符串转换为大写</td><td>select ucase(‘oracle’);</td></tr><tr><td>LCASE(s) | LOWER(s)</td><td>将字符串转换为小写</td><td>select lcase(‘MySQL’);</td></tr><tr><td>LOCATE(s1,s)</td><td>从字符串 s 中获取 s1 的开始位置</td><td>select locate(‘wo’,’world’);</td></tr><tr><td>TRIM(str) | LTRIM(str) | RTRIM(str)</td><td>字符串去空格</td><td>select trim(‘ 莘莘学子 ‘);</td></tr><tr><td>REPLACE(s,s1,s2)</td><td>将字符串 s2 替代字符串 s 中的字符串 s1</td><td>select replace(‘abc’,’b’,’x’);</td></tr><tr><td>SUBSTR(s, start, length)</td><td>从字符串 s 的 start 位置截取长度为 length 的子字符串</td><td>select substr(‘itcast’,’2’,’3’);</td></tr><tr><td>STRCMP(str1,str2)</td><td>比较字符串大小,左大于右时返回1，左等于右时返回0，，左小于于右时返回-1，</td><td>select strcmp(‘a’,’b’);</td></tr></tbody></table><ul><li>练习</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.将所有员工的昵称改为大写</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">UCASE</span>(nickname) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 2.显示所有员工的姓氏，截取</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">SUBSTR</span>(ename,<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 3.显示所有员工姓名字符长度</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CHAR_LENGTH</span>(ename) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 4.显示所有员工姓名字节长度 SELECT LENGTH(ename) FROM emp;</span></span><br><span class="line"><span class="comment">-- 5.将所有姓李的员工，姓氏替换为li</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">REPLACE</span>(ename,<span class="string">'李'</span>,<span class="string">'li'</span>) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 6.将所有员工的姓名和昵称拼接在一起</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(ename,nickname) <span class="keyword">FROM</span> emp;</span><br></pre></td></tr></table></figure><h4 id="1-2-日期函数"><a href="#1-2-日期函数" class="headerlink" title="1.2 日期函数"></a>1.2 日期函数</h4><table><thead><tr><th>函数</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>NOW() | CURDATE() | CURTIME()</td><td>获取系统当前日期时间、日期、时间</td><td>select now();</td></tr><tr><td>YEAR(DATE) | MONTH(DATE) | DAY(DATE)</td><td>从日期中选择出年、月、日</td><td>select year(now());</td></tr><tr><td>LAST_DAY(DATE)</td><td>返回月份的最后一天</td><td>select last_day(now());</td></tr><tr><td>ADDDATE(DATE,n) | SUBDATE(DATE,n)</td><td>计算起始日期 DATE 加(减) n 天的日期</td><td>select subdate(now(),10);</td></tr><tr><td>QUARTER(DATE)</td><td>返回日期 DATE 是第几季节，返回 1 到 4</td><td>select quarter(now());</td></tr><tr><td>DATEDIFF(d1,d2)</td><td>计算日期 d1-&gt;d2 之间相隔的天数</td><td>select datediff(now(),’1999-1-1’);</td></tr><tr><td>DATE_FORMAT(d,f)</td><td>按表达式 f的要求显示日期 d</td><td>select date_format(now(),’%Y-%m-%d’);</td></tr></tbody></table><ul><li>练习</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.统计每个员工入职的天数</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 2.统计每个员工的工龄</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate)/<span class="number">365</span> <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 3.查询2011年入职的员工</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">YEAR</span>(joindate) = <span class="string">'2011'</span>;</span><br><span class="line"><span class="comment">-- 4.统计入职10年以上的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate)/<span class="number">365</span> &gt;<span class="number">10</span>;</span><br></pre></td></tr></table></figure><h4 id="1-3-数字函数"><a href="#1-3-数字函数" class="headerlink" title="1.3 数字函数"></a>1.3 数字函数</h4><table><thead><tr><th>函数</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>ABS(x)</td><td>返回 x 的绝对值</td><td>select abs(-10);</td></tr><tr><td>CEIL(x)|FLOOR(x)</td><td>向上(下)取整</td><td>select ceil(1.5);</td></tr><tr><td>MOD(x,y)</td><td>返回x mod y的结果，取余</td><td>select mod(5,4);</td></tr><tr><td>RAND()</td><td>返回 0 到 1 的随机数</td><td>select rand();</td></tr><tr><td>ROUND(x)</td><td>四舍五入</td><td>select round(1.2345);</td></tr><tr><td>TRUNCATE(x,y)</td><td>返回数值 x 保留到小数点后 y 位的值</td><td>select truncate(5633.123324,2);</td></tr></tbody></table><ul><li>练习</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.统计每个员工的工龄，超过半年的算一年</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">ROUND</span>( <span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate)/<span class="number">365</span>) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 2.统计每个部门的平均薪资,保留2位小数</span></span><br><span class="line"><span class="keyword">SELECT</span> dept_id,<span class="keyword">TRUNCATE</span>( <span class="keyword">AVG</span>(salary),<span class="number">2</span> )<span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> dept_id;</span><br><span class="line"><span class="comment">-- 3.统计每个部门的平均薪资,小数向上取整</span></span><br><span class="line"><span class="keyword">SELECT</span> dept_id,<span class="keyword">CEIL</span>( <span class="keyword">AVG</span>(salary) )<span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> dept_id;</span><br><span class="line"><span class="comment">-- 4.统计每个部门的平均薪资,小数向下取整</span></span><br><span class="line"><span class="keyword">SELECT</span> dept_id,<span class="keyword">FLOOR</span>( <span class="keyword">AVG</span>(salary) )<span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> dept_id;</span><br></pre></td></tr></table></figure><h4 id="1-4-高级函数"><a href="#1-4-高级函数" class="headerlink" title="1.4 高级函数"></a>1.4 高级函数</h4><h5 id="1-4-1-CASE表达式"><a href="#1-4-1-CASE表达式" class="headerlink" title="1.4.1 CASE表达式"></a>1.4.1 CASE表达式</h5><ul><li><p>相当于java中swtich语句</p></li><li><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">CASE</span> [字段,值] <span class="keyword">WHEN</span> 判断条件<span class="number">1</span></span><br><span class="line"><span class="keyword">THEN</span> 希望的到的值<span class="number">1</span> <span class="keyword">WHEN</span> 判断条件<span class="number">2</span></span><br><span class="line"><span class="keyword">THEN</span> 希望的到的值<span class="number">2</span></span><br><span class="line"><span class="keyword">ELSE</span> 前面条件都没有满足情况下得到的值</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">table_name;</span><br></pre></td></tr></table></figure></li><li><p>练习</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询每个员工的工资等级并排序</span></span><br><span class="line"><span class="comment">-- 工资等级在1显示为 '努力赚钱'</span></span><br><span class="line"><span class="comment">-- 工资等级在2显示为 '小康生活'</span></span><br><span class="line"><span class="comment">-- 工资等级在3显示为 '可以娶媳妇'</span></span><br><span class="line"><span class="comment">-- 工资等级在4显示为 '可以买车'</span></span><br><span class="line"><span class="comment">-- 工资等级在5显示为 '可以买房'</span></span><br><span class="line"><span class="comment">-- 工资等级不在以上列表中显示为 '土豪'</span></span><br><span class="line"><span class="comment">-- 1.确定几张表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg;</span><br><span class="line"><span class="comment">-- 2.确定连接条件</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span>;</span><br><span class="line"><span class="comment">-- 3.确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> e.ename,e.<span class="string">`salary`</span>,sg.<span class="string">`grade`</span> <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span>;</span><br><span class="line"><span class="comment">-- 4.确定业务条件</span></span><br><span class="line"><span class="keyword">SELECT</span> e.ename,e.<span class="string">`salary`</span>,</span><br><span class="line"><span class="keyword">CASE</span> sg.<span class="string">`grade`</span> <span class="keyword">WHEN</span> <span class="number">1</span> <span class="keyword">THEN</span> <span class="keyword">WHEN</span> <span class="number">2</span> <span class="keyword">THEN</span> <span class="keyword">WHEN</span> <span class="number">3</span> <span class="keyword">THEN</span> <span class="keyword">WHEN</span> <span class="number">4</span> <span class="keyword">THEN</span> <span class="keyword">WHEN</span> <span class="number">5</span> <span class="keyword">THEN</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">'土豪'</span> <span class="keyword">END</span> <span class="keyword">AS</span> <span class="string">'生活状态'</span></span><br><span class="line"><span class="string">'努力赚钱'</span> <span class="string">'小康生活'</span> <span class="string">'可以娶媳妇'</span> <span class="string">'可以买车'</span> <span class="string">'可以买房'</span></span><br><span class="line"><span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> sg.<span class="string">`grade`</span> <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-4-2-IF表达式"><a href="#1-4-2-IF表达式" class="headerlink" title="1.4.2 IF表达式"></a>1.4.2 IF表达式</h5><ul><li><p>相当于java中三元运算符</p></li><li><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT IF(1 &gt; 0,&#39;真&#39;,&#39;假&#39;) from 表名;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>练习</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 工资+奖金大于20000的员工 显示家有娇妻，否则显示单身狗</span><br><span class="line">SELECT ename,IF(salary+IFNULL(bonus,0) &gt; 20000,&#39;家有娇妻&#39;,&#39;单身狗&#39;) AS 家里有啥 FROM emp;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-MySQL综合练习"><a href="#二-MySQL综合练习" class="headerlink" title="二.MySQL综合练习"></a>二.MySQL综合练习</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.计算员工的日薪(按30天)，保留二位小数</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">TRUNCATE</span>(salary/<span class="number">30</span>,<span class="number">2</span>) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 2.计算出员工的年薪(12月)，并且以年薪排序 降序</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,(salary + <span class="keyword">IFNULL</span>(bonus,<span class="number">0</span>)) * <span class="number">12</span> <span class="keyword">AS</span> 年薪 <span class="keyword">FROM</span> emp <span class="keyword">ORDER</span> <span class="keyword">BY</span> 年薪 <span class="keyword">DESC</span>;</span><br><span class="line"><span class="comment">-- 3.找出奖金少于5000或者没有获得奖金的员工的信息 </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">IFNULL</span>(bonus,<span class="number">0</span>) &lt; <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.返回员工职务名称及其从事此职务的最低工资 </span></span><br><span class="line"><span class="comment">-- 4.1 确定几张表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j; </span><br><span class="line"><span class="comment">-- 4.2 确定连接条件</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span>;</span><br><span class="line"><span class="comment">-- 4.3 确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> j.<span class="string">`jname`</span> <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span>;</span><br><span class="line"><span class="comment">-- 4.4 确定业务条件(分组+最低工资)</span></span><br><span class="line"><span class="keyword">SELECT</span> j.<span class="string">`jname`</span>,<span class="keyword">MIN</span>(e.<span class="string">`salary`</span>) <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> j.<span class="string">`jname`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5.返回工龄超过10年，且2月份入职的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate)/<span class="number">365</span> &gt; <span class="number">10</span> <span class="keyword">AND</span> <span class="keyword">MONTH</span>(joindate) = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 6.返回与 林冲 同一年入职的员工</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(joindate) <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> ename = <span class="string">'林冲'</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">YEAR</span>(joindate) = (<span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(joindate) <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> ename = <span class="string">'林 冲'</span>);</span><br><span class="line"><span class="comment">-- 7.返回每个员工的名称及其上级领导的名称(自关联)</span></span><br><span class="line"><span class="keyword">SELECT</span> a.<span class="string">`ename`</span>,b.<span class="string">`ename`</span> <span class="keyword">FROM</span> emp a <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> emp b <span class="keyword">ON</span> a.<span class="string">`mgr`</span> = b.<span class="string">`id`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 8.返回工资为二等级(工资等级表)的职员名字(员工表)、部门名称(部门表) </span></span><br><span class="line"><span class="comment">-- 8.1 确定几张表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg; </span><br><span class="line"><span class="comment">-- 8.2 确定连接条件</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.<span class="string">`dept_id`</span> = d.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span>;</span><br><span class="line"><span class="comment">-- 8.3 确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> sg.<span class="string">`grade`</span>,e.<span class="string">`ename`</span>,d.<span class="string">`dname`</span> <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.<span class="string">`dept_id`</span> = d.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span>;</span><br><span class="line"><span class="comment">-- 8.4 确定业务条件</span></span><br><span class="line"><span class="keyword">SELECT</span> sg.<span class="string">`grade`</span>,e.<span class="string">`ename`</span>,d.<span class="string">`dname`</span> <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.<span class="string">`dept_id`</span> = d.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span> <span class="keyword">WHERE</span> sg.<span class="string">`grade`</span> = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 9.涨工资:董事长2000 经理1500 其他800</span></span><br><span class="line"><span class="comment">-- 9.1</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="comment">-- 9.2</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">确定几张表和连接条件</span><br><span class="line">* <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span>; 显示字段(case表达式)</span><br><span class="line">e.`ename`,j.`jname`,e.`salary` AS 涨前,</span><br><span class="line">CASE j.`jname`</span><br><span class="line">WHEN '董事长' THEN e.salary + 2000 WHEN '经理' THEN e.salary + 1500 ELSE e.salary + 800</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> 涨后</span><br><span class="line"><span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span>;</span><br></pre></td></tr></table></figure><h1 id="三-事务安全-TCL"><a href="#三-事务安全-TCL" class="headerlink" title="三.事务安全 TCL"></a>三.事务安全 TCL</h1><h4 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h4><p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。 </p><ul><li><p>应用场景:用户转账</p></li><li><p>准备数据</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> day46_pro;</span><br><span class="line"><span class="comment">-- 使用库</span></span><br><span class="line"><span class="keyword">use</span> day46_pro;</span><br><span class="line"><span class="comment">-- 创建数据表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">account</span> ( <span class="comment">-- 账户表</span></span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">money <span class="keyword">DOUBLE</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">account</span> (<span class="string">`name`</span>, money) <span class="keyword">VALUES</span> (<span class="string">'蝴蝶姐'</span>, <span class="number">1000</span>), (<span class="string">'罗志祥'</span>, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><ul><li>模拟转账</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 罗志祥扣钱(转出)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 机器故障了</span></span><br><span class="line"><span class="comment">-- 蝴蝶姐加强(转入)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money + <span class="number">100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h4 id="3-2-操作事务"><a href="#3-2-操作事务" class="headerlink" title="3.2 操作事务"></a>3.2 操作事务</h4><h5 id="3-2-1-手动提交事务"><a href="#3-2-1-手动提交事务" class="headerlink" title="3.2.1 手动提交事务"></a>3.2.1 手动提交事务</h5><ol><li><p>开启事务 begin</p></li><li><p>提交事务 commit</p></li><li><p>回滚事务 rollback</p></li></ol><ul><li>转账成功</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 开启事务 begin;</span></span><br><span class="line"><span class="comment">-- 2. 罗志祥扣钱</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 3. 蝴蝶姐加钱</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money + <span class="number">100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 4. 提交事务 </span></span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure><ul><li>转账失败</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.开启事务 begin;</span></span><br><span class="line"><span class="comment">-- 2.罗志祥扣钱</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 3.机器故障</span></span><br><span class="line"><span class="comment">-- 4.回滚事务 </span></span><br><span class="line"><span class="keyword">rollback</span>;</span><br></pre></td></tr></table></figure><h5 id="3-2-2-自动提交事务"><a href="#3-2-2-自动提交事务" class="headerlink" title="3.2.2 自动提交事务"></a>3.2.2 自动提交事务</h5><ul><li><p>默认情况下，在MySQL中每一条DML(增删改)语句，就是一个独立的事务 </p></li><li><p>查看MySQL是否开启自动提交</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'autocommit'</span>;</span><br></pre></td></tr></table></figure></li><li><p>临时关闭自动提交(手动)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> autocommit=<span class="keyword">off</span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-3-事务工作原理"><a href="#3-3-事务工作原理" class="headerlink" title="3.3 事务工作原理"></a>3.3 事务工作原理</h4><ul><li>注意:</li></ul><blockquote><p>在同一个事务中，出现bug(异常)，必须执行rollback命令，不然会影响同一个事务中下一次提交</p></blockquote><h4 id="3-4-保存-回滚-点"><a href="#3-4-保存-回滚-点" class="headerlink" title="3.4 保存(回滚)点"></a>3.4 保存(回滚)点</h4><p>当事务开启后，一部分sql执行成功，添加一个保存点，后续操作报错了，回滚到保存点，保证之前的操作可以成功提交</p><table><thead><tr><th>设置保存点</th><th>savepoint 保存点名;</th></tr></thead><tbody><tr><td><strong>回滚到保存点</strong></td><td><strong>rollback to 保存点名;</strong></td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.开启事务 begin;</span></span><br><span class="line"><span class="comment">-- 2.罗志祥扣钱一次(凤姐)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 3.罗志祥扣钱二次(芙蓉姐姐)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 4.设置一个保存点 savepoint ol;</span></span><br><span class="line"><span class="comment">-- 5.罗志祥扣钱三次(石榴姐)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 6.机器故障</span></span><br><span class="line"><span class="comment">-- 7.回滚点保存点 rollback to ol;</span></span><br><span class="line"><span class="comment">-- 8.提交事务 commit;</span></span><br></pre></td></tr></table></figure><h4 id="3-5-事务特性-ACID"><a href="#3-5-事务特性-ACID" class="headerlink" title="3.5 事务特性 ACID"></a>3.5 事务特性 ACID</h4><ol><li><p>原子性 A atomicity</p><p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。</p></li><li><p>一致性 C consistency </p><p>事务在执行前后，保证数据的一致性</p></li><li><p>隔离性 I isolation </p><p>多个事务之间，相互独立，互不干扰….</p></li><li><p>持久性 D durability </p><p>事务一旦成功提交，保存到磁盘文件，不可逆….</p></li></ol><h4 id="3-6-事务隔离性"><a href="#3-6-事务隔离性" class="headerlink" title="3.6 事务隔离性"></a>3.6 事务隔离性</h4><p>多个事务之间隔离的，相互独立的。但是如果多个事务操作同一批数据，则会引发一些问题，设置不同的隔离级别就</p><p>可以解决这些问题。</p><ul><li><p>脏读【必须要避免】 </p><p>一个事务中，读取到另一个事务，未提交的数据</p></li><li><p>不可重复读 </p><p>一个事务中，二次读取的内容不一致，另外一个事务做了update操作</p></li><li><p>幻读<br> 一个事务中，二次读取的数量不一致，另外一个事务做了insert、delete操作</p></li></ul><h5 id="3-6-1-MySQL数据库隔离级别"><a href="#3-6-1-MySQL数据库隔离级别" class="headerlink" title="3.6.1 MySQL数据库隔离级别"></a>3.6.1 MySQL数据库隔离级别</h5><table><thead><tr><th>级别</th><th>名字</th><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th><th>数据库默认隔离级别</th></tr></thead><tbody><tr><td>1</td><td>读未提交</td><td>read uncommitted</td><td>是</td><td>是</td><td>是</td><td></td></tr><tr><td>2</td><td>读已提交</td><td>read committed</td><td>否</td><td>是</td><td>是</td><td>Oracle和SQL Server</td></tr><tr><td>3</td><td>可重复读</td><td>repeatable read</td><td>否</td><td>否</td><td>是</td><td>MySQL</td></tr><tr><td>4</td><td>串行化</td><td>serializable</td><td>否</td><td>否</td><td>否</td><td></td></tr></tbody></table><p>性能角度:1&gt;2&gt;3&gt;4 </p><p>安全角度:4&gt;3&gt;2&gt;1 </p><p>综合考虑:2 or 3</p><h5 id="3-6-2-演示隔离级别产生的问题"><a href="#3-6-2-演示隔离级别产生的问题" class="headerlink" title="3.6.2 演示隔离级别产生的问题"></a>3.6.2 演示隔离级别产生的问题</h5><table><thead><tr><th>级别</th><th>代码</th></tr></thead><tbody><tr><td>查看当前数据库隔离级别</td><td>show variables like ‘%isolation%’;</td></tr><tr><td>临时修改隔离级别</td><td>set session transaction isolation level 级别字符串;</td></tr></tbody></table><ol><li>演示脏读<br> 设置数据库隔离级别 read uncommitted;</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">read</span> uncommitted;</span><br></pre></td></tr></table></figure><ol start="2"><li>解决脏读问题(引出:不可重复读问题) 设置数据库隔离级别 read committed;</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">read</span> committed;</span><br></pre></td></tr></table></figure><ol start="3"><li>解决不可重复读问题(出现幻读问题) 设置数据库隔离级别 repeatable read;</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> repeatable <span class="keyword">read</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>解决幻读问题<br> 设置数据库隔离级别 serializable;</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">serializable</span>;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="一-MySQL函数-1"><a href="#一-MySQL函数-1" class="headerlink" title="一 MySQL函数"></a>一 MySQL函数</h2><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ul><li><p>concat()</p><ul><li>拼接</li></ul></li><li><p>char_length()</p><ul><li>字符长度</li></ul></li><li><p>trim()</p><ul><li>去掉前后空格</li></ul></li><li><p>replace()</p><ul><li>替换</li></ul></li><li><p>substr()</p><ul><li>截取</li></ul></li></ul><h3 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h3><ul><li><p>now()、curdate()、curtime()</p></li><li><p>year()、month()、day()</p></li><li><p>adddate()、subdate()</p></li><li><p>datediff()</p><ul><li>日期间之间的计算</li></ul></li></ul><h3 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h3><ul><li><p>ceil()、floor()</p><ul><li>向上向下取整</li></ul></li><li><p>rand()</p><ul><li>随机数</li></ul></li><li><p>round()</p><ul><li>四舍五入</li></ul></li><li><p>truncate()</p><ul><li>保留指定小数位</li></ul></li></ul><h3 id="高级函数"><a href="#高级函数" class="headerlink" title="高级函数"></a>高级函数</h3><ul><li><p>case表达式</p><ul><li>相当于java中swtich</li></ul></li><li><p>if表达式</p><ul><li>相当于java中三元运算符</li></ul></li></ul><h2 id="二-MySQL综合练习-1"><a href="#二-MySQL综合练习-1" class="headerlink" title="二 MySQL综合练习"></a>二 MySQL综合练习</h2><h3 id="课下必须写二遍"><a href="#课下必须写二遍" class="headerlink" title="课下必须写二遍"></a>课下必须写二遍</h3><h2 id="三-事务安全-TCL-1"><a href="#三-事务安全-TCL-1" class="headerlink" title="三 事务安全 TCL"></a>三 事务安全 TCL</h2><h3 id="什么是事务："><a href="#什么是事务：" class="headerlink" title="什么是事务："></a>什么是事务：</h3><ul><li>是指的是多个步骤的一组业务操作，要么都成功，要么都失败</li></ul><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><ul><li><p>手动提交</p><ul><li>begin</li><li>commit</li><li>rollback</li></ul></li><li><p>自动提交</p><ul><li><p>默认</p><ul><li>我们使用JDBC时，手动关闭自动提交事务</li></ul></li></ul></li></ul><h3 id="事务原理"><a href="#事务原理" class="headerlink" title="事务原理"></a>事务原理</h3><ul><li>临时日志文件</li></ul><h3 id="保存点"><a href="#保存点" class="headerlink" title="保存点"></a>保存点</h3><ul><li><p>设置保存点</p><ul><li>savepoint 保存点名</li></ul></li><li><p>回滚保存点</p><ul><li>rollback to 保存点名</li></ul></li></ul><h3 id="事务特性"><a href="#事务特性" class="headerlink" title="事务特性"></a>事务特性</h3><ul><li><p>A</p><ul><li>原子性</li></ul></li><li><p>C</p><ul><li>一致性</li></ul></li><li><p>I</p><ul><li>隔离性</li></ul></li><li><p>D</p><ul><li>持久性</li></ul></li></ul><h3 id="隔离性会出现问题"><a href="#隔离性会出现问题" class="headerlink" title="隔离性会出现问题"></a>隔离性会出现问题</h3><ul><li>脏读</li><li>不可重复读</li><li>幻读（虚读）</li></ul><h3 id="数据库隔离级别"><a href="#数据库隔离级别" class="headerlink" title="数据库隔离级别"></a>数据库隔离级别</h3><ul><li><p>读未提交</p></li><li><p>读已提交</p><ul><li>oracle 和 sqlServer 默认</li></ul></li><li><p>可重复读</p><ul><li>MySQL 默认</li></ul></li><li><p>串行化</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;MySQL函数&lt;/li&gt;
&lt;li&gt;MySQL综合练习&lt;/li&gt;
&lt;li&gt;事务安全TCL
    
    </summary>
    
    
  </entry>
  
</feed>
