<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Swzxsyh</title>
  
  <subtitle>--学习笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-18T01:18:37.591Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>就业班学习笔记（五十七）</title>
    <link href="http://yoursite.com/2020/05/18/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B8%83%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/18/就业班学习笔记（五十七）/</id>
    <published>2020-05-18T01:12:02.000Z</published>
    <updated>2020-05-18T01:18:37.591Z</updated>
    
    <content type="html"><![CDATA[<ul><li>用户中心</li><li>面向接口编程和工厂模式</li><li>收货地址</li><li>导航条</li></ul><a id="more"></a><h1 id="一-个人信息回显"><a href="#一-个人信息回显" class="headerlink" title="一.个人信息回显"></a>一.个人信息回显</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><h1 id="二-个人信息修改"><a href="#二-个人信息修改" class="headerlink" title="二.个人信息修改"></a>二.个人信息修改</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><h4 id="2-3-文件上传"><a href="#2-3-文件上传" class="headerlink" title="2.3 文件上传"></a>2.3 文件上传</h4><h1 id="三-面向接口编程"><a href="#三-面向接口编程" class="headerlink" title="三.面向接口编程"></a>三.面向接口编程</h1><h4 id="3-1-使用传统开发遇到的问题"><a href="#3-1-使用传统开发遇到的问题" class="headerlink" title="3.1 使用传统开发遇到的问题"></a>3.1 使用传统开发遇到的问题</h4><h4 id="3-2-面向接口编程解决的问题"><a href="#3-2-面向接口编程解决的问题" class="headerlink" title="3.2 面向接口编程解决的问题"></a>3.2 面向接口编程解决的问题</h4><h1 id="四-对象管理"><a href="#四-对象管理" class="headerlink" title="四.对象管理"></a>四.对象管理</h1><h4 id="4-1-工厂模式"><a href="#4-1-工厂模式" class="headerlink" title="4.1 工厂模式"></a>4.1 工厂模式</h4><h4 id="4-2-工厂实现"><a href="#4-2-工厂实现" class="headerlink" title="4.2 工厂实现"></a>4.2 工厂实现</h4><h1 id="五-查询收货人地址列表"><a href="#五-查询收货人地址列表" class="headerlink" title="五.查询收货人地址列表"></a>五.查询收货人地址列表</h1><h4 id="5-1-需求分析"><a href="#5-1-需求分析" class="headerlink" title="5.1 需求分析"></a>5.1 需求分析</h4><h4 id="5-2-代码实现"><a href="#5-2-代码实现" class="headerlink" title="5.2 代码实现"></a>5.2 代码实现</h4><h1 id="六-添加收货人地址"><a href="#六-添加收货人地址" class="headerlink" title="六.添加收货人地址"></a>六.添加收货人地址</h1><h4 id="6-1-需求分析"><a href="#6-1-需求分析" class="headerlink" title="6.1 需求分析"></a>6.1 需求分析</h4><h4 id="6-2-代码实现"><a href="#6-2-代码实现" class="headerlink" title="6.2 代码实现"></a>6.2 代码实现</h4><h1 id="七-导航分类"><a href="#七-导航分类" class="headerlink" title="七.导航分类"></a>七.导航分类</h1><h4 id="7-1-需求分析"><a href="#7-1-需求分析" class="headerlink" title="7.1 需求分析"></a>7.1 需求分析</h4><h4 id="7-1-代码实现"><a href="#7-1-代码实现" class="headerlink" title="7.1 代码实现"></a>7.1 代码实现</h4>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;用户中心&lt;/li&gt;
&lt;li&gt;面向接口编程和工厂模式&lt;/li&gt;
&lt;li&gt;收货地址&lt;/li&gt;
&lt;li&gt;导航条&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十六）</title>
    <link href="http://yoursite.com/2020/05/17/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E5%85%AD%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/17/就业班学习笔记（五十六）/</id>
    <published>2020-05-17T01:03:54.000Z</published>
    <updated>2020-05-17T16:45:19.768Z</updated>
    
    <content type="html"><![CDATA[<ul><li>密码登录</li><li>短信登录</li><li>用户退出</li><li>SVN多人协作开发文本控制工具</li></ul><a id="more"></a><h1 id="一-用户名密码登录"><a href="#一-用户名密码登录" class="headerlink" title="一.用户名密码登录"></a>一.用户名密码登录</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><p><img src="image-20200517092917290.png" alt=""></p><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"button"</span> id=<span class="string">"pwdLogin"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary"</span> value=<span class="string">"登录"</span>/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">//给按钮绑定点击事件</span></span><br><span class="line">  $(<span class="string">'#pwdLogin'</span>).click(function () &#123;</span><br><span class="line">    <span class="comment">//使用表单序列化函数(name=value&amp;name=value)</span></span><br><span class="line">    let data = $(<span class="string">'#pwdLoginForm'</span>).serialize();</span><br><span class="line">    <span class="comment">//发送ajax</span></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      <span class="comment">// 返回的是resultInfo对象，判断</span></span><br><span class="line">      <span class="keyword">if</span> (resp.success) &#123;</span><br><span class="line">        <span class="comment">// 成功，刷新页面</span></span><br><span class="line">        location.reload();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 失败，友情提示</span></span><br><span class="line">        $(<span class="string">'pwdLoginSpan'</span>).html(resp.message);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ajax密码登录</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">pwdLogin</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//接收请求参数</span></span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line">    <span class="comment">//封装user实体</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">    <span class="comment">//调用service登录，返回resultInfo</span></span><br><span class="line">    ResultInfo resultInfo = userService.pwdLogin(param);</span><br><span class="line">    <span class="comment">//如果登录成功，将user写入session中</span></span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      <span class="comment">//resultInfo.getData() 获取service返回的user对象</span></span><br><span class="line">      req.getSession().setAttribute(<span class="string">"currentUser"</span>, resultInfo.getData());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将resultInfo转为Json响应到客户端</span></span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ResultInfo <span class="title">pwdLogin</span><span class="params">(User param)</span> </span>&#123;</span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//根据用户名查询并校验</span></span><br><span class="line">  User currentUser = userDao.findByUsername(param.getUsername());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Doesn't Exist"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//校验密码</span></span><br><span class="line">  <span class="comment">//将用户输入的密码进行加密</span></span><br><span class="line">  String md5 = SecureUtil.md5(param.getPassword());</span><br><span class="line">  <span class="comment">//对比数据库</span></span><br><span class="line">  <span class="keyword">if</span> (!currentUser.getPassword().equals(md5)) &#123;</span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Password not correct"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//登录成功</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>,<span class="string">"Login Success"</span>,currentUser);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--广告--%&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"top_banner"</span>&gt;</span><br><span class="line">  &lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/images/top_banner.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;%--右侧按钮--%&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"shortcut"</span>&gt;</span><br><span class="line">  &lt;!-- 未登录状态 --&gt;</span><br><span class="line">  &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;empty currentUser&#125;"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"login_out"</span>&gt;</span><br><span class="line">      &lt;a id="loginBtn" data-toggle="modal" data-target="#loginModel" style="cursor: pointer;"&gt;登录&lt;/a&gt;</span><br><span class="line">      &lt;a href="register.jsp" style="cursor: pointer;"&gt;注册&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/c:if&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-手机短信登录"><a href="#二-手机短信登录" class="headerlink" title="二.手机短信登录"></a>二.手机短信登录</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><p><img src="image-20200517101427534.png" alt=""></p><h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"button"</span> id=<span class="string">"login_sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  $(<span class="string">'#login_sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">    let telephone = $(<span class="string">'#login_telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    let data = <span class="string">'action=sendSms&amp;telephone='</span> + telephone;</span><br><span class="line"></span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      alert(resp.message);</span><br><span class="line">    &#125;)</span><br><span class="line">    countDownLogin(<span class="keyword">this</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  let num_header = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">function <span class="title">countDownLogin</span><span class="params">(obj)</span> </span>&#123;</span><br><span class="line">    num_header--;</span><br><span class="line">    <span class="keyword">if</span> (num_header == <span class="number">0</span>) &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">false</span>);</span><br><span class="line">      $(obj).val(<span class="string">'Resend SMS Code'</span>);</span><br><span class="line">      num_header = <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">true</span>);</span><br><span class="line">      $(obj).val(num_header + <span class="string">'seconds latter ,Could Resend SMS Code'</span>);</span><br><span class="line">      setTimeout(function () &#123;</span><br><span class="line">        countDownLogin(obj);</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">telLogin</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">  User currentUser = userService.findByTelephone(telephone);</span><br><span class="line"></span><br><span class="line">  ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (currentUser == <span class="keyword">null</span>) &#123;</span><br><span class="line">    resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number not Registered"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">    String sessionCode = (String) req.getSession().getAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode))) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Wrong SMS Code"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"currentUser"</span>, currentUser);</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Login Success"</span>);</span><br><span class="line"></span><br><span class="line">      req.getSession().removeAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//将resultInfo转为Json响应到客户端</span></span><br><span class="line">  javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByTelephone</span><span class="params">(String phoneNumber)</span> </span>&#123;</span><br><span class="line">  SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">  UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">  User currentUser  = userDao.findByTelephone(phoneNumber);</span><br><span class="line"></span><br><span class="line">  MyBatisUtils.close(sqlSession);</span><br><span class="line">  <span class="keyword">return</span> currentUser;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- &lt;a href="javaScript:void(0)" id="login_sendSmsCode"&gt;发送手机验证码&lt;/a&gt;--%&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> id=<span class="string">"login_sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  $(<span class="string">'#login_sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">    let telephone = $(<span class="string">'#login_telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    let data = <span class="string">'action=sendSms&amp;telephone='</span> + telephone;</span><br><span class="line"></span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      alert(resp.message);</span><br><span class="line">    &#125;)</span><br><span class="line">    countDownLogin(<span class="keyword">this</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  let num_header = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function">function <span class="title">countDownLogin</span><span class="params">(obj)</span> </span>&#123;</span><br><span class="line">    num_header--;</span><br><span class="line">    <span class="keyword">if</span> (num_header == <span class="number">0</span>) &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">false</span>);</span><br><span class="line">      $(obj).val(<span class="string">'Resend SMS Code'</span>);</span><br><span class="line">      num_header = <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">true</span>);</span><br><span class="line">      $(obj).val(num_header + <span class="string">'seconds latter ,Could Resend SMS Code'</span>);</span><br><span class="line">      setTimeout(function () &#123;</span><br><span class="line">        countDownLogin(obj);</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-用户退出功能"><a href="#三-用户退出功能" class="headerlink" title="三.用户退出功能"></a>三.用户退出功能</h1><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><p><img src="image-20200517104140292.png" alt=""></p><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li><p>header.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/UserServlet?action=logout"&gt;退出&lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">logout</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  req.getSession().invalidate();</span><br><span class="line">  resp.sendRedirect(req.getContextPath() + <span class="string">"/index.jsp"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-SVN"><a href="#四-SVN" class="headerlink" title="四.SVN"></a>四.SVN</h1><h4 id="4-1-开发中遇到的问题"><a href="#4-1-开发中遇到的问题" class="headerlink" title="4.1 开发中遇到的问题"></a>4.1 开发中遇到的问题</h4><p>多人协作，解决冲突</p><blockquote><p>代码版本控制工具:svn、git</p></blockquote><h4 id="4-2-SVN工作流程"><a href="#4-2-SVN工作流程" class="headerlink" title="4.2 SVN工作流程"></a>4.2 SVN工作流程</h4><p><img src="image-20200517111105210.png" alt=""></p><h4 id="4-3-SVN服务器安装和使用"><a href="#4-3-SVN服务器安装和使用" class="headerlink" title="4.3 SVN服务器安装和使用"></a>4.3 SVN服务器安装和使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment">#yum install subversion</span></span><br><span class="line">[root@localhost /]<span class="comment"># cd /home</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建目录</span></span><br><span class="line">[root@localhost home]<span class="comment"># mkdir -p svn/repository</span></span><br><span class="line"><span class="comment">#使用该目录作为仓库</span></span><br><span class="line">[root@localhost svn]<span class="comment"># svnadmin create /home/svn/repositories  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改配置文件，将下面三行注释去除，顶格写，否则报错误19</span></span><br><span class="line">[root@localhost svn]<span class="comment"># vi conf/svnserve.conf </span></span><br><span class="line">anon-access = none</span><br><span class="line">auth-access = write</span><br><span class="line">password-db = passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户，用户组，并设定权限</span></span><br><span class="line">[root@localhost svn]<span class="comment"># vi conf/authz</span></span><br><span class="line">[aliases]</span><br><span class="line"><span class="comment"># joe = /C=XZ/ST=Dessert/L=Snake City/O=Snake Oil, Ltd./OU=Research Institute/CN=Joe Average</span></span><br><span class="line"></span><br><span class="line">[groups]</span><br><span class="line">topgroup=swzxsyh</span><br><span class="line"></span><br><span class="line">[/]</span><br><span class="line">swzxsyh=rw</span><br><span class="line">@topgroup = rw</span><br><span class="line"></span><br><span class="line">[/trunk]</span><br><span class="line">@topgroup = rw</span><br><span class="line">swzxsyh=rw</span><br><span class="line"></span><br><span class="line">[/foo/bar]</span><br><span class="line">swzxsyh=rw</span><br><span class="line">@topgroup = rw</span><br><span class="line"></span><br><span class="line">[repository:/baz/fuz]</span><br><span class="line">swzxsyh=rw</span><br><span class="line">@topgroup = rw</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户账号密码</span></span><br><span class="line">[root@localhost svn]<span class="comment"># vi conf/passwd</span></span><br><span class="line">[users]</span><br><span class="line">swzxsyh = 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动服务器</span></span><br><span class="line">[root@localhost svn]<span class="comment">#svnserve -d --listen-port=3690</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#可以添加至rc.local自启动</span></span><br></pre></td></tr></table></figure><h4 id="4-4-SVN客户端安装和使用"><a href="#4-4-SVN客户端安装和使用" class="headerlink" title="4.4 SVN客户端安装和使用"></a>4.4 SVN客户端安装和使用</h4><p>macOS自带svn，也可使用Cornerstone等软件</p><ul><li><p>测试连接svn服务器</p><p>svn://swzxsyh@192.168.xx.xx:3690/share/之前创建的目录/svn/repos1</p></li><li><p><strong>使用介绍</strong></p><ul><li>检出项目 checkout</li></ul></li></ul><h4 id="4-5-IDEA集成SVN客户端插件"><a href="#4-5-IDEA集成SVN客户端插件" class="headerlink" title="4.5 IDEA集成SVN客户端插件"></a>4.5 IDEA集成SVN客户端插件</h4><p>Settings==&gt;Subversion==&gt;设置svn</p><h4 id="4-6-SVN分支操作"><a href="#4-6-SVN分支操作" class="headerlink" title="4.6 SVN分支操作"></a>4.6 SVN分支操作</h4><ul><li>在主干中检出分支代码(时间+功能)</li><li>在idea切换到分支，编辑代码，提交</li><li>在idea中操作主干将分支的代码进行合并</li></ul><h4 id="4-7-上传黑马旅游网到SVN"><a href="#4-7-上传黑马旅游网到SVN" class="headerlink" title="4.7 上传黑马旅游网到SVN"></a>4.7 上传黑马旅游网到SVN</h4><p>使用Cornerstone连接，import项目即可</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 用户名密码登录</strong></p><p><strong>### ajax方式</strong></p><p><strong>## 二 手机短信登录</strong></p><p><strong>### ajax方式</strong></p><p><strong>## 三 用户退出功能</strong></p><p><strong>### 清除session</strong></p><p><strong>## 四 SVN</strong></p><p><strong>### 源代码版本控制工具</strong></p><p>- 安装svn服务器端</p><p>​    - 创建仓库</p><p>​    - 创建用户</p><p>​    - 创建组</p><p>​    - 仓库授权</p><p>- 安装svn客户端</p><p>​    - 检出</p><p>​    - 提交</p><p>​    - 更新</p><p>​    - 代码冲突解决</p><p>​    - 删除</p><p>​    - 代码回溯</p><p>- idea配置svn插件</p><p>- svn标准仓库</p><p>​    - branchs</p><p>​    - tags</p><p>​    - trunck</p><p>- idea操作svn</p><p>​    - 分享</p><p>​    - 检出</p><p>​    - 提交</p><p>​    - 更新</p><p>​    - 代码冲突解决</p><p>- 分支</p><p>​    - 从主干中检出一个分支</p><p>​    - 将分支合并到主干</p><p>- 将黑马旅游网上传到svn服务器</p><p>​    - idea 实现share project</p><p>​    - 小乌龟 实现commit</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;密码登录&lt;/li&gt;
&lt;li&gt;短信登录&lt;/li&gt;
&lt;li&gt;用户退出&lt;/li&gt;
&lt;li&gt;SVN多人协作开发文本控制工具&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十五）</title>
    <link href="http://yoursite.com/2020/05/16/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%BA%94%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/16/就业班学习笔记（五十五）/</id>
    <published>2020-05-16T01:02:16.000Z</published>
    <updated>2020-05-17T16:08:21.624Z</updated>
    
    <content type="html"><![CDATA[<ul><li>用户模块之注册<ul><li>基本注册功能</li><li>ajax异步校验</li><li>阿里云短信服务</li><li>手机验证码校验</li><li>BaseServlet</li></ul></li></ul><a id="more"></a><h1 id="一-用户注册基本功能"><a href="#一-用户注册基本功能" class="headerlink" title="一.用户注册基本功能"></a>一.用户注册基本功能</h1><h4 id="1-1-需求分析"><a href="#1-1-需求分析" class="headerlink" title="1.1 需求分析"></a>1.1 需求分析</h4><ul><li><p>页面和实体以及表关系介绍</p><table><thead><tr><th>页面</th><th>➡</th><th>实体类</th><th>➡</th><th>数据库</th></tr></thead><tbody><tr><td>register.jsp</td><td></td><td>public class User implements Serializable</td><td></td><td>tab_user</td></tr></tbody></table></li><li><p>代码流程图</p><p><img src="image-20200516093105857.png" alt=""></p></li></ul><h4 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h4><ul><li><p>register.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--注册表单--&gt;</span><br><span class="line">&lt;form id=<span class="string">"registerForm"</span> action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/UserServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">  </span><br><span class="line">&lt;!-- 省略 --&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"submit"</span> value=<span class="string">"注册"</span>&gt;</span><br><span class="line">&lt;span id="msg" style="color: red;"&gt;$&#123;resultInfo.message&#125;&lt;/span&gt;</span><br></pre></td></tr></table></figure></li><li><p>ResutInfo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResultInfo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个参数构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResultInfo</span><span class="params">(Boolean success)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.success = success;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二个参数构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResultInfo</span><span class="params">(Boolean success, String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.success = success;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 三个参数构造</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResultInfo</span><span class="params">(Boolean success, String message, Object data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.success = success;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取请求action</span></span><br><span class="line">        String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">        <span class="comment">//判断</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取请求参数</span></span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//封装User中</span></span><br><span class="line">        User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BeanUtils.populate(param, parameterMap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调用service，实现注册</span></span><br><span class="line">        ResultInfo resultInfo = userService.register(param);</span><br><span class="line">        <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">            resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">            req.getSession().removeAttribute(<span class="string">"smsCode_"</span>+telephone);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function">ResultInfo <span class="title">register</span><span class="params">(User param)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//注册</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultInfo <span class="title">register</span><span class="params">(User param)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取UserDao代理对象</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据username查询dao，校验</span></span><br><span class="line">        User u1 = userDao.findByUsername(param.getUsername());</span><br><span class="line">        <span class="keyword">if</span> (u1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//关闭sqlSession</span></span><br><span class="line">            MyBatisUtils.close(sqlSession);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Already Exists"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//根据telephone查询dao，校验</span></span><br><span class="line">        User u2 = userDao.findByTelephone(param.getTelephone());</span><br><span class="line">        <span class="keyword">if</span> (u2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//关闭sqlSession</span></span><br><span class="line">            MyBatisUtils.close(sqlSession);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number Already Registered"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对密码进行加密(Hutool工具包提供SecureUtil)</span></span><br><span class="line">        String md5Pwd = SecureUtil.md5(param.getPassword());</span><br><span class="line">        param.setPassword(md5Pwd);</span><br><span class="line">        <span class="comment">//保存User，完成注册</span></span><br><span class="line">        userDao.save(param);</span><br><span class="line">        <span class="comment">//关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserDao(接口+映射)</p><p>resources新建”com/itheima/dao”文件夹，然后将UserDao.xml创建在此</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123; <span class="comment">// 根据用户名查询</span></span><br><span class="line">    <span class="function">User <span class="title">findByUsername</span><span class="params">(String username)</span></span>;</span><br><span class="line"><span class="comment">// 根据手机号查询</span></span><br><span class="line"><span class="function">User <span class="title">findByTelephone</span><span class="params">(String telephone)</span></span>;</span><br><span class="line"><span class="comment">// 注册</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(User param)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserDao"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_user WHERE username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByTelephone"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM tab_user WHERE telephone = #&#123;telephone&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        INSERT INTO tab_user(username,password,telephone) VALUES (#&#123;username&#125;,#&#123;password&#125;,#&#123;telephone&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>register_ok.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">"text-align:center;height: 290px;margin-top: 50px"</span>&gt;</span><br><span class="line">    &lt;span style="font-size: 30px"&gt;恭喜您，注册成功！&lt;/span&gt;</span><br><span class="line">    &lt;div&gt;&lt;span style="color: red"&gt;5&lt;/span&gt;秒后，跳转到 &lt;a href="$&#123;pageContext.request.contextPath&#125;/index.jsp"&gt;首页&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        let num = <span class="number">5</span>;</span><br><span class="line">        setInterval(function () &#123;</span><br><span class="line">            num--;</span><br><span class="line">            $(<span class="string">'resultSpan'</span>).html(num);</span><br><span class="line">            <span class="keyword">if</span> (num == <span class="number">1</span>) &#123;</span><br><span class="line">                location.href = <span class="string">"$&#123;pageContext.request.contextPath&#125;/index.jsp"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-校验用户名是否存在"><a href="#二-校验用户名是否存在" class="headerlink" title="二.校验用户名是否存在"></a>二.校验用户名是否存在</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><p><img src="image-20200516104659881.png" alt=""></p><h4 id="2-2-技术分析"><a href="#2-2-技术分析" class="headerlink" title="2.2 技术分析"></a>2.2 技术分析</h4><ul><li>使用jquery的ajax $.post(url,data,function(resp){});</li><li>使用jackson的 ObjectMapper对象，实现转换</li></ul><h4 id="2-3-代码实现"><a href="#2-3-代码实现" class="headerlink" title="2.3 代码实现"></a>2.3 代码实现</h4><ul><li><p>register.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">  &lt;label for="username"&gt;用户名&lt;/label&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> id=<span class="string">"username"</span> name=<span class="string">"username"</span> placeholder=<span class="string">"请输入账号"</span>&gt;</span><br><span class="line">  &lt;span id="userInfo" style="font-size:10px"&gt;&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">//用户名绑定失去焦点事件</span></span><br><span class="line">  $(<span class="string">'#username'</span>).blur(function () &#123;</span><br><span class="line">    <span class="comment">//获取用户输入的value值</span></span><br><span class="line">    let username = $(<span class="keyword">this</span>).val();</span><br><span class="line">    <span class="comment">//ajax请求</span></span><br><span class="line">    let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">    let data = <span class="string">'action=fundByUsername&amp;username='</span> + username;</span><br><span class="line">    $.post(url, data, function (resp) &#123;</span><br><span class="line">      <span class="comment">//resp就是返回的json对象(对应java类就是 ResultInfo)</span></span><br><span class="line">      <span class="keyword">if</span> (resp.success) &#123;</span><br><span class="line">        $(<span class="string">'userInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'green'</span>).html(<span class="string">'Username OK'</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">'userInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'red'</span>).html(<span class="string">'Username Already Registered'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure></li><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求action</span></span><br><span class="line">    String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">    <span class="comment">//判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByUsername"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByUserName(req, resp);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//ajax校验用户名</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByUserName</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 1.接收请求参数</span></span><br><span class="line">      String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2.调用service查询</span></span><br><span class="line">      User user = userService.findByUsername(username);</span><br><span class="line"></span><br><span class="line">      ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 3.判断</span></span><br><span class="line">      <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Already Exists"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Can Be Registered"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 4.将resultInfo转为json</span></span><br><span class="line">      ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">      String json = objectMapper.writeValueAsString(resultInfo);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 5.通过response响应</span></span><br><span class="line">      resp.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">      resp.getWriter().write(json);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据用户名查询</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取 UserDao代理对象</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    User user = userDao.findByUsername(username);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 关闭sqlSession</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-课下作业-–-实现手机号的异步校验"><a href="#2-4-课下作业-–-实现手机号的异步校验" class="headerlink" title="2.4 课下作业 – 实现手机号的异步校验"></a>2.4 课下作业 – 实现手机号的异步校验</h4><ul><li>register.jsp</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;tr&gt;</span><br><span class="line">  &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">    &lt;label for="telephone"&gt;手机号&lt;/label&gt;</span><br><span class="line">  &lt;/td&gt;</span><br><span class="line">  &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> id=<span class="string">"telephone"</span> name=<span class="string">"telephone"</span> placeholder=<span class="string">"请输入您的手机号"</span>&gt;</span><br><span class="line">    &lt;span id="phoneInfo" style="font-size: 50px"&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/td&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">//用户名绑定失去焦点事件</span></span><br><span class="line">    $(<span class="string">'#telephone'</span>).blur(function () &#123;</span><br><span class="line">      <span class="comment">//获取用户输入的value值</span></span><br><span class="line">      let phoneNumber = $(<span class="keyword">this</span>).val();</span><br><span class="line">      <span class="comment">//ajax请求</span></span><br><span class="line">      let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">      let data = <span class="string">'action=fundByPhoneNumber&amp;PhoneNumber='</span> + phoneNumber;</span><br><span class="line">      $.post(url, data, function (resp) &#123;</span><br><span class="line">        <span class="comment">//resp就是返回的json对象(对应java类就是 ResultInfo)</span></span><br><span class="line">        <span class="keyword">if</span> (resp.success) &#123;</span><br><span class="line">          $(<span class="string">'phoneInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'green'</span>).html(<span class="string">'Phone Number OK'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          $(<span class="string">'phoneInfo'</span>).css(<span class="string">"color"</span>, <span class="string">'red'</span>).html(<span class="string">'Phone Number Already Registered'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求action</span></span><br><span class="line">    String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">    <span class="comment">//判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByUsername"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByUserName(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByPhoneNumber"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByPhoneNumber(req, resp);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPhoneNumber</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">      String username = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">      User telephone = userService.findByTelephone(username);</span><br><span class="line"></span><br><span class="line">      ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (telephone != <span class="keyword">null</span>) &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number Already Registered"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Phone OK"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">      String json = objectMapper.writeValueAsString(resultInfo);</span><br><span class="line"></span><br><span class="line">      resp.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">      resp.getWriter().write(json);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByTelephone</span><span class="params">(String phoneNumber)</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    UserDao userDao = sqlSession.getMapper(UserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    User telephone = userDao.findByTelephone(phoneNumber);</span><br><span class="line">    </span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">    <span class="keyword">return</span> telephone;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="三-阿里云-手机服务"><a href="#三-阿里云-手机服务" class="headerlink" title="三.阿里云 手机服务"></a>三.阿里云 手机服务</h1><h4 id="3-1-发送短信流程"><a href="#3-1-发送短信流程" class="headerlink" title="3.1 发送短信流程"></a>3.1 发送短信流程</h4><p>register.jsp==&gt;黑马旅游网==&gt;远程调用阿里云平台接口==&gt;三大运营商==&gt;用户==&gt;返回到注册页面</p><h4 id="3-2-阿里云使用"><a href="#3-2-阿里云使用" class="headerlink" title="3.2 阿里云使用"></a>3.2 阿里云使用</h4><p>访问阿里云平台-登录-管理控制台，短信服务-国内消息-申请签名和模板，申请accessKey密钥对-充钱</p><h4 id="3-3-SDK使用"><a href="#3-3-SDK使用" class="headerlink" title="3.3 SDK使用"></a>3.3 SDK使用</h4><p>软件开发工具包(Software Development Kit )包含 jar包、API文档、工具类的集合都可以叫做 SDK</p><ul><li><p>请求参数</p><table><thead><tr><th>参数名称</th><th>参数类型</th><th>是否必须</th><th>样例取值</th></tr></thead><tbody><tr><td>phoneNumbers 手机号</td><td>String</td><td>必须</td><td>15000000000</td></tr><tr><td>signName     签名</td><td>String</td><td>必须</td><td>云通信</td></tr><tr><td>templateCode 模板</td><td>String</td><td>必须</td><td>SMS_0000</td></tr><tr><td>TemplateParam</td><td>String</td><td>可选</td><td>{“code”:”1234”,<br>“product”:”ytx”}</td></tr></tbody></table></li></ul><ul><li><p>响应参数</p><table><thead><tr><th>参数名称</th><th>出参类型</th><th>样例取值</th><th>参数说明</th></tr></thead><tbody><tr><td>RequestID</td><td>String</td><td>8906582E-6722</td><td>请求ID</td></tr><tr><td>Code</td><td>String</td><td>OK</td><td>状态码-返回OK代表请求成功，嵌套错误代码详见错误码列表</td></tr><tr><td>Message</td><td>String</td><td>请求成功</td><td>状态码的描述</td></tr><tr><td>Bizld</td><td>String</td><td>134534^4351232</td><td>发送回执ID，可根据ID查询具体的发送状态</td></tr></tbody></table></li><li><p>放入SDK工具</p><p>SmsUtils.java放入Utils</p></li><li><p>引入依赖包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="comment">&lt;!-- 注：如提示报错，先升级基础包版，无法解决可联系技术支持 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-dysmsapi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">  SendSmsResponse sendSmsResponse = sendSms(<span class="string">"15814076346"</span>, <span class="string">"黑马旅游网"</span>, <span class="string">"SMS_166778713"</span>, <span class="string">"&#123;\"code\":\"123456\"&#125;"</span>);</span><br><span class="line">  System.out.println(sendSmsResponse);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="四-手机验证码校验功能"><a href="#四-手机验证码校验功能" class="headerlink" title="四.手机验证码校验功能"></a>四.手机验证码校验功能</h1><h4 id="4-1-实现发送短信功能"><a href="#4-1-实现发送短信功能" class="headerlink" title="4.1 实现发送短信功能"></a>4.1 实现发送短信功能</h4><h5 id="4-1-1-需求分析"><a href="#4-1-1-需求分析" class="headerlink" title="4.1.1 需求分析"></a>4.1.1 需求分析</h5><p><img src="image-20200516140947552.png" alt=""></p><h5 id="4-1-3-代码实现"><a href="#4-1-3-代码实现" class="headerlink" title="4.1.3 代码实现"></a>4.1.3 代码实现</h5><ul><li><p>register.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">  &lt;label for="smsCode"&gt;验证码&lt;/label&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right check"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> id=<span class="string">"smsCode"</span> name=<span class="string">"smsCode"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"check"</span> placeholder=<span class="string">"请输入验证码"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input id=<span class="string">"sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>/&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">//给按钮绑定点击事件</span></span><br><span class="line">    $(<span class="string">'#sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">      let telephone = $(<span class="string">'#telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">      let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">      let data = <span class="string">'action=sendSms&amp;telephone='</span> + telephone;</span><br><span class="line"></span><br><span class="line">      $.post(url, data, function (resp) &#123;</span><br><span class="line">        alert(resp.message);</span><br><span class="line">      &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//获取请求action</span></span><br><span class="line">    String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">    <span class="comment">//判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"register"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.register(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByUsername"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByUserName(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"findByPhoneNumber"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.findByPhoneNumber(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"sendSms"</span>.equals(action)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.sendSms(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendSms</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">    String smsCode = RandomStringUtils.randomNumeric(<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    ResultInfo resultInfo = userService.sendSms(telephone, smsCode);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"smsCode_"</span> + telephone, smsCode);</span><br><span class="line">      System.out.println(<span class="string">"smsCode: "</span> + smsCode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    String json = <span class="keyword">new</span> ObjectMapper().writeValueAsString(resultInfo);</span><br><span class="line"></span><br><span class="line">    resp.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">    resp.getWriter().write(json);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 发送短信</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResultInfo <span class="title">sendSms</span><span class="params">(String telephone, String smsCode)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 定义签名</span></span><br><span class="line">        String signName = <span class="string">"黑马旅游网"</span>;</span><br><span class="line">        <span class="comment">// 定义模板</span></span><br><span class="line">        String templateCode = <span class="string">"SMS_123123123"</span>;</span><br><span class="line">        <span class="comment">// 拼接验证码(json)</span></span><br><span class="line">        String param = <span class="string">"&#123;\"code\":\""</span> + smsCode + <span class="string">"\"&#125;"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用工具类发送短信</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SendSmsResponse sendSmsResponse = SmsUtils.sendSms(telephone, signName, templateCode, param);</span><br><span class="line">            <span class="keyword">if</span> (sendSmsResponse.getCode().equals(<span class="string">"OK"</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Message Send Successful"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClientException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Message Send Failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-2-完善注册代码"><a href="#4-2-完善注册代码" class="headerlink" title="4.2 完善注册代码"></a>4.2 完善注册代码</h4><h5 id="4-2-1-需求分析"><a href="#4-2-1-需求分析" class="headerlink" title="4.2.1 需求分析"></a>4.2.1 需求分析</h5><h5 id="4-2-3-代码实现"><a href="#4-2-3-代码实现" class="headerlink" title="4.2.3 代码实现"></a>4.2.3 代码实现</h5><ul><li><p>UserServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//注册</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// a.获取请求参数</span></span><br><span class="line">  String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">  String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// b.获取session中验证码</span></span><br><span class="line">  String sessionCode = (String) req.getSession().getAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// c.进行校验</span></span><br><span class="line">  <span class="keyword">if</span>(sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode)))&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证码不正确</span></span><br><span class="line">    req.setAttribute(<span class="string">"resultInfo"</span>,<span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>,<span class="string">"SMS Code not correct"</span>));</span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req,resp);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//获取请求参数</span></span><br><span class="line">  Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//封装User中</span></span><br><span class="line">  User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    BeanUtils.populate(param, parameterMap);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//调用service，实现注册</span></span><br><span class="line">  ResultInfo resultInfo = userService.register(param);</span><br><span class="line">  <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">    resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">    req.getSession().removeAttribute(<span class="string">"smsCode_"</span>+telephone);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">    req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-60秒倒计时"><a href="#4-3-60秒倒计时" class="headerlink" title="4.3 60秒倒计时"></a>4.3 60秒倒计时</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_left"</span>&gt;</span><br><span class="line">  &lt;label for="smsCode"&gt;验证码&lt;/label&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">"td_right check"</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> id=<span class="string">"smsCode"</span> name=<span class="string">"smsCode"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"check"</span> placeholder=<span class="string">"请输入验证码"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;input id=<span class="string">"sendSmsCode"</span> value=<span class="string">"发送手机验证码"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-link"</span>/&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="comment">//给按钮绑定点击事件</span></span><br><span class="line">    $(<span class="string">'#sendSmsCode'</span>).click(function () &#123;</span><br><span class="line">      let telephone = $(<span class="string">'#telephone'</span>).val();</span><br><span class="line"></span><br><span class="line">      let url = <span class="string">'$&#123;pageContext.request.contextPath&#125;/UserServlet'</span>;</span><br><span class="line">      let data = <span class="string">'action=sendSms&amp;telephone'</span> + telephone;</span><br><span class="line"></span><br><span class="line">      $.post(url, data, function (resp) &#123;</span><br><span class="line">        alert(resp.message);</span><br><span class="line">      &#125;);</span><br><span class="line">      countDown(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    let num = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">function <span class="title">countDown</span><span class="params">(obj)</span> </span>&#123;</span><br><span class="line">      num--;</span><br><span class="line">      <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">        $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">false</span>);</span><br><span class="line">        $(obj).val(<span class="string">'Resend SMS Code'</span>);</span><br><span class="line">        num = <span class="number">10</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(obj).prop(<span class="string">'disabled'</span>, <span class="keyword">true</span>);</span><br><span class="line">        $(obj).val(<span class="string">'Resend SMS Code After'</span> + num + <span class="string">'Seconds'</span>);</span><br><span class="line">        setTimeout(function () &#123;</span><br><span class="line">          countDown(obj);</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure><h1 id="五-BaseServlet"><a href="#五-BaseServlet" class="headerlink" title="五.BaseServlet"></a>五.BaseServlet</h1><ul><li><p>抽取返回ajax数据的公共方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取请求action(获取的就是方法名)</span></span><br><span class="line">    String action = request.getParameter(<span class="string">"action"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取字节码对象</span></span><br><span class="line">    Class clazz = <span class="keyword">this</span>.getClass();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 获取指定名称的方法对象(method对象)</span></span><br><span class="line">      Method declaredMethod = clazz.getDeclaredMethod(action, HttpServletRequest<span class="class">.<span class="keyword">class</span>, <span class="title">HttpServletResponse</span>.<span class="title">class</span>)</span>;</span><br><span class="line">      <span class="comment">// (private修饰的方法，需要暴力反射..)</span></span><br><span class="line">      <span class="comment">// 通过反射调用指定名称的方法</span></span><br><span class="line">      declaredMethod.invoke(<span class="keyword">this</span>, request, response);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Server Busy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">javaToJsonWriteClient</span><span class="params">(Object object, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    String json = <span class="keyword">new</span> ObjectMapper().writeValueAsString(object);</span><br><span class="line"></span><br><span class="line">    response.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">    response.getWriter().write(json);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">BaseServlet</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//注册</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// a.获取请求参数</span></span><br><span class="line">    String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">    String smsCode = req.getParameter(<span class="string">"smsCode"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// b.获取session中验证码</span></span><br><span class="line">    String sessionCode = (String) req.getSession().getAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// c.进行校验</span></span><br><span class="line">    <span class="keyword">if</span> (sessionCode == <span class="keyword">null</span> || (!sessionCode.equals(smsCode))) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 验证码不正确</span></span><br><span class="line">      req.setAttribute(<span class="string">"resultInfo"</span>, <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"SMS Code not correct"</span>));</span><br><span class="line">      req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取请求参数</span></span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//封装User中</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      BeanUtils.populate(param, parameterMap);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Entity class encapsulation failed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//调用service，实现注册</span></span><br><span class="line">    ResultInfo resultInfo = userService.register(param);</span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      resp.sendRedirect(req.getContextPath() + <span class="string">"/register_ok.jsp"</span>);</span><br><span class="line">      req.getSession().removeAttribute(<span class="string">"smsCode_"</span> + telephone);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      req.setAttribute(<span class="string">"resultInfo"</span>, resultInfo);</span><br><span class="line">      req.getRequestDispatcher(<span class="string">"/register.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//ajax校验用户名</span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByUserName</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.接收请求参数</span></span><br><span class="line">    String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.调用service查询</span></span><br><span class="line">    User user = userService.findByUsername(username);</span><br><span class="line"></span><br><span class="line">    ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.判断</span></span><br><span class="line">    <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Username Already Exists"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Can Be Registered"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPhoneNumber</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    String username = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line"></span><br><span class="line">    User telephone = userService.findByTelephone(username);</span><br><span class="line"></span><br><span class="line">    ResultInfo resultInfo = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (telephone != <span class="keyword">null</span>) &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">false</span>, <span class="string">"Phone Number Already Registered"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      resultInfo = <span class="keyword">new</span> ResultInfo(<span class="keyword">true</span>, <span class="string">"Phone OK"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendSms</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    <span class="comment">// 1.获取请求参数</span></span><br><span class="line">    String telephone = req.getParameter(<span class="string">"telephone"</span>);</span><br><span class="line">    <span class="comment">// 2.生成6位随机数(apache提供的)</span></span><br><span class="line">    String smsCode = RandomStringUtils.randomNumeric(<span class="number">6</span>);</span><br><span class="line">    <span class="comment">// 3.调用service完成短信发送，返回resultInfo</span></span><br><span class="line">    ResultInfo resultInfo = userService.sendSms(telephone, smsCode);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.如果发送成功，将验证码写入到session中</span></span><br><span class="line">    <span class="keyword">if</span> (resultInfo.getSuccess()) &#123;</span><br><span class="line">      req.getSession().setAttribute(<span class="string">"smsCode_"</span> + telephone, smsCode);</span><br><span class="line">      System.out.println(<span class="string">"smsCode: "</span> + smsCode);</span><br><span class="line">    &#125;</span><br><span class="line">    javaToJsonWriteClient(resultInfo, resp);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="# 总结"></a># 总结</h1><h2 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h2><h3 id="用户基本注册功能"><a href="#用户基本注册功能" class="headerlink" title="用户基本注册功能"></a>用户基本注册功能</h3><p>- 根据需求图编写代码</p><h3 id="校验用户名是否存在"><a href="#校验用户名是否存在" class="headerlink" title="校验用户名是否存在"></a>校验用户名是否存在</h3><p>- ajax异步校验</p><h3 id="阿里云-短信服务"><a href="#阿里云-短信服务" class="headerlink" title="阿里云-短信服务"></a>阿里云-短信服务</h3><p>- 注册短信服务</p><p>​    - 1. 访问短信服务官网（<a href="https://www.aliyun.com/product/sms）">https://www.aliyun.com/product/sms）</a></p><p>​    - 2. 申请用户（使用支付宝账户）</p><p>​    - 3. 选的短信服务 管理控制台</p><p>​    - 4. 选择国内消息</p><p>​    - 5. 申请签名和模板，预计时间15分钟</p><p>​    - 6. 申请accessKey秘钥</p><p>​    - 7. 充值1元块钱</p><h3 id="手机验证码校验功能"><a href="#手机验证码校验功能" class="headerlink" title="手机验证码校验功能"></a>手机验证码校验功能</h3><p>- ajax发送短信</p><p>- 完善用户注册功能</p><p>- 实现60秒倒计时</p><h3 id="BaseServlet"><a href="#BaseServlet" class="headerlink" title="BaseServlet"></a>BaseServlet</h3><p>- 抄一遍</p><p>​    - 通过反射找出同名的方法，调用</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;用户模块之注册&lt;ul&gt;
&lt;li&gt;基本注册功能&lt;/li&gt;
&lt;li&gt;ajax异步校验&lt;/li&gt;
&lt;li&gt;阿里云短信服务&lt;/li&gt;
&lt;li&gt;手机验证码校验&lt;/li&gt;
&lt;li&gt;BaseServlet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十四）</title>
    <link href="http://yoursite.com/2020/05/14/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E5%9B%9B%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/14/就业班学习笔记（五十四）/</id>
    <published>2020-05-14T01:02:03.000Z</published>
    <updated>2020-05-15T18:45:42.546Z</updated>
    
    <content type="html"><![CDATA[<ul><li>maven基础与环境搭建</li></ul><a id="more"></a><h1 id="一-Maven简介"><a href="#一-Maven简介" class="headerlink" title="一.Maven简介"></a>一.Maven简介</h1><h4 id="1-1-Maven是什么"><a href="#1-1-Maven是什么" class="headerlink" title="1.1 Maven是什么"></a>1.1 Maven是什么</h4><p>Maven 是一个项目管理工具，它包含了一个项目对象模型 (POM:Project Object Model)，一组标准集合，一个项 目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在生命周 期阶段(phase)中插件(plugin)目标(goal)的逻辑。</p><h4 id="1-2-Maven能解决什么问题"><a href="#1-2-Maven能解决什么问题" class="headerlink" title="1.2 Maven能解决什么问题"></a>1.2 Maven能解决什么问题</h4><p>一种工具，可以构建工程，管理 jar包，编译代码，还 能帮你自动运行单元测试，打包，生成报表，部署项目，生成 Web 站点。</p><h4 id="1-3-Maven的两个核心功能"><a href="#1-3-Maven的两个核心功能" class="headerlink" title="1.3 Maven的两个核心功能"></a>1.3 Maven的两个核心功能</h4><h5 id="1-3-1-依赖管理"><a href="#1-3-1-依赖管理" class="headerlink" title="1.3.1 依赖管理"></a>1.3.1 依赖管理</h5><p>Maven的一个核心特性就是依赖管理。MVN依赖管理，就是一个管理jar包的过程</p><table><thead><tr><th>CRM项目<br>使用mvn工程实现</th><th>➡项目中给定坐标，去仓库拉取jar包➡<br>索引的存在，使拉取jar包过程，可以认为是自己项目中有的</th><th>MVN仓库<br>jar的仓库</th></tr></thead><tbody><tr><td></td><td>坐标:将来要找某个jar包，就是要确定这个jar包的坐标</td><td></td></tr><tr><td></td><td>jar包如何给出坐标:公司/组织名+项目名+版本号一起确定</td><td></td></tr></tbody></table><p>maven工程中不直接将jar包导入到工程中，而是通过在pom.xml文件中添加所需jar包的坐标，避免了jar直接引入进来，在需要用到jar包的时候，只要查找pom.xml文件，再通过pom.xml文件中的坐标，到一个专门用于”存放jar包的仓库”(maven仓库)中根据坐标从而找到这些jar包，再把这些jar包拿去运行。 </p><ul><li><p>通过读取pom.xml 文件中的坐标，再到仓库中找到jar包，会不会很慢</p><blockquote><p>通过pom.xml文件配置要引入的jar包的坐标，再读取坐标并到仓库中加载jar包，这样我们就可以直接使用jar包，为了解决这个过程中速度慢的问题，maven中也有索引的概念，通过建立索引，可以大大提高加载jar包的速度，使得我们认为jar包基本跟放在本地的工程文件中再读取出来的速度是一样的。</p></blockquote></li></ul><h5 id="1-3-2-项目构建"><a href="#1-3-2-项目构建" class="headerlink" title="1.3.2 项目构建"></a>1.3.2 项目构建</h5><ul><li><p>什么是项目构建</p><p>项目从编译、测试、运行、打包、安装 ，部署整个过程都交给maven进行管理，这个过程称为构建。 </p><p>一键构建 指的是整个构建过程，使用maven一个命令可以轻松完成整个工作。</p></li><li><p>Maven规范化构建流程</p><table><thead><tr><th>清理</th><th>➡</th><th>编译</th><th>➡</th><th>测试</th><th>➡</th><th>报告</th><th>➡</th><th>打包</th><th>➡</th><th>部署</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table></li></ul><h1 id="二-Maven安装和使用"><a href="#二-Maven安装和使用" class="headerlink" title="二 Maven安装和使用"></a>二 Maven安装和使用</h1><h4 id="2-1-Maven下载和安装"><a href="#2-1-Maven下载和安装" class="headerlink" title="2.1 Maven下载和安装"></a>2.1 Maven下载和安装</h4><h5 id="2-1-1-Maven下载"><a href="#2-1-1-Maven下载" class="headerlink" title="2.1.1 Maven下载"></a>2.1.1 Maven下载</h5><p>Maven官网下载地址:<a href="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi</a></p><p>目前使用@3.5版本</p><h5 id="2-1-2-Maven安装"><a href="#2-1-2-Maven安装" class="headerlink" title="2.1.2 Maven安装"></a>2.1.2 Maven安装</h5><p>将apache-maven-3.5.2-bin.zip解压并添加至path</p><ul><li><p>maven目录结构</p><table><thead><tr><th>目录</th><th>介绍</th></tr></thead><tbody><tr><td>bin</td><td>存放了 maven 的命令</td></tr><tr><td>boot</td><td>存放了一些 maven 本身的引导程序，如类加载器等</td></tr><tr><td>conf</td><td>存放了 maven 的一些配置文件，如 setting.xml 文件</td></tr><tr><td>lib</td><td>存放了 maven 本身运行所需的一些 jar 包</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">apache-maven-3.5.2</span><br><span class="line">├── LICENSE</span><br><span class="line">├── NOTICE</span><br><span class="line">├── README.txt</span><br><span class="line">├── bin</span><br><span class="line">│   ├── m2.conf</span><br><span class="line">│   ├── mvn</span><br><span class="line">│   ├── mvn.cmd</span><br><span class="line">│   ├── mvnDebug</span><br><span class="line">│   ├── mvnDebug.cmd</span><br><span class="line">│   └── mvnyjp</span><br><span class="line">├── boot</span><br><span class="line">│   └── plexus-classworlds-2.5.2.jar</span><br><span class="line">├── conf</span><br><span class="line">│   ├── logging</span><br><span class="line">│   ├── settings.xml</span><br><span class="line">│   └── toolchains.xml</span><br><span class="line">└── lib</span><br><span class="line">    ├── aopalliance-1.0.jar</span><br><span class="line">├── ...省略</span><br><span class="line">    └── wagon-provider-api.license</span><br><span class="line"></span><br><span class="line">7 directories, 91 files</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-1-3-Maven及JDK配置"><a href="#2-1-3-Maven及JDK配置" class="headerlink" title="2.1.3 Maven及JDK配置"></a>2.1.3 Maven及JDK配置</h5><p>  Maven 3.3+ require JDK 1.7 or above to execute - they still allow you to build against 1.3 and other JDK versions <a href="https://maven.apache.org/guides/mini/guide-using-toolchains.html">by Using Toolchains</a></p><ul><li><p>配置PATH</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi .zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment">#MAVEN_HOME</span></span><br><span class="line"><span class="built_in">export</span> MAVEN_HOME=/Users/swzxsyh/Program/apache-maven-3.5.2</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$MAVEN_HOME</span>/bin</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-1-4-Maven软件版本测试"><a href="#2-1-4-Maven软件版本测试" class="headerlink" title="2.1.4 Maven软件版本测试"></a>2.1.4 Maven软件版本测试</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> ~ <span class="comment">#mvn -v</span></span><br><span class="line">Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T15:58:13+08:00)</span><br><span class="line">Maven home: /Users/swzxsyh/Program/apache-maven-3.5.2</span><br><span class="line">Java version: 1.8.0_221, vendor: Oracle Corporation</span><br><span class="line">Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre</span><br><span class="line">Default locale: en_CN, platform encoding: UTF-8</span><br><span class="line">OS name: <span class="string">"mac os x"</span>, version: <span class="string">"10.15.4"</span>, arch: <span class="string">"x86_64"</span>, family: <span class="string">"mac"</span></span><br></pre></td></tr></table></figure><h4 id="2-3-Maven仓库"><a href="#2-3-Maven仓库" class="headerlink" title="2.3 Maven仓库"></a>2.3 Maven仓库</h4><h5 id="2-3-1-Maven仓库的分类"><a href="#2-3-1-Maven仓库的分类" class="headerlink" title="2.3.1 Maven仓库的分类"></a>2.3.1 Maven仓库的分类</h5><p>Maven仓库分为本地仓库和远程仓库二大类。而远程仓库又可分成中央仓库，私服，第三方仓库。</p><table><thead><tr><th></th><th>Maven仓库</th><th align="center"></th></tr></thead><tbody><tr><td><b/>本地仓库</td><td></td><td align="center"><b/>远程仓库</td></tr><tr><td></td><td></td><td align="center">⬇</td></tr><tr><td></td><td></td><td align="center">中央仓库</td></tr><tr><td></td><td></td><td align="center">私服</td></tr><tr><td></td><td></td><td align="center">第三方公共库</td></tr></tbody></table><ul><li><p>依赖寻找流程</p><ul><li><p>在本地仓库中，根据Maven坐标系寻找指定依赖，如果存在，直接返回。</p></li><li><p>如果Maven仓库中不存在，或者需要检查依赖的版本时，maven则会去远程仓库中寻找，下载到本地仓库中再使 用。</p></li></ul></li><li><p>本地仓库</p><p>用来存储从远程仓库下载的插件和jar包，项目使用一些插件或jar包，优先从本地仓库查找。</p></li><li><p>中央仓库</p><p>在maven软件中内置一个远程仓库地址<a href="http://repo1.maven.org/maven2">http://repo1.maven.org/maven2</a> ，它是中央仓库，服务于整个互联网，它是由Maven团队自己维护，里面存储了非常全的jar包，它包含了世界上大部分流行的开源项目构件。</p></li><li><p>第三方公共库</p><p>Maven 仓库默认中央仓库在国外且只有一个， 国内使用难免很慢，我们可以更换为第三方公共库，例如:阿里云镜 像。</p></li><li><p>私服</p><p>私服是一种特殊的远程仓库，其内容是来自于其他的远程仓库，一般架设在局域网内，提供给一个组织的人员使用。 当Maven需要下载依赖时，从私服请求，如果私服上不存在该依赖，则从其他远程仓库下载，同时缓存在私服上，提 供给其他人使用。如果项目中的一些内部模块，无法发布到外部远程仓库中，也可发布在私服上，提供给项目中的其 他人员使用。</p></li></ul><h5 id="2-3-2-Maven本地仓库的配置"><a href="#2-3-2-Maven本地仓库的配置" class="headerlink" title="2.3.2 Maven本地仓库的配置"></a>2.3.2 Maven本地仓库的配置</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cd  $MAVEN_HOME/conf </span><br><span class="line">vi settings.xml</span><br><span class="line"># 找到</span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment">   | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: $&#123;user.home&#125;/.m2/repository</span></span><br><span class="line"><span class="comment">  &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  将<span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/path/to/local/repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span>改为本地仓库路径添加到注释后</span><br></pre></td></tr></table></figure><h5 id="2-3-4-Maven仓库国内镜像配置"><a href="#2-3-4-Maven仓库国内镜像配置" class="headerlink" title="2.3.4 Maven仓库国内镜像配置"></a>2.3.4 Maven仓库国内镜像配置</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- mirror</span></span><br><span class="line"><span class="comment">   | Specifies a repository mirror site to use instead of a given repository. The repository that</span></span><br><span class="line"><span class="comment">   | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</span></span><br><span class="line"><span class="comment">   | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">  &lt;mirror&gt;</span></span><br><span class="line"><span class="comment">    &lt;id&gt;mirrorId&lt;/id&gt;</span></span><br><span class="line"><span class="comment">    &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="comment">    &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class="line"><span class="comment">    &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</span></span><br><span class="line"><span class="comment">  &lt;/mirror&gt;</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 添加阿里云镜像 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-3-4-全局setting与用户setting"><a href="#2-3-4-全局setting与用户setting" class="headerlink" title="2.3.4 全局setting与用户setting"></a>2.3.4 全局setting与用户setting</h5><p>maven仓库地址、私服等配置信息需要在setting.xml文件中配置，分为全局配置和用户配置。 </p><p>在maven安装目录下 的有 conf/setting.xml文件，此setting.xml文件用于maven的所有project项目，它作为maven的全局配置。 如需要 个性配置则需要在用户配置中设置，用户配置的setting.xml文件默认的位置在:${user.dir} /.m2/settings.xml目录 中,${user.dir} 指windows 中的用户目录。</p><p> maven会先找用户配置，如果找到则以用户配置文件为准，否则使用全 局配置文件。</p><h4 id="2-3-Maven坐标和依赖"><a href="#2-3-Maven坐标和依赖" class="headerlink" title="2.3 Maven坐标和依赖"></a>2.3 Maven坐标和依赖</h4><p>Maven的一个核心的作用就是管理项目的依赖，引入我们所需的各种jar包等。为了能自动化的解析任何一个Java构 件，Maven必须将这些Jar包或者其他资源进行唯一标识，这是管理项目的依赖的基础，也就是我们要说的坐标。包 括我们自己开发的项目，也是要通过坐标进行唯一标识的，这样才能才其它项目中进行依赖引用。</p><ul><li><p>坐标的定义元素如下</p><table><thead><tr><th>元素</th><th>作用</th></tr></thead><tbody><tr><td>groupId</td><td>定义当前Maven项目名称</td></tr><tr><td>artifactId</td><td>定义项目模块</td></tr><tr><td>version</td><td>定义当前项目的当前版本</td></tr></tbody></table></li><li><p>例如</p><p>创建一个Maven的web项目，在pom.xml文件中生成坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--当前项目坐标--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itheima<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven_helloword<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要引入junit的测试jar，只需要在pom.xml配置文件中配置引入junit的坐标依赖即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 依赖关系 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 此项目运行使用junit，所以此项目依赖junit --&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的项目名称 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的模块名称 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="comment">&lt;!-- junit版本 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 依赖范围:单元测试时使用junit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-Maven工程的认识"><a href="#2-4-Maven工程的认识" class="headerlink" title="2.4 Maven工程的认识"></a>2.4 Maven工程的认识</h4><h5 id="2-4-1-Maven工程的目录结构"><a href="#2-4-1-Maven工程的目录结构" class="headerlink" title="2.4.1 Maven工程的目录结构"></a>2.4.1 Maven工程的目录结构</h5><p>作为一个maven工程，它的src目录和pom.xml是必备的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">├── maven_java.iml</span><br><span class="line">├── pom.xml</span><br><span class="line">├── src</span><br><span class="line">└── target</span><br></pre></td></tr></table></figure><p>进入src目录后，我们发现它里面的目录结构如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">├── main</span><br><span class="line">│   ├── java<span class="comment">#项目代码</span></span><br><span class="line">│   ├── resources<span class="comment">#配置文件</span></span><br><span class="line">│   └── webapp<span class="comment">#页面资源</span></span><br><span class="line">└── <span class="built_in">test</span></span><br><span class="line">├── java<span class="comment">#测试代码</span></span><br><span class="line">    └──resources </span><br><span class="line"></span><br><span class="line">6 directories, 0 files</span><br></pre></td></tr></table></figure><table><thead><tr><th>文件</th><th>说明</th></tr></thead><tbody><tr><td>src/main/java</td><td>存放项目的.java文件</td></tr><tr><td>src/main/resources</td><td>存放项目资源文件，如spring, mybatis配置文件</td></tr><tr><td>src/test/java</td><td>存放所有单元测试.java文件，如junit测试类</td></tr><tr><td>src/test/resources</td><td>测试资源文件</td></tr><tr><td>target</td><td>项目输出位置，编译后的class文件会输出到此目录</td></tr><tr><td>pom.xml</td><td>maven项目核心配置文</td></tr></tbody></table><ul><li>注意:如果是普通的java项目，那么就没有webapp目录。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">完整java项目</span><br><span class="line">java工程名（项目名）</span><br><span class="line">|-- src目录</span><br><span class="line">|-- main目录（主干代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- <span class="built_in">test</span>目录（测试代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- pom.xml（maven工程核心配置文件）</span><br><span class="line">|-- target目录（存放编译后的class文件.....）</span><br><span class="line"></span><br><span class="line">* web项目【重点】</span><br><span class="line">web工程名（项目名）</span><br><span class="line">|-- src目录</span><br><span class="line">|-- main目录（主干代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- webapp目录（页面资源）</span><br><span class="line">|-- WEB-INF</span><br><span class="line">|-- web.xml(web工程核心配置文件)</span><br><span class="line">|-- index.jsp</span><br><span class="line">|-- css、js、img..</span><br><span class="line">|-- <span class="built_in">test</span>目录（测试代码）</span><br><span class="line">|-- java目录（java代码）</span><br><span class="line">|-- resources目录（配置文件）</span><br><span class="line">|-- pom.xml（maven工程核心配置文件）</span><br><span class="line">|-- target目录（存放编译后的class文件.....）</span><br></pre></td></tr></table></figure><h5 id="2-4-2-Maven工程的运行"><a href="#2-4-2-Maven工程的运行" class="headerlink" title="2.4.2 Maven工程的运行"></a>2.4.2 Maven工程的运行</h5><p>进入maven工程目录(当前目录有pom.xml文件)，运行tomcat7:run命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">~ mvn tomcat7:run</span><br><span class="line"></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] &gt;&gt;&gt; tomcat7-maven-plugin:2.2:run (default-cli) &gt; process-classes @ maven_web &gt;&gt;&gt;</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Changes detected - recompiling the module!</span><br><span class="line">[INFO] Compiling 1 <span class="built_in">source</span> file to /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/classes</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] &lt;&lt;&lt; tomcat7-maven-plugin:2.2:run (default-cli) &lt; process-classes @ maven_web &lt;&lt;&lt;</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- tomcat7-maven-plugin:2.2:run (default-cli) @ maven_web ---</span><br><span class="line">[INFO] Running war on http://localhost:8080/</span><br><span class="line">[INFO] Creating Tomcat server configuration at /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/tomcat</span><br><span class="line">[INFO] create webapp with contextPath: </span><br><span class="line">May 15, 2020 10:29:37 PM org.apache.coyote.AbstractProtocol init</span><br><span class="line">INFO: Initializing ProtocolHandler [<span class="string">"http-bio-8080"</span>]</span><br><span class="line">May 15, 2020 10:29:37 PM org.apache.catalina.core.StandardService startInternal</span><br><span class="line">INFO: Starting service Tomcat</span><br><span class="line">May 15, 2020 10:29:37 PM org.apache.catalina.core.StandardEngine startInternal</span><br><span class="line">INFO: Starting Servlet Engine: Apache Tomcat/7.0.47</span><br><span class="line">May 15, 2020 10:29:38 PM org.apache.coyote.AbstractProtocol start</span><br><span class="line">INFO: Starting ProtocolHandler [<span class="string">"http-bio-8080"</span>]</span><br></pre></td></tr></table></figure><p>根据上边的提示信息,访问<a href="http://localhost:8080/">http://localhost:8080/</a>  即可</p><h1 id="三-Maven生命周期和插件"><a href="#三-Maven生命周期和插件" class="headerlink" title="三.Maven生命周期和插件"></a>三.Maven生命周期和插件</h1><h4 id="3-1-Maven常用命令和插件"><a href="#3-1-Maven常用命令和插件" class="headerlink" title="3.1 Maven常用命令和插件"></a>3.1 Maven常用命令和插件</h4><h5 id="3-1-1-clean"><a href="#3-1-1-clean" class="headerlink" title="3.1.1 clean"></a>3.1.1 clean</h5><p>clean是maven工程的清理命令，执行 clean会删除target目录及内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">~ mvn clean</span><br><span class="line"> </span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ maven_web ---</span><br><span class="line">[INFO] Deleting /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 0.228 s</span><br><span class="line">[INFO] Finished at: 2020-05-15T23:52:52+08:00</span><br><span class="line">[INFO] Final Memory: 9M/309M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h5 id="3-1-2-compile"><a href="#3-1-2-compile" class="headerlink" title="3.1.2 compile"></a>3.1.2 compile</h5><p>compile是maven工程的编译命令，作用是将src/main/java下的文件编译为class文件输出到target目录下。</p><p>将src中main目录下java代码进行编译，将src中main目录下配置抽取，输出到target目录: classes目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">~ mvn compile</span><br><span class="line"></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Changes detected - recompiling the module!</span><br><span class="line">[INFO] Compiling 1 <span class="built_in">source</span> file to /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/classes</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 0.952 s</span><br><span class="line">[INFO] Finished at: 2020-05-15T23:56:28+08:00</span><br><span class="line">[INFO] Final Memory: 13M/209M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">～ ll  ./target/classes/cn/itcast/web/servlet/</span><br><span class="line"> </span><br><span class="line">total 8</span><br><span class="line">-rw-r--r--  1 swzxsyh  staff   1.1K May 15 23:56 HelloServlet.class</span><br></pre></td></tr></table></figure><h5 id="3-1-3-test"><a href="#3-1-3-test" class="headerlink" title="3.1.3 test"></a>3.1.3 test</h5><p>test是maven工程的测试命令 mvn test，会执行src/test/java下的单元测试类，并编译为class文件。</p><p>mvn test=&gt;target编译main代码=&gt;编译test代码=&gt;执行所有测试代码，类名xxxTest结尾，必须有@Test注解的方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">~ mvn <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line"></span><br><span class="line"><span class="comment">#清理target目录</span></span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line"><span class="comment">#编译src/main主干</span></span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line"><span class="comment">#编译src/test测试目录</span></span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ maven_web ---</span><br><span class="line">[INFO] Changes detected - recompiling the module!</span><br><span class="line">[INFO] Compiling 1 <span class="built_in">source</span> file to /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/<span class="built_in">test</span>-classes</span><br><span class="line">[INFO] </span><br><span class="line"><span class="comment"># 针对test目录下的测试代码，逐一测试</span></span><br><span class="line">[INFO] --- maven-surefire-plugin:2.12.4:<span class="built_in">test</span> (default-test) @ maven_web ---</span><br><span class="line">[INFO] Surefire report directory: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/surefire-reports</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------</span><br><span class="line"> T E S T S</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Running cn.itcast.test.HelloTest</span><br><span class="line">仅在测试期有效</span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 sec</span><br><span class="line"></span><br><span class="line">Results :</span><br><span class="line"></span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line"></span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 1.509 s</span><br><span class="line">[INFO] Finished at: 2020-05-16T00:00:02+08:00</span><br><span class="line">[INFO] Final Memory: 15M/212M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h5 id="3-1-4-package"><a href="#3-1-4-package" class="headerlink" title="3.1.4 package"></a>3.1.4 package</h5><p>package是maven工程的打包命令，对于java工程执行package打成jar包，对于web工程打成war包。</p><p>mvn package=&gt;编译main代码=&gt;编译test代码=&gt;执行测试=&gt;将项目打成war包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">~ mvn package</span><br><span class="line"> </span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-surefire-plugin:2.12.4:<span class="built_in">test</span> (default-test) @ maven_web ---</span><br><span class="line">[INFO] Surefire report directory: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/surefire-reports</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------</span><br><span class="line"> T E S T S</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Running cn.itcast.test.HelloTest</span><br><span class="line">仅在测试期有效</span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.048 sec</span><br><span class="line"></span><br><span class="line">Results :</span><br><span class="line"></span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line"></span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-war-plugin:2.2:war (default-war) @ maven_web ---</span><br><span class="line">[INFO] Packaging webapp</span><br><span class="line">[INFO] Assembling webapp [maven_web] <span class="keyword">in</span> [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT]</span><br><span class="line">[INFO] Processing war project</span><br><span class="line">[INFO] Copying webapp resources [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/src/main/webapp]</span><br><span class="line">[INFO] Webapp assembled <span class="keyword">in</span> [49 msecs]</span><br><span class="line">[INFO] Building war: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT.war</span><br><span class="line">[INFO] WEB-INF/web.xml already added, skipping</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 1.528 s</span><br><span class="line">[INFO] Finished at: 2020-05-16T00:05:14+08:00</span><br><span class="line">[INFO] Final Memory: 12M/294M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">~ find . -name <span class="string">'*war'</span>  </span><br><span class="line">./target/maven_web-1.0-SNAPSHOT.war</span><br><span class="line"><span class="comment">#此包可以直接放在tomcat的webapp下执行</span></span><br></pre></td></tr></table></figure><ul><li><p>注意：为什么maven_hello是war包而不是jar包呢？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat pom.xml| grep -ri <span class="string">'packaging'</span> </span><br><span class="line">(standard input):    &lt;packaging&gt;war&lt;/packaging&gt;</span><br><span class="line"><span class="comment">#导包方式：jar默认，手动指定war</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="3-1-5-install"><a href="#3-1-5-install" class="headerlink" title="3.1.5 install"></a>3.1.5 install</h5><p>install是maven工程的安装命令，执行install将maven打成jar包或war包发布到本地仓库。</p><p>mvn install=&gt;编译main代码=&gt;编译test代码=&gt;执行测试=&gt;将项目打成war包=&gt;安装到本地库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">~ mvn install</span><br><span class="line"> </span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building maven_web 1.0-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven_web ---</span><br><span class="line">[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!</span><br><span class="line">[INFO] Copying 0 resource</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ maven_web ---</span><br><span class="line">[INFO] Nothing to compile - all classes are up to date</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-surefire-plugin:2.12.4:<span class="built_in">test</span> (default-test) @ maven_web ---</span><br><span class="line">[INFO] Surefire report directory: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/surefire-reports</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------</span><br><span class="line"> T E S T S</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">Running cn.itcast.test.HelloTest</span><br><span class="line">仅在测试期有效</span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.053 sec</span><br><span class="line"></span><br><span class="line">Results :</span><br><span class="line"></span><br><span class="line">Tests run: 1, Failures: 0, Errors: 0, Skipped: 0</span><br><span class="line"></span><br><span class="line">[INFO] </span><br><span class="line">[INFO] --- maven-war-plugin:2.2:war (default-war) @ maven_web ---</span><br><span class="line">[INFO] Packaging webapp</span><br><span class="line">[INFO] Assembling webapp [maven_web] <span class="keyword">in</span> [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT]</span><br><span class="line">[INFO] Processing war project</span><br><span class="line">[INFO] Copying webapp resources [/Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/src/main/webapp]</span><br><span class="line">[INFO] Webapp assembled <span class="keyword">in</span> [32 msecs]</span><br><span class="line">[INFO] Building war: /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT.war</span><br><span class="line">[INFO] WEB-INF/web.xml already added, skipping</span><br><span class="line">[INFO] </span><br><span class="line"></span><br><span class="line"><span class="comment"># 将自己的代码，编译到本地仓库，之后可以上传到远程仓库，服务器自动下载部署</span></span><br><span class="line">[INFO] --- maven-install-plugin:2.4:install (default-install) @ maven_web ---</span><br><span class="line">[INFO] Installing /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/target/maven_web-1.0-SNAPSHOT.war to /Users/swzxsyh/Program/repository/cn/itcast/maven_web/1.0-SNAPSHOT/maven_web-1.0-SNAPSHOT.war</span><br><span class="line">[INFO] Installing /Users/swzxsyh/Downloads/Day54-maven基础&amp;环境搭建/代码/maven_web/pom.xml to /Users/swzxsyh/Program/repository/cn/itcast/maven_web/1.0-SNAPSHOT/maven_web-1.0-SNAPSHOT.pom</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time: 1.522 s</span><br><span class="line">[INFO] Finished at: 2020-05-16T00:08:09+08:00</span><br><span class="line">[INFO] Final Memory: 12M/297M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p><strong>从运行结果中，可以看出: 当后面的命令执行时，前面的操作过程也都会自动执行</strong></p><h5 id="3-1-6-deploy"><a href="#3-1-6-deploy" class="headerlink" title="3.1.6 deploy"></a>3.1.6 deploy</h5><p>maven工程部署命令，将jar或war包部署（上传）到私服中。</p><h4 id="3-2-Maven生命周期"><a href="#3-2-Maven生命周期" class="headerlink" title="3.2 Maven生命周期"></a>3.2 Maven生命周期</h4><p>maven对项目构建过程分为三套相互独立的生命周期，请注意这里说的是“三套”，而且“相互独立”。</p><p>在同一个生命周期中的命令,执行后面的命令,前面的命令自动执行</p><table><thead><tr><th>三套名称</th><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>Clean Lifecycle</td><td>在进行真正的构建之前进行一些清理工作。</td><td>clean</td></tr><tr><td>Default Lifecycle</td><td>构建的核心部分，编译，测试，打包，部署等等。</td><td>compile,test,package,install,deploy</td></tr><tr><td>Site Lifecycle</td><td>生成项目报告，站点，发布站点。</td><td>site</td></tr></tbody></table><h5 id="3-2-1-clean生命周期-clean生命周期的目的是清理项目"><a href="#3-2-1-clean生命周期-clean生命周期的目的是清理项目" class="headerlink" title="3.2.1 clean生命周期 clean生命周期的目的是清理项目"></a>3.2.1 clean生命周期 clean生命周期的目的是清理项目</h5><table><thead><tr><th>阶段</th><th>描述</th></tr></thead><tbody><tr><td>pre-clean</td><td>执行一些需要在clean之前完成的工作</td></tr><tr><td>clean</td><td>移除所有上一次构建生成的文件</td></tr><tr><td>post-clean</td><td>执行一些需要在clean之后立刻完成的工作</td></tr></tbody></table><h5 id="3-2-2-default生命周期"><a href="#3-2-2-default生命周期" class="headerlink" title="3.2.2 default生命周期"></a>3.2.2 default生命周期</h5><p>default生命周期定义了真正构件时所需要执行的所有步骤，它是生命周期中最核心的部分</p><table><thead><tr><th>生命周期阶段</th><th>描述</th></tr></thead><tbody><tr><td>validate(校验)</td><td>校验项目是否正确并且所有必要的信息可以完成项目的构建过程。</td></tr><tr><td>initialize(初始化)</td><td>初始化构建状态，比如设置属性值。</td></tr><tr><td>generate-sources(生成源代码)</td><td>生成包含在编译阶段中的任何源代码。</td></tr><tr><td>process-sources(处理源代码)</td><td>处理源代码，比如说，过滤任意值。</td></tr><tr><td>generate-resources(生成资源文件)</td><td>生成将会包含在项目包中的资源文件。</td></tr><tr><td>process-resources (处理资源文件)</td><td>复制和处理资源到目标目录，为打包阶段最好准备。</td></tr><tr><td>compile(编译)</td><td>编译项目的源代码。</td></tr><tr><td>process-classes(处理类文件)</td><td>处理编译生成的文件，比如说对Java class文件做字节码改善优化。</td></tr><tr><td>generate-test-sources(生成测试源代 码)</td><td>生成包含在编译阶段中的任何测试源代码。</td></tr><tr><td>process-test-sources(处理测试源代 码)</td><td>处理测试源代码，比如说，过滤任意值。</td></tr><tr><td>generate-test-resources(生成测试资源 文件)</td><td>为测试创建资源文件。</td></tr><tr><td>process-test-resources(处理测试资源 文件)</td><td>复制和处理测试资源到目标目录。</td></tr><tr><td>test-compile(编译测试源码)</td><td>编译测试源代码到测试目标目录.</td></tr><tr><td>process-test-classes(处理测试类文件)</td><td>处理测试源码编译生成的文件。</td></tr><tr><td>test(测试)</td><td>使用合适的单元测试框架运行测试(Juint是其中之一)。</td></tr><tr><td>prepare-package(准备打包)</td><td>在实际打包之前，执行任何的必要的操作为打包做准备。</td></tr><tr><td>package(打包)</td><td>将编译后的代码打包成可分发格式的文件，比如JAR、WAR或者 EAR文件。</td></tr><tr><td>pre-integration-test(集成测试前)</td><td>在执行集成测试前进行必要的动作。比如说，搭建需要的环境。</td></tr><tr><td>integration-test(集成测试)</td><td>处理和部署项目到可以运行集成测试环境中。</td></tr><tr><td>post-integration-test(集成测试后)</td><td>在执行集成测试完成后进行必要的动作。比如说，清理集成测试 环境。</td></tr><tr><td>verify (验证)</td><td>运行任意的检查来验证项目包有效且达到质量标准。</td></tr><tr><td>install(安装)</td><td>安装项目包到本地仓库，这样项目包可以用作其他本地项目的依赖。</td></tr><tr><td>deploy(部署)</td><td>将最终的项目包复制到远程仓库中与其他开发者和项目共享。</td></tr></tbody></table><h5 id="3-2-3-site生命周期"><a href="#3-2-3-site生命周期" class="headerlink" title="3.2.3 site生命周期"></a>3.2.3 site生命周期</h5><p>site生命周期的目的是建立和发布项目站点，Maven能够基于POM所包含的信息，自动生成一个友好的站点，方便团 队交流和发布项目信息。</p><table><thead><tr><th>阶段</th><th>描述</th></tr></thead><tbody><tr><td>pre-site</td><td>执行一些需要在生成站点文档之前完成的工作</td></tr><tr><td>site</td><td>生成项目的站点文档</td></tr><tr><td>post-site</td><td>执行一些需要在生成站点文档之后完成的工作，并且为部署做准备</td></tr><tr><td>site-deploy</td><td>将生成的站点文档部署到特定的服务器上</td></tr></tbody></table><h4 id="3-3-Maven概念模型"><a href="#3-3-Maven概念模型" class="headerlink" title="3.3 Maven概念模型"></a>3.3 Maven概念模型</h4><p>Maven 包含了一个项目对象模型 (POM:Project Object Model)，一组标准集合，一个项目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在生命周期阶段(phase)中插 件(plugin)目标(goal)的逻辑。</p><p><img src="1589427711479.png" alt=""></p><ul><li><p>项目对象模型 (Project Object Model)</p><p>一个maven工程都有一个pom.xml文件，通过pom.xml文件定义项目的坐标、项目依赖、项目信息、插件目标等。</p></li><li><p>依赖管理系统(Dependency Management System)</p><p>通过maven的依赖管理对项目所依赖的jar 包进行统一管理。比如:项目依赖junit4.12，通过在pom.xml中定义 junit4.12的依赖即使用junit4.12，如下所示是junit4.12的依赖定义:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 依赖关系 --&gt;</span> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 此项目运行使用junit，所以此项目依赖junit --&gt;</span> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的项目名称 --&gt;</span> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit的模块名称 --&gt;</span> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="comment">&lt;!-- junit版本 --&gt;</span> <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 依赖范围:单元测试时使用junit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>一个项目生命周期(Project Lifecycle)</p><p>使用maven完成项目的构建，项目构建包括:清理、编译、测试、部署等过程，maven将这些过程规范为一个生命</p><p>周期</p><table><thead><tr><th>清理</th><th>➡</th><th>编译</th><th>➡</th><th>测试</th><th>➡</th><th>报告</th><th>➡</th><th>打包</th><th>➡</th><th>部署</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table></li><li><p>一组标准集合</p><p>maven将整个项目管理过程定义一组标准。</p><p>比如:通过maven构建工程有标准的目录结构，有标准的生命周期阶 段、依赖管理有标准的坐标定义等。</p></li><li><p>插件(plugin)目标(goal)</p><p>maven 管理项目生命周期过程都是基于插件完成的。</p></li></ul><h1 id="四-IDEA创建Maven工程"><a href="#四-IDEA创建Maven工程" class="headerlink" title="四.IDEA创建Maven工程"></a>四.IDEA创建Maven工程</h1><h4 id="4-1-IDEA配置本地Maven"><a href="#4-1-IDEA配置本地Maven" class="headerlink" title="4.1 IDEA配置本地Maven"></a>4.1 IDEA配置本地Maven</h4><p>进入configure–&gt;settings–&gt;build–&gt;build tools–&gt;Maven中，设置maven工具和本地仓库</p><p>进入configure–&gt;settings–&gt;build–&gt;build tools–&gt;Maven–&gt;Runner中，设置VM Options:-DarchetypeCatalog=internal -Dfile.encoding=GB2312</p><h4 id="4-2-IDEA创建工程"><a href="#4-2-IDEA创建工程" class="headerlink" title="4.2 IDEA创建工程"></a>4.2 IDEA创建工程</h4><ul><li><p>Java工程</p><p>选择Maven，下一步，设置GroupID域名倒写，ArtifactID项目名，Version版本号</p></li><li><p>手动创建test测试配置文件目录</p><p>test目录右击创建resources目录，然后Mark Directory AS选Resources Root</p></li><li><p>指定maven环境的jdk版本和字符集</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- pom.xml --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置编译版本为1.8 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>maven工程命令操作</p><p>打开右侧maven栏，双击命令即可</p></li><li><p>如何导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- pom.xml --&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>安装一个插件JBLJavaToWeb</p><p>点击项目，选择插件功能JBLJavaToWeb即可将Java项目转换为Web项目</p></li></ul><h4 id="4-3-发布web工程"><a href="#4-3-发布web工程" class="headerlink" title="4.3 发布web工程"></a>4.3 发布web工程</h4><ul><li><p>idea使用外置tomcat运行</p><p>Add Configurations–&gt;ADD=&gt;Tomcat(Local)，设置名称Tomcat，其他跟之前项目一样</p></li><li><p>idea使用maven内置tomcat插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 设置编译版本为1.8 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">uriEncoding</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">uriEncoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-4-依赖管理"><a href="#4-4-依赖管理" class="headerlink" title="4.4 依赖管理"></a>4.4 依赖管理</h4><p>我们不考虑依赖范围引起的问题</p><table><thead><tr><th>依赖范围</th><th>对于编译classpath有效</th><th>对于测试classpath有效</th><th>对于运行时classpath有效</th><th>例子</th></tr></thead><tbody><tr><td>compile（默认）</td><td>Y</td><td>Y</td><td>Y</td><td>mybatis</td></tr><tr><td>test</td><td>-</td><td>Y</td><td>-</td><td>junit</td></tr><tr><td><strong>provided</strong></td><td>Y</td><td>Y</td><td>-</td><td>servlet-api</td></tr><tr><td>runtime</td><td>-</td><td>Y</td><td>Y</td><td>JDBC驱动</td></tr><tr><td>system</td><td>Y</td><td>Y</td><td>-</td><td>本地，maven仓库之外的库</td></tr></tbody></table><table><thead><tr><th>依赖范围</th><th>描述</th></tr></thead><tbody><tr><td>compile</td><td>默认依赖范围，作用域在编译、测试、运行时都有效。</td></tr><tr><td>test</td><td>作用域在测试时有效。编译和运行时不需要，比如：Junit。</td></tr><tr><td>provided</td><td>作用域在编译、测试时有效。运行时不需要，比如： servlet api 被 tomcat 容器提供。</td></tr><tr><td>runtime</td><td>作用域在测试、运行时有效。编译时不需要，比如：jdbc的驱动包。</td></tr><tr><td>system</td><td>system范围依赖与provided类似，jar包在本地磁盘而不是maven仓库</td></tr></tbody></table><ul><li><p>在maven_web工程中测试scope:</p><ul><li><p>默认引入 的jar包 </p><p>compile 【默认范围 可以不写】(编译、测试、运行 都有效 ) </p></li><li><p>servlet-api 、jsp-api</p><p>provided (编译、测试 有效， 运行时无效 防止和tomcat下jar冲突) </p></li><li><p>jdbc驱动jar包 </p><p>runtime (测试、运行 有效 )</p></li><li><p>junit </p><p>test (测试有效)</p></li></ul></li></ul><p>依赖范围由强到弱的顺序是:compile&gt;provided&gt;runtime&gt;test</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 介绍</strong></p><p><strong>### 项目管理工具</strong></p><p>- 依赖管理</p><p>​    - 通过maven管理jar包的整个过程</p><p>- 一键构建</p><p>​    - 通过一个maven的一个命令就可以完成工程整个构建的过程</p><p><strong>## 安装和使用</strong></p><p><strong>### 下载和安装</strong></p><p>- 下载 3.5.2 版本</p><p>- 安装解压到非中文路径</p><p>- 配置MAVEN_HOME环境变量</p><p>​    - 依赖java环境</p><p><strong>## 仓库分类</strong></p><p><strong>### 本地仓库</strong></p><p><strong>### 远程仓库</strong></p><p>- 1.中央仓库</p><p>- 2.第三方远程仓库</p><p>​    - 阿里云镜像</p><p>- 3.私服</p><p><strong>### 配置指定本地仓库</strong></p><p>- 帅哥提供5G</p><p>​    - 不建议覆盖</p><p><strong>### 配置阿里云镜像</strong></p><p>- 提高下载速度</p><p><strong>## 命令和插件</strong></p><p><strong>### 1）clean</strong></p><p>- 清理target目录</p><p><strong>### 2）compile</strong></p><p>- 编译 src/main/java</p><p><strong>### 3）test</strong></p><p>- 测试 src/test/java</p><p><strong>### 4）package</strong></p><p>- 将工程进行打包</p><p>​    - jar</p><p>​    - war</p><p><strong>### 5）install</strong></p><p>- 将打包后的工程安装到本地仓库</p><p><strong>### 6）deploy</strong></p><p>- 将本地仓库的jar包或war包上传到私服</p><p><strong>## 生命周期</strong></p><p><strong>### 清理生命周期</strong></p><p>- clean</p><p><strong>### 默认生命周期</strong></p><p>- compile</p><p>​    - test</p><p>​        - package</p><p>​            - install</p><p>​                - deploy</p><p><strong>### 站点生命周期</strong></p><p>- site</p><p><strong>## IDEA配置maven工具</strong></p><p><strong>### 全局settings配置</strong></p><p>- 指定maven工具路径</p><p>- 指定maven工具配置文件路径</p><p>- 指定maven工具本地仓库的路径</p><p><strong>### 指定本地创建maven时，使用本地骨架</strong></p><p>- -DarchetypeCatalog=internal -Dfile.encoding=GB2312</p><p><strong>## IDEA创建maven工程</strong></p><p><strong>### 1)创建java工程</strong></p><p><strong>### 2）创建web工程</strong></p><p>- 下载JBLJavaToWeb插件</p><p><strong>## IDEA发布web工程</strong></p><p><strong>### 1）使用本地tomcat</strong></p><p><strong>### 2）使用tomcat插件</strong></p><p>- pom.xml</p><p><strong>## 依赖范围</strong></p><p><strong>### 1）我们编写的web工程需要手动导入servlet-api 坐标</strong></p><p><strong>### 2）在打成 war包的时候将servlet-api 设置到 /WEB-INF/lib目录下</strong></p><p><strong>### 3）如果与tomcat软件内置的版本不一致，可能会启动报错</strong></p><p><strong>### 4）需要指定jar包的作用范围（provided）</strong></p><p><strong>### 有哪些依赖范围呢？</strong></p><p>- compile</p><p>​    - 默认，在编译、测试、运行期有效</p><p>- test</p><p>​    - 仅在测试期有效</p><p>- provided</p><p>​    - 在编译、测试期有效</p><p>- runtime</p><p>​    - 在测试、运行期有效</p><p>- system</p><p>​    - 从本地中导入jar包</p><p><strong>## 大作业</strong></p><p><strong>### 1）数据库表设计画图（8张表）</strong></p><p><strong>### 2）搭建黑马旅游网</strong></p><p><strong>### 3）安装lombok插件</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;maven基础与环境搭建&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十三）</title>
    <link href="http://yoursite.com/2020/05/13/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B8%89%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/13/就业班学习笔记（五十三）/</id>
    <published>2020-05-13T00:58:41.000Z</published>
    <updated>2020-05-15T20:13:46.174Z</updated>
    
    <content type="html"><![CDATA[<ul><li>注解开发</li></ul><a id="more"></a><h1 id="一-MyBatis注解"><a href="#一-MyBatis注解" class="headerlink" title="一.MyBatis注解"></a>一.MyBatis注解</h1><h4 id="1-1-MyBatis常用注解"><a href="#1-1-MyBatis常用注解" class="headerlink" title="1.1 MyBatis常用注解"></a>1.1 MyBatis常用注解</h4><table><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td>@Insert</td><td>实现新增，代替了&lt;insert&gt;&lt;/insert&gt;</td></tr><tr><td>@Update</td><td>实现更新，代替了&lt;update&gt;&lt;/update&gt;</td></tr><tr><td>@Delete</td><td>实现删除，代替了&lt;delete&gt;&lt;/delete&gt;</td></tr><tr><td>@Select</td><td>实现查询，代替了&lt;select&gt;&lt;/select&gt;</td></tr><tr><td>@Result</td><td>实现结果集封装，代替了&lt;result&gt;&lt;/result&gt;</td></tr><tr><td>@Results</td><td>可以与@Result 一起使用，封装多个结果集，代替了&lt;resultMap&gt;&lt;/resultMap&gt;</td></tr><tr><td>@One</td><td>实现一对一结果集封装，代替了&lt;association&gt;&lt;/association&gt;</td></tr><tr><td>@Many</td><td>实现一对多结果集封装，代替了&lt;collection&gt;&lt;/collection&gt;</td></tr></tbody></table><h4 id="1-2-MyBatis-单表操作"><a href="#1-2-MyBatis-单表操作" class="headerlink" title="1.2 MyBatis 单表操作"></a>1.2 MyBatis 单表操作</h4><ul><li><p>需求</p><p>基于user模块通过注解实现，增删改查</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询所有</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT id AS uid,username AS uname,birthday AS bir,sex AS gender,address AS addr FROM user"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(value = &#123;</span><br><span class="line">            <span class="comment">//resultMap标签手动映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uid"</span>, property = <span class="string">"id"</span>, id = <span class="keyword">true</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uname"</span>, property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"bir"</span>, property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"gender"</span>, property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"addr"</span>, property = <span class="string">"address"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//id查询</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增</span></span><br><span class="line">    <span class="meta">@Insert</span>(<span class="string">"INSERT INTO user (username,birthday,sex,address) VALUES(#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改(动态sql推荐使用xml)</span></span><br><span class="line">    <span class="meta">@Update</span>(<span class="string">"UPDATE user SET username=#&#123;username&#125;,birthday=#&#123;birthday&#125;,sex=#&#123;sex&#125;,address=#&#123;address&#125; WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Delete</span>(<span class="string">"DELETE FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//单表测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//单表测试,查询一个</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = userMapper.findById(<span class="number">41</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"A"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setAddress(<span class="string">"GZ"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line">        userMapper.save(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="number">58</span>);</span><br><span class="line">        user.setUsername(<span class="string">"B"</span>);</span><br><span class="line">        userMapper.save(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        userMapper.delete(<span class="number">58</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-MyBatis多表操作"><a href="#1-3-MyBatis多表操作" class="headerlink" title="1.3 MyBatis多表操作"></a>1.3 MyBatis多表操作</h4><p>注解多表操作是基于嵌套查询来实现</p><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@Results</td><td>结果映射的列表，包含了一个特别结果列如何被映射到属性或字段的详情。属性有：value, id。value 属性是 Result 注解的数组。这个 id 的属性是结果映射的名称。</td></tr><tr><td>@Result</td><td>在列和属性或字段之间的单独结果映射。属性有：id, column, javaType, jdbcType, typeHandler, one, many。id 属性是一个布尔值，来标识应该被用于比较（和在 XML 映射中的<id>相似）的属性。one 属性是单独的联系，和 <association> 相似，而 many 属性是对集合而言的，和<collection>相似。它们这样命名是为了避免名称冲突。</td></tr><tr><td>@One</td><td>复杂类型的单独属性值映射。属性有：select，已映射语句（也就是映射器方法）的全限定名，它可以加载合适类型的实例。fetchType会覆盖全局的配置参数 lazyLoadingEnabled。注意 联合映射在注解 API中是不支持的。这是因为 Java 注解的限制,不允许循环引用。</td></tr><tr><td>@Many</td><td>映射到复杂类型的集合属性。属性有：select，已映射语句（也就是映射器方法）的全限定名，它可以加载合适类型的实例的集合，fetchType 会覆盖全局的配置参数 lazyLoadingEnabled。注意 联合映射在注解 API中是不支持的。这是因为 Java 注解的限制，不允许循环引用</td></tr></tbody></table><h5 id="1-3-1-一对一查询"><a href="#1-3-1-一对一查询" class="headerlink" title="1.3.1 一对一查询"></a>1.3.1 一对一查询</h5><ul><li><p>需求</p><p>查询一个订单，与此同时查询出该订单所属的用户</p></li><li><p>一对一查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders <span class="keyword">where</span> <span class="keyword">id</span> = <span class="comment">#&#123;id&#125;;</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="comment">#&#123;订单的uid&#125;;</span></span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一对一嵌套注解</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM orders WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(value = &#123;</span><br><span class="line">            <span class="comment">//resultMap标签手动映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uid"</span>, property = <span class="string">"id"</span>, id = <span class="keyword">true</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uname"</span>, property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"bir"</span>, property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"gender"</span>, property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"addr"</span>, property = <span class="string">"address"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(property = <span class="string">"user"</span>, javaType = User<span class="class">.<span class="keyword">class</span>, <span class="title">column</span> </span>= <span class="string">"uid"</span>, one = <span class="meta">@One</span>(select = <span class="string">"com.itheima.dao.UserMapper.findById"</span>,fetchType = FetchType.EAGER))</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">findByIdWithUsers</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//id查询</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>注解嵌套</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一对一嵌套注解</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM orders WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(value = &#123;</span><br><span class="line">            <span class="comment">//resultMap标签手动映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uid"</span>, property = <span class="string">"id"</span>, id = <span class="keyword">true</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"uname"</span>, property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"bir"</span>, property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"gender"</span>, property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"addr"</span>, property = <span class="string">"address"</span>),</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//注解嵌套</span></span><br><span class="line">      <span class="meta">@Result</span>(property = <span class="string">"user"</span>, javaType = User<span class="class">.<span class="keyword">class</span>, <span class="title">column</span> </span>= <span class="string">"uid"</span>, one = <span class="meta">@One</span>(select = <span class="string">"com.itheima.dao.UserMapper.findById"</span>,fetchType = FetchType.EAGER))</span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">findByIdWithUsers</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一对一嵌套注解测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithUsers</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        OrderMapper orderMapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        Order order = orderMapper.findByIdWithUsers(<span class="number">1</span>);</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-3-2-一对多查询"><a href="#1-3-2-一对多查询" class="headerlink" title="1.3.2 一对多查询"></a>1.3.2 一对多查询</h5><ul><li><p>需求</p><p>查询一个用户，与此同时查询出该用户具有的订单</p></li><li><p>一对多查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="comment">#&#123;id&#125;;</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders <span class="keyword">where</span> uid = <span class="comment">#&#123;用户id&#125;;</span></span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一对多注解嵌套查询</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="meta">@Results</span>(&#123; <span class="comment">// resultMap标签手动映射</span></span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id=<span class="keyword">true</span>), <span class="comment">// result标签映射封装</span></span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"username"</span>,property = <span class="string">"username"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"birthday"</span>,property = <span class="string">"birthday"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"sex"</span>,property = <span class="string">"sex"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"address"</span>,property = <span class="string">"address"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(property = <span class="string">"orderList"</span>,javaType = List<span class="class">.<span class="keyword">class</span>,<span class="title">column</span> </span>= <span class="string">"id"</span>,many = <span class="meta">@Many</span>(select = <span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrders</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select</span>(<span class="string">"SELECT * FROM orders WHERE uid = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Order&gt; <span class="title">findByUid</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>注解嵌套</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">//一对多注解嵌套查询</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(&#123; <span class="comment">// resultMap标签手动映射</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id=<span class="keyword">true</span>), <span class="comment">// result标签映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"username"</span>,property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"birthday"</span>,property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"sex"</span>,property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"address"</span>,property = <span class="string">"address"</span>),</span><br><span class="line">            </span><br><span class="line"><span class="meta">@Result</span>(property = <span class="string">"orderList"</span>,javaType = List<span class="class">.<span class="keyword">class</span>,<span class="title">column</span> </span>= <span class="string">"id"</span>,many = <span class="meta">@Many</span>(select = <span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>))</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrders</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一对多注解测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithOrders</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user = userMapper.findByIdWithOrders(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    System.out.println(user.getOrderList());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-3-3-多对多查询"><a href="#1-3-3-多对多查询" class="headerlink" title="1.3.3 多对多查询"></a>1.3.3 多对多查询</h5><ul><li><p>需求</p><p>查询用户同时查询出该用户的所有角色</p></li><li><p>多对多查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="comment">#&#123;id&#125;;</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">role</span> r <span class="keyword">INNER</span> <span class="keyword">JOIN</span> user_role ur <span class="keyword">ON</span> r.<span class="string">`id`</span> = ur.<span class="string">`rid`</span> </span><br><span class="line"><span class="keyword">WHERE</span> ur.<span class="string">`uid`</span> = <span class="comment">#&#123;用户id&#125;;</span></span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多对多注解嵌套查询</span></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line"><span class="meta">@Results</span>(&#123; <span class="comment">// resultMap标签手动映射</span></span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id=<span class="keyword">true</span>), <span class="comment">// result标签映射封装</span></span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"username"</span>,property = <span class="string">"username"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"birthday"</span>,property = <span class="string">"birthday"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"sex"</span>,property = <span class="string">"sex"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(column = <span class="string">"address"</span>,property = <span class="string">"address"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(property = <span class="string">"roleList"</span>,javaType = List<span class="class">.<span class="keyword">class</span>,<span class="title">column</span> </span>= <span class="string">"id"</span>,many = <span class="meta">@Many</span>(select = <span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithRoles</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>RoleMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RoleMapper</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM role r INNER JOIN user_role ur ON ur.`rid = r.`id` WHERE ur.`uid`=#&#123;uid&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(value = &#123;</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id = <span class="keyword">true</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"role_name"</span>,property = <span class="string">"roleName"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"role_desc"</span>,property = <span class="string">"roleDesc"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Role&gt; <span class="title">findByUid</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>注解嵌套</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">//多对多注解嵌套查询</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM user WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@Results</span>(&#123; <span class="comment">// resultMap标签手动映射</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"id"</span>,property = <span class="string">"id"</span>,id=<span class="keyword">true</span>), <span class="comment">// result标签映射封装</span></span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"username"</span>,property = <span class="string">"username"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"birthday"</span>,property = <span class="string">"birthday"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"sex"</span>,property = <span class="string">"sex"</span>),</span><br><span class="line">            <span class="meta">@Result</span>(column = <span class="string">"address"</span>,property = <span class="string">"address"</span>),</span><br><span class="line">            </span><br><span class="line">      </span><br><span class="line"><span class="meta">@Result</span>(property = <span class="string">"roleList"</span>,javaType = List<span class="class">.<span class="keyword">class</span>,<span class="title">column</span> </span>= <span class="string">"id"</span>,many = <span class="meta">@Many</span>(select = <span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>))</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithRoles</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多对多注解测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithRoles</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    User user = userMapper.findByIdWithRoles(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    System.out.println(user.getOrderList());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-延迟加载"><a href="#1-4-延迟加载" class="headerlink" title="1.4 延迟加载"></a>1.4 延迟加载</h4><p>不管是一对多还是多对多 ，在注解配置中都有fetchType的属性</p><ul><li><p>fetchType = FetchType.LAZY    表示懒加载</p></li><li><p>fetchType = FetchType.EAGER   表示立即加载</p></li><li><p>fetchType = FetchType.DEFAULT 表示使用全局配置</p></li></ul><h4 id="1-5-二级缓存"><a href="#1-5-二级缓存" class="headerlink" title="1.5 二级缓存"></a>1.5 二级缓存</h4><p>配置SqlMapConfig.xml文件开启二级缓存的支持</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">因为cacheEnabled的取值默认就为true，所以这一步可以省略不配置。</span></span><br><span class="line"><span class="comment">为true代表开启二级缓存；为false代表不开启二级缓存。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"cacheEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>在Mapper接口中使用注解配置二级缓存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CacheNamespace</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;...&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-6-知识小结"><a href="#1-6-知识小结" class="headerlink" title="1.6 知识小结"></a>1.6 知识小结</h4><ul><li><p>注解开发和xml配置相比，从开发效率来说，注解编写更简单，效率更高。</p></li><li><p>从可维护性来说，注解如果要修改，必须修改源码，会导致维护成本增加。xml维护性更强。</p></li><li><p>经验：单表简单CRUD可以使用注解、多表及动态sql就用xml</p></li></ul><h1 id="二-MyBatis案例练习"><a href="#二-MyBatis案例练习" class="headerlink" title="二.MyBatis案例练习"></a>二.MyBatis案例练习</h1><h4 id="2-1-编程风格"><a href="#2-1-编程风格" class="headerlink" title="2.1 编程风格"></a>2.1 编程风格</h4><p>浏览器：Chrome、Firefox</p><p>包目录：cn(com).公司名.项目名（都是小写）</p><p>类：大驼峰式命名</p><p>方法名：小驼峰式命名</p><h4 id="2-2-环境搭建"><a href="#2-2-环境搭建" class="headerlink" title="2.2 环境搭建"></a>2.2 环境搭建</h4><ul><li><p>编写中文过滤器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        servletRequest.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-查询所有"><a href="#2-3-查询所有" class="headerlink" title="2.3 查询所有"></a>2.3 查询所有</h4><h5 id="2-3-1-需求和效果实现"><a href="#2-3-1-需求和效果实现" class="headerlink" title="2.3.1 需求和效果实现"></a>2.3.1 需求和效果实现</h5><p>通过三层架构+接口+mybatis，查询员工信息，在页面展示</p><h5 id="2-3-2需求分析"><a href="#2-3-2需求分析" class="headerlink" title="2.3.2需求分析"></a>2.3.2需求分析</h5><p>index.jsp–&gt;EmpServlet–&gt;EmpService接口EmpServiceImp实现类–&gt;EmpDao接口+EmpDao映射，最终返给list.jsp</p><h5 id="2-3-3-代码实现"><a href="#2-3-3-代码实现" class="headerlink" title="2.3.3 代码实现"></a>2.3.3 代码实现</h5><ul><li><p>index.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/emp?action=findAll"</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Emp实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Emp</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String joindate;</span><br><span class="line">    <span class="keyword">private</span> Double salary;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"><span class="comment">//此处省略getter/setter，toString</span></span><br></pre></td></tr></table></figure></li><li><p>EmpServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/EmpServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmpServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写service方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取action请求参数</span></span><br><span class="line">        String action = request.getParameter(<span class="string">"action"</span>);</span><br><span class="line">        <span class="comment">// 判断</span></span><br><span class="line">        <span class="keyword">if</span> (action.equals(<span class="string">"findAll"</span>)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.findAll(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询所有</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findAll</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.调用service查询</span></span><br><span class="line">        EmpService empService = <span class="keyword">new</span> EmpServiceImpl();</span><br><span class="line">        List&lt;Emp&gt; list = empService.findAll();</span><br><span class="line">        <span class="comment">// 2.将list写入request域</span></span><br><span class="line">        request.setAttribute(<span class="string">"list"</span>, list);</span><br><span class="line">        <span class="comment">// 3.转发</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>EmpServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmpServiceImpl</span> <span class="keyword">implements</span> <span class="title">EmpService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Emp&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 通过mybatis工具类获取sqlSession</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        <span class="comment">// 创建EmpDao代理对象</span></span><br><span class="line">        EmpDao empDao = sqlSession.getMapper(EmpDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 查询</span></span><br><span class="line">        List&lt;Emp&gt; list= empDao.findAll();</span><br><span class="line">        <span class="comment">// 关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>EmpDao（接口+映射）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.EmpDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"Emp"</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>list.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$&#123;list&#125;"</span> <span class="attr">var</span>=<span class="string">"emp"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.id&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.ename&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.joindate&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.salary&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.address&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-分页查询"><a href="#2-4-分页查询" class="headerlink" title="2.4 分页查询"></a>2.4 分页查询</h4><h5 id="2-4-1-导入数据"><a href="#2-4-1-导入数据" class="headerlink" title="2.4.1 导入数据"></a>2.4.1 导入数据</h5><h5 id="2-4-2-分页介绍"><a href="#2-4-2-分页介绍" class="headerlink" title="2.4.2 分页介绍"></a>2.4.2 分页介绍</h5><p>在实际开发中，如果数据库数据太多，一般我们需要进行分页查询，提高效率</p><ul><li><p>分页技术实现</p><p>物理分页：数据库实现（MySQL、Oracle）</p><p>内存分页：查询全部，在通过java代码进行分页</p></li><li><p>使用MySQL操作物理分页</p><ul><li><p>语法：    select * from 表名 limit 开始索引,每页个数;    </p></li><li><p>模拟百度分页，一个显示5条，数据库共有16条记录  </p><ul><li><p>第一页    </p><p>select * from 表名 limit 0,5;  </p></li><li><p>第二页    </p><p>select * from 表名 limit 5,5;  </p></li><li><p>第三页    </p><p>select * from 表名 limit 10,5;  </p></li><li><p>第四页    </p><p>select * from 表名 limit 15,5;    </p></li><li><p>索引公式    </p><p>开始索引=(当前页-1) × 每页个数    </p></li><li><p>如何获得当前页和每页个数</p><p>前端页提供</p></li></ul></li></ul></li></ul><h5 id="2-4-3-需求和效果实现"><a href="#2-4-3-需求和效果实现" class="headerlink" title="2.4.3 需求和效果实现"></a>2.4.3 需求和效果实现</h5><p>通过mysql物理分页，一个显示5条，数据库共有16条记录</p><h5 id="2-4-3-需求分析"><a href="#2-4-3-需求分析" class="headerlink" title="2.4.3 需求分析"></a>2.4.3 需求分析</h5><p><img src="1589342693907.png" alt=""></p><ul><li><p>后端代码流程图</p><p><img src="1589350595261.png" alt=""></p></li></ul><h5 id="2-4-4-代码实现"><a href="#2-4-4-代码实现" class="headerlink" title="2.4.4 代码实现"></a>2.4.4 代码实现</h5><ul><li><p>index.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&lt;%--&lt;a href="$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findAll"&gt;员工列表&lt;/a&gt;--%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=1&amp;pageSize=5"</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>PageBean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageBean</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer totalCount; <span class="comment">// 总记录数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer totalPage;<span class="comment">// 总页数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;E&gt; list; <span class="comment">// 结果集</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer currentPage; <span class="comment">// 当前页</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer pageSize; <span class="comment">// 每页个数</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//此处省略getter/setter，toString</span></span><br></pre></td></tr></table></figure></li><li><p>EmpServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/EmpServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmpServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写service方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 获取action请求参数</span></span><br><span class="line">        String action = req.getParameter(<span class="string">"action"</span>);</span><br><span class="line">        <span class="comment">// 判断</span></span><br><span class="line">        <span class="keyword">if</span> (action.equals(<span class="string">"findAll"</span>)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.findAll(req, resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action.equals(<span class="string">"findByPage"</span>)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.findByPage(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    EmpService empService = <span class="keyword">new</span> EmpServiceImpl();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">findByPage</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String currentPageStr = req.getParameter(<span class="string">"currentPage"</span>);</span><br><span class="line">        String pageSizeStr = req.getParameter(<span class="string">"pageSize"</span>);</span><br><span class="line">        <span class="comment">// 2.转为整型</span></span><br><span class="line">        <span class="keyword">int</span> currentPage = Integer.parseInt(currentPageStr);</span><br><span class="line">        <span class="keyword">int</span> pageSize = Integer.parseInt(pageSizeStr);</span><br><span class="line">        <span class="comment">// 3.调用service查询</span></span><br><span class="line">        PageBean&lt;Emp&gt; pb = empService.findByPage(currentPage, pageSize);</span><br><span class="line">        <span class="comment">// 4.设置到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"pb"</span>, pb);</span><br><span class="line">        <span class="comment">// 5.转发</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>EmpServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmpServiceImpl</span> <span class="keyword">implements</span> <span class="title">EmpService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Emp&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 通过mybatis工具类获取sqlSession</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        <span class="comment">// 创建EmpDao代理对象</span></span><br><span class="line">        EmpDao empDao = sqlSession.getMapper(EmpDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 查询</span></span><br><span class="line">        List&lt;Emp&gt; list = empDao.findAll();</span><br><span class="line">        <span class="comment">// 关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageBean&lt;Emp&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> currentPage,<span class="keyword">int</span> pageSize)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 通过mybatis工具类获取sqlSession</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建EmpDao代理对象</span></span><br><span class="line">        EmpDao empDao = sqlSession.getMapper(EmpDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建 PageBean</span></span><br><span class="line">        PageBean&lt;Emp&gt; pageBean = <span class="keyword">new</span> PageBean();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.封装当前页和每页个数</span></span><br><span class="line">        pageBean.setCurrentPage(currentPage);</span><br><span class="line">        pageBean.setPageSize(pageSize);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.调用dao查询总记录数并封装</span></span><br><span class="line">        Integer totalCount = empDao.findCount();</span><br><span class="line">        pageBean.setTotalCount(totalCount);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.计算并封装总页数</span></span><br><span class="line">        <span class="keyword">int</span> totalPage = (<span class="keyword">int</span>)Math.ceil(totalCount*<span class="number">1.0</span>/pageSize);</span><br><span class="line">        pageBean.setTotalPage(totalPage);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.计算开始索引</span></span><br><span class="line">        <span class="keyword">int</span> index = (currentPage - <span class="number">1</span>) * pageSize;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6.调用dao查询结果集并封装</span></span><br><span class="line">        List&lt;Emp&gt; list = empDao.findList(index,pageSize);</span><br><span class="line">        pageBean.setList(list);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">        <span class="comment">// 7.返回pageBean对象</span></span><br><span class="line">        <span class="keyword">return</span> pageBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>EmpDao（接口+映射）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EmpDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Emp&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看总记录</span></span><br><span class="line">    <span class="function">Integer <span class="title">findCount</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//分页查询结果</span></span><br><span class="line">    <span class="function">List&lt;Emp&gt; <span class="title">findList</span><span class="params">(@Param(<span class="string">"index"</span>)</span> <span class="keyword">int</span> index,@<span class="title">Param</span><span class="params">(<span class="string">"pageSize"</span>)</span> <span class="keyword">int</span> pageSize)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.EmpDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"Emp"</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--  查看总记录数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findCount"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        SELECT count(*) FROM emp</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    查看结果集--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findList"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.Emp"</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp limit #&#123;index&#125;,#&#123;pageSize&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>list.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"c"</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        table &#123;</span><br><span class="line">            margin: 30px auto;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#page</span> <span class="selector-tag">td</span> &#123;</span></span><br><span class="line">            width: 20px;</span><br><span class="line">            border: 1px solid gray;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"600px"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>入职日期<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>薪资<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>住址<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$&#123;emps&#125;"</span> <span class="attr">var</span>=<span class="string">"emp"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.sex&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.joindate&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.salary&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;emp.address&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align: left"</span>&gt;</span>总共检索到$&#123;pb.totalCount&#125;条记录,共分$&#123;pb.totalPage&#125;页<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"page"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage&gt;1&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:50px"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration: none"</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=$&#123;pb.currentPage-1&#125;&amp;pageSize=5"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">begin</span>=<span class="string">"1"</span> <span class="attr">end</span>=<span class="string">"$&#123;pb.totalPage&#125;"</span> <span class="attr">var</span>=<span class="string">"page"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;page == pb.currentPage&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">"#ffd700"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration: none"</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=$&#123;page&#125;&amp;pageSize=5"</span>&gt;</span>$&#123;page&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;page != pb.currentPage&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration: none"</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=$&#123;page&#125;&amp;pageSize=5"</span>&gt;</span>$&#123;page&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">"$&#123;pb.currentPage &lt; pb.totalPage&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:50px"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration: none"</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/EmpServlet?action=findByPage&amp;currentPage=$&#123;pb.currentPage+1&#125;&amp;pageSize=5"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> txt = <span class="built_in">document</span>.getElementById(<span class="string">"uname"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var txt = document.querySelector（"#uname"）;</span></span></span><br><span class="line"><span class="actionscript">    txt.innerText = <span class="string">"admin"</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;注解开发&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十二）</title>
    <link href="http://yoursite.com/2020/05/12/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/12/就业班学习笔记（五十二）/</id>
    <published>2020-05-12T01:06:58.000Z</published>
    <updated>2020-05-12T16:55:42.974Z</updated>
    
    <content type="html"><![CDATA[<ul><li>嵌套查询</li><li>加载策略</li><li>缓存</li></ul><a id="more"></a><h1 id="一-Mybatis嵌套查询"><a href="#一-Mybatis嵌套查询" class="headerlink" title="一.Mybatis嵌套查询"></a>一.Mybatis嵌套查询</h1><h4 id="1-1-什么事嵌套查询"><a href="#1-1-什么事嵌套查询" class="headerlink" title="1.1 什么事嵌套查询"></a>1.1 什么事嵌套查询</h4><p>嵌套查询就是将原来多表查询中的联合查询语句拆成多个单表的查询，再使用mybatis的语法嵌套在一起。</p><ul><li><p>例</p><ul><li><p>需求:查询一个订单，与此同时查询出该订单所属的用户</p></li><li><p>关联查询:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> orders o <span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">user</span> u <span class="keyword">on</span> o.uid = u.id <span class="keyword">where</span> o.id = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>缺点:<br> sql语句编写难度大</p><p>数据量过大，笛卡尔积数量倍增，可能造成内存溢出</p></li><li><p>嵌套查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--根据订单id查询订单表</span></span><br><span class="line">  <span class="keyword">select</span> * <span class="keyword">from</span> orders <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="comment">--再根据订单表中uid(外键)查询用户表</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = 订单表uid;</span><br><span class="line"><span class="comment">--最后由mybatis框架进行嵌套组合</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>优点</p><p>sql语句编写简单 </p><p>没有多表关联，不会产生笛卡尔积</p></li></ul><h4 id="1-2-一对一嵌套查询"><a href="#1-2-一对一嵌套查询" class="headerlink" title="1.2 一对一嵌套查询"></a>1.2 一对一嵌套查询</h4><ul><li><p>需求</p><p>查询一个订单，与此同时查询出该订单所属的用户</p></li><li><p>sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.根据订单id查询订单表</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> orders <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 2.再根据订单表中uid(外键)查询用户表 </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">41</span>;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一对一嵌套查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">findByIdWithUser</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"orderMap"</span> <span class="attr">type</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--通过mybatis嵌套查询user表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"user"</span> <span class="attr">javaType</span>=<span class="string">"User"</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.OrderMapper.findById"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    一对一嵌套查询--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    resultType:单表映射封装 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    resultMap:多表查询必须手动映射封装--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithUser"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"orderMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM orders WHERE id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 根据用户id查询user对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    根据用户id查询user对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>通过mybatis进行嵌套组合</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"orderMap"</span> <span class="attr">type</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">&lt;!--通过mybatis嵌套查询user表</span></span><br><span class="line"><span class="comment">    一对一association</span></span><br><span class="line"><span class="comment">    column="uid" 订单查询的用户外键字段，需要作为条件</span></span><br><span class="line"><span class="comment">    select="com.itheima.dao.OrderMapper.findById"查询用户表(用户接口+执行方法名)</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"user"</span> <span class="attr">javaType</span>=<span class="string">"User"</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.UserMapper.findById"</span>/&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对一嵌套测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        OrderMapper orderMapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据id查询</span></span><br><span class="line">        Order order = orderMapper.findByIdWithUser(<span class="number">1</span>);</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[2020-05-12 21:21:03,060] DEBUG o.OrderMapper.findByIdWithUser  - &#x3D;&#x3D;&gt;  Preparing: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;先查询订单</span><br><span class="line">SELECT * FROM orders WHERE id&#x3D;? </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[2020-05-12 21:21:03,111] DEBUG o.OrderMapper.findByIdWithUser  - &#x3D;&#x3D;&gt; Parameters: 1(Integer)</span><br><span class="line">[2020-05-12 21:21:03,159] DEBUG     com.itheima.dao.UserMapper  - Cache Hit Ratio [com.itheima.dao.UserMapper]: 0.0</span><br><span class="line">[2020-05-12 21:21:03,159] DEBUG theima.dao.UserMapper.findById  - &#x3D;&#x3D;&#x3D;&#x3D;&gt;  Preparing: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;再查询用户</span><br><span class="line">SELECT * FROM user WHERE id&#x3D;? </span><br><span class="line"></span><br><span class="line">[2020-05-12 21:21:03,159] DEBUG theima.dao.UserMapper.findById  - &#x3D;&#x3D;&#x3D;&#x3D;&gt; Parameters: 41(Integer)</span><br><span class="line">[2020-05-12 21:21:03,162] DEBUG theima.dao.UserMapper.findById  - &lt;&#x3D;&#x3D;&#x3D;&#x3D;      Total: 1</span><br><span class="line">[2020-05-12 21:21:03,165] DEBUG o.OrderMapper.findByIdWithUser  - &lt;&#x3D;&#x3D;      Total: 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;用mybatis嵌套组合在一起</span><br><span class="line">Order&#123;id&#x3D;1, ordertime&#x3D;Mon May 20 15:58:02 CST 2019, money&#x3D;999.5, user&#x3D;User&#123;id&#x3D;41, username&#x3D;&#39;老王&#39;, birthday&#x3D;Tue May 28 06:47:08 CST 2019, sex&#x3D;&#39;男&#39;, address&#x3D;&#39;北京&#39;, orderList&#x3D;null, roleList&#x3D;null&#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>嵌套关系</p><table><thead><tr><th>步骤</th><th></th></tr></thead><tbody><tr><td></td><td>//一对一嵌套查询<br> public Order findByIdWithUser(Integer id);</td></tr><tr><td></td><td>// 根据用户id查询user对象 <br>public User findById(Integer id);</td></tr><tr><td></td><td>用mybatis嵌套组合在一起&lt;br&gt;&lt;association property=”user” javaType=”User” column=”uid” select=”com.itheima.dao.UserMapper.findById” fetchType=”eager”/&gt;</td></tr></tbody></table></li></ul><h4 id="1-3-一对多嵌套查询"><a href="#1-3-一对多嵌套查询" class="headerlink" title="1.3 一对多嵌套查询"></a>1.3 一对多嵌套查询</h4><ul><li><p>需求</p><p>查询一个用户，与此同时查询出该用户具有的订单</p></li><li><p>sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 先根据用户id，查询用户表(一个) </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">41</span>;</span><br><span class="line"><span class="comment">-- 2. 再根据用户id，查询订单表(多个) </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders <span class="keyword">WHERE</span> uid = <span class="number">41</span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一对多嵌套查询</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrders</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithOrdersMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--一对多嵌套组合--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">ofType</span>=<span class="string">"Order"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!--一对多嵌套查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithOrders"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithOrdersMap"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据用户id，查询订单列表</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Order&gt; <span class="title">findByUid</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUid"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">    SELECT * FROM orders WHERE uid=#&#123;uid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>通过mybatis进行嵌套组合</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithOrdersMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--一对多嵌套组合</span></span><br><span class="line"><span class="comment">    collection</span></span><br><span class="line"><span class="comment">    column="id" 根据用户查询的结果，id作为条件</span></span><br><span class="line"><span class="comment">    select="com.itheima.dao.OrderMapper.findByUid" 去查询订单表(映射接口+执行方法)</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">ofType</span>=<span class="string">"Order"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithOrders</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = userMapper.findByIdWithOrders(<span class="number">41</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先查询用户</span></span><br><span class="line">SELECT * FROM USER WHERE id = <span class="number">41</span>;</span><br><span class="line"><span class="comment">//再查询订单</span></span><br><span class="line">SELECT * FROM orders WHERE uid = <span class="number">41</span>;</span><br><span class="line"><span class="comment">//用mybatis嵌套组合在一起</span></span><br></pre></td></tr></table></figure></li><li><p>嵌套关系</p><table><thead><tr><th>步骤</th><th></th></tr></thead><tbody><tr><td></td><td>//先查询用户<br> public User findByIdWithOrders(Integer id);</td></tr><tr><td></td><td>// 再查询订单 <br>public List&lt;Order&gt; findByUid(Integer id);</td></tr><tr><td></td><td>用mybatis嵌套组合在一起&lt;br&gt;&lt;collection property=”orderList” ofType=”Order” column=”id” select=”com.itheima.dao.OrderMapper.findByUid”/&gt;</td></tr></tbody></table></li></ul><h4 id="1-4-多对多嵌套查询"><a href="#1-4-多对多嵌套查询" class="headerlink" title="1.4 多对多嵌套查询"></a>1.4 多对多嵌套查询</h4><ul><li><p>需求</p><p>查询用户同时查询出该用户的所有角色</p><p>mybatis的实现方案就是(一对多)，区别在于sql语句不同</p></li><li><p>sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 先根据用户id，查询用户表(一个)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">41</span>;</span><br><span class="line"><span class="comment">-- 2. 再根据用户id，查询角色表(多个)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">role</span> r <span class="keyword">INNER</span> <span class="keyword">JOIN</span> user_role ur <span class="keyword">ON</span> ur.<span class="string">`rid`</span> = r.<span class="string">`id`</span> <span class="keyword">WHERE</span> ur.<span class="string">`uid`</span> = <span class="number">41</span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多对多嵌套查询</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithRoles</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithRolesMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 多对多嵌套--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"roleList"</span> <span class="attr">ofType</span>=<span class="string">"Role"</span> <span class="attr">column</span>=<span class="string">"id"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">select</span>=<span class="string">"com.itheima.dao.RoleMapper.findByUid"</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithRoles"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithRolesMap"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>RoleMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RoleMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据用户id，查询角色列表</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Role&gt; <span class="title">findByUid</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>RoleMapper映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.RoleMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"roleResultMap"</span> <span class="attr">type</span>=<span class="string">"Role"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_name"</span> <span class="attr">property</span>=<span class="string">"roleName"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_desc"</span> <span class="attr">property</span>=<span class="string">"roleDesc"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    根据用户id，查询角色列表--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUid"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"roleResultMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM role r INNER JOIN user_role ur ON ur.`rid`=r.`id` WHERE ur.`uid`=#&#123;uid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>通过mybatis进行嵌套组合</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span>&gt;</span><span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithOrdersMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一对多嵌套组合</span></span><br><span class="line"><span class="comment">        collection</span></span><br><span class="line"><span class="comment">        column="id" 根据用户查询的结果，id作为条件</span></span><br><span class="line"><span class="comment">        select="com.itheima.dao.OrderMapper.findByUid" 去查询订单表(映射接口+执行方法)</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">ofType</span>=<span class="string">"Order"</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">select</span>=<span class="string">"com.itheima.dao.OrderMapper.findByUid"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithRolesMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 多对多嵌套</span></span><br><span class="line"><span class="comment">        column="id" 用户id作为条件</span></span><br><span class="line"><span class="comment">        select="com.itheima.dao.RoleMapper.findByUid"查询角色表(角色映射接口+执行方法)</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"roleList"</span> <span class="attr">ofType</span>=<span class="string">"Role"</span> <span class="attr">column</span>=<span class="string">"id"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">select</span>=<span class="string">"com.itheima.dao.RoleMapper.findByUid"</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    根据用户id查询user对象--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--一对多嵌套查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithOrders"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithOrdersMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithRoles"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithRolesMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多对多测试(根据用户查询角色)</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithRoles</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    User user = userMapper.findByIdWithRoles(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>嵌套关系</p></li></ul><table><thead><tr><th>步骤</th><th></th></tr></thead><tbody><tr><td></td><td>//先查询用户<br> public User findByIdWithRoles(Integer id);</td></tr><tr><td></td><td>// 再查询角色列表 <br>public List&lt;Order&gt; findByUid(Integer id);</td></tr><tr><td></td><td>用mybatis嵌套组合在一起<br>&lt;collection property=”roleList” ofType=”Role” column=”id”             select=”com.itheima.dao.RoleMapper.findByUid”/&gt;</td></tr></tbody></table><h4 id="1-5-知识小结"><a href="#1-5-知识小结" class="headerlink" title="1.5 知识小结"></a>1.5 知识小结</h4><ul><li><p>步骤:一对多举例</p><p>先查询(一方)单表=&gt;再查询(多方)单表=&gt;最后由mybatis嵌套组合</p></li></ul><table><thead><tr><th>配置</th><th></th></tr></thead><tbody><tr><td>一对一配置</td><td>使用&lt;resultMap&gt;+&lt;association&gt;做配置，通过column条件，执行select查询</td></tr><tr><td>一对多配置</td><td>使用&lt;resultMap&gt;+&lt;collection&gt;做配置，通过column条件，执行select查询</td></tr><tr><td>多对多配置</td><td>使用&lt;resultMap&gt;+&lt;collection&gt;做配置，通过column条件，执行select查询</td></tr></tbody></table><table><thead><tr><th>优点:</th><th>缺点</th></tr></thead><tbody><tr><td>简化sql语句编写<br>不会产生笛卡尔积</td><td>麻烦</td></tr></tbody></table><ul><li><p>开发中到底使用哪一种</p><ul><li><p>传统开发，数据量小</p><p>使用关联查询</p></li><li><p>互联网开发，数据量大</p><p>使用嵌套查询</p></li></ul></li></ul><h1 id="二-Mybatis加载策略"><a href="#二-Mybatis加载策略" class="headerlink" title="二.Mybatis加载策略"></a>二.Mybatis加载策略</h1><h4 id="2-1-什么是加载策略"><a href="#2-1-什么是加载策略" class="headerlink" title="2.1 什么是加载策略"></a>2.1 什么是加载策略</h4><p>当多个模型(表)之间存在关联关系时, 加载一个模型(表)的同时, 是否要立即加载其关联的模型, 我们把这种决策 称为加载策略</p><p>如果加载一个模型(表)的时候, 需要立即加载出其关联的所有模型(表), 这种策略称为立即加载 </p><p>如果加载一个模型的时候, 不需要立即加载出其关联的所有模型, 等到真正需要的时候再加载, 这种策略称为延迟加载(懒加载)<br> Mybatis中的加载策略有两种:立即加载和延迟加载, 默认是立即加载</p><blockquote><p>注意:延迟加载是在嵌套查询基础上实现的</p></blockquote><ul><li><p>什么样的场景使用立即加载</p><p>一对一</p></li><li><p>什么样的场景使用延迟加载(什么时候用，什么时候查询，提高数据库性能)</p><p>一对多、多对多</p></li></ul><h4 id="2-2-配置延迟加载"><a href="#2-2-配置延迟加载" class="headerlink" title="2.2 配置延迟加载"></a>2.2 配置延迟加载</h4><h4 id="2-2-1-全局"><a href="#2-2-1-全局" class="headerlink" title="2.2.1 全局"></a>2.2.1 全局</h4><p>SqlMapConfig.xml,设置开启全局延迟加载</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启延迟(懒)加载 true 开始 false(默认值) 关闭--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-2-2-局部"><a href="#2-2-2-局部" class="headerlink" title="2.2.2 局部"></a>2.2.2 局部</h5><p>mapper映射文件，指定某一个select标签配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">association</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span> 标签 </span><br><span class="line"><span class="tag">&lt;<span class="name">collection</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span> 标签</span><br><span class="line">fetchType=""属性 </span><br><span class="line">eager 立即加载 </span><br><span class="line">lazy 延迟加载</span><br></pre></td></tr></table></figure><blockquote><p>注意:局部优先级高于全局，就近原则</p></blockquote><h4 id="2-3-触发加载"><a href="#2-3-触发加载" class="headerlink" title="2.3 触发加载"></a>2.3 触发加载</h4><p>有这样一个全局配置 lazyLoadTriggerMethods ,它定义的方法会触发立即加载</p><p>也就说当你调用它定义的方法时, 会执行数据加载, 它的默认值是 equals,clone,hashCode,toString</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启延迟(懒)加载 true 开始 false(默认值) 关闭--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--触发立即加载的配置</span></span><br><span class="line"><span class="comment">      默认值:equals,clone,hashCode,toString</span></span><br><span class="line"><span class="comment">      value="" 覆盖了默认值，表示在执行上述四个方法时，不会触发立即加载</span></span><br><span class="line"><span class="comment">      只有在执行get方法获取时，触发数据加载</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadTriggerMethods"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三-Mybatis缓存"><a href="#三-Mybatis缓存" class="headerlink" title="三.Mybatis缓存"></a>三.Mybatis缓存</h1><ul><li><p>什么是缓存</p><blockquote><p>服务器内存(硬盘)中的一块区域</p></blockquote></li><li><p>为什么使用缓存</p><blockquote><p>提高查询效率</p></blockquote></li><li><p>什么样的数据适合做缓存</p><blockquote><p>经常访问但又不经常修改的数据</p></blockquote><p>缓存是用来提高查询效率的，所有的持久层框架基本上都有缓存机制 Mybatis也提供了缓存策略，分为一级缓存，二 级缓存</p></li></ul><h4 id="3-1-一级缓存"><a href="#3-1-一级缓存" class="headerlink" title="3.1 一级缓存"></a>3.1 一级缓存</h4><h5 id="3-1-1-介绍"><a href="#3-1-1-介绍" class="headerlink" title="3.1.1 介绍"></a>3.1.1 介绍</h5><p>MyBatis一级缓存是:SqlSession级别的缓存，默认开启，不需要手动配置</p><p><img src="1589201319071.png" alt=""></p><h5 id="3-1-2-验证"><a href="#3-1-2-验证" class="headerlink" title="3.1.2 验证"></a>3.1.2 验证</h5><ul><li><p>需求</p><p>根据id查询用户</p></li><li><p>一级缓存测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一级缓存测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithBufferLevel1</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//需要用工具类开启/关闭session，否则会出现session错误</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    UserMapper userMapper1 = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">// 走数据库</span></span><br><span class="line">    User user1 = userMapper1.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user1);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 清除缓存(自己测试增、删、改)</span></span><br><span class="line">    sqlSession.clearCache();</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 获取第二个代理对象</span></span><br><span class="line">    UserMapper userMapper2 = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">// 走缓存(如果上面清除缓存，还是走数据库)</span></span><br><span class="line">    User user2 = userMapper2.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user2);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// sqlSession关闭(清除缓存)</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-1-3-分析"><a href="#3-1-3-分析" class="headerlink" title="3.1.3 分析"></a>3.1.3 分析</h5><p>一级缓存是SqlSession范围的缓存，不同的SqlSession之间的缓存区域是互相不影响的，执行SqlSession的C(增</p><p>加)U(更新)D(删除)操作，或者调用clearCache()、commit()、close()方法，都会清空缓存</p><table><thead><tr><th>SqlSession对象</th><th></th><th>LocalCache(Map集合)</th></tr></thead><tbody><tr><td>第一次查询</td><td>写入<br/>➡</td><td>LocalCache</td></tr><tr><td>如果中间发生了DML(增删改)事务操作，清除缓存</td><td>清除<br/>➡</td><td>LocalCache</td></tr><tr><td>第N次查询</td><td>读取<br>⬅</td><td>LocalCache</td></tr></tbody></table><ul><li><p>一级缓存源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//org.apache.ibatis.cache.impl.PerpetualCache</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PerpetualCache</span> <span class="keyword">implements</span> <span class="title">Cache</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String id;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;Object, Object&gt; cache = <span class="keyword">new</span> HashMap();</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-2-二级缓存"><a href="#3-2-二级缓存" class="headerlink" title="3.2 二级缓存"></a>3.2 二级缓存</h4><h5 id="3-2-1-介绍"><a href="#3-2-1-介绍" class="headerlink" title="3.2.1 介绍"></a>3.2.1 介绍</h5><p>MyBatis的二级缓存虽然是默认开启的，但需要在映射文件中配置 &lt;cache/&gt; 标签才能使用，而且要求实体类的必须 实现序列化接口</p><p><img src="1589202614175.png" alt=""></p><h5 id="3-2-2-验证"><a href="#3-2-2-验证" class="headerlink" title="3.2.2 验证"></a>3.2.2 验证</h5><p>mybatis全局配置，默认值就是开启了二级缓存</p><ul><li><p>指定需要开启二级缓存的映射配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    当前映射文件，使用二级缓存--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span>&gt;</span><span class="tag">&lt;/<span class="name">cache</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>指定User实现序列化接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span></span><br></pre></td></tr></table></figure></li><li><p>二级缓存测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 二级缓存测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithBufferLevel2</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//需要用工具类开启/关闭session，否则会出现session错误</span></span><br><span class="line">    <span class="comment">// 模拟第一个用户</span></span><br><span class="line">    SqlSession sqlSession1 = MyBatisUtils.openSession();</span><br><span class="line">    UserMapper userMapper1 = sqlSession1.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user1 = userMapper1.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user1);</span><br><span class="line">  </span><br><span class="line">    sqlSession1.close();</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 模拟第二个用户</span></span><br><span class="line">    SqlSession sqlSession2 = MyBatisUtils.openSession();</span><br><span class="line">    UserMapper userMapper2 = sqlSession2.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user2 = userMapper2.findById(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user2);</span><br><span class="line">    sqlSession2.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="3-2-3-分析"><a href="#3-2-3-分析" class="headerlink" title="3.2.3 分析"></a>3.2.3 分析</h5><p>二级缓存是mapper映射级别的缓存，多个SqlSession去操作同一个Mapper映射的sql语句，多个SqlSession可以共</p><p>用二级缓存，二级缓存是跨SqlSession的。 </p><p>二级缓存相比一级缓存的范围更大(按namespace来划分)</p><p><img src="1589264629385.png" alt=""></p><h4 id="3-3-知识小结"><a href="#3-3-知识小结" class="headerlink" title="3.3 知识小结"></a>3.3 知识小结</h4><p><img src="1564842702588.png" alt=""></p><ul><li><p>mybatis的缓存，不需要手动存储和获取数据。mybatis自动维护的。</p></li><li><p>使用mybatis，如果是中小型项目，使用自带缓存的机制是可以满足需求的。如果是大型(分布式)项目，mybatis的 缓存灵活性不足，需要使用第三方的缓存技术解决问题。</p></li></ul><h1 id="四-核心配置文件回顾"><a href="#四-核心配置文件回顾" class="headerlink" title="四.核心配置文件回顾"></a>四.核心配置文件回顾</h1><h4 id="4-1-properties标签"><a href="#4-1-properties标签" class="headerlink" title="4.1 properties标签"></a>4.1 properties标签</h4><ul><li><p>加载外部的properties文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-2-settings标签"><a href="#4-2-settings标签" class="headerlink" title="4.2 settings标签"></a>4.2 settings标签</h4><ul><li><p>全局参数配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--开启懒加载--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定触发延迟加载的方法，只有get方法执行时才会触发立即加载 --&gt;</span> <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadTriggerMethods"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span> <span class="comment">&lt;!--开启二级缓存 true开启(默认) false关闭--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"cacheEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-typeAliases标签"><a href="#4-3-typeAliases标签" class="headerlink" title="4.3 typeAliases标签"></a>4.3 typeAliases标签</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 单个定义别名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">"cn.itcast.domain.User"</span> <span class="attr">alias</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">typeAlias</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用包的形式批量定义别名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"cn.itcast.domain"</span>&gt;</span><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-4-mappers标签"><a href="#4-4-mappers标签" class="headerlink" title="4.4 mappers标签"></a>4.4 mappers标签</h4><ul><li><p>加载映射配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 加载指定的src目录下的映射文件，例如:</span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/itheima/mapper/UserMapper.xml"</span>/&gt;</span></span><br><span class="line">1. 加载并扫描指定包下所有的映射文件(接口)，例如: </span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.itheima.mapper"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="4-5-environments标签"><a href="#4-5-environments标签" class="headerlink" title="4.5 environments标签"></a>4.5 environments标签</h5><ul><li><p>数据源环境配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--数据库环境配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用MySQL环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--事务管理器,底层JDBC--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--连接池,内置POOLED--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.user&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 MyBatis嵌套查询</strong></p><p><strong>### 将原来多表查询中的联合查询语句，拆成多个单表的查询</strong></p><p><strong>### 实现</strong></p><p>- 一对一配置：使用&lt;resultMap&gt;+&lt;association&gt;做配置，通过column条件，执行select查询</p><p>- 一对多配置：使用&lt;resultMap&gt;+&lt;collection&gt;做配置，通过column条件，执行select查询</p><p>- 多对多配置：使用&lt;resultMap&gt;+&lt;collection&gt;做配置，通过column条件，执行select查询</p><p><strong>## 二 MyBatis加载策略</strong></p><p><strong>### 全局延迟加载</strong></p><p>- &lt;settings&gt;</p><p>​    &lt;!–开启全局延迟加载功能–&gt;</p><p>​    &lt;setting name=”lazyLoadingEnabled” value=”true”/&gt;</p><p>&lt;/settings&gt;</p><p><strong>### 局部延迟加载</strong></p><p>- &lt;association&gt; 和 &lt;collection&gt; 标签</p><p>​    - fetchType=”lazy | eager”</p><p>- 局部的加载策略优先级高于全局的加载策略。</p><p><strong>## 三 MyBatis缓存</strong></p><p><strong>### 一级缓存</strong></p><p>- 是SqlSession级别的缓存</p><p><strong>### 二级缓存</strong></p><p>- 是mapper映射级别的缓存，需要手动配置且实体类实现serializable接口</p><p><strong>## 四 核心配置文件回顾</strong></p><p><strong>### properties标签</strong></p><p>- 加载外部的properties文件</p><p><strong>### settings标签</strong></p><p>- 全局参数配置</p><p><strong>### typeAliases标签</strong></p><p>- 为 Java 类型设置一个别名</p><p><strong>### mappers标签</strong></p><p>- 加载映射配置</p><p><strong>### environments标签</strong></p><p>- 数据源环境配置</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;嵌套查询&lt;/li&gt;
&lt;li&gt;加载策略&lt;/li&gt;
&lt;li&gt;缓存&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十一）</title>
    <link href="http://yoursite.com/2020/05/10/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/10/就业班学习笔记（五十一）/</id>
    <published>2020-05-10T00:58:31.000Z</published>
    <updated>2020-05-11T12:14:10.558Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Mybatis表单查询</li><li>Mybatis映射文件深入 </li><li>表关系回顾 </li><li>Mybatis多表查询</li></ul><a id="more"></a><h1 id="一-Mybatis表单查询"><a href="#一-Mybatis表单查询" class="headerlink" title="一.Mybatis表单查询"></a>一.Mybatis表单查询</h1><h4 id="1-1-resultMap标签"><a href="#1-1-resultMap标签" class="headerlink" title="1.1 resultMap标签"></a>1.1 resultMap标签</h4><ul><li><p>如果数据库返回结果的列名和要封装的实体的属性名完全一致的话用 resultType 属性</p></li><li><p>如果数据库返回结果的列名和要封装的实体的属性名有不一致的情况用 resultMap 属性</p><ul><li><p>使用resultMap手动建立对象关系映射</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//ResultSet标签</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAllResultMap</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    resultMap手动建立映射</span></span><br><span class="line"><span class="comment">    id="userResultMap"</span></span><br><span class="line"><span class="comment">    type="com.itheima.domain.User"建立映射的java类型</span></span><br><span class="line"><span class="comment">    id 标签 主键</span></span><br><span class="line"><span class="comment">    id column="uid" 列名</span></span><br><span class="line"><span class="comment">    property="id"实体属性名</span></span><br><span class="line"><span class="comment">    result 标签 普通字段</span></span><br><span class="line"><span class="comment">    column="gender"  列名</span></span><br><span class="line"><span class="comment">    property="sex" 实体属性名</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userResultMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"name"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"bir"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"gender"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    模拟表与实体的属性名不一致情况--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAllResultMap"</span> <span class="attr">resultMap</span>=<span class="string">"userResultMap"</span>&gt;</span></span><br><span class="line">        SELECT id AS uid,username AS `name`,birthday AS bir,sex AS gender,address FROM `user`</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 此方法在测试方法执行之前，执行</span></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取sqlSession对象</span></span><br><span class="line">        <span class="comment">// 此方法必须线程内独享</span></span><br><span class="line">        sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 此方法在测试地方法执行之后，执行</span></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 关闭sqlSession</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 需要通过mybatis帮你根据接口规范创建实现类</span></span><br><span class="line">        <span class="comment">// 创建代理对象(实现类)</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 执行sql</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//resultMap标签</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAllResultMap</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        UserMapper sessionMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        List&lt;User&gt; list = sessionMapper.findAllResultMap();</span><br><span class="line">        <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="1-2-多条件查询"><a href="#1-2-多条件查询" class="headerlink" title="1.2 多条件查询"></a>1.2 多条件查询</h4><ul><li><p>需求</p><p>根据id和username查询user表</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多条件查询:方式一</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByIdAndUsernameV1</span><span class="params">(@Param(<span class="string">"id"</span>)</span> Integer id, @<span class="title">Param</span><span class="params">(<span class="string">"username"</span>)</span> String username)</span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">//多条件查询:方式二</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByIdAndUsernameV2</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    多条件查询方式</span></span><br><span class="line"><span class="comment">如果传递多个参数，属性省略不写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdAndUsernameV1"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE id=#&#123;id&#125; AND username=#&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdAndUsernameV2"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE id=#&#123;id&#125; AND username=#&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多条件查询</span></span><br><span class="line"><span class="comment">//V1</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByIdAndUsernameV1</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByIdAndUsernameV1(<span class="number">41</span>, <span class="string">"老王"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">//V2</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByIdAndUsernameV2</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper sessionMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">41</span>);</span><br><span class="line">    user.setUsername(<span class="string">"W"</span>);</span><br><span class="line">    List&lt;User&gt; list = sessionMapper.findByIdAndUsernameV2(user);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-模糊查询"><a href="#1-3-模糊查询" class="headerlink" title="1.3 模糊查询"></a>1.3 模糊查询</h4><ul><li><p>需求</p><p>根据username模糊查询user表</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模糊查询，方式一</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByUsername1</span><span class="params">(String username)</span></span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 模糊查询，方式二</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByUsername2</span><span class="params">(String username)</span></span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 模糊查询，方式三</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByUsername3</span><span class="params">(String username)</span></span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 模糊查询，方式四</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByUsername4</span><span class="params">(String username)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--    模糊查询，方式一</span></span><br><span class="line"><span class="comment">    java代码与sql语句有耦合--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername1"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE username like #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    模糊查询，方式二</span></span><br><span class="line"><span class="comment">    mysql5.5版本之前，此拼接不支持多个单引号</span></span><br><span class="line"><span class="comment">    oracle数据库，除了别名的位置，其余位置都不能使用双引号--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername2"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE username like "%" #&#123;username&#125; "%"</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    此方式，会出现sql注入</span></span><br><span class="line"><span class="comment">    $&#123;&#125; 字符串拼接，如果接收的简单数据类型，表达式名称必须是value</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername3"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE username like '%$&#123;value&#125;%'</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    模糊查询，方式四【掌握】--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    使用concat()函数拼接--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    注意:oracle数据库 concat()函数只能传递二个参数,可以使用函数嵌套来解决--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByUsername4"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE username like concat(concat('%',#&#123;username&#125;),'%')</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByUsername1</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByUsername1(<span class="string">"%王%"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByUsername2</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByUsername2(<span class="string">"王"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByUsername3</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByUsername3(<span class="string">"王"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByUsername4</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByUsername4(<span class="string">"王"</span>);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-与-区别"><a href="#1-4-与-区别" class="headerlink" title="1.4 ${} 与 #{} 区别"></a>1.4 ${} 与 #{} 区别</h4><ul><li><p>${} :底层 Statement</p><ul><li>sql与参数拼接在一起，会出现sql注入问题 </li><li>每次执行sql语句都会编译一次</li><li>接收简单数据类型，命名:{value}</li><li>接收引用数据类型，命名: ${属性名}</li><li>字符串类型需要加 ‘${value}’</li></ul></li><li><p>#{}底层 PreparedStatement</p><ul><li>sql与参数分离，不会出现sql注入问题 </li><li>sql只需要编译一次</li><li>接收简单数据类型，命名:#{随便写} </li><li>接收引用数据类型，命名:#{属性名}</li></ul></li></ul><h1 id="二-Mybatis映射文件深入"><a href="#二-Mybatis映射文件深入" class="headerlink" title="二.Mybatis映射文件深入"></a>二.Mybatis映射文件深入</h1><h4 id="2-1-返回主键"><a href="#2-1-返回主键" class="headerlink" title="2.1 返回主键"></a>2.1 返回主键</h4><ul><li><p>应用场景</p><p>向数据库保存一个user对象后, 然后在控制台记录下此新增user的主键值(id)</p></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"><span class="comment">//    返回主键，方式一</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save1</span><span class="params">(User user)</span></span>;</span><br><span class="line"><span class="comment">//    返回主键，方式二</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save2</span><span class="params">(User user)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    返回主键，方式一</span></span><br><span class="line"><span class="comment">    useGeneratedKeys属性</span></span><br><span class="line"><span class="comment">    useGeneratedKeys="true" 开启新增主键返回功能</span></span><br><span class="line"><span class="comment">    keyColumn="id" user表中主键列</span></span><br><span class="line"><span class="comment">    keyProperty="id" user实体主键属性</span></span><br><span class="line"><span class="comment">    注意:仅支持主键自增类型的数据库 MySQL 和 SqlServer ， oracle不支持--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save1"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span> <span class="attr">keyColumn</span>=<span class="string">"id"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">        INSERT INTO user (username,birthday,sex,address) VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save2"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">selectKey</span> <span class="attr">keyColumn</span>=<span class="string">"id"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span> <span class="attr">resultType</span>=<span class="string">"int"</span> <span class="attr">order</span>=<span class="string">"AFTER"</span>&gt;</span></span><br><span class="line">            SELECT LAST_INSERT_ID()</span><br><span class="line">        <span class="tag">&lt;/<span class="name">selectKey</span>&gt;</span></span><br><span class="line">        INSERT INTO user (username,birthday,sex,address) VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SqlSession sqlSession=<span class="keyword">null</span>;</span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span></span>&#123;</span><br><span class="line">        sqlSession= MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span></span>&#123;</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave1</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"Johe Eve"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setAddress(<span class="string">"SZ"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line"></span><br><span class="line">        userMapper.save1(user);</span><br><span class="line">        System.out.println(<span class="string">"When Insert,Primary Key Returns: "</span>+user.getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave2</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"Johe Eve"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setAddress(<span class="string">"SZ"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line"></span><br><span class="line">        userMapper.save2(user);</span><br><span class="line">        System.out.println(<span class="string">"When Insert,Primary Key Returns: "</span>+user.getId());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-2-动态SQL"><a href="#2-2-动态SQL" class="headerlink" title="2.2 动态SQL"></a>2.2 动态SQL</h4><h5 id="2-2-1-什么是动态SQL"><a href="#2-2-1-什么是动态SQL" class="headerlink" title="2.2.1 什么是动态SQL"></a>2.2.1 什么是动态SQL</h5><ul><li><p>需求</p><p>把id和username封装到user对象中，将user对象中不为空的属性作为查询条件</p><p>这个时候我们执行的sql就有多种可能</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 如果id和用户名不为空</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span>= <span class="comment">#&#123;id&#125; and username = #&#123;username&#125;</span></span><br><span class="line"><span class="comment">-- 如果只有id</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span>= <span class="comment">#&#123;id&#125;</span></span><br><span class="line"><span class="comment">-- 如果只有用户名</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username = <span class="comment">#&#123;username&#125;</span></span><br><span class="line"><span class="comment">-- 如果id和用户名都为空 </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span></span><br></pre></td></tr></table></figure><p>像上面这样, 根据传入的参数不同, 需要执行的SQL的结构就会不同，这就是动态SQL</p></li></ul><h5 id="2-2-2-if-条件判断"><a href="#2-2-2-if-条件判断" class="headerlink" title="2.2.2 if 条件判断"></a>2.2.2 if 条件判断</h5><ul><li><p>需求 </p><p>把id和username封装到user对象中，将user对象中不为空的属性作为查询条件</p><ul><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// if 条件判断</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByIdAndUsernameIf</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">if标签 条件判断</span></span><br><span class="line"><span class="comment">where标签 相当于 where 1=1 功能，如果没有条件情况下 where语句不在sql语句拼接</span></span><br><span class="line"><span class="comment">可以去掉第一个 and 或者 or</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdAndUsernameIf"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"id != null"</span>&gt;</span></span><br><span class="line">            AND id=#&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"username != null"</span>&gt;</span></span><br><span class="line">            AND username = #&#123;username&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// if判断</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindByIdAndUsernameIf</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 拼接条件</span></span><br><span class="line">    User param = <span class="keyword">new</span> User();</span><br><span class="line">    param.setId(<span class="number">41</span>);</span><br><span class="line">    param.setUsername(<span class="string">"老王"</span>);</span><br><span class="line">    </span><br><span class="line">    List&lt;User&gt; list = userMapper.findByIdAndUsernameIf(param);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="2-2-3-set-用于update语句"><a href="#2-2-3-set-用于update语句" class="headerlink" title="2.2.3 set 用于update语句"></a>2.2.3 set 用于update语句</h5><ul><li><p>需求</p><p>动态更新user表数据，如果该属性有值就更新，没有值不做处理</p><ul><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// set 更新</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateIf</span><span class="params">(User user)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    set标签 更新 ，将条件中的最后一个逗号抹除--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateIf"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    update user</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"username != null"</span>&gt;</span></span><br><span class="line">            username=#&#123;username&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"birthday != null"</span>&gt;</span></span><br><span class="line">            birthday=#&#123;birthday&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null"</span>&gt;</span></span><br><span class="line">            sex=#&#123;sex&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"address != null"</span>&gt;</span></span><br><span class="line">            address=#&#123;address&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//update</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdateIf</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置更新内容</span></span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setId(<span class="number">57</span>);</span><br><span class="line">    user.setUsername(<span class="string">"Steve"</span>);</span><br><span class="line">    </span><br><span class="line">    userMapper.updateIf(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="2-2-4-foreach-用于循环遍历"><a href="#2-2-4-foreach-用于循环遍历" class="headerlink" title="2.2.4 foreach 用于循环遍历"></a>2.2.4 foreach 用于循环遍历</h5><ul><li><p>需求</p><p>根据多个id查询，user对象的集合</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">IN</span> (<span class="number">41</span>,<span class="number">43</span>,<span class="number">46</span>);</span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th>&lt;foreach&gt;标签用于遍历集合</th><th>属性</th></tr></thead><tbody><tr><td>collection</td><td>代表要遍历的集合元素</td></tr><tr><td>open</td><td>代表语句的开始部分</td></tr><tr><td>close</td><td>代表结束部分</td></tr><tr><td>item</td><td>代表遍历集合的每个元素，生成的变量名</td></tr><tr><td>sperator</td><td>代表分隔符</td></tr></tbody></table><ul><li><p>练习三个版本</p><table><thead><tr><th>普通list集合</th><th>普通array数组</th><th>实体属性list集合</th></tr></thead><tbody><tr><td></td><td></td><td></td></tr></tbody></table><ul><li><p>domain/QueryVo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    根据页面查询条件封装到实体中 View Object</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryVo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Integer&gt; ids;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">getIds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ids;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIds</span><span class="params">(List&lt;Integer&gt; ids)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ids = ids;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// foreach标签，普通list集合</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByList</span><span class="params">(List&lt;Integer&gt; ids)</span></span>;</span><br><span class="line"><span class="comment">// foreach标签，普通array数组</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByArray</span><span class="params">(Integer [] ids)</span></span>;</span><br><span class="line"><span class="comment">// foreach标签，实体属性list集合</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByQueryVo</span><span class="params">(QueryVo queryVo)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- foreach标签，普通list集合</span></span><br><span class="line"><span class="comment">    传递 普通类型list集合 collection="list"</span></span><br><span class="line"><span class="comment">    属性取值:collection、list</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByList"</span> <span class="attr">parameterType</span>=<span class="string">"list"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    foreach标签，普通array数组</span></span><br><span class="line"><span class="comment">     传统 普通类型array数组 collection="array"</span></span><br><span class="line"><span class="comment">     属性取值 array--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByArray"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"array"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    foreach标签，实体属性list集合</span></span><br><span class="line"><span class="comment">     传递 实体中list属性集合的话，collection="ids"</span></span><br><span class="line"><span class="comment">     取值，实体的属性名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByQueryVo"</span> <span class="attr">parameterType</span>=<span class="string">"QueryVo"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"ids"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// foreach标签，普通list集合</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByList</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    List ids = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    ids.add(<span class="number">41</span>);</span><br><span class="line">    ids.add(<span class="number">46</span>);</span><br><span class="line">    List list = userMapper.findByList(ids);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// foreach标签，普通array数组</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByArray</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    Integer[] ids = &#123;<span class="number">41</span>, <span class="number">46</span>, <span class="number">49</span>&#125;;</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByArray(ids);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//    foreach标签，实体属性list集合</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByQueryVo</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    </span><br><span class="line">    List ids= <span class="keyword">new</span> ArrayList();</span><br><span class="line">    ids.add(<span class="number">41</span>);</span><br><span class="line">    ids.add(<span class="number">46</span>);</span><br><span class="line">    QueryVo queryVo = <span class="keyword">new</span> QueryVo();</span><br><span class="line">    queryVo.setIds(ids);</span><br><span class="line">    List&lt;User&gt; list = userMapper.findByQueryVo(queryVo);</span><br><span class="line">    System.out.println(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="2-3-SQL片段"><a href="#2-3-SQL片段" class="headerlink" title="2.3 SQL片段"></a>2.3 SQL片段</h4><ul><li><p>应用场景</p><p>映射文件中可将重复的 sql 提取出来，使用时用 include 引用即可，最终达到 sql 重用的目的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!-- foreach标签，普通list集合</span></span><br><span class="line"><span class="comment">        传递 普通类型list集合 collection="list"</span></span><br><span class="line"><span class="comment">        属性取值:collection、list</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByList"</span> <span class="attr">parameterType</span>=<span class="string">"list"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"selectUser"</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        WHERE id in</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    foreach标签，普通array数组</span></span><br><span class="line"><span class="comment">         传统 普通类型array数组 collection="array"</span></span><br><span class="line"><span class="comment">         属性取值 array--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByArray"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"selectUser"</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        WHERE id in</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"array"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    foreach标签，实体属性list集合</span></span><br><span class="line"><span class="comment">         传递 实体中list属性集合的话，collection="ids"</span></span><br><span class="line"><span class="comment">         取值，实体的属性名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByQueryVo"</span> <span class="attr">parameterType</span>=<span class="string">"QueryVo"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"selectUser"</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        WHERE id in</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"ids"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">            #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 将当前映射文件的共同的sql代码抽取一个片段，实现sql的复用性...</span></span><br><span class="line"><span class="comment">id="selectUser" 当前sql片段的唯一标识 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"selectUser"</span>&gt;</span></span><br><span class="line">     select id,username,birthday,sex,address from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-知识小结"><a href="#2-4-知识小结" class="headerlink" title="2.4 知识小结"></a>2.4 知识小结</h4><ul><li><p>MyBatis映射文件配置</p><table><thead><tr><th>关键字</th><th>配置</th></tr></thead><tbody><tr><td>&lt;select&gt;</td><td>查询</td></tr><tr><td>&lt;insert&gt;</td><td>插入</td></tr><tr><td>&lt;update&gt;</td><td>修改</td></tr><tr><td>&lt;delete&gt;</td><td>删除</td></tr><tr><td>&lt;selectKey&gt;</td><td>返回主键</td></tr><tr><td>&lt;where&gt;</td><td>where条件</td></tr><tr><td>&lt;if&gt;</td><td>if判断</td></tr><tr><td>&lt;foreach&gt;</td><td>for循环</td></tr><tr><td>&lt;set&gt;</td><td>set设置</td></tr><tr><td>&lt;sql&gt;</td><td>sql片段抽取</td></tr></tbody></table></li></ul><h1 id="三-表关系回顾"><a href="#三-表关系回顾" class="headerlink" title="三.表关系回顾"></a>三.表关系回顾</h1><ul><li><p>在关系型数据库当中，表关系分为三种</p><table><thead><tr><th>关系</th><th>说明</th></tr></thead><tbody><tr><td>特殊情况</td><td>一个订单只能从属于一个用户，mybatis框架就把这个多对一看做成一对一来实现</td></tr><tr><td>数据建立表关系</td><td>通过主外键关联</td></tr><tr><td>实体建立关系</td><td>通过属性关联</td></tr></tbody></table></li></ul><p><img src="1589091271542.png" alt=""></p><h1 id="四-Mybatis多表查询"><a href="#四-Mybatis多表查询" class="headerlink" title="四.Mybatis多表查询"></a>四.Mybatis多表查询</h1><h4 id="4-1-一对一-多对一"><a href="#4-1-一对一-多对一" class="headerlink" title="4.1 一对一(多对一)"></a>4.1 一对一(多对一)</h4><ul><li><p>一对一查询模型 </p><p>用户表和订单表的关系为，一个用户有多个订单，一个订单只从属于一个用户 </p><p>一对一查询的需求:查询一个订单，与此同时查询出该订单所属的用户</p></li><li><p>实体和表映射关系</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders o <span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`user`</span> u <span class="keyword">ON</span> o.<span class="string">`uid`</span> = u.<span class="string">`id`</span> <span class="keyword">WHERE</span> o.<span class="string">`id`</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>Order实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Order</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> Date ordertime;</span><br><span class="line">    <span class="keyword">private</span> Double money;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个订单从属于一个用户</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//此处省略getter/setter，toString，User实体类</span></span><br></pre></td></tr></table></figure></li><li><p>OrderMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrderMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 一对一关联查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Order <span class="title">findByIdWithUser</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.OrderMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"orderMap"</span> <span class="attr">type</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        一对一多表关联 association标签</span></span><br><span class="line"><span class="comment">        property="user" 关联实体的属性名 javaType="cn.itheima.domain.User" 关联实体java类型</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"user"</span> <span class="attr">javaType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"uid"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    一对一关联查询</span></span><br><span class="line"><span class="comment">        resultType:单表映射封装</span></span><br><span class="line"><span class="comment">        resultMap:多表查询必须手动映射封装--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithUser"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"orderMap"</span>&gt;</span></span><br><span class="line">        SELECT * FROM orders o INNER JOIN `user` u ON o.`uid`=u.`id` WHERE o.`id`=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对一关联测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        OrderMapper orderMapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        Order order = orderMapper.findByIdWithUser(<span class="number">1</span>);</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-2-一对多"><a href="#4-2-一对多" class="headerlink" title="4.2 一对多"></a>4.2 一对多</h4><ul><li><p>一对多查询模型 </p><p>用户表和订单表的关系为，一个用户有多个订单，一个订单只从属于一个用户 </p><p>一对多查询的需求：查询一个用户，与此同时查询出该用户具有的订单</p></li><li><p>实体和表关系</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *,o.id <span class="keyword">AS</span> <span class="keyword">oid</span> <span class="keyword">FROM</span> <span class="string">`user`</span> u <span class="keyword">INNER</span> <span class="keyword">JOIN</span> orders o <span class="keyword">ON</span> u.<span class="string">`id`</span> = o.<span class="string">`uid`</span> <span class="keyword">WHERE</span> u.<span class="string">`id`</span>=<span class="number">41</span></span><br></pre></td></tr></table></figure></li><li><p>User实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个用户具有多个订单</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Order&gt; orderList;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//此处省略getter/setter,toString</span></span><br></pre></td></tr></table></figure></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 一对多关联</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithOrders</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><ul><li>有多少记录，就创建多少order对象</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        一对多关联 collection标签</span></span><br><span class="line"><span class="comment">        property="orderList" 关联实体集合的属性名</span></span><br><span class="line"><span class="comment">        ofType="cn.itcast.domain.Order" 关联实体的java类型(集合泛型的类型)</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">ofType</span>=<span class="string">"Order"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"oid"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ordertime"</span> <span class="attr">property</span>=<span class="string">"ordertime"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--       一对多关联--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithOrders"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userMap"</span>&gt;</span></span><br><span class="line">        SELECT *,o.id AS oid FROM `user` u INNER JOIN orders `o` ON u.`id`=o.`uid` WHERE u.`id`=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><ul><li><p>test/BaseMapperTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>UserMapperTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一对多测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithOrders</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = userMapper.findByIdWithOrders(<span class="number">41</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-多对多-由二个一对多组成"><a href="#4-3-多对多-由二个一对多组成" class="headerlink" title="4.3 多对多(由二个一对多组成)"></a>4.3 多对多(由二个一对多组成)</h4><ul><li><p>实体和表关系</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`user`</span> u</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> user_role ur <span class="keyword">ON</span> u.<span class="string">`id`</span> = ur.<span class="string">`uid`</span> <span class="comment">-- 用户连接中间表 </span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="keyword">role</span> r <span class="keyword">ON</span> ur.<span class="string">`rid`</span> = r.<span class="string">`id`</span> <span class="comment">-- 再根据中间表连接角色 </span></span><br><span class="line"><span class="keyword">WHERE</span> u.id = <span class="number">41</span> <span class="comment">-- 用户id 作为条件</span></span><br></pre></td></tr></table></figure></li><li><p>User和Role实体</p><ul><li><p>Role</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String roleName;</span><br><span class="line">    <span class="keyword">private</span> String roleDesc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个用户具有多个订单</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Order&gt; orderList;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个用户具有多个角色</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Role&gt; roleList;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多对多关联</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findByIdWithRoles</span><span class="params">(Integer id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userWithRoleMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"username"</span> <span class="attr">property</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">property</span>=<span class="string">"address"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">&lt;!--多对多实现步骤和一对多是一样的(区别在于sql语句)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"roleList"</span> <span class="attr">ofType</span>=<span class="string">"Role"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"rid"</span> <span class="attr">property</span>=<span class="string">"id"</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_name"</span> <span class="attr">property</span>=<span class="string">"roleName"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_desc"</span> <span class="attr">property</span>=<span class="string">"roleDesc"</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findByIdWithRoles"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"userWithRoleMap"</span>&gt;</span></span><br><span class="line">    SELECT * FROM `user` u INNER JOIN user_role ur</span><br><span class="line">    ON u.`id`=ur.`uid` INNER JOIN role r ON ur.`rid`=r.`id`</span><br><span class="line">    WHERE u.id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithRoles</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    User user = userMapper.findByIdWithRoles(<span class="number">41</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-4-知识小结"><a href="#4-4-知识小结" class="headerlink" title="4.4 知识小结"></a>4.4 知识小结</h4><table><thead><tr><th>一对一配置:使用&lt;resultMap&gt;+&lt;association&gt;做配置</th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>association:</td><td></td><td></td></tr><tr><td></td><td></td><td>property</td><td>关联的实体属性名</td></tr><tr><td></td><td></td><td>javaType</td><td>关联的实体类型(别名)</td></tr></tbody></table><table><thead><tr><th>一对多配置:使用&lt;resultMap&gt;+&lt;collection&gt;做配置</th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>collection:</td><td></td><td></td></tr><tr><td></td><td></td><td>property</td><td>关联的集合属性名</td></tr><tr><td></td><td></td><td>ofType</td><td>关联的集合泛型类型(别名)</td></tr></tbody></table><table><thead><tr><th>多对多配置:使用&lt;resultMap&gt;+&lt;collection&gt;做配置</th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>collection:</td><td></td><td></td></tr><tr><td></td><td></td><td>property</td><td>关联的集合属性名</td></tr><tr><td></td><td></td><td>ofType</td><td>关联的集合泛型类型(别名)</td></tr></tbody></table><p>多对多的配置跟一对多很相似，难度在于SQL语句的编写。</p><h4 id="4-5-优化测试"><a href="#4-5-优化测试" class="headerlink" title="4.5 优化测试"></a>4.5 优化测试</h4><ul><li><p>BaseMapperTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>OrderMapperTest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderMapperTest</span> <span class="keyword">extends</span> <span class="title">BaseMapperTest</span></span>&#123;</span><br><span class="line">    <span class="comment">// 一对一关联测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindByIdWithUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        OrderMapper orderMapper = sqlSession.getMapper(OrderMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        Order order = orderMapper.findByIdWithUser(<span class="number">1</span>);</span><br><span class="line">        System.out.println(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>  <strong>## 一 Mybatis单表查询</strong></p><p>  <strong>### resultMap标签</strong></p><p>  - 解决：如果实体的属性名与表的字段名不一致，需要使用ResultMap手动进行封装</p><p>  <strong>### 多条件查询</strong></p><p>  - 二个及以下参数，简单类型@Param</p><p>  - 二个及以上参数，封装实体中</p><p>  <strong>### 模糊查询</strong></p><p>  - concat() 函数拼接</p><p>  <strong>### ${}与#{}区别</strong></p><p>  - ${}  statement</p><p>  - #{} preparedStatement</p><p>  <strong>## 二 Mybatis映射文件深入</strong></p><p>  <strong>### 返回主键</strong></p><p>  - useGeneratedKeys</p><p>  ​    - 支持主键自增类型的数据库：MySQL、sqlServer</p><p>  - selectKey</p><p>  <strong>### 动态sql</strong></p><p>  - <if></p><p>  ​    - 条件判断</p><p>  - <where></p><p>  ​    - 去掉第一个条件的 前 and  | or</p><p>  - <set></p><p>  ​    - 去掉最后一个条件的 逗号</p><p>  - <foreach></p><p>  ​    - 普通类型 List，collection属性：list</p><p>  ​    - 普通类型 Array，collection属性：array</p><p>  ​    - 复杂类型pojo对象，collection属性：实体的属性名</p><p>  - <sql></p><p>  ​    - 将公共代码抽取，实现复用性</p><p>  <strong>## 三 表关系回顾</strong></p><p>  <strong>## 四 MyBatis多表查询</strong></p><p>  <strong>### 一对一（多对一）</strong></p><p>  - 使用<resultMap>+<association>做配置</p><p>  ​    - property</p><p>  ​        - 关联实体属性名</p><p>  ​    - javaType</p><p>  ​        - 关联实体属性类型（别名）</p><p>  <strong>### 一对多</strong></p><p>  - 使用<resultMap>+<collection>做配置</p><p>  ​    - property</p><p>  ​        - 关联集合属性名</p><p>  ​    - ofType</p><p>  ​        - 关联集合泛型类型（别名）</p><p>  <strong>### 多对多</strong></p><p>  - 使用<resultMap>+<collection>做配置</p><p>  ​    - property</p><p>  ​        - 关联集合属性名</p><p>  ​    - ofType</p><p>  ​        - 关联集合泛型类型（别名）</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Mybatis表单查询&lt;/li&gt;
&lt;li&gt;Mybatis映射文件深入 &lt;/li&gt;
&lt;li&gt;表关系回顾 &lt;/li&gt;
&lt;li&gt;Mybatis多表查询&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（五十）</title>
    <link href="http://yoursite.com/2020/05/09/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%E5%8D%81%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/09/就业班学习笔记（五十）/</id>
    <published>2020-05-09T00:58:06.000Z</published>
    <updated>2020-05-12T16:40:48.298Z</updated>
    
    <content type="html"><![CDATA[<ul><li>框架简介</li><li>Mybatis简介</li><li>Mybatis快速入门</li><li>Mybatis映射文件概述</li><li>Mybatis增删改查</li><li>抽取工具类</li><li>Mybatis核心文件概述</li><li>Mybatis的API概述</li><li>Mybatis实现Dao层</li><li>接口代理的增删改查</li></ul><a id="more"></a><h1 id="一-框架简介"><a href="#一-框架简介" class="headerlink" title="一.框架简介"></a>一.框架简介</h1><ul><li><p>之前的MVC三层架构</p><p>表现层:Java与浏览器交互</p><p>业务层:根据某个功能除了业务逻辑</p><p>持久层:Java与数据库交互</p><table><thead><tr><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>高内聚，低耦合</td><td>所有基础代码都需要手动编写，繁琐导致效率低</td></tr></tbody></table></li><li><p>框架</p><p>半成品软件</p></li><li><p>框架阶段三层代码</p><p>框架阶段实现了绝大部分基础代码，只需要开发一些特有代码即可，提高开发效率</p></li></ul><table><thead><tr><th>Broswer</th><th></th><th>Server</th><th></th><th>Server</th><th></th><th>Server</th><th></th><th>数据库</th></tr></thead><tbody><tr><td></td><td></td><td>web层</td><td></td><td>service层</td><td></td><td>dao层</td><td></td><td></td></tr><tr><td></td><td></td><td>Servlet控制器</td><td></td><td>将多个dao排序组合实现某个功能</td><td></td><td>提高jdbc操作数据库，实现最基本CURD</td><td>➡<br>⬅</td><td>SQL</td></tr><tr><td>user/passwd</td><td>➡</td><td>⬇</td><td>↘<br>↖</td><td>功能A<br>find()<br>save()</td><td>➡<br/>⬅</td><td>find()<br>save()<br>update()<br>delete()</td><td></td><td></td></tr><tr><td>Login.jsp</td><td>⬅</td><td>jsp视图</td><td>↘</td><td></td><td>↙</td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td>实体类domain,pojo</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td>常用框架:SpringMVC，Struts2</td><td></td><td>常用框架：Spring</td><td></td><td>常用框架：Mybatis,hibernate，jpa</td><td></td><td></td></tr></tbody></table><ul><li><p>目前国内主流框架</p><p>SSM(springMVC+Spring+mybatis)</p></li></ul><h1 id="二-Mybatis简介"><a href="#二-Mybatis简介" class="headerlink" title="二.Mybatis简介"></a>二.Mybatis简介</h1><h4 id="2-1-ORM概述"><a href="#2-1-ORM概述" class="headerlink" title="2.1 ORM概述"></a>2.1 ORM概述</h4><p>ORM(object Relational Mapping)对象关系映射</p><blockquote><p>常用ORM框架有:hibernate(全自动ORM映射)、mybatis(半自动ORM映射)、jpa</p></blockquote><ul><li><p>例</p><p>Object:User类</p><p>Relational:user表</p><p>Mapping:将User类中成员变量与user表中的字段产生映射关系</p><p>需求:操作user对象的CURD，就能实现对user表的字段修改，一个实体类对应一张表，一个对象对应一条记录</p><p>总结：以面向对象方式，实现对数据库的操作</p></li></ul><h4 id="2-2-Mybatis介绍"><a href="#2-2-Mybatis介绍" class="headerlink" title="2.2 Mybatis介绍"></a>2.2 Mybatis介绍</h4><ul><li><p>简介</p><p>MyBatis官网地址:<a href="http://www.mybatis.org/mybatis-3/">http://www.mybatis.org/mybatis-3/</a></p><ul><li>mybatis是一款优秀的持久层框架，他不需要项JDBC繁琐编写代码，只需要开发人员关注(接口+sql) </li><li>它采用了简单的xml配置+接口方式实现增删改查，开发时我们只需要关注SQL本身</li></ul></li></ul><h1 id="三-Mybatis快速入门"><a href="#三-Mybatis快速入门" class="headerlink" title="三.Mybatis快速入门*"></a>三.Mybatis快速入门*</h1><h4 id="3-1-步骤分析"><a href="#3-1-步骤分析" class="headerlink" title="3.1 步骤分析"></a>3.1 步骤分析</h4><ul><li>创建mybatis_db数据库和user表</li><li>创建java项目，导入jar包 (mysql驱动、mybatis、log4j日志) </li><li>创建User实体类</li><li>编写映射文件UserMapper.xml</li><li>编写核心文件SqlMapConfig.xml</li><li>编写测试代码</li></ul><h4 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2 代码实现"></a>3.2 代码实现</h4><ul><li>创建mybatis_db数据库和user表</li></ul><details><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*!40101 SET SQL_MODE = ''*/</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> <span class="string">`mybatis_db`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">USE</span> <span class="string">`mybatis_db`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40014 SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 */</span>;</span><br><span class="line"><span class="comment">/*!40101 SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO' */</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`orders`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`orders`</span></span><br><span class="line">(</span><br><span class="line">    <span class="string">`id`</span>        <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">    <span class="string">`uid`</span>       <span class="built_in">int</span>(<span class="number">11</span>)  <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="string">`ordertime`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="string">`money`</span>     <span class="keyword">double</span>   <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">    <span class="keyword">KEY</span> <span class="string">`uid`</span> (<span class="string">`uid`</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> <span class="string">`orders_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`uid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`user`</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  AUTO_INCREMENT = <span class="number">4</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `orders` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="string">`orders`</span>(<span class="string">`id`</span>, <span class="string">`uid`</span>, <span class="string">`ordertime`</span>, <span class="string">`money`</span>)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">1</span>, <span class="number">41</span>, <span class="string">'2019-05-20 02:58:02'</span>, <span class="number">999.5</span>),</span><br><span class="line">       (<span class="number">2</span>, <span class="number">45</span>, <span class="string">'2019-02-14 07:58:00'</span>, <span class="number">1399</span>),</span><br><span class="line">       (<span class="number">3</span>, <span class="number">41</span>, <span class="string">'2019-06-01 21:00:02'</span>, <span class="number">1666</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `user` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span></span><br><span class="line">(</span><br><span class="line">    <span class="string">`id`</span>       <span class="built_in">int</span>(<span class="number">11</span>)     <span class="keyword">NOT</span> <span class="literal">NULL</span> auto_increment,</span><br><span class="line">    <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户名称'</span>,</span><br><span class="line">    <span class="string">`birthday`</span> datetime     <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'生日'</span>,</span><br><span class="line">    <span class="string">`sex`</span>      <span class="built_in">varchar</span>(<span class="number">10</span>)  <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'性别'</span>,</span><br><span class="line">    <span class="string">`address`</span>  <span class="built_in">varchar</span>(<span class="number">256</span>) <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'地址'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `user` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="string">`user`</span>(<span class="string">`id`</span>, <span class="string">`username`</span>, <span class="string">`birthday`</span>, <span class="string">`sex`</span>, <span class="string">`address`</span>)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">41</span>, <span class="string">'老王'</span>, <span class="string">'2019-05-27 17:47:08'</span>, <span class="string">'男'</span>, <span class="string">'北京'</span>),</span><br><span class="line">       (<span class="number">42</span>, <span class="string">'王小二'</span>, <span class="string">'2019-03-02 15:09:37'</span>, <span class="string">'女'</span>, <span class="string">'北京金燕龙'</span>),</span><br><span class="line">       (<span class="number">43</span>, <span class="string">'老李'</span>, <span class="string">'2019-03-04 11:34:34'</span>, <span class="string">'女'</span>, <span class="string">'北京修正'</span>),</span><br><span class="line">       (<span class="number">45</span>, <span class="string">'传播'</span>, <span class="string">'2019-03-04 12:04:06'</span>, <span class="string">'男'</span>, <span class="string">'北京金燕龙'</span>),</span><br><span class="line">       (<span class="number">46</span>, <span class="string">'王小二'</span>, <span class="string">'2018-09-07 17:37:26'</span>, <span class="string">'男'</span>, <span class="string">'北京TBD'</span>),</span><br><span class="line">       (<span class="number">48</span>, <span class="string">'小马宝莉'</span>, <span class="string">'2019-03-08 11:44:00'</span>, <span class="string">'女'</span>, <span class="string">'北京修正'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`role`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`role`</span></span><br><span class="line">(</span><br><span class="line">    <span class="string">`id`</span>        <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'编号'</span>,</span><br><span class="line">    <span class="string">`role_name`</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色名称'</span>,</span><br><span class="line">    <span class="string">`role_desc`</span> <span class="built_in">varchar</span>(<span class="number">60</span>) <span class="keyword">default</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色描述'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`ID`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `role` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="string">`role`</span>(<span class="string">`ID`</span>, <span class="string">`role_name`</span>, <span class="string">`role_desc`</span>)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">1</span>, <span class="string">'院长'</span>, <span class="string">'管理整个学院'</span>),</span><br><span class="line">       (<span class="number">2</span>, <span class="string">'总裁'</span>, <span class="string">'管理整个公司'</span>),</span><br><span class="line">       (<span class="number">3</span>, <span class="string">'校长'</span>, <span class="string">'管理整个学校'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `user_role` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`user_role`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user_role`</span></span><br><span class="line">(</span><br><span class="line">    <span class="string">`uid`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户编号'</span>,</span><br><span class="line">    <span class="string">`rid`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'角色编号'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`uid`</span>, <span class="string">`rid`</span>),</span><br><span class="line">    <span class="keyword">KEY</span> <span class="string">`FK_Reference_10`</span> (<span class="string">`rid`</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> <span class="string">`FK_Reference_10`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`rid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`role`</span> (<span class="string">`id`</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> <span class="string">`FK_Reference_9`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`uid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`user`</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span></span><br><span class="line">  <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `user_role` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="string">`user_role`</span>(<span class="string">`uid`</span>, <span class="string">`rid`</span>)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">41</span>, <span class="number">1</span>),</span><br><span class="line">       (<span class="number">45</span>, <span class="number">1</span>),</span><br><span class="line">       (<span class="number">41</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40101 SET SQL_MODE = @OLD_SQL_MODE */</span>;</span><br><span class="line"><span class="comment">/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */</span>;</span><br></pre></td></tr></table></figure></details><ul><li><p>创建Java项目，导入jar包</p><p>log4j-1.2.17.jar<br>mybatis-3.5.1.jar<br>mysql-connector-java-5.1.37-bin.jar</p><p>log4j.properties</p></li><li><p>创建User实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"><span class="comment">//此处省略getter/setter,toString</span></span><br></pre></td></tr></table></figure></li><li><p>编写映射文件UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写核心文件SqlMapConfig.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--数据库环境配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使用MySQL环境--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器,底层JDBC--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--连接池,内置POOLED--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis_db"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/itheima/dao/UserMapper.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询所有值快速入门</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        参数一：命名空间+具体ID</span></span><br><span class="line"><span class="comment">        参数二：返回的Java类接收</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        List&lt;User&gt; list = sqlSession.selectList(<span class="string">"UserMapper.findAll"</span>);</span><br><span class="line">        <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四-Mybatis映射文件概述"><a href="#四-Mybatis映射文件概述" class="headerlink" title="四.Mybatis映射文件概述"></a>四.Mybatis映射文件概述</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">映射文件DTD约束头</span></span><br><span class="line"><span class="comment">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>语句</th><th>作用</th></tr></thead><tbody><tr><td>&lt;!DOCTYPE mapper PUBLIC … s-3-mapper.dtd”&gt;</td><td>映射文件DTD约束头</td></tr><tr><td>mapper</td><td>根标签</td></tr><tr><td>namespace</td><td>命名空间，与下面语句的id一起组成查询的标识</td></tr><tr><td>select</td><td>查询操作，可选的还有insert,update,delete</td></tr><tr><td>id</td><td>语句的id标识，与上面的命名空间一起组成查询的标识</td></tr><tr><td>resultType</td><td>查询结果对应的实体类型</td></tr><tr><td>SELECT * FROM user</td><td>要执行的SQL语</td></tr></tbody></table><h1 id="五-Mybatis增删改查"><a href="#五-Mybatis增删改查" class="headerlink" title="五.Mybatis增删改查*"></a>五.Mybatis增删改查*</h1><ul><li><p>编写映射文件UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--新增--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"sava"</span> <span class="attr">parameterType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        INSERT INTO</span><br><span class="line">        user(username,birthday,sex,address)</span><br><span class="line">        VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--修改--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        UPDATE user set username=$&#123;&#125;,birthday=#&#123;birthday&#125;,sex=#&#123;sex&#125;,addrress=#&#123;address&#125; WHERE id =#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--删除--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"delete"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span></span><br><span class="line">        DELETE FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询所有值快速入门</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        参数一：命名空间+具体ID</span></span><br><span class="line"><span class="comment">        参数二：返回的Java类接收</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        List&lt;User&gt; list = sqlSession.selectList(<span class="string">"UserMapper.findAll"</span>);</span><br><span class="line">        <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"Jack"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"GZ"</span>);</span><br><span class="line">        <span class="keyword">int</span> i = sqlSession.insert(<span class="string">"UserMapper.save"</span>, user);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Ass Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//注意:Mybatis默认不提交，需要手动提交事务(DML)</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">tetUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="number">50</span>);</span><br><span class="line">        user.setUsername(<span class="string">"lucy"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        user.setSex(<span class="string">"Female"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"PK"</span>);</span><br><span class="line">        sqlSession.update(<span class="string">"UserMapper.update"</span>,user);</span><br><span class="line">        <span class="comment">//注意:Mybatis默认不提交，需要手动提交事务(DML)</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件SqlMapConfig.xml</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//构建SqlSessionFactory工厂对象</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        <span class="comment">//通过工厂构建SqlSession会话对象</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//执行SQL语句</span></span><br><span class="line">        sqlSession.delete(<span class="string">"UserMapper.delete"</span>, <span class="number">50</span>);</span><br><span class="line">        <span class="comment">//注意:Mybatis默认不提交，需要手动提交事务(DML)</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-4-知识小结"><a href="#5-4-知识小结" class="headerlink" title="5.4 知识小结"></a>5.4 知识小结</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">- 插入语句<span class="keyword">insert</span>标签</span><br><span class="line">- 在映射文件中使用parameterType属性指定插入数据类型</span><br><span class="line">- <span class="keyword">sql</span>语句<span class="comment">#&#123;实体属性名&#125; 表示?占位符</span></span><br><span class="line">- 我们插入操作API是 sqlSession.insert(<span class="string">"命名空间.id"</span>, 实体对象); </span><br><span class="line">- DML类型语句mybatis需要手动提交事务 sqlSession.commit();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 修改操作使用<span class="keyword">update</span>标签</span><br><span class="line">- 修改操作的API使用的 sqlSession.update(<span class="string">"命名空间.id"</span>, 实体对象);</span><br><span class="line"></span><br><span class="line">- 删除语句使用<span class="keyword">delete</span>标签</span><br><span class="line">- 如果parameterType是引用数据类型 <span class="comment">#&#123;实体属性名&#125;</span></span><br><span class="line">- 如果parameterType是简单数据类型 <span class="comment">#&#123;键名知意&#125;</span></span><br><span class="line">- 删除操作API sqlSession.delete(<span class="string">"命名空间.id"</span>, <span class="keyword">Object</span>);</span><br></pre></td></tr></table></figure></li></ul><h1 id="六-抽取工具类"><a href="#六-抽取工具类" class="headerlink" title="六.抽取工具类"></a>六.抽取工具类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在静态代码块中(加载核心配置文件，构建工程对象)</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">//加载核心配置文件</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供获取sqlSession的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">openSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供提交事务和释放资源方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(SqlSession sqlSession)</span></span>&#123;</span><br><span class="line">        <span class="comment">//提交事务</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>需求 </p><p>根据指定id，查询User对象</p></li><li><p>编写映射文件UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.Integer"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>编写测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询一个</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 1.获取sqlSession(根据工具类)</span></span><br><span class="line">    SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">    <span class="comment">// 2.执行sql</span></span><br><span class="line">    User user = sqlSession.selectOne(<span class="string">"UserMapper.findById"</span>, <span class="number">50</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    <span class="comment">// 3.关闭sqlSession</span></span><br><span class="line">    MyBatisUtils.close(sqlSession);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="七-Mybatis核心文件概述"><a href="#七-Mybatis核心文件概述" class="headerlink" title="七.Mybatis核心文件概述"></a>七.Mybatis核心文件概述</h1><h4 id="7-1-核心配置文件层级关系"><a href="#7-1-核心配置文件层级关系" class="headerlink" title="7.1 核心配置文件层级关系"></a>7.1 核心配置文件层级关系</h4><p>MyBatis 的配置文件包含了会深深影响 MyBatis 行为的设置和属性信息。 配置文档的顶层结构如下：</p><ul><li>configuration（配置）<ul><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#properties">properties（属性）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#settings">settings（设置）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#typeAliases">typeAliases（类型别名）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#typeHandlers">typeHandlers（类型处理器）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#objectFactory">objectFactory（对象工厂）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#plugins">plugins（插件）</a></li><li>environments（环境配置）<ul><li>environment（环境变量）<ul><li>transactionManager（事务管理器）</li><li>dataSource（数据源）</li></ul></li></ul></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#databaseIdProvider">databaseIdProvider（数据库厂商标识）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#mappers">mappers（映射器）</a></li></ul></li></ul><h4 id="7-2-常用配置标签解析"><a href="#7-2-常用配置标签解析" class="headerlink" title="7.2 常用配置标签解析"></a>7.2 常用配置标签解析</h4><ul><li><p>environments标签</p><ul><li><p>数据库环境的配置，支持多环境配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--数据库环境配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用MySQL环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--事务管理器,底层JDBC--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--连接池,内置POOLED--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis_db"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>语句</th><th>作用</th></tr></thead><tbody><tr><td>&lt;environments default=”mysql”&gt;</td><td>使用默认数据库环境</td></tr><tr><td>&lt;environment&gt;</td><td>连接某个数据库的具体环境配置</td></tr><tr><td>id=”mysql”</td><td>当前环境名称</td></tr><tr><td>transactionManager type=”JDBC”</td><td>事务管理类型JDBC</td></tr><tr><td>dataSource type=”POOLED”</td><td>使用数据库连接池:mybatis内置</td></tr><tr><td>property</td><td>数据库连接基本配置</td></tr></tbody></table></li><li><p>其中，事务管理器(transactionManager)类型有两种:</p><table><thead><tr><th>transactionManager</th><th>作用</th></tr></thead><tbody><tr><td>JDBC</td><td>这个配置就是直接使用了JDBC 的提交和回滚设置，它依赖于从数据源得到的连接来管理事务作用域。</td></tr><tr><td>MANAGED</td><td>这个配置几乎没做什么。它从来不提交或回滚一个连接，而是让容器来管理事务的整个生命周期。</td></tr></tbody></table></li><li><p>其中，数据源(dataSource)常用类型有二种</p><table><thead><tr><th>dataSource</th><th>作用</th></tr></thead><tbody><tr><td>UNPOOLED</td><td>这个数据源的实现只是每次被请求时打开和关闭连接。</td></tr><tr><td>POOLED</td><td>这种数据源的实现利用“池”的概念将 JDBC 连接对象组织起来。</td></tr></tbody></table></li></ul></li><li><p>properties标签</p><ul><li><p>加载外置的properties配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#jdbc.properties</span><br><span class="line"></span><br><span class="line">jdbc.driver&#x3D;com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;Day48</span><br><span class="line">jdbc.user&#x3D;root</span><br><span class="line">jdbc.password&#x3D;root</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--加载外部properties文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name="driver" value="com.mysql.jdbc.Driver"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name="url" value="jdbc:mysql://localhost:3306/mybatis_db"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name="username" value="root"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;property name="password" value="root"/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--改为EL表达式 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.user&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>typeAliases标签</p><ul><li><p>为 Java 类型设置一个短的名字(类型别名)</p><p>mybatis框架内置了一些java类型的别名</p><table><thead><tr><th>别名Alias</th><th>映射的类型Mapped Type</th></tr></thead><tbody><tr><td>_byte</td><td>byte</td></tr><tr><td>_long</td><td>long</td></tr><tr><td>_short</td><td>short</td></tr><tr><td>_int</td><td>int</td></tr><tr><td>_integer</td><td>int</td></tr><tr><td>_double</td><td>double</td></tr><tr><td>_float</td><td>float</td></tr><tr><td>_boolean</td><td>boolean</td></tr><tr><td>string</td><td>String</td></tr><tr><td>byte</td><td>Byte</td></tr><tr><td>long</td><td>Long</td></tr><tr><td>short</td><td>Short</td></tr><tr><td>int</td><td>Integer</td></tr><tr><td>integer</td><td>Integer</td></tr><tr><td>double</td><td>Double</td></tr><tr><td>float</td><td>Float</td></tr><tr><td>boolean</td><td>Boolean</td></tr><tr><td>date</td><td>Date</td></tr><tr><td>decimal</td><td>BigDecimal</td></tr><tr><td>bigdecimal</td><td>BigDecimal</td></tr><tr><td>object</td><td>Object</td></tr><tr><td>map</td><td>Map</td></tr><tr><td>hashmap</td><td>HashMap</td></tr><tr><td>list</td><td>List</td></tr><tr><td>arraylist</td><td>ArrayList</td></tr><tr><td>collection</td><td>Collection</td></tr><tr><td>iterator</td><td>Iterator</td></tr></tbody></table></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">&lt;!--mybatis核心配置文件--&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!--设置java类型别名--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--设置一个java类型的别名</span></span><br><span class="line"><span class="comment">      &lt;typeAlias type="com.itheima.domain.User" alias="User"&gt;&lt;/typeAlias&gt;</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--将整个包下所有的类名设置了别名，别名（小名）：类名--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.itheima.domain"</span>&gt;</span><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">    SELECT * FROM user WHERE id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>mappers标签</p><ul><li><p>用于加载映射文件，加载方式有如下几种</p><table><thead><tr><th>作用</th><th>语句</th></tr></thead><tbody><tr><td>加载指定的src目录下的映射文件</td><td>&lt;mapper resource=”com/itheima/dao/UserMapper.xml”/&gt;</td></tr><tr><td>加载指定接口的全限定名(注解开发时使用)</td><td>&lt;mapper class=”com.itheima.mapper.UserMapper”/&gt;</td></tr><tr><td>加载并扫描指定包下所有的接口(基于接口扫描方式加载)</td><td>&lt;package name=”com.itheima.mapper”/&gt;</td></tr></tbody></table></li></ul></li><li><p>mybatis文件的关系介绍</p><table><thead><tr><th>User实体类</th><th>⬅</th><th>UserMapper.xml</th><th>➡</th><th>User表</th></tr></thead><tbody><tr><td></td><td></td><td>建立orm关系</td><td></td><td></td></tr></tbody></table></li></ul><h4 id="7-3-核心配置文件标签顺序"><a href="#7-3-核心配置文件标签顺序" class="headerlink" title="7.3 核心配置文件标签顺序"></a>7.3 核心配置文件标签顺序</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMENT configuration (properties?, settings?, typeAliases?, typeHandlers?, objectFactory?, objectWrapperFactory?, reflectorFactory?, plugins?, environments?, databaseIdProvider?, mappers?)&gt;</span><br></pre></td></tr></table></figure><h4 id="7-4-知识小结"><a href="#7-4-知识小结" class="headerlink" title="7.4 知识小结"></a>7.4 知识小结</h4><ul><li><p>properties标签:该标签可以加载外部的properties文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>typeAliases标签:设置类型别名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">"com.itheima.domain.User"</span> <span class="attr">alias</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">typeAlias</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>environments标签:数据源环境配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--数据库环境配置--&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使用MySQL环境--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器,底层JDBC--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--连接池,内置POOLED--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.user&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>mappers标签:加载映射配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/itheima/dao/UserMapper.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="八-Mybatis的API概述"><a href="#八-Mybatis的API概述" class="headerlink" title="八.Mybatis的API概述"></a>八.Mybatis的API概述</h1><h4 id="8-1-API介绍"><a href="#8-1-API介绍" class="headerlink" title="8.1 API介绍"></a>8.1 API介绍</h4><ul><li><p>Resources</p><ul><li><p>加载mybatis的核心配置文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载mybatis的核心配置文件，获取io流</span></span><br><span class="line">InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>SqlSessionFactoryBuilder</p><ul><li><p>根据mybatis的核心配置文件构建出SqlSessionFactory工厂对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>SqlSessionFactory</p><ul><li><p>用于创建SqlSession会话对象(相当于Connection对象)</p></li><li><p>这是一个工厂对象，对于这种创建和销毁都非常耗费资源，一个项目中只需要存在一个即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DML类型语句，需要手动提交事务 </span></span><br><span class="line"><span class="function">SqlSession <span class="title">openSession</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">// 设置是否开启自动提交事务的会话对象，如果设置true，自动提交 </span></span><br><span class="line"><span class="function">SqlSession <span class="title">openSession</span><span class="params">(<span class="keyword">boolean</span> autoCommit)</span></span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>SqlSession</p><ul><li>这是Mybatis的一个核心对象。我们基于这个对象可以实现对数据的CRUD操作</li><li>对于这个对象应做到每个线程独有，每次用时打开，用完关闭</li></ul></li><li><p>执行语句的方法主要有</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;T&gt; <span class="function">T <span class="title">selectOne</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line">&lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">selectList</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(String statement, Object parameter)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(String statement, Object parameter)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>操作事务的方法主要有</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">roolback</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="8-2-工作原理"><a href="#8-2-工作原理" class="headerlink" title="8.2 工作原理"></a>8.2 工作原理</h4><p><img src="MyBatis%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E5%9B%BE.png" alt=""></p><h1 id="九-Mybatis实现Dao层"><a href="#九-Mybatis实现Dao层" class="headerlink" title="九.Mybatis实现Dao层"></a>九.Mybatis实现Dao层</h1><h4 id="9-1-传统开发方式"><a href="#9-1-传统开发方式" class="headerlink" title="9.1 传统开发方式"></a>9.1 传统开发方式</h4><ul><li><p>编写UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询所有</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByID</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>编写UserMapper实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperImpl</span> <span class="keyword">implements</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            List&lt;User&gt; list = sqlSession.selectList(<span class="string">"UserMapper.findAll"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">save</span><span class="params">( )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            user.setUsername(<span class="string">"SAVE"</span>);</span><br><span class="line">            user.setSex(<span class="string">"Male"</span>);</span><br><span class="line">            user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">            user.setAddress(<span class="string">"HK"</span>);</span><br><span class="line">            <span class="keyword">int</span> insert = sqlSession.insert(<span class="string">"UserMapper.save"</span>, user);</span><br><span class="line"></span><br><span class="line">            sqlSession.commit();</span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> insert;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">update</span><span class="params">( )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            user.setId(<span class="number">53</span>);</span><br><span class="line">            user.setUsername(<span class="string">"UPDATE"</span>);</span><br><span class="line">            user.setSex(<span class="string">"Female"</span>);</span><br><span class="line">            user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">            user.setAddress(<span class="string">"HK"</span>);</span><br><span class="line">            <span class="keyword">int</span> update = sqlSession.update(<span class="string">"UserMapper.update"</span>, user);</span><br><span class="line">            sqlSession.commit();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> update;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">( )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            <span class="keyword">int</span> delete = sqlSession.delete(<span class="string">"UserMapper.delete"</span>, <span class="number">50</span>);</span><br><span class="line">            sqlSession.commit();</span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> delete;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findByID</span><span class="params">( )</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.加载核心配置文件</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 2.构建工厂</span></span><br><span class="line">            SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in); <span class="comment">// 3.创建会话</span></span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">            <span class="comment">// 4.执行sql</span></span><br><span class="line">            User user = sqlSession.selectOne(<span class="string">"UserMapper.findById"</span>, <span class="number">53</span>);</span><br><span class="line">            <span class="comment">// 5.释放资源</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            <span class="keyword">return</span> user;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>编写UserMapper.xml映射文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--新增--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        INSERT INTO</span><br><span class="line">        user(username,birthday,sex,address)</span><br><span class="line">        VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--修改--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        UPDATE user set username=#&#123;username&#125;,birthday=#&#123;birthday&#125;,sex=#&#123;sex&#125;,address=#&#123;address&#125; WHERE id =#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--删除--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"delete"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">        DELETE FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>模拟service测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findall</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        Integer save = userMapper.save();</span><br><span class="line">        System.out.println(save);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        Integer update = userMapper.update();</span><br><span class="line">        System.out.println(update);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        <span class="keyword">int</span> delete = userMapper.delete();</span><br><span class="line">        System.out.println(delete);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findOne</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        UserMapperImpl userMapper = <span class="keyword">new</span> UserMapperImpl();</span><br><span class="line">        User byID = userMapper.findByID();</span><br><span class="line">        System.out.println(byID);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>知识小结</p><ul><li>编写UserMapper接口 </li><li>编写UserMapperImpl实现类 </li><li>编写UserMapper.xml映射</li></ul></li></ul><h4 id="9-2-接口代理开发方式"><a href="#9-2-接口代理开发方式" class="headerlink" title="9.2 接口代理开发方式"></a>9.2 接口代理开发方式</h4><p>基于接口代理方式的开发只需要:编写接口和映射文件，Mybatis 框架会为我们动态生成实现类的对象。</p><ul><li><p>接口开发规范</p><ul><li><p>Mapper映射文件的namespace与Mapper接口全限定名一致 </p></li><li><p>Mapper接口的方法名与id的属性名一致</p></li><li><p>方法的参数类型与parameterType属性类型一致</p></li><li><p>方法的返回值类型与resultType属性类型一致</p></li><li><p>映射文件需要与接口在同一个包下，文件名和接口名相同:扫描包，加载所有的映射文件 </p><p>&lt;package name=”cn.itcast.dao”&gt;</package></p></li></ul></li><li><p>编写UserMapper接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"><span class="comment">// 查询所有</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写UserMapper.xml映射文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"cn.itcast.dao.UserMapper"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>模拟service测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 需要通过mybatis帮你根据接口规范创建实现类</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        <span class="comment">// 创建代理对象(实现类)</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 执行sql</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">        <span class="comment">// 关闭会话</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>基于接口代理方式的内部执行原理</p><p>使用了JDK动态代理技术，帮我们创建了接口的实现类，底层还是执行SqlSession.insert() | update()</p></li></ul><h1 id="十-接口代理的增删改查"><a href="#十-接口代理的增删改查" class="headerlink" title="十.接口代理的增删改查"></a>十.接口代理的增删改查</h1><h4 id="10-1-UserMapper接口"><a href="#10-1-UserMapper接口" class="headerlink" title="10.1 UserMapper接口"></a>10.1 UserMapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-2-UserMapper-xml-映射文件"><a href="#10-2-UserMapper-xml-映射文件" class="headerlink" title="10.2 UserMapper.xml 映射文件"></a>10.2 UserMapper.xml 映射文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--新增--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        INSERT INTO</span><br><span class="line">        user(username,birthday,sex,address)</span><br><span class="line">        VALUES (#&#123;username&#125;,#&#123;birthday&#125;,#&#123;sex&#125;,#&#123;address&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--修改--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"update"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        UPDATE user set username=#&#123;username&#125;,birthday=#&#123;birthday&#125;,sex=#&#123;sex&#125;,address=#&#123;address&#125; WHERE id =#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--删除--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"delete"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">        DELETE FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询一个--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        SELECT * FROM user WHERE id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="10-3-测试代码"><a href="#10-3-测试代码" class="headerlink" title="10.3 测试代码"></a>10.3 测试代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 需要通过mybatis帮你根据接口规范创建实现类</span></span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        <span class="comment">// 创建代理对象(实现类)</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// 执行sql</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.findAll();</span><br><span class="line">        System.out.println(list);</span><br><span class="line">        <span class="comment">// 关闭会话</span></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setUsername(<span class="string">"testSAVE_Interface"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Male"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"HK"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        userMapper.save(user);</span><br><span class="line"></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="number">54</span>);</span><br><span class="line">        user.setUsername(<span class="string">"testUpdate_Interface"</span>);</span><br><span class="line">        user.setSex(<span class="string">"Female"</span>);</span><br><span class="line">        user.setAddress(<span class="string">"HK"</span>);</span><br><span class="line">        user.setBirthday(<span class="keyword">new</span> Date());</span><br><span class="line">        userMapper.update(user);</span><br><span class="line"></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        userMapper.delete(<span class="number">53</span>);</span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        SqlSession sqlSession = MyBatisUtils.openSession();</span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        User user = userMapper.findById(<span class="number">52</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line"></span><br><span class="line">        MyBatisUtils.close(sqlSession);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## 一 框架简介</strong></p><p><strong>### MVC模式</strong></p><p>- model模型</p><p>- view视图</p><p>- controller控制器</p><p><strong>### 三层架构</strong></p><p>- web层</p><p>- service层</p><p>- dao层</p><p><strong>### 什么是框架？</strong></p><p>- 半成品软件 </p><p><strong>### 常见框架</strong></p><p>- 持久层</p><p>​    - mybatis</p><p>​    - hibernate</p><p>​    - spring jdbc</p><p>- 表现层</p><p>​    - struts2</p><p>​    - spring mvc</p><p>- 全栈（业务层）</p><p>​    - spring</p><p><strong>## 二 Mybatis简介</strong></p><p><strong>### mybatis是一款优秀的持久层框架，封装了jdbc实现细节，让开发者只关注      sql本身。</strong></p><p><strong>### mybatis是ORM映射框架</strong></p><p><strong>## 三 Mybatis快速入门</strong></p><p><strong>### 1. 创建mybatis_db数据库和user表</strong></p><p><strong>### 2. 创建java项目，引入MyBatis相关jar包</strong></p><p><strong>### 3. 创建User实体类</strong></p><p><strong>### 4. 编写映射文件UserMapper.xml</strong></p><p><strong>### 5. 编写核心文件SqlMapConfig.xml</strong></p><p><strong>### 6. 编写测试类</strong></p><p><strong>## 四 Mybatis映射文件概述</strong></p><p><strong>## 五 Mybatis增删改查</strong></p><p><strong>### 了解</strong></p><p><strong>## 六 抽取工具类</strong></p><p><strong>## 七 Mybatis核心文件概述</strong></p><p><strong>### environments标签</strong></p><p>- 数据库环境配置</p><p><strong>### properties标签</strong></p><p>- 引入第三方配置</p><p><strong>### typeAliases标签</strong></p><p>- 实体别名配置</p><p><strong>### mappers标签</strong></p><p>- 加载映射配置</p><p><strong>## 八 Mybatis的API概述</strong></p><p><strong>### Resources</strong></p><p>- 加载核心配置文件</p><p><strong>### SqlSessionFactoryBuilder</strong></p><p>- 构建工厂</p><p><strong>### SqlSessionFactory</strong></p><p>- 生产会话对象</p><p><strong>### SqlSession</strong></p><p>- 实现与数据库CRUD操作</p><p><strong>## 九 Mybatis实现Dao层的二种方式</strong></p><p><strong>### 传统方式</strong></p><p><strong>### 接口代理方式</strong></p><p>- 1。映射文件的命名空间必须是接口的全限定类名</p><p>- 2。接口方法的名称必须与statement标签id一致</p><p>- 3。接口方法参数类型必须与statement标签的parameterType类型一致</p><p>- 4。接口方法返回值类型必须与statement标签的ResultType类型一致</p><p>- 5。接口和映射文件同名，同包</p><p><strong>## 十 接口代理的增删改查</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;框架简介&lt;/li&gt;
&lt;li&gt;Mybatis简介&lt;/li&gt;
&lt;li&gt;Mybatis快速入门&lt;/li&gt;
&lt;li&gt;Mybatis映射文件概述&lt;/li&gt;
&lt;li&gt;Mybatis增删改查&lt;/li&gt;
&lt;li&gt;抽取工具类&lt;/li&gt;
&lt;li&gt;Mybatis核心文件概述&lt;/li&gt;
&lt;li&gt;Mybatis的API概述&lt;/li&gt;
&lt;li&gt;Mybatis实现Dao层&lt;/li&gt;
&lt;li&gt;接口代理的增删改查&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（四十九）</title>
    <link href="http://yoursite.com/2020/05/08/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%B9%9D%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/08/就业班学习笔记（四十九）/</id>
    <published>2020-05-08T01:02:16.000Z</published>
    <updated>2020-05-08T16:01:20.603Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>PreparedStatement</p></li><li><p>连接池</p></li></ul><a id="more"></a><h1 id="一-PreparedStatement"><a href="#一-PreparedStatement" class="headerlink" title="一.PreparedStatement"></a>一.PreparedStatement</h1><h4 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h4><ul><li><p>SQL注入问题</p><p>我们让用户输入的信息和SQL语句进行字符串拼接。用户输入的内容作为了SQL语句语法的一部分，改变了原有SQL</p><p>真正的意义，以上问题称为SQL注入。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 这条sql语句原有的含义是根据用户名和密码查询</span></span><br><span class="line"><span class="comment">-- 现在用户输入了一些特殊字符，改变了sql原有的含义，这种行为成为sql注入 </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> username =<span class="string">'admin'</span><span class="comment"># ' and password =''</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>解决SQL注入问题</p><p>我们就不能让用户输入的信息和SQL语句进行字符串拼接。需要使用PreparedSatement对象解决SQL注入。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在java语言中修复sql注入问题，通过占位符代替实际参数</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> username = ? <span class="keyword">AND</span> <span class="keyword">password</span> = ?</span><br><span class="line"><span class="comment">-- 仅仅模拟sql解决思想，非真实解决方案</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> username = <span class="string">"admin'#"</span> <span class="keyword">AND</span> <span class="keyword">PASSWORD</span> = <span class="string">""</span></span><br></pre></td></tr></table></figure></li><li><p>PreparedSatement基础语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 1.获取连接</span><br><span class="line">// 2.编写sql【占位符代替实际参数】</span><br><span class="line">String sql = "<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span> <span class="keyword">WHERE</span> username = ? <span class="keyword">AND</span> <span class="keyword">password</span> = ?<span class="string">";</span></span><br><span class="line"><span class="string">// 3.获取sql预编译执行对象，先发送给数据库进行预编译 </span></span><br><span class="line"><span class="string">PreparedStatement pstmt = connection.prepareStatement(sql);</span></span><br><span class="line"><span class="string">// 4.设置占位符实际参数 </span></span><br><span class="line"><span class="string">pstmt.setString(1,"</span><span class="keyword">admin</span><span class="string">'#"); </span></span><br><span class="line"><span class="string">pstmt.setString(2,"");</span></span><br><span class="line"><span class="string">// 5.执行sql语句，并返回结果【注意，不需要传递sql参数】 </span></span><br><span class="line"><span class="string">ResultSet resultSet = pstmt.executeQuery();</span></span><br><span class="line"><span class="string">// 6.处理结果 // 7.释放资源</span></span><br></pre></td></tr></table></figure></li><li><p>优点</p><p> 防止sql注入，提高安全性</p><p>参数与sql分离，提高代码可读性 </p><p>减少编译次数，提高性能</p></li></ul><h4 id="1-2-操作"><a href="#1-2-操作" class="headerlink" title="1.2 操作"></a>1.2 操作</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CRUD_DEMO</span> </span>&#123;</span><br><span class="line">    <span class="comment">//新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//获取连接</span></span><br><span class="line">        Connection connection = JdbcUtils.getConnection();</span><br><span class="line">        <span class="comment">//编写sql</span></span><br><span class="line">        String sql = <span class="string">"INSERT INTO user VALUES (NULL ,?,?);"</span>;</span><br><span class="line">        <span class="comment">//获取sql预编译执行对象</span></span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        <span class="comment">//设计实际参数</span></span><br><span class="line">        preparedStatement.setString(<span class="number">1</span>, <span class="string">"Jerry"</span>);</span><br><span class="line">        preparedStatement.setString(<span class="number">2</span>, <span class="string">"999"</span>);</span><br><span class="line">        <span class="comment">//执行sql并返回结果</span></span><br><span class="line">        <span class="keyword">int</span> i = preparedStatement.executeUpdate();</span><br><span class="line">        <span class="comment">//处理结果</span></span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"First Recording Add Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        preparedStatement.setString(<span class="number">1</span>, <span class="string">"Ming"</span>);</span><br><span class="line">        preparedStatement.setString(<span class="number">2</span>, <span class="string">"999"</span>);</span><br><span class="line">        i = preparedStatement.executeUpdate();</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Second Recording Add Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        JdbcUtils.close(preparedStatement, connection);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//获取连接</span></span><br><span class="line">        Connection connection = JdbcUtils.getConnection();</span><br><span class="line">        <span class="comment">//编写sql</span></span><br><span class="line">        String sql = <span class="string">"UPDATE user SET username = ? where id = ?;"</span>;</span><br><span class="line">        <span class="comment">//获取预编译sql执行对</span></span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        <span class="comment">//设计实际参数</span></span><br><span class="line">        preparedStatement.setString(<span class="number">1</span>, <span class="string">"RRR"</span>);</span><br><span class="line">        preparedStatement.setInt(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">        <span class="comment">//执行sql,并返回结果</span></span><br><span class="line">        <span class="keyword">int</span> i = preparedStatement.executeUpdate();</span><br><span class="line">        <span class="comment">//处理结果</span></span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Update Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        JdbcUtils.close(preparedStatement, connection);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Connection connection = JdbcUtils.getConnection();</span><br><span class="line">        String sql = <span class="string">"DELETE FROM user WHERE id=?"</span>;</span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        preparedStatement.setInt(<span class="number">1</span>, <span class="number">6</span>);</span><br><span class="line">        <span class="keyword">int</span> i = preparedStatement.executeUpdate();</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Delete Successful"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        JdbcUtils.close(preparedStatement, connection);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Connection connection = JdbcUtils.getConnection();</span><br><span class="line">        String sql = <span class="string">"SELECT * FROM user;"</span>;</span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        ResultSet resultSet = preparedStatement.executeQuery();</span><br><span class="line">        <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">            <span class="keyword">int</span> id = resultSet.getInt(<span class="string">"id"</span>);</span><br><span class="line">            String username = resultSet.getString(<span class="string">"username"</span>);</span><br><span class="line">            String password = resultSet.getString(<span class="string">"password"</span>);</span><br><span class="line">            System.out.println(<span class="string">"\tID:"</span> + id + <span class="string">"\tUSERNAME:"</span> + username + <span class="string">"\tPASSWORD:"</span> + password);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        JdbcUtils.close(preparedStatement, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二-连接池"><a href="#二-连接池" class="headerlink" title="二.连接池"></a>二.连接池</h1><h4 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h4><p>连接池其实就是一个容器(集合)，存放数据库连接的容器。</p><p>当系统初始化好后，容器被创建，容器中会申请一些连接对象，当用户来访问数据库时，从容器中获取连接对象，用 户访问完之后，会将连接对象归还给容器。</p><ul><li><p>优点</p><p>节约资源，减轻服务器压力 </p><p>提高连接复用性，用户访问高效</p></li><li><p>常见连接池</p><table><thead><tr><th>DBCP</th><th>Apache提供的数据库连接池技术。</th></tr></thead><tbody><tr><td>C3P0</td><td>数据库连接池技术，目前使用它的开源项目有Hibernate、Spring等。</td></tr><tr><td>HikariCP</td><td>日本开发的连接池技术，性能之王,目前使用它的开源项目有SpringBoot等。</td></tr><tr><td>Druid(德鲁伊)</td><td>阿里巴巴提供的数据库连接池技术</td></tr></tbody></table></li><li><p>实现</p><p>Java为数据库连接池提供了公共的接口: DataSource ，各个连接池厂商去实现这套接口，提供jar包。</p><table><thead><tr><th>功能</th><th></th></tr></thead><tbody><tr><td>获取连接</td><td>Connection getConnection()</td></tr><tr><td>归还连接</td><td>connection.close()</td></tr><tr><td></td><td>若连接对象通过连接池获取，执行 connection.close() 方法时，是归还到连接池，非销毁对象</td></tr><tr><td></td><td>底层通过动态代理技术对close()方法进行了增强</td></tr></tbody></table></li></ul><h4 id="2-2-Druid连接池"><a href="#2-2-Druid连接池" class="headerlink" title="2.2 Druid连接池"></a>2.2 Druid连接池</h4><h5 id="2-2-1-快速入门"><a href="#2-2-1-快速入门" class="headerlink" title="2.2.1 快速入门"></a>2.2.1 快速入门</h5><ul><li><p>导入jar包</p><p>druid-1.1.10.jar</p><p>mysql-connector-java-8.0.16.jar</p></li><li><p>编写测试代码(耦合版本)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.创建druid连接池对象</span></span><br><span class="line">        DruidDataSource dataSource = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.与mysql建立连接(初始化一些连接个数)，设置数据库基本四项</span></span><br><span class="line">        dataSource.setDriverClassName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        dataSource.setUrl(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>);</span><br><span class="line">        dataSource.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        dataSource.setPassword(<span class="string">"root"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.从连接池中获取连接</span></span><br><span class="line">        Connection connection = dataSource.getConnection();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.处理业务</span></span><br><span class="line">        System.out.println(connection);</span><br><span class="line">        <span class="comment">// 5.归还连接,注意，非销毁</span></span><br><span class="line">        connection.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="2-2-2-配置文件"><a href="#2-2-2-配置文件" class="headerlink" title="2.2.2 配置文件"></a>2.2.2 配置文件</h5><table><thead><tr><th>参数设置</th><th>作用</th></tr></thead><tbody><tr><td>initialSize</td><td>初始化建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时</td></tr><tr><td>maxActivve</td><td>最大连接池数量</td></tr><tr><td>MinIdle</td><td>最小连接池数量</td></tr><tr><td>maxWait</td><td>获取连接时最大等待时间，ms</td></tr></tbody></table><ul><li><p>定义配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#druid.properties</span><br><span class="line">#基本4项，必须有，左边名称限定</span><br><span class="line">driverClassName&#x3D;com.mysql.jdbc.Driver</span><br><span class="line">url&#x3D;jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;Day48</span><br><span class="line">username&#x3D;root</span><br><span class="line">password&#x3D;root</span><br><span class="line"></span><br><span class="line"># 初始化个数</span><br><span class="line">initialSize&#x3D;5</span><br><span class="line">#最大连接个数</span><br><span class="line">maxActivve&#x3D;10</span><br><span class="line">#等待时间，ms</span><br><span class="line">maxWait&#x3D;3000</span><br></pre></td></tr></table></figure></li><li><p>编写代码(解耦合版)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidDemo2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 通过类加载器读取src目录下配置文件，获取io流</span></span><br><span class="line">        InputStream is = DruidDemo2.class.getClassLoader().getResourceAsStream("druid.properties");</span><br><span class="line">        <span class="comment">// 创建 Properties对象</span></span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        properties.load(is);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// druid连接池工厂对象，初始化连接池</span></span><br><span class="line">        DataSource dataSource = DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取连接</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">11</span>; i++) &#123;</span><br><span class="line">            Connection connection = dataSource.getConnection();</span><br><span class="line">            System.out.println(connection);</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">10</span>) &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="comment">// 归还连接</span></span><br><span class="line">            <span class="comment">//connection.close();</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-连接工具类"><a href="#2-3-连接工具类" class="headerlink" title="2.3 连接工具类"></a>2.3 连接工具类</h4><p>我们每次操作数据库都需要创建连接池，获取连接，关闭资源，都是重复的代码。我们可以将创建连接池和获取连接</p><p>池的代码放到一个工具类中。</p><blockquote><p>保证连接池对象，只创建一次</p></blockquote><p>目的:简化书写，提高效率</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span></span>&#123;</span><br><span class="line"><span class="comment">// 1.初始化连接池对象(druid)，一个项目只有一个 static&#123;&#125; // 2.提供获取连接池对象静态方法</span></span><br><span class="line"><span class="comment">// 3.提供连接对象的静态方法</span></span><br><span class="line"><span class="comment">// 4.提供释放资源的静态方法(connection是归还)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.初始化连接池对象(druid)，一个项目只有一个 static&#123;&#125;</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 通过类加载器读取src目录下配置文件，获取io流</span></span><br><span class="line">            InputStream is = JdbcUtils.class.getClassLoader().getResourceAsStream("druid.properties");</span><br><span class="line">            <span class="comment">// 创建 Properties对象</span></span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(is);</span><br><span class="line">            <span class="comment">// druid连接池工厂对象，初始化连接池</span></span><br><span class="line">            dataSource = DruidDataSourceFactory.createDataSource(properties);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.提供获取连接池对象静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.提供连接对象的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.提供释放资源的静态方法(connection是归还)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet resultSet, Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重载关闭方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        close(<span class="keyword">null</span>, statement, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三-案例-用户登录"><a href="#三-案例-用户登录" class="headerlink" title="三.案例:用户登录"></a>三.案例:用户登录</h1><ul><li><p>需求 </p><p>使用三层架构+JDBC连接池技术(面向接口编程)，实现用户登录案例</p></li></ul><h4 id="3-1-需求分析"><a href="#3-1-需求分析" class="headerlink" title="3.1 需求分析"></a>3.1 需求分析</h4><table><thead><tr><th>Login.jsp</th><th></th><th></th><th>Server</th><th></th><th></th><th>数据库</th></tr></thead><tbody><tr><td></td><td></td><td>web层</td><td>service层</td><td>dao层</td><td></td><td></td></tr><tr><td>UserName<br>Password</td><td>➡<br>⬅</td><td>Servlet接口</td><td>UserService接口</td><td>UserDao接口</td><td>➡<br/>⬅</td><td>SQL</td></tr><tr><td>Login</td><td></td><td>⬆</td><td>⬆</td><td>⬆</td><td></td><td></td></tr><tr><td></td><td></td><td>LoginServlet<br>1.接收请求<br/>2.调用service<br/>3.判断转发/重定向</td><td>UserServiceImpl实现类</td><td>UserDaoImpl实现类</td><td></td><td></td></tr></tbody></table><table><thead><tr><th>Login.jsp</th><th></th><th></th><th>Server</th><th></th><th></th><th>数据库</th></tr></thead><tbody><tr><td></td><td></td><td>LoginServlet</td><td>UserServiceImpl</td><td>UserDaoImpl</td><td></td><td></td></tr><tr><td>UserName<br>Password</td><td>➡<br>⬅</td><td>实现了Servlet接口</td><td>实现了UserService接口</td><td>实现了UserDao接口</td><td>➡<br/>⬅</td><td>SQL</td></tr><tr><td>Login</td><td></td><td>1.接收请求参数<br/>username<br/>password<br/>2.调用service，返回User对象<br/>3.判断User对象<br/>转发，提示用户名/密码错误<br/>重定向list.jsp</td><td>public User login(user,  pwd) {   <br>  调用dao，返回user对象<br/> }</td><td>public User login(user,  pwd) {   <br/>  使用JDBC连接池获取连接<br/>查询数据库<br>将结果封装到user对象中 }</td><td></td><td></td></tr></tbody></table><h4 id="3-2-环境搭建"><a href="#3-2-环境搭建" class="headerlink" title="3.2 环境搭建"></a>3.2 环境搭建</h4><ul><li><p>使用昨天的数据库和user表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">id</span>       <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">    username <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">    <span class="keyword">password</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">USER</span> (username, <span class="keyword">password</span>)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'admin'</span>, <span class="string">'123'</span>),</span><br><span class="line">       (<span class="string">'tom'</span>, <span class="string">'123'</span>),</span><br><span class="line">       (<span class="string">'jack'</span>, <span class="string">'123'</span>);</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建web工程，导入相关jar包</p><p>commons-beanutils-1.8.3.jar</p><p>commons-logging-1.1.1.jar</p><p>druid-1.1.10.jar</p><p>javax.servlet.jsp.jstl.jar</p><p>jstl-impl.jar</p><p>mysql-connector-java-8.0.16.jar</p></li><li><p>导入页面资源</p></li><li><p>创建三层包目录结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">├── com</span><br><span class="line">│   └── <span class="keyword">case</span></span><br><span class="line">│       ├── dao</span><br><span class="line">│       │   ├── UserDao.java</span><br><span class="line">│       │   └── UserDaoImpl.java</span><br><span class="line">│       ├── domain</span><br><span class="line">│       │   └── User.java</span><br><span class="line">│       ├── service</span><br><span class="line">│       │   ├── UserService.java</span><br><span class="line">│       │   └── UserServiceImpl.java</span><br><span class="line">│       ├── util</span><br><span class="line">│       │   └── JdbcUtils.java</span><br><span class="line">│       └── web</span><br><span class="line">│           ├── filter</span><br><span class="line">│           │   └── EncodeFilter.java</span><br><span class="line">│           └── servlet</span><br><span class="line">│               └── LoginServlet.java</span><br><span class="line">└── druid.properties</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">9 directories, 9 files</span><br></pre></td></tr></table></figure></li><li><p>导入JbdcUtils工具类</p></li><li><p>编写User实体类</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//省略getter/setter，toString，全参构造</span></span><br></pre></td></tr></table></figure><h4 id="3-3-代码实现"><a href="#3-3-代码实现" class="headerlink" title="3.3 代码实现"></a>3.3 代码实现</h4><ul><li>LoginServlet</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 处理编码</span></span><br><span class="line"><span class="comment">//        req.setCharacterEncoding("utf-8");</span></span><br><span class="line"><span class="comment">//        resp.setContentType("text/html;charset=utf-8");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.接收请求参数</span></span><br><span class="line">        String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.调用service</span></span><br><span class="line">        UserServiceImpl userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        User user = userService.login(username, password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.判断</span></span><br><span class="line">        <span class="keyword">if</span>(user==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">// 登录失败，友情提示</span></span><br><span class="line">            req.setAttribute(<span class="string">"error"</span>,<span class="string">"Username/Password Wrong"</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 登录成功</span></span><br><span class="line">            req.getSession().setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">            resp.sendRedirect(req.getContextPath()+<span class="string">"/list.jsp"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>UserService 接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//根据用户名密码查询User对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String username, String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>UserServiceImpl 实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        UserDaoImpl userDao = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line">        <span class="keyword">return</span> userDao.login(username,password);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>UserDao 接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">//根据用户名密码查询User对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String username, String password)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>UserDaoImpl 实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String username, String password)</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement preparedStatement = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.获取连接【从连接池】</span></span><br><span class="line">            connection = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">// 2.编写sql</span></span><br><span class="line">            String sql = <span class="string">"SELECT * FROM user WHERE username= ? AND password = ?;"</span>;</span><br><span class="line">            <span class="comment">// 3.获取sql预编译执行对象</span></span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            <span class="comment">// 4.设置实际参数</span></span><br><span class="line">            preparedStatement.setString(<span class="number">1</span>, username);</span><br><span class="line">            preparedStatement.setString(<span class="number">2</span>, password);</span><br><span class="line">            <span class="comment">// 5.执行sql并返回结果</span></span><br><span class="line">            resultSet = preparedStatement.executeQuery();</span><br><span class="line">            <span class="comment">// 6.处理结果</span></span><br><span class="line">            User user = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (resultSet.next()) &#123;</span><br><span class="line">                <span class="comment">// 获取 id 用户名、密码</span></span><br><span class="line">                <span class="keyword">int</span> id = resultSet.getInt(<span class="string">"id"</span>);</span><br><span class="line">                username = resultSet.getString(<span class="string">"username"</span>);</span><br><span class="line">                password = resultSet.getString(<span class="string">"password"</span>);</span><br><span class="line">                user = <span class="keyword">new</span> User();</span><br><span class="line">                user.setId(id);</span><br><span class="line">                user.setUsername(username);</span><br><span class="line">                user.setPassword(password);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> user;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 7.释放资源</span></span><br><span class="line">            JdbcUtils.close(resultSet, preparedStatement, connection);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>## PreparedStatement</strong></p><p><strong>### 介绍</strong></p><p>- 预编译sql执行对象</p><p><strong>### 优点</strong></p><p>- 1）防止sql注入，提高安全性</p><p>- 2）减少编译次数，提高效率</p><p>- 3）参数与sql语句分离，提高可读性</p><p><strong>### 步骤</strong></p><p>- 1）注册驱动</p><p>- 2）建立连接</p><p>- 3）编写sql ?占位符代替参数</p><p>- 4）获取sql预编译执行对象 先将sql发送到数据库</p><p>- 5）设置实际参数</p><p>- 6）执行sql并返回结果</p><p>- 7）处理结果</p><p>- 8）释放资源</p><p><strong>### 作业</strong></p><p>- 重写登录案例</p><p>- CRUD练习</p><p><strong>## datasource</strong></p><p><strong>### 介绍：</strong></p><p>- 在系统初始化时，创建一个连接池生成一些连接对象，用户访问数据库时，从连接池获取连接，使用完毕归还到连接池</p><p><strong>### 优点</strong></p><p>- 1）减轻服务器压力</p><p>- 2）提高连接复用性</p><p><strong>### dataSource</strong></p><p>- 是sun公司提供连接池规范（接口），连接池厂商根据接口编写实现类</p><p>​    - c3p0</p><p>​    - hikariCP</p><p>​    - Druid</p><p><strong>### 作业</strong></p><p>- druid快速入门</p><p>​    - 1）导入jar包</p><p>​    - 2）定义配置文件</p><p>​    - 3）编写代码</p><p>- druid连接池工具类</p><p><strong>## 案例：用户登录</strong></p><p><strong>### 面向接口编程</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;PreparedStatement&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;连接池&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（四十八）</title>
    <link href="http://yoursite.com/2020/05/06/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E5%85%AB%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/06/就业班学习笔记（四十八）/</id>
    <published>2020-05-06T01:01:41.000Z</published>
    <updated>2020-05-08T16:01:57.646Z</updated>
    
    <content type="html"><![CDATA[<ul><li>JDBC基础</li></ul><a id="more"></a><h1 id="一-JDBC基础"><a href="#一-JDBC基础" class="headerlink" title="一.JDBC基础"></a>一.JDBC基础</h1><h4 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h4><p>Java 数据库连接(Java DataBase Connectivity)</p><ul><li><p>作用:通过Java语言操作数据库</p></li><li><p>本质:是官方(sun公司)定义的一套操作所有关系型数据库的规则(接口)。各个数据库厂商去实现这套接口，提 供数据库驱动jar包。我们可以使用这套接口(JDBC)编程，运行时的代码其实是驱动jar包中的实现类。</p></li></ul><h4 id="1-2-快速入门"><a href="#1-2-快速入门" class="headerlink" title="1.2 快速入门"></a>1.2 快速入门</h4><ul><li><p>需求</p><p>通过java代码向数据库user表插入一条记录</p></li><li><p>准备数据库和表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> Day48;</span><br><span class="line"><span class="keyword">USE</span> Day48;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">id</span>       <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">    username <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">    <span class="keyword">password</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">USER</span> (username, <span class="keyword">password</span>)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">'admin'</span>, <span class="string">'123'</span>),</span><br><span class="line">       (<span class="string">'tom'</span>, <span class="string">'123'</span>),</span><br><span class="line">       (<span class="string">'jack'</span>, <span class="string">'123'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span>;</span><br></pre></td></tr></table></figure></li><li><p>创建java工程，导入MySQL驱动jar包</p><p>mysql-connector-java-5.1.45-bin.jar</p></li><li><p>编写插入代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCDEMO</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1.注册驱动</span></span><br><span class="line"><span class="comment">//        DriverManager.registerDriver(new Driver());</span></span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        <span class="comment">//2.建立连接</span></span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        <span class="comment">//3.编写sql</span></span><br><span class="line">        String sql = <span class="string">"insert into user values(4,'lucy',666)"</span>;</span><br><span class="line">        <span class="comment">//4.获取sql执行对象</span></span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="comment">//5.执行sql并返回结果</span></span><br><span class="line">        <span class="keyword">int</span> i = statement.executeUpdate(sql);</span><br><span class="line">        <span class="comment">//6.处理结果</span></span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Success"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//7.释放资源</span></span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-API介绍"><a href="#1-3-API介绍" class="headerlink" title="1.3 API介绍"></a>1.3 API介绍</h4><p>sun公司提供的:java.sql包下</p><ul><li><p>DriverManager:驱动管理对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.注册驱动</span><br><span class="line">        <span class="number">1</span>)<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">registerDriver</span><span class="params">(Driver driver)</span></span></span><br><span class="line"><span class="function">        我们通过翻看MySQL Driver实现类的源码发现内部的静态代码已经提供了注册驱动功能</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">        DriverManager.registerDriver(<span class="keyword">new</span> Driver());</span><br><span class="line">        &#125;<span class="keyword">catch</span>(SQLException var1)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Can't register driver!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="number">2</span>)反射 </span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        <span class="number">3</span>)SPI 服务提供接口 【Service Provider Interface】</span><br><span class="line"><span class="number">2</span>.建立连接</span><br><span class="line"><span class="function"><span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">(String url,String user,String password)</span></span></span><br><span class="line"><span class="function">参数说明:</span></span><br><span class="line"><span class="function">        url:连接指定数据库地址【固定格式】 </span></span><br><span class="line"><span class="function">        格式:jdbc:mysql:<span class="comment">//ip地址+端口/数据库名 </span></span></span><br><span class="line"><span class="function">        实例:</span></span><br><span class="line"><span class="function">        jdbc:mysql:<span class="comment">//localhost:3306/day23</span></span></span><br><span class="line"><span class="function">        jdbc:mysql:<span class="comment">///day23 </span></span></span><br><span class="line"><span class="function">      user:用户名</span></span><br><span class="line"><span class="function">      password:密码</span></span><br></pre></td></tr></table></figure></li><li><p>Connection:数据库连接对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 获取sql执行对象【小货车】</span><br><span class="line">  <span class="function">Statement <span class="title">createStatement</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">  PreparedStatement <span class="title">prepareStatement</span><span class="params">(String sql)</span>  </span></span><br><span class="line"><span class="function">2. 事务管理 </span></span><br><span class="line"><span class="function">    1)关闭自动提交<span class="params">(开启事务)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">void</span> <span class="title">setAutoCommit</span><span class="params">(<span class="keyword">boolean</span> autoCommit)</span></span></span><br><span class="line"><span class="function">      参数: </span></span><br><span class="line"><span class="function">          <span class="keyword">true</span>:自动提交【默认值】 </span></span><br><span class="line"><span class="function">          <span class="keyword">false</span>:手动提交</span></span><br><span class="line"><span class="function">    2)提交事务</span></span><br><span class="line"><span class="function">        <span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    3)回滚事务</span></span><br><span class="line"><span class="function">        <span class="keyword">void</span> <span class="title">rollback</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>Statement:执行sql的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 执行所有类型sql语句【了解】</span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">execute</span><span class="params">(String sql)</span></span></span><br><span class="line"><span class="function">2. 仅执行DML类型sql语句</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">executeUpdate</span><span class="params">(String sql)</span></span></span><br><span class="line"><span class="function">      参数:dml类型<span class="title">sql</span><span class="params">(insert、update、delete)</span> </span></span><br><span class="line"><span class="function">      返回值:影响行数</span></span><br><span class="line"><span class="function">3. 仅执行DQL类型sql语句</span></span><br><span class="line"><span class="function">ResultSet <span class="title">executeQuery</span><span class="params">(String sql)</span></span></span><br><span class="line"><span class="function">    参数:dql类型<span class="title">sql</span><span class="params">(select)</span> </span></span><br><span class="line"><span class="function">    返回值:结果集</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>ResultSet:结果集对象,封装查询结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 指针下移</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">next</span><span class="params">()</span></span></span><br><span class="line"><span class="function">返回值: </span></span><br><span class="line"><span class="function">          <span class="keyword">true</span>:表示此行有数据 </span></span><br><span class="line"><span class="function">          <span class="keyword">false</span>:表示此行没有数据</span></span><br><span class="line"><span class="function">    <span class="title">while</span><span class="params">(resultSet.next)</span></span>&#123;</span><br><span class="line">    <span class="comment">//获取一行数据</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="number">2</span>. 获取数据</span><br><span class="line">  根据制定列编号和数据类型获取</span><br><span class="line">    <span class="function">T <span class="title">getXxx</span><span class="params">(<span class="keyword">int</span> 列编号)</span></span></span><br><span class="line"><span class="function">  根据指定列名和数据类型获取</span></span><br><span class="line"><span class="function">    T <span class="title">getXxx</span><span class="params">(String 列名)</span></span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">    补充:获取所有类型</span></span><br><span class="line"><span class="function">        Object <span class="title">getObject</span><span class="params">(String 列名)</span> </span></span><br><span class="line"><span class="function">        String <span class="title">getString</span><span class="params">(String 列名)</span></span></span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-CRUD操作"><a href="#1-4-CRUD操作" class="headerlink" title="1.4 CRUD操作"></a>1.4 CRUD操作</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.注册驱动</span></span><br><span class="line"><span class="comment">// 2.建立连接</span></span><br><span class="line"><span class="comment">// 3.编写sql</span></span><br><span class="line"><span class="comment">// 4.获取sql执行对象 // 5.执行sql并返回结果 // 6.处理结果</span></span><br><span class="line"><span class="comment">// 7.释放资源</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CRUDDEMO</span> </span>&#123;</span><br><span class="line">    <span class="comment">//新增</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        String sql = <span class="string">"insert into user values(NULL,'testInsert',666)"</span>;</span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="keyword">int</span> i = statement.executeUpdate(sql);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Successful"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        String sql = <span class="string">"UPDATE user SET username='testUpdate' WHERE id = 4"</span>;</span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="keyword">int</span> i = statement.executeUpdate(sql);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Successful"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAlter</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        String sql = <span class="string">"delete from user WHERE id = 2"</span>;</span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="keyword">int</span> i = statement.executeUpdate(sql);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Successful"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        Connection connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        String sql = <span class="string">"SELECT * FROM user"</span>;</span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">            <span class="keyword">int</span> id = resultSet.getInt(<span class="string">"id"</span>);</span><br><span class="line">            String username = resultSet.getString(<span class="string">"username"</span>);</span><br><span class="line">            String password = resultSet.getString(<span class="string">"password"</span>);</span><br><span class="line">            System.out.println(<span class="string">"\tID:"</span> + id + <span class="string">"\tUSERNAME:"</span> + username + <span class="string">"\tPASSWORD:"</span> + password);</span><br><span class="line">        &#125;</span><br><span class="line">        resultSet.close();</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-5-工具类"><a href="#1-5-工具类" class="headerlink" title="1.5 工具类"></a>1.5 工具类</h4><p>通过上面案例需求我们会发现每次去执行SQL语句都需要注册驱动，获取连接，得到Statement，以及释放资源。发</p><p>现很多重复的劳动，我们可以将重复的代码定义到一个工具类中。 </p><ul><li><p>目的:简化书写，一劳永逸</p></li><li><p>步骤分析</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span></span>&#123;</span><br><span class="line"><span class="comment">// 1.注册驱动【保证一次】</span></span><br><span class="line"><span class="keyword">static</span>&#123; &#125;</span><br><span class="line"><span class="comment">// 2.提供获取连接的静态方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 3.提供释放资源的方法 </span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-5-1-版本一"><a href="#1-5-1-版本一" class="headerlink" title="1.5.1 版本一"></a>1.5.1 版本一</h5><ul><li>该版本具有耦合性</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils1</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 1.注册驱动【保证一次】</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Load JDBC Driver Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.提供获取连接的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/Day48"</span>, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.提供释放资源的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet resultSet, Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重载关闭方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        close(statement, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-5-2-版本二"><a href="#1-5-2-版本二" class="headerlink" title="1.5.2 版本二"></a>1.5.2 版本二</h5><ul><li><p>解耦合版本</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#K-V</span></span><br><span class="line"><span class="meta">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/Day48</span></span><br><span class="line"><span class="meta">jdbc.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUitls</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明变量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String user = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载jdbc.properties配置文件，初始化变量</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        ResourceBundle jdbc = ResourceBundle.getBundle(<span class="string">"jdbc"</span>);</span><br><span class="line">        driver = jdbc.getString(<span class="string">"jdbc.driver"</span>);</span><br><span class="line">        url = jdbc.getString(<span class="string">"jdbc.url"</span>);</span><br><span class="line">        user = jdbc.getString(<span class="string">"jdbc.user"</span>);</span><br><span class="line">        password = jdbc.getString(<span class="string">"jdbc.password"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.注册驱动【保证一次】</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(driver);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Load Driver Failed"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.提供获取连接的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url, user, password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.提供释放资源的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet resultSet, Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultSet != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (statement != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重载关闭方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement statement, Connection connection)</span> </span>&#123;</span><br><span class="line">        close(<span class="keyword">null</span>, statement, connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-6-事务操作"><a href="#1-6-事务操作" class="headerlink" title="1.6 事务操作"></a>1.6 事务操作</h4><ul><li><p>事务</p><p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败</p></li><li><p>MySQL事务操作</p><table><thead><tr><th>事务</th><th></th></tr></thead><tbody><tr><td>开启事务</td><td>begin | start transaction;</td></tr><tr><td>提交事务</td><td>commit;</td></tr><tr><td>回顾事务</td><td>rollback;</td></tr></tbody></table></li><li><p>Java操作(使用Connection对象)</p><table><thead><tr><th>事务</th><th></th></tr></thead><tbody><tr><td>关闭自动提交(开启事务)</td><td>void setAutoCommit(false);</td></tr><tr><td>提交事务</td><td>void commit();</td></tr><tr><td>回顾事务</td><td>void rollback();</td></tr></tbody></table></li><li><p>需求:</p><p>通过Java代码实现转账案例</p></li><li><p>导入账户表</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">account</span>(</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">  money <span class="keyword">DOUBLE</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">account</span>(<span class="string">`name`</span>,money) <span class="keyword">VALUES</span> (<span class="string">'UserA'</span>,<span class="number">1000</span>),(<span class="string">'UserB'</span>,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><ul><li><p>编写转账代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TXDemo</span></span>&#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTX</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">          <span class="comment">// 1.获取连接【JdbcUtils工具类】 </span></span><br><span class="line">          <span class="comment">// 2.开启事务</span></span><br><span class="line"><span class="comment">// 3.UserA扣钱</span></span><br><span class="line"><span class="comment">// 机器故障</span></span><br><span class="line"><span class="comment">// 4.UserB加钱</span></span><br><span class="line"><span class="comment">// 5.提交事务 </span></span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123; </span><br><span class="line">          <span class="comment">// 6.回滚事务</span></span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line"><span class="comment">// 7.释放资源</span></span><br><span class="line">&#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TXDemo</span> </span>&#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTX</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Statement statement = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="comment">// 1.获取连接【JdbcUtils工具类】</span></span><br><span class="line">connection = JdbcUitls.getConnection(); </span><br><span class="line">          <span class="comment">// 2.开启事务 </span></span><br><span class="line">          connection.setAutoCommit(<span class="keyword">false</span>); </span><br><span class="line">          tatement = connection.createStatement(); </span><br><span class="line">          <span class="comment">// 3.UserA扣钱</span></span><br><span class="line">          <span class="comment">// 机器故障</span></span><br><span class="line">          <span class="comment">// 4.UserB加钱</span></span><br><span class="line">          <span class="comment">// 5.提交事务 </span></span><br><span class="line">          connection.commit();</span><br><span class="line">          &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 6.回滚事务</span></span><br><span class="line">connection.rollback(); </span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">e1.printStackTrace(); </span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="comment">// 7.释放资源</span></span><br><span class="line">JdbcUitls.close(statement, connection); </span><br><span class="line">        &#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TXDemo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTX</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Statement statement = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 1.获取连接【JdbcUtils工具类】</span></span><br><span class="line">            connection = JdbcUitls.getConnection();</span><br><span class="line">            <span class="comment">// 2.开启事务</span></span><br><span class="line">            connection.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3.UserA扣钱</span></span><br><span class="line">            String ASql = <span class="string">"update account set money = money-100 where id=2;"</span>;</span><br><span class="line">            <span class="keyword">int</span> AResult = statement.executeUpdate(ASql);</span><br><span class="line">            <span class="keyword">if</span> (AResult &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"User A Payment Successful"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 机器故障</span></span><br><span class="line">            <span class="keyword">int</span> a = <span class="number">1</span> / <span class="number">0</span>;</span><br><span class="line">            String BSql = <span class="string">"update account set money = money +100 where id =1;"</span>;</span><br><span class="line">            <span class="comment">// 4.UserB收到钱</span></span><br><span class="line">            <span class="keyword">int</span> BResult = statement.executeUpdate(BSql);</span><br><span class="line">            <span class="keyword">if</span> (BResult &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"User B Get the Payment"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 5.提交事务</span></span><br><span class="line">            connection.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 6.回滚事务</span></span><br><span class="line">                connection.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 7.释放资源</span></span><br><span class="line">            JdbcUitls.close(statement, connection);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-案例-用户登陆"><a href="#二-案例-用户登陆" class="headerlink" title="二.案例:用户登陆"></a>二.案例:用户登陆</h1><h4 id="2-1-需求分析"><a href="#2-1-需求分析" class="headerlink" title="2.1 需求分析"></a>2.1 需求分析</h4><table><thead><tr><th align="center">浏览器登录</th><th align="center"></th><th align="left"></th></tr></thead><tbody><tr><td align="center">⬇</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">服务器LoginServlet</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">接收用户请求<br>用户名，密码</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">⬇</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">操作JDBC<br>根据用户名和密码查询数据库</td><td align="center">➡<br>⬅</td><td align="left">Server</td></tr><tr><td align="center">⬇</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">判断用户是否登录成功</td><td align="center"></td><td align="left"></td></tr><tr><td align="center">⬇正确</td><td align="center">➡错误</td><td align="left">转发登录页面提示</td></tr><tr><td align="center">重定向至list.jsp</td><td align="center"></td><td align="left"></td></tr></tbody></table><h4 id="2-2-代码实现"><a href="#2-2-代码实现" class="headerlink" title="2.2 代码实现"></a>2.2 代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.web;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.util.JdbcUitls;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LoginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//统一编码</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//接收请求</span></span><br><span class="line">        String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 2.操作JDBC</span></span><br><span class="line">            <span class="comment">// 2.1 获取连接</span></span><br><span class="line">            Connection connection = JdbcUitls.getConnection();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.2 编写sql</span></span><br><span class="line">            <span class="comment">// String sql = "select * from user where username ='admin' and password='123'";</span></span><br><span class="line">            String sql = <span class="string">"SELECT * FROM user WHERE username='"</span> + username + <span class="string">"'AND password ='"</span> + password + <span class="string">"'"</span>;</span><br><span class="line">            System.out.println(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.3 获取sql执行对象</span></span><br><span class="line">            Statement statement = connection.createStatement();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.4 执行sql并返回结果</span></span><br><span class="line">            ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3.判断是否登录成功</span></span><br><span class="line">            <span class="keyword">if</span> (resultSet.next()) &#123;<span class="comment">// 成功</span></span><br><span class="line">                String loginUsername = resultSet.getString(<span class="string">"username"</span>);</span><br><span class="line">                req.getSession().setAttribute(<span class="string">"loginUsername"</span>, loginUsername);</span><br><span class="line">                resp.sendRedirect(req.getContextPath() + <span class="string">"/list.jsp"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;<span class="comment">// 失败</span></span><br><span class="line">                req.setAttribute(<span class="string">"error"</span>, <span class="string">"Username/Password Wrong"</span>);</span><br><span class="line">                req.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(req, resp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="# 总结"></a># 总结</h1><p><strong>## jdbc</strong></p><p><strong>### 概述</strong></p><p>- 通过java语言操作数据库</p><p><strong>### 本质</strong></p><p>- 面向接口编程思想</p><p>- sun公司通过操作关系型数据库的一套规范（接口），所有的数据库厂商都需要实现这套接口，对于开发者只需要学习这套接口的API就可以操作所有类型的关系型数据库，真正的执行者是实现类（jar包驱动）</p><p><strong>### 快速入门</strong></p><p>- 1.注册驱动</p><p>- 2.建立连接</p><p>- 3.编写sql</p><p>- 4.获取sql执行对象</p><p>- 5.执行sql并返回结果</p><p>- 6.处理结果</p><p>- 7.释放资源</p><p><strong>### API详解</strong></p><p>- DriverManager</p><p>​    - 1.注册驱动</p><p>​        - Class.forName()</p><p>​    - 2.建立连接</p><p>- Connection</p><p>​    - 1.获取sql执行对象</p><p>​        - Statement</p><p>​        - PreparedStatement</p><p>​    - 2.事务安全</p><p>- Statement</p><p>​    - 1.仅执行DML类型sql语句</p><p>​        - int executeUpdate(String sql)</p><p>​    - 2.仅执行DQL类型sql语句</p><p>​        - ResultSet executeQuery(String sql)</p><p>- ResultSet</p><p>​    - 1.指针下移</p><p>​        - boolean next()</p><p>​    - 2.获取数据</p><p>​        - T getXxx(String 列名)</p><p><strong>### crud练习</strong></p><p>- 新增</p><p>- 修改</p><p>- 删除</p><p>- 查询所有 </p><p><strong>### JdbcUtils</strong></p><p>- 版本一</p><p>- 版本二</p><p><strong>### 事务安全</strong></p><p>- 模拟转账</p><p><strong>## 案例：用户登录</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;JDBC基础&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（四十七）</title>
    <link href="http://yoursite.com/2020/05/05/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%B8%83%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/05/就业班学习笔记（四十七）/</id>
    <published>2020-05-04T18:07:02.000Z</published>
    <updated>2020-05-05T14:31:05.249Z</updated>
    
    <content type="html"><![CDATA[<ul><li>MySQL性能</li><li>MySQL索引</li></ul><a id="more"></a><h1 id="一-MySQL性能"><a href="#一-MySQL性能" class="headerlink" title="一.MySQL性能"></a>一.MySQL性能</h1><h4 id="1-1-分析-数据库查询效率低下"><a href="#1-1-分析-数据库查询效率低下" class="headerlink" title="1.1 分析-数据库查询效率低下"></a>1.1 分析-数据库查询效率低下</h4><p>随着项目运行的时间增加，数据量也就增加 了，这时会影响到我们数据库的查询性能</p><h4 id="1-2-分析-执行次数比较多的语句"><a href="#1-2-分析-执行次数比较多的语句" class="headerlink" title="1.2 分析-执行次数比较多的语句"></a>1.2 分析-执行次数比较多的语句</h4><ul><li><p>查询密集型 我们使用查询频率较高，8:2 左右<br>   我们就可以使用索引来进行优化</p></li><li><p>修改密集型 </p><p>   ES</p>   <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询累计插入和返回数据条数</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> <span class="keyword">status</span> <span class="keyword">like</span> <span class="string">'Innodb_rows%'</span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-查看-sql语句的执行效率"><a href="#1-3-查看-sql语句的执行效率" class="headerlink" title="1.3 查看-sql语句的执行效率"></a>1.3 查看-sql语句的执行效率</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> Day47_Index;</span><br><span class="line"><span class="keyword">use</span> Day47_Index;</span><br><span class="line"><span class="comment">-- 1. 准备表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">id</span>         <span class="built_in">INT</span>,</span><br><span class="line">    username   <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">    <span class="string">`password`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">    sex        <span class="built_in">VARCHAR</span>(<span class="number">6</span>),</span><br><span class="line">    email      <span class="built_in">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 2. 创建存储过程，实现批量插入记录</span></span><br><span class="line">DELIMITER $$ <span class="comment">-- 声明存储过程的结束符号为$$</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> auto_insert()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> i <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">START</span> <span class="keyword">TRANSACTION</span>; <span class="comment">-- 开启事务</span></span><br><span class="line">    WHILE(i &lt;= 10000000)</span><br><span class="line">        <span class="keyword">DO</span></span><br><span class="line">            <span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`user`</span></span><br><span class="line">            <span class="keyword">VALUES</span> (i, <span class="keyword">CONCAT</span>(<span class="string">'jack'</span>, i), <span class="keyword">MD5</span>(i), <span class="string">'male'</span>, <span class="keyword">CONCAT</span>(<span class="string">'jack'</span>, i, <span class="string">'@itcast.cn'</span>));</span><br><span class="line">            <span class="keyword">SET</span> i = i + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line">    <span class="keyword">COMMIT</span>; <span class="comment">-- 提交</span></span><br><span class="line"><span class="keyword">END</span>$$ <span class="comment">-- 声明结束</span></span><br><span class="line">DELIMITER ; <span class="comment">-- 重新声明分号为结束符号</span></span><br><span class="line"><span class="comment">-- 3. 查看存储过程</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> auto_insert;</span><br><span class="line"><span class="comment">-- 4. 调用存储过程</span></span><br><span class="line"><span class="keyword">CALL</span> auto_insert();</span><br></pre></td></tr></table></figure><ul><li>慢查询日志</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看慢查询日志开启情况</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%slow_query_log%'</span>;</span><br><span class="line"><span class="comment">-- 查看慢查询时间配置</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%long_query_time%'</span>;</span><br></pre></td></tr></table></figure><ul><li>开启慢查询日志</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> slow_query_log = <span class="keyword">on</span>;</span><br></pre></td></tr></table></figure><ul><li><p>设置慢查询sql的时间阈值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 全局配置(下次生效...)</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> long_query_time=<span class="number">3</span>;</span><br><span class="line"><span class="comment">-- 临时(会话)配置(本次会话窗口生效) set session long_query_time=3;</span></span><br></pre></td></tr></table></figure></li><li><p>测试慢查询日志</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;swzxsyh-MBP-slow.log</span><br></pre></td></tr></table></figure><h1 id="二-MySQL索引"><a href="#二-MySQL索引" class="headerlink" title="二.MySQL索引"></a>二.MySQL索引</h1><h4 id="2-1-什么是索引"><a href="#2-1-什么是索引" class="headerlink" title="2.1 什么是索引"></a>2.1 什么是索引</h4><p>将数据进行排序整理的过程就称为索引。 我们根据索引去查，提高效率</p><h4 id="2-2-MySQL索引分类"><a href="#2-2-MySQL索引分类" class="headerlink" title="2.2 MySQL索引分类"></a>2.2 MySQL索引分类</h4><table><thead><tr><th>索引</th><th>作用</th></tr></thead><tbody><tr><td>主键(约束)索引</td><td>主键约束+提高查询效率</td></tr><tr><td>唯一(约束)索引</td><td>唯一约束+提高查询效率</td></tr><tr><td>普通索引</td><td>仅提高查询效率</td></tr><tr><td>组合(联合)索引</td><td>多个字段组成索引</td></tr><tr><td>全文索引</td><td>solr、es</td></tr><tr><td>hash索引</td><td>根据key-value 效率非常高</td></tr></tbody></table><h4 id="2-3-MySQL索引语法"><a href="#2-3-MySQL索引语法" class="headerlink" title="2.3 MySQL索引语法"></a>2.3 MySQL索引语法</h4><h5 id="2-3-1-创建索引"><a href="#2-3-1-创建索引" class="headerlink" title="2.3.1 创建索引"></a>2.3.1 创建索引</h5><ul><li><p>直接创建</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建普通索引</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名(字段);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建唯一索引</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名(字段);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建普通组合索引</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名(字段<span class="number">1</span>,字段<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建唯一组合索引</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名(字段<span class="number">1</span>,字段<span class="number">2</span>);</span><br><span class="line"> <span class="comment">-- 创建学生表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span>,</span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>), telephone <span class="built_in">VARCHAR</span>(<span class="number">11</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- name字段适合设置什么索引?</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> name_idx <span class="keyword">ON</span> student(<span class="string">`name`</span>);</span><br><span class="line"><span class="comment">-- telephone适合设置什么索引?</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> telephone_uni_idx <span class="keyword">ON</span> student(telephone);</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>修改表时指定</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加一个主键，这意味着索引值必须是唯一的，且不能为NULL</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> primary <span class="keyword">key</span>(字段); <span class="comment">--默认索引名:primary</span></span><br><span class="line"><span class="comment">-- 添加唯一索引(除了NULL外，NULL可能会出现多次)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">unique</span>(字段); <span class="comment">-- 默认索引名:字段名</span></span><br><span class="line"><span class="comment">-- 添加普通索引，索引值可以出现多次。</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">index</span>(字段); <span class="comment">-- 默认索引名:字段名</span></span><br><span class="line"><span class="comment">-- 指定id为主键索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>); <span class="comment">-- 指定name为普通索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">INDEX</span>(<span class="string">`name`</span>);</span><br><span class="line"><span class="comment">-- 指定telephone为唯一索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span>(telephone);</span><br></pre></td></tr></table></figure></li><li><p>创建表时指定【重点】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建教师表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> teacher(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, <span class="comment">-- 主键索引 `name` VARCHAR(32),</span></span><br><span class="line">telephone <span class="built_in">VARCHAR</span>(<span class="number">11</span>) <span class="keyword">UNIQUE</span>, <span class="comment">-- 唯一索引</span></span><br><span class="line">sex <span class="built_in">VARCHAR</span>(<span class="number">5</span>),</span><br><span class="line"> birthday <span class="built_in">DATE</span>,</span><br><span class="line"><span class="keyword">INDEX</span>(<span class="string">`name`</span>) <span class="comment">-- 普通索引 );</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="2-3-2-删除索引"><a href="#2-3-2-删除索引" class="headerlink" title="2.3.2 删除索引"></a>2.3.2 删除索引</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 直接删除</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名;</span><br><span class="line"><span class="comment">-- 修改表时删除 【掌握】</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">index</span> 索引名;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除name普通索引</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> name_idx <span class="keyword">ON</span> student;</span><br><span class="line"><span class="comment">-- 删除telephone唯一索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">DROP</span> <span class="keyword">INDEX</span> telephone_uni_idx;</span><br></pre></td></tr></table></figure><h4 id="2-4-索引效果演示"><a href="#2-4-索引效果演示" class="headerlink" title="2.4 索引效果演示"></a>2.4 索引效果演示</h4><ul><li>先来测试没有索引情况下查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.指定id查询</span></span><br><span class="line">day47_index&gt; select * from user where id = 8888888</span><br><span class="line">[2020-05-05 21:55:00] 1 row retrieved starting from 1 in 4 s 744 ms (execution: 4 s 727 ms, fetching: 17 ms)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.指定username精准查询</span></span><br><span class="line">day47_index&gt; select * from user where username = 'jack1234567'</span><br><span class="line">[2020-05-05 21:56:46] 1 row retrieved starting from 1 in 3 s 688 ms (execution: 3 s 673 ms, fetching: 15 ms)</span><br><span class="line"><span class="comment">-- 3.指定email模糊查询</span></span><br><span class="line">day47_index&gt; select * from user where email like 'jack1234567%'</span><br><span class="line">[2020-05-05 21:57:03] 1 row retrieved starting from 1 in 3 s 530 ms (execution: 3 s 515 ms, fetching: 15 ms)</span><br></pre></td></tr></table></figure><ul><li><p>给这三个字段添加索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 指定id为主键索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span> <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>); </span><br><span class="line"><span class="comment">-- 指定username为普通索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span> <span class="keyword">ADD</span> <span class="keyword">INDEX</span>(username); </span><br><span class="line"><span class="comment">-- 指定email为唯一索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span> <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span>(email);</span><br></pre></td></tr></table></figure><ul><li>再测试有索引情况下查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.指定id查询</span></span><br><span class="line">day47_index&gt; select * from user where id = 8888888</span><br><span class="line">[2020-05-05 22:00:32] 1 row retrieved starting from 1 in 21 ms (execution: 5 ms, fetching: 16 ms)</span><br><span class="line"><span class="comment">-- 2.指定username精准查询</span></span><br><span class="line">day47_index&gt; select * from user where username = 'jack1234567'</span><br><span class="line">[2020-05-05 22:00:32] 1 row retrieved starting from 1 in 88 ms (execution: 4 ms, fetching: 84 ms)</span><br><span class="line"><span class="comment">-- 3.指定email模糊查询</span></span><br><span class="line">day47_index&gt; select * from user where email like 'jack1234567%'</span><br><span class="line">[2020-05-05 22:00:33] 1 row retrieved starting from 1 in 110 ms (execution: 3 ms, fetching: 107 ms)</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-5-索引的优缺点"><a href="#2-5-索引的优缺点" class="headerlink" title="2.5 索引的优缺点"></a>2.5 索引的优缺点</h4><table><thead><tr><th>优点</th><th>减少磁盘IO，提高查询效率</th></tr></thead><tbody><tr><td><strong>缺点</strong></td><td>索引占用磁盘空间<br>我们在进行增删改时，索引的维护会增加成本，可能会降低服务器性能</td></tr></tbody></table><h4 id="2-6-索引创建原则"><a href="#2-6-索引创建原则" class="headerlink" title="2.6 索引创建原则"></a>2.6 索引创建原则</h4><ul><li>字段内容可识别度不能低于70%</li><li>经常使用where条件搜索的字段</li><li>经常使用表连接的字段(内连接、外连接)</li><li>经常排序的字段 order by</li></ul><p><strong>注意</strong>:索引本身会占用磁盘空间，不是所有的字段都适合增加索引</p><h4 id="2-7-常见索引失效情况"><a href="#2-7-常见索引失效情况" class="headerlink" title="2.7 常见索引失效情况"></a>2.7 常见索引失效情况</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.使用like模糊匹配，%通配符在最左侧使用时</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> email <span class="keyword">like</span> <span class="string">'%jack1234567%'</span>;</span><br><span class="line"><span class="comment">-- 2.尽量避免使用or，如果条件有一个没有索引，那么会进行全表扫描 </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">88</span> <span class="keyword">or</span> sex = <span class="string">'male'</span>;</span><br><span class="line"><span class="comment">-- 3.在索引列上进行计算</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span>+<span class="number">1</span> = <span class="number">88</span>;</span><br><span class="line"><span class="comment">-- 4.使用 !=、 not in、is not null时</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username != <span class="string">'jack12'</span>;</span><br></pre></td></tr></table></figure><h4 id="2-8-索引的数据结构"><a href="#2-8-索引的数据结构" class="headerlink" title="2.8 索引的数据结构"></a>2.8 索引的数据结构</h4><h5 id="2-8-1-概述"><a href="#2-8-1-概述" class="headerlink" title="2.8.1 概述"></a>2.8.1 概述</h5><p>我们知道索引是帮助MySQL高效获取排好序的数据结构。</p><p>在没有索引的情况下我们执行一条sql语句，那么是表进行全局遍历，磁盘寻址(注意逻辑上相邻的记录在磁盘上也 并不是一定物理相邻的)。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> col1=<span class="number">6</span>;</span><br></pre></td></tr></table></figure><p><img src="1566372154562.png" alt=""></p><p>为了加快的查找效率，可以维护一个右边所示的二叉查找树，每个节点分别包含索引键值和一个指向对应数据记录物 理地址的指针，这样就可以运用二叉查找快速获取到相应数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> col2=<span class="number">89</span>;</span><br></pre></td></tr></table></figure><h5 id="2-8-2-索引的数据结构"><a href="#2-8-2-索引的数据结构" class="headerlink" title="2.8.2 索引的数据结构"></a>2.8.2 索引的数据结构</h5><ul><li><p>二叉树:左边的子节点比父节点小，右边的子节点比父节点大</p><p><img src="1588649871508.png" alt=""></p></li><li><p>红黑树:平衡二叉树(左旋、右旋)</p><p><img src="1588650208409.png" alt=""></p></li><li><p>BTree:多路平衡搜索树</p><p><img src="1588650730396.png" alt=""></p></li><li><p>B+Tree:优化BTree(非叶子节点:索引+指针、叶子节点:索引+数据【地址】)</p><p><img src="1588651284679.png" alt=""></p></li><li><p>Hash:通过散列算法，不支持范围查询</p></li></ul><p><strong>数据结构学习网站</strong></p><p><a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a></p><h5 id="2-8-3-MySQL中的B-Tree"><a href="#2-8-3-MySQL中的B-Tree" class="headerlink" title="2.8.3 MySQL中的B+Tree"></a>2.8.3 MySQL中的B+Tree</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看mysql索引节点大小</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> <span class="keyword">status</span> <span class="keyword">like</span> <span class="string">'innodb_page_size'</span>;</span><br></pre></td></tr></table></figure><p><img src="1566372947007.png" alt=""></p><h4 id="2-9-数据库的存储引擎"><a href="#2-9-数据库的存储引擎" class="headerlink" title="2.9 数据库的存储引擎"></a>2.9 数据库的存储引擎</h4><p>MySQL存储引擎的不同，那么索引文件保存的方式也有所不同，常见的有二种存储引擎MyISAM和InnoDB。</p><h5 id="2-9-1-MyISAM-非聚集索引"><a href="#2-9-1-MyISAM-非聚集索引" class="headerlink" title="2.9.1 MyISAM(非聚集索引)"></a>2.9.1 MyISAM(非聚集索引)</h5><p>MySQL5.5版本之前默认存储引擎</p><blockquote><p>特点:不支持事务、不支持外键约束</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> day47_pro;</span><br><span class="line"><span class="keyword">USE</span> day47_pro;</span><br><span class="line"><span class="comment">-- 创建 myisam存储引擎表 CREATE TABLE tab_myisam(</span></span><br><span class="line">id INT,</span><br><span class="line">`name` VARCHAR(32)</span><br><span class="line">)ENGINE=MYISAM;</span><br></pre></td></tr></table></figure><p><img src="1588659294559.png" alt=""></p><h5 id="2-9-2-InnoDB-聚集索引"><a href="#2-9-2-InnoDB-聚集索引" class="headerlink" title="2.9.2 InnoDB(聚集索引)"></a>2.9.2 InnoDB(聚集索引)</h5><p>MySQL5.5版本之后默认存储引擎 </p><blockquote><p>特点:支持事务、支持外键约束</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建 innodb存储引擎表 CREATE TABLE tab_innodb(</span></span><br><span class="line">id INT,</span><br><span class="line">`name` VARCHAR(32)</span><br><span class="line">)ENGINE = INNODB;</span><br></pre></td></tr></table></figure><p><strong>innodb存储引擎必须要设置主键(整型)，且自增类型</strong></p><p><img src="1588659700008.png" alt=""></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h1><h2 id="MySQL性能"><a href="#MySQL性能" class="headerlink" title="MySQL性能"></a>MySQL性能</h2><h3 id="数据库类型"><a href="#数据库类型" class="headerlink" title="数据库类型"></a>数据库类型</h3><ul><li>查询密集型</li><li>修改密集型</li></ul><h3 id="查看数据库分类命令"><a href="#查看数据库分类命令" class="headerlink" title="查看数据库分类命令"></a>查看数据库分类命令</h3><ul><li>show global status like ‘’innodb_rows%;</li></ul><h3 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h3><ul><li>show variables like ‘%query%’;</li></ul><h3 id="插入千万级别记录"><a href="#插入千万级别记录" class="headerlink" title="插入千万级别记录"></a>插入千万级别记录</h3><ul><li>我的电脑3分钟左右</li></ul><h2 id="MySQL索引"><a href="#MySQL索引" class="headerlink" title="MySQL索引"></a>MySQL索引</h2><h3 id="索引-排好序的数据结构"><a href="#索引-排好序的数据结构" class="headerlink" title="索引=排好序的数据结构"></a>索引=排好序的数据结构</h3><h3 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h3><p>create table teacher(</p><p>   id int,</p><p>   name varchar(32),</p><p>   telephone varchar(11),</p><p>   primary key(id), – 索引名 primary</p><p>   index(name) , – 索引名 name</p><p>   unique(telephone) – 索引名 telephone</p><p>);</p><h3 id="索引的创建原则"><a href="#索引的创建原则" class="headerlink" title="索引的创建原则"></a>索引的创建原则</h3><ul><li><p>1)存储内容的可识别度70%</p></li><li><p>2)经常查询的字段，可以设置索引</p></li><li><p>3)经常多表连接的字段，可以设置索引</p><ul><li>主键（primary key）</li><li>外键（index）</li></ul></li><li><p>4)经常排序的字段，可以设置索引</p></li></ul><h3 id="索引失效问题"><a href="#索引失效问题" class="headerlink" title="索引失效问题"></a>索引失效问题</h3><ul><li>1）like使用左模糊查询</li><li>2）or拼接</li><li>3）索引列计算</li><li>4）not in 、 != 、  is not null</li></ul><h3 id="索引的数据结构"><a href="#索引的数据结构" class="headerlink" title="索引的数据结构"></a>索引的数据结构</h3><ul><li><p>二叉树</p><ul><li>左边子节点比父节点小，右边的子节点比父节点大</li></ul></li><li><p>红黑树</p><ul><li><p>平衡二叉树</p><ul><li>左旋和右旋</li></ul></li></ul></li><li><p>BTree</p><ul><li><p>多路平衡搜索树</p><ul><li><p>有效控制树的高度</p><ul><li><p>每一个节点可以设置多个元素</p><ul><li>索引</li><li>指针</li><li>数据</li></ul></li></ul></li></ul></li></ul></li><li><p>B+Tree</p><ul><li><p>MySQL使用数据结构</p><ul><li>非叶子节点只存储索引和指针，叶子节点存储索引和数据（从左到右，从小达到依次排序，底层是一个双向链表）</li></ul></li></ul></li><li><p>Hash散列</p></li></ul><h3 id="数据库存储引擎"><a href="#数据库存储引擎" class="headerlink" title="数据库存储引擎"></a>数据库存储引擎</h3><ul><li><p>存储引擎</p><ul><li><p>MyIsam</p><ul><li><p>非聚集索引</p><ul><li>特点：不支持事务和外键约束</li></ul></li></ul></li><li><p>Innodb</p><ul><li><p>聚集索引</p><ul><li>特点：支持事务和外键约束</li></ul></li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;MySQL性能&lt;/li&gt;
&lt;li&gt;MySQL索引&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（四十六）</title>
    <link href="http://yoursite.com/2020/05/04/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E5%85%AD%EF%BC%89/"/>
    <id>http://yoursite.com/2020/05/04/就业班学习笔记（四十六）/</id>
    <published>2020-05-04T01:09:15.000Z</published>
    <updated>2020-05-04T17:55:58.644Z</updated>
    
    <content type="html"><![CDATA[<ul><li>MySQL函数</li><li>MySQL综合练习</li><li>事务安全TCL<a id="more"></a></li></ul><h1 id="一-MySQL函数"><a href="#一-MySQL函数" class="headerlink" title="一.MySQL函数"></a>一.MySQL函数</h1><h4 id="1-1-字符串函数"><a href="#1-1-字符串函数" class="headerlink" title="1.1 字符串函数"></a>1.1 字符串函数</h4><table><thead><tr><th>函数</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>CONCAT(s1,s2…sn)</td><td>字符串 s1,s2 等多个字符串合并为一个字符串</td><td>select concat(‘A’,’-‘,’B’);</td></tr><tr><td>CHAR_LENGTH(str)</td><td>返回字符串 str 的字符数</td><td>select char_length(‘Hello，World’);</td></tr><tr><td>LENGTH(str)</td><td>返回字符串 s 的字节数</td><td>select length(‘你好,World’);</td></tr><tr><td>UCASE(s) | UPPER(s)</td><td>将字符串转换为大写</td><td>select ucase(‘oracle’);</td></tr><tr><td>LCASE(s) | LOWER(s)</td><td>将字符串转换为小写</td><td>select lcase(‘MySQL’);</td></tr><tr><td>LOCATE(s1,s)</td><td>从字符串 s 中获取 s1 的开始位置</td><td>select locate(‘wo’,’world’);</td></tr><tr><td>TRIM(str) | LTRIM(str) | RTRIM(str)</td><td>字符串去空格</td><td>select trim(‘ 莘莘学子 ‘);</td></tr><tr><td>REPLACE(s,s1,s2)</td><td>将字符串 s2 替代字符串 s 中的字符串 s1</td><td>select replace(‘abc’,’b’,’x’);</td></tr><tr><td>SUBSTR(s, start, length)</td><td>从字符串 s 的 start 位置截取长度为 length 的子字符串</td><td>select substr(‘itcast’,’2’,’3’);</td></tr><tr><td>STRCMP(str1,str2)</td><td>比较字符串大小,左大于右时返回1，左等于右时返回0，，左小于于右时返回-1，</td><td>select strcmp(‘a’,’b’);</td></tr></tbody></table><ul><li>练习</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.将所有员工的昵称改为大写</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">UCASE</span>(nickname) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 2.显示所有员工的姓氏，截取</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">SUBSTR</span>(ename,<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 3.显示所有员工姓名字符长度</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CHAR_LENGTH</span>(ename) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 4.显示所有员工姓名字节长度 SELECT LENGTH(ename) FROM emp;</span></span><br><span class="line"><span class="comment">-- 5.将所有姓李的员工，姓氏替换为li</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">REPLACE</span>(ename,<span class="string">'李'</span>,<span class="string">'li'</span>) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 6.将所有员工的姓名和昵称拼接在一起</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(ename,nickname) <span class="keyword">FROM</span> emp;</span><br></pre></td></tr></table></figure><h4 id="1-2-日期函数"><a href="#1-2-日期函数" class="headerlink" title="1.2 日期函数"></a>1.2 日期函数</h4><table><thead><tr><th>函数</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>NOW() | CURDATE() | CURTIME()</td><td>获取系统当前日期时间、日期、时间</td><td>select now();</td></tr><tr><td>YEAR(DATE) | MONTH(DATE) | DAY(DATE)</td><td>从日期中选择出年、月、日</td><td>select year(now());</td></tr><tr><td>LAST_DAY(DATE)</td><td>返回月份的最后一天</td><td>select last_day(now());</td></tr><tr><td>ADDDATE(DATE,n) | SUBDATE(DATE,n)</td><td>计算起始日期 DATE 加(减) n 天的日期</td><td>select subdate(now(),10);</td></tr><tr><td>QUARTER(DATE)</td><td>返回日期 DATE 是第几季节，返回 1 到 4</td><td>select quarter(now());</td></tr><tr><td>DATEDIFF(d1,d2)</td><td>计算日期 d1-&gt;d2 之间相隔的天数</td><td>select datediff(now(),’1999-1-1’);</td></tr><tr><td>DATE_FORMAT(d,f)</td><td>按表达式 f的要求显示日期 d</td><td>select date_format(now(),’%Y-%m-%d’);</td></tr></tbody></table><ul><li>练习</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.统计每个员工入职的天数</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 2.统计每个员工的工龄</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate)/<span class="number">365</span> <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 3.查询2011年入职的员工</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">YEAR</span>(joindate) = <span class="string">'2011'</span>;</span><br><span class="line"><span class="comment">-- 4.统计入职10年以上的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate)/<span class="number">365</span> &gt;<span class="number">10</span>;</span><br></pre></td></tr></table></figure><h4 id="1-3-数字函数"><a href="#1-3-数字函数" class="headerlink" title="1.3 数字函数"></a>1.3 数字函数</h4><table><thead><tr><th>函数</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>ABS(x)</td><td>返回 x 的绝对值</td><td>select abs(-10);</td></tr><tr><td>CEIL(x)|FLOOR(x)</td><td>向上(下)取整</td><td>select ceil(1.5);</td></tr><tr><td>MOD(x,y)</td><td>返回x mod y的结果，取余</td><td>select mod(5,4);</td></tr><tr><td>RAND()</td><td>返回 0 到 1 的随机数</td><td>select rand();</td></tr><tr><td>ROUND(x)</td><td>四舍五入</td><td>select round(1.2345);</td></tr><tr><td>TRUNCATE(x,y)</td><td>返回数值 x 保留到小数点后 y 位的值</td><td>select truncate(5633.123324,2);</td></tr></tbody></table><ul><li>练习</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.统计每个员工的工龄，超过半年的算一年</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">ROUND</span>( <span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate)/<span class="number">365</span>) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 2.统计每个部门的平均薪资,保留2位小数</span></span><br><span class="line"><span class="keyword">SELECT</span> dept_id,<span class="keyword">TRUNCATE</span>( <span class="keyword">AVG</span>(salary),<span class="number">2</span> )<span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> dept_id;</span><br><span class="line"><span class="comment">-- 3.统计每个部门的平均薪资,小数向上取整</span></span><br><span class="line"><span class="keyword">SELECT</span> dept_id,<span class="keyword">CEIL</span>( <span class="keyword">AVG</span>(salary) )<span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> dept_id;</span><br><span class="line"><span class="comment">-- 4.统计每个部门的平均薪资,小数向下取整</span></span><br><span class="line"><span class="keyword">SELECT</span> dept_id,<span class="keyword">FLOOR</span>( <span class="keyword">AVG</span>(salary) )<span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> dept_id;</span><br></pre></td></tr></table></figure><h4 id="1-4-高级函数"><a href="#1-4-高级函数" class="headerlink" title="1.4 高级函数"></a>1.4 高级函数</h4><h5 id="1-4-1-CASE表达式"><a href="#1-4-1-CASE表达式" class="headerlink" title="1.4.1 CASE表达式"></a>1.4.1 CASE表达式</h5><ul><li><p>相当于java中swtich语句</p></li><li><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">CASE</span> [字段,值] <span class="keyword">WHEN</span> 判断条件<span class="number">1</span></span><br><span class="line"><span class="keyword">THEN</span> 希望的到的值<span class="number">1</span> <span class="keyword">WHEN</span> 判断条件<span class="number">2</span></span><br><span class="line"><span class="keyword">THEN</span> 希望的到的值<span class="number">2</span></span><br><span class="line"><span class="keyword">ELSE</span> 前面条件都没有满足情况下得到的值</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">table_name;</span><br></pre></td></tr></table></figure></li><li><p>练习</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询每个员工的工资等级并排序</span></span><br><span class="line"><span class="comment">-- 工资等级在1显示为 '努力赚钱'</span></span><br><span class="line"><span class="comment">-- 工资等级在2显示为 '小康生活'</span></span><br><span class="line"><span class="comment">-- 工资等级在3显示为 '可以娶媳妇'</span></span><br><span class="line"><span class="comment">-- 工资等级在4显示为 '可以买车'</span></span><br><span class="line"><span class="comment">-- 工资等级在5显示为 '可以买房'</span></span><br><span class="line"><span class="comment">-- 工资等级不在以上列表中显示为 '土豪'</span></span><br><span class="line"><span class="comment">-- 1.确定几张表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg;</span><br><span class="line"><span class="comment">-- 2.确定连接条件</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span>;</span><br><span class="line"><span class="comment">-- 3.确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> e.ename,e.<span class="string">`salary`</span>,sg.<span class="string">`grade`</span> <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span>;</span><br><span class="line"><span class="comment">-- 4.确定业务条件</span></span><br><span class="line"><span class="keyword">SELECT</span> e.ename,e.<span class="string">`salary`</span>,</span><br><span class="line"><span class="keyword">CASE</span> sg.<span class="string">`grade`</span> <span class="keyword">WHEN</span> <span class="number">1</span> <span class="keyword">THEN</span> <span class="keyword">WHEN</span> <span class="number">2</span> <span class="keyword">THEN</span> <span class="keyword">WHEN</span> <span class="number">3</span> <span class="keyword">THEN</span> <span class="keyword">WHEN</span> <span class="number">4</span> <span class="keyword">THEN</span> <span class="keyword">WHEN</span> <span class="number">5</span> <span class="keyword">THEN</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">'土豪'</span> <span class="keyword">END</span> <span class="keyword">AS</span> <span class="string">'生活状态'</span></span><br><span class="line"><span class="string">'努力赚钱'</span> <span class="string">'小康生活'</span> <span class="string">'可以娶媳妇'</span> <span class="string">'可以买车'</span> <span class="string">'可以买房'</span></span><br><span class="line"><span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> sg.<span class="string">`grade`</span> <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure></li></ul><h5 id="1-4-2-IF表达式"><a href="#1-4-2-IF表达式" class="headerlink" title="1.4.2 IF表达式"></a>1.4.2 IF表达式</h5><ul><li><p>相当于java中三元运算符</p></li><li><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT IF(1 &gt; 0,&#39;真&#39;,&#39;假&#39;) from 表名;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>练习</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 工资+奖金大于20000的员工 显示家有娇妻，否则显示单身狗</span><br><span class="line">SELECT ename,IF(salary+IFNULL(bonus,0) &gt; 20000,&#39;家有娇妻&#39;,&#39;单身狗&#39;) AS 家里有啥 FROM emp;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-MySQL综合练习"><a href="#二-MySQL综合练习" class="headerlink" title="二.MySQL综合练习"></a>二.MySQL综合练习</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.计算员工的日薪(按30天)，保留二位小数</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,<span class="keyword">TRUNCATE</span>(salary/<span class="number">30</span>,<span class="number">2</span>) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 2.计算出员工的年薪(12月)，并且以年薪排序 降序</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,(salary + <span class="keyword">IFNULL</span>(bonus,<span class="number">0</span>)) * <span class="number">12</span> <span class="keyword">AS</span> 年薪 <span class="keyword">FROM</span> emp <span class="keyword">ORDER</span> <span class="keyword">BY</span> 年薪 <span class="keyword">DESC</span>;</span><br><span class="line"><span class="comment">-- 3.找出奖金少于5000或者没有获得奖金的员工的信息 </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">IFNULL</span>(bonus,<span class="number">0</span>) &lt; <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.返回员工职务名称及其从事此职务的最低工资 </span></span><br><span class="line"><span class="comment">-- 4.1 确定几张表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j; </span><br><span class="line"><span class="comment">-- 4.2 确定连接条件</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span>;</span><br><span class="line"><span class="comment">-- 4.3 确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> j.<span class="string">`jname`</span> <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span>;</span><br><span class="line"><span class="comment">-- 4.4 确定业务条件(分组+最低工资)</span></span><br><span class="line"><span class="keyword">SELECT</span> j.<span class="string">`jname`</span>,<span class="keyword">MIN</span>(e.<span class="string">`salary`</span>) <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> j.<span class="string">`jname`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5.返回工龄超过10年，且2月份入职的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">DATEDIFF</span>(<span class="keyword">NOW</span>(),joindate)/<span class="number">365</span> &gt; <span class="number">10</span> <span class="keyword">AND</span> <span class="keyword">MONTH</span>(joindate) = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 6.返回与 林冲 同一年入职的员工</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(joindate) <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> ename = <span class="string">'林冲'</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> <span class="keyword">YEAR</span>(joindate) = (<span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(joindate) <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> ename = <span class="string">'林 冲'</span>);</span><br><span class="line"><span class="comment">-- 7.返回每个员工的名称及其上级领导的名称(自关联)</span></span><br><span class="line"><span class="keyword">SELECT</span> a.<span class="string">`ename`</span>,b.<span class="string">`ename`</span> <span class="keyword">FROM</span> emp a <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> emp b <span class="keyword">ON</span> a.<span class="string">`mgr`</span> = b.<span class="string">`id`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 8.返回工资为二等级(工资等级表)的职员名字(员工表)、部门名称(部门表) </span></span><br><span class="line"><span class="comment">-- 8.1 确定几张表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg; </span><br><span class="line"><span class="comment">-- 8.2 确定连接条件</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.<span class="string">`dept_id`</span> = d.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span>;</span><br><span class="line"><span class="comment">-- 8.3 确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> sg.<span class="string">`grade`</span>,e.<span class="string">`ename`</span>,d.<span class="string">`dname`</span> <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.<span class="string">`dept_id`</span> = d.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span>;</span><br><span class="line"><span class="comment">-- 8.4 确定业务条件</span></span><br><span class="line"><span class="keyword">SELECT</span> sg.<span class="string">`grade`</span>,e.<span class="string">`ename`</span>,d.<span class="string">`dname`</span> <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.<span class="string">`dept_id`</span> = d.<span class="string">`id`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.<span class="string">`salary`</span> <span class="keyword">BETWEEN</span> sg.<span class="string">`losalary`</span> <span class="keyword">AND</span> sg.<span class="string">`hisalary`</span> <span class="keyword">WHERE</span> sg.<span class="string">`grade`</span> = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 9.涨工资:董事长2000 经理1500 其他800</span></span><br><span class="line"><span class="comment">-- 9.1</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="comment">-- 9.2</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">确定几张表和连接条件</span><br><span class="line">* <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span>; 显示字段(case表达式)</span><br><span class="line">e.`ename`,j.`jname`,e.`salary` AS 涨前,</span><br><span class="line">CASE j.`jname`</span><br><span class="line">WHEN '董事长' THEN e.salary + 2000 WHEN '经理' THEN e.salary + 1500 ELSE e.salary + 800</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> 涨后</span><br><span class="line"><span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.<span class="string">`job_id`</span> = j.<span class="string">`id`</span>;</span><br></pre></td></tr></table></figure><h1 id="三-事务安全-TCL"><a href="#三-事务安全-TCL" class="headerlink" title="三.事务安全 TCL"></a>三.事务安全 TCL</h1><h4 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h4><p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。 </p><ul><li><p>应用场景:用户转账</p></li><li><p>准备数据</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> day46_pro;</span><br><span class="line"><span class="comment">-- 使用库</span></span><br><span class="line"><span class="keyword">use</span> day46_pro;</span><br><span class="line"><span class="comment">-- 创建数据表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">account</span> ( <span class="comment">-- 账户表</span></span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">money <span class="keyword">DOUBLE</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">account</span> (<span class="string">`name`</span>, money) <span class="keyword">VALUES</span> (<span class="string">'蝴蝶姐'</span>, <span class="number">1000</span>), (<span class="string">'罗志祥'</span>, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><ul><li>模拟转账</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 罗志祥扣钱(转出)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 机器故障了</span></span><br><span class="line"><span class="comment">-- 蝴蝶姐加强(转入)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money + <span class="number">100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h4 id="3-2-操作事务"><a href="#3-2-操作事务" class="headerlink" title="3.2 操作事务"></a>3.2 操作事务</h4><h5 id="3-2-1-手动提交事务"><a href="#3-2-1-手动提交事务" class="headerlink" title="3.2.1 手动提交事务"></a>3.2.1 手动提交事务</h5><ol><li><p>开启事务 begin</p></li><li><p>提交事务 commit</p></li><li><p>回滚事务 rollback</p></li></ol><ul><li>转账成功</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 开启事务 begin;</span></span><br><span class="line"><span class="comment">-- 2. 罗志祥扣钱</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 3. 蝴蝶姐加钱</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money + <span class="number">100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 4. 提交事务 </span></span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure><ul><li>转账失败</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.开启事务 begin;</span></span><br><span class="line"><span class="comment">-- 2.罗志祥扣钱</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 3.机器故障</span></span><br><span class="line"><span class="comment">-- 4.回滚事务 </span></span><br><span class="line"><span class="keyword">rollback</span>;</span><br></pre></td></tr></table></figure><h5 id="3-2-2-自动提交事务"><a href="#3-2-2-自动提交事务" class="headerlink" title="3.2.2 自动提交事务"></a>3.2.2 自动提交事务</h5><ul><li><p>默认情况下，在MySQL中每一条DML(增删改)语句，就是一个独立的事务 </p></li><li><p>查看MySQL是否开启自动提交</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'autocommit'</span>;</span><br></pre></td></tr></table></figure></li><li><p>临时关闭自动提交(手动)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> autocommit=<span class="keyword">off</span>;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-3-事务工作原理"><a href="#3-3-事务工作原理" class="headerlink" title="3.3 事务工作原理"></a>3.3 事务工作原理</h4><ul><li>注意:</li></ul><blockquote><p>在同一个事务中，出现bug(异常)，必须执行rollback命令，不然会影响同一个事务中下一次提交</p></blockquote><h4 id="3-4-保存-回滚-点"><a href="#3-4-保存-回滚-点" class="headerlink" title="3.4 保存(回滚)点"></a>3.4 保存(回滚)点</h4><p>当事务开启后，一部分sql执行成功，添加一个保存点，后续操作报错了，回滚到保存点，保证之前的操作可以成功提交</p><table><thead><tr><th>设置保存点</th><th>savepoint 保存点名;</th></tr></thead><tbody><tr><td><strong>回滚到保存点</strong></td><td><strong>rollback to 保存点名;</strong></td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.开启事务 begin;</span></span><br><span class="line"><span class="comment">-- 2.罗志祥扣钱一次(凤姐)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 3.罗志祥扣钱二次(芙蓉姐姐)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 4.设置一个保存点 savepoint ol;</span></span><br><span class="line"><span class="comment">-- 5.罗志祥扣钱三次(石榴姐)</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 6.机器故障</span></span><br><span class="line"><span class="comment">-- 7.回滚点保存点 rollback to ol;</span></span><br><span class="line"><span class="comment">-- 8.提交事务 commit;</span></span><br></pre></td></tr></table></figure><h4 id="3-5-事务特性-ACID"><a href="#3-5-事务特性-ACID" class="headerlink" title="3.5 事务特性 ACID"></a>3.5 事务特性 ACID</h4><ol><li><p>原子性 A atomicity</p><p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。</p></li><li><p>一致性 C consistency </p><p>事务在执行前后，保证数据的一致性</p></li><li><p>隔离性 I isolation </p><p>多个事务之间，相互独立，互不干扰….</p></li><li><p>持久性 D durability </p><p>事务一旦成功提交，保存到磁盘文件，不可逆….</p></li></ol><h4 id="3-6-事务隔离性"><a href="#3-6-事务隔离性" class="headerlink" title="3.6 事务隔离性"></a>3.6 事务隔离性</h4><p>多个事务之间隔离的，相互独立的。但是如果多个事务操作同一批数据，则会引发一些问题，设置不同的隔离级别就</p><p>可以解决这些问题。</p><ul><li><p>脏读【必须要避免】 </p><p>一个事务中，读取到另一个事务，未提交的数据</p></li><li><p>不可重复读 </p><p>一个事务中，二次读取的内容不一致，另外一个事务做了update操作</p></li><li><p>幻读<br> 一个事务中，二次读取的数量不一致，另外一个事务做了insert、delete操作</p></li></ul><h5 id="3-6-1-MySQL数据库隔离级别"><a href="#3-6-1-MySQL数据库隔离级别" class="headerlink" title="3.6.1 MySQL数据库隔离级别"></a>3.6.1 MySQL数据库隔离级别</h5><table><thead><tr><th>级别</th><th>名字</th><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th><th>数据库默认隔离级别</th></tr></thead><tbody><tr><td>1</td><td>读未提交</td><td>read uncommitted</td><td>是</td><td>是</td><td>是</td><td></td></tr><tr><td>2</td><td>读已提交</td><td>read committed</td><td>否</td><td>是</td><td>是</td><td>Oracle和SQL Server</td></tr><tr><td>3</td><td>可重复读</td><td>repeatable read</td><td>否</td><td>否</td><td>是</td><td>MySQL</td></tr><tr><td>4</td><td>串行化</td><td>serializable</td><td>否</td><td>否</td><td>否</td><td></td></tr></tbody></table><p>性能角度:1&gt;2&gt;3&gt;4 </p><p>安全角度:4&gt;3&gt;2&gt;1 </p><p>综合考虑:2 or 3</p><h5 id="3-6-2-演示隔离级别产生的问题"><a href="#3-6-2-演示隔离级别产生的问题" class="headerlink" title="3.6.2 演示隔离级别产生的问题"></a>3.6.2 演示隔离级别产生的问题</h5><table><thead><tr><th>级别</th><th>代码</th></tr></thead><tbody><tr><td>查看当前数据库隔离级别</td><td>show variables like ‘%isolation%’;</td></tr><tr><td>临时修改隔离级别</td><td>set session transaction isolation level 级别字符串;</td></tr></tbody></table><ol><li>演示脏读<br> 设置数据库隔离级别 read uncommitted;</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">read</span> uncommitted;</span><br></pre></td></tr></table></figure><ol start="2"><li>解决脏读问题(引出:不可重复读问题) 设置数据库隔离级别 read committed;</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">read</span> committed;</span><br></pre></td></tr></table></figure><ol start="3"><li>解决不可重复读问题(出现幻读问题) 设置数据库隔离级别 repeatable read;</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> repeatable <span class="keyword">read</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>解决幻读问题<br> 设置数据库隔离级别 serializable;</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">serializable</span>;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="一-MySQL函数-1"><a href="#一-MySQL函数-1" class="headerlink" title="一 MySQL函数"></a>一 MySQL函数</h2><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ul><li><p>concat()</p><ul><li>拼接</li></ul></li><li><p>char_length()</p><ul><li>字符长度</li></ul></li><li><p>trim()</p><ul><li>去掉前后空格</li></ul></li><li><p>replace()</p><ul><li>替换</li></ul></li><li><p>substr()</p><ul><li>截取</li></ul></li></ul><h3 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h3><ul><li><p>now()、curdate()、curtime()</p></li><li><p>year()、month()、day()</p></li><li><p>adddate()、subdate()</p></li><li><p>datediff()</p><ul><li>日期间之间的计算</li></ul></li></ul><h3 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h3><ul><li><p>ceil()、floor()</p><ul><li>向上向下取整</li></ul></li><li><p>rand()</p><ul><li>随机数</li></ul></li><li><p>round()</p><ul><li>四舍五入</li></ul></li><li><p>truncate()</p><ul><li>保留指定小数位</li></ul></li></ul><h3 id="高级函数"><a href="#高级函数" class="headerlink" title="高级函数"></a>高级函数</h3><ul><li><p>case表达式</p><ul><li>相当于java中swtich</li></ul></li><li><p>if表达式</p><ul><li>相当于java中三元运算符</li></ul></li></ul><h2 id="二-MySQL综合练习-1"><a href="#二-MySQL综合练习-1" class="headerlink" title="二 MySQL综合练习"></a>二 MySQL综合练习</h2><h3 id="课下必须写二遍"><a href="#课下必须写二遍" class="headerlink" title="课下必须写二遍"></a>课下必须写二遍</h3><h2 id="三-事务安全-TCL-1"><a href="#三-事务安全-TCL-1" class="headerlink" title="三 事务安全 TCL"></a>三 事务安全 TCL</h2><h3 id="什么是事务："><a href="#什么是事务：" class="headerlink" title="什么是事务："></a>什么是事务：</h3><ul><li>是指的是多个步骤的一组业务操作，要么都成功，要么都失败</li></ul><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><ul><li><p>手动提交</p><ul><li>begin</li><li>commit</li><li>rollback</li></ul></li><li><p>自动提交</p><ul><li><p>默认</p><ul><li>我们使用JDBC时，手动关闭自动提交事务</li></ul></li></ul></li></ul><h3 id="事务原理"><a href="#事务原理" class="headerlink" title="事务原理"></a>事务原理</h3><ul><li>临时日志文件</li></ul><h3 id="保存点"><a href="#保存点" class="headerlink" title="保存点"></a>保存点</h3><ul><li><p>设置保存点</p><ul><li>savepoint 保存点名</li></ul></li><li><p>回滚保存点</p><ul><li>rollback to 保存点名</li></ul></li></ul><h3 id="事务特性"><a href="#事务特性" class="headerlink" title="事务特性"></a>事务特性</h3><ul><li><p>A</p><ul><li>原子性</li></ul></li><li><p>C</p><ul><li>一致性</li></ul></li><li><p>I</p><ul><li>隔离性</li></ul></li><li><p>D</p><ul><li>持久性</li></ul></li></ul><h3 id="隔离性会出现问题"><a href="#隔离性会出现问题" class="headerlink" title="隔离性会出现问题"></a>隔离性会出现问题</h3><ul><li>脏读</li><li>不可重复读</li><li>幻读（虚读）</li></ul><h3 id="数据库隔离级别"><a href="#数据库隔离级别" class="headerlink" title="数据库隔离级别"></a>数据库隔离级别</h3><ul><li><p>读未提交</p></li><li><p>读已提交</p><ul><li>oracle 和 sqlServer 默认</li></ul></li><li><p>可重复读</p><ul><li>MySQL 默认</li></ul></li><li><p>串行化</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;MySQL函数&lt;/li&gt;
&lt;li&gt;MySQL综合练习&lt;/li&gt;
&lt;li&gt;事务安全TCL
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（四十五）</title>
    <link href="http://yoursite.com/2020/04/30/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%BA%94%EF%BC%89/"/>
    <id>http://yoursite.com/2020/04/30/就业班学习笔记（四十五）/</id>
    <published>2020-04-30T01:17:40.000Z</published>
    <updated>2020-05-04T16:41:14.772Z</updated>
    
    <content type="html"><![CDATA[<ul><li>多表查询</li></ul><a id="more"></a><h1 id="一-多表查询"><a href="#一-多表查询" class="headerlink" title="一.多表查询"></a>一.多表查询</h1><details><summary>准备数据</summary><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 多表查询</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> day20; <span class="keyword">use</span> day20;</span><br><span class="line"><span class="comment">-- 创建部门表(主表) </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="keyword">NAME</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept (<span class="keyword">NAME</span>) <span class="keyword">VALUES</span> (<span class="string">'开发部'</span>),(<span class="string">'市场部'</span>),(<span class="string">'财务部'</span>),(<span class="string">'销售部'</span>);</span><br><span class="line"><span class="comment">-- 创建员工表(从表) CREATE TABLE emp (</span></span><br><span class="line">id INT PRIMARY KEY AUTO_INCREMENT, NAME VARCHAR(10),</span><br><span class="line">gender CHAR(1), <span class="comment">-- 性别(sex) salary DOUBLE, -- 工资</span></span><br><span class="line">join_date DATE, <span class="comment">-- 入职日期</span></span><br><span class="line">dept_id INT <span class="comment">-- 外键字段 );</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(<span class="keyword">NAME</span>,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">'孙悟空'</span>,<span class="string">'男'</span>,<span class="number">7200</span>,<span class="string">'2013-02- 24'</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(<span class="keyword">NAME</span>,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">'猪八戒'</span>,<span class="string">'男'</span>,<span class="number">3600</span>,<span class="string">'2010-12- 02'</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(<span class="keyword">NAME</span>,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">'唐僧'</span>,<span class="string">'男'</span>,<span class="number">9000</span>,<span class="string">'2008-08- 08'</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(<span class="keyword">NAME</span>,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">'白骨精'</span>,<span class="string">'女'</span>,<span class="number">5000</span>,<span class="string">'2015-10- 07'</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(<span class="keyword">NAME</span>,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">'蜘蛛精'</span>,<span class="string">'女'</span>,<span class="number">4500</span>,<span class="string">'2011-03- 14'</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(<span class="keyword">NAME</span>,gender,salary,join_date,dept_id) <span class="keyword">VALUES</span>(<span class="string">'沙僧'</span>,<span class="string">'男'</span>,<span class="number">6666</span>,<span class="string">'2017-03- 04'</span>,<span class="literal">null</span>);</span><br></pre></td></tr></table></figure></details><h4 id="1-1-笛卡尔积"><a href="#1-1-笛卡尔积" class="headerlink" title="1.1 笛卡尔积"></a>1.1 笛卡尔积</h4><ul><li>功能<br>多张表的记录进行组合，这种现象称为笛卡尔积(交叉连接)</li><li>语法<br>select … from 左表,右表;</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询二张表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp,dept;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> emp,dept;</span><br></pre></td></tr></table></figure><p>将两张表记录组合，emp个数*dept个数=笛卡尔积个数</p><h4 id="1-2-内连接"><a href="#1-2-内连接" class="headerlink" title="1.2 内连接"></a>1.2 内连接</h4><ul><li>功能<br>拿左表的记录去匹配由标的记录，若符合条件显示(二张表的交集)</li></ul><table><thead><tr><th></th><th>语法</th></tr></thead><tbody><tr><td>隐式内连接</td><td>select … from 左表,右表 where 连接条件;</td></tr><tr><td>显示内连接</td><td>select … from 左表 [inner] join 右表 on 连接条件;</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 内连接</span></span><br><span class="line"><span class="comment">-- 隐式内连接</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e,dept d <span class="keyword">WHERE</span> e.dept_id = d.id;</span><br><span class="line"><span class="comment">-- 显示内连接</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"><span class="comment">-- 查询唐僧的 id，姓名，性别，工资和所在部门名称 </span></span><br><span class="line"><span class="comment">-- 1.确定查询表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d;</span><br><span class="line"><span class="comment">-- 2.确定连接条件</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"><span class="comment">-- 3.确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> e.id,e.name,e.gender,e.salary,d.name <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"><span class="comment">-- 4.确定业务条件</span></span><br><span class="line"><span class="keyword">SELECT</span> e.id,e.name,e.gender,e.salary,d.name <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id <span class="keyword">WHERE</span> e.name = <span class="string">'唐僧'</span>;</span><br></pre></td></tr></table></figure><h4 id="1-3-外连接"><a href="#1-3-外连接" class="headerlink" title="1.3 外连接"></a>1.3 外连接</h4><table><thead><tr><th></th><th>功能</th><th>语法</th></tr></thead><tbody><tr><td>左外连接</td><td>展示左表全部，再去匹配右表记录，若条件符合显示，若条件不符合显示NULL</td><td>select … from 左表 left [outer] join 右表 on 连接条件;</td></tr><tr><td>右外连接</td><td>展示右表全部，再去匹配左表记录，若条件符合显示，若条件不符合显示NULL</td><td>select …from 左表 right [outer] join 右表 on 连接条件;</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 左外连接(推荐)</span></span><br><span class="line"><span class="comment">-- 查询所有员工信息及对应的部门名称</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id; <span class="comment">-- 查询所有部门及对应的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> dept d <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> emp e <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"><span class="comment"># 右外连接(了解)</span></span><br><span class="line"><span class="comment">-- 查询所有部门及对应的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br></pre></td></tr></table></figure><h4 id="1-4-子查询-嵌套"><a href="#1-4-子查询-嵌套" class="headerlink" title="1.4 子查询(嵌套)"></a>1.4 子查询(嵌套)</h4><ul><li>功能<br>一条select语句执行结果，作为另一条select语法的一部分</li></ul><table><thead><tr><th></th><th>语法</th></tr></thead><tbody><tr><td>查询结果单值</td><td>SELECT MAX(salary) FROM emp;</td></tr><tr><td>查询结果单列多值</td><td>SELECT salary FROM emp;</td></tr><tr><td>查询结果多列多值</td><td>SELECT * FROM emp;</td></tr></tbody></table><table><thead><tr><th>规律</th><th>语法</th></tr></thead><tbody><tr><td>子查询结果为单列，肯定作为条件在where后面使用</td><td>select … from 表名 where 字段 in (子查询);</td></tr><tr><td>子查询结果为多列，一般作为虚拟表在from后面使用</td><td>select … from (子查询) as 表别名;</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 子查询</span></span><br><span class="line"><span class="comment"># 子查询结果为单值</span></span><br><span class="line"><span class="comment">-- 1 查询工资最高的员工是谁?</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> salary = (<span class="keyword">SELECT</span> <span class="keyword">MAX</span>(salary) <span class="keyword">FROM</span> emp); </span><br><span class="line"><span class="comment">-- 2 查询工资小于平均工资的员工有哪些?</span></span><br><span class="line"><span class="comment">-- 2.1 先求出平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(salary) <span class="keyword">FROM</span> emp;</span><br><span class="line"><span class="comment">-- 2.2 查询低于平均工资的员工</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> salary &lt; (<span class="keyword">SELECT</span> <span class="keyword">AVG</span>(salary) <span class="keyword">FROM</span> emp);</span><br><span class="line"><span class="comment"># 子查询结果为单列多行</span></span><br><span class="line"><span class="comment">-- 1 查询工资大于5000的员工，来自于哪些部门的名字</span></span><br><span class="line"><span class="comment">-- 1.1 查询工资大于5000的员工</span></span><br><span class="line"><span class="keyword">SELECT</span> dept_id <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> salary &gt;<span class="number">5000</span>;</span><br><span class="line"><span class="comment">-- 1.2 来自于哪些部门的名字</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> dept <span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">IN</span>(<span class="keyword">SELECT</span> dept_id <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> salary &gt;<span class="number">5000</span>);</span><br><span class="line"><span class="comment">-- 2 查询开发部与财务部所有的员工信息</span></span><br><span class="line"><span class="comment">-- 2.1 根据部门名称，查询部门主键</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">id</span> <span class="keyword">FROM</span> dept <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">IN</span>(<span class="string">'开发部'</span>,<span class="string">'财务部'</span>);</span><br><span class="line"><span class="comment">-- 2.2 根据部门id查询员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> dept_id <span class="keyword">IN</span> (<span class="keyword">SELECT</span> <span class="keyword">id</span> <span class="keyword">FROM</span> dept <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">IN</span>(<span class="string">'开发部'</span>,<span class="string">'财务部'</span>));</span><br><span class="line"><span class="comment"># 子查询结果为多列多行</span></span><br><span class="line"><span class="comment">-- 1 查询出`dept`，包括部门名称</span></span><br><span class="line"><span class="comment">-- 方案一</span></span><br><span class="line"><span class="comment">-- 1.1 查询出2011年以后入职的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> join_date &gt; <span class="string">'2011-1-1'</span>;</span><br><span class="line"><span class="comment">-- 1.2 通过临时表跟部门表关联</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> join_date &gt; <span class="string">'2011-1-1'</span>) e <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"><span class="comment">-- 方案二</span></span><br><span class="line"><span class="comment">-- 1.1 先实现二张表关联</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"><span class="comment">-- 1.2 再过滤2011年以后入职的</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id <span class="keyword">WHERE</span> e.join_date &gt; <span class="string">'2011-1- 1'</span>;</span><br></pre></td></tr></table></figure><h1 id="二-多表案例"><a href="#二-多表案例" class="headerlink" title="二.多表案例"></a>二.多表案例</h1> <details><summary>准备数据</summary><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 多表案例</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> day20_pro; <span class="keyword">use</span> day20_pro;</span><br><span class="line"><span class="comment">-- 部门表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dept (</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> auto_increment, <span class="comment">-- 部门id </span></span><br><span class="line">dname <span class="built_in">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 部门名称</span></span><br><span class="line">loc <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="comment">-- 部门位置</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 添加4个部门</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept(<span class="keyword">id</span>,dname,loc) <span class="keyword">VALUES</span> (<span class="number">10</span>,<span class="string">'教研部'</span>,<span class="string">'北京'</span>), (<span class="number">20</span>,<span class="string">'学工部'</span>,<span class="string">'上海'</span>),</span><br><span class="line">(<span class="number">30</span>,<span class="string">'销售部'</span>,<span class="string">'广州'</span>), (<span class="number">40</span>,<span class="string">'财务部'</span>,<span class="string">'深圳'</span>);</span><br><span class="line"><span class="comment">-- 职务表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> job (</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">jname <span class="built_in">VARCHAR</span>(<span class="number">20</span>), <span class="comment">-- 职务名称 </span></span><br><span class="line">description <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="comment">-- 职务描述</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 添加4个职务</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job (<span class="keyword">id</span>, jname, description) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'董事长'</span>, <span class="string">'管理整个公司，接单'</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">'经理'</span>, <span class="string">'管理部门员工'</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">'销售员'</span>, <span class="string">'向客人推销产品'</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">'文员'</span>, <span class="string">'使用办公软件'</span>);</span><br><span class="line"><span class="comment">-- 员工表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp (</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>, <span class="comment">-- 员工id </span></span><br><span class="line">ename <span class="built_in">VARCHAR</span>(<span class="number">50</span>), <span class="comment">-- 员工姓名 </span></span><br><span class="line">job_id <span class="built_in">INT</span>, <span class="comment">-- 职务id 外键 </span></span><br><span class="line">mgr <span class="built_in">INT</span> , <span class="comment">-- 上级领导</span></span><br><span class="line">joindate <span class="built_in">DATE</span>, <span class="comment">-- 入职日期</span></span><br><span class="line">salary <span class="built_in">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>), <span class="comment">-- 工资 99999.99</span></span><br><span class="line">bonus <span class="built_in">DECIMAL</span>(<span class="number">7</span>,<span class="number">2</span>), <span class="comment">-- 奖金 99999.99</span></span><br><span class="line">dept_id <span class="built_in">INT</span>, <span class="comment">-- 所在部门编号 外键</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> emp_jobid_ref_job_id_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (job_id) <span class="keyword">REFERENCES</span> job (<span class="keyword">id</span>), <span class="keyword">CONSTRAINT</span> emp_deptid_ref_dept_id_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (dept_id) <span class="keyword">REFERENCES</span> dept (<span class="keyword">id</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 添加员工</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp(<span class="keyword">id</span>,ename,job_id,mgr,joindate,salary,bonus,dept_id) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1001</span>,<span class="string">'孙悟空'</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">'2000-12-17'</span>,<span class="string">'8000.00'</span>,<span class="literal">NULL</span>,<span class="number">20</span>), </span><br><span class="line">(<span class="number">1002</span>,<span class="string">'卢俊义'</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">'2001-02-20'</span>,<span class="string">'16000.00'</span>,<span class="string">'3000.00'</span>,<span class="number">30</span>), </span><br><span class="line">(<span class="number">1003</span>,<span class="string">'林冲'</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">'2001-02-22'</span>,<span class="string">'12500.00'</span>,<span class="string">'5000.00'</span>,<span class="number">30</span>), </span><br><span class="line">(<span class="number">1004</span>,<span class="string">'唐僧'</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">'2001-04-02'</span>,<span class="string">'29750.00'</span>,<span class="literal">NULL</span>,<span class="number">20</span>), </span><br><span class="line">(<span class="number">1005</span>,<span class="string">'李逵'</span>,<span class="number">4</span>,<span class="number">1006</span>,<span class="string">'2001-09-28'</span>,<span class="string">'12500.00'</span>,<span class="string">'14000.00'</span>,<span class="number">30</span>), </span><br><span class="line">(<span class="number">1006</span>,<span class="string">'宋江'</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">'2001-05-01'</span>,<span class="string">'28500.00'</span>,<span class="literal">NULL</span>,<span class="number">30</span>), </span><br><span class="line">(<span class="number">1007</span>,<span class="string">'刘备'</span>,<span class="number">2</span>,<span class="number">1009</span>,<span class="string">'2001-09-01'</span>,<span class="string">'24500.00'</span>,<span class="literal">NULL</span>,<span class="number">10</span>), </span><br><span class="line">(<span class="number">1008</span>,<span class="string">'猪八戒'</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">'2007-04-19'</span>,<span class="string">'30000.00'</span>,<span class="literal">NULL</span>,<span class="number">20</span>), </span><br><span class="line">(<span class="number">1009</span>,<span class="string">'罗贯中'</span>,<span class="number">1</span>,<span class="literal">NULL</span>,<span class="string">'2001-11-17'</span>,<span class="string">'50000.00'</span>,<span class="literal">NULL</span>,<span class="number">10</span>), </span><br><span class="line">(<span class="number">1010</span>,<span class="string">'吴用'</span>,<span class="number">3</span>,<span class="number">1006</span>,<span class="string">'2001-09-08'</span>,<span class="string">'15000.00'</span>,<span class="string">'0.00'</span>,<span class="number">30</span>), </span><br><span class="line">(<span class="number">1011</span>,<span class="string">'沙僧'</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">'2007-05-23'</span>,<span class="string">'11000.00'</span>,<span class="literal">NULL</span>,<span class="number">20</span>), </span><br><span class="line">(<span class="number">1012</span>,<span class="string">'李逵'</span>,<span class="number">4</span>,<span class="number">1006</span>,<span class="string">'2001-12-03'</span>,<span class="string">'9500.00'</span>,<span class="literal">NULL</span>,<span class="number">30</span>), </span><br><span class="line">(<span class="number">1013</span>,<span class="string">'小白龙'</span>,<span class="number">4</span>,<span class="number">1004</span>,<span class="string">'2001-12-03'</span>,<span class="string">'30000.00'</span>,<span class="literal">NULL</span>,<span class="number">20</span>), </span><br><span class="line">(<span class="number">1014</span>,<span class="string">'关羽'</span>,<span class="number">4</span>,<span class="number">1007</span>,<span class="string">'2002-01-23'</span>,<span class="string">'13000.00'</span>,<span class="literal">NULL</span>,<span class="number">10</span>);</span><br><span class="line"><span class="comment">-- 工资等级表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> salarygrade (</span><br><span class="line">grade <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>, <span class="comment">-- 等级 </span></span><br><span class="line">losalary <span class="built_in">INT</span>, <span class="comment">-- 最低工资 </span></span><br><span class="line">hisalary <span class="built_in">INT</span> <span class="comment">-- 最高工资</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 添加5个工资等级</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> salarygrade(grade,losalary,hisalary) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="number">7000</span>,<span class="number">12000</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="number">12010</span>,<span class="number">14000</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="number">14010</span>,<span class="number">20000</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="number">20010</span>,<span class="number">30000</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="number">30010</span>,<span class="number">99990</span>);</span><br></pre></td></tr></table></figure></details><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1 查询所有员工信息。显示员工编号，员工姓名，工资，职务名称，职务描述 </span></span><br><span class="line"><span class="comment">-- 1.1 确定几张表?</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j;</span><br><span class="line"><span class="comment">-- 1.2 确定连接条件</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.job_id = j.id;</span><br><span class="line"><span class="comment">-- 1.3 确定显示字段(列)</span></span><br><span class="line"><span class="keyword">SELECT</span> e.id,e.ename,e.salary,j.jname,j.description <span class="keyword">FROM</span> emp e <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.job_id = j.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2 查询所有员工信息。显示员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置 </span></span><br><span class="line"><span class="comment">-- 2.1 确定几张表?</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d;</span><br><span class="line"><span class="comment">-- 2.2 确定连接条件 </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.job_id = j.id <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.3 确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> e.id,e.ename,e.salary,j.jname,j.description,d.dname,d.loc <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.job_id = j.id <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3 查询所有员工信息。显示员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级 </span></span><br><span class="line"><span class="comment">-- 3.1 确定几张表</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp e</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg;</span><br><span class="line"><span class="comment">-- 3.2 确定连接条件 SELECT * FROM emp e</span></span><br><span class="line">INNER JOIN job j ON e.job_id = j.id</span><br><span class="line">INNER JOIN dept d ON e.dept_id = d.id</span><br><span class="line">INNER JOIN salarygrade sg ON e.salary BETWEEN sg.losalary AND sg.hisalary;</span><br><span class="line"><span class="comment">-- 3.3 确定显示字段</span></span><br><span class="line"><span class="keyword">SELECT</span> e.ename,e.salary,j.jname,j.description,d.dname,d.loc,sg.grade <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.job_id = j.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.salary <span class="keyword">BETWEEN</span> sg.losalary <span class="keyword">AND</span> sg.hisalary;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4 查询经理的信息。显示员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级</span></span><br><span class="line"><span class="comment">-- 直接将第三题代码粘过来</span></span><br><span class="line"><span class="keyword">SELECT</span> e.ename,e.salary,j.jname,j.description,d.dname,d.loc,sg.grade <span class="keyword">FROM</span> emp e</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> job j <span class="keyword">ON</span> e.job_id = j.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> dept d <span class="keyword">ON</span> e.dept_id = d.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> salarygrade sg <span class="keyword">ON</span> e.salary <span class="keyword">BETWEEN</span> sg.losalary <span class="keyword">AND</span> sg.hisalary <span class="keyword">WHERE</span> j.jname = <span class="string">'经理'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5 查询出部门编号、部门名称、部门位置、部门人数 (这个代码至少要敲三遍) </span></span><br><span class="line"><span class="comment">-- 5.1 查询出部门编号、部门名称、部门位置</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> dept;</span><br><span class="line"><span class="comment">-- 5.2 部门人数(员工表:分组+聚合 )</span></span><br><span class="line"><span class="keyword">SELECT</span> dept_id,<span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> total <span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> dept_id; </span><br><span class="line"><span class="comment">-- 5.3 部门表左外关联临时表</span></span><br><span class="line"><span class="keyword">SELECT</span> d.id,d.dname,d.loc,e.total <span class="keyword">FROM</span> dept d</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> dept_id,<span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> total <span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> dept_id) e <span class="keyword">ON</span> d.id = e.dept_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6 查询每个员工的名称及其上级领导的名称(自关联) SELECT</span></span><br><span class="line">yuangong.id, yuangong.ename, lingdao.id, lingdao.ename</span><br><span class="line">FROM</span><br><span class="line">  emp yuangong</span><br><span class="line">  LEFT OUTER JOIN emp lingdao</span><br><span class="line">ON yuangong.mgr = lingdao.id ;</span><br></pre></td></tr></table></figure><ul><li>多表查询会产生笛卡尔积 </li><li>消除笛卡尔积<br>连接条件 = 表个数-1 </li><li>步骤<blockquote><p>1)确定几张表<br>2)确定连接条件<br>3)确定显示字段<br>4)确定业务条件</p></blockquote></li></ul><h1 id="三-用户权限-DCL"><a href="#三-用户权限-DCL" class="headerlink" title="三.用户权限 DCL"></a>三.用户权限 DCL</h1><table><thead><tr><th></th><th>语法</th><th>注意</th></tr></thead><tbody><tr><td>创建用户</td><td>create user ‘用户名‘@’主机名’ identified by ‘密码’;</td><td>主机名:限定客户端登录ip<br>指定ip:127.0.0.1 (localhost)<br>任意ip:%</td></tr><tr><td>授权用户</td><td>grant 权限1,权限2… on 数据库名.表名 to ‘用户名‘@’主机名’;</td><td>权限: select、insert、delete、update、create… <br>all 所有权限<br>数据库名.* 指定库下面所有的表</td></tr><tr><td>查看权限</td><td>show grants for ‘用户名‘@’主机名’;</td><td></td></tr><tr><td>撤销授权</td><td>revoke 权限1,权限2… on 数据库名.表名 from ‘用户名‘@’主机名’;</td><td>权限: select、insert、delete、update、create…<br> all 所有权限<br>数据库名.* 指定库下面所有的表</td></tr><tr><td>删除用户</td><td>drop user ‘用户名‘@’主机名’;</td><td></td></tr><tr><td>密码管理</td><td>超级管理员set password for ‘用户名‘@’主机名’=password(‘新密码’); <br>普通用户set password=password(‘新密码’);</td><td></td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建用户</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'tom'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'123'</span>;</span><br><span class="line"><span class="comment">-- 授权</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> day20.dept <span class="keyword">TO</span> <span class="string">'tom'</span>@<span class="string">'%'</span> ;</span><br><span class="line"><span class="comment">-- 查看权限</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GRANTS</span> <span class="keyword">FOR</span> <span class="string">'tom'</span>@<span class="string">'%'</span> ;</span><br><span class="line"><span class="comment">-- 撤销权限</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> day20.dept <span class="keyword">FROM</span> <span class="string">'tom'</span>@<span class="string">'%'</span> ;</span><br><span class="line"><span class="comment">-- 密码管理 -- 加密函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">PASSWORD</span>(<span class="string">'123'</span>); <span class="comment">-- 超级管理帮你找回密码</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> <span class="string">'tom'</span>@<span class="string">'%'</span>= <span class="keyword">PASSWORD</span>(<span class="string">'999'</span>);</span><br><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> <span class="string">'tom'</span>@<span class="string">'%'</span> ;</span><br></pre></td></tr></table></figure><h1 id="四-数据库备份与还原"><a href="#四-数据库备份与还原" class="headerlink" title="四.数据库备份与还原"></a>四.数据库备份与还原</h1><table><thead><tr><th></th><th>备份</th><th>还原</th></tr></thead><tbody><tr><td>格式</td><td>mysqldump -u用户名 -p 需要备份数据库名 &gt; 导出路径(*.sql)</td><td>mysql -u用户名 -p &lt; 导入路径(*.sql)</td></tr><tr><td>实例</td><td>mysqldump -uroot -p day20_pro &gt; d:bak.sql</td><td>mysql -uroot -p &lt; d:bak.sql</td></tr><tr><td>缺点</td><td>通过命令备份的只有表结构和数据，没有建库语句</td><td></td></tr></tbody></table><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="一-多表查询-1"><a href="#一-多表查询-1" class="headerlink" title="一 多表查询"></a>一 多表查询</h2><h3 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h3><ul><li>多表中每一条记录的进行组合，又称为交叉连接</li></ul><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><ul><li><p>查询二张表的交集部分</p></li><li><p>语法</p><ul><li><p>隐式内连接</p><ul><li>select … from 左表,右表 where 连接条件;</li></ul></li><li><p>显示内连接</p><ul><li>select … from 左表 inner join 右表 on 连接条件;</li></ul></li></ul></li></ul><h3 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h3><ul><li><p>左外连接</p><ul><li><p>查询左表全部，再去匹配右表，有就显示，没有显示null</p></li><li><p>语法</p><ul><li>select … from 左表 left outer join 右表 on 连接条件;</li></ul></li></ul></li><li><p>右外连接</p></li></ul><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><ul><li><p>子查询结果为单值</p></li><li><p>子查询结果为单列多行</p></li><li><p>子查询结果为多列多行</p></li><li><p>规律</p><ul><li>子查询结果只要为单列，肯定在where后作为条件使用</li><li>子查询结果只要为多列，一般在from后作为虚拟表使用</li></ul></li></ul><h2 id="二-多表案例-1"><a href="#二-多表案例-1" class="headerlink" title="二 多表案例"></a>二 多表案例</h2><h3 id="规律"><a href="#规律" class="headerlink" title="规律"></a>规律</h3><ul><li><p>1。确定几张表</p></li><li><p>2。确定连接条件</p><ul><li>on关键字</li></ul></li><li><p>3。确定显示字段</p></li><li><p>4。确定业务条件</p><ul><li>where关键字</li></ul></li></ul><h2 id="三-DCL用户权限"><a href="#三-DCL用户权限" class="headerlink" title="三 DCL用户权限"></a>三 DCL用户权限</h2><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><ul><li>create user ‘用户名‘@’主机名’ identifield by ‘密码’</li></ul><h3 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h3><ul><li>grant 权限1,权限2…. on 数据库.表名 to ‘用户名‘@’主机名’</li></ul><h3 id="查看权限"><a href="#查看权限" class="headerlink" title="查看权限"></a>查看权限</h3><ul><li>show grants for  ‘用户名‘@’主机名’</li></ul><h3 id="撤销权限"><a href="#撤销权限" class="headerlink" title="撤销权限"></a>撤销权限</h3><ul><li>revoke 权限1,权限2… on 数据库.表名 from  ‘用户名‘@’主机名’</li></ul><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><ul><li>drop user  ‘用户名‘@’主机名’</li></ul><h3 id="密码管理"><a href="#密码管理" class="headerlink" title="密码管理"></a>密码管理</h3><ul><li>set password for  ‘用户名‘@’主机名’=password(‘新密码’);</li></ul><h2 id="四-数据库还原与备份"><a href="#四-数据库还原与备份" class="headerlink" title="四 数据库还原与备份"></a>四 数据库还原与备份</h2><h3 id="dos命令行"><a href="#dos命令行" class="headerlink" title="dos命令行"></a>dos命令行</h3><h3 id="图形化工具"><a href="#图形化工具" class="headerlink" title="图形化工具"></a>图形化工具</h3>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;多表查询&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（四十四）</title>
    <link href="http://yoursite.com/2020/04/29/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E5%9B%9B%EF%BC%89/"/>
    <id>http://yoursite.com/2020/04/29/就业班学习笔记（四十四）/</id>
    <published>2020-04-29T00:51:31.000Z</published>
    <updated>2020-05-04T15:43:39.084Z</updated>
    
    <content type="html"><![CDATA[<ul><li>DQL高级查询</li><li>数据库约束</li><li>表关系<a id="more"></a></li></ul><h1 id="一-DQL高级查询"><a href="#一-DQL高级查询" class="headerlink" title="一.DQL高级查询"></a>一.DQL高级查询</h1> <details><summary>创建表</summary><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> Day44;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> Day44;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">  age <span class="built_in">int</span>,</span><br><span class="line">  sex <span class="built_in">varchar</span>(<span class="number">5</span>),</span><br><span class="line">  address <span class="built_in">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  math <span class="built_in">int</span>,</span><br><span class="line">  english <span class="built_in">int</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(<span class="keyword">id</span>,<span class="keyword">NAME</span>,age,sex,address,math,english) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">'马云'</span>,<span class="number">55</span>,<span class="string">'男'</span>,<span class="string">'杭州'</span>,<span class="number">66</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">'马化腾'</span>,<span class="number">45</span>,<span class="string">'女'</span>,<span class="string">'深圳'</span>,<span class="number">98</span>,<span class="number">87</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">'马景涛'</span>,<span class="number">55</span>,<span class="string">'男'</span>,<span class="string">'香港'</span>,<span class="number">56</span>,<span class="number">77</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="string">'柳岩'</span>,<span class="number">20</span>,<span class="string">'女'</span>,<span class="string">'湖南'</span>,<span class="number">76</span>,<span class="number">65</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="string">'柳青'</span>,<span class="number">20</span>,<span class="string">'男'</span>,<span class="string">'湖南'</span>,<span class="number">86</span>,<span class="literal">NULL</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="string">'刘德华'</span>,<span class="number">57</span>,<span class="string">'男'</span>,<span class="string">'香港'</span>,<span class="number">99</span>,<span class="number">99</span>),</span><br><span class="line">(<span class="number">7</span>,<span class="string">'马德'</span>,<span class="number">22</span>,<span class="string">'女'</span>,<span class="string">'香港'</span>,<span class="number">99</span>,<span class="number">99</span>),</span><br><span class="line">(<span class="number">8</span>,<span class="string">'德玛西亚'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'南京'</span>,<span class="number">56</span>,<span class="number">65</span>),</span><br><span class="line">(<span class="number">9</span>,<span class="string">'唐僧'</span>,<span class="number">25</span>,<span class="string">'男'</span>,<span class="string">'长安'</span>,<span class="number">87</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="number">10</span>,<span class="string">'孙悟空'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'花果山'</span>,<span class="number">100</span>,<span class="number">66</span>),</span><br><span class="line">(<span class="number">11</span>,<span class="string">'猪八戒'</span>,<span class="number">22</span>,<span class="string">'男'</span>,<span class="string">'高老庄'</span>,<span class="number">58</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="number">12</span>,<span class="string">'沙僧'</span>,<span class="number">50</span>,<span class="string">'男'</span>,<span class="string">'流沙河'</span>,<span class="number">77</span>,<span class="number">88</span>),</span><br><span class="line">(<span class="number">13</span>,<span class="string">'白骨精'</span>,<span class="number">22</span>,<span class="string">'女'</span>,<span class="string">'白虎岭'</span>,<span class="number">66</span>,<span class="number">66</span>),</span><br><span class="line">(<span class="number">14</span>,<span class="string">'蜘蛛精'</span>,<span class="number">23</span>,<span class="string">'女'</span>,<span class="string">'盘丝洞'</span>,<span class="number">88</span>,<span class="number">88</span>);</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> Day44.student;</span><br></pre></td></tr></table></figure></details><h4 id="1-1-排序"><a href="#1-1-排序" class="headerlink" title="1.1 排序"></a>1.1 排序</h4><ul><li>语法:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ... <span class="keyword">from</span> 表名 <span class="keyword">order</span> <span class="keyword">by</span> 排序列 [<span class="keyword">asc</span>|<span class="keyword">desc</span>],排序列 [<span class="keyword">asc</span>|dex]</span><br><span class="line"><span class="keyword">asc</span>:升序 (默认值) <span class="keyword">desc</span>:降序</span><br></pre></td></tr></table></figure></li><li>注意:<br>多字段排序，后面的排序结果是在前面排序的基础之上</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询所有数据,使用年龄降序排序</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> Day44.student <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>;</span><br><span class="line"><span class="comment">-- 查询所有数据,在年龄降序排序的基础上，如果年龄相同再以数学成绩降序排序</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">ORDER</span> <span class="keyword">BY</span>  age <span class="keyword">DESC</span>,math <span class="keyword">DESC</span> ;</span><br></pre></td></tr></table></figure><h4 id="1-2-聚合函数"><a href="#1-2-聚合函数" class="headerlink" title="1.2 聚合函数"></a>1.2 聚合函数</h4><ul><li>作用:对一列数据进行计算，返回一个结果，忽略null值</li><li>语法:<blockquote></blockquote><table><thead><tr><th>关键字</th><th>说明</th></tr></thead><tbody><tr><td>count(列名)</td><td>统计一列个数</td></tr><tr><td>max(列名)</td><td>求出一列的最大值</td></tr><tr><td>min(列名)</td><td>求出一列的最小值</td></tr><tr><td>sum(列名)</td><td>对一列求和</td></tr><tr><td>avg(列名)</td><td>求出一列的平均值</td></tr></tbody></table></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 聚合函数</span></span><br><span class="line"><span class="comment">-- 查询学生总数（null值处理）</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">id</span>) <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">isnull</span>(english)) <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="comment">-- 查询年龄大于40的总数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> age&gt;<span class="number">40</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询数学成绩总分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(math) <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="comment">-- 查询数学成绩平均分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(math) <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="comment">-- 查询数学成绩最高分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(math) <span class="keyword">FROM</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询数学成绩最低分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(math) <span class="keyword">FROM</span> student;</span><br></pre></td></tr></table></figure><h4 id="1-3-分组"><a href="#1-3-分组" class="headerlink" title="1.3 分组"></a>1.3 分组</h4><ul><li>作用:对一列数据进行分组，相同的内容分为一组，通常与聚合函数一起使用，完成统计工作</li><li>语法:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 分组列 <span class="keyword">from</span> 表名 <span class="keyword">group</span> <span class="keyword">by</span> 分组列 <span class="keyword">having</span> 分组后的过滤条件;</span><br></pre></td></tr></table></figure></li><li>where和having区别<br>where在分组前进行条件过滤，不支持聚合函数 having在分组后今天条件过滤，支持聚合函数</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分组</span></span><br><span class="line"><span class="comment">-- 按性别分组</span></span><br><span class="line"><span class="keyword">SELECT</span> sex <span class="keyword">FROM</span> student <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询男女各多少人</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询年龄大于25岁的人,按性别分组,统计每组的人数</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> age&gt;<span class="number">25</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询年龄大于25岁的人,按性别分组,统计每组的人数,并只显示性别人数大于2的数据</span></span><br><span class="line"><span class="keyword">SELECT</span> sex,<span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> age&gt;<span class="number">25</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> sex <span class="keyword">having</span> <span class="keyword">COUNT</span>(*)&gt;<span class="number">2</span>;</span><br></pre></td></tr></table></figure><h4 id="1-4-分页"><a href="#1-4-分页" class="headerlink" title="1.4 分页"></a>1.4 分页</h4><ul><li>语法:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ... <span class="keyword">from</span> 表名 <span class="keyword">limit</span> 开始索引,每页显示个数;</span><br></pre></td></tr></table></figure></li><li>索引特点:<br>索引是从0开始，0也是默认值，可以省略</li><li>分页索引公式:<br>索引 = (当前页-1) × 每页个数</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分页</span></span><br><span class="line"><span class="comment">-- 查询学生表中数据，显示前6条</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">6</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">LIMIT</span> <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询学生表中数据，从第三条开始显示，显示6条</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">LIMIT</span> <span class="number">2</span>,<span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 模拟百度分页，一页显示5条</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">LIMIT</span> <span class="number">5</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">LIMIT</span> <span class="number">5</span>,<span class="number">5</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">LIMIT</span> <span class="number">10</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><h4 id="1-5-知识小结"><a href="#1-5-知识小结" class="headerlink" title="1.5 知识小结"></a>1.5 知识小结</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件 <span class="keyword">group</span> <span class="keyword">by</span> 分组 <span class="keyword">having</span> 分组后条件 <span class="keyword">order</span> <span class="keyword">by</span> 排序 <span class="keyword">limit</span> 分页;</span><br></pre></td></tr></table></figure><h1 id="二-数据库约束"><a href="#二-数据库约束" class="headerlink" title="二.数据库约束"></a>二.数据库约束</h1><h4 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h4><ul><li>作用<br>对表中的数据进行限定，保证数据的正确性、有效性和完整性。</li></ul><table><thead><tr><th>关键字</th><th>说明</th></tr></thead><tbody><tr><td>primary key</td><td>主键约束。要求表中有一个字段 唯一 且 非空，通常我们使用id作为主键</td></tr><tr><td>unique</td><td>唯一约束</td></tr><tr><td>not null</td><td>非空约束</td></tr><tr><td>default</td><td>默认值</td></tr><tr><td>foreign key</td><td>外键约束</td></tr></tbody></table><h4 id="2-2-实现"><a href="#2-2-实现" class="headerlink" title="2.2 实现"></a>2.2 实现</h4><h5 id="2-2-1-主键约束"><a href="#2-2-1-主键约束" class="headerlink" title="2.2.1 主键约束"></a>2.2.1 主键约束</h5><ul><li>作用:限定某一列的值非空且唯一， 主键就是表中记录的唯一标识。</li></ul><ol><li>设置主键约束<br>1)创建表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>, ...</span><br><span class="line">...</span><br><span class="line">);</span><br></pre></td></tr></table></figure>2)已有表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> tabe 表名 <span class="keyword">add</span> primary <span class="keyword">key</span>(<span class="keyword">id</span>);</span><br></pre></td></tr></table></figure></li><li>特点: 一张表只能有一个主键约束，但是我们可以设置联合主键(多个字段)</li><li>自增器<br>1)创建表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> priamry <span class="keyword">key</span> auto_increment, ...</span><br><span class="line">...</span><br><span class="line">);</span><br></pre></td></tr></table></figure>2)特点:自增器起始值为1，可以手动指定<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 auto_increment=起始值;</span><br></pre></td></tr></table></figure></li><li>删除主键约束<br>语法:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> primary <span class="keyword">key</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1)先移出自增器</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu3 <span class="keyword">modify</span> <span class="keyword">id</span> <span class="built_in">int</span>;</span><br><span class="line"><span class="comment"># 2)才能删除主键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> stu3 <span class="keyword">drop</span> primary <span class="keyword">key</span>;</span><br><span class="line"><span class="comment"># 解释:因为只有主键约束才有意义设置自增器...(保证唯一性....)</span></span><br></pre></td></tr></table></figure></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 主键约束</span></span><br><span class="line"><span class="comment">-- 给student表添加主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>);</span><br><span class="line"><span class="comment">-- 创建表时指定主键约束 </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stu1(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 插入数据测试</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu1 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="comment">-- Duplicate entry '1' for key 'PRIMARY' 错误:主键不能重复 </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu1 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'lucy'</span>);</span><br><span class="line"><span class="comment">-- Column 'id' cannot be null 错误:主键不能为空</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu1 <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'lucy'</span>);</span><br><span class="line"><span class="comment">-- 我想让name字段，也作为主键使用...</span></span><br><span class="line"><span class="comment">-- Multiple primary key defined -- 错误:主键被重复定义了 </span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu1 <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(<span class="string">`name`</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 联合主键(主键字段完全相同，在进行约束的限定) CREATE TABLE stu2(</span></span><br><span class="line">id INT ,</span><br><span class="line">`name` VARCHAR(32), </span><br><span class="line">PRIMARY KEY(id,`name`)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 插入数据测试</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu2 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu2 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'lucy'</span>);</span><br><span class="line"><span class="comment">-- Duplicate entry '1-lucy' for key 'PRIMARY' 错误 </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu2 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'lucy'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 自增器</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stu3(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 插入数据测试</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'jack'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'jack'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">'jack'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'jack'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="number">10</span>,<span class="string">'jack'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="comment">-- 设置自增器起始值</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu3 AUTO_INCREMENT=<span class="number">1000</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'jack'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- delete(橡皮擦) 和 truncat(撕纸) 区别 </span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> stu3;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> stu3;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu3 <span class="keyword">VALUES</span>(<span class="literal">NULL</span>,<span class="string">'jack'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1)先移出自增器</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu3 <span class="keyword">MODIFY</span> <span class="keyword">id</span> <span class="built_in">INT</span>;</span><br><span class="line"><span class="comment">-- 2)才能删除主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu3 <span class="keyword">DROP</span> PRIMARY <span class="keyword">KEY</span>;</span><br></pre></td></tr></table></figure><h5 id="2-2-2-唯一约束"><a href="#2-2-2-唯一约束" class="headerlink" title="2.2.2 唯一约束"></a>2.2.2 唯一约束</h5><ul><li>作用:限定某一列的值不能重复，可以出现多个null</li></ul><ol><li>创建表时设置唯一约束 </li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">列名 数据类型 <span class="keyword">unique</span>, ...</span><br><span class="line">...</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 唯一约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stu4(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">UNIQUE</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu4 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="comment">-- Duplicate entry 'jack' for key 'name' 错误:名称重复了 </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu4 <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu4 <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu4 <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除唯一约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu4 <span class="keyword">DROP</span> <span class="keyword">INDEX</span> <span class="keyword">name</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表后添加唯一约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu4 <span class="keyword">MODIFY</span> <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">UNIQUE</span> ;</span><br></pre></td></tr></table></figure><h5 id="2-2-3-非空约束"><a href="#2-2-3-非空约束" class="headerlink" title="2.2.3 非空约束"></a>2.2.3 非空约束</h5><ul><li>作用:限定某一列的值不能为null</li></ul><ol><li>创建表时设置非空约束 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">列名 数据类型 <span class="keyword">not</span> <span class="literal">null</span>,<span class="comment">-- 非空约束</span></span><br><span class="line">列名 数据类型 <span class="keyword">unique</span> <span class="keyword">not</span> <span class="literal">null</span>,<span class="comment">-- (唯一+非空)</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ol><p><strong>注意:</strong>唯一 + 非空 != 主键，主键约束一张表只能有一个，唯一+非空 设置多个</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 唯一+非空</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stu5(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu5 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="comment">-- Column 'name' cannot be null 错误:名称不能为空 </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu5 <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 移除非空约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu5 <span class="keyword">MODIFY</span> <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>);</span><br><span class="line"><span class="comment">-- 恢复</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> stu5 <span class="keyword">MODIFY</span> <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><h5 id="2-2-4-默认值"><a href="#2-2-4-默认值" class="headerlink" title="2.2.4 默认值"></a>2.2.4 默认值</h5><ol><li>创建表设置默认值</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">列名 数据类型 <span class="keyword">default</span> 默认值, ...</span><br><span class="line">...</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 默认值</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> stu6(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">sex <span class="built_in">VARCHAR</span>(<span class="number">5</span>) <span class="keyword">DEFAULT</span> <span class="string">'男'</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu6(<span class="keyword">id</span>,<span class="string">`name`</span>) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'小张'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu6(<span class="keyword">id</span>,<span class="string">`name`</span>,sex) <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'小刘'</span>,<span class="string">'女'</span>); <span class="comment">-- 因为我们指定了默认值为男，你再插入null，会把默认值覆盖... </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> stu6 <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">'小王'</span>,<span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure><h1 id="三-表关系"><a href="#三-表关系" class="headerlink" title="三.表关系"></a>三.表关系</h1><h4 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h4><ul><li>简称:关系型数据库(Relation DBMS)</li></ul><h4 id="3-2-实现"><a href="#3-2-实现" class="headerlink" title="3.2 实现"></a>3.2 实现</h4><h5 id="3-2-1-一对多"><a href="#3-2-1-一对多" class="headerlink" title="3.2.1 一对多"></a>3.2.1 一对多</h5><ul><li>在多的一方建立外键，指向一的一方的主键 </li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建新库</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> day19_pro; <span class="keyword">USE</span> day19_pro;</span><br><span class="line"><span class="comment">-- 一对多</span></span><br><span class="line"><span class="comment">-- 班级表(主表) </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">class</span>(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span> <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'java一班'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">class</span> <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'java二班'</span>);</span><br><span class="line"><span class="comment">-- 学生表(从表) </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">class_id <span class="built_in">INT</span> <span class="comment">-- 外键字段</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'流川枫'</span>,<span class="number">1</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'樱木花道'</span>,<span class="number">1</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">'大猩猩'</span>,<span class="number">2</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">'赤木晴子'</span>,<span class="number">2</span>);</span><br><span class="line"><span class="comment">-- 通过班级找学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> class_id =<span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 通过学生找班级</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">class</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 给学生表添加外键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> class_id_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(class_id) <span class="keyword">REFERENCES</span> <span class="keyword">class</span>(<span class="keyword">id</span>);</span><br><span class="line"><span class="comment">-- 删除学生表的外键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> class_id_fk;</span><br></pre></td></tr></table></figure><h5 id="3-2-2-多对多"><a href="#3-2-2-多对多" class="headerlink" title="3.2.2 多对多"></a>3.2.2 多对多</h5><ul><li>多对多关系实现需要借助第三张表。中间表至少包含2个字段，这两个字段作为第三张表的外键，分别指向两张表的主键</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 多对多</span></span><br><span class="line"><span class="comment">-- 课程表(主表) </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> course(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'java'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'ui'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">'美容美发'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> course <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">'挖掘机'</span>); </span><br><span class="line"><span class="comment">-- 中间表(从表)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> sc(</span><br><span class="line">  s_id <span class="built_in">INT</span>,</span><br><span class="line">  c_id <span class="built_in">INT</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span>(s_id,c_id)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sc <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sc <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sc <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sc <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">-- 联合主键，可以帮我们校验重复选修问题 </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sc <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="comment">-- 给中间表增加外键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> sc <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> s_id_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(s_id) <span class="keyword">REFERENCES</span> student(<span class="keyword">id</span>); </span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> sc <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> c_id_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(c_id) <span class="keyword">REFERENCES</span> course(<span class="keyword">id</span>);</span><br><span class="line"><span class="comment">-- 流川枫不能选修，不存在的课程 </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> sc <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">6</span>);</span><br></pre></td></tr></table></figure><h5 id="3-2-3-一对一"><a href="#3-2-3-一对一" class="headerlink" title="3.2.3 一对一"></a>3.2.3 一对一</h5><ul><li>一对一关系实现，可以在任意一方添加唯一外键指向另一方的主键</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 一对一</span></span><br><span class="line"><span class="comment">-- 公司表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> company(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, </span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> company <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'拼多多'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> company <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'传智播客'</span>); </span><br><span class="line"><span class="comment">-- 地址表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> address(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT, <span class="comment">-- 同时也作为外键 </span></span><br><span class="line"><span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> id_fk <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(<span class="keyword">id</span>) <span class="keyword">REFERENCES</span> company(<span class="keyword">id</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> address <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'上海'</span>); </span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> address <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">'江苏沭阳'</span>);</span><br></pre></td></tr></table></figure><h4 id="3-3-外键约束"><a href="#3-3-外键约束" class="headerlink" title="3.3 外键约束"></a>3.3 外键约束</h4><ul><li>作用:限定二张表有关系的数据，保证数据的正确性、有效性和完整性</li></ul><ol><li>在从表中添加外键约束<br>1)创建表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名( 列名 数据类型,</span><br><span class="line">[<span class="keyword">constraint</span>] [约束名] <span class="keyword">foreign</span> <span class="keyword">key</span>(外键列) <span class="keyword">references</span> 主表(主键) );</span><br></pre></td></tr></table></figure>2)已有表<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> [<span class="keyword">constraint</span>] [约束名] <span class="keyword">foreign</span> <span class="keyword">key</span>(外键列) <span class="keyword">references</span> 主表(主键);</span><br></pre></td></tr></table></figure></li><li>外键约束特点<br>1)主表不能删除从表已引用的数据<br>2)从表不能添加主表未拥有的数据<br>3)先添加主表数据再添加从表数据<br>4)先删除从表数据再删除主表数据<br>5)外键约束允许为空但不能是错的</li><li>删除外键约束<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">foreign</span> <span class="keyword">key</span> 约束名;</span><br></pre></td></tr></table></figure></li></ol><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="dql单表高级查询"><a href="#dql单表高级查询" class="headerlink" title="dql单表高级查询"></a>dql单表高级查询</h2><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><ul><li><p>select … from 表名 order by 排序列 [asc | desc]</p><ul><li>asc 升序 默认值</li><li>desc 降序</li></ul></li></ul><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><ul><li><p>count</p><ul><li>count(*) ，统计包含null数据</li></ul></li><li><p>max</p></li><li><p>min</p></li><li><p>sum</p></li><li><p>avg</p></li></ul><h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><ul><li><p>select 分组 表名 group by 分组 having 分组后条件</p><ul><li>where在分组前条件过滤，不能使用聚合函数</li><li>having在分组后条件过滤，可以使用聚合函数</li></ul></li></ul><h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><ul><li><p>select … from 表名 limit 开始索引,每页显示个数</p></li><li><p>索引公式：</p><ul><li>索引= （当前页-1）× 每页显示个数</li></ul></li></ul><h2 id="数据库约束"><a href="#数据库约束" class="headerlink" title="数据库约束"></a>数据库约束</h2><h3 id="对数据进一步限定，保证数据的正确性，有效性和完整性"><a href="#对数据进一步限定，保证数据的正确性，有效性和完整性" class="headerlink" title="对数据进一步限定，保证数据的正确性，有效性和完整性"></a>对数据进一步限定，保证数据的正确性，有效性和完整性</h3><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><ul><li><p>1）主键</p><ul><li><p>primary key</p><ul><li>给每一条记录增加唯一标识，非空且唯一</li></ul></li></ul></li><li><p>2）唯一</p><ul><li>unique</li></ul></li><li><p>3）非空</p><ul><li>not null</li></ul></li><li><p>4）默认值</p><ul><li>default</li></ul></li><li><p>5）外键</p><ul><li>foreign key</li></ul></li></ul><h3 id="创建表时候设置主键约束"><a href="#创建表时候设置主键约束" class="headerlink" title="创建表时候设置主键约束"></a>创建表时候设置主键约束</h3><p>create table 表名(</p><p>  id int primary key auto_increment,</p><p>  …</p><p>  ..</p><p>);</p><h2 id="表关系"><a href="#表关系" class="headerlink" title="表关系"></a>表关系</h2><h3 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h3><ul><li><p>应用场景</p><ul><li>班级和学生</li><li>部门和员工</li></ul></li><li><p>实例</p><ul><li>一个班级下面有多名学生，多名学生属于同一个班级</li></ul></li><li><p>建表原则</p><ul><li>在从表中添加一个字段（列），字段名（主表名_id）类型与主表的主键一致，这个字段称为外键，通过外键指向主表的主键，建立关联关系<h3 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h3></li></ul></li><li><p>应用场景</p><ul><li>老师和学生</li><li>学生和课程</li></ul></li><li><p>实例</p><ul><li>一个学生可以选修多门课程，一门课程可以被多个学生选修</li></ul></li><li><p>建表原则</p><ul><li>多对多其实由二个一对多组成</li><li>需要借助于第三张表（中间表），需要有二个外键字段分别指向各自的主键，通常还会作为联合主键<h3 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h3></li></ul></li><li><p>应用场景</p><ul><li>公民和身份证号</li><li>公司和注册地</li></ul></li><li><p>实例</p><ul><li>一个公民只能有一个身份证号，一个身份证号只能属于一个公民</li></ul></li><li><p>建表原则</p><ul><li>主键是外键</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;DQL高级查询&lt;/li&gt;
&lt;li&gt;数据库约束&lt;/li&gt;
&lt;li&gt;表关系
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（四十三）</title>
    <link href="http://yoursite.com/2020/04/27/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%B8%89%EF%BC%89/"/>
    <id>http://yoursite.com/2020/04/27/就业班学习笔记（四十三）/</id>
    <published>2020-04-27T01:00:42.000Z</published>
    <updated>2020-05-03T18:31:38.726Z</updated>
    
    <content type="html"><![CDATA[<ul><li>SQL使用与基础操作<a id="more"></a></li></ul><h1 id="一-数据库介绍"><a href="#一-数据库介绍" class="headerlink" title="一.数据库介绍"></a>一.数据库介绍</h1><h4 id="1-1-什么是数据库"><a href="#1-1-什么是数据库" class="headerlink" title="1.1 什么是数据库"></a>1.1 什么是数据库</h4><p>存储数据的仓库,本质上就是存储数据的文件系统，方便我们管理数据。</p><h4 id="1-2-数据库管理系统"><a href="#1-2-数据库管理系统" class="headerlink" title="1.2 数据库管理系统"></a>1.2 数据库管理系统</h4><ul><li>数据库管理系统(DataBase Management System，DBMS):指一种操作和管理数据库的大型软件。 </li><li>数据库管理系统—&gt;MySQL软件–&gt;多个仓库—&gt;多张表—&gt;多条记录(数据)<h4 id="1-3-实体-java类-和表关系"><a href="#1-3-实体-java类-和表关系" class="headerlink" title="1.3 实体(java类)和表关系"></a>1.3 实体(java类)和表关系</h4></li><li>一个实体对应一张表</li><li>一个对象对应一条记录</li><li>对象和记录产生映射关系【ORM: Object Relational Mapping】</li></ul><h4 id="1-4-常见关系型数据库"><a href="#1-4-常见关系型数据库" class="headerlink" title="1.4 常见关系型数据库"></a>1.4 常见关系型数据库</h4><p>MySQL,Oracle,DB2,MSSQL,SQLite</p><h1 id="二-MySQL的使用"><a href="#二-MySQL的使用" class="headerlink" title="二.MySQL的使用"></a>二.MySQL的使用</h1><h4 id="2-1-配置"><a href="#2-1-配置" class="headerlink" title="2.1 配置"></a>2.1 配置</h4><table><thead><tr><th>操作</th><th>本地登录</th><th>指定ip</th></tr></thead><tbody><tr><td>登录</td><td>mysql -u用户名 -p密码</td><td>mysql -h主机地址 -u用户名 -p密码</td></tr><tr><td>退出</td><td>exit<br>quit</td><td>exit<br>quit</td></tr></tbody></table><h1 id="三-SQL"><a href="#三-SQL" class="headerlink" title="三.SQL"></a>三.SQL</h1><h4 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h4><h5 id="3-1-1-什么是SQL"><a href="#3-1-1-什么是SQL" class="headerlink" title="3.1.1 什么是SQL?"></a>3.1.1 什么是SQL?</h5><ul><li>结构化查询语言(Structured Query Language) </li><li>通过sql语句来操作数据，实现对记录的增删改查<blockquote><p>【CRUD】:create 创建、retrieve(read) 检索、update 修改、delete 删除</p></blockquote></li></ul><h5 id="3-1-2-SQL方言"><a href="#3-1-2-SQL方言" class="headerlink" title="3.1.2 SQL方言"></a>3.1.2 SQL方言</h5><p>SQL是一套标准，所有的数据库厂商都实现了此标准;但是各自厂商在此标准上增加了特有的语句，这部分内容我们称为方言。</p><h5 id="3-1-3-SQL书写规范"><a href="#3-1-3-SQL书写规范" class="headerlink" title="3.1.3 SQL书写规范"></a>3.1.3 SQL书写规范</h5><ul><li>sql语句可以单行或多行书写，最后以分号结尾</li><li>sql语句(在windows平台下)不区分大小写，建议关键字大写<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student;</span><br></pre></td></tr></table></figure></li><li>注释</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">单行</span><br><span class="line"><span class="comment">-- 所有数据库厂商支持</span></span><br><span class="line"><span class="comment"># 仅mysql厂商支持(方言)</span></span><br><span class="line">多行</span><br><span class="line"><span class="comment">/* 注释内容 */</span></span><br></pre></td></tr></table></figure><h5 id="3-1-4-SQL分类"><a href="#3-1-4-SQL分类" class="headerlink" title="3.1.4 SQL分类"></a>3.1.4 SQL分类</h5><table><thead><tr><th>类别</th><th>说明</th></tr></thead><tbody><tr><td>DDL(Data Definition Language)数据定义语言</td><td>用来定义数据库对象:数据库，表，列等。关键字:create,drop,alter等</td></tr><tr><td>DML(Data Manipulation Language)数据操作语言</td><td>用来对数据库中表的数据进行增删改。关键字:insert,delete, update等</td></tr><tr><td>DQL(Data Query Language) 数据查询语言</td><td>用来查询数据库中表的记录(数据)。关键字:select, where等</td></tr><tr><td>DCL(Data Control Language)数据控制语言</td><td>用来定义数据库的访问权限和安全级别，及创建用户。关键字:grant,revoke等</td></tr><tr><td>TCL(Transaction Control Language) 事务控制语言</td><td>用于控制数据库的事务操作，关键字; commit,savepoint,rollback等</td></tr></tbody></table><h1 id="四-SQL基础操作"><a href="#四-SQL基础操作" class="headerlink" title="四.SQL基础操作"></a>四.SQL基础操作</h1><h4 id="4-1-DDL"><a href="#4-1-DDL" class="headerlink" title="4.1 DDL"></a>4.1 DDL</h4><h5 id="4-1-1-操作数据库"><a href="#4-1-1-操作数据库" class="headerlink" title="4.1.1 操作数据库"></a>4.1.1 操作数据库</h5><ul><li><p>C:创建</p><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>直接创建数据库</td><td>create database 数据库名;</td><td>create database day18;</td></tr><tr><td>创建数据库并指定字符</td><td>create database 数据库 charset 字符集;</td><td>create database day18_1 charset gbk;</td></tr></tbody></table></li><li><p>R:查询</p><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>查看所有数据库</td><td>show databases;</td><td></td></tr><tr><td>查看建库语句</td><td>show create database 数据库名;</td><td>show create database day18_1;</td></tr></tbody></table></li></ul><ul><li><p>U:修改</p><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>修改数据库字符集</td><td>alter database 数据库名 charset 新字符集;</td><td>alter database day18_1 charset utf8;</td></tr></tbody></table></li><li><p>D:删除</p><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>直接删除数据库</td><td>drop database 数据库名;</td><td>drop database day18_1;</td></tr></tbody></table></li><li><p>使用数据库</p><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>进入/切换某一个具体的数据库</td><td>use 数据库名;</td><td>use day18;</td></tr><tr><td>查看当前所在哪个数据库中</td><td>select database();</td><td></td></tr></tbody></table></li></ul><h5 id="4-1-2-操作表"><a href="#4-1-2-操作表" class="headerlink" title="4.1.2 操作表"></a>4.1.2 操作表</h5><ul><li><p>C:创建</p><blockquote></blockquote><table><thead><tr><th></th><th>创建表</th></tr></thead><tbody><tr><td>语法</td><td>create table 表名(<br>列名(字段名) 数据类型,<br>列名(字段名) 数据类型,<br>列名(字段名) 数据类型,<br>…);</td></tr><tr><td>实例</td><td>create table student(<br>id int,<br>name varchar(32),<br>birthday date<br>);</td></tr></tbody></table><blockquote></blockquote><h6 id="常用数据类型"><a href="#常用数据类型" class="headerlink" title="常用数据类型"></a>常用数据类型</h6><blockquote></blockquote><table><thead><tr><th>类别</th><th>概述</th><th>说明</th></tr></thead><tbody><tr><td>int</td><td>整型</td><td></td></tr><tr><td>float</td><td>浮点型</td><td></td></tr><tr><td>double</td><td>浮点型</td><td></td></tr><tr><td>decimal</td><td>浮点型(保留精准度)</td><td>decimal(m,n) 指定范围<br> m 总长度<br>n 小数长度</td></tr><tr><td>varchar</td><td>字符型</td><td>varchar(n) 指定容纳多少个字符<br> 1~65535 包含字母，符号，汉字</td></tr><tr><td>text</td><td>文本型</td><td></td></tr><tr><td>date</td><td>日期类型</td><td></td></tr><tr><td>datetime</td><td>日期时间类型</td><td></td></tr></tbody></table><blockquote></blockquote><h6 id="克隆表-创建表表时，可以快速指定另一张表的结构"><a href="#克隆表-创建表表时，可以快速指定另一张表的结构" class="headerlink" title="克隆表:创建表表时，可以快速指定另一张表的结构"></a>克隆表:创建表表时，可以快速指定另一张表的结构</h6><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>克隆表</td><td>create table 新表 like 旧表;</td><td>create table teacher like student;</td></tr></tbody></table></li><li><p>R:查询</p><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>查看所有表</td><td>show tables;</td><td></td></tr><tr><td>查看建表语句</td><td>show create table 表名;</td><td>show create table teacher;</td></tr><tr><td>查看表结构</td><td>desc 表名;</td><td>desc teacher;</td></tr></tbody></table></li><li><p>U:修改</p><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>添加一列</td><td>alter table 表名 add 列名 数据类型;</td><td>alter table teacher add jieshao varchar(50);</td></tr><tr><td>修改列类型</td><td>alter table 表名 modify 列名 新类型;</td><td>alter table teacher modify jieshao varchar(99);</td></tr><tr><td>修改列名和类型</td><td>alter table 表名 change 旧列名 新列名 新类型;</td><td>alter table teacher change jieshao intro varchar(999);</td></tr><tr><td>删除指定列</td><td>alter table 表名 drop 列名;</td><td>alter table teacher drop intro;</td></tr><tr><td>修改表字符集</td><td>alter table 表名 charset 字符集;</td><td>alter table teacher charset gbk;</td></tr><tr><td>修改表名</td><td>rename table 旧表名 to 新表名;</td><td>rename table teacher to tch;</td></tr></tbody></table></li><li><p>D:删除</p><blockquote></blockquote><table><thead><tr><th></th><th>语法:</th><th>实例</th></tr></thead><tbody><tr><td>直接删除表</td><td>drop table 表名;</td><td>drop table tch;</td></tr></tbody></table></li></ul><h4 id="4-2-DML"><a href="#4-2-DML" class="headerlink" title="4.2 DML"></a>4.2 DML</h4><h5 id="4-2-1-添加记录"><a href="#4-2-1-添加记录" class="headerlink" title="4.2.1 添加记录"></a>4.2.1 添加记录</h5><blockquote></blockquote><table><thead><tr><th></th><th>添加记录</th></tr></thead><tbody><tr><td>语法</td><td>insert into 表名(列名1,列名2…)values(值1,值2….);  <br>insert into 表名 values(值1,值2….);</td></tr><tr><td>要求</td><td>与表结构顺序一致，个数相等</td></tr><tr><td>查看</td><td>desc 表名</td></tr></tbody></table><ul><li><p>注意:<br>列名和值的数据类型要对应 字符串类型可以使用单双引号，推荐单引号 字符串可以插入一切(任意)类型，MySQL底层实现了隐式转换 个别列名字段名如果跟关键字冲突了，我们可以使用反引号包裹起来<br>例如:<code>name</code></p></li><li><p>练习</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(<span class="keyword">id</span>,<span class="keyword">name</span>)<span class="keyword">values</span>(<span class="number">1</span>,<span class="string">'jack'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">'杰克马'</span>,<span class="literal">null</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(<span class="keyword">id</span>,<span class="keyword">name</span>,birthday)<span class="keyword">values</span>(<span class="string">'2'</span>,<span class="string">'tom'</span>,<span class="string">'1940-2-10'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">'刘强东'</span>,<span class="string">'1973-1-1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 补充:同时添加多条记录</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">5</span>,<span class="string">'王健林'</span>,<span class="literal">null</span>),(<span class="number">6</span>,<span class="string">'撒贝宁'</span>,<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><h6 id="蠕虫复制"><a href="#蠕虫复制" class="headerlink" title="蠕虫复制"></a>蠕虫复制</h6><ul><li>作用:将一张表的记录，快速复制到另外一张表</li><li>应用场景:数据的迁移</li><li>需求:创建一张stu新表，表结构与student一致，实现数据的快速迁移 * 要求:二张表结构相同</li><li>步骤 <blockquote><p>克隆表</p><pre><code>create table stu  like student;</code></pre><p>数据迁移</p><pre><code>insert into stu select * from student;</code></pre></blockquote><h5 id="4-2-2-修改记录"><a href="#4-2-2-修改记录" class="headerlink" title="4.2.2 修改记录"></a>4.2.2 修改记录</h5><blockquote></blockquote><table><thead><tr><th></th><th>修改记录</th></tr></thead><tbody><tr><td>语法</td><td>update 表名 set 列名1=新值1,列名2=新值2…. [where条件]</td></tr><tr><td>解释</td><td>[] 里面的内容可以省略</td></tr><tr><td>实例</td><td>update stu set birthday=’1960-1-1’;<br> update stu set birthday=’2000-1-1’ where id = 4;</td></tr></tbody></table></li></ul><h5 id="4-2-3-删除记录"><a href="#4-2-3-删除记录" class="headerlink" title="4.2.3 删除记录"></a>4.2.3 删除记录</h5><table><thead><tr><th></th><th>删除记录</th><th>摧毁表，重构表</th></tr></thead><tbody><tr><td>语法</td><td>delete from 表名 [where条件]</td><td>runcate table 表名;</td></tr><tr><td>解释</td><td>[] 里面的内容可以省略</td><td>先把表删除，再创建一个相同结构的新表</td></tr><tr><td>实例</td><td>delete from stu;<br> delete from student where id = 5;</td><td>truncate table student;</td></tr></tbody></table><h5 id="4-2-4-知识小结"><a href="#4-2-4-知识小结" class="headerlink" title="4.2.4 知识小结"></a>4.2.4 知识小结</h5><ul><li>新增:insert into 表名 </li><li>修改:update 表名 </li><li>删除:delete from 表名</li></ul><h4 id="4-3-DQL简单查询-检索"><a href="#4-3-DQL简单查询-检索" class="headerlink" title="4.3 DQL简单查询(检索)"></a>4.3 DQL简单查询(检索)</h4><ul><li>导入数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student1(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    chinese <span class="keyword">double</span>,</span><br><span class="line">    english <span class="keyword">double</span>,</span><br><span class="line">    math <span class="keyword">double</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 插入记录</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">'tom'</span>,<span class="number">89</span>,<span class="number">78</span>,<span class="number">90</span>); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">'jack'</span>,<span class="number">67</span>,<span class="number">98</span>,<span class="number">56</span>); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">'jerry'</span>,<span class="number">87</span>,<span class="number">78</span>,<span class="number">77</span>); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">'lucy'</span>,<span class="number">88</span>,<span class="literal">NULL</span>,<span class="number">90</span>); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">5</span>,<span class="string">'james'</span>,<span class="number">82</span>,<span class="number">84</span>,<span class="number">77</span>); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">6</span>,<span class="string">'jack'</span>,<span class="number">55</span>,<span class="number">85</span>,<span class="number">45</span>); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student1(<span class="keyword">id</span>,<span class="keyword">name</span>,chinese,english,math) <span class="keyword">values</span>(<span class="number">7</span>,<span class="string">'tom'</span>,<span class="number">89</span>,<span class="number">65</span>,<span class="number">30</span>);</span><br></pre></td></tr></table></figure><ul><li>语法<blockquote></blockquote></li></ul><p><strong>查询结果进行运算，不会影响原表中的记录</strong>  </p><blockquote></blockquote><table><thead><tr><th></th><th>语法</th></tr></thead><tbody><tr><td>格式</td><td>select * from 表名;<br>  select 指定列名1,指定列名2…. from 表名;</td></tr><tr><td>去重关键字</td><td>select distinct 列名 from 表名;<br> 注意:多个列去重，要求内容完全一致</td></tr><tr><td>null参与数学运算结果还是null</td><td>ifnull()函数<br>ifnull(列名,默认值)如果该列有值，直接返回，如果为null返回默认值</td></tr><tr><td>设置查询别名</td><td>select 列名 [as] 列别名 from 表名 [as] 表别名</td></tr></tbody></table><ul><li>练习</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询表中所有学生的信息</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 查询表中所有学生的姓名和对应的语文成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>,chinese <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 查询表中学生姓名(去重)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="string">`name`</span> <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="string">`name`</span>,chinese <span class="keyword">FROM</span> student1; </span><br><span class="line"><span class="comment">-- 在所有学生数学分数上加10分特长分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>,math+<span class="number">10</span> <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 统计每个学生的总分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>, chinese+english+math <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="keyword">SELECT</span> english <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IFNULL</span>(english,<span class="number">0</span>) <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 解决null值的问题</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span>, chinese+<span class="keyword">IFNULL</span>(english,<span class="number">0</span>)+math <span class="keyword">FROM</span> student1;</span><br><span class="line"><span class="comment">-- 使用别名表示学生总分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`name`</span> <span class="keyword">AS</span> 姓名, (chinese+<span class="keyword">IFNULL</span>(english,<span class="number">0</span>)+math) <span class="keyword">AS</span> 总分 <span class="keyword">FROM</span> student1 <span class="keyword">AS</span> stu1;</span><br></pre></td></tr></table></figure><h4 id="DQL条件查询"><a href="#DQL条件查询" class="headerlink" title="DQL条件查询"></a>DQL条件查询</h4><ul><li>导入数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student2 (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">int</span>,</span><br><span class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">  age <span class="built_in">int</span>,</span><br><span class="line">  sex <span class="built_in">varchar</span>(<span class="number">5</span>),</span><br><span class="line">  address <span class="built_in">varchar</span>(<span class="number">100</span>),</span><br><span class="line">  math <span class="built_in">int</span>,</span><br><span class="line">  english <span class="built_in">int</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 插入记录</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student2(<span class="keyword">id</span>,<span class="keyword">NAME</span>,age,sex,address,math,english) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="number">1</span>,<span class="string">'马云'</span>,<span class="number">55</span>,<span class="string">'男'</span>,<span class="string">'杭州'</span>,<span class="number">66</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">'马化腾'</span>,<span class="number">45</span>,<span class="string">'女'</span>,<span class="string">'深圳'</span>,<span class="number">98</span>,<span class="number">87</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">'马景涛'</span>,<span class="number">55</span>,<span class="string">'男'</span>,<span class="string">'香港'</span>,<span class="number">56</span>,<span class="number">77</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="string">'柳岩'</span>,<span class="number">20</span>,<span class="string">'女'</span>,<span class="string">'湖南'</span>,<span class="number">76</span>,<span class="number">65</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="string">'柳青'</span>,<span class="number">20</span>,<span class="string">'男'</span>,<span class="string">'湖南'</span>,<span class="number">86</span>,<span class="literal">NULL</span>),</span><br><span class="line">(<span class="number">6</span>,<span class="string">'刘德华'</span>,<span class="number">57</span>,<span class="string">'男'</span>,<span class="string">'香港'</span>,<span class="number">99</span>,<span class="number">99</span>),</span><br><span class="line">(<span class="number">7</span>,<span class="string">'马德'</span>,<span class="number">22</span>,<span class="string">'女'</span>,<span class="string">'香港'</span>,<span class="number">99</span>,<span class="number">99</span>),</span><br><span class="line">(<span class="number">8</span>,<span class="string">'德玛西亚'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="string">'南京'</span>,<span class="number">56</span>,<span class="number">65</span>);</span><br></pre></td></tr></table></figure><ul><li><p>语法</p><blockquote></blockquote><table><thead><tr><th></th><th>语法</th></tr></thead><tbody><tr><td>格式</td><td>select … from 表名 where 条件;</td></tr><tr><td>关系(比较)运算符</td><td>&gt; &lt; &gt;= &lt;= != =</td></tr><tr><td>逻辑运算符</td><td>&amp;&amp; and(条件同时成功)<br> &#124;&#124; or(条件满足一个) <br>! not(条件取反)</td></tr><tr><td>in关键字(某一个列，查询多个值)</td><td>select … from 表名 where 列名 in(值1,值2,值3…..);</td></tr><tr><td>between关键字(范围查询)</td><td>select … from 表名 where 列名 between 较小的值 and 较大的值;<br>特点:包头包尾</td></tr><tr><td>null值处理</td><td>is null 函数<br>  is not null 函数</td></tr><tr><td>like关键字(模糊匹配)</td><td>select … from 表名 where 列名 like ‘通配符字符串’;<br>_ 单个任意字符 <br> % 多个任意字符</td></tr></tbody></table></li><li><p>练习</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关系运算符</span></span><br><span class="line"><span class="comment">-- 查询math分数大于80分的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> math &gt; <span class="number">80</span>;</span><br><span class="line"><span class="comment">-- 查询english分数小于或等于80分的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english &lt;= <span class="number">80</span>; </span><br><span class="line"><span class="comment">-- 查询age等于20岁的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age = <span class="number">20</span>;</span><br><span class="line"><span class="comment">-- 查询age不等于20岁的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age != <span class="number">20</span>;</span><br><span class="line"><span class="comment"># 逻辑运算符</span></span><br><span class="line"><span class="comment">-- 查询age大于35且性别为男的学生(两个条件同时满足)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt; <span class="number">35</span> <span class="keyword">AND</span> sex = <span class="string">'男'</span>;</span><br><span class="line"><span class="comment">-- 查询age大于35或性别为男的学生(两个条件其中一个满足)</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> age &gt; <span class="number">35</span> <span class="keyword">OR</span> sex = <span class="string">'男'</span>;</span><br><span class="line"><span class="comment">-- 查询id是1或3或5的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">OR</span> <span class="keyword">id</span> =<span class="number">3</span> <span class="keyword">OR</span> <span class="keyword">id</span> = <span class="number">5</span>;</span><br><span class="line"><span class="comment">-- in关键字</span></span><br><span class="line"><span class="comment">-- 再次查询id是1或3或5的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">IN</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line"><span class="comment">-- 查询id不是1或3或5的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="keyword">id</span> <span class="keyword">NOT</span> <span class="keyword">IN</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line"><span class="comment">-- 查询english成绩大于等于77，且小于等于87的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english &gt;=<span class="number">77</span> <span class="keyword">AND</span> english &lt;=<span class="number">87</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english <span class="keyword">BETWEEN</span> <span class="number">77</span> <span class="keyword">AND</span> <span class="number">87</span>;</span><br><span class="line"><span class="comment">-- 查询英语成绩为null的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english = <span class="literal">NULL</span>; </span><br><span class="line"><span class="comment">-- null这哥们六亲不认... </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> english <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment"># like模糊匹配</span></span><br><span class="line"><span class="comment">-- 查询姓马的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">LIKE</span> <span class="string">'马%'</span>;</span><br><span class="line"><span class="comment">-- 查询姓名中包含'德'字的学生 </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">LIKE</span> <span class="string">'%德%'</span>;</span><br><span class="line"><span class="comment">-- 查询姓马，且姓名有三个字的学生 </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student2 <span class="keyword">WHERE</span>  <span class="string">`name`</span> <span class="keyword">LIKE</span> <span class="string">'马__'</span>;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="数据库介绍"><a href="#数据库介绍" class="headerlink" title="数据库介绍"></a>数据库介绍</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li><p>本质就是存储数据库的仓库，就是文件系统，方便管理数据</p></li><li><p>DBMS（数据库管理系统）</p><ul><li><p>MySQL软件</p><ul><li><p>多个仓库</p><ul><li><p>多张表</p><ul><li>多条记录（数据）</li></ul></li></ul></li></ul></li></ul></li><li><p>实体和表关系</p><ul><li>一个实体对应张表</li><li>一个对象对应一条记录</li></ul></li><li><p>常见关系型数据库</p><ul><li>MySQL</li><li>Oracle</li></ul></li></ul><h2 id="数据库安装和使用"><a href="#数据库安装和使用" class="headerlink" title="数据库安装和使用"></a>数据库安装和使用</h2><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><ul><li><p>直接登录本机</p><ul><li>mysql -u用户名 -p</li></ul></li><li><p>远程指定ip</p><ul><li>mysql -h主机名 -u用户名 -p密码</li></ul></li></ul><h3 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h3><ul><li>exit</li><li>quit</li></ul><h2 id="sql介绍"><a href="#sql介绍" class="headerlink" title="sql介绍"></a>sql介绍</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><ul><li><p>结构化查询语言，通过sql语句可以实现对数据库的基础操作【CRUD】</p><ul><li>create 创建</li><li>retrieve 检索</li><li>update 更新</li><li>delete 删除</li></ul></li></ul><h3 id="方言"><a href="#方言" class="headerlink" title="方言"></a>方言</h3><ul><li><p>sql是一套标准，所有的数据库厂商都实现了这套标准，但各自厂商在这套标准上增加自己的特有语句，这部分就称为方言</p><ul><li>例如：mysql注释 #</li></ul></li></ul><h3 id="sql分类"><a href="#sql分类" class="headerlink" title="sql分类"></a>sql分类</h3><ul><li><p>DDL</p><ul><li><p>操作数据库和表</p><ul><li>create</li><li>alter</li><li>drop</li></ul></li></ul></li><li><p>DML</p><ul><li><p>操作记录的增删改</p><ul><li>insert</li><li>update</li><li>delete</li></ul></li></ul></li><li><p>DQL</p><ul><li><p>操作记录的查询</p><ul><li>select</li></ul></li></ul></li><li><p>DCL</p><ul><li>操作用户的权限</li></ul></li><li><p>TCL</p><ul><li>操作数据的事务安全</li></ul></li></ul><h1 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h1><h3 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h3><ul><li><p>操作数据库</p><ul><li>create database 数据库名;</li><li>show databases;</li><li>drop database 数据库名;</li><li>use 数据库名;</li></ul></li><li><p>操作表</p><ul><li><p>创建表</p><p>create table 表名(</p><p>  列名 数据类型,</p><p>  列名 数据类型,</p><p>  …..</p></li></ul></li></ul><pre><code>  );- 常用数据类型    - int    - double    - decimal    - varchar(1~65535)    - date    - datetime- 查看表    - show tables;    - desc 表名;- 修改表    - alter table 表名        - add        - modify        - change        - drop        - charset- 修改表名    - rename table 旧表名 to 新表名;- 删除表    - drop table 表名;- 摧毁表，重构表    - truncate table 表名;</code></pre><h3 id="DML"><a href="#DML" class="headerlink" title="DML"></a>DML</h3><ul><li><p>添加记录</p><ul><li><p>insert into 表名(列名1,列名2…) values(值1,值2…);</p><ul><li>字符串可以使用单双引，推荐单引号</li><li>字符串可以插入任意类型，底层进行了隐式转换</li></ul></li></ul></li><li><p>修改记录</p><ul><li>update 表名 set 列名1=值1,列名2=值2  [where 条件]</li></ul></li><li><p>删除记录</p><ul><li>delete from 表名 [where 条件]</li></ul></li></ul><h3 id="DQL"><a href="#DQL" class="headerlink" title="DQL"></a>DQL</h3><ul><li><p>简单查询</p><ul><li>select … from 表名</li></ul></li><li><p>去重关键字</p><ul><li>select distinct 列名 from 表名</li></ul></li><li><p>ifnull()高级函数</p><ul><li>ifnull(列名,默认值) 如果该列有值直接返回，如果为null那么返回默认值</li></ul></li><li><p>别名</p><ul><li>select 列名 [as] 列别名  from 表名 [as] 表别名</li></ul></li></ul><h3 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h3><ul><li><p>select … from 表名 where 条件</p><ul><li><p>关系运算符</p></li><li><p>逻辑运算符</p><ul><li>and</li><li>or</li><li>not</li></ul></li><li><p>in关键字</p><ul><li>select … from 表名 where 列名 in(值1,值2..);</li></ul></li><li><p>between关键字</p><ul><li>select … from 表名 where 列名 between 较小的值 and  较大的的值</li></ul></li><li><p>is null关键字</p><ul><li><p>null 六亲不认</p><ul><li>is null  为空</li><li>is not null  不为空</li></ul></li></ul></li><li><p>like关键字</p><ul><li>_ 单个任意字符</li><li>% 多个任意字符</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;SQL使用与基础操作
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（四十二）</title>
    <link href="http://yoursite.com/2020/04/26/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2020/04/26/就业班学习笔记（四十二）/</id>
    <published>2020-04-25T16:20:38.000Z</published>
    <updated>2020-04-26T10:32:23.199Z</updated>
    
    <content type="html"><![CDATA[<ul><li>AJAX &amp; 文件上传<a id="more"></a><h1 id="一-jSON"><a href="#一-jSON" class="headerlink" title="一.jSON"></a>一.jSON</h1><h4 id="1-1-回顾"><a href="#1-1-回顾" class="headerlink" title="1.1 回顾"></a>1.1 回顾</h4></li></ul><table><thead><tr><th>语言</th><th>方法</th></tr></thead><tbody><tr><td>java</td><td>User user =new User();<br>user.setUsername(“jack”);<br>user.setAge(18);</td></tr><tr><td>javaScript</td><td>let user={“username”:”jack”,”age”:18};<br>let array = [{},{},{}]<br>name:都是字符串<br>value:支持各种类型</td></tr></tbody></table><h4 id="1-2-JSON数据与Java对象转换"><a href="#1-2-JSON数据与Java对象转换" class="headerlink" title="1.2 JSON数据与Java对象转换"></a>1.2 JSON数据与Java对象转换</h4><ul><li>最早是JavaScript对象表示形式，现在主要用于互联网传输数据载体<table><thead><tr><th>工具名称</th><th>介绍</th></tr></thead><tbody><tr><td>Jsonlib</td><td>Java 类库，需要导入的jar包较多</td></tr><tr><td>Gson</td><td>google提供的一个简单的json转换工具</td></tr><tr><td>Fastjson</td><td>alibaba技术团队提供的一个高性能的json转换工具</td></tr><tr><td>Jackson</td><td>开源免费的json转换工具，springmvc转换默认使用jackson</td></tr></tbody></table></li></ul><h5 id="1-2-0-导入jackson包"><a href="#1-2-0-导入jackson包" class="headerlink" title="1.2.0 导入jackson包"></a>1.2.0 导入jackson包</h5><p>该jar包提供了一个核心转换器对象<br>ObjectMapper om = new ObjectMapper();</p><h5 id="1-2-1-Java对象转为JSON-字符串"><a href="#1-2-1-Java对象转为JSON-字符串" class="headerlink" title="1.2.1 Java对象转为JSON(字符串)"></a>1.2.1 Java对象转为JSON(字符串)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">writeValueAsString</span><span class="params">(Object object)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">//将User对象转为JSON字符串</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UserToJson</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User(<span class="string">"1"</span>, <span class="string">"Jack"</span>, <span class="string">"Male"</span>, <span class="number">18</span>, <span class="string">"NY"</span>, <span class="string">"123"</span>, <span class="string">"123@qq.com"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建jackson转换器对象</span></span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将任意对象转为JSON字符串</span></span><br><span class="line">        String Json = om.writeValueAsString(user);</span><br><span class="line">        System.out.println(Json);<span class="comment">//在Java中，name必须使用双引号包裹起来</span></span><br><span class="line">        <span class="comment">//&#123;"id":"1","name":"Jack","sex":"Male","age":18,"address":"NY","qq":"123","email":"123@qq.com"&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MapToJson</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"name"</span>, <span class="string">"Rose"</span>);</span><br><span class="line">        map.put(<span class="string">"age"</span>, <span class="number">18</span>);</span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        String JSON = om.writeValueAsString(map);</span><br><span class="line">        System.out.println(JSON);</span><br><span class="line">        <span class="comment">//&#123;"name":"Rose","age":18&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将List集合转为Json字符串</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ListToJson</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"1"</span>, <span class="string">"Jack"</span>, <span class="string">"Male"</span>, <span class="number">18</span>, <span class="string">"NY"</span>, <span class="string">"123"</span>, <span class="string">"123@qq.com"</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"2"</span>, <span class="string">"Rose"</span>, <span class="string">"Female"</span>, <span class="number">18</span>, <span class="string">"NY"</span>, <span class="string">"123"</span>, <span class="string">"123@qq.com"</span>));</span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">        String JSON = om.writeValueAsString(list);</span><br><span class="line">        System.out.println(JSON);</span><br><span class="line"><span class="comment">//[&#123;"id":"1","name":"Jack","sex":"Male","age":18,"address":"NY","qq":"123","email":"123@qq.com"&#125;</span></span><br><span class="line"><span class="comment">// ,&#123;"id":"2","name":"Rose","sex":"Female","age":18,"address":"NY","qq":"123","email":"123@qq.com"&#125;]</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="1-2-2-将JSON-字符串-转为Java对象"><a href="#1-2-2-将JSON-字符串-转为Java对象" class="headerlink" title="1.2.2 将JSON(字符串)转为Java对象"></a>1.2.2 将JSON(字符串)转为Java对象</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">T <span class="title">readValue</span><span class="params">(String json,Class&lt;T&gt; classType)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">//将JSON字符串转为User对象</span></span><br><span class="line">    <span class="comment">//如果获取的JSON格式没有对应的Java实体对象，则使用Map接收</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">JsonToUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        String json = <span class="string">"&#123;\"id\":\"1\",\"name\":\"Jack\",\"sex\":\"Male\",\"age\":18,\"address\":\"NY\",\"qq\":\"123\",\"email\":\"123@qq.com\"&#125;"</span>;</span><br><span class="line">        ;</span><br><span class="line">        <span class="comment">//创建jackson转换器对象</span></span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        User user = om.readValue(json, User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将JSON字符串转换为Map集合</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">JsonToMap</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        String json=<span class="string">"&#123;\"id\":\"1\",\"name\":\"Jack\",\"sex\":\"Male\",\"age\":18,\"address\":\"NY\",\"qq\":\"123\",\"email\":\"123@qq.com\"&#125;"</span>;</span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//toMap</span></span><br><span class="line">        Map&lt;String ,Object&gt; map = om.readValue(json, Map<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将JSON数组字符串转换为list结婚</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">JsontToList</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        String json = <span class="string">"[&#123;\"id\":\"1\",\"name\":\"Jack\",\"sex\":\"Male\",\"age\":18,\"address\":\"NY\",\"qq\":\"123\",\"email\":\"123@qq.com\"&#125;,&#123;\"id\":\"2\",\"name\":\"Rose\",\"sex\":\"Female\",\"age\":18,\"address\":\"NY\",\"qq\":\"123\",\"email\":\"123@qq.com\"&#125;]\n"</span>;</span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        List list = om.readValue(json, List<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二-案例-检查用户名是否可用"><a href="#二-案例-检查用户名是否可用" class="headerlink" title="二.案例:检查用户名是否可用"></a>二.案例:检查用户名是否可用</h1><h4 id="2-1-需求"><a href="#2-1-需求" class="headerlink" title="2.1 需求"></a>2.1 需求</h4><ul><li><p>在用户注册页面，输入用户名，当用户名输入框失去焦点时，发送异步请求，将输入框的用户名传递给服务器进行是 否存在的校验。</p><h4 id="2-2-技术分析"><a href="#2-2-技术分析" class="headerlink" title="2.2 技术分析"></a>2.2 技术分析</h4></li><li><p>此需求使用了ajax技术:通过异步提交，实现页面的局部刷新，提高用户的体验</p></li><li><p>ajax</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123; </span><br><span class="line">    type:&quot;请求方式，get|post&quot;, </span><br><span class="line">    url:&quot;请求服务器地址&quot;, </span><br><span class="line">    data:&quot;请求参数&quot;, </span><br><span class="line">    success:function(resp)&#123;</span><br><span class="line">        resp就是服务器返回的结果... </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></li><li><p>get</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$.get(url(地址?参数),function(resp)&#123; </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>post</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$.post(url,data,function(resp)&#123; </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="2-3-需求分析"><a href="#2-3-需求分析" class="headerlink" title="2.3 需求分析"></a>2.3 需求分析</h4></li><li><p>前端</p><blockquote></blockquote><table><thead><tr><th>index.jsps</th></tr></thead><tbody><tr><td>给用户文本框绑定blur()事件</td></tr><tr><td>获取用户输入的value属性值</td></tr><tr><td>发送Ajax请求<br>$.ajax{}</td></tr><tr><td>页面局部更新，友情提示</td></tr></tbody></table></li><li><p>后端</p><blockquote></blockquote><table><thead><tr><th>CheckServlet</th></tr></thead><tbody><tr><td>接受请求参数username</td></tr><tr><td>声明返回map集合</td></tr><tr><td>判断用户名是否为xx，如果为xx返回<br>map.put(“flag”,false);<br>map.put(“msg”,”Already Registered”);</td></tr><tr><td>将map集合转换为json字符串<br>map.put(“flag”,true);<br>map.put(“msg”,”This Name Can Be Use”);</td></tr><tr><td>设置json的mime类型</td></tr><tr><td>通过response响应到客户端</td></tr></tbody></table></li></ul><h4 id="2-4-代码实现"><a href="#2-4-代码实现" class="headerlink" title="2.4 代码实现"></a>2.4 代码实现</h4><ul><li>前端<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;$&#123;NAME&#125;&lt;/title&gt;</span><br><span class="line">    &lt;script src="$&#123;pageContext.request.contextPath&#125;/js/jquery-3.2.1.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;Register&lt;/h3&gt;</span><br><span class="line">&lt;form action=<span class="string">"#"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    Name:&lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span> id=<span class="string">"username"</span>&gt;</span><br><span class="line">    &lt;span id="userwarn"&gt;&lt;/span&gt;&lt;br&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//给用户文本框绑定失去焦点事件</span></span><br><span class="line">    $(<span class="string">'#username'</span>).blur(function () &#123;</span><br><span class="line">        console.log(<span class="keyword">this</span>.value);</span><br><span class="line">        <span class="comment">//获取用户输入的值</span></span><br><span class="line">        let data=<span class="string">"username="</span>+<span class="keyword">this</span>.value;</span><br><span class="line">        <span class="comment">//发送ajax请求</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type:<span class="string">"post"</span>,</span><br><span class="line">            url:<span class="string">'$&#123;pageContext.request.contextPath&#125;/CheckServlet'</span>,</span><br><span class="line">            data:data,</span><br><span class="line">            success:function (resp) &#123;</span><br><span class="line">                console.log(resp);</span><br><span class="line">                <span class="comment">//判断结果并实现局部刷新</span></span><br><span class="line">                <span class="keyword">if</span>(resp.<span class="keyword">float</span>)&#123;</span><br><span class="line">                    $(<span class="string">'#userwarn'</span>).text(resp.msg).css(<span class="string">'color'</span>,<span class="string">'green'</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    $(<span class="string">'#userwarn'</span>).text(resp.msg).css(<span class="string">'color'</span>,<span class="string">'red'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li>后端<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/CheckServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        <span class="comment">//接收请求参数</span></span><br><span class="line">        String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        <span class="comment">//声明map集合</span></span><br><span class="line">        Map&lt;String , Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">//判断用户是否存在</span></span><br><span class="line">        <span class="keyword">if</span>(username.equals(<span class="string">"jack"</span>))&#123;</span><br><span class="line">            map.put(<span class="string">"flag"</span>,<span class="keyword">false</span>);</span><br><span class="line">            map.put(<span class="string">"msg"</span>,<span class="string">"Already Registered"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            map.put(<span class="string">"flag"</span>,<span class="keyword">true</span>);</span><br><span class="line">            map.put(<span class="string">"msg"</span>,<span class="string">"This Name Can Be Use"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将map集合转换为json字符串</span></span><br><span class="line">        ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        String json = om.writeValueAsString(map);</span><br><span class="line">        System.out.println(json);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置JSON的MIME类型</span></span><br><span class="line">        resp.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//response响应JSON到客户端</span></span><br><span class="line">        resp.getWriter().write(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-案例-文件上传"><a href="#三-案例-文件上传" class="headerlink" title="三.案例:文件上传"></a>三.案例:文件上传</h1><h4 id="3-1-需求"><a href="#3-1-需求" class="headerlink" title="3.1 需求"></a>3.1 需求</h4><p>在用户注册页面，我们可以输入用户名，还可以选择要上传的文件;点击提交按钮，就可以将用户输入的内容和选择 的文件保存到服务器上</p><h4 id="3-2-技术分析"><a href="#3-2-技术分析" class="headerlink" title="3.2 技术分析"></a>3.2 技术分析</h4><h5 id="3-2-1-客户端如何将文件转为文本"><a href="#3-2-1-客户端如何将文件转为文本" class="headerlink" title="3.2.1 客户端如何将文件转为文本"></a>3.2.1 客户端如何将文件转为文本</h5><ol><li>表单提交方式必须为post action=”post”</li><li>表单的enctype属性值必须为multipart/form-data 多组件表单数据 enctype=”multipart/form-data”</li><li>在表单中提供文件上传项&lt;input type=”file” name=”pic”&gt;</li></ol><h5 id="3-2-2-服务器将文本转为字节流"><a href="#3-2-2-服务器将文本转为字节流" class="headerlink" title="3.2.2 服务器将文本转为字节流"></a>3.2.2 服务器将文本转为字节流</h5><ol><li>使用apache提供工具类 commons-fileupload </li><li>使用servlet3.0版本，通过注解实现 </li><li>使用springMVC框架(底层使用commons-fileupload)</li></ol><h4 id="3-3-代码实现"><a href="#3-3-代码实现" class="headerlink" title="3.3 代码实现"></a>3.3 代码实现</h4><ul><li>前端<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//给用户文本框绑定失去焦点事件</span></span><br><span class="line">    $(<span class="string">'#username'</span>).blur(function () &#123;</span><br><span class="line">        console.log(<span class="keyword">this</span>.value);</span><br><span class="line">        <span class="comment">//获取用户输入的值</span></span><br><span class="line">        let data = <span class="string">"username="</span> + <span class="keyword">this</span>.value;</span><br><span class="line">        <span class="comment">//发送ajax请求</span></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">"post"</span>,</span><br><span class="line">            url: <span class="string">'$&#123;pageContext.request.contextPath&#125;/CheckServlet'</span>,</span><br><span class="line">            data: data,</span><br><span class="line">            success: function (resp) &#123;</span><br><span class="line">                console.log(resp);</span><br><span class="line">                <span class="comment">//判断结果并实现局部刷新</span></span><br><span class="line">                <span class="keyword">if</span> (resp.flag) &#123;</span><br><span class="line">                    $(<span class="string">'#userwarn'</span>).text(resp.msg).css(<span class="string">'color'</span>, <span class="string">'green'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $(<span class="string">'#userwarn'</span>).text(resp.msg).css(<span class="string">'color'</span>, <span class="string">'red'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li>后端</li></ul><ol><li>创建磁盘文件项工厂</li><li>创建核心解析对象(依赖工厂对象)</li><li>解析request对象，返回上传项list集合 4. 遍历list，获取每一个上传项</li><li>判断<br>普通上传项<blockquote><p>name和value </p></blockquote>文件上传项<blockquote><p>文件名<br>字节输入流<br>保存服务器端</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UploadServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//创建磁盘文件项工厂</span></span><br><span class="line">            DiskFileItemFactory factory = <span class="keyword">new</span> DiskFileItemFactory();</span><br><span class="line">            <span class="comment">//创建核心解析器对象(以来工厂对象)s</span></span><br><span class="line">            ServletFileUpload fileUpload = <span class="keyword">new</span> ServletFileUpload(factory);</span><br><span class="line">            <span class="comment">//解析request请求,返回一个上传项的list集合</span></span><br><span class="line">            List&lt;FileItem&gt; fileItems = fileUpload.parseRequest(req);</span><br><span class="line">            <span class="comment">//遍历list集合</span></span><br><span class="line">            <span class="keyword">for</span> (FileItem fileItem : fileItems) &#123;</span><br><span class="line">                <span class="comment">//判断是文件项还是普通项</span></span><br><span class="line">                <span class="keyword">if</span> (fileItem.isFormField()) &#123;</span><br><span class="line">                    <span class="comment">//普通上传项</span></span><br><span class="line">                    <span class="comment">//获取name属性名</span></span><br><span class="line">                    String name = fileItem.getFieldName();</span><br><span class="line">                    <span class="comment">//获取value属性值</span></span><br><span class="line">                    String value = fileItem.getString();</span><br><span class="line">                    System.out.println(<span class="string">"Normal"</span> + name + <span class="string">"="</span> + value);</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//文件上传项</span></span><br><span class="line">                    <span class="comment">//获取文件名</span></span><br><span class="line">                    String fileName = fileItem.getName();</span><br><span class="line">                    <span class="comment">//获取文件字节流输入</span></span><br><span class="line">                    InputStream in = fileItem.getInputStream();</span><br><span class="line">                    <span class="comment">//获取扩展名</span></span><br><span class="line">                    String extName = FileUtil.extName(fileName);</span><br><span class="line">                    <span class="comment">//生成随机文件名</span></span><br><span class="line">                    fileName = IdUtil.simpleUUID() + <span class="string">"."</span> + extName;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//获取upload目录在服务器真实路径</span></span><br><span class="line">                    String realPath = req.getServletContext().getRealPath(<span class="string">"/upload/"</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//判断此目录是否存在，如果不存在则创建</span></span><br><span class="line">                    File dirFile = <span class="keyword">new</span> File(realPath);</span><br><span class="line">                    <span class="keyword">if</span> (!dirFile.exists()) &#123;</span><br><span class="line">                        dirFile.mkdirs();</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//设置文件输出流</span></span><br><span class="line">                    FileOutputStream out = <span class="keyword">new</span> FileOutputStream(realPath + fileName);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//流的copy</span></span><br><span class="line">                    IoUtil.copy(in, out);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//关闭流</span></span><br><span class="line">                    out.close();</span><br><span class="line">                    in.close();</span><br><span class="line"></span><br><span class="line">                    resp.getWriter().write(<span class="string">"Success"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileUploadException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;AJAX &amp;amp; 文件上传
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（四十一）</title>
    <link href="http://yoursite.com/2020/04/25/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2020/04/25/就业班学习笔记（四十一）/</id>
    <published>2020-04-25T01:02:01.000Z</published>
    <updated>2020-04-26T10:22:33.065Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Listerner &amp; 综合案例<a id="more"></a></li></ul><h1 id="一-Linstener"><a href="#一-Linstener" class="headerlink" title="一.Linstener"></a>一.Linstener</h1><h4 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h4><ul><li><p>JavaWeb中的监听器(观察者模式)<br>Java程序中，也要需要被监视的对象，一旦被监视对象发生变化，采取相应对象</p></li><li><p>监听器三大对象<br>HttpServletRequest,HttpSession,ServletContext</p></li><li><p>场景<br>历史访问次数，统计在线人数，系统启动时初始化配置信息</p><h4 id="1-2-快速入门"><a href="#1-2-快速入门" class="headerlink" title="1.2 快速入门"></a>1.2 快速入门</h4><p>使用ServletContextListener箭头项目启动和销毁做一些事，如在项目启动时加载配置文件<br>步骤:</p><blockquote><p>创建ServletContextListener普通类<br>监听ServletContext创建、销毁<br>配置web.xml/注解<br>补充:监听HttpServletRequestListener/HttpSessionListener</p></blockquote></li><li><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>com.itheima.Demo01.MyListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">//监听ServletContext创建</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext创建"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//监听ServletContext销毁</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext销毁"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">//监听ServletContext创建</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext创建"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//监听ServletContext销毁</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext销毁"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-模拟Spring框架"><a href="#1-3-模拟Spring框架" class="headerlink" title="1.3 模拟Spring框架"></a>1.3 模拟Spring框架</h4><ul><li>ServletContext可以在项目启动时读取配置文件加载<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    全局配置参数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>configLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>words.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyListener</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">//监听ServletContext创建</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext创建"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//可以加载公司定义配置文件的名称</span></span><br><span class="line">        <span class="comment">//servletContextEvent 上下文事件对象，获取ServletContext</span></span><br><span class="line">        ServletContext servletContext = servletContextEvent.getServletContext();</span><br><span class="line">        <span class="comment">//通过加载定义公司定义的配置文件名称</span></span><br><span class="line">        String configLoaction = servletContext.getInitParameter(<span class="string">"configLocation"</span>);</span><br><span class="line">        System.out.println(<span class="string">""</span> + configLoaction);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//监听ServletContext销毁</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"ServletContext销毁"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-案例统计在线人数"><a href="#1-4-案例统计在线人数" class="headerlink" title="1.4 案例统计在线人数"></a>1.4 案例统计在线人数</h4><ul><li><p>需求:<br>有用户使用网站: 在线人数+1,用户退出，在线人数-1</p></li><li><p>步骤分析<br>使用ServletContext域对象存储在线总人数<br>使用ServletContextListener在项目启动时，初始化总人数为0<br>使用HttpSessionListener监听器，用户访问，人数+1，用户退出，人数-1<br>使用LogoutServlet控制器对当前会话对Session手动销毁</p></li><li><p>代码实现</p></li><li><p>InitNumberListerner</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InitNumberListerner</span> <span class="keyword">implements</span> <span class="title">ServletContextListener</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取上下文域对象</span></span><br><span class="line">        ServletContext servletContext = servletContextEvent.getServletContext();</span><br><span class="line">        <span class="comment">//初始化在线人数</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"number"</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>NumberChangeListener</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NumberChangeListener</span> <span class="keyword">implements</span> <span class="title">HttpSessionListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">//会话建立，在线人数+1</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionCreated</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取session</span></span><br><span class="line">        HttpSession session = httpSessionEvent.getSession();</span><br><span class="line">        <span class="comment">//获取上下文session域对象</span></span><br><span class="line">        ServletContext servletContext = session.getServletContext();</span><br><span class="line">        <span class="comment">//取出在线人数</span></span><br><span class="line">        Integer number = (Integer) servletContext.getAttribute(<span class="string">"number"</span>);</span><br><span class="line">        <span class="comment">//+1</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"number"</span>, number + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//会话销毁，在线人数-1</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionDestroyed</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取session</span></span><br><span class="line">        HttpSession session = httpSessionEvent.getSession();</span><br><span class="line">        <span class="comment">//获取上下文session域对象</span></span><br><span class="line">        ServletContext servletContext = session.getServletContext();</span><br><span class="line">        <span class="comment">//取出在线人数</span></span><br><span class="line">        Integer number = (Integer) servletContext.getAttribute(<span class="string">"number"</span>);</span><br><span class="line">        <span class="comment">//-1</span></span><br><span class="line">        servletContext.setAttribute(<span class="string">"number"</span>, number - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>index.jsp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;Learn Listener&lt;/h3&gt;</span><br><span class="line">&lt;h5&gt;Online Member:$&#123;applicationScope.number&#125;&lt;/h5&gt;</span><br><span class="line">&lt;a href="$&#123;pageContext.request.contextPath&#125;/LogoutServlet"&gt;Logout&lt;/a&gt;</span><br><span class="line">$END$</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></li><li><p>LogoutServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/LogoutServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//销毁Session</span></span><br><span class="line">        req.getSession().invalidate();</span><br><span class="line">        resp.getWriter().write(<span class="string">"Logout"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二-综合案例"><a href="#二-综合案例" class="headerlink" title="二.综合案例"></a>二.综合案例</h1><h4 id="2-1-环境搭建"><a href="#2-1-环境搭建" class="headerlink" title="2.1 环境搭建"></a>2.1 环境搭建</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> String qq;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="keyword">if</span> (request.getMethod().equalsIgnoreCase(<span class="string">"post"</span>)) &#123;</span><br><span class="line">            request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        filterChain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String realpath = <span class="string">"/Users/swzxsyh/Program/userdata.txt"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//从文件中读取所有学员信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;User&gt; <span class="title">readAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//保存所有学生对象信息</span></span><br><span class="line">       List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//得到文件真实路径</span></span><br><span class="line">            <span class="comment">//创建字符输入流</span></span><br><span class="line">            Reader isr = <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(realpath), <span class="string">"UTF-8"</span>);</span><br><span class="line">            <span class="comment">//创建字符缓冲流</span></span><br><span class="line">            BufferedReader br = <span class="keyword">new</span> BufferedReader(isr); <span class="comment">//装饰模式</span></span><br><span class="line">            <span class="comment">//一次读一行</span></span><br><span class="line">            String row = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">while</span> ((row = br.readLine()) != <span class="keyword">null</span>) &#123;<span class="comment">//row = "1,张三,男,20"</span></span><br><span class="line">                String[] arr = row.split(<span class="string">","</span>);</span><br><span class="line">                User user = <span class="keyword">new</span> User();</span><br><span class="line">                user.setId(arr[<span class="number">0</span>]);</span><br><span class="line">                user.setName(arr[<span class="number">1</span>]);</span><br><span class="line">                user.setSex(arr[<span class="number">2</span>]);</span><br><span class="line">                user.setAge(Integer.parseInt(arr[<span class="number">3</span>]));</span><br><span class="line">                user.setAddress(arr[<span class="number">4</span>]);</span><br><span class="line">                user.setQq(arr[<span class="number">5</span>]);</span><br><span class="line">                user.setEmail(arr[<span class="number">6</span>]);</span><br><span class="line">                <span class="comment">//将User对象添加到集合</span></span><br><span class="line">                list.add(user);</span><br><span class="line">            &#125;</span><br><span class="line">            br.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//向文件中写入所有用户信息--覆盖写</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeAll</span><span class="params">(List&lt;User&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//创建字符输出流</span></span><br><span class="line">            Writer osw = <span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(realpath), <span class="string">"UTF-8"</span>);</span><br><span class="line">            <span class="comment">//创建字符缓冲流</span></span><br><span class="line">            BufferedWriter out = <span class="keyword">new</span> BufferedWriter(osw);</span><br><span class="line">            <span class="comment">//循环向文件中写入文本</span></span><br><span class="line">            <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">                out.write(user.getId() + <span class="string">","</span> + user.getName() + <span class="string">","</span> + user.getSex() + <span class="string">","</span> + user.getAge() + <span class="string">","</span> + user.getAddress() + <span class="string">","</span> + user.getQq() + <span class="string">","</span> + user.getEmail());</span><br><span class="line">                out.newLine();<span class="comment">//创建新的一行</span></span><br><span class="line">            &#125;</span><br><span class="line">            out.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; list = readAll();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2-用户查询功能"><a href="#2-2-用户查询功能" class="headerlink" title="2.2 用户查询功能"></a>2.2 用户查询功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/FindAllServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindAllServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserService();</span><br><span class="line">        List&lt;User&gt; list = userService.findAll();</span><br><span class="line">        req.setAttribute(<span class="string">"list"</span>, list);</span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    UserDao userDao = <span class="keyword">new</span> UserDao();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> userDao.findAll();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; list = DataUtils.readAll();</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-添加用户功能"><a href="#2-3-添加用户功能" class="headerlink" title="2.3 添加用户功能"></a>2.3 添加用户功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            BeanUtils.populate(user,parameterMap);</span><br><span class="line">            UserService userService = <span class="keyword">new</span> UserService();</span><br><span class="line">            userService.add(user);</span><br><span class="line">            resp.sendRedirect(req.getContextPath()+<span class="string">"/FindAllServlet"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">    userDao.add(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">    List&lt;User&gt; list = DataUtils.readAll();</span><br><span class="line">    list.add(user);</span><br><span class="line">    DataUtils.writeAll(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-删除用户功能"><a href="#2-4-删除用户功能" class="headerlink" title="2.4 删除用户功能"></a>2.4 删除用户功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/DeleteServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeleteServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String id = req.getParameter(<span class="string">"id"</span>);</span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserService();</span><br><span class="line">        userService.delete(id);</span><br><span class="line">        resp.sendRedirect(req.getContextPath()+<span class="string">"/FindAllServlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(String id)</span></span>&#123;</span><br><span class="line">    userDao.delete(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    List&lt;User&gt; list = DataUtils.readAll();</span><br><span class="line">    <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">        <span class="keyword">if</span> (user.getId().equalsIgnoreCase(id)) &#123;</span><br><span class="line">            list.remove(user);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    DataUtils.writeAll(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-5-修改用户功能"><a href="#2-5-修改用户功能" class="headerlink" title="2.5 修改用户功能"></a>2.5 修改用户功能</h4><h5 id="2-5-1-用户回显"><a href="#2-5-1-用户回显" class="headerlink" title="2.5.1 用户回显"></a>2.5.1 用户回显</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/FindByIdServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindByIdServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String id = req.getParameter(<span class="string">"id"</span>);</span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserService();</span><br><span class="line">        User user = userService.fidById(id);</span><br><span class="line">        req.setAttribute(<span class="string">"user"</span>, user);</span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/update.jsp"</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">fidById</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> userDao.findById(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">    User returnUser = <span class="keyword">null</span>;</span><br><span class="line">    List&lt;User&gt; list = DataUtils.readAll();</span><br><span class="line">    <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">        <span class="keyword">if</span> (user.getId().equalsIgnoreCase(id)) &#123;</span><br><span class="line">            returnUser = user;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> returnUser;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-5-2-修改用户"><a href="#2-5-2-修改用户" class="headerlink" title="2.5.2 修改用户"></a>2.5.2 修改用户</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UpdateServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UpdateServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line">            User newUser = <span class="keyword">new</span> User();</span><br><span class="line">            BeanUtils.populate(newUser, parameterMap);</span><br><span class="line">            UserService userService = <span class="keyword">new</span> UserService();</span><br><span class="line">            userService.update(newUser);</span><br><span class="line">            resp.sendRedirect(req.getContextPath() + <span class="string">"/FindAllServlet"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(User newUser)</span> </span>&#123;</span><br><span class="line">        userDao.update(newUser);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(User newUser)</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; list = DataUtils.readAll();</span><br><span class="line">        <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">            <span class="keyword">if</span> (user.getId().equalsIgnoreCase(newUser.getId())) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    BeanUtils.copyProperties(user, newUser);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        DataUtils.writeAll(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="listener"><a href="#listener" class="headerlink" title="listener"></a>listener</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li>监听web三大域对象：Request、Session、ServletContext（创建和销毁）</li></ul><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>历史访问次数</li><li>统计在线人数</li><li>系统启动时初始化配置信息</li></ul><h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><ul><li><ol><li>定义一个类，实现ServletContextListener接口</li></ol></li><li><ol start="2"><li>重写接口中的方法</li></ol></li><li><ol start="3"><li><p>配置</p><ul><li><p>web.xml</p><ul><li>别人写好的监听器，只能通过配置文件进行配置</li></ul></li><li><p>注解</p></li></ul></li></ol></li></ul><h3 id="案例-统计在线人数"><a href="#案例-统计在线人数" class="headerlink" title="案例:统计在线人数"></a>案例:统计在线人数</h3><ul><li>1）初始化在线人数</li><li>2）创建会话时人数+1，关闭会话时人数-1</li><li>3）servlet实现用户退出</li></ul><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><h3 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h3><ul><li>增删改查</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Listerner &amp;amp; 综合案例
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker安装使用Oracle 11g</title>
    <link href="http://yoursite.com/2020/04/23/Docker%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8Oracle-11g/"/>
    <id>http://yoursite.com/2020/04/23/Docker安装使用Oracle-11g/</id>
    <published>2020-04-23T14:37:56.000Z</published>
    <updated>2020-04-23T14:59:12.540Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Docker安装Oracle 11g</li><li>使用Navicat连接<a id="more"></a></li></ul><h1 id="一-拉取镜像"><a href="#一-拉取镜像" class="headerlink" title="一.拉取镜像"></a>一.拉取镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com&#x2F;helowin&#x2F;oracle_11g</span><br></pre></td></tr></table></figure><h4 id="1-1-可以改名"><a href="#1-1-可以改名" class="headerlink" title="1.1 可以改名"></a>1.1 可以改名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag xxxxxxxxxx oracle:oracle_11g</span><br></pre></td></tr></table></figure><h1 id="二-启动"><a href="#二-启动" class="headerlink" title="二.启动"></a>二.启动</h1><h4 id="2-1-启动镜像"><a href="#2-1-启动镜像" class="headerlink" title="2.1 启动镜像"></a>2.1 启动镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 1521:1521 --name oracle_11g oracle_11g:latest</span><br></pre></td></tr></table></figure><h4 id="2-2-查看容器是否运行"><a href="#2-2-查看容器是否运行" class="headerlink" title="2.2 查看容器是否运行"></a>2.2 查看容器是否运行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h1 id="三-配置"><a href="#三-配置" class="headerlink" title="三.配置"></a>三.配置</h1><h4 id="3-1-进入容器"><a href="#3-1-进入容器" class="headerlink" title="3.1 进入容器"></a>3.1 进入容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it oracle_11g bash</span><br></pre></td></tr></table></figure><h4 id="3-2-切换到root"><a href="#3-2-切换到root" class="headerlink" title="3.2 切换到root"></a>3.2 切换到root</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line"><span class="comment">#密码:helowin</span></span><br></pre></td></tr></table></figure><h4 id="3-3-编辑profile文件"><a href="#3-3-编辑profile文件" class="headerlink" title="3.3 编辑profile文件"></a>3.3 编辑profile文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure><p>最后行添加如下环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2</span><br><span class="line"><span class="built_in">export</span> ORACLE_SID=helowin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$ORACLE_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><h4 id="3-4-创建软链接"><a href="#3-4-创建软链接" class="headerlink" title="3.4 创建软链接"></a>3.4 创建软链接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s <span class="variable">$ORACLE_HOME</span>/bin/sqlplus /usr/bin</span><br></pre></td></tr></table></figure><h4 id="3-5-切换回oracle"><a href="#3-5-切换回oracle" class="headerlink" title="3.5 切换回oracle"></a>3.5 切换回oracle</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - oracle</span><br></pre></td></tr></table></figure><h4 id="3-6-登陆sqlplus"><a href="#3-6-登陆sqlplus" class="headerlink" title="3.6 登陆sqlplus"></a>3.6 登陆sqlplus</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sqlplus /nolog</span><br><span class="line">conn /as sysdba</span><br><span class="line">//修改system密码为123123</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="keyword">system</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="number">123123</span>;</span><br><span class="line">//修改sys密码为123123</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="keyword">sys</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="number">123123</span>;</span><br><span class="line">//修改密码规则策略为密码永不过期</span><br><span class="line"><span class="keyword">ALTER</span> PROFILE <span class="keyword">DEFAULT</span> <span class="keyword">LIMIT</span> PASSWORD_LIFE_TIME <span class="keyword">UNLIMITED</span>;</span><br><span class="line">//修改数据库最大连接数据；</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">set</span> processes=<span class="number">1000</span> <span class="keyword">scope</span>=<span class="keyword">spfile</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> scott <span class="keyword">account</span> <span class="keyword">unlock</span>;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> scott <span class="keyword">identified</span> <span class="keyword">by</span> abc;</span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure><h4 id="3-7-重启数据库"><a href="#3-7-重启数据库" class="headerlink" title="3.7 重启数据库"></a>3.7 重启数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;关闭数据库</span><br><span class="line">shutdown immediate; </span><br><span class="line">&#x2F;&#x2F;启动数据库</span><br><span class="line">startup;</span><br></pre></td></tr></table></figure><h1 id="四-Navicat连接数据库"><a href="#四-Navicat连接数据库" class="headerlink" title="四.Navicat连接数据库"></a>四.Navicat连接数据库</h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Connection Name</td><td>任意</td></tr><tr><td>Connection Type</td><td>Basic</td></tr><tr><td>Host:</td><td>如果是本机起的Docker，不填</td></tr><tr><td>Port:</td><td>1521</td></tr><tr><td>Service Name:</td><td>helowin</td></tr><tr><td></td><td>SID</td></tr><tr><td>Role</td><td>Default</td></tr><tr><td>Username</td><td>scott</td></tr><tr><td>password</td><td>123123</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Docker安装Oracle 11g&lt;/li&gt;
&lt;li&gt;使用Navicat连接
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（四十）</title>
    <link href="http://yoursite.com/2020/04/23/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%E5%8D%81%EF%BC%89/"/>
    <id>http://yoursite.com/2020/04/23/就业班学习笔记（四十）/</id>
    <published>2020-04-23T01:00:46.000Z</published>
    <updated>2020-04-25T01:01:38.918Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Web三大组件</li><li>Servlet控制器</li><li>Filter过滤器:拦截浏览器一切请求，做一些业务处理</li><li>Listener监听器<a id="more"></a></li></ul><h1 id="一-概述"><a href="#一-概述" class="headerlink" title="一.概述"></a>一.概述</h1><ul><li><p>Web中的过滤器:当用户访问服务器资源时，过滤器将请求拦截，完成一些通用操作</p></li><li><p>应用场景:登陆验证，统一编码处理，敏感字符过滤</p><h1 id="二-快速入门"><a href="#二-快速入门" class="headerlink" title="二.快速入门"></a>二.快速入门</h1><h4 id="2-1-XML配置"><a href="#2-1-XML配置" class="headerlink" title="2.1 XML配置"></a>2.1 XML配置</h4></li><li><p>编写Java类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//此方法拦截用户的请求</span></span><br><span class="line">        <span class="comment">//servletRequest请求对象</span></span><br><span class="line">        <span class="comment">//servletResponse响应对象</span></span><br><span class="line">        <span class="comment">//FilterChain过滤器链</span></span><br><span class="line">        System.out.println(<span class="string">"QuickFilter Filter"</span>);</span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置XML</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    快速入门--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>QuickFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.itheima.Demo01.QuickFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>QuickFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/Demo01.jsp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-注解配置"><a href="#2-2-注解配置" class="headerlink" title="2.2 注解配置"></a>2.2 注解配置</h4></li><li><p>注意:使用注解，需要把web.xml标签注释</p></li><li><p>编写java类，实现Filter接口</p><blockquote></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@WebFilter(filterName = "QuickFilter",urlPatterns = "/quick.jsp")</span></span><br><span class="line"><span class="comment">//@WebFilter(urlPatterns = "/quick.jsp")</span></span><br><span class="line"><span class="comment">//@WebFilter(value = "/quick.jsp")</span></span><br><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/quick.jsp"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//此方法拦截用户的请求</span></span><br><span class="line">        <span class="comment">//servletRequest请求对象</span></span><br><span class="line">        <span class="comment">//servletResponse响应对象</span></span><br><span class="line">        <span class="comment">//FilterChain过滤器链</span></span><br><span class="line">        System.out.println(<span class="string">"QuickFilter Filter"</span>);</span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三-工作原理"><a href="#三-工作原理" class="headerlink" title="三.工作原理"></a>三.工作原理</h1><ul><li>发送请求</li><li>doFilter{<br>  对请求拦截<br>  是否放行<br>  对响应增强<br>}</li><li>quick.jsp调用Service方法</li><li>doFilter{<br>  对响应增强<br>}</li><li>返回响应</li></ul><h1 id="四-使用细节"><a href="#四-使用细节" class="headerlink" title="四.使用细节"></a>四.使用细节</h1><h4 id="4-1-生命周期"><a href="#4-1-生命周期" class="headerlink" title="4.1 生命周期"></a>4.1 生命周期</h4><table><thead><tr><th>方法</th><th>代码</th></tr></thead><tbody><tr><td>初始化方法</td><td>public void init(FilterConfig filterConfig)</td></tr><tr><td>拦截方法</td><td>public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</td></tr><tr><td>销毁方法</td><td>public void destroy()</td></tr></tbody></table><table><thead><tr><th>时机</th><th>说明</th></tr></thead><tbody><tr><td>创建</td><td>服务器启动项目加载，创建filter对象，执行init方法</td></tr><tr><td>运行(过滤拦截)</td><td>用户访问被拦截目标资源时，执行doFilter方法</td></tr><tr><td>销毁</td><td>服务器关闭或项目卸载时，销毁filter对象，执行destroy方法(只执行一次)</td></tr><tr><td><strong>注意</strong></td><td>过滤器一定是优先于servlet创建的</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置初始化参数一般不会在注解中使用</span></span><br><span class="line"><span class="comment">//@WebFilter(value = "/show.jsp", initParams = &#123;@WebInitParam(name = "encode", value = "utf-8")&#125;)</span></span><br><span class="line"><span class="comment">//@WebFilter("/show.jsp")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LifeCycleFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String encode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//filterConfig它是filter对配置对象</span></span><br><span class="line">    <span class="comment">//作用:获取filter对初始化参数</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeCycleFilter Run"</span>);</span><br><span class="line">        filterConfig.getInitParameter(<span class="string">"encode"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeCycleFilter Filter Request,Run Method"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Unicode"</span>+encode);</span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"LifeCycleFilter Destroy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>LifeCycleFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.itheima.Demo02.LifeCycleFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encode<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>LifeCycleFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/show.jsp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-2-拦截路径"><a href="#4-2-拦截路径" class="headerlink" title="4.2 拦截路径"></a>4.2 拦截路径</h4><ul><li>在开发时，可以指定过滤器对拦截路径来定义拦截目标资源的范围<blockquote></blockquote><table><thead><tr><th>匹配方式</th><th>说明</th></tr></thead><tbody><tr><td>精准匹配</td><td>用户访问指定目标资源(/show.jsp)时，过滤器进行拦截</td></tr><tr><td>目录匹配</td><td>用户访问指定目录下(/user/*)所有资源时，过滤器进行拦截</td></tr><tr><td>后缀匹配</td><td>用户访问指定后缀名(*.jsp)的资源时，过滤器进行拦截</td></tr><tr><td>匹配所有</td><td>用户访问该网站所有资源(/*)时，过滤器进行拦截</td></tr></tbody></table><blockquote></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@WebFilter("/show.jsp") //精准匹配</span></span><br><span class="line"><span class="comment">//@WebFilter("/User/*")     //目录匹配</span></span><br><span class="line"><span class="comment">//@WebFilter("*.html")  //后缀匹配</span></span><br><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UrlPatternFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UrlPatternFilter拦截了请求..."</span>); <span class="comment">// 放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-3-拦截方式"><a href="#4-3-拦截方式" class="headerlink" title="4.3 拦截方式"></a>4.3 拦截方式</h4><ul><li>开发时，可以指定过滤器拦截方式来处理不同的应用场景(如浏览器发送的，或内部转发的)</li></ul><table><thead><tr><th>拦截方式</th><th>说明</th></tr></thead><tbody><tr><td>request(默认拦截方式)</td><td>浏览器直接发送请求时，过滤器拦截</td></tr><tr><td>forward</td><td>资源A转发到资源B时，过滤器拦截<br>资源A:ForwardServlet<br>资源B:show.jsp</td></tr><tr><td><strong>可以同时配置两者</strong></td><td></td></tr></tbody></table><ul><li>XML版本<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ModeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Filter"</span>);</span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>ModeFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.itheima.Demo04.ModeFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>ModeFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/show.jsp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>FORWARD<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dispatcher</span>&gt;</span>REQUEST<span class="tag">&lt;/<span class="name">dispatcher</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>注解版本<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(value = <span class="string">"/show.jsp"</span>,dispatcherTypes = &#123;DispatcherType.REQUEST,DispatcherType.FORWARD&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ModeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Filter"</span>);</span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-4-过滤器链"><a href="#4-4-过滤器链" class="headerlink" title="4.4 过滤器链"></a>4.4 过滤器链</h4><ul><li><p>在一次请求中，若请求匹配到多个filter，通过请求将相当于把这些filter串起来，形成过滤器链</p></li><li><p>需求<br>用户访问目标资源 show.jsp时，经过 FilterA FilterB</p></li><li><p>过滤器链执行顺序 (先进后出) </p><blockquote><p>1.用户发送请求<br>2.FilterA拦截，放行<br>3.FilterB拦截，放行<br>4.执行目标资源 show.jsp<br>5.FilterB增强响应<br>6.FilterA增强响应<br>7.封装响应消息格式，返回到浏览器</p></blockquote></li><li><p>过滤器链中执行的先后问题</p><table><thead><tr><th>方式</th><th>顺序</th></tr></thead><tbody><tr><td>配置文件</td><td>谁先声明，谁先执行<br>&lt;filter-mapping&gt;</td></tr><tr><td>注解【不推荐】</td><td>根据过滤器类名进行排序，值小的先执行<br>FilterA FilterB 进行比较， FilterA先执行</td></tr></tbody></table></li></ul><h4 id="4-5-注解和XML使用"><a href="#4-5-注解和XML使用" class="headerlink" title="4.5 注解和XML使用"></a>4.5 注解和XML使用</h4><ul><li>如果是自己定义filter，无执行先后顺序，可以使用注解开发</li><li>如果是第三方jar提供的filter，要在web.xml进行配置</li></ul><h1 id="五-综合案例"><a href="#五-综合案例" class="headerlink" title="五.综合案例"></a>五.综合案例</h1><h4 id="5-1-用户评论留言"><a href="#5-1-用户评论留言" class="headerlink" title="5.1 用户评论留言"></a>5.1 用户评论留言</h4><ul><li>需求<br>用户访问某论坛网站，可以对文章比赛等内容进行留言</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;BBS&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;LPL View Board&lt;/h3&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/WordServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;textarea name="content" id="" cols="30" rows="10"&gt;&lt;/textarea&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"text"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/WordServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//接收请求参数Content</span></span><br><span class="line">        String content = req.getParameter(<span class="string">"content"</span>);</span><br><span class="line">        <span class="comment">//结果响应到浏览器</span></span><br><span class="line">        resp.getWriter().write(content);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-统一网站编码"><a href="#5-2-统一网站编码" class="headerlink" title="5.2 统一网站编码"></a>5.2 统一网站编码</h4><ul><li>需求<br>tomcat8.5版本中已经将get请求的中文乱码解决了,但是post请求还存在中文乱码 浏览器发出的任何请求，通过过滤器统一处理中文乱码<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 统一网站编码   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>EncodeFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.itheima.Case01.EncodeFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encode<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>EncodeFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncodeFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String encode;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        encode = filterConfig.getInitParameter(<span class="string">"encode"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//类型向下转换</span></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="comment">//判断用户是否为post请求，才设置编码</span></span><br><span class="line">        <span class="keyword">if</span> (request.getMethod().equalsIgnoreCase(<span class="string">"post"</span>)) &#123;</span><br><span class="line">            request.setCharacterEncoding(encode);</span><br><span class="line">        &#125;</span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset="</span> + encode);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="5-3-非法字符拦截"><a href="#5-3-非法字符拦截" class="headerlink" title="5.3 非法字符拦截"></a>5.3 非法字符拦截</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/WordServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordsFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; wordList;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//加载配置文件,ResourceBundle专门读取src下的properties文件，不需要后缀名</span></span><br><span class="line">        ResourceBundle words = ResourceBundle.getBundle(<span class="string">"words"</span>);</span><br><span class="line">        <span class="comment">//读取keyword关键字内容</span></span><br><span class="line">        String keyword = words.getString(<span class="string">"keyword"</span>);</span><br><span class="line">        <span class="comment">//split切割，转为list集合</span></span><br><span class="line">        wordList = Arrays.asList(keyword.split(<span class="string">","</span>));</span><br><span class="line">        System.out.println(wordList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//向下转型</span></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="comment">//获取用户输入的值</span></span><br><span class="line">        String content = request.getParameter(<span class="string">"content"</span>);</span><br><span class="line">        <span class="comment">//拦截非法内容，提示</span></span><br><span class="line">        <span class="keyword">for</span> (String word : wordList) &#123;</span><br><span class="line">            <span class="keyword">if</span>(content.contains(word))&#123;</span><br><span class="line">                response.getWriter().write(<span class="string">"Input Words has Problem"</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        filterChain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-4-非法字符过滤"><a href="#5-4-非法字符过滤" class="headerlink" title="5.4 非法字符过滤"></a>5.4 非法字符过滤</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRequest</span> <span class="keyword">extends</span> <span class="title">HttpServletRequestWrapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//非法词库</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; wordList;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyRequest</span><span class="params">(HttpServletRequest request, List&lt;String&gt; wordList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(request);</span><br><span class="line">        <span class="keyword">this</span>.wordList = wordList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对谁增强就重写谁</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getParameter</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//调用原有的功能，获取用户输入的值</span></span><br><span class="line">        String parameter = <span class="keyword">super</span>.getParameter(name);</span><br><span class="line">        <span class="comment">//对非法词库过滤</span></span><br><span class="line">        <span class="keyword">for</span> (String word : wordList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (parameter.contains(word)) &#123;</span><br><span class="line">                <span class="comment">//注意:替换完后进行覆盖</span></span><br><span class="line">                parameter = parameter.replaceAll(word, <span class="string">"**"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> parameter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/WordServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordsProFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; wordList;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//加载配置文件,ResourceBundle专门读取src下的properties文件，不需要后缀名</span></span><br><span class="line">        ResourceBundle words = ResourceBundle.getBundle(<span class="string">"words"</span>);</span><br><span class="line">        <span class="comment">//读取keyword关键字内容</span></span><br><span class="line">        String keyword = words.getString(<span class="string">"keyword"</span>);</span><br><span class="line">        <span class="comment">//split切割，转为list集合</span></span><br><span class="line">        wordList = Arrays.asList(keyword.split(<span class="string">","</span>));</span><br><span class="line">        System.out.println(wordList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//向下转型</span></span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) servletRequest;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) servletResponse;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对request对象进行包装(过滤)</span></span><br><span class="line">        MyRequest requestPro = <span class="keyword">new</span> MyRequest(request, wordList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        filterChain.doFilter(requestPro, response);</span><br><span class="line">        System.out.println(wordList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="附录-Filter模版设置"><a href="#附录-Filter模版设置" class="headerlink" title="附录 Filter模版设置"></a>附录 Filter模版设置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#if ($&#123;PACKAGE_NAME&#125; &amp;&amp; $&#123;PACKAGE_NAME&#125; !&#x3D; &quot;&quot;)package $&#123;PACKAGE_NAME&#125;;#end #parse(&quot;File Header.java&quot;) @javax.servlet.annotation.WebFilter(&quot;&#x2F;$&#123;Entity_Name&#125;&quot;)</span><br><span class="line">public class $&#123;Class_Name&#125; implements javax.servlet.Filter &#123;</span><br><span class="line">public void init(javax.servlet.FilterConfig config) throws javax.servlet.ServletException &#123;</span><br><span class="line">&#125;</span><br><span class="line">public void doFilter(javax.servlet.ServletRequest servletRequest, javax.servlet.ServletResponse servletResponse, javax.servlet.FilterChain chain) throws javax.servlet.ServletException, java.io.IOException &#123;</span><br><span class="line">&#x2F;&#x2F; 放行</span><br><span class="line">chain.doFilter(servletRequest, servletResponse); &#125;</span><br><span class="line">    public void destroy() &#123;</span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>拦截用户请求</li></ul><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><ul><li>如：登录验证、统一编码处理、敏感字符过滤…</li></ul><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="1-定义一个类实现Filter接口"><a href="#1-定义一个类实现Filter接口" class="headerlink" title="1. 定义一个类实现Filter接口"></a>1. 定义一个类实现Filter接口</h3><ul><li>javax.servlet 包</li></ul><h3 id="2-重写filter方法"><a href="#2-重写filter方法" class="headerlink" title="2. 重写filter方法"></a>2. 重写filter方法</h3><ul><li>doFilter</li></ul><h3 id="3-配置"><a href="#3-配置" class="headerlink" title="3. 配置"></a>3. 配置</h3><ul><li>web.xml</li><li>注解</li></ul><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><h3 id="用户发送请求"><a href="#用户发送请求" class="headerlink" title="用户发送请求"></a>用户发送请求</h3><ul><li><p>执行Filter拦截请求</p><ul><li><p>放行（执行放行后的资源）</p><ul><li><p>执行Filter拦截响应</p><ul><li>响应给浏览器结果</li></ul></li></ul></li></ul></li></ul><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><ul><li><p>何时创建</p><ul><li>在服务器启动时，创建fitler对象，执行init方法，只执行一次</li></ul></li><li><p>何时销毁</p><ul><li>服务器正常关闭时，销毁filter对象，执行destroy方法，只执行一次</li></ul></li><li><p>创建优先级</p><ul><li><p>ServletContext</p><ul><li><p>Filter</p><ul><li>Servlet</li></ul></li></ul></li></ul></li></ul><h3 id="拦截路径"><a href="#拦截路径" class="headerlink" title="拦截路径"></a>拦截路径</h3><ul><li><p>精准匹配</p><ul><li>/show.jsp</li></ul></li><li><p>目录匹配</p><ul><li>/user/*</li></ul></li><li><p>后缀匹配</p><ul><li>*.html</li></ul></li><li><p>拦截所有</p><ul><li>/*</li></ul></li></ul><h3 id="拦截方式"><a href="#拦截方式" class="headerlink" title="拦截方式"></a>拦截方式</h3><ul><li><p>REQUEST</p><ul><li>客户端直接访问资源时，执行Filter</li></ul></li><li><p>FORWARD</p><ul><li>服务器内部资源跳转时，执行Filter</li></ul></li></ul><h3 id="过滤器链"><a href="#过滤器链" class="headerlink" title="过滤器链"></a>过滤器链</h3><ul><li><p>拦截顺序</p><ul><li>先进后出</li></ul></li><li><p>执行先后</p><ul><li><p>web.xml</p><ul><li><filter-mapping></filter-mapping>谁先声明，谁先执行</li></ul></li><li><p>注解</p><ul><li>按照自定义过滤器类名的字符串比较规则，值小的先执行</li></ul></li></ul></li></ul><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Web三大组件&lt;/li&gt;
&lt;li&gt;Servlet控制器&lt;/li&gt;
&lt;li&gt;Filter过滤器:拦截浏览器一切请求，做一些业务处理&lt;/li&gt;
&lt;li&gt;Listener监听器
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>就业班学习笔记（三十九）</title>
    <link href="http://yoursite.com/2020/04/21/%E5%B0%B1%E4%B8%9A%E7%8F%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%E5%8D%81%E4%B9%9D%EF%BC%89/"/>
    <id>http://yoursite.com/2020/04/21/就业班学习笔记（三十九）/</id>
    <published>2020-04-21T15:39:07.000Z</published>
    <updated>2020-04-23T01:43:59.284Z</updated>
    
    <content type="html"><![CDATA[<ul><li>EL表达式</li><li>JSTL标签库</li><li>三层架构<a id="more"></a></li></ul><h1 id="一-EL"><a href="#一-EL" class="headerlink" title="一.EL"></a>一.EL</h1><h4 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h4><ul><li>表达式语言(Expression Language)</li><li>作用:<br>主要用于代替jsp中脚本的功能，简化对java代码对操作</li><li>语法:<br>${表达式}</li></ul><h4 id="1-2-使用"><a href="#1-2-使用" class="headerlink" title="1.2 使用"></a>1.2 使用</h4><h5 id="1-2-1-获取值"><a href="#1-2-1-获取值" class="headerlink" title="1.2.1 获取值"></a>1.2.1 获取值</h5><ul><li>EL表达式<strong>只能</strong>从域对象(4个域)中获取数据<blockquote></blockquote><table><thead><tr><th>标准写法</th><th></th></tr></thead><tbody><tr><td>${pageScope.键名}</td><td>从page域中获取指定键名对应的值</td></tr><tr><td>${requestScope.键名}</td><td>从request域中获取指定键名对应的值</td></tr><tr><td>${sessionScope.键名}</td><td>从session域中获取指定键名对应的值</td></tr><tr><td>${applicationScope.键名}</td><td>从servletContext域中获取指定键名对应的值</td></tr></tbody></table><blockquote></blockquote><table><thead><tr><th>简化写法</th><th></th></tr></thead><tbody><tr><td>${键名}</td><td>特点:默认从最小域开始找，找到后直接显示，不在继续寻找  <br><strong>注意</strong>:要求四个域键名唯一</td></tr></tbody></table><blockquote></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo01&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;EL 表达式基本语法&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="comment">/*模拟Servlet向域中存值*/</span></span><br><span class="line">    pageContext.setAttribute(<span class="string">"Username"</span>, <span class="string">"Jack"</span>);</span><br><span class="line">    request.setAttribute(<span class="string">"Age"</span>, <span class="string">"50"</span>);</span><br><span class="line">    session.setAttribute(<span class="string">"Gender"</span>, <span class="string">"Male"</span>);</span><br><span class="line">    application.setAttribute(<span class="string">"Address"</span>, <span class="string">"NY"</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h5&gt;标准语法&lt;/h5&gt;</span><br><span class="line">$&#123;pageScope.Username&#125;&lt;br&gt;&lt;%--不会提示空指针异常--%&gt;</span><br><span class="line">$&#123;requestScope.Age&#125;&lt;br&gt;</span><br><span class="line">$&#123;sessionScope.Gender&#125;&lt;br&gt;</span><br><span class="line">$&#123;applicationScope.Address&#125;&lt;br&gt;</span><br><span class="line">&lt;h5&gt;简化语法&lt;/h5&gt;</span><br><span class="line">$&#123;Username&#125;&lt;br&gt;</span><br><span class="line">$&#123;Age&#125;&lt;br&gt;</span><br><span class="line">$&#123;Gender&#125;&lt;br&gt;</span><br><span class="line">$&#123;Address&#125;&lt;br&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h6 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h6><blockquote></blockquote><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>获取字符串</td><td>${键名}</td></tr><tr><td>获取对象(User)</td><td>${键名.属性名}</td></tr><tr><td>获取List(Array)集合</td><td>${键名[索引]}</td></tr><tr><td>获取Map集合</td><td>${键名.key} <br> ${键名[“key”]}</td></tr><tr><td>——–</td><td></td></tr><tr><td><strong>注意</strong></td><td><strong>El不会出现null和数组角标越界问题</strong></td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo02&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;获取User对象&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    User user = <span class="keyword">new</span> User(<span class="string">"Jack"</span>, <span class="number">13</span>, <span class="string">"Male"</span>);</span><br><span class="line">    request.setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">%&gt;</span><br><span class="line">$&#123;user&#125;&lt;br&gt;&lt;%--执行该对象对toString方法--%&gt;</span><br><span class="line">$&#123;user.username&#125; ｜$&#123;user.age&#125; ｜$&#123;user.gender&#125;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;获取List集合&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    List&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    list.add(<span class="string">"A"</span>);</span><br><span class="line">    list.add(<span class="string">"B"</span>);</span><br><span class="line">    list.add(<span class="string">"C"</span>);</span><br><span class="line">    list.add(user);</span><br><span class="line">    request.setAttribute(<span class="string">"list"</span>,list);</span><br><span class="line"></span><br><span class="line">%&gt;&gt;</span><br><span class="line">$&#123;list&#125;&lt;br&gt;&lt;%--执行该对象对toString方法--%&gt;</span><br><span class="line">$&#123;list[<span class="number">0</span>]&#125; ｜ $&#123;list[<span class="number">1</span>]&#125; ｜ $&#123;list[<span class="number">2</span>]&#125; ｜ $&#123;list[<span class="number">3</span>].username&#125; ｜$&#123;list[<span class="number">3</span>].age&#125;&lt;br&gt;</span><br><span class="line">$&#123;list[<span class="number">3</span>].gender&#125;&lt;%--EL表达式不会出现集合(数组)角标越界异常--%&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;获取map集合&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">"key1"</span>,<span class="string">"A"</span>);</span><br><span class="line">    map.put(<span class="string">"key2"</span>,<span class="string">"B"</span>);</span><br><span class="line">    map.put(<span class="string">"key3"</span>,<span class="string">"C"</span>);</span><br><span class="line">    map.put(<span class="string">"key.4"</span>,user);</span><br><span class="line">    request.setAttribute(<span class="string">"map"</span>,map);</span><br><span class="line">%&gt;</span><br><span class="line">$&#123;map&#125;&lt;br&gt;&lt;%--执行该对象对toString方法--%&gt;</span><br><span class="line">$&#123;map.get(<span class="string">"key1"</span>)&#125; | $&#123;map.key2&#125; | $&#123;map.key3&#125;&lt;br&gt;</span><br><span class="line">$&#123;map[<span class="string">'key.4'</span>]&#125;&lt;br&gt;</span><br><span class="line">$&#123;map[<span class="string">'key.4'</span>].username&#125; | $&#123;map[<span class="string">'key.4'</span>].age&#125; | $&#123;map[<span class="string">'key.4'</span>].gender&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="1-2-2-执行运算"><a href="#1-2-2-执行运算" class="headerlink" title="1.2.2 执行运算"></a>1.2.2 执行运算</h5><blockquote></blockquote><table><thead><tr><th>运算符</th><th>语法</th></tr></thead><tbody><tr><td>算数运算符</td><td>+ - * /(div) %(mod)</td></tr><tr><td>比较运算符</td><td>&gt; &lt; &gt;= &lt;= ==(eq) !=(ne)</td></tr><tr><td>逻辑运算符</td><td>&amp;&amp;(and)</td></tr><tr><td>三元运算符</td><td>${条件表达式?为真:为假}</td></tr><tr><td>——–</td><td>————————–</td></tr><tr><td>空运算符</td><td>${not empty 对象} <br>功能: <br>可以判断字符串和对象是否为空<br>可以判断一个集合的长度是否为0</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo03&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">3</span>;</span><br><span class="line">    request.setAttribute(<span class="string">"a"</span>, a);</span><br><span class="line">    request.setAttribute(<span class="string">"b"</span>, b);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h5&gt;算数运算符&lt;/h5&gt;</span><br><span class="line">$&#123;a / b&#125; | $&#123;a div b&#125; &lt;br&gt;</span><br><span class="line">$&#123;a % b&#125; | $&#123;a mod b&#125; &lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;比较运算符&lt;/h5&gt;</span><br><span class="line">$&#123;a == b&#125; | $&#123;a eq b&#125;&lt;br&gt;</span><br><span class="line">$&#123;a != b&#125; | $&#123;a ne b&#125;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;三元运算符&lt;/h5&gt;</span><br><span class="line">$&#123;a==b?<span class="string">"Y"</span>:<span class="string">"N"</span>&#125;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;非空判断&lt;/h5&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    request.setAttribute(<span class="string">"user"</span>, user);</span><br><span class="line"></span><br><span class="line">    List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    list.add(<span class="string">"aa"</span>);</span><br><span class="line">    request.setAttribute(<span class="string">"list"</span>, list);</span><br><span class="line">%&gt;</span><br><span class="line">$&#123;not empty user&#125;&lt;%--<span class="keyword">if</span>(user != <span class="keyword">null</span>)&#123;&#125;--%&gt;</span><br><span class="line">$&#123;not empty list&#125;&lt;%--<span class="keyword">if</span>(list != <span class="keyword">null</span> &amp;&amp; list.size()&gt;<span class="number">0</span>)--%&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;空值判断&lt;/h5&gt;</span><br><span class="line">$&#123;empty user&#125;&lt;%--<span class="keyword">if</span>(user == <span class="keyword">null</span>)&#123;&#125;--%&gt;</span><br><span class="line">$&#123;empty list&#125;&lt;%--<span class="keyword">if</span>(list == <span class="keyword">null</span> &amp;&amp; list.size()==<span class="number">0</span>)--%&gt;&lt;br&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="1-2-3-隐式对象"><a href="#1-2-3-隐式对象" class="headerlink" title="1.2.3 隐式对象"></a>1.2.3 隐式对象</h5><ul><li>EL表达式中有11个隐藏对象</li><li>掌握<br>pageContext<br>cookie</li></ul><table><thead><tr><th>对象</th><th>作用</th></tr></thead><tbody><tr><td>pageContext</td><td>就是jsp九大内置对象之一，可以通过它获得其他八个内置对象</td></tr><tr><td>cookie</td><td>可以获取浏览器指定cookie名称的值</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo04&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;EL隐式对象&lt;/h3&gt;</span><br><span class="line">$&#123;pageContext.request.contextPath&#125;&lt;%--动态获取:项目名称(虚拟路径)--%&gt;&lt;br&gt;</span><br><span class="line">$&#123;cookie.JSESSIONID.value&#125;&lt;%--获取指定cookie名称的值--%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="1-2-4-补充"><a href="#1-2-4-补充" class="headerlink" title="1.2.4 补充"></a>1.2.4 补充</h5><ul><li>jsp默认支持el表达式<br>servlet2.3规范中，默认不支持el表达式<blockquote></blockquote><table><thead><tr><th>忽略el表达式</th><th>方法</th></tr></thead><tbody><tr><td>忽略当前jsp页面中所有的el表达式</td><td>isELIgnored=”true” 属性</td></tr><tr><td>忽略单个el表达式</td><td>${表达式}</td></tr></tbody></table></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> isELIgnored=<span class="string">"false"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo04&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;EL隐式对象&lt;/h3&gt;</span><br><span class="line">$&#123;pageContext.request.contextPath&#125;&lt;%--动态获取:项目名称(虚拟路径)--%&gt;&lt;br&gt;</span><br><span class="line">$&#123;cookie.JSESSIONID.value&#125;&lt;br&gt;&lt;%--获取指定cookie名称的值--%&gt;</span><br><span class="line">\$&#123;cookie.JSESSIONID.value&#125;&lt;%--获取指定cookie名称的值--%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="1-3-JavaBean"><a href="#1-3-JavaBean" class="headerlink" title="1.3 JavaBean"></a>1.3 JavaBean</h4><ul><li>实际上是一个普通Java类<br>使用规范</li><li>所有字段(成员变量)为private</li><li>提供无参构造方法</li><li>提供getter,setter和is方法</li><li>实现Serializable接口</li></ul><p>例如:如下User类有4个字段(成员变量),有全参和无参构造方法，有一个属性(username)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String Username;</span><br><span class="line">    <span class="keyword">private</span> Integer Age;</span><br><span class="line">    <span class="keyword">private</span> String  Gender;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> success;<span class="comment">//是否操作成功</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSuccess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> success;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSuccess</span><span class="params">(<span class="keyword">boolean</span> success)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.success = success;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        Username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line">        Age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGender</span><span class="params">(String gender)</span> </span>&#123;</span><br><span class="line">        Gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二-JSTL"><a href="#二-JSTL" class="headerlink" title="二.JSTL"></a>二.JSTL</h1><h4 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h4><ul><li>Jsp 标准标签库(Jsp Standard Tag Library)，是由Apache组织提供的开源的jsp标签库 </li><li>作用:替换和简化jsp页面中java代码的编写 </li><li>JSTL标准标签库有5个子库，但随着发展，目前常使用的是它的核心库(Core)</li></ul><blockquote></blockquote><table><thead><tr><th>标签库</th><th>标签库的URI</th><th>前缀</th></tr></thead><tbody><tr><td><strong>Core</strong></td><td><a href="http://java.sun.com/jsp/jstl/core">http://java.sun.com/jsp/jstl/core</a></td><td>c</td></tr><tr><td>国际化(几乎不用)</td><td><a href="http://java.sun.com/jsp/jstl/fmt">http://java.sun.com/jsp/jstl/fmt</a></td><td>fmt</td></tr><tr><td>SQL(过时)</td><td><a href="http://java.sun.com/jsp/jstl/sql">http://java.sun.com/jsp/jstl/sql</a></td><td>sql</td></tr><tr><td>XML(过时)</td><td><a href="http://java.sun.com/jsp/jstl/xml">http://java.sun.com/jsp/jstl/xml</a></td><td>x</td></tr><tr><td>Functions(几乎不用)</td><td><a href="http://java.sun.com/jsp/jstl/functions">http://java.sun.com/jsp/jstl/functions</a></td><td>fn</td></tr></tbody></table><h4 id="2-2-Core标签使用"><a href="#2-2-Core标签使用" class="headerlink" title="2.2 Core标签使用"></a>2.2 Core标签使用</h4><h5 id="2-2-1-使用步骤"><a href="#2-2-1-使用步骤" class="headerlink" title="2.2.1 使用步骤"></a>2.2.1 使用步骤</h5><ul><li>当前Web项目引入第三方jar包</li><li>当前JSP页面使用taglib指令引入core核心标签 </li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo01&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="2-2-2-常用标签"><a href="#2-2-2-常用标签" class="headerlink" title="2.2.2 常用标签"></a>2.2.2 常用标签</h5><blockquote></blockquote><table><thead><tr><th>标签</th><th></th><th>语法</th></tr></thead><tbody><tr><td>c:if</td><td>相当于Java中的if(){}</td><td>&lt;c:if test=”boolean值&gt;</c:if> <br>true:显示标签体内容 <br>false:隐藏标签体内容<br>注意:此标签没有else功能，需要使用就取反</td></tr><tr><td>c:forEach</td><td>1)普通for循环for(int i=1;i&lt;=5;i++){i}<br></td><td>&lt;c:forEach&gt; <br>begin=”1”起始值(包含)<br> end=”5”结束值(包含) <br>step=”1”步长1   <br> var=”i”  当前输出临时变量</td></tr><tr><td></td><td>2) 增强for循环  for(User user:list){user}</td><td>&lt;c:forEach items=”${list}” var=”user” varStatus=”vs”&gt;<br>${user}<br>&lt;/c:forEach&gt;<br>items=”list” 集合<br>var=”user” 当前输出的临时变量<br>varStatus=”vs” 变量状态<br> index 当前索引 从0开始<br>count 计数器 从1开始</td></tr><tr><td>c:choose</td><td>相当于java中的switch语句</td><td>&lt;c:choose&gt;等价于switch<br>&lt;c:when&gt;等价于case+break<br>&lt;c:otherwise&gt;等价于default</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo01&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUsername(<span class="string">"Jack"</span>);</span><br><span class="line">    request.setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;empty user&#125;"</span>&gt;</span><br><span class="line">    Welcome ,Please Login</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;not empty user&#125;"</span>&gt;</span><br><span class="line">    Welcome, $&#123;user.username&#125;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo02&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;普通for循环&lt;/h3&gt;</span><br><span class="line">&lt;c:forEach begin=<span class="string">"1"</span> end=<span class="string">"5"</span> step=<span class="string">"1"</span> <span class="keyword">var</span>=<span class="string">"i"</span>&gt;    &lt;%--<span class="keyword">for</span>循环将临时变量存储到pageContext域空间--%&gt;</span><br><span class="line">    $&#123;i&#125;&lt;br&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;增强for循环&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    list.add(<span class="keyword">new</span> User(<span class="string">"A"</span>,<span class="number">1</span>,<span class="string">"F"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> User(<span class="string">"B"</span>,<span class="number">1</span>,<span class="string">"F"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> User(<span class="string">"C"</span>,<span class="number">1</span>,<span class="string">"M"</span>));</span><br><span class="line">    list.add(<span class="keyword">new</span> User(<span class="string">"D"</span>,<span class="number">1</span>,<span class="string">"M"</span>));</span><br><span class="line">    request.setAttribute(<span class="string">"list"</span>,list);</span><br><span class="line">%&gt;&gt;</span><br><span class="line">$&#123;requestScope.list&#125;</span><br><span class="line"></span><br><span class="line">&lt;c:forEach items=<span class="string">"$&#123;list&#125;"</span> <span class="keyword">var</span>=<span class="string">"user"</span> varStatus=<span class="string">"vs"</span>&gt;</span><br><span class="line">    索引:$&#123;vs.index&#125;&lt;br&gt;</span><br><span class="line">    计数器:$&#123;vs.count&#125;&lt;br&gt;</span><br><span class="line">    $&#123;user&#125;&lt;br&gt;</span><br><span class="line">    $&#123;user.username&#125;&lt;br&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Demo03&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;Choose标签&lt;/h3&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    Integer money=<span class="number">30000</span>;</span><br><span class="line">    request.setAttribute(<span class="string">"money"</span>,money);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;c:choose&gt;</span><br><span class="line">    &lt;c:when test="$&#123;money==7000&#125;"&gt;AAA&lt;/c:when&gt;</span><br><span class="line">    &lt;c:when test="$&#123;money==8000&#125;"&gt;BBB&lt;/c:when&gt;</span><br><span class="line">    &lt;c:when test="$&#123;money==9000&#125;"&gt;CCC&lt;/c:when&gt;</span><br><span class="line">    &lt;c:when test="$&#123;money==30000&#125;"&gt;DDD&lt;/c:when&gt;</span><br><span class="line">    &lt;c:otherwise&gt;</span><br><span class="line">        ZZZZZZ</span><br><span class="line">    &lt;/c:otherwise&gt;</span><br><span class="line">&lt;/c:choose&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="三-三层架构"><a href="#三-三层架构" class="headerlink" title="三.三层架构"></a>三.三层架构</h1><h4 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h4><ul><li>通常意义上的三层架构就是将整个业务应用划分为:表示层、业务逻辑层、数据访问层</li><li>区分层次的目的为了<strong>高聚合低耦合</strong>思想<blockquote><p>表示层:称为web层，与浏览器进行数据交互(控制器合视图)<br>业务逻辑层:又称为service层，处理业务数据(if判断，for循环)<br>数据访问(持久)层:称为Dao层，与数据库进行交互(每一条记录与JavaBean实体产生对应关系)</p></blockquote></li></ul><table><thead><tr><th>包目录结构</th><th></th></tr></thead><tbody><tr><td>com.xxx</td><td>基本包(公司域名倒写)</td></tr><tr><td>com.xxx.dao</td><td>持久层</td></tr><tr><td>com.xxx.service</td><td>业务层</td></tr><tr><td>com.xxx.web</td><td>表示层</td></tr><tr><td>com.xxx.domain</td><td>实体(JavaBean)</td></tr><tr><td>com.xxx.util</td><td>工具</td></tr></tbody></table><h4 id="3-2-案例-用户信息列表显示"><a href="#3-2-案例-用户信息列表显示" class="headerlink" title="3.2 案例:用户信息列表显示"></a>3.2 案例:用户信息列表显示</h4><ul><li>需求:MVC模式开发代码，完成用户显示列表功能。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"1"</span>,<span class="string">"A"</span>,<span class="string">"Male"</span>,<span class="number">18</span>,<span class="string">"NY"</span>,<span class="string">"123"</span>,<span class="string">"sd@qq.com"</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"2"</span>,<span class="string">"B"</span>,<span class="string">"Female"</span>,<span class="number">18</span>,<span class="string">"NY"</span>,<span class="string">"234"</span>,<span class="string">"ad@qq.com"</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> User(<span class="string">"3"</span>,<span class="string">"C"</span>,<span class="string">"Male"</span>,<span class="number">18</span>,<span class="string">"NY"</span>,<span class="string">"345"</span>,<span class="string">"sv@qq.com"</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String SID;</span><br><span class="line">    <span class="keyword">private</span> String Name;</span><br><span class="line">    <span class="keyword">private</span> String Gender;</span><br><span class="line">    <span class="keyword">private</span> Integer Age;</span><br><span class="line">    <span class="keyword">private</span> String Address;</span><br><span class="line">    <span class="keyword">private</span> String QQ;</span><br><span class="line">    <span class="keyword">private</span> String EMAIL;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//此处省略无参、全参、toString，set/get</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//调用DAO，查询</span></span><br><span class="line">        UserDao userDao = <span class="keyword">new</span> UserDao();</span><br><span class="line">        List&lt;User&gt; list = userDao.findAll();</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/FindAllServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindAllServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//调用Service查询</span></span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserService();</span><br><span class="line">        List&lt;User&gt; list=userService.findAll();</span><br><span class="line">        <span class="comment">//将list存储到request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"list"</span>,list);</span><br><span class="line">        <span class="comment">//转发list.jsp</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;List&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;table border=<span class="string">"1"</span> cellpadding=<span class="string">"0"</span> cellspacing=<span class="string">"0"</span> width=<span class="string">"500px"</span> align=<span class="string">"center"</span>&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;地址&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;QQ&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;邮箱&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;c:forEach items=<span class="string">"$&#123;list&#125;"</span> <span class="keyword">var</span>=<span class="string">"user"</span>&gt;</span><br><span class="line">        &lt;tr align=<span class="string">"center"</span>&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.SID&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.name&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.gender&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.age&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.address&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.QQ&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.EMAIL&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h2 id="el"><a href="#el" class="headerlink" title="el"></a>el</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li>专门从域中获取数据</li></ul><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><ul><li><p>从指定域中获取</p><ul><li>了解</li></ul></li><li><p>从最小域开始查找，若匹配上则停止</p><ul><li>${键名}</li></ul></li></ul><h3 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h3><ul><li><p>字符串</p></li><li><p>实体对象</p><ul><li><p>${键名.属性名}</p><ul><li><p>属性：setter/getter方法截取后的产物</p><ul><li>一般情况下域成员变量命名一致</li></ul></li></ul></li></ul></li><li><p>list集合</p><ul><li>${键名[索引]}</li></ul></li><li><p>map集合</p><ul><li>${键名.key}</li><li>${键名[“key”]}</li></ul></li></ul><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><ul><li><p>非空判断</p><ul><li><p>${not empty 键名}</p><ul><li>字符串、对象、集合（非空和长度）</li></ul></li></ul></li></ul><h3 id="隐式对象"><a href="#隐式对象" class="headerlink" title="隐式对象"></a>隐式对象</h3><ul><li><p>有11个隐式对象</p><ul><li><p>${pageContext.request.contextPath}</p><ul><li>动态获取项目名（虚拟路径）</li></ul></li></ul></li></ul><h2 id="jstl"><a href="#jstl" class="headerlink" title="jstl"></a>jstl</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><ul><li>apache提供的jsp标准标签库</li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul><li><p>if标签</p><ul><li><p>&lt;c:if test=”boolean值”&gt;</c:if></p><ul><li>为真，显示标签体的内容</li><li>为假，不显示内容</li><li>通常与el表达式结合使用</li><li>没有else功能，需要通过条件取反模拟</li></ul></li></ul></li><li><p>forEach标签</p><ul><li><p>1）普通for</p><ul><li>begin 起始值</li><li>end  结束值</li><li>step  步长</li><li>var  临时变量</li></ul></li><li><p>2）增强for</p><ul><li><p>items  被遍历的集合</p></li><li><p>var  临时变量</p></li><li><p>varStatus  遍历状态</p><ul><li>index 索引</li><li>count  计数器</li></ul></li></ul></li></ul></li><li><p>choose标签</p><ul><li>相当于switch语句</li></ul></li></ul><h2 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h2><h3 id="在mvc设计模式基础之上，进行了细化"><a href="#在mvc设计模式基础之上，进行了细化" class="headerlink" title="在mvc设计模式基础之上，进行了细化"></a>在mvc设计模式基础之上，进行了细化</h3><h3 id="在程序的设计过程中，分层三块"><a href="#在程序的设计过程中，分层三块" class="headerlink" title="在程序的设计过程中，分层三块"></a>在程序的设计过程中，分层三块</h3><ul><li><p>表示层</p><ul><li><p>web层</p><ul><li>与浏览器交互</li></ul></li></ul></li><li><p>业务层</p><ul><li><p>service层</p><ul><li>处理业务逻辑</li></ul></li></ul></li><li><p>持久层</p><ul><li><p>dao层</p><ul><li>与数据库交互</li></ul></li></ul></li></ul><h2 id="大作业：用户列表查询"><a href="#大作业：用户列表查询" class="headerlink" title="大作业：用户列表查询"></a>大作业：用户列表查询</h2><h3 id="使用三层架构和MVC模式开发代码，完成用户显示列表功能"><a href="#使用三层架构和MVC模式开发代码，完成用户显示列表功能" class="headerlink" title="使用三层架构和MVC模式开发代码，完成用户显示列表功能"></a>使用三层架构和MVC模式开发代码，完成用户显示列表功能</h3>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;EL表达式&lt;/li&gt;
&lt;li&gt;JSTL标签库&lt;/li&gt;
&lt;li&gt;三层架构
    
    </summary>
    
    
  </entry>
  
</feed>
